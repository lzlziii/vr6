using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Linq;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using System.Threading;
using AK.Wwise;
using Ara;
using Cinemachine;
using CurvedUI;
using Deform;
using DeltaDNA.Ads;
using DeltaDNA.Android;
using Ikimasho.Game.Gesture;
using Ikimasho.Game.Shop;
using Il2CppDummyDll;
using MEC;
using Malimbe.PropertySerializationAttribute;
using Malimbe.XmlDocumentationAttribute;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Samples.Boids;
using ScriptableObjectArchitecture;
using TMPro;
using Unity.Collections;
using Unity.Entities;
using Unity.Jobs;
using Unity.Mathematics;
using Unity.Rendering;
using Unity.Transforms;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.AddressableAssets.ResourceLocators;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.PostProcessing;
using UnityEngine.ResourceManagement.AsyncOperations;
using UnityEngine.ResourceManagement.ResourceLocations;
using UnityEngine.Scripting;
using UnityEngine.Timeline;
using UnityEngine.UI;
using UnityEngine.VFX;
using UnityEngine.Video;
using UnityToolbag;
using VRTK.Prefabs.CameraRig.UnityXRCameraRig.Input;
using Zinnia.Action;
using Zinnia.Haptics;
using Zinnia.Pointer;
using Zinnia.Tracking.Velocity;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[ExecuteInEditMode]
public class MirrorReflection : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_DisablePixelLights;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_TextureSize;

	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ClipPlaneOffset;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask m_ReflectLayers;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Hashtable m_ReflectionCameras;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTexture m_ReflectionTexture;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int m_OldReflectionTextureSize;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool s_InsideRendering;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0x10C7228", Offset = "0x10C7228", VA = "0x10C7228")]
	public void OnWillRenderObject()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0x10C8504", Offset = "0x10C8504", VA = "0x10C8504")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000003")]
	[Address(RVA = "0x10C7DA0", Offset = "0x10C7DA0", VA = "0x10C7DA0")]
	private void UpdateCameraModes(Camera src, Camera dest)
	{
	}

	[Token(Token = "0x6000004")]
	[Address(RVA = "0x10C77CC", Offset = "0x10C77CC", VA = "0x10C77CC")]
	private void CreateMirrorObjects(Camera currentCamera, out Camera reflectionCamera)
	{
	}

	[Token(Token = "0x6000005")]
	[Address(RVA = "0x10C8834", Offset = "0x10C8834", VA = "0x10C8834")]
	private static float sgn(float a)
	{
		return default(float);
	}

	[Token(Token = "0x6000006")]
	[Address(RVA = "0x10C8320", Offset = "0x10C8320", VA = "0x10C8320")]
	private Vector4 CameraSpacePlane(Camera cam, Vector3 pos, Vector3 normal, float sideSign)
	{
		return default(Vector4);
	}

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x10C807C", Offset = "0x10C807C", VA = "0x10C807C")]
	private static void CalculateReflectionMatrix(ref Matrix4x4 reflectionMat, Vector4 plane)
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0x10C8854", Offset = "0x10C8854", VA = "0x10C8854")]
	public MirrorReflection()
	{
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB6B18", Offset = "0xCB6B18")]
public class BakeTrail : MonoBehaviour
{
	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AraTrail trail;

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xF653C8", Offset = "0xF653C8", VA = "0xF653C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xF65428", Offset = "0xF65428", VA = "0xF65428")]
	private void Update()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xF65464", Offset = "0xF65464", VA = "0xF65464")]
	private void Bake()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xF65618", Offset = "0xF65618", VA = "0xF65618")]
	public BakeTrail()
	{
	}
}
[Token(Token = "0x2000004")]
public class WobblePath : MonoBehaviour
{
	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float amplitude;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x600000E")]
	[Address(RVA = "0x1108C94", Offset = "0x1108C94", VA = "0x1108C94")]
	private void Update()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0x1108DE0", Offset = "0x1108DE0", VA = "0x1108DE0")]
	public WobblePath()
	{
	}
}
[Token(Token = "0x2000005")]
public class DestroyObject : MonoBehaviour
{
	[Token(Token = "0x6000010")]
	[Address(RVA = "0x116F740", Offset = "0x116F740", VA = "0x116F740")]
	public void DestroyOnEvent()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0x116F7BC", Offset = "0x116F7BC", VA = "0x116F7BC")]
	public DestroyObject()
	{
	}
}
[Token(Token = "0x2000006")]
public class SpringFollow : MonoBehaviour
{
	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCBFB8C", Offset = "0xCBFB8C")]
	public float smoothing;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 offset;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool LockedOn;

	[Token(Token = "0x6000012")]
	[Address(RVA = "0x1077BB8", Offset = "0x1077BB8", VA = "0x1077BB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0x1077CA4", Offset = "0x1077CA4", VA = "0x1077CA4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0x1077DDC", Offset = "0x1077DDC", VA = "0x1077DDC")]
	public SpringFollow()
	{
	}
}
[Token(Token = "0x2000007")]
public class TimelineSkyboxInjector : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_skybox;

	[Token(Token = "0x6000015")]
	[Address(RVA = "0x107FF70", Offset = "0x107FF70", VA = "0x107FF70")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0x1080038", Offset = "0x1080038", VA = "0x1080038")]
	public TimelineSkyboxInjector()
	{
	}
}
[Token(Token = "0x2000008")]
public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
{
	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float Sensitivity;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 oldMousePos;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool move;

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xF69834", Offset = "0xF69834", VA = "0xF69834")]
	private void Start()
	{
	}

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xF69860", Offset = "0xF69860", VA = "0xF69860")]
	public CUI_CameraRotationOnButtonHeld()
	{
	}
}
[Token(Token = "0x2000009")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x6000019")]
	[Address(RVA = "0xF69878", Offset = "0xF69878", VA = "0xF69878")]
	private void Start()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xF6987C", Offset = "0xF6987C", VA = "0xF6987C")]
	private void Update()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xF69AD0", Offset = "0xF69AD0", VA = "0xF69AD0")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x200000A")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xF69AD8", Offset = "0xF69AD8", VA = "0xF69AD8")]
	private void Start()
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xF69B9C", Offset = "0xF69B9C", VA = "0xF69B9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xF69CE8", Offset = "0xF69CE8", VA = "0xF69CE8")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x200000B")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x600001F")]
	[Address(RVA = "0xF69CF8", Offset = "0xF69CF8", VA = "0xF69CF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xF69DC4", Offset = "0xF69DC4", VA = "0xF69DC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xF69DC8", Offset = "0xF69DC8", VA = "0xF69DC8")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x200000C")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xF69DD0", Offset = "0xF69DD0", VA = "0xF69DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xF69DD4", Offset = "0xF69DD4", VA = "0xF69DD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xF69FBC", Offset = "0xF69FBC", VA = "0xF69FBC")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x200000D")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xF69FC4", Offset = "0xF69FC4", VA = "0xF69FC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xF6A03C", Offset = "0xF6A03C", VA = "0xF6A03C")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xF6A118", Offset = "0xF6A118", VA = "0xF6A118")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x200000E")]
public class SpawnGrid : CacheBehaviour
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public bool m_automaticSnap;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCBFBD4", Offset = "0xCBFBD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFBD4", Offset = "0xCBFBD4")]
	public Color m_colorOfDebugSphere;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float m_sizeOfDebugSphere;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCBFC24", Offset = "0xCBFC24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFC24", Offset = "0xCBFC24")]
	public bool m_is180;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	public bool m_useLeftSide;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD2")]
	public bool m_useRightSide;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int m_spawnCountLine;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int m_yLevelsCount;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public int m_faceWidth;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public int m_faceHeight;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public int m_distanceFromPoint;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCBFC74", Offset = "0xCBFC74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFC74", Offset = "0xCBFC74")]
	public bool m_handleTiming;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFCC4", Offset = "0xCBFCC4")]
	public float m_ratioFirstSnap;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public FloatVariable m_timeBetweenOpening;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public FloatVariable m_timeOpening;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCBFCFC", Offset = "0xCBFCFC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFCFC", Offset = "0xCBFCFC")]
	public float m_offsetCollider;

	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCBFD4C", Offset = "0xCBFD4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFD4C", Offset = "0xCBFD4C")]
	public Vector3IntGameEvent m_eventGivePosition;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public UnityEvent OnAskForEnemies;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public int m_lastActorSnapped;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private Vector3 _position;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private List<Vector3> _spawnPositions;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Dictionary<int, int> _indexUsed;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _beginTime;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _counter;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _currentTime;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool _started;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
	private bool _waiting;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _checkSpawnCountLine;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private int _checkFaceW;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private int _checkFaceH;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private int _checkDistance;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool _acceptSnap;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private BoxCollider _collider;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private List<List<Vector3>> m_spawnPointMatrix;

	[Token(Token = "0x17000001")]
	[HideInInspector]
	public bool AcceptSnap
	{
		[Token(Token = "0x6000028")]
		[Address(RVA = "0x10706E4", Offset = "0x10706E4", VA = "0x10706E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0x10706EC", Offset = "0x10706EC", VA = "0x10706EC")]
	public Vector3 GetRandomPosition(int instanceId = -1)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0x1070798", Offset = "0x1070798", VA = "0x1070798")]
	private Vector3 GetRandomPositionPrivate(int instanceId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0x10708C8", Offset = "0x10708C8", VA = "0x10708C8")]
	public void ClearGrid()
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0x1070920", Offset = "0x1070920", VA = "0x1070920")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0x107098C", Offset = "0x107098C", VA = "0x107098C")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0x10709DC", Offset = "0x10709DC", VA = "0x10709DC")]
	public void ChangeHandleTiming(bool value)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0x1070A20", Offset = "0x1070A20", VA = "0x1070A20")]
	public void OpenGrid()
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0x1070AE0", Offset = "0x1070AE0", VA = "0x1070AE0")]
	public void CloseGrid()
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0x1070B38", Offset = "0x1070B38", VA = "0x1070B38")]
	public Vector3 OnChangeSnapPosition(int instanceId)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000032")]
	[Address(RVA = "0x1070C10", Offset = "0x1070C10", VA = "0x1070C10")]
	public void OnRequestSnapPosition(int instanceId)
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0x1070CD8", Offset = "0x1070CD8", VA = "0x1070CD8")]
	public void RemoveIndex(int instanceId)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0x1070D84", Offset = "0x1070D84", VA = "0x1070D84")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0x1070DC8", Offset = "0x1070DC8", VA = "0x1070DC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0x1071430", Offset = "0x1071430", VA = "0x1071430")]
	private void Update()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0x10714E0", Offset = "0x10714E0", VA = "0x10714E0")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0x1070EEC", Offset = "0x1070EEC", VA = "0x1070EEC")]
	private void CalculateSpawnPositions(bool checkDifferences = true)
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0x10715AC", Offset = "0x10715AC", VA = "0x10715AC")]
	public Vector3 OnAssignPositions(int x, int y, int instanceID)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0x1071660", Offset = "0x1071660", VA = "0x1071660")]
	public SpawnGrid()
	{
	}
}
[Token(Token = "0x200000F")]
public class Totem_Base_Behaviour : AmmoBehaviour
{
	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[HideInInspector]
	public AmmoTotemData m_data;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFDBC", Offset = "0xCBFDBC")]
	public bool m_hasCharges;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFDF4", Offset = "0xCBFDF4")]
	public int m_chargesCount;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFE2C", Offset = "0xCBFE2C")]
	public bool m_hasTimeOfDeath;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFE64", Offset = "0xCBFE64")]
	public float m_timeBeforeDeath;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected bool _hasCharges;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected int _chargesCount;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected bool _hasTimeOfDeath;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	protected float _timeBeforeDeath;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0x1080040", Offset = "0x1080040", VA = "0x1080040")]
	public void LoseCharge()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0x10800E4", Offset = "0x10800E4", VA = "0x10800E4")]
	protected new void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0x1080108", Offset = "0x1080108", VA = "0x1080108")]
	protected void Update()
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0x10801C8", Offset = "0x10801C8", VA = "0x10801C8")]
	public Totem_Base_Behaviour()
	{
	}
}
[Token(Token = "0x2000010")]
public class Totem_Offensive_Behaviour : Totem_Base_Behaviour
{
	[Token(Token = "0x2000523")]
	public enum EType
	{
		[Token(Token = "0x40019C7")]
		PROJECTILE_ALONG_RAY,
		[Token(Token = "0x40019C8")]
		HOMING_TORPEDO
	}

	[Token(Token = "0x2000524")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEE98", Offset = "0xCBEE98")]
	private sealed class <HomingTorpedoLaunch>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40019CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40019CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Totem_Offensive_Behaviour <>4__this;

		[Token(Token = "0x1700031C")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001F9F")]
			[Address(RVA = "0x1080D44", Offset = "0x1080D44", VA = "0x1080D44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700031D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FA1")]
			[Address(RVA = "0x1080DAC", Offset = "0x1080DAC", VA = "0x1080DAC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F9C")]
		[Address(RVA = "0x108072C", Offset = "0x108072C", VA = "0x108072C")]
		[DebuggerHidden]
		public <HomingTorpedoLaunch>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001F9D")]
		[Address(RVA = "0x1080970", Offset = "0x1080970", VA = "0x1080970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001F9E")]
		[Address(RVA = "0x1080974", Offset = "0x1080974", VA = "0x1080974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA0")]
		[Address(RVA = "0x1080D4C", Offset = "0x1080D4C", VA = "0x1080D4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000525")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEEA8", Offset = "0xCBEEA8")]
	private sealed class <RayProjectileLaunch>d__8 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x40019CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x40019D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Totem_Offensive_Behaviour <>4__this;

		[Token(Token = "0x1700031E")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6001FA5")]
			[Address(RVA = "0x1081160", Offset = "0x1081160", VA = "0x1081160", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700031F")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FA7")]
			[Address(RVA = "0x10811C8", Offset = "0x10811C8", VA = "0x10811C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FA2")]
		[Address(RVA = "0x1080758", Offset = "0x1080758", VA = "0x1080758")]
		[DebuggerHidden]
		public <RayProjectileLaunch>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6001FA3")]
		[Address(RVA = "0x1080E10", Offset = "0x1080E10", VA = "0x1080E10", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FA4")]
		[Address(RVA = "0x1080E14", Offset = "0x1080E14", VA = "0x1080E14", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FA6")]
		[Address(RVA = "0x1081168", Offset = "0x1081168", VA = "0x1081168", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFE9C", Offset = "0xCBFE9C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCBFE9C", Offset = "0xCBFE9C")]
	public EType m_type;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject m_projectile;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFEEC", Offset = "0xCBFEEC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCBFEEC", Offset = "0xCBFEEC")]
	public float m_projectileSpeed;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFF3C", Offset = "0xCBFF3C")]
	public float m_frequency;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private List<Transform> _transforms;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private List<float> _timers;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0x10801D0", Offset = "0x10801D0", VA = "0x10801D0")]
	private bool IsPrefabValid(GameObject value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0x1080520", Offset = "0x1080520", VA = "0x1080520")]
	private new void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0x1080694", Offset = "0x1080694", VA = "0x1080694")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCCEBAC", Offset = "0xCCEBAC")]
	private IEnumerator<float> HomingTorpedoLaunch(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0x10805FC", Offset = "0x10805FC", VA = "0x10805FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCCEC10", Offset = "0xCCEC10")]
	private IEnumerator<float> RayProjectileLaunch(Transform target)
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0x1080784", Offset = "0x1080784", VA = "0x1080784")]
	protected void AddModifiers(GameObject proj, AmmoBehaviour projBehaviour, Ammo ammo)
	{
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0x1080968", Offset = "0x1080968", VA = "0x1080968")]
	public Totem_Offensive_Behaviour()
	{
	}
}
[Token(Token = "0x2000011")]
public class Totem_RegenFloatVariable_Behaviour : Totem_Base_Behaviour
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public UnityEvent OnRegen;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public float m_regenFrequency;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	public float m_regenAmount;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public FloatVariable m_varToRegen;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float _cumulativeTime;

	[Token(Token = "0x6000045")]
	[Address(RVA = "0x108122C", Offset = "0x108122C", VA = "0x108122C")]
	protected new void Start()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0x1081250", Offset = "0x1081250", VA = "0x1081250")]
	protected new void Update()
	{
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0x10812F0", Offset = "0x10812F0", VA = "0x10812F0")]
	public Totem_RegenFloatVariable_Behaviour()
	{
	}
}
[Token(Token = "0x2000012")]
public class UISlider : MonoBehaviour
{
	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject grabSpot;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform minSpot;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform maxSpot;

	[Token(Token = "0x6000048")]
	[Address(RVA = "0x10FF848", Offset = "0x10FF848", VA = "0x10FF848")]
	private void Start()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0x10FF84C", Offset = "0x10FF84C", VA = "0x10FF84C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0x10FF850", Offset = "0x10FF850", VA = "0x10FF850")]
	public UISlider()
	{
	}
}
[Token(Token = "0x2000013")]
public class DisableChildAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_time;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private int _increment;

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xF3257C", Offset = "0xF3257C", VA = "0xF3257C")]
	private void Update()
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xF326BC", Offset = "0xF326BC", VA = "0xF326BC")]
	public DisableChildAfterDelay()
	{
	}
}
[Token(Token = "0x2000014")]
public class HUDLerper : MonoBehaviour
{
	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_hud;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_headSet;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_headSetLerper;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask m_layerMask;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public LayerMask m_layerMaskDeadZoneInternal;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_lerpSpeed;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool _lerping;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform _hudTransform;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform _headsetTransform;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xF3ED6C", Offset = "0xF3ED6C", VA = "0xF3ED6C")]
	public void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xF3EDCC", Offset = "0xF3EDCC", VA = "0xF3EDCC")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xF3F064", Offset = "0xF3F064", VA = "0xF3F064")]
	public HUDLerper()
	{
	}
}
[Token(Token = "0x2000015")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCB6B7C", Offset = "0xCB6B7C")]
public class FastList<T>
{
	[Token(Token = "0x2000526")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x2000527")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEEB8", Offset = "0xCBEEB8")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x40019D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x40019D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x40019D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x17000320")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x6001FAF")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000321")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FB1")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FAC")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x6001FAD")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FAE")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FB0")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x17000002")]
	public int Count
	{
		[Token(Token = "0x6000052")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000053")]
		set
		{
		}
	}

	[Token(Token = "0x17000003")]
	public T Item
	{
		[Token(Token = "0x6000054")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6000055")]
		set
		{
		}
	}

	[Token(Token = "0x6000050")]
	public FastList()
	{
	}

	[Token(Token = "0x6000051")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x6000056")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x6000057")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x6000058")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x6000059")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x600005A")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600005B")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x600005C")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600005D")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x600005E")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x600005F")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x6000060")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x6000061")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x6000062")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000063")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x6000064")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCCEC74", Offset = "0xCCEC74")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x6000065")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x6000066")]
	private void Allocate()
	{
	}

	[Token(Token = "0x6000067")]
	private void Trim()
	{
	}

	[Token(Token = "0x6000068")]
	public void Clear()
	{
	}

	[Token(Token = "0x6000069")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000016")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xFBB6D0", Offset = "0xFBB6D0", VA = "0xFBB6D0")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x2000017")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xFBB69C", Offset = "0xFBB69C", VA = "0xFBB69C")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x2000018")]
public class OvrAvatarTestDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 headPos;

	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion headRot;

	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600006C")]
	[Address(RVA = "0x14EC0F4", Offset = "0x14EC0F4", VA = "0x14EC0F4")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0x14EC260", Offset = "0x14EC260", VA = "0x14EC260")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0x14EC604", Offset = "0x14EC604", VA = "0x14EC604")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0x14EC7AC", Offset = "0x14EC7AC", VA = "0x14EC7AC", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0x14EC7D8", Offset = "0x14EC7D8", VA = "0x14EC7D8")]
	public OvrAvatarTestDriver()
	{
	}
}
[Token(Token = "0x2000019")]
public class PoseEditHelper : MonoBehaviour
{
	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform poseRoot;

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xFED614", Offset = "0xFED614", VA = "0xFED614")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xFED6A0", Offset = "0xFED6A0", VA = "0xFED6A0")]
	private void DrawJoints(Transform joint)
	{
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xFED80C", Offset = "0xFED80C", VA = "0xFED80C")]
	public PoseEditHelper()
	{
	}
}
[Token(Token = "0x200001A")]
public class GazeTargetSpawner : MonoBehaviour
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject GazeTargetPrefab;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int NumberOfDummyTargets;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int RadiusMultiplier;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool isVisible;

	[Token(Token = "0x17000004")]
	public bool IsVisible
	{
		[Token(Token = "0x6000074")]
		[Address(RVA = "0xF3CEA0", Offset = "0xF3CEA0", VA = "0xF3CEA0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000075")]
		[Address(RVA = "0xF3CEA8", Offset = "0xF3CEA8", VA = "0xF3CEA8")]
		set
		{
		}
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xF3CFD0", Offset = "0xF3CFD0", VA = "0xF3CFD0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xF3D1EC", Offset = "0xF3D1EC", VA = "0xF3D1EC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xF3D1F4", Offset = "0xF3D1F4", VA = "0xF3D1F4")]
	public GazeTargetSpawner()
	{
	}
}
[Token(Token = "0x200001B")]
public class RemoteLoopbackManager : MonoBehaviour
{
	[Token(Token = "0x2000528")]
	private class PacketLatencyPair
	{
		[Token(Token = "0x40019D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte[] PacketData;

		[Token(Token = "0x40019D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float FakeLatency;

		[Token(Token = "0x6001FB2")]
		[Address(RVA = "0xFF84E8", Offset = "0xFF84E8", VA = "0xFF84E8")]
		public PacketLatencyPair()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000529")]
	public class SimulatedLatencySettings
	{
		[Token(Token = "0x40019D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCDFB0", Offset = "0xCCDFB0")]
		public float FakeLatencyMax;

		[Token(Token = "0x40019D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCDFC8", Offset = "0xCCDFC8")]
		public float FakeLatencyMin;

		[Token(Token = "0x40019D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCDFE0", Offset = "0xCCDFE0")]
		public float LatencyWeight;

		[Token(Token = "0x40019DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCDFF8", Offset = "0xCCDFF8")]
		public int MaxSamples;

		[Token(Token = "0x40019DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal float AverageWindow;

		[Token(Token = "0x40019DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		internal float LatencySum;

		[Token(Token = "0x40019DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal LinkedList<float> LatencyValues;

		[Token(Token = "0x6001FB3")]
		[Address(RVA = "0xFF84F0", Offset = "0xFF84F0", VA = "0xFF84F0")]
		public float NextValue()
		{
			return default(float);
		}

		[Token(Token = "0x6001FB4")]
		[Address(RVA = "0xFF86A0", Offset = "0xFF86A0", VA = "0xFF86A0")]
		public SimulatedLatencySettings()
		{
		}
	}

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OvrAvatar LocalAvatar;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar LoopbackAvatar;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimulatedLatencySettings LatencySettings;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int PacketSequence;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LinkedList<PacketLatencyPair> packetQueue;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xFF7B48", Offset = "0xFF7B48", VA = "0xFF7B48")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xFF7C80", Offset = "0xFF7C80", VA = "0xFF7C80")]
	private void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xFF8000", Offset = "0xFF8000", VA = "0xFF8000")]
	private void Update()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xFF7F58", Offset = "0xFF7F58", VA = "0xFF7F58")]
	private void SendPacketData(byte[] data)
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xFF825C", Offset = "0xFF825C", VA = "0xFF825C")]
	private void ReceivePacketData(byte[] data)
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xFF85FC", Offset = "0xFF85FC", VA = "0xFF85FC")]
	public RemoteLoopbackManager()
	{
	}
}
[Token(Token = "0x200001C")]
public class P2PManager
{
	[Token(Token = "0x200052A")]
	private enum MessageType : byte
	{
		[Token(Token = "0x40019DF")]
		Update = 1
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0x14ED930", Offset = "0x14ED930", VA = "0x14ED930")]
	public P2PManager()
	{
	}

	[Token(Token = "0x6000080")]
	[Address(RVA = "0x14ED9F0", Offset = "0x14ED9F0", VA = "0x14ED9F0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0x14EDAD4", Offset = "0x14EDAD4", VA = "0x14EDAD4")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0x14EDB58", Offset = "0x14EDB58", VA = "0x14EDB58")]
	private void PeerConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0x14EDCB4", Offset = "0x14EDCB4", VA = "0x14EDCB4")]
	private void ConnectionStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0x14EDF9C", Offset = "0x14EDF9C", VA = "0x14EDF9C")]
	public void SendAvatarUpdate(ulong userID, Transform rootTransform, uint sequence, byte[] avatarPacket)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0x14EE390", Offset = "0x14EE390", VA = "0x14EE390")]
	public void GetRemotePackets()
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0x14EE634", Offset = "0x14EE634", VA = "0x14EE634")]
	public void processAvatarPacket(RemotePlayer remote, ref byte[] packet, ref int offset)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0x14EE160", Offset = "0x14EE160", VA = "0x14EE160")]
	private void PackByte(byte b, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0x14EE564", Offset = "0x14EE564", VA = "0x14EE564")]
	private byte ReadByte(byte[] buf, ref int offset)
	{
		return default(byte);
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0x14EE248", Offset = "0x14EE248", VA = "0x14EE248")]
	private void PackFloat(float f, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0x14EE84C", Offset = "0x14EE84C", VA = "0x14EE84C")]
	private float ReadFloat(byte[] buf, ref int offset)
	{
		return default(float);
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0x14EE1A8", Offset = "0x14EE1A8", VA = "0x14EE1A8")]
	private void PackULong(ulong u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0x14EE5A8", Offset = "0x14EE5A8", VA = "0x14EE5A8")]
	private ulong ReadULong(byte[] buf, ref int offset)
	{
		return default(ulong);
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0x14EE2F0", Offset = "0x14EE2F0", VA = "0x14EE2F0")]
	private void PackUInt32(uint u, byte[] buf, ref int offset)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0x14EE8D8", Offset = "0x14EE8D8", VA = "0x14EE8D8")]
	private uint ReadUInt32(byte[] buf, ref int offset)
	{
		return default(uint);
	}
}
[Token(Token = "0x200001D")]
public class PlayerController : SocialPlatformManager
{
	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Camera spyCamera;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject cameraRig;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool showUI;

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xFECEFC", Offset = "0xFECEFC", VA = "0xFECEFC", Slot = "5")]
	public override void Awake()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xFECF40", Offset = "0xFECF40", VA = "0xFECF40", Slot = "6")]
	public override void Start()
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xFECF78", Offset = "0xFECF78", VA = "0xFECF78", Slot = "4")]
	public override void Update()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xFECFA0", Offset = "0xFECFA0", VA = "0xFECFA0")]
	private void checkInput()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xFED140", Offset = "0xFED140", VA = "0xFED140")]
	private void ToggleCamera()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xFED1C0", Offset = "0xFED1C0", VA = "0xFED1C0")]
	private void ToggleUI()
	{
	}

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xFED214", Offset = "0xFED214", VA = "0xFED214")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200001E")]
public class RemotePlayer
{
	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong remoteUserID;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool stillInRoom;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PeerConnectionState p2pConnectionState;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PeerConnectionState voipConnectionState;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar RemoteAvatar;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 receivedRootPosition;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 receivedRootPositionPrior;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Quaternion receivedRootRotation;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion receivedRootRotationPrior;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public VoipAudioSourceHiLevel voipSource;

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xFF8734", Offset = "0xFF8734", VA = "0xFF8734")]
	public RemotePlayer()
	{
	}
}
[Token(Token = "0x200001F")]
public class RoomManager
{
	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong roomID;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong invitedRoomID;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool amIServer;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool startupDone;

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xFF9BDC", Offset = "0xFF9BDC", VA = "0xFF9BDC")]
	public RoomManager()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xFF9CA8", Offset = "0xFF9CA8", VA = "0xFF9CA8")]
	private void AcceptingInviteCallback(Message<string> msg)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xFF9E08", Offset = "0xFF9E08", VA = "0xFF9E08")]
	public bool CheckForInvite()
	{
		return default(bool);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xFF9F18", Offset = "0xFF9F18", VA = "0xFF9F18")]
	public void CreateRoom()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xFF9FCC", Offset = "0xFF9FCC", VA = "0xFF9FCC")]
	private void CreateAndJoinPrivateRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xFFA100", Offset = "0xFFA100", VA = "0xFFA100")]
	private void OnLaunchInviteWorkflowComplete(Message msg)
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xFF9E38", Offset = "0xFF9E38", VA = "0xFF9E38")]
	public void JoinExistingRoom(ulong roomID)
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xFFA18C", Offset = "0xFFA18C", VA = "0xFFA18C")]
	private void JoinRoomCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xFFA88C", Offset = "0xFFA88C", VA = "0xFFA88C")]
	private void RoomUpdateCallback(Message<Room> msg)
	{
	}

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xFFABB0", Offset = "0xFFABB0", VA = "0xFFABB0")]
	public void LeaveCurrentRoom()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xFFA480", Offset = "0xFFA480", VA = "0xFFA480")]
	private void ProcessRoomData(Message<Room> msg)
	{
	}
}
[Token(Token = "0x2000020")]
public class SocialPlatformManager : MonoBehaviour
{
	[Token(Token = "0x200052B")]
	public enum State
	{
		[Token(Token = "0x40019E1")]
		INITIALIZING,
		[Token(Token = "0x40019E2")]
		CHECKING_LAUNCH_STATE,
		[Token(Token = "0x40019E3")]
		CREATING_A_ROOM,
		[Token(Token = "0x40019E4")]
		WAITING_IN_A_ROOM,
		[Token(Token = "0x40019E5")]
		JOINING_A_ROOM,
		[Token(Token = "0x40019E6")]
		CONNECTED_IN_A_ROOM,
		[Token(Token = "0x40019E7")]
		LEAVING_A_ROOM,
		[Token(Token = "0x40019E8")]
		SHUTDOWN
	}

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3 START_ROTATION_ONE;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static readonly Vector3 START_POSITION_ONE;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 START_ROTATION_TWO;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private static readonly Vector3 START_POSITION_TWO;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly Vector3 START_ROTATION_THREE;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private static readonly Vector3 START_POSITION_THREE;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly Vector3 START_ROTATION_FOUR;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private static readonly Vector3 START_POSITION_FOUR;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Color BLACK;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static readonly Color WHITE;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static readonly Color CYAN;

	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static readonly Color BLUE;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static readonly Color GREEN;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float voiceCurrent;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private uint packetSequence;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OvrAvatar localAvatarPrefab;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatar remoteAvatarPrefab;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject helpPanel;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected MeshRenderer helpMesh;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Material riftMaterial;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material gearMaterial;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected OvrAvatar localAvatar;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	protected GameObject localTrackingSpace;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected GameObject localPlayerHead;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected Dictionary<ulong, RemotePlayer> remoteUsers;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject roomSphere;

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	protected MeshRenderer sphereMesh;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject roomFloor;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	protected MeshRenderer floorMesh;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	protected State currentState;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected static SocialPlatformManager s_instance;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	protected RoomManager roomManager;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	protected P2PManager p2pManager;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	protected VoipManager voipManager;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected ulong myID;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string myOculusID;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public static readonly float VOIP_SCALE;

	[Token(Token = "0x17000005")]
	public static State CurrentState
	{
		[Token(Token = "0x60000AE")]
		[Address(RVA = "0x106F2F8", Offset = "0x106F2F8", VA = "0x106F2F8")]
		get
		{
			return default(State);
		}
	}

	[Token(Token = "0x17000006")]
	public static ulong MyID
	{
		[Token(Token = "0x60000AF")]
		[Address(RVA = "0x106F36C", Offset = "0x106F36C", VA = "0x106F36C")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x17000007")]
	public static string MyOculusID
	{
		[Token(Token = "0x60000B0")]
		[Address(RVA = "0x106F444", Offset = "0x106F444", VA = "0x106F444")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0x106D440", Offset = "0x106D440", VA = "0x106D440", Slot = "4")]
	public virtual void Update()
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x106D7E8", Offset = "0x106D7E8", VA = "0x106D7E8", Slot = "5")]
	public virtual void Awake()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0x106DF60", Offset = "0x106DF60", VA = "0x106DF60")]
	private void InitCallback(Message<PlatformInitialize> msg)
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x106E228", Offset = "0x106E228", VA = "0x106E228", Slot = "6")]
	public virtual void Start()
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x106E22C", Offset = "0x106E22C", VA = "0x106E22C")]
	private void IsEntitledCallback(Message msg)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x106E320", Offset = "0x106E320", VA = "0x106E320")]
	private void GetLoggedInUserCallback(Message<User> msg)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x106EA68", Offset = "0x106EA68", VA = "0x106EA68")]
	private void GetLoggedInUserFriendsAndRoomsCallback(Message<UserAndRoomList> msg)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x106EF6C", Offset = "0x106EF6C", VA = "0x106EF6C")]
	public void OnLocalAvatarPacketRecorded(object sender, OvrAvatar.PacketEventArgs args)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x106F138", Offset = "0x106F138", VA = "0x106F138")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x106F288", Offset = "0x106F288", VA = "0x106F288")]
	public void AddUser(ulong userID, ref RemotePlayer remoteUser)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x106DB4C", Offset = "0x106DB4C", VA = "0x106DB4C")]
	public void LogOutputLine(string line)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x106E0BC", Offset = "0x106E0BC", VA = "0x106E0BC")]
	public static void TerminateWithError(Message msg)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x106DC00", Offset = "0x106DC00", VA = "0x106DC00")]
	public static void TransitionToState(State newState)
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x106F558", Offset = "0x106F558", VA = "0x106F558")]
	private static void SetSphereColorForState()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x106F6D8", Offset = "0x106F6D8", VA = "0x106F6D8")]
	public static void SetFloorColorForState(bool host)
	{
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x106F7C0", Offset = "0x106F7C0", VA = "0x106F7C0")]
	public static void MarkAllRemoteUsersAsNotInRoom()
	{
	}

	[Token(Token = "0x60000B5")]
	[Address(RVA = "0x106F8E4", Offset = "0x106F8E4", VA = "0x106F8E4")]
	public static void MarkRemoteUserInRoom(ulong userID)
	{
	}

	[Token(Token = "0x60000B6")]
	[Address(RVA = "0x106F9B4", Offset = "0x106F9B4", VA = "0x106F9B4")]
	public static void ForgetRemoteUsersNotInRoom()
	{
	}

	[Token(Token = "0x60000B7")]
	[Address(RVA = "0x106E16C", Offset = "0x106E16C", VA = "0x106E16C")]
	public static void LogOutput(string line)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0x106FDE0", Offset = "0x106FDE0", VA = "0x106FDE0")]
	public static bool IsUserInRoom(ulong userID)
	{
		return default(bool);
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0x106FE6C", Offset = "0x106FE6C", VA = "0x106FE6C")]
	public static void AddRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0x106FC04", Offset = "0x106FC04", VA = "0x106FC04")]
	public static void RemoveRemoteUser(ulong userID)
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0x107005C", Offset = "0x107005C", VA = "0x107005C")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0x106D3B8", Offset = "0x106D3B8", VA = "0x106D3B8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCCECD8", Offset = "0xCCECD8")]
	public static void MicFilter(short[] pcmData, UIntPtr pcmDataLength, int frequency, int numChannels)
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0x1070198", Offset = "0x1070198", VA = "0x1070198")]
	public static RemotePlayer GetRemoteUser(ulong userID)
	{
		return null;
	}

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0x1070260", Offset = "0x1070260", VA = "0x1070260")]
	public SocialPlatformManager()
	{
	}
}
[Token(Token = "0x2000021")]
public class VoipManager
{
	[Token(Token = "0x60000C0")]
	[Address(RVA = "0x1106FE0", Offset = "0x1106FE0", VA = "0x1106FE0")]
	public VoipManager()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0x11070A0", Offset = "0x11070A0", VA = "0x11070A0")]
	public void ConnectTo(ulong userID)
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0x1107184", Offset = "0x1107184", VA = "0x1107184")]
	public void Disconnect(ulong userID)
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0x1107208", Offset = "0x1107208", VA = "0x1107208")]
	private void VoipConnectRequestCallback(Message<NetworkingPeer> msg)
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0x1107364", Offset = "0x1107364", VA = "0x1107364")]
	private void VoipStateChangedCallback(Message<NetworkingPeer> msg)
	{
	}
}
[Token(Token = "0x2000022")]
public class GazeTarget : MonoBehaviour
{
	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarGazeTargetType Type;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ovrAvatarGazeTargets RuntimeTargetList;

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xF3CB1C", Offset = "0xF3CB1C", VA = "0xF3CB1C")]
	static GazeTarget()
	{
	}

	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xF3CB9C", Offset = "0xF3CB9C", VA = "0xF3CB9C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xF3CD18", Offset = "0xF3CD18", VA = "0xF3CD18")]
	private void Update()
	{
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xF3CD7C", Offset = "0xF3CD7C", VA = "0xF3CD7C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xF3CBD8", Offset = "0xF3CBD8", VA = "0xF3CBD8")]
	private void UpdateGazeTarget()
	{
	}

	[Token(Token = "0x60000CA")]
	[Address(RVA = "0xF3CE38", Offset = "0xF3CE38", VA = "0xF3CE38")]
	private ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xF3CE98", Offset = "0xF3CE98", VA = "0xF3CE98")]
	public GazeTarget()
	{
	}
}
[Serializable]
[Token(Token = "0x2000023")]
public class AvatarLayer
{
	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int layerIndex;

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xF653C0", Offset = "0xF653C0", VA = "0xF653C0")]
	public AvatarLayer()
	{
	}
}
[Serializable]
[Token(Token = "0x2000024")]
public class PacketRecordSettings
{
	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool RecordingFrames;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float UpdateRate;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	internal float AccumulatedTime;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0x14E03D4", Offset = "0x14E03D4", VA = "0x14E03D4")]
	public PacketRecordSettings()
	{
	}
}
[Token(Token = "0x2000025")]
public class OvrAvatar : MonoBehaviour
{
	[Token(Token = "0x200052C")]
	public class PacketEventArgs : EventArgs
	{
		[Token(Token = "0x40019E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly OvrAvatarPacket Packet;

		[Token(Token = "0x6001FB5")]
		[Address(RVA = "0x14DE0B4", Offset = "0x14DE0B4", VA = "0x14DE0B4")]
		public PacketEventArgs(OvrAvatarPacket packet)
		{
		}
	}

	[Token(Token = "0x200052D")]
	public enum HandType
	{
		[Token(Token = "0x40019EB")]
		Right,
		[Token(Token = "0x40019EC")]
		Left,
		[Token(Token = "0x40019ED")]
		Max
	}

	[Token(Token = "0x200052E")]
	public enum HandJoint
	{
		[Token(Token = "0x40019EF")]
		HandBase,
		[Token(Token = "0x40019F0")]
		IndexBase,
		[Token(Token = "0x40019F1")]
		IndexTip,
		[Token(Token = "0x40019F2")]
		ThumbBase,
		[Token(Token = "0x40019F3")]
		ThumbTip,
		[Token(Token = "0x40019F4")]
		Max
	}

	[Token(Token = "0x200052F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEEC8", Offset = "0xCBEEC8")]
	private sealed class <WaitForMouthAudioSource>d__137 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40019F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40019F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40019F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatar <>4__this;

		[Token(Token = "0x17000322")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FB9")]
			[Address(RVA = "0x14E0584", Offset = "0x14E0584", VA = "0x14E0584", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000323")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FBB")]
			[Address(RVA = "0x14E05EC", Offset = "0x14E05EC", VA = "0x14E05EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FB6")]
		[Address(RVA = "0x14DFF50", Offset = "0x14DFF50", VA = "0x14DFF50")]
		[DebuggerHidden]
		public <WaitForMouthAudioSource>d__137(int <>1__state)
		{
		}

		[Token(Token = "0x6001FB7")]
		[Address(RVA = "0x14E03E8", Offset = "0x14E03E8", VA = "0x14E03E8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FB8")]
		[Address(RVA = "0x14E03EC", Offset = "0x14E03EC", VA = "0x14E03EC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FBA")]
		[Address(RVA = "0x14E058C", Offset = "0x14E058C", VA = "0x14E058C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFF84", Offset = "0xCBFF84")]
	public IntPtr sdkAvatar;

	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string oculusUserID;

	[Token(Token = "0x40000B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OvrAvatarDriver Driver;

	[Token(Token = "0x40000B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFFBC", Offset = "0xCBFFBC")]
	public bool EnableBody;

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool EnableHands;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
	public bool EnableBase;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
	public bool EnableExpressive;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCBFFF4", Offset = "0xCBFFF4")]
	public bool RecordPackets;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool UseSDKPackets;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public PacketRecordSettings PacketSettings;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC002C", Offset = "0xCC002C")]
	public bool StartWithControllers;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AvatarLayer FirstPersonLayer;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AvatarLayer ThirdPersonLayer;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool ShowFirstPerson;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool ShowThirdPerson;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	internal ovrAvatarCapabilities Capabilities;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC0064", Offset = "0xCC0064")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0064", Offset = "0xCC0064")]
	[SerializeField]
	internal ovrAvatarAssetLevelOfDetail LevelOfDetail;

	[Token(Token = "0x40000BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC00D4", Offset = "0xCC00D4")]
	private bool CombineMeshes;

	[Token(Token = "0x40000C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC010C", Offset = "0xCC010C")]
	public bool UseTransparentRenderQueue;

	[Token(Token = "0x40000C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC0144", Offset = "0xCC0144")]
	public Shader Monochrome_SurfaceShader;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Shader Monochrome_SurfaceShader_SelfOccluding;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Shader Monochrome_SurfaceShader_PBS;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Shader Skinshaded_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Shader Skinshaded_VertFrag_SingleComponent;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Shader Skinshaded_VertFrag_CombinedMesh;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Shader Skinshaded_Expressive_SurfaceShader_SingleComponent;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public Shader Skinshaded_Expressive_VertFrag_SingleComponent;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Shader Skinshaded_Expressive_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Shader Loader_VertFrag_CombinedMesh;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Shader EyeLens;

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Shader ControllerShader;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC017C", Offset = "0xCC017C")]
	public bool CanOwnMicrophone;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC01B4", Offset = "0xCC01B4")]
	public bool EnableLaughter;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject MouthAnchor;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Transform LeftHandCustomPose;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform RightHandCustomPose;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HashSet<ulong> assetLoadingIds;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool assetsFinishedLoading;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private OvrAvatarMaterialManager materialManager;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool waitingForCombinedMesh;

	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool doneExpressiveGlobalInit;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private Vector4 clothingAlphaOffset;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ulong clothingAlphaTexture;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private OVRLipSyncMicInput micInput;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private OVRLipSyncContext lipsyncContext;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private OVRLipSync.Frame currentFrame;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float[] visemes;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private AudioSource audioSource;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private ONSPAudioSource spatializedSource;

	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private List<float[]> voiceUpdates;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ovrAvatarVisemes RuntimeVisemes;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Transform cachedLeftHandCustomPose;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Transform[] cachedCustomLeftHandJoints;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private ovrAvatarTransform[] cachedLeftHandTransforms;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private Transform cachedRightHandCustomPose;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private Transform[] cachedCustomRightHandJoints;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private ovrAvatarTransform[] cachedRightHandTransforms;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private bool showLeftController;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
	private bool showRightController;

	[Token(Token = "0x40000E9")]
	private const bool USE_MOBILE_TEXTURE_FORMAT = true;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly Vector3 MOUTH_HEAD_OFFSET;

	[Token(Token = "0x40000EB")]
	private const string MOUTH_HELPER_NAME = "MouthAnchor";

	[Token(Token = "0x40000EC")]
	private const int VISEME_COUNT = 16;

	[Token(Token = "0x40000ED")]
	private const float ACTION_UNIT_ONSET_SPEED = 30f;

	[Token(Token = "0x40000EE")]
	private const float ACTION_UNIT_FALLOFF_SPEED = 20f;

	[Token(Token = "0x40000EF")]
	private const float VISEME_LEVEL_MULTIPLIER = 1.5f;

	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	internal ulong oculusUserIDInternal;

	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	internal OvrAvatarBase Base;

	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	internal OvrAvatarTouchController ControllerLeft;

	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	internal OvrAvatarTouchController ControllerRight;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	internal OvrAvatarBody Body;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	internal OvrAvatarHand HandLeft;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	internal OvrAvatarHand HandRight;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	internal ovrAvatarLookAndFeelVersion LookAndFeelVersion;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	internal ovrAvatarLookAndFeelVersion FallbackLookAndFeelVersion;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private OvrAvatarPacket CurrentUnityPacket;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public EventHandler<PacketEventArgs> PacketRecorded;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static string[,] HandJoints;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static Vector3 MOUTH_POSITION_OFFSET;

	[Token(Token = "0x40000FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static string VOICE_PROPERTY;

	[Token(Token = "0x40000FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static string MOUTH_POSITION_PROPERTY;

	[Token(Token = "0x40000FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static string MOUTH_DIRECTION_PROPERTY;

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static string MOUTH_SCALE_PROPERTY;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static float MOUTH_SCALE_GLOBAL;

	[Token(Token = "0x4000102")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private static float MOUTH_MAX_GLOBAL;

	[Token(Token = "0x4000103")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static string NECK_JONT;

	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public float VoiceAmplitude;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	public bool EnableMouthVertexAnimation;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static ovrAvatarLights ovrLights;

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0x14D9934", Offset = "0x14D9934", VA = "0x14D9934")]
	static OvrAvatar()
	{
	}

	[Token(Token = "0x60000CF")]
	[Address(RVA = "0x14D9D4C", Offset = "0x14D9D4C", VA = "0x14D9D4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0x14D9DD8", Offset = "0x14D9DD8", VA = "0x14D9DD8")]
	public void AssetLoadedCallback(OvrAvatarAsset asset)
	{
	}

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0x14D9E44", Offset = "0x14D9E44", VA = "0x14D9E44")]
	public void CombinedMeshLoadedCallback(IntPtr assetPtr)
	{
	}

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0x14D9F6C", Offset = "0x14D9F6C", VA = "0x14D9F6C")]
	private OvrAvatarSkinnedMeshRenderComponent AddSkinnedMeshRenderComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender)
	{
		return null;
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0x14DA1C4", Offset = "0x14DA1C4", VA = "0x14DA1C4")]
	private OvrAvatarSkinnedMeshRenderPBSComponent AddSkinnedMeshRenderPBSComponent(GameObject gameObject, ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS)
	{
		return null;
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0x14DA3E8", Offset = "0x14DA3E8", VA = "0x14DA3E8")]
	private OvrAvatarSkinnedMeshPBSV2RenderComponent AddSkinnedMeshRenderPBSV2Component(IntPtr renderPart, GameObject go, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRenderPBSV2, bool isBodyPartZero, bool isControllerModel)
	{
		return null;
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0x14DA9D8", Offset = "0x14DA9D8", VA = "0x14DA9D8")]
	public static IntPtr GetRenderPart(ovrAvatarComponent component, uint renderPartIndex)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0x14DAAA0", Offset = "0x14DAAA0", VA = "0x14DAAA0")]
	private static string GetRenderPartName(ovrAvatarComponent component, uint renderPartIndex)
	{
		return null;
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0x14DAB24", Offset = "0x14DAB24", VA = "0x14DAB24")]
	internal static void ConvertTransform(float[] transform, ref ovrAvatarTransform target)
	{
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0x14DAC0C", Offset = "0x14DAC0C", VA = "0x14DAC0C")]
	internal static void ConvertTransform(ovrAvatarTransform transform, Transform target)
	{
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0x14DAC98", Offset = "0x14DAC98", VA = "0x14DAC98")]
	public static ovrAvatarTransform CreateOvrAvatarTransform(Vector3 position, Quaternion orientation)
	{
		return default(ovrAvatarTransform);
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0x14DADB4", Offset = "0x14DADB4", VA = "0x14DADB4")]
	private static ovrAvatarGazeTarget CreateOvrGazeTarget(uint targetId, Vector3 targetPosition, ovrAvatarGazeTargetType targetType)
	{
		return default(ovrAvatarGazeTarget);
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0x14DAE14", Offset = "0x14DAE14", VA = "0x14DAE14")]
	private void BuildRenderComponents()
	{
	}

	[Token(Token = "0x60000DC")]
	private void AddAvatarComponent<T>(ref T root, ovrAvatarComponent nativeComponent) where T : OvrAvatarComponent
	{
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0x14DB298", Offset = "0x14DB298", VA = "0x14DB298")]
	private void UpdateCustomPoses()
	{
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0x14DB5F8", Offset = "0x14DB5F8", VA = "0x14DB5F8")]
	private static bool UpdatePoseRoot(Transform poseRoot, ref Transform cachedPoseRoot, ref Transform[] cachedPoseJoints, ref ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0x14DB7A0", Offset = "0x14DB7A0", VA = "0x14DB7A0")]
	private static bool UpdateTransforms(Transform[] joints, ovrAvatarTransform[] transforms)
	{
		return default(bool);
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0x14DBA68", Offset = "0x14DBA68", VA = "0x14DBA68")]
	private static void OrderJoints(Transform transform, List<Transform> joints)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0x14DBB54", Offset = "0x14DBB54", VA = "0x14DBB54")]
	private void AvatarSpecificationCallback(IntPtr avatarSpecification)
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0x14DC574", Offset = "0x14DC574", VA = "0x14DC574")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0x14DCA00", Offset = "0x14DCA00", VA = "0x14DCA00")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E4")]
	[Address(RVA = "0x14DD488", Offset = "0x14DD488", VA = "0x14DD488")]
	public static ovrAvatarHandInputState CreateInputState(ovrAvatarTransform transform, OvrAvatarDriver.ControllerPose pose)
	{
		return default(ovrAvatarHandInputState);
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0x14DD4DC", Offset = "0x14DD4DC", VA = "0x14DD4DC")]
	public void ShowControllers(bool show)
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0x14DBDB8", Offset = "0x14DBDB8", VA = "0x14DBDB8")]
	public void ShowLeftController(bool show)
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0x14DBE54", Offset = "0x14DBE54", VA = "0x14DBE54")]
	public void ShowRightController(bool show)
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0x14DD50C", Offset = "0x14DD50C", VA = "0x14DD50C")]
	public void UpdateVoiceVisualization(float[] voiceSamples)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0x14DCD68", Offset = "0x14DCD68", VA = "0x14DCD68")]
	private void RecordFrame()
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0x14DD750", Offset = "0x14DD750", VA = "0x14DD750")]
	private void RecordUnityFrame()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0x14DD574", Offset = "0x14DD574", VA = "0x14DD574")]
	private void RecordSDKFrame()
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0x14DE220", Offset = "0x14DE220", VA = "0x14DE220")]
	private void AddRenderParts(OvrAvatarComponent ovrComponent, ovrAvatarComponent component, Transform parent)
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0x14DE624", Offset = "0x14DE624", VA = "0x14DE624")]
	public void RefreshBodyParts()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0x14DE9AC", Offset = "0x14DE9AC", VA = "0x14DE9AC")]
	public ovrAvatarBodyComponent? GetBodyComponent()
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0x14DEAEC", Offset = "0x14DEAEC", VA = "0x14DEAEC")]
	public Transform GetHandTransform(HandType hand, HandJoint joint)
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0x14DECA4", Offset = "0x14DECA4", VA = "0x14DECA4")]
	public void GetPointingDirection(HandType hand, ref Vector3 forward, ref Vector3 up)
	{
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0x14DCF84", Offset = "0x14DCF84", VA = "0x14DCF84")]
	private void UpdateVoiceBehavior()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0x14DED7C", Offset = "0x14DED7C", VA = "0x14DED7C")]
	private bool IsValidMic()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0x14DCD78", Offset = "0x14DCD78", VA = "0x14DCD78")]
	private void InitPostLoad()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x14DEE70", Offset = "0x14DEE70", VA = "0x14DEE70")]
	private static void ExpressiveGlobalInit()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x14DF478", Offset = "0x14DF478", VA = "0x14DF478")]
	private static void InitializeLights()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x14DF938", Offset = "0x14DF938", VA = "0x14DF938")]
	private static ovrAvatarLight CreateLightDirectional(uint id, Vector3 direction, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x14DF9B0", Offset = "0x14DF9B0", VA = "0x14DF9B0")]
	private static ovrAvatarLight CreateLightPoint(uint id, Vector3 position, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x14DFA2C", Offset = "0x14DFA2C", VA = "0x14DFA2C")]
	private static ovrAvatarLight CreateLightSpot(uint id, Vector3 position, Vector3 direction, float spotAngleDeg, float range, float intensity, ref ovrAvatarLight light)
	{
		return default(ovrAvatarLight);
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x14DD31C", Offset = "0x14DD31C", VA = "0x14DD31C")]
	private void UpdateExpressive()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x14DEF38", Offset = "0x14DEF38", VA = "0x14DEF38")]
	private void ConfigureHelpers()
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x14DFED4", Offset = "0x14DFED4", VA = "0x14DFED4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCCED3C", Offset = "0xCCED3C")]
	private IEnumerator WaitForMouthAudioSource()
	{
		return null;
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x14DFF7C", Offset = "0x14DFF7C", VA = "0x14DFF7C")]
	public void DestroyHelperObjects()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x14DFD78", Offset = "0x14DFD78", VA = "0x14DFD78")]
	public GameObject CreateHelperObject(Transform parent, Vector3 localPositionOffset, string helperName, string helperTag = "")
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0x14E0044", Offset = "0x14E0044", VA = "0x14E0044")]
	public void UpdateVoiceData(short[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x14E0130", Offset = "0x14E0130", VA = "0x14E0130")]
	public void UpdateVoiceData(float[] pcmData, int numChannels)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x14DFAFC", Offset = "0x14DFAFC", VA = "0x14DFAFC")]
	private void UpdateFacewave()
	{
	}

	[Token(Token = "0x6000101")]
	[Address(RVA = "0x14E021C", Offset = "0x14E021C", VA = "0x14E021C")]
	public OvrAvatar()
	{
	}
}
[Token(Token = "0x2000026")]
public class OvrAvatarAsset
{
	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong assetID;

	[Token(Token = "0x6000102")]
	[Address(RVA = "0x14E05F4", Offset = "0x14E05F4", VA = "0x14E05F4")]
	public OvrAvatarAsset()
	{
	}
}
[Token(Token = "0x2000027")]
public class OvrAvatarAssetMesh : OvrAvatarAsset
{
	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh mesh;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAvatarSkinnedMeshPose skinnedBindPose;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string[] jointNames;

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x14E06B0", Offset = "0x14E06B0", VA = "0x14E06B0")]
	public OvrAvatarAssetMesh(ulong _assetId, IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0x14E19B8", Offset = "0x14E19B8", VA = "0x14E19B8")]
	private void LoadSubmeshes(IntPtr asset, IntPtr indexBufferPtr, ulong indexCount)
	{
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0x14E155C", Offset = "0x14E155C", VA = "0x14E155C")]
	private void LoadBlendShapes(IntPtr asset, long vertexCount)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0x14E12F4", Offset = "0x14E12F4", VA = "0x14E12F4")]
	private void SetSkinnedBindPose(IntPtr asset, ovrAvatarAssetType meshType)
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0x14E13D0", Offset = "0x14E13D0", VA = "0x14E13D0")]
	private void GetVertexAndIndexData(IntPtr asset, ovrAvatarAssetType meshType, out long vertexCount, out IntPtr vertexBuffer, out uint indexCount, out IntPtr indexBuffer)
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0x14E1C1C", Offset = "0x14E1C1C", VA = "0x14E1C1C")]
	public SkinnedMeshRenderer CreateSkinnedMeshRendererOnObject(GameObject target)
	{
		return null;
	}
}
[Token(Token = "0x2000028")]
public class OvrAvatarAssetTexture : OvrAvatarAsset
{
	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D texture;

	[Token(Token = "0x400010C")]
	private const int ASTCHeaderSize = 16;

	[Token(Token = "0x6000109")]
	[Address(RVA = "0x14E21DC", Offset = "0x14E21DC", VA = "0x14E21DC")]
	public OvrAvatarAssetTexture(ulong _assetId, IntPtr asset)
	{
	}
}
[Token(Token = "0x2000029")]
public class OvrAvatarBase : OvrAvatarComponent
{
	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ovrAvatarBaseComponent component;

	[Token(Token = "0x600010A")]
	[Address(RVA = "0x14E2454", Offset = "0x14E2454", VA = "0x14E2454")]
	private void Update()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0x14E2858", Offset = "0x14E2858", VA = "0x14E2858")]
	public OvrAvatarBase()
	{
	}
}
[Token(Token = "0x200002A")]
public class OvrAvatarBody : OvrAvatarComponent
{
	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ovrAvatarBodyComponent component;

	[Token(Token = "0x600010C")]
	[Address(RVA = "0x14DE850", Offset = "0x14DE850", VA = "0x14DE850")]
	public ovrAvatarComponent? GetNativeAvatarComponent()
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0x14E296C", Offset = "0x14E296C", VA = "0x14E296C")]
	private void Update()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0x14E2A94", Offset = "0x14E2A94", VA = "0x14E2A94")]
	public OvrAvatarBody()
	{
	}
}
[Token(Token = "0x200002B")]
public class OvrAvatarComponent : MonoBehaviour
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly string[] LayerKeywords;

	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly string[] LayerSampleModeParameters;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static readonly string[] LayerBlendModeParameters;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly string[] LayerMaskTypeParameters;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static readonly string[] LayerColorParameters;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static readonly string[] LayerSurfaceParameters;

	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static readonly string[] LayerSampleParametersParameters;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static readonly string[] LayerMaskParametersParameters;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static readonly string[] LayerMaskAxisParameters;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Material, ovrAvatarMaterialState> materialStates;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<OvrAvatarRenderComponent> RenderParts;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected OvrAvatar owner;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ovrAvatarComponent nativeAvatarComponent;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0x14E2AF8", Offset = "0x14E2AF8", VA = "0x14E2AF8")]
	public void SetOvrAvatarOwner(OvrAvatar ovrAvatarOwner)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0x14E257C", Offset = "0x14E257C", VA = "0x14E257C")]
	public void UpdateAvatar(IntPtr nativeComponent)
	{
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0x14E30DC", Offset = "0x14E30DC", VA = "0x14E30DC")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0x14E313C", Offset = "0x14E313C", VA = "0x14E313C")]
	public void UpdateAvatarMaterial(Material mat, ovrAvatarMaterialState matState)
	{
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0x14E3920", Offset = "0x14E3920", VA = "0x14E3920")]
	public static Texture2D GetLoadedTexture(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0x14E28BC", Offset = "0x14E28BC", VA = "0x14E28BC")]
	public OvrAvatarComponent()
	{
	}
}
[Token(Token = "0x200002C")]
public abstract class OvrAvatarDriver : MonoBehaviour
{
	[Token(Token = "0x2000530")]
	public enum PacketMode
	{
		[Token(Token = "0x40019F9")]
		SDK,
		[Token(Token = "0x40019FA")]
		Unity
	}

	[Token(Token = "0x2000531")]
	public struct ControllerPose
	{
		[Token(Token = "0x40019FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarButton buttons;

		[Token(Token = "0x40019FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ovrAvatarTouch touches;

		[Token(Token = "0x40019FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 joystickPosition;

		[Token(Token = "0x40019FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float indexTrigger;

		[Token(Token = "0x40019FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float handTrigger;

		[Token(Token = "0x4001A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isActive;

		[Token(Token = "0x6001FBC")]
		[Address(RVA = "0x14E4F94", Offset = "0x14E4F94", VA = "0x14E4F94")]
		public static ControllerPose Interpolate(ControllerPose a, ControllerPose b, float t)
		{
			return default(ControllerPose);
		}
	}

	[Token(Token = "0x2000532")]
	public struct PoseFrame
	{
		[Token(Token = "0x4001A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 headPosition;

		[Token(Token = "0x4001A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Quaternion headRotation;

		[Token(Token = "0x4001A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 handLeftPosition;

		[Token(Token = "0x4001A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion handLeftRotation;

		[Token(Token = "0x4001A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 handRightPosition;

		[Token(Token = "0x4001A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Quaternion handRightRotation;

		[Token(Token = "0x4001A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float voiceAmplitude;

		[Token(Token = "0x4001A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public ControllerPose controllerLeftPose;

		[Token(Token = "0x4001A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ControllerPose controllerRightPose;

		[Token(Token = "0x6001FBD")]
		[Address(RVA = "0x14DDCFC", Offset = "0x14DDCFC", VA = "0x14DDCFC")]
		public static PoseFrame Interpolate(PoseFrame a, PoseFrame b, float t)
		{
			return default(PoseFrame);
		}
	}

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PacketMode Mode;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	protected PoseFrame CurrentPose;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private ovrAvatarControllerType ControllerType;

	[Token(Token = "0x6000116")]
	[Address(RVA = "0x14E4EE0", Offset = "0x14E4EE0", VA = "0x14E4EE0")]
	public PoseFrame GetCurrentPose()
	{
		return default(PoseFrame);
	}

	[Token(Token = "0x6000117")]
	public abstract void UpdateTransforms(IntPtr sdkAvatar);

	[Token(Token = "0x6000118")]
	[Address(RVA = "0x14E4EF0", Offset = "0x14E4EF0", VA = "0x14E4EF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0x14DBEF0", Offset = "0x14DBEF0", VA = "0x14DBEF0")]
	public void UpdateTransformsFromPose(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0x14E4F7C", Offset = "0x14E4F7C", VA = "0x14E4F7C")]
	public static bool GetIsTrackedRemote()
	{
		return default(bool);
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0x14E4F84", Offset = "0x14E4F84", VA = "0x14E4F84")]
	protected OvrAvatarDriver()
	{
	}
}
[Token(Token = "0x200002D")]
public class OvrAvatarHand : OvrAvatarComponent
{
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarHandComponent component;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0x14E50F0", Offset = "0x14E50F0", VA = "0x14E50F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0x14E5258", Offset = "0x14E5258", VA = "0x14E5258")]
	public OvrAvatarHand()
	{
	}
}
[Token(Token = "0x200002E")]
public class OvrAvatarLocalDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 centerEyePosition;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private Quaternion centerEyeRotation;

	[Token(Token = "0x4000123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float voiceAmplitude;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0x14E52C4", Offset = "0x14E52C4", VA = "0x14E52C4")]
	private ControllerPose GetMalibuControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0x14E5430", Offset = "0x14E5430", VA = "0x14E5430")]
	private ControllerPose GetControllerPose(OVRInput.Controller controller)
	{
		return default(ControllerPose);
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0x14E57D4", Offset = "0x14E57D4", VA = "0x14E57D4")]
	private void CalculateCurrentPose()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0x14E59F0", Offset = "0x14E59F0", VA = "0x14E59F0", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0x14E5A1C", Offset = "0x14E5A1C", VA = "0x14E5A1C")]
	public OvrAvatarLocalDriver()
	{
	}
}
[Token(Token = "0x200002F")]
public class OvrAvatarMaterialManager : MonoBehaviour
{
	[Token(Token = "0x2000533")]
	public enum TextureType
	{
		[Token(Token = "0x4001A0B")]
		DiffuseTextures,
		[Token(Token = "0x4001A0C")]
		NormalMaps,
		[Token(Token = "0x4001A0D")]
		RoughnessMaps,
		[Token(Token = "0x4001A0E")]
		Count
	}

	[Token(Token = "0x2000534")]
	public struct AvatarComponentMaterialProperties
	{
		[Token(Token = "0x4001A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ovrAvatarBodyPartType TypeIndex;

		[Token(Token = "0x4001A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Color Color;

		[Token(Token = "0x4001A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float DiffuseIntensity;

		[Token(Token = "0x4001A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float RimIntensity;

		[Token(Token = "0x4001A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float ReflectionIntensity;
	}

	[Token(Token = "0x2000535")]
	public struct AvatarTextureArrayProperties
	{
		[Token(Token = "0x4001A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture2D[] Textures;

		[Token(Token = "0x4001A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2DArray TextureArray;
	}

	[Token(Token = "0x2000536")]
	public struct AvatarMaterialPropertyBlock
	{
		[Token(Token = "0x4001A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector4[] Colors;

		[Token(Token = "0x4001A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float[] DiffuseIntensities;

		[Token(Token = "0x4001A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float[] RimIntensities;

		[Token(Token = "0x4001A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] ReflectionIntensities;
	}

	[Serializable]
	[Token(Token = "0x2000537")]
	public class AvatarMaterialConfig
	{
		[Token(Token = "0x4001A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AvatarComponentMaterialProperties[] ComponentMaterialProperties;

		[Token(Token = "0x4001A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AvatarMaterialPropertyBlock MaterialPropertyBlock;

		[Token(Token = "0x6001FBE")]
		[Address(RVA = "0x14E7E94", Offset = "0x14E7E94", VA = "0x14E7E94")]
		public AvatarMaterialConfig()
		{
		}
	}

	[Token(Token = "0x2000538")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEED8", Offset = "0xCBEED8")]
	private sealed class <RunLoadingAnimation>d__49 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OvrAvatarMaterialManager <>4__this;

		[Token(Token = "0x4001A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public System.Action callBack;

		[Token(Token = "0x4001A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <srcBlend>5__2;

		[Token(Token = "0x4001A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int <dstBlend>5__3;

		[Token(Token = "0x4001A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string <lightModeTag>5__4;

		[Token(Token = "0x4001A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string <renderTypeTag>5__5;

		[Token(Token = "0x4001A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string <renderQueueTag>5__6;

		[Token(Token = "0x4001A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string <ignoreProjectorTag>5__7;

		[Token(Token = "0x4001A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int <renderQueue>5__8;

		[Token(Token = "0x4001A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool <transparentQueue>5__9;

		[Token(Token = "0x17000324")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FC2")]
			[Address(RVA = "0x14E8890", Offset = "0x14E8890", VA = "0x14E8890", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000325")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FC4")]
			[Address(RVA = "0x14E88F8", Offset = "0x14E88F8", VA = "0x14E88F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FBF")]
		[Address(RVA = "0x14E7CA8", Offset = "0x14E7CA8", VA = "0x14E7CA8")]
		[DebuggerHidden]
		public <RunLoadingAnimation>d__49(int <>1__state)
		{
		}

		[Token(Token = "0x6001FC0")]
		[Address(RVA = "0x14E81D0", Offset = "0x14E81D0", VA = "0x14E81D0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FC1")]
		[Address(RVA = "0x14E81D4", Offset = "0x14E81D4", VA = "0x14E81D4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FC3")]
		[Address(RVA = "0x14E8898", Offset = "0x14E8898", VA = "0x14E8898", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Renderer TargetRenderer;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarTextureArrayProperties[] TextureArrays;

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly string[] TextureTypeToShaderProperties;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AvatarMaterialConfig LocalAvatarConfig;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ReflectionProbeBlendInfo> ReflectionProbes;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader CombinedShader;

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string AVATAR_SHADER_LOADER;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string AVATAR_SHADER_MAINTEX;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string AVATAR_SHADER_NORMALMAP;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static string AVATAR_SHADER_ROUGHNESSMAP;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static string AVATAR_SHADER_COLOR;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static string AVATAR_SHADER_DIFFUSEINTENSITY;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static string AVATAR_SHADER_RIMINTENSITY;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static string AVATAR_SHADER_REFLECTIONINTENSITY;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static string AVATAR_SHADER_CUBEMAP;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public static string AVATAR_SHADER_ALPHA;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public static string AVATAR_SHADER_LOADING_DIMMER;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public static string AVATAR_SHADER_IRIS_COLOR;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public static string AVATAR_SHADER_LIP_COLOR;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public static string AVATAR_SHADER_BROW_COLOR;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public static string AVATAR_SHADER_LASH_COLOR;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public static string AVATAR_SHADER_SCLERA_COLOR;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public static string AVATAR_SHADER_GUM_COLOR;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public static string AVATAR_SHADER_TEETH_COLOR;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public static string AVATAR_SHADER_LIP_SMOOTHNESS;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public static float[] DiffuseIntensities;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public static float[] RimIntensities;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public static float[] ReflectionIntensities;

	[Token(Token = "0x4000140")]
	private const float LOADING_ANIMATION_AMPLITUDE = 0.5f;

	[Token(Token = "0x4000141")]
	private const float LOADING_ANIMATION_PERIOD = 0.35f;

	[Token(Token = "0x4000142")]
	private const float LOADING_ANIMATION_CURVE_SCALE = 0.25f;

	[Token(Token = "0x4000143")]
	private const float LOADING_ANIMATION_DIMMER_MIN = 0.3f;

	[Token(Token = "0x6000123")]
	[Address(RVA = "0x14E5ACC", Offset = "0x14E5ACC", VA = "0x14E5ACC")]
	public void CreateTextureArrays()
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0x14E5C80", Offset = "0x14E5C80", VA = "0x14E5C80")]
	public void SetRenderer(Renderer renderer)
	{
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0x14E5CC0", Offset = "0x14E5CC0", VA = "0x14E5CC0")]
	public void OnCombinedMeshReady()
	{
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0x14E6410", Offset = "0x14E6410", VA = "0x14E6410")]
	public void AddTextureIDToTextureManager(ulong assetID, bool isSingleComponent)
	{
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0x14E66AC", Offset = "0x14E66AC", VA = "0x14E66AC")]
	private void DeleteTextureSet()
	{
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0x14E5D54", Offset = "0x14E5D54", VA = "0x14E5D54")]
	public void InitTextureArrays()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0x14E679C", Offset = "0x14E679C", VA = "0x14E679C")]
	private void ProcessTexturesWithMips(Texture2D[] textures, int texArrayResolution, Texture2DArray texArray)
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0x14E6170", Offset = "0x14E6170", VA = "0x14E6170")]
	private void SetMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0x14E6A30", Offset = "0x14E6A30", VA = "0x14E6A30")]
	private void ApplyMaterialPropertyBlock()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0x14E6CA8", Offset = "0x14E6CA8", VA = "0x14E6CA8")]
	public static ovrAvatarBodyPartType GetComponentType(string objectName)
	{
		return default(ovrAvatarBodyPartType);
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0x14E6DA4", Offset = "0x14E6DA4", VA = "0x14E6DA4")]
	private ulong GetTextureIDForType(ovrAvatarPBSMaterialState materialState, TextureType type)
	{
		return default(ulong);
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0x14E6DDC", Offset = "0x14E6DDC", VA = "0x14E6DDC")]
	public void ValidateTextures(ovrAvatarPBSMaterialState[] materialStates)
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0x14E6378", Offset = "0x14E6378", VA = "0x14E6378")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCCEDA0", Offset = "0xCCEDA0")]
	private IEnumerator RunLoadingAnimation(System.Action callBack)
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0x14E7CD4", Offset = "0x14E7CD4", VA = "0x14E7CD4")]
	public OvrAvatarMaterialManager()
	{
	}
}
[Token(Token = "0x2000030")]
public class OvrAvatarPacket
{
	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr ovrNativePacket;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private List<float> frameTimes;

	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<OvrAvatarDriver.PoseFrame> frames;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<byte[]> encodedAudioPackets;

	[Token(Token = "0x17000008")]
	public float Duration
	{
		[Token(Token = "0x6000132")]
		[Address(RVA = "0x14DDB3C", Offset = "0x14DDB3C", VA = "0x14DDB3C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000009")]
	public OvrAvatarDriver.PoseFrame FinalFrame
	{
		[Token(Token = "0x6000133")]
		[Address(RVA = "0x14DDC78", Offset = "0x14DDC78", VA = "0x14DDC78")]
		get
		{
			return default(OvrAvatarDriver.PoseFrame);
		}
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0x14DE138", Offset = "0x14DE138", VA = "0x14DE138")]
	public OvrAvatarPacket()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0x14DD9CC", Offset = "0x14DD9CC", VA = "0x14DD9CC")]
	public OvrAvatarPacket(OvrAvatarDriver.PoseFrame initialPose)
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0x14E8900", Offset = "0x14E8900", VA = "0x14E8900")]
	private OvrAvatarPacket(List<float> frameTimes, List<OvrAvatarDriver.PoseFrame> frames, List<byte[]> audioPackets)
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0x14DDBA8", Offset = "0x14DDBA8", VA = "0x14DDBA8")]
	public void AddFrame(OvrAvatarDriver.PoseFrame frame, float deltaSeconds)
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0x14E8A28", Offset = "0x14E8A28", VA = "0x14E8A28")]
	public OvrAvatarDriver.PoseFrame GetPoseFrame(float seconds)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0x14E8C30", Offset = "0x14E8C30", VA = "0x14E8C30")]
	public static OvrAvatarPacket Read(Stream stream)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x14E8E88", Offset = "0x14E8E88", VA = "0x14E8E88")]
	public void Write(Stream stream)
	{
	}
}
[Token(Token = "0x2000031")]
internal static class BinaryWriterExtensions
{
	[Token(Token = "0x600013B")]
	[Address(RVA = "0xF65D8C", Offset = "0xF65D8C", VA = "0xF65D8C")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.PoseFrame frame)
	{
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xF65EA0", Offset = "0xF65EA0", VA = "0xF65EA0")]
	public static void Write(this BinaryWriter writer, Vector3 vec3)
	{
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xF6604C", Offset = "0xF6604C", VA = "0xF6604C")]
	public static void Write(this BinaryWriter writer, Vector2 vec2)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xF65F10", Offset = "0xF65F10", VA = "0xF65F10")]
	public static void Write(this BinaryWriter writer, Quaternion quat)
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xF65FA4", Offset = "0xF65FA4", VA = "0xF65FA4")]
	public static void Write(this BinaryWriter writer, OvrAvatarDriver.ControllerPose pose)
	{
	}
}
[Token(Token = "0x2000032")]
internal static class BinaryReaderExtensions
{
	[Token(Token = "0x6000140")]
	[Address(RVA = "0xF6598C", Offset = "0xF6598C", VA = "0xF6598C")]
	public static OvrAvatarDriver.PoseFrame ReadPoseFrame(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.PoseFrame);
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xF65D30", Offset = "0xF65D30", VA = "0xF65D30")]
	public static Vector2 ReadVector2(this BinaryReader reader)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xF65B2C", Offset = "0xF65B2C", VA = "0xF65B2C")]
	public static Vector3 ReadVector3(this BinaryReader reader)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xF65BA4", Offset = "0xF65BA4", VA = "0xF65BA4")]
	public static Quaternion ReadQuaternion(this BinaryReader reader)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xF65C40", Offset = "0xF65C40", VA = "0xF65C40")]
	public static OvrAvatarDriver.ControllerPose ReadControllerPose(this BinaryReader reader)
	{
		return default(OvrAvatarDriver.ControllerPose);
	}
}
[Token(Token = "0x2000033")]
public class OvrAvatarRemoteDriver : OvrAvatarDriver
{
	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Queue<OvrAvatarPacket> packetQueue;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private IntPtr CurrentSDKPacket;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float CurrentPacketTime;

	[Token(Token = "0x400014B")]
	private const int MinPacketQueue = 1;

	[Token(Token = "0x400014C")]
	private const int MaxPacketQueue = 4;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private int CurrentSequence;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool isStreaming;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OvrAvatarPacket currentPacket;

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x14E9078", Offset = "0x14E9078", VA = "0x14E9078")]
	public void QueuePacket(int sequence, OvrAvatarPacket packet)
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x14E9104", Offset = "0x14E9104", VA = "0x14E9104", Slot = "4")]
	public override void UpdateTransforms(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x14E9120", Offset = "0x14E9120", VA = "0x14E9120")]
	private void UpdateFromSDKPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0x14E92CC", Offset = "0x14E92CC", VA = "0x14E92CC")]
	private void UpdateFromUnityPacket(IntPtr sdkAvatar)
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0x14E94B0", Offset = "0x14E94B0", VA = "0x14E94B0")]
	public OvrAvatarRemoteDriver()
	{
	}
}
[Token(Token = "0x2000034")]
public class OvrAvatarRenderComponent : MonoBehaviour
{
	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool firstSkinnedUpdate;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SkinnedMeshRenderer mesh;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] bones;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool isBodyComponent;

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x14E9540", Offset = "0x14E9540", VA = "0x14E9540")]
	protected void UpdateActive(OvrAvatar avatar, ovrAvatarVisibilityFlags mask)
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x14E9624", Offset = "0x14E9624", VA = "0x14E9624")]
	protected SkinnedMeshRenderer CreateSkinnedMesh(ulong assetID, ovrAvatarVisibilityFlags visibilityMask, int thirdPersonLayer, int firstPersonLayer)
	{
		return null;
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x14E9818", Offset = "0x14E9818", VA = "0x14E9818")]
	protected void UpdateSkinnedMesh(OvrAvatar avatar, Transform[] bones, ovrAvatarTransform localTransform, ovrAvatarVisibilityFlags visibilityMask, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x14E9BA4", Offset = "0x14E9BA4", VA = "0x14E9BA4")]
	protected Material CreateAvatarMaterial(string name, Shader shader)
	{
		return null;
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0x14E9C9C", Offset = "0x14E9C9C", VA = "0x14E9C9C")]
	public OvrAvatarRenderComponent()
	{
	}
}
[Token(Token = "0x2000035")]
[Flags]
public enum ovrAvatarCapabilities
{
	[Token(Token = "0x4000155")]
	Body = 1,
	[Token(Token = "0x4000156")]
	Hands = 2,
	[Token(Token = "0x4000157")]
	Base = 4,
	[Token(Token = "0x4000158")]
	BodyTilt = 0x10,
	[Token(Token = "0x4000159")]
	Expressive = 0x20,
	[Token(Token = "0x400015A")]
	All = -1
}
[Token(Token = "0x2000036")]
public enum ovrAvatarMessageType
{
	[Token(Token = "0x400015C")]
	AvatarSpecification,
	[Token(Token = "0x400015D")]
	AssetLoaded,
	[Token(Token = "0x400015E")]
	Count
}
[Token(Token = "0x2000037")]
public struct ovrAvatarMessage_AvatarSpecification
{
	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public IntPtr avatarSpec;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ulong oculusUserID;
}
[Token(Token = "0x2000038")]
public struct ovrAvatarMessage_AssetLoaded
{
	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ulong assetID;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr asset;
}
[Token(Token = "0x2000039")]
public enum ovrAvatarAssetType
{
	[Token(Token = "0x4000164")]
	Mesh,
	[Token(Token = "0x4000165")]
	Texture,
	[Token(Token = "0x4000166")]
	Pose,
	[Token(Token = "0x4000167")]
	Material,
	[Token(Token = "0x4000168")]
	CombinedMesh,
	[Token(Token = "0x4000169")]
	PBSMaterial,
	[Token(Token = "0x400016A")]
	FailedLoad,
	[Token(Token = "0x400016B")]
	Count
}
[Token(Token = "0x200003A")]
public struct ovrAvatarMeshVertex
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public byte[] blendIndices;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float[] blendWeights;
}
[Token(Token = "0x200003B")]
public struct ovrAvatarMeshVertexV2
{
	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float tw;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float u;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float v;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float r;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float g;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float b;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float a;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public byte[] blendIndices;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float[] blendWeights;
}
[Token(Token = "0x200003C")]
public struct ovrAvatarBlendVertex
{
	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float x;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float y;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float z;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float nx;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float ny;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float nz;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float tx;

	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ty;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float tz;
}
[Token(Token = "0x200003D")]
public struct ovrAvatarMeshAssetData
{
	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003E")]
public struct ovrAvatarMeshAssetDataV2
{
	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint vertexCount;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public IntPtr vertexBuffer;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public uint indexCount;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr indexBuffer;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ovrAvatarSkinnedMeshPose skinnedBindPose;
}
[Token(Token = "0x200003F")]
public enum ovrAvatarTextureFormat
{
	[Token(Token = "0x40001A0")]
	RGB24,
	[Token(Token = "0x40001A1")]
	DXT1,
	[Token(Token = "0x40001A2")]
	DXT5,
	[Token(Token = "0x40001A3")]
	ASTC_RGB_6x6,
	[Token(Token = "0x40001A4")]
	ASTC_RGB_6x6_MIPMAPS,
	[Token(Token = "0x40001A5")]
	Count
}
[Token(Token = "0x2000040")]
public struct ovrAvatarTextureAssetData
{
	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTextureFormat format;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint sizeX;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public uint sizeY;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public uint mipCount;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong textureDataSize;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr textureData;
}
[Token(Token = "0x2000041")]
public enum ovrAvatarRenderPartType
{
	[Token(Token = "0x40001AD")]
	SkinnedMeshRender,
	[Token(Token = "0x40001AE")]
	SkinnedMeshRenderPBS,
	[Token(Token = "0x40001AF")]
	ProjectorRender,
	[Token(Token = "0x40001B0")]
	SkinnedMeshRenderPBS_V2,
	[Token(Token = "0x40001B1")]
	Count
}
[Token(Token = "0x2000042")]
public enum ovrAvatarLogLevel
{
	[Token(Token = "0x40001B3")]
	Unknown,
	[Token(Token = "0x40001B4")]
	Default,
	[Token(Token = "0x40001B5")]
	Verbose,
	[Token(Token = "0x40001B6")]
	Debug,
	[Token(Token = "0x40001B7")]
	Info,
	[Token(Token = "0x40001B8")]
	Warn,
	[Token(Token = "0x40001B9")]
	Error,
	[Token(Token = "0x40001BA")]
	Fatal,
	[Token(Token = "0x40001BB")]
	Silent
}
[Token(Token = "0x2000043")]
public struct ovrAvatarTransform
{
	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 position;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Quaternion orientation;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 scale;
}
[Token(Token = "0x2000044")]
[Flags]
public enum ovrAvatarButton
{
	[Token(Token = "0x40001C0")]
	One = 1,
	[Token(Token = "0x40001C1")]
	Two = 2,
	[Token(Token = "0x40001C2")]
	Three = 4,
	[Token(Token = "0x40001C3")]
	Joystick = 8
}
[Token(Token = "0x2000045")]
[Flags]
public enum ovrAvatarTouch
{
	[Token(Token = "0x40001C5")]
	One = 1,
	[Token(Token = "0x40001C6")]
	Two = 2,
	[Token(Token = "0x40001C7")]
	Joystick = 4,
	[Token(Token = "0x40001C8")]
	ThumbRest = 8,
	[Token(Token = "0x40001C9")]
	Index = 0x10,
	[Token(Token = "0x40001CA")]
	Pointing = 0x40,
	[Token(Token = "0x40001CB")]
	ThumbUp = 0x80
}
[Token(Token = "0x2000046")]
public struct ovrAvatarHandInputState
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarButton buttonMask;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public ovrAvatarTouch touchMask;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float joystickX;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float joystickY;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float indexTrigger;

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float handTrigger;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool isActive;
}
[Token(Token = "0x2000047")]
public struct ovrAvatarComponent
{
	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint renderPartCount;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr renderParts;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string name;
}
[Token(Token = "0x2000048")]
internal struct ovrAvatarComponent_Offsets
{
	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long transform;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int renderPartCount;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public static int renderParts;

	[Token(Token = "0x40001DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static int name;
}
[Token(Token = "0x2000049")]
public struct ovrAvatarBaseComponent
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 basePosition;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004A")]
public struct ovrAvatarBodyComponent
{
	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform leftEyeTransform;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarTransform rightEyeTransform;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ovrAvatarTransform centerEyeTransform;

	[Token(Token = "0x40001E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004B")]
public struct ovrAvatarBodyComponent_Offsets
{
	[Token(Token = "0x40001E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long leftEyeTransform;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long rightEyeTransform;

	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long centerEyeTransform;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long renderComponent;
}
[Token(Token = "0x200004C")]
public struct ovrAvatarControllerComponent
{
	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004D")]
public struct ovrAvatarHandComponent
{
	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarHandInputState inputState;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntPtr renderComponent;
}
[Token(Token = "0x200004E")]
public enum ovrAvatarMaterialLayerBlendMode
{
	[Token(Token = "0x40001EB")]
	Add,
	[Token(Token = "0x40001EC")]
	Multiply,
	[Token(Token = "0x40001ED")]
	Count
}
[Token(Token = "0x200004F")]
public enum ovrAvatarMaterialLayerSampleMode
{
	[Token(Token = "0x40001EF")]
	Color,
	[Token(Token = "0x40001F0")]
	Texture,
	[Token(Token = "0x40001F1")]
	TextureSingleChannel,
	[Token(Token = "0x40001F2")]
	Parallax,
	[Token(Token = "0x40001F3")]
	Count
}
[Token(Token = "0x2000050")]
public enum ovrAvatarMaterialMaskType
{
	[Token(Token = "0x40001F5")]
	None,
	[Token(Token = "0x40001F6")]
	Positional,
	[Token(Token = "0x40001F7")]
	ViewReflection,
	[Token(Token = "0x40001F8")]
	Fresnel,
	[Token(Token = "0x40001F9")]
	Pulse,
	[Token(Token = "0x40001FA")]
	Count
}
[Token(Token = "0x2000051")]
public enum ovrAvatarControllerType
{
	[Token(Token = "0x40001FC")]
	Touch,
	[Token(Token = "0x40001FD")]
	Malibu,
	[Token(Token = "0x40001FE")]
	Go,
	[Token(Token = "0x40001FF")]
	Quest,
	[Token(Token = "0x4000200")]
	Count
}
[Token(Token = "0x2000052")]
public enum ovrAvatarAssetLevelOfDetail
{
	[Token(Token = "0x4000202")]
	Lowest = 1,
	[Token(Token = "0x4000203")]
	Medium = 3,
	[Token(Token = "0x4000204")]
	Highest = 5
}
[Token(Token = "0x2000053")]
public enum ovrAvatarLookAndFeelVersion
{
	[Token(Token = "0x4000206")]
	Unknown = -1,
	[Token(Token = "0x4000207")]
	One,
	[Token(Token = "0x4000208")]
	Two
}
[Token(Token = "0x2000054")]
public struct ovrAvatarMaterialLayerState
{
	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarMaterialLayerBlendMode blendMode;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarMaterialMaskType maskType;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector4 layerColor;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector4 sampleParameters;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong sampleTexture;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector4 sampleScaleOffset;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector4 maskParameters;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 maskAxis;

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x110E98C", Offset = "0x110E98C", VA = "0x110E98C")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0xDD610C", Offset = "0xDD610C", VA = "0xDD610C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xDD6114", Offset = "0xDD6114", VA = "0xDD6114", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000055")]
public struct ovrAvatarMaterialState
{
	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarMaterialMaskType baseMaskType;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector4 baseMaskParameters;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector4 baseMaskAxis;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public ovrAvatarMaterialLayerSampleMode sampleMode;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong alphaMaskTextureID;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 alphaMaskScaleOffset;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong normalMapTextureID;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 normalMapScaleOffset;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong parallaxMapTextureID;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector4 parallaxMapScaleOffset;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ulong roughnessMapTextureID;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Vector4 roughnessMapScaleOffset;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public uint layerCount;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public ovrAvatarMaterialLayerState[] layers;

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x110ECC0", Offset = "0x110ECC0", VA = "0x110ECC0")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0xDD6350", Offset = "0xDD6350", VA = "0xDD6350", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xDD6358", Offset = "0xDD6358", VA = "0xDD6358", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000056")]
public struct ovrAvatarExpressiveParameters
{
	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 irisColor;

	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector4 scleraColor;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector4 lashColor;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector4 browColor;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector4 lipColor;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector4 teethColor;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector4 gumColor;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float browLashIntensity;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float lipSmoothness;

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x110E034", Offset = "0x110E034", VA = "0x110E034")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xDD5E6C", Offset = "0xDD5E6C", VA = "0xDD5E6C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xDD5E74", Offset = "0xDD5E74", VA = "0xDD5E74", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000057")]
public struct ovrAvatarPBSMaterialState
{
	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector4 baseColor;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ulong albedoTextureID;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector4 albedoMultiplier;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ulong metallicnessTextureID;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float glossinessScale;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong normalTextureID;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong heightTextureID;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ulong occlusionTextureID;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public ulong emissionTextureID;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Vector4 emissionMultiplier;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ulong detailMaskTextureID;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ulong detailAlbedoTextureID;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ulong detailNormalTextureID;

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x110F1EC", Offset = "0x110F1EC", VA = "0x110F1EC")]
	private static bool VectorEquals(Vector4 a, Vector4 b)
	{
		return default(bool);
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xDD6C0C", Offset = "0xDD6C0C", VA = "0xDD6C0C", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x600015C")]
	[Address(RVA = "0xDD6C14", Offset = "0xDD6C14", VA = "0xDD6C14", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}
}
[Token(Token = "0x2000058")]
public class OvrAvatarAssetMaterial : OvrAvatarAsset
{
	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ovrAvatarMaterialState material;

	[Token(Token = "0x600015D")]
	[Address(RVA = "0x14E05FC", Offset = "0x14E05FC", VA = "0x14E05FC")]
	public OvrAvatarAssetMaterial(ulong id, IntPtr mat)
	{
	}
}
[Token(Token = "0x2000059")]
public struct ovrAvatarSkinnedMeshPose
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint jointCount;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarTransform[] jointTransform;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int[] jointParents;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr[] jointNames;
}
[Token(Token = "0x200005A")]
[Flags]
public enum ovrAvatarVisibilityFlags
{
	[Token(Token = "0x400023D")]
	FirstPerson = 1,
	[Token(Token = "0x400023E")]
	ThirdPerson = 2,
	[Token(Token = "0x400023F")]
	SelfOccluding = 4
}
[Token(Token = "0x200005B")]
public struct ovrAvatarRenderPart_SkinnedMeshRender
{
	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarMaterialState materialState;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005C")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS
{
	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ulong albedoTextureAssetID;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ulong surfaceTextureAssetID;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005D")]
public struct ovrAvatarRenderPart_ProjectorRender
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public uint componentIndex;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public uint renderPartIndex;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ovrAvatarMaterialState materialState;
}
[Token(Token = "0x200005E")]
public struct ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2
{
	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform localTransform;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarVisibilityFlags visibilityMask;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ulong meshAssetID;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ovrAvatarPBSMaterialState materialState;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ovrAvatarSkinnedMeshPose skinnedPose;
}
[Token(Token = "0x200005F")]
public enum ovrAvatarHandGesture
{
	[Token(Token = "0x4000255")]
	Default,
	[Token(Token = "0x4000256")]
	GripSphere,
	[Token(Token = "0x4000257")]
	GripCube,
	[Token(Token = "0x4000258")]
	Count
}
[Token(Token = "0x2000060")]
public enum ovrAvatarBodyPartType
{
	[Token(Token = "0x400025A")]
	Body,
	[Token(Token = "0x400025B")]
	Clothing,
	[Token(Token = "0x400025C")]
	Eyewear,
	[Token(Token = "0x400025D")]
	Hair,
	[Token(Token = "0x400025E")]
	Beard,
	[Token(Token = "0x400025F")]
	Count
}
[Token(Token = "0x2000061")]
public struct ovrAvatarBlendShapeParams
{
	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint blendShapeParamCount;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] blendShapeParams;
}
[Token(Token = "0x2000062")]
internal struct ovrAvatarBlendShapeParams_Offsets
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int blendShapeParamCount;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long blendShapeParams;
}
[Token(Token = "0x2000063")]
public struct ovrAvatarVisemes
{
	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint visemeParamCount;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float[] visemeParams;
}
[Token(Token = "0x2000064")]
internal struct ovrAvatarVisemes_Offsets
{
	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int visemeParamCount;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long visemeParams;
}
[Token(Token = "0x2000065")]
public enum ovrAvatarGazeTargetType
{
	[Token(Token = "0x4000269")]
	AvatarHead,
	[Token(Token = "0x400026A")]
	AvatarHand,
	[Token(Token = "0x400026B")]
	Object,
	[Token(Token = "0x400026C")]
	ObjectStatic,
	[Token(Token = "0x400026D")]
	Count
}
[Token(Token = "0x2000066")]
public struct ovrAvatarGazeTarget
{
	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ovrAvatarGazeTargetType type;
}
[Token(Token = "0x2000067")]
internal struct ovrAvatarGazeTarget_Offsets
{
	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int id;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static int worldPosition;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int type;
}
[Token(Token = "0x2000068")]
public struct ovrAvatarGazeTargets
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint targetCount;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarGazeTarget[] targets;
}
[Token(Token = "0x2000069")]
internal struct ovrAvatarGazeTargets_Offsets
{
	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static int targetCount;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long targets;
}
[Token(Token = "0x200006A")]
public enum ovrAvatarLightType
{
	[Token(Token = "0x4000279")]
	Point,
	[Token(Token = "0x400027A")]
	Direction,
	[Token(Token = "0x400027B")]
	Spot,
	[Token(Token = "0x400027C")]
	Count
}
[Token(Token = "0x200006B")]
public struct ovrAvatarLight
{
	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint id;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ovrAvatarLightType type;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float intensity;

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 worldDirection;

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 worldPosition;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float range;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float spotAngleDeg;
}
[Token(Token = "0x200006C")]
internal struct ovrAvatarLight_Offsets
{
	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long id;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long type;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long intensity;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static long worldDirection;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static long worldPosition;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static long range;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static long spotAngleDeg;
}
[Token(Token = "0x200006D")]
public struct ovrAvatarLights
{
	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float ambientIntensity;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint lightCount;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ovrAvatarLight[] lights;
}
[Token(Token = "0x200006E")]
internal struct ovrAvatarLights_Offsets
{
	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static long ambientIntensity;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static long lightCount;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static long lights;
}
[Token(Token = "0x200006F")]
[Flags]
public enum ovrAvatarDebugContext : uint
{
	[Token(Token = "0x4000292")]
	None = 0u,
	[Token(Token = "0x4000293")]
	GazeTarget = 1u,
	[Token(Token = "0x4000294")]
	Any = uint.MaxValue
}
[Token(Token = "0x2000070")]
public struct ovrAvatarDebugLine
{
	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 startPoint;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 endPoint;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 color;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntPtr text;
}
[Token(Token = "0x2000071")]
public struct ovrAvatarDebugTransform
{
	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ovrAvatarTransform transform;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ovrAvatarDebugContext context;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntPtr text;
}
[Token(Token = "0x2000072")]
public delegate void specificationCallback(IntPtr specification);
[Token(Token = "0x2000073")]
public delegate void assetLoadedCallback(OvrAvatarAsset asset);
[Token(Token = "0x2000074")]
public delegate void combinedMeshLoadedCallback(IntPtr asset);
[Token(Token = "0x2000075")]
public class OvrAvatarSDKManager : MonoBehaviour
{
	[Token(Token = "0x2000539")]
	public struct AvatarSpecRequestParams
	{
		[Token(Token = "0x4001A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong _userId;

		[Token(Token = "0x4001A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public specificationCallback _callback;

		[Token(Token = "0x4001A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool _useCombinedMesh;

		[Token(Token = "0x4001A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ovrAvatarAssetLevelOfDetail _lod;

		[Token(Token = "0x4001A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool _forceMobileTextureFormat;

		[Token(Token = "0x4001A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ovrAvatarLookAndFeelVersion _lookVersion;

		[Token(Token = "0x4001A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ovrAvatarLookAndFeelVersion _fallbackVersion;

		[Token(Token = "0x4001A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool _enableExpressive;

		[Token(Token = "0x6001FC5")]
		[Address(RVA = "0xDECFC0", Offset = "0xDECFC0", VA = "0xDECFC0")]
		public AvatarSpecRequestParams(ulong userId, specificationCallback callback, bool useCombinedMesh, ovrAvatarAssetLevelOfDetail lod, bool forceMobileTextureFormat, ovrAvatarLookAndFeelVersion lookVersion, ovrAvatarLookAndFeelVersion fallbackVersion, bool enableExpressive)
		{
		}
	}

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSDKManager _instance;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool initialized;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<ulong, HashSet<specificationCallback>> specificationCallbacks;

	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<ulong, HashSet<assetLoadedCallback>> assetLoadedCallbacks;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<IntPtr, combinedMeshLoadedCallback> combinedMeshLoadedCallbacks;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<ulong, OvrAvatarAsset> assetCache;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OvrAvatarTextureCopyManager textureCopyManager;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ovrAvatarLogLevel LoggingLevel;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Queue<AvatarSpecRequestParams> avatarSpecificationQueue;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<int> loadingAvatars;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool avatarSpecRequestAvailable;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lastDispatchedAvatarSpecRequestTime;

	[Token(Token = "0x40002A9")]
	private const float AVATAR_SPEC_REQUEST_TIMEOUT = 5f;

	[Token(Token = "0x1700000A")]
	public static OvrAvatarSDKManager Instance
	{
		[Token(Token = "0x6000170")]
		[Address(RVA = "0x14DC144", Offset = "0x14DC144", VA = "0x14DC144")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x14E9CAC", Offset = "0x14E9CAC", VA = "0x14E9CAC")]
	private bool Initialize()
	{
		return default(bool);
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x14E9F40", Offset = "0x14E9F40", VA = "0x14E9F40")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x14E9FB4", Offset = "0x14E9FB4", VA = "0x14E9FB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x14EA7F8", Offset = "0x14EA7F8", VA = "0x14EA7F8")]
	public bool IsAvatarSpecWaiting()
	{
		return default(bool);
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x14EA850", Offset = "0x14EA850", VA = "0x14EA850")]
	public bool IsAvatarLoading()
	{
		return default(bool);
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x14DC998", Offset = "0x14DC998", VA = "0x14DC998")]
	public void AddLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x14DCF1C", Offset = "0x14DCF1C", VA = "0x14DCF1C")]
	public void RemoveLoadingAvatar(int gameobjectID)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x14DC904", Offset = "0x14DC904", VA = "0x14DC904")]
	public void RequestAvatarSpecification(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x14EA630", Offset = "0x14EA630", VA = "0x14EA630")]
	private void DispatchAvatarSpecificationRequest(AvatarSpecRequestParams avatarSpecRequest)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x14DC378", Offset = "0x14DC378", VA = "0x14DC378")]
	public void BeginLoadingAsset(ulong assetId, ovrAvatarAssetLevelOfDetail lod, assetLoadedCallback callback)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x14DC494", Offset = "0x14DC494", VA = "0x14DC494")]
	public void RegisterCombinedMeshCallback(IntPtr sdkAvatar, combinedMeshLoadedCallback callback)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x14DC2F8", Offset = "0x14DC2F8", VA = "0x14DC2F8")]
	public OvrAvatarAsset GetAsset(ulong assetId)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x14EA8F4", Offset = "0x14EA8F4", VA = "0x14EA8F4")]
	public void DeleteAssetFromCache(ulong assetId)
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x14E9EF4", Offset = "0x14E9EF4", VA = "0x14E9EF4")]
	public string GetAppId()
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x14E6470", Offset = "0x14E6470", VA = "0x14E6470")]
	public OvrAvatarTextureCopyManager GetTextureCopyManager()
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x14EA9CC", Offset = "0x14EA9CC", VA = "0x14EA9CC")]
	public OvrAvatarSDKManager()
	{
	}
}
[Token(Token = "0x2000076")]
public sealed class OvrAvatarSettings : ScriptableObject
{
	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OvrAvatarSettings instance;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private string ovrAppID;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string ovrGearAppID;

	[Token(Token = "0x1700000B")]
	public static string AppID
	{
		[Token(Token = "0x6000181")]
		[Address(RVA = "0x14EA98C", Offset = "0x14EA98C", VA = "0x14EA98C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000182")]
		[Address(RVA = "0x14EAB10", Offset = "0x14EAB10", VA = "0x14EAB10")]
		set
		{
		}
	}

	[Token(Token = "0x1700000C")]
	public static string MobileAppID
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0x14EA9AC", Offset = "0x14EA9AC", VA = "0x14EA9AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000184")]
		[Address(RVA = "0x14EAB40", Offset = "0x14EAB40", VA = "0x14EAB40")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public static OvrAvatarSettings Instance
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0x14EA9E4", Offset = "0x14EA9E4", VA = "0x14EA9E4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000186")]
		[Address(RVA = "0x14EAB70", Offset = "0x14EAB70", VA = "0x14EAB70")]
		set
		{
		}
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x14EABC8", Offset = "0x14EABC8", VA = "0x14EABC8")]
	public OvrAvatarSettings()
	{
	}
}
[Token(Token = "0x2000077")]
public class OvrAvatarSkinnedMeshRenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Shader surface;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Shader surfaceSelfOccluding;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool previouslyActive;

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x14DA04C", Offset = "0x14DA04C", VA = "0x14DA04C")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRender skinnedMeshRender, Shader surface, Shader surfaceSelfOccluding, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x14E2B00", Offset = "0x14E2B00", VA = "0x14E2B00")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x14EBF74", Offset = "0x14EBF74", VA = "0x14EBF74")]
	private void UpdateMeshMaterial(ovrAvatarVisibilityFlags visibilityMask, SkinnedMeshRenderer rootMesh)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x14EC0D4", Offset = "0x14EC0D4", VA = "0x14EC0D4")]
	public OvrAvatarSkinnedMeshRenderComponent()
	{
	}
}
[Token(Token = "0x2000078")]
public class OvrAvatarSkinnedMeshRenderPBSComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	private bool isMaterialInitilized;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x14DA2A0", Offset = "0x14DA2A0", VA = "0x14DA2A0")]
	internal void Initialize(ovrAvatarRenderPart_SkinnedMeshRenderPBS skinnedMeshRenderPBS, Shader shader, int thirdPersonLayer, int firstPersonLayer)
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x14E2D28", Offset = "0x14E2D28", VA = "0x14E2D28")]
	internal void UpdateSkinnedMeshRenderPBS(OvrAvatar avatar, IntPtr renderPart, Material mat)
	{
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x14EC0E4", Offset = "0x14EC0E4", VA = "0x14EC0E4")]
	public OvrAvatarSkinnedMeshRenderPBSComponent()
	{
	}
}
[Token(Token = "0x2000079")]
public class OvrAvatarSkinnedMeshPBSV2RenderComponent : OvrAvatarRenderComponent
{
	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OvrAvatarMaterialManager avatarMaterialManager;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previouslyActive;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isCombinedMaterial;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private ovrAvatarExpressiveParameters ExpressiveParameters;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	private bool EnableExpressive;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private int blendShapeCount;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private ovrAvatarBlendShapeParams blendShapeParams;

	[Token(Token = "0x40002B8")]
	private const string MAIN_MATERIAL_NAME = "main_material";

	[Token(Token = "0x40002B9")]
	private const string EYE_MATERIAL_NAME = "eye_material";

	[Token(Token = "0x40002BA")]
	private const string DEFAULT_MATERIAL_NAME = "_material";

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x14DA5CC", Offset = "0x14DA5CC", VA = "0x14DA5CC")]
	internal void Initialize(IntPtr renderPart, ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 skinnedMeshRender, OvrAvatarMaterialManager materialManager, int thirdPersonLayer, int firstPersonLayer, bool combinedMesh, ovrAvatarAssetLevelOfDetail lod, bool assignExpressiveParams, OvrAvatar avatar, bool isControllerModel)
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x14E2EC0", Offset = "0x14E2EC0", VA = "0x14E2EC0")]
	public void UpdateSkinnedMeshRender(OvrAvatarComponent component, OvrAvatar avatar, IntPtr renderPart)
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x14EB730", Offset = "0x14EB730", VA = "0x14EB730")]
	private void InitializeSingleComponentMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x14EAE68", Offset = "0x14EAE68", VA = "0x14EAE68")]
	private void InitializeCombinedMaterial(IntPtr renderPart, int lodIndex)
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x14EAC38", Offset = "0x14EAC38", VA = "0x14EAC38")]
	private void SetMaterialTransparent(Material mat)
	{
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x14EAD4C", Offset = "0x14EAD4C", VA = "0x14EAD4C")]
	private void SetMaterialOpaque(Material mat)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x14EBF64", Offset = "0x14EBF64", VA = "0x14EBF64")]
	public OvrAvatarSkinnedMeshPBSV2RenderComponent()
	{
	}
}
[Token(Token = "0x200007A")]
public class OvrAvatarTextureCopyManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200053A")]
	public struct FallbackTextureSet
	{
		[Token(Token = "0x4001A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool Initialized;

		[Token(Token = "0x4001A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture2D DiffuseRoughness;

		[Token(Token = "0x4001A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D Normal;
	}

	[Token(Token = "0x200053B")]
	private struct CopyTextureParams
	{
		[Token(Token = "0x4001A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Texture Src;

		[Token(Token = "0x4001A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Texture Dst;

		[Token(Token = "0x4001A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int Mip;

		[Token(Token = "0x4001A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int SrcSize;

		[Token(Token = "0x4001A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int DstElement;

		[Token(Token = "0x6001FC6")]
		[Address(RVA = "0xDED07C", Offset = "0xDED07C", VA = "0xDED07C")]
		public CopyTextureParams(Texture src, Texture dst, int mip, int srcSize, int dstElement)
		{
		}
	}

	[Token(Token = "0x200053C")]
	public struct TextureSet
	{
		[Token(Token = "0x4001A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Dictionary<ulong, bool> TextureIDSingleMeshPair;

		[Token(Token = "0x4001A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool IsProcessed;

		[Token(Token = "0x6001FC7")]
		[Address(RVA = "0xDED150", Offset = "0xDED150", VA = "0xDED150")]
		public TextureSet(Dictionary<ulong, bool> textureIDSingleMeshPair, bool isProcessed)
		{
		}
	}

	[Token(Token = "0x200053D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEEE8", Offset = "0xCBEEE8")]
	private sealed class <DeleteTextureSetCoroutine>d__24 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextureSet textureSetToDelete;

		[Token(Token = "0x4001A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public OvrAvatarTextureCopyManager <>4__this;

		[Token(Token = "0x4001A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int gameobjectID;

		[Token(Token = "0x17000326")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FCB")]
			[Address(RVA = "0x14ED6EC", Offset = "0x14ED6EC", VA = "0x14ED6EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000327")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FCD")]
			[Address(RVA = "0x14ED754", Offset = "0x14ED754", VA = "0x14ED754", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FC8")]
		[Address(RVA = "0x14ED030", Offset = "0x14ED030", VA = "0x14ED030")]
		[DebuggerHidden]
		public <DeleteTextureSetCoroutine>d__24(int <>1__state)
		{
		}

		[Token(Token = "0x6001FC9")]
		[Address(RVA = "0x14ED1D8", Offset = "0x14ED1D8", VA = "0x14ED1D8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FCA")]
		[Address(RVA = "0x14ED1DC", Offset = "0x14ED1DC", VA = "0x14ED1DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FCC")]
		[Address(RVA = "0x14ED6F4", Offset = "0x14ED6F4", VA = "0x14ED6F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FallbackTextureSet[] FallbackTextureSets;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Queue<CopyTextureParams> texturesToCopy;

	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<int, TextureSet> textureSets;

	[Token(Token = "0x40002BE")]
	private const int TEXTURES_TO_COPY_QUEUE_CAPACITY = 256;

	[Token(Token = "0x40002BF")]
	private const int COPIES_PER_FRAME = 8;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_DIFFUSE_ROUGHNESS;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly string[] FALLBACK_TEXTURE_PATHS_NORMAL;

	[Token(Token = "0x40002C2")]
	private const string PATH_HIGHEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_2048";

	[Token(Token = "0x40002C3")]
	private const string PATH_MEDIUM_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_1024";

	[Token(Token = "0x40002C4")]
	private const string PATH_LOWEST_DIFFUSE_ROUGHNESS = "FallbackTextures/fallback_diffuse_roughness_256";

	[Token(Token = "0x40002C5")]
	private const string PATH_HIGHEST_NORMAL = "FallbackTextures/fallback_normal_2048";

	[Token(Token = "0x40002C6")]
	private const string PATH_MEDIUM_NORMAL = "FallbackTextures/fallback_normal_1024";

	[Token(Token = "0x40002C7")]
	private const string PATH_LOWEST_NORMAL = "FallbackTextures/fallback_normal_256";

	[Token(Token = "0x40002C8")]
	private const int GPU_TEXTURE_COPY_WAIT_TIME = 10;

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x14EC898", Offset = "0x14EC898", VA = "0x14EC898")]
	public OvrAvatarTextureCopyManager()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x14ECCEC", Offset = "0x14ECCEC", VA = "0x14ECCEC")]
	public void Update()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x14E8840", Offset = "0x14E8840", VA = "0x14E8840")]
	public int GetTextureCount()
	{
		return default(int);
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x14E6880", Offset = "0x14E6880", VA = "0x14E6880")]
	public void CopyTexture(Texture src, Texture dst, int mipLevel, int mipSize, int dstElement, bool useQueue = true)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x14ECE64", Offset = "0x14ECE64", VA = "0x14ECE64")]
	private void CopyTexture(CopyTextureParams copyTextureParams)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x14E64F4", Offset = "0x14E64F4", VA = "0x14E64F4")]
	public void AddTextureIDToTextureSet(int gameobjectID, ulong textureID, bool isSingleMesh)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x14E66F4", Offset = "0x14E66F4", VA = "0x14E66F4")]
	public void DeleteTextureSet(int gameobjectID)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x14ECF80", Offset = "0x14ECF80", VA = "0x14ECF80")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCCEEA4", Offset = "0xCCEEA4")]
	private IEnumerator DeleteTextureSetCoroutine(TextureSet textureSetToDelete, int gameobjectID)
	{
		return null;
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x14EA8A8", Offset = "0x14EA8A8", VA = "0x14EA8A8")]
	public void CheckFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x14ED05C", Offset = "0x14ED05C", VA = "0x14ED05C")]
	private void InitFallbackTextureSet(ovrAvatarAssetLevelOfDetail lod)
	{
	}
}
[Token(Token = "0x200007B")]
public class OvrAvatarTouchController : OvrAvatarComponent
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool isLeftHand;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ovrAvatarControllerComponent component;

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x14ED75C", Offset = "0x14ED75C", VA = "0x14ED75C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x14ED8C4", Offset = "0x14ED8C4", VA = "0x14ED8C4")]
	public OvrAvatarTouchController()
	{
	}
}
[Token(Token = "0x200007C")]
public class EnableSwitch : MonoBehaviour
{
	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] SwitchTargets;

	[Token(Token = "0x60001A2")]
	public bool SetActive<T>(int target) where T : MonoBehaviour
	{
		return default(bool);
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0xF38570", Offset = "0xF38570", VA = "0xF38570")]
	public EnableSwitch()
	{
	}
}
[Token(Token = "0x200007D")]
public class LipSyncDemo_Control : MonoBehaviour
{
	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC020C", Offset = "0xCC020C")]
	public KeyCode rotateLeftKey;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0244", Offset = "0xCC0244")]
	public KeyCode rotateRightKey;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC027C", Offset = "0xCC027C")]
	public KeyCode resetRotationKey;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float resetRotation;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationAmount;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationMax;

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xFC6AA0", Offset = "0xFC6AA0", VA = "0xFC6AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xFC6AA4", Offset = "0xFC6AA4", VA = "0xFC6AA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xFC6B24", Offset = "0xFC6B24", VA = "0xFC6B24")]
	private void RotateObject(float amountDegrees, bool absolute = false)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xFC6D10", Offset = "0xFC6D10", VA = "0xFC6D10")]
	public LipSyncDemo_Control()
	{
	}
}
[Token(Token = "0x200007E")]
public class LipSyncDemo_SetCurrentTarget : MonoBehaviour
{
	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EnableSwitch[] SwitchTargets;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int targetSet;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int maxTarget;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool XRButtonBeingPressed;

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xFC6D40", Offset = "0xFC6D40", VA = "0xFC6D40")]
	private void Start()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xFC6E44", Offset = "0xFC6E44", VA = "0xFC6E44")]
	private void Update()
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0xFC7158", Offset = "0xFC7158", VA = "0xFC7158")]
	private void SetCurrentTarget()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xFC73E4", Offset = "0xFC73E4", VA = "0xFC73E4")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xFC7434", Offset = "0xFC7434", VA = "0xFC7434")]
	public LipSyncDemo_SetCurrentTarget()
	{
	}
}
[Token(Token = "0x200007F")]
public class OVRLipSyncDebugConsole : MonoBehaviour
{
	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArrayList messages;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int maxMessages;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text textMsg;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static OVRLipSyncDebugConsole s_Instance;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool clearTimeoutOn;

	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float clearTimeout;

	[Token(Token = "0x1700000E")]
	public static OVRLipSyncDebugConsole instance
	{
		[Token(Token = "0x60001AD")]
		[Address(RVA = "0x164C6F0", Offset = "0x164C6F0", VA = "0x164C6F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x164C9B0", Offset = "0x164C9B0", VA = "0x164C9B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x164CAF4", Offset = "0x164CAF4", VA = "0x164CAF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x164CA28", Offset = "0x164CA28", VA = "0x164CA28")]
	public void Init()
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x164A898", Offset = "0x164A898", VA = "0x164A898")]
	public static void Log(string message)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x164CC7C", Offset = "0x164CC7C", VA = "0x164CC7C")]
	public static void Log(string message, Color color)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x164A830", Offset = "0x164A830", VA = "0x164A830")]
	public static void Clear()
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x164A918", Offset = "0x164A918", VA = "0x164A918")]
	public static void ClearTimeout(float timeToClear)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x164CB8C", Offset = "0x164CB8C", VA = "0x164CB8C")]
	public void AddMessage(string message, Color color)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x164CD1C", Offset = "0x164CD1C", VA = "0x164CD1C")]
	public void ClearMessages()
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x164CD58", Offset = "0x164CD58", VA = "0x164CD58")]
	public void SetClearTimeout(float timeout)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x164CF4C", Offset = "0x164CF4C", VA = "0x164CF4C")]
	private void Prune()
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x164CD68", Offset = "0x164CD68", VA = "0x164CD68")]
	private void Display()
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x164CFFC", Offset = "0x164CFFC", VA = "0x164CFFC")]
	public OVRLipSyncDebugConsole()
	{
	}
}
[Token(Token = "0x2000080")]
public class OVRNamedArrayAttribute : PropertyAttribute
{
	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string[] names;

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x164DB04", Offset = "0x164DB04", VA = "0x164DB04")]
	public OVRNamedArrayAttribute(string[] names)
	{
	}
}
[Token(Token = "0x2000081")]
public static class OVRTouchpad
{
	[Token(Token = "0x200053E")]
	public enum TouchEvent
	{
		[Token(Token = "0x4001A41")]
		SingleTap,
		[Token(Token = "0x4001A42")]
		DoubleTap,
		[Token(Token = "0x4001A43")]
		Left,
		[Token(Token = "0x4001A44")]
		Right,
		[Token(Token = "0x4001A45")]
		Up,
		[Token(Token = "0x4001A46")]
		Down
	}

	[Token(Token = "0x200053F")]
	public delegate void OVRTouchpadCallback<TouchEvent>(TouchEvent arg);

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Vector3 moveAmountMouse;

	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static float minMovMagnitudeMouse;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Delegate touchPadCallbacks;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static OVRTouchpadHelper touchpadHelper;

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1649488", Offset = "0x1649488", VA = "0x1649488")]
	public static void Create()
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1652CD8", Offset = "0x1652CD8", VA = "0x1652CD8")]
	public static void Update()
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x1652FF8", Offset = "0x1652FF8", VA = "0x1652FF8")]
	public static void OnDisable()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x1652E48", Offset = "0x1652E48", VA = "0x1652E48")]
	private static void HandleInputMouse(ref Vector3 move)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x164A378", Offset = "0x164A378", VA = "0x164A378")]
	public static void AddListener(OVRTouchpadCallback<TouchEvent> handler)
	{
	}
}
[Token(Token = "0x2000082")]
public sealed class OVRTouchpadHelper : MonoBehaviour
{
	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x16530B8", Offset = "0x16530B8", VA = "0x16530B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1653134", Offset = "0x1653134", VA = "0x1653134")]
	private void Start()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x16531CC", Offset = "0x16531CC", VA = "0x16531CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x1653228", Offset = "0x1653228", VA = "0x1653228")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x165328C", Offset = "0x165328C", VA = "0x165328C")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x1653290", Offset = "0x1653290", VA = "0x1653290")]
	public OVRTouchpadHelper()
	{
	}
}
[Token(Token = "0x2000083")]
public class OVRLipSync : MonoBehaviour
{
	[Token(Token = "0x2000540")]
	public enum Result
	{
		[Token(Token = "0x4001A48")]
		Success = 0,
		[Token(Token = "0x4001A49")]
		Unknown = -2200,
		[Token(Token = "0x4001A4A")]
		CannotCreateContext = -2201,
		[Token(Token = "0x4001A4B")]
		InvalidParam = -2202,
		[Token(Token = "0x4001A4C")]
		BadSampleRate = -2203,
		[Token(Token = "0x4001A4D")]
		MissingDLL = -2204,
		[Token(Token = "0x4001A4E")]
		BadVersion = -2205,
		[Token(Token = "0x4001A4F")]
		UndefinedFunction = -2206
	}

	[Token(Token = "0x2000541")]
	public enum AudioDataType
	{
		[Token(Token = "0x4001A51")]
		S16_Mono,
		[Token(Token = "0x4001A52")]
		S16_Stereo,
		[Token(Token = "0x4001A53")]
		F32_Mono,
		[Token(Token = "0x4001A54")]
		F32_Stereo
	}

	[Token(Token = "0x2000542")]
	public enum Viseme
	{
		[Token(Token = "0x4001A56")]
		sil,
		[Token(Token = "0x4001A57")]
		PP,
		[Token(Token = "0x4001A58")]
		FF,
		[Token(Token = "0x4001A59")]
		TH,
		[Token(Token = "0x4001A5A")]
		DD,
		[Token(Token = "0x4001A5B")]
		kk,
		[Token(Token = "0x4001A5C")]
		CH,
		[Token(Token = "0x4001A5D")]
		SS,
		[Token(Token = "0x4001A5E")]
		nn,
		[Token(Token = "0x4001A5F")]
		RR,
		[Token(Token = "0x4001A60")]
		aa,
		[Token(Token = "0x4001A61")]
		E,
		[Token(Token = "0x4001A62")]
		ih,
		[Token(Token = "0x4001A63")]
		oh,
		[Token(Token = "0x4001A64")]
		ou
	}

	[Token(Token = "0x2000543")]
	public enum Signals
	{
		[Token(Token = "0x4001A66")]
		VisemeOn,
		[Token(Token = "0x4001A67")]
		VisemeOff,
		[Token(Token = "0x4001A68")]
		VisemeAmount,
		[Token(Token = "0x4001A69")]
		VisemeSmoothing,
		[Token(Token = "0x4001A6A")]
		LaughterAmount
	}

	[Token(Token = "0x2000544")]
	public enum ContextProviders
	{
		[Token(Token = "0x4001A6C")]
		Original,
		[Token(Token = "0x4001A6D")]
		Enhanced,
		[Token(Token = "0x4001A6E")]
		Enhanced_with_Laughter
	}

	[Serializable]
	[Token(Token = "0x2000545")]
	public class Frame
	{
		[Token(Token = "0x4001A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int frameNumber;

		[Token(Token = "0x4001A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int frameDelay;

		[Token(Token = "0x4001A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float[] Visemes;

		[Token(Token = "0x4001A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float laughterScore;

		[Token(Token = "0x6001FD2")]
		[Address(RVA = "0x164A0D4", Offset = "0x164A0D4", VA = "0x164A0D4")]
		public void CopyInput(Frame input)
		{
		}

		[Token(Token = "0x6001FD3")]
		[Address(RVA = "0x164A12C", Offset = "0x164A12C", VA = "0x164A12C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6001FD4")]
		[Address(RVA = "0x164A1BC", Offset = "0x164A1BC", VA = "0x164A1BC")]
		public Frame()
		{
		}
	}

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly int VisemeCount;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static readonly int SignalCount;

	[Token(Token = "0x40002E3")]
	public const string strOVRLS = "OVRLipSync";

	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Result sInitialized;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static OVRLipSync sInstance;

	[PreserveSig]
	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1648A4C", Offset = "0x1648A4C", VA = "0x1648A4C")]
	private static extern int ovrLipSyncDll_Initialize(int samplerate, int buffersize);

	[PreserveSig]
	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1648ADC", Offset = "0x1648ADC", VA = "0x1648ADC")]
	private static extern void ovrLipSyncDll_Shutdown();

	[PreserveSig]
	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1648B4C", Offset = "0x1648B4C", VA = "0x1648B4C")]
	private static extern IntPtr ovrLipSyncDll_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[PreserveSig]
	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1648BE0", Offset = "0x1648BE0", VA = "0x1648BE0")]
	private static extern int ovrLipSyncDll_CreateContextEx(ref uint context, ContextProviders provider, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x1648C88", Offset = "0x1648C88", VA = "0x1648C88")]
	private static extern int ovrLipSyncDll_CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate, bool enableAcceleration);

	[PreserveSig]
	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x1648D54", Offset = "0x1648D54", VA = "0x1648D54")]
	private static extern int ovrLipSyncDll_DestroyContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1648DD4", Offset = "0x1648DD4", VA = "0x1648DD4")]
	private static extern int ovrLipSyncDll_ResetContext(uint context);

	[PreserveSig]
	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x1648E54", Offset = "0x1648E54", VA = "0x1648E54")]
	private static extern int ovrLipSyncDll_SendSignal(uint context, Signals signal, int arg1, int arg2);

	[PreserveSig]
	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1648EFC", Offset = "0x1648EFC", VA = "0x1648EFC")]
	private static extern int ovrLipSyncDll_ProcessFrameEx(uint context, IntPtr audioBuffer, uint bufferSize, AudioDataType dataType, ref int frameNumber, ref int frameDelay, float[] visemes, int visemeCount, ref float laughterScore, float[] laughterCategories, int laughterCategoriesLength);

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1649004", Offset = "0x1649004", VA = "0x1649004")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x164948C", Offset = "0x164948C", VA = "0x164948C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x1649350", Offset = "0x1649350", VA = "0x1649350")]
	public static Result Initialize()
	{
		return default(Result);
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x164956C", Offset = "0x164956C", VA = "0x164956C")]
	public static Result Initialize(int sampleRate, int bufferSize)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x1649680", Offset = "0x1649680", VA = "0x1649680")]
	public static void Shutdown()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x16496F0", Offset = "0x16496F0", VA = "0x16496F0")]
	public static Result IsInitialized()
	{
		return default(Result);
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1649758", Offset = "0x1649758", VA = "0x1649758")]
	public static Result CreateContext(ref uint context, ContextProviders provider, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x164987C", Offset = "0x164987C", VA = "0x164987C")]
	public static Result CreateContextWithModelFile(ref uint context, ContextProviders provider, string modelPath, int sampleRate = 0, bool enableAcceleration = false)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x16499B4", Offset = "0x16499B4", VA = "0x16499B4")]
	public static Result DestroyContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x1649A94", Offset = "0x1649A94", VA = "0x1649A94")]
	public static Result ResetContext(uint context)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1649B74", Offset = "0x1649B74", VA = "0x1649B74")]
	public static Result SendSignal(uint context, Signals signal, int arg1, int arg2)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x1649C78", Offset = "0x1649C78", VA = "0x1649C78")]
	public static Result ProcessFrame(uint context, float[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1649E1C", Offset = "0x1649E1C", VA = "0x1649E1C")]
	public static Result ProcessFrame(uint context, short[] audioBuffer, Frame frame, bool stereo = true)
	{
		return default(Result);
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x1649FB8", Offset = "0x1649FB8", VA = "0x1649FB8")]
	public OVRLipSync()
	{
	}
}
[Token(Token = "0x2000084")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB6C24", Offset = "0xCB6C24")]
public class OVRLipSyncContext : OVRLipSyncContextBase
{
	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC02B4", Offset = "0xCC02B4")]
	public bool enableKeyboardInput;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC02EC", Offset = "0xCC02EC")]
	public bool enableTouchInput;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0324", Offset = "0xCC0324")]
	public bool audioLoopback;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC035C", Offset = "0xCC035C")]
	public KeyCode loopbackKey;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0394", Offset = "0xCC0394")]
	public bool showVisemes;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC03CC", Offset = "0xCC03CC")]
	public KeyCode debugVisemesKey;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0404", Offset = "0xCC0404")]
	public bool skipAudioSource;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC043C", Offset = "0xCC043C")]
	public float gain;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool hasDebugConsole;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public KeyCode debugLaughterKey;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool showLaughter;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float laughterScore;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x164A250", Offset = "0x164A250", VA = "0x164A250")]
	private void Start()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x164A44C", Offset = "0x164A44C", VA = "0x164A44C")]
	private void HandleKeyboard()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x164A998", Offset = "0x164A998", VA = "0x164A998")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x164AC44", Offset = "0x164AC44", VA = "0x164AC44")]
	public void PreprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x164ACA8", Offset = "0x164ACA8", VA = "0x164ACA8")]
	public void PostprocessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x164AD14", Offset = "0x164AD14", VA = "0x164AD14")]
	public void ProcessAudioSamplesRaw(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x164AEB8", Offset = "0x164AEB8", VA = "0x164AEB8")]
	public void ProcessAudioSamplesRaw(short[] data, int channels)
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x164B05C", Offset = "0x164B05C", VA = "0x164B05C")]
	public void ProcessAudioSamples(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x164B190", Offset = "0x164B190", VA = "0x164B190")]
	private void OnAudioFilterRead(float[] data, int channels)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x164A9DC", Offset = "0x164A9DC", VA = "0x164A9DC")]
	private void DebugShowVisemesAndLaughter()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x164A75C", Offset = "0x164A75C", VA = "0x164A75C")]
	private void ToggleAudioLoopback()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x164B1A0", Offset = "0x164B1A0", VA = "0x164B1A0")]
	private void LocalTouchEventCallback(OVRTouchpad.TouchEvent touchEvent)
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x164B2CC", Offset = "0x164B2CC", VA = "0x164B2CC")]
	public OVRLipSyncContext()
	{
	}
}
[Token(Token = "0x2000085")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB6C88", Offset = "0xCB6C88")]
public class OVRLipSyncContextBase : MonoBehaviour
{
	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0474", Offset = "0xCC0474")]
	public OVRLipSync.ContextProviders provider;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC04AC", Offset = "0xCC04AC")]
	public bool enableAcceleration;

	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRLipSync.Frame frame;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint context;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _smoothing;

	[Token(Token = "0x1700000F")]
	public int Smoothing
	{
		[Token(Token = "0x60001EF")]
		[Address(RVA = "0x164B458", Offset = "0x164B458", VA = "0x164B458")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60001EE")]
		[Address(RVA = "0x164B36C", Offset = "0x164B36C", VA = "0x164B36C")]
		set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public uint Context
	{
		[Token(Token = "0x60001F0")]
		[Address(RVA = "0x164B460", Offset = "0x164B460", VA = "0x164B460")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000011")]
	protected OVRLipSync.Frame Frame
	{
		[Token(Token = "0x60001F1")]
		[Address(RVA = "0x164B468", Offset = "0x164B468", VA = "0x164B468")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x164B470", Offset = "0x164B470", VA = "0x164B470")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x164B618", Offset = "0x164B618", VA = "0x164B618")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x164B73C", Offset = "0x164B73C", VA = "0x164B73C")]
	public OVRLipSync.Frame GetCurrentPhonemeFrame()
	{
		return null;
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x164B744", Offset = "0x164B744", VA = "0x164B744")]
	public void SetVisemeBlend(int viseme, int amount)
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x164B838", Offset = "0x164B838", VA = "0x164B838")]
	public void SetLaughterBlend(int amount)
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x164B900", Offset = "0x164B900", VA = "0x164B900")]
	public OVRLipSync.Result ResetContext()
	{
		return default(OVRLipSync.Result);
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x164B2F0", Offset = "0x164B2F0", VA = "0x164B2F0")]
	public OVRLipSyncContextBase()
	{
	}
}
[Token(Token = "0x2000086")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB6CEC", Offset = "0xCB6CEC")]
public class OVRLipSyncContextCanned : OVRLipSyncContextBase
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC04E4", Offset = "0xCC04E4")]
	public OVRLipSyncSequence currentSequence;

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x164B978", Offset = "0x164B978", VA = "0x164B978")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x164BAE8", Offset = "0x164BAE8", VA = "0x164BAE8")]
	public OVRLipSyncContextCanned()
	{
	}
}
[Token(Token = "0x2000087")]
public class OVRLipSyncContextMorphTarget : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC051C", Offset = "0xCC051C")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0554", Offset = "0xCC0554")]
	public int[] visemeToBlendTargets;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC058C", Offset = "0xCC058C")]
	public bool enableVisemeTestKeys;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC05C4", Offset = "0xCC05C4")]
	public KeyCode[] visemeTestKeys;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC05FC", Offset = "0xCC05FC")]
	public KeyCode laughterKey;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0634", Offset = "0xCC0634")]
	public int laughterBlendTarget;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC066C", Offset = "0xCC066C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC066C", Offset = "0xCC066C")]
	public float laughterThreshold;

	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC06C0", Offset = "0xCC06C0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC06C0", Offset = "0xCC06C0")]
	public float laughterMultiplier;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC0714", Offset = "0xCC0714")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0714", Offset = "0xCC0714")]
	public int smoothAmount;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x164BAEC", Offset = "0x164BAEC", VA = "0x164BAEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x164BC40", Offset = "0x164BC40", VA = "0x164BC40")]
	private void Update()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x164BEF0", Offset = "0x164BEF0", VA = "0x164BEF0")]
	private void CheckForKeys()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x164BD4C", Offset = "0x164BD4C", VA = "0x164BD4C")]
	private void SetVisemeToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x164BE00", Offset = "0x164BE00", VA = "0x164BE00")]
	private void SetLaughterToMorphTarget(OVRLipSync.Frame frame)
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x164BFC0", Offset = "0x164BFC0", VA = "0x164BFC0")]
	private void CheckVisemeKey(KeyCode key, int viseme, int amount)
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x164C084", Offset = "0x164C084", VA = "0x164C084")]
	private void CheckLaughterKey()
	{
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x164C0EC", Offset = "0x164C0EC", VA = "0x164C0EC")]
	public OVRLipSyncContextMorphTarget()
	{
	}
}
[Token(Token = "0x2000088")]
public class OVRLipSyncContextTextureFlip : MonoBehaviour
{
	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material material;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC076C", Offset = "0xCC076C")]
	[AttributeAttribute(Name = "OVRNamedArrayAttribute", RVA = "0xCC076C", Offset = "0xCC076C")]
	public Texture[] Textures;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC099C", Offset = "0xCC099C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC099C", Offset = "0xCC099C")]
	public int smoothAmount;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private OVRLipSyncContextBase lipsyncContext;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVRLipSync.Frame oldFrame;

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x164C1FC", Offset = "0x164C1FC", VA = "0x164C1FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x164C360", Offset = "0x164C360", VA = "0x164C360")]
	private void Update()
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x164C508", Offset = "0x164C508", VA = "0x164C508")]
	private void SetVisemeToTexture()
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x164C62C", Offset = "0x164C62C", VA = "0x164C62C")]
	public OVRLipSyncContextTextureFlip()
	{
	}
}
[Token(Token = "0x2000089")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB6D50", Offset = "0xCB6D50")]
public class OVRLipSyncMicInput : MonoBehaviour
{
	[Token(Token = "0x2000546")]
	public enum micActivation
	{
		[Token(Token = "0x4001A74")]
		HoldToSpeak,
		[Token(Token = "0x4001A75")]
		PushToSpeak,
		[Token(Token = "0x4001A76")]
		ConstantSpeak
	}

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC09F4", Offset = "0xCC09F4")]
	public AudioSource audioSource;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0A2C", Offset = "0xCC0A2C")]
	public bool enableMicSelectionGUI;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0A64", Offset = "0xCC0A64")]
	public KeyCode micSelectionGUIKey;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC0A9C", Offset = "0xCC0A9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0A9C", Offset = "0xCC0A9C")]
	private float micInputVolume;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0B04", Offset = "0xCC0B04")]
	private int micFrequency;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0B50", Offset = "0xCC0B50")]
	public micActivation micControl;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0B88", Offset = "0xCC0B88")]
	public KeyCode micActivationKey;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0BC0", Offset = "0xCC0BC0")]
	public string selectedDevice;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool micSelected;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int minFreq;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int maxFreq;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool focused;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool initialized;

	[Token(Token = "0x17000012")]
	public float MicFrequency
	{
		[Token(Token = "0x6000207")]
		[Address(RVA = "0x164D07C", Offset = "0x164D07C", VA = "0x164D07C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000208")]
		[Address(RVA = "0x164D088", Offset = "0x164D088", VA = "0x164D088")]
		set
		{
		}
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x164D114", Offset = "0x164D114", VA = "0x164D114")]
	private void Awake()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x164D1DC", Offset = "0x164D1DC", VA = "0x164D1DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x164D228", Offset = "0x164D228", VA = "0x164D228")]
	private void InitializeMicrophone()
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x164D378", Offset = "0x164D378", VA = "0x164D378")]
	private void Update()
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x164D7B0", Offset = "0x164D7B0", VA = "0x164D7B0")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x164D7C4", Offset = "0x164D7C4", VA = "0x164D7C4")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x164D7DC", Offset = "0x164D7DC", VA = "0x164D7DC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x164D7E0", Offset = "0x164D7E0", VA = "0x164D7E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x164D858", Offset = "0x164D858", VA = "0x164D858")]
	public void MicDeviceGUI(float left, float top, float width, float height, float buttonSpaceTop, float buttonSpaceLeft)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x164D2BC", Offset = "0x164D2BC", VA = "0x164D2BC")]
	public void GetMicCaps()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x164D61C", Offset = "0x164D61C", VA = "0x164D61C")]
	public void StartMicrophone()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x164D4D4", Offset = "0x164D4D4", VA = "0x164D4D4")]
	public void StopMicrophone()
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x164DA50", Offset = "0x164DA50", VA = "0x164DA50")]
	private float GetAveragedVolume()
	{
		return default(float);
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x164DA58", Offset = "0x164DA58", VA = "0x164DA58")]
	public OVRLipSyncMicInput()
	{
	}
}
[Serializable]
[Token(Token = "0x200008A")]
public class OVRLipSyncSequence : ScriptableObject
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<OVRLipSync.Frame> entries;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float length;

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x164BA44", Offset = "0x164BA44", VA = "0x164BA44")]
	public OVRLipSync.Frame GetFrameAtTime(float time)
	{
		return null;
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x164DA88", Offset = "0x164DA88", VA = "0x164DA88")]
	public OVRLipSyncSequence()
	{
	}
}
[Token(Token = "0x200008B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x2000547")]
	public delegate void OnClick();

	[Token(Token = "0x2000548")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x2000549")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x200054A")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x200054B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEEF8", Offset = "0xCBEEF8")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001FE5")]
		[Address(RVA = "0xF74774", Offset = "0xF74774", VA = "0xF74774")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6001FE6")]
		[Address(RVA = "0xF75188", Offset = "0xF75188", VA = "0xF75188")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x200054C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEF08", Offset = "0xCBEF08")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001FE7")]
		[Address(RVA = "0xF749F4", Offset = "0xF749F4", VA = "0xF749F4")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001FE8")]
		[Address(RVA = "0xF753AC", Offset = "0xF753AC", VA = "0xF753AC")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x200054D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEF18", Offset = "0xCBEF18")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001FE9")]
		[Address(RVA = "0xF74C2C", Offset = "0xF74C2C", VA = "0xF74C2C")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001FEA")]
		[Address(RVA = "0xF75630", Offset = "0xF75630", VA = "0xF75630")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200054E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEF28", Offset = "0xCBEF28")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001FEB")]
		[Address(RVA = "0xF74DE0", Offset = "0xF74DE0", VA = "0xF74DE0")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001FEC")]
		[Address(RVA = "0xF75A08", Offset = "0xF75A08", VA = "0xF75A08")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x200054F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEF38", Offset = "0xCBEF38")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001FED")]
		[Address(RVA = "0xF75054", Offset = "0xF75054", VA = "0xF75054")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001FEE")]
		[Address(RVA = "0xF75A28", Offset = "0xF75A28", VA = "0xF75A28")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x4000317")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x4000318")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x4000319")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x4000326")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x4000327")]
	private const float marginH = 16f;

	[Token(Token = "0x4000328")]
	private const float marginV = 16f;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xF73640", Offset = "0xF73640", VA = "0xF73640")]
	public void Awake()
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xF73AC0", Offset = "0xF73AC0", VA = "0xF73AC0")]
	public void Show()
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xF740A0", Offset = "0xF740A0", VA = "0xF740A0")]
	public void Hide()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xF73E4C", Offset = "0xF73E4C", VA = "0xF73E4C")]
	private void Relayout()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xF74248", Offset = "0xF74248", VA = "0xF74248")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xF74540", Offset = "0xF74540", VA = "0xF74540")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xF7477C", Offset = "0xF7477C", VA = "0xF7477C")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xF74860", Offset = "0xF74860", VA = "0xF74860")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xF749FC", Offset = "0xF749FC", VA = "0xF749FC")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xF74A98", Offset = "0xF74A98", VA = "0xF74A98")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xF74C34", Offset = "0xF74C34", VA = "0xF74C34")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xF74DE8", Offset = "0xF74DE8", VA = "0xF74DE8")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xF7505C", Offset = "0xF7505C", VA = "0xF7505C")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xF7510C", Offset = "0xF7510C", VA = "0xF7510C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200008C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xF3FE38", Offset = "0xF3FE38", VA = "0xF3FE38")]
	private void Start()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xF3FED4", Offset = "0xF3FED4", VA = "0xF3FED4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xF3FF9C", Offset = "0xF3FF9C", VA = "0xF3FF9C")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xF3FFD8", Offset = "0xF3FFD8", VA = "0xF3FFD8")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200008D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x2000550")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001A80")]
		On,
		[Token(Token = "0x4001A81")]
		Off,
		[Token(Token = "0x4001A82")]
		OnWhenHitTarget
	}

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x17000013")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x600022C")]
		[Address(RVA = "0xFC172C", Offset = "0xFC172C", VA = "0xFC172C")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x600022B")]
		[Address(RVA = "0xFC16E8", Offset = "0xFC16E8", VA = "0xFC16E8")]
		set
		{
		}
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xFC1734", Offset = "0xFC1734", VA = "0xFC1734")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xFC1794", Offset = "0xFC1794", VA = "0xFC1794")]
	private void Start()
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xFC18AC", Offset = "0xFC18AC", VA = "0xFC18AC", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xFC18C8", Offset = "0xFC18C8", VA = "0xFC18C8", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xFC191C", Offset = "0xFC191C", VA = "0xFC191C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xFC1B78", Offset = "0xFC1B78", VA = "0xFC1B78")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xFC1C8C", Offset = "0xFC1C8C", VA = "0xFC1C8C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xFC1D20", Offset = "0xFC1D20", VA = "0xFC1D20")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xFC1DF0", Offset = "0xFC1DF0", VA = "0xFC1DF0")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xFC1EA8", Offset = "0xFC1EA8", VA = "0xFC1EA8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xFC1F74", Offset = "0xFC1F74", VA = "0xFC1F74")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200008E")]
public class BoundsLockedObject : MonoBehaviour
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 m_initialOffset;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_playerOrigin;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Bounds? m_bounds;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xF69014", Offset = "0xF69014", VA = "0xF69014")]
	private void Start()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xF69220", Offset = "0xF69220", VA = "0xF69220")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xF696C0", Offset = "0xF696C0", VA = "0xF696C0")]
	public BoundsLockedObject()
	{
	}
}
[Token(Token = "0x200008F")]
public class GuardianBoundaryDisplay : MonoBehaviour
{
	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GuardianBoundaryEnforcer m_enforcer;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRBoundary.BoundaryType m_boundaryType;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_errorDisplay;

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xF3DD00", Offset = "0xF3DD00", VA = "0xF3DD00")]
	private void Start()
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xF3DE34", Offset = "0xF3DE34", VA = "0xF3DE34")]
	private void RefreshDisplay()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xF3E084", Offset = "0xF3E084", VA = "0xF3E084")]
	public GuardianBoundaryDisplay()
	{
	}
}
[Token(Token = "0x2000090")]
public class GuardianBoundaryEnforcer : MonoBehaviour
{
	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_AllowRecenter;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig m_mainCamera;

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_originalTrackerOrientation;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_framecount;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion m_orientToOriginalForward;

	[Token(Token = "0x17000014")]
	public Quaternion OrientToOriginalForward
	{
		[Token(Token = "0x6000240")]
		[Address(RVA = "0xF3E130", Offset = "0xF3E130", VA = "0xF3E130")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x14000001")]
	public event System.Action TrackingChanged
	{
		[Token(Token = "0x600023E")]
		[Address(RVA = "0xF3DD90", Offset = "0xF3DD90", VA = "0xF3DD90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEF08", Offset = "0xCCEF08")]
		add
		{
		}
		[Token(Token = "0x600023F")]
		[Address(RVA = "0xF3E08C", Offset = "0xF3E08C", VA = "0xF3E08C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEF18", Offset = "0xCCEF18")]
		remove
		{
		}
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xF3E13C", Offset = "0xF3E13C", VA = "0xF3E13C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xF3E294", Offset = "0xF3E294", VA = "0xF3E294")]
	private void Update()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xF3E408", Offset = "0xF3E408", VA = "0xF3E408")]
	private void Recentered()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xF3E410", Offset = "0xF3E410", VA = "0xF3E410")]
	public GuardianBoundaryEnforcer()
	{
	}
}
[Token(Token = "0x2000091")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0CA8", Offset = "0xCC0CA8")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0CE0", Offset = "0xCC0CE0")]
	public bool EnableCollision;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask CollideLayers;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0D18", Offset = "0xCC0D18")]
	public float MaxFade;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0D50", Offset = "0xCC0D50")]
	public float FadeMinDistance;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float PreferredHeight;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0D88", Offset = "0xCC0D88")]
	public float FadeMaxDistance;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly System.Action _cameraUpdateAction;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly System.Action _preCharacterMovementAction;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CapsuleCollider _character;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xF6B2D0", Offset = "0xF6B2D0", VA = "0xF6B2D0")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xF6B360", Offset = "0xF6B360", VA = "0xF6B360")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xF6B3E4", Offset = "0xF6B3E4", VA = "0xF6B3E4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xF6B3E8", Offset = "0xF6B3E8", VA = "0xF6B3E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xF6B40C", Offset = "0xF6B40C", VA = "0xF6B40C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xF6B430", Offset = "0xF6B430", VA = "0xF6B430")]
	private void CameraUpdate()
	{
	}
}
[Token(Token = "0x2000092")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xFC938C", Offset = "0xFC938C", VA = "0xFC938C")]
	private void Start()
	{
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xFC9450", Offset = "0xFC9450", VA = "0xFC9450")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000093")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x2000551")]
	public enum States
	{
		[Token(Token = "0x4001A84")]
		Ready,
		[Token(Token = "0x4001A85")]
		Aim,
		[Token(Token = "0x4001A86")]
		CancelAim,
		[Token(Token = "0x4001A87")]
		PreTeleport,
		[Token(Token = "0x4001A88")]
		CancelTeleport,
		[Token(Token = "0x4001A89")]
		Teleporting,
		[Token(Token = "0x4001A8A")]
		PostTeleport
	}

	[Token(Token = "0x2000552")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001A8C")]
		None,
		[Token(Token = "0x4001A8D")]
		Aim,
		[Token(Token = "0x4001A8E")]
		PreTeleport,
		[Token(Token = "0x4001A8F")]
		Teleport
	}

	[Token(Token = "0x2000553")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001A91")]
		Point,
		[Token(Token = "0x4001A92")]
		Sphere,
		[Token(Token = "0x4001A93")]
		Capsule
	}

	[Token(Token = "0x2000554")]
	public class AimData
	{
		[Token(Token = "0x4001A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCE010", Offset = "0xCCE010")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x17000328")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001FF0")]
			[Address(RVA = "0xFCC738", Offset = "0xFCC738", VA = "0xFCC738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3F04", Offset = "0xCD3F04")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001FF1")]
			[Address(RVA = "0xFCC740", Offset = "0xFCC740", VA = "0xFCC740")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3F14", Offset = "0xCD3F14")]
			private set
			{
			}
		}

		[Token(Token = "0x6001FEF")]
		[Address(RVA = "0xFCC6BC", Offset = "0xFCC6BC", VA = "0xFCC6BC")]
		public AimData()
		{
		}

		[Token(Token = "0x6001FF2")]
		[Address(RVA = "0xFCC748", Offset = "0xFCC748", VA = "0xFCC748")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x2000555")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEF48", Offset = "0xCBEF48")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000329")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FF6")]
			[Address(RVA = "0xFCC4FC", Offset = "0xFCC4FC", VA = "0xFCC4FC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FF8")]
			[Address(RVA = "0xFCC564", Offset = "0xFCC564", VA = "0xFCC564", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF3")]
		[Address(RVA = "0xFCA944", Offset = "0xFCA944", VA = "0xFCA944")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001FF4")]
		[Address(RVA = "0xFCC3F4", Offset = "0xFCC3F4", VA = "0xFCC3F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FF5")]
		[Address(RVA = "0xFCC3F8", Offset = "0xFCC3F8", VA = "0xFCC3F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FF7")]
		[Address(RVA = "0xFCC504", Offset = "0xFCC504", VA = "0xFCC504", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000556")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEF58", Offset = "0xCBEF58")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700032B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001FFC")]
			[Address(RVA = "0xFCBE80", Offset = "0xFCBE80", VA = "0xFCBE80", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001FFE")]
			[Address(RVA = "0xFCBEE8", Offset = "0xFCBEE8", VA = "0xFCBEE8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FF9")]
		[Address(RVA = "0xFCAE38", Offset = "0xFCAE38", VA = "0xFCAE38")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001FFA")]
		[Address(RVA = "0xFCBD30", Offset = "0xFCBD30", VA = "0xFCBD30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001FFB")]
		[Address(RVA = "0xFCBD34", Offset = "0xFCBD34", VA = "0xFCBD34", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001FFD")]
		[Address(RVA = "0xFCBE88", Offset = "0xFCBE88", VA = "0xFCBE88", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000557")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEF68", Offset = "0xCBEF68")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700032D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002002")]
			[Address(RVA = "0xFCBFA0", Offset = "0xFCBFA0", VA = "0xFCBFA0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700032E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002004")]
			[Address(RVA = "0xFCC008", Offset = "0xFCC008", VA = "0xFCC008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001FFF")]
		[Address(RVA = "0xFCB028", Offset = "0xFCB028", VA = "0xFCB028")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6002000")]
		[Address(RVA = "0xFCBEF0", Offset = "0xFCBEF0", VA = "0xFCBEF0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002001")]
		[Address(RVA = "0xFCBEF4", Offset = "0xFCBEF4", VA = "0xFCBEF4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002003")]
		[Address(RVA = "0xFCBFA8", Offset = "0xFCBFA8", VA = "0xFCBFA8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000558")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEF78", Offset = "0xCBEF78")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x1700032F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002008")]
			[Address(RVA = "0xFCC384", Offset = "0xFCC384", VA = "0xFCC384", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000330")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600200A")]
			[Address(RVA = "0xFCC3EC", Offset = "0xFCC3EC", VA = "0xFCC3EC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002005")]
		[Address(RVA = "0xFCB218", Offset = "0xFCB218", VA = "0xFCB218")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6002006")]
		[Address(RVA = "0xFCC2A0", Offset = "0xFCC2A0", VA = "0xFCC2A0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002007")]
		[Address(RVA = "0xFCC2A4", Offset = "0xFCC2A4", VA = "0xFCC2A4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002009")]
		[Address(RVA = "0xFCC38C", Offset = "0xFCC38C", VA = "0xFCC38C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000559")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEF88", Offset = "0xCBEF88")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000331")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600200E")]
			[Address(RVA = "0xFCC0C0", Offset = "0xFCC0C0", VA = "0xFCC0C0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000332")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002010")]
			[Address(RVA = "0xFCC128", Offset = "0xFCC128", VA = "0xFCC128", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600200B")]
		[Address(RVA = "0xFCB408", Offset = "0xFCB408", VA = "0xFCB408")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x600200C")]
		[Address(RVA = "0xFCC010", Offset = "0xFCC010", VA = "0xFCC010", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600200D")]
		[Address(RVA = "0xFCC014", Offset = "0xFCC014", VA = "0xFCC014", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600200F")]
		[Address(RVA = "0xFCC0C8", Offset = "0xFCC0C8", VA = "0xFCC0C8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEF98", Offset = "0xCBEF98")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000333")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002014")]
			[Address(RVA = "0xFCC64C", Offset = "0xFCC64C", VA = "0xFCC64C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000334")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002016")]
			[Address(RVA = "0xFCC6B4", Offset = "0xFCC6B4", VA = "0xFCC6B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002011")]
		[Address(RVA = "0xFCB5F8", Offset = "0xFCB5F8", VA = "0xFCB5F8")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6002012")]
		[Address(RVA = "0xFCC56C", Offset = "0xFCC56C", VA = "0xFCC56C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002013")]
		[Address(RVA = "0xFCC570", Offset = "0xFCC570", VA = "0xFCC570", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002015")]
		[Address(RVA = "0xFCC654", Offset = "0xFCC654", VA = "0xFCC654", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055B")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEFA8", Offset = "0xCBEFA8")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x17000335")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600201A")]
			[Address(RVA = "0xFCC230", Offset = "0xFCC230", VA = "0xFCC230", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000336")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600201C")]
			[Address(RVA = "0xFCC298", Offset = "0xFCC298", VA = "0xFCC298", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002017")]
		[Address(RVA = "0xFCB7E8", Offset = "0xFCB7E8", VA = "0xFCB7E8")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6002018")]
		[Address(RVA = "0xFCC130", Offset = "0xFCC130", VA = "0xFCC130", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002019")]
		[Address(RVA = "0xFCC134", Offset = "0xFCC134", VA = "0xFCC134", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600201B")]
		[Address(RVA = "0xFCC238", Offset = "0xFCC238", VA = "0xFCC238", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0DC0", Offset = "0xCC0DC0")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0DF8", Offset = "0xCC0DF8")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0E30", Offset = "0xCC0E30")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0E68", Offset = "0xCC0E68")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0EA0", Offset = "0xCC0EA0")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0ED8", Offset = "0xCC0ED8")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0F10", Offset = "0xCC0F10")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0F48", Offset = "0xCC0F48")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC0F80", Offset = "0xCC0F80")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0F90", Offset = "0xCC0F90")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC0FC8", Offset = "0xCC0FC8")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC1010", Offset = "0xCC1010")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1020", Offset = "0xCC1020")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1058", Offset = "0xCC1058")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1090", Offset = "0xCC1090")]
	public float AimCollisionRadius;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC10C8", Offset = "0xCC10C8")]
	public float AimCollisionHeight;

	[Token(Token = "0x17000015")]
	public States CurrentState
	{
		[Token(Token = "0x600024F")]
		[Address(RVA = "0xFC9E40", Offset = "0xFC9E40", VA = "0xFC9E40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEF28", Offset = "0xCCEF28")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x6000250")]
		[Address(RVA = "0xFC9E48", Offset = "0xFC9E48", VA = "0xFC9E48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEF38", Offset = "0xCCEF38")]
		private set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xFCA078", Offset = "0xFCA078", VA = "0xFCA078")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000017")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000255")]
		[Address(RVA = "0xFCA0A0", Offset = "0xFCA0A0", VA = "0xFCA0A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEF68", Offset = "0xCCEF68")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000256")]
		[Address(RVA = "0xFCA0A8", Offset = "0xFCA0A8", VA = "0xFCA0A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEF78", Offset = "0xCCEF78")]
		private set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x6000251")]
		[Address(RVA = "0xFC9E50", Offset = "0xFC9E50", VA = "0xFC9E50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEF48", Offset = "0xCCEF48")]
		add
		{
		}
		[Token(Token = "0x6000252")]
		[Address(RVA = "0xFC9EF4", Offset = "0xFC9EF4", VA = "0xFC9EF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEF58", Offset = "0xCCEF58")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event System.Action EnterStateReady
	{
		[Token(Token = "0x6000260")]
		[Address(RVA = "0xFCA7FC", Offset = "0xFCA7FC", VA = "0xFCA7FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEFC0", Offset = "0xCCEFC0")]
		add
		{
		}
		[Token(Token = "0x6000261")]
		[Address(RVA = "0xFCA8A0", Offset = "0xFCA8A0", VA = "0xFCA8A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEFD0", Offset = "0xCCEFD0")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event System.Action EnterStateAim
	{
		[Token(Token = "0x6000263")]
		[Address(RVA = "0xFCA970", Offset = "0xFCA970", VA = "0xFCA970")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0044", Offset = "0xCD0044")]
		add
		{
		}
		[Token(Token = "0x6000264")]
		[Address(RVA = "0xFCAA14", Offset = "0xFCAA14", VA = "0xFCAA14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0054", Offset = "0xCD0054")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000265")]
		[Address(RVA = "0xFCAAB8", Offset = "0xFCAAB8", VA = "0xFCAAB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0064", Offset = "0xCD0064")]
		add
		{
		}
		[Token(Token = "0x6000266")]
		[Address(RVA = "0xFCAB5C", Offset = "0xFCAB5C", VA = "0xFCAB5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0074", Offset = "0xCD0074")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event System.Action ExitStateAim
	{
		[Token(Token = "0x6000268")]
		[Address(RVA = "0xFCAC74", Offset = "0xFCAC74", VA = "0xFCAC74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0084", Offset = "0xCD0084")]
		add
		{
		}
		[Token(Token = "0x6000269")]
		[Address(RVA = "0xFCAD18", Offset = "0xFCAD18", VA = "0xFCAD18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0094", Offset = "0xCD0094")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event System.Action EnterStateCancelAim
	{
		[Token(Token = "0x600026B")]
		[Address(RVA = "0xFCAE64", Offset = "0xFCAE64", VA = "0xFCAE64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0108", Offset = "0xCD0108")]
		add
		{
		}
		[Token(Token = "0x600026C")]
		[Address(RVA = "0xFCAF08", Offset = "0xFCAF08", VA = "0xFCAF08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0118", Offset = "0xCD0118")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event System.Action EnterStatePreTeleport
	{
		[Token(Token = "0x600026E")]
		[Address(RVA = "0xFCB054", Offset = "0xFCB054", VA = "0xFCB054")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD018C", Offset = "0xCD018C")]
		add
		{
		}
		[Token(Token = "0x600026F")]
		[Address(RVA = "0xFCB0F8", Offset = "0xFCB0F8", VA = "0xFCB0F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD019C", Offset = "0xCD019C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event System.Action EnterStateCancelTeleport
	{
		[Token(Token = "0x6000271")]
		[Address(RVA = "0xFCB244", Offset = "0xFCB244", VA = "0xFCB244")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0210", Offset = "0xCD0210")]
		add
		{
		}
		[Token(Token = "0x6000272")]
		[Address(RVA = "0xFCB2E8", Offset = "0xFCB2E8", VA = "0xFCB2E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0220", Offset = "0xCD0220")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event System.Action EnterStateTeleporting
	{
		[Token(Token = "0x6000274")]
		[Address(RVA = "0xFCB434", Offset = "0xFCB434", VA = "0xFCB434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0294", Offset = "0xCD0294")]
		add
		{
		}
		[Token(Token = "0x6000275")]
		[Address(RVA = "0xFCB4D8", Offset = "0xFCB4D8", VA = "0xFCB4D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD02A4", Offset = "0xCD02A4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event System.Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xFCB624", Offset = "0xFCB624", VA = "0xFCB624")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0318", Offset = "0xCD0318")]
		add
		{
		}
		[Token(Token = "0x6000278")]
		[Address(RVA = "0xFCB6C8", Offset = "0xFCB6C8", VA = "0xFCB6C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0328", Offset = "0xCD0328")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000C")]
	public event System.Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x600027A")]
		[Address(RVA = "0xFCB814", Offset = "0xFCB814", VA = "0xFCB814")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD039C", Offset = "0xCD039C")]
		add
		{
		}
		[Token(Token = "0x600027B")]
		[Address(RVA = "0xFCB8B8", Offset = "0xFCB8B8", VA = "0xFCB8B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD03AC", Offset = "0xCD03AC")]
		remove
		{
		}
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xFC9B10", Offset = "0xFC9B10", VA = "0xFC9B10")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xFC9B34", Offset = "0xFC9B34", VA = "0xFC9B34")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xFC9F98", Offset = "0xFC9F98", VA = "0xFC9F98")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xFCA0B0", Offset = "0xFCA0B0", VA = "0xFCA0B0")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, out RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xFCA408", Offset = "0xFCA408", VA = "0xFCA408")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCCEF88", Offset = "0xCCEF88")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xFCA4C0", Offset = "0xFCA4C0", VA = "0xFCA4C0")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xFCA5B8", Offset = "0xFCA5B8", VA = "0xFCA5B8")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xFCA5D4", Offset = "0xFCA5D4", VA = "0xFCA5D4")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xFCA69C", Offset = "0xFCA69C", VA = "0xFCA69C")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xFCA6E0", Offset = "0xFCA6E0", VA = "0xFCA6E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xFCA748", Offset = "0xFCA748", VA = "0xFCA748", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xFCA7F4", Offset = "0xFCA7F4", VA = "0xFCA7F4", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xFCA778", Offset = "0xFCA778", VA = "0xFCA778")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCCEFE0", Offset = "0xCCEFE0")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xFCAC00", Offset = "0xFCAC00", VA = "0xFCAC00")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xFCADBC", Offset = "0xFCADBC", VA = "0xFCADBC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD00A4", Offset = "0xCD00A4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xFCAFAC", Offset = "0xFCAFAC", VA = "0xFCAFAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0128", Offset = "0xCD0128")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xFCB19C", Offset = "0xFCB19C", VA = "0xFCB19C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD01AC", Offset = "0xCD01AC")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xFCB38C", Offset = "0xFCB38C", VA = "0xFCB38C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0230", Offset = "0xCD0230")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xFCB57C", Offset = "0xFCB57C", VA = "0xFCB57C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD02B4", Offset = "0xCD02B4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xFCB76C", Offset = "0xFCB76C", VA = "0xFCB76C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0338", Offset = "0xCD0338")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xFCB95C", Offset = "0xFCB95C", VA = "0xFCB95C")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xFCBAA0", Offset = "0xFCBAA0", VA = "0xFCBAA0")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xFCBAD4", Offset = "0xFCBAD4", VA = "0xFCBAD4")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xFCBBF4", Offset = "0xFCBBF4", VA = "0xFCBBF4")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xFCBD20", Offset = "0xFCBD20", VA = "0xFCBD20")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000094")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000D")]
	public event System.Action CameraUpdated
	{
		[Token(Token = "0x6000281")]
		[Address(RVA = "0x102AC08", Offset = "0x102AC08", VA = "0x102AC08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD03BC", Offset = "0xCD03BC")]
		add
		{
		}
		[Token(Token = "0x6000282")]
		[Address(RVA = "0x102ACAC", Offset = "0x102ACAC", VA = "0x102ACAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD03CC", Offset = "0xCD03CC")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event System.Action PreCharacterMove
	{
		[Token(Token = "0x6000283")]
		[Address(RVA = "0x102AD50", Offset = "0x102AD50", VA = "0x102AD50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD03DC", Offset = "0xCD03DC")]
		add
		{
		}
		[Token(Token = "0x6000284")]
		[Address(RVA = "0x102ADF4", Offset = "0x102ADF4", VA = "0x102ADF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD03EC", Offset = "0xCD03EC")]
		remove
		{
		}
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x102AE98", Offset = "0x102AE98", VA = "0x102AE98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0x102AF70", Offset = "0x102AF70", VA = "0x102AF70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x102AF74", Offset = "0x102AF74", VA = "0x102AF74")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x102AFE8", Offset = "0x102AFE8", VA = "0x102AFE8")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x102B158", Offset = "0x102B158", VA = "0x102B158")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x102B43C", Offset = "0x102B43C", VA = "0x102B43C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x102B62C", Offset = "0x102B62C", VA = "0x102B62C")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000095")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x600028C")]
	[Address(RVA = "0x10799F8", Offset = "0x10799F8", VA = "0x10799F8", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0x1079A9C", Offset = "0x1079A9C", VA = "0x1079A9C", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600028E")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1079B90", Offset = "0x1079B90", VA = "0x1079B90")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000096")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC11C0", Offset = "0xCC11C0")]
	public float Range;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1079BA0", Offset = "0x1079BA0", VA = "0x1079BA0", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1079CFC", Offset = "0x1079CFC", VA = "0x1079CFC")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000097")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC11F8", Offset = "0xCC11F8")]
	public float Range;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1230", Offset = "0xCC1230")]
	public float MinimumElevation;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1268", Offset = "0xCC1268")]
	public float Gravity;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC12A0", Offset = "0xCC12A0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC12A0", Offset = "0xCC12A0")]
	public float AimVelocity;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC12FC", Offset = "0xCC12FC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC12FC", Offset = "0xCC12FC")]
	public float AimStep;

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1079D0C", Offset = "0x1079D0C", VA = "0x1079D0C", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1079F58", Offset = "0x1079F58", VA = "0x1079F58")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000098")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1354", Offset = "0xCC1354")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly System.Action _enterAimStateAction;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly System.Action _exitAimStateAction;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1079F6C", Offset = "0x1079F6C", VA = "0x1079F6C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x107A070", Offset = "0x107A070", VA = "0x107A070")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x107A0A0", Offset = "0x107A0A0", VA = "0x107A0A0")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x107A0D0", Offset = "0x107A0D0", VA = "0x107A0D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x107A178", Offset = "0x107A178", VA = "0x107A178", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x107A1E4", Offset = "0x107A1E4", VA = "0x107A1E4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x107A24C", Offset = "0x107A24C", VA = "0x107A24C")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000099")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC138C", Offset = "0xCC138C")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC139C", Offset = "0xCC139C")]
	public Transform PositionIndicator;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC13D4", Offset = "0xCC13D4")]
	public Transform OrientationIndicator;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC140C", Offset = "0xCC140C")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000018")]
	public bool IsValidDestination
	{
		[Token(Token = "0x600029B")]
		[Address(RVA = "0x107A368", Offset = "0x107A368", VA = "0x107A368")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD03FC", Offset = "0xCD03FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600029C")]
		[Address(RVA = "0x107A370", Offset = "0x107A370", VA = "0x107A370")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD040C", Offset = "0xCD040C")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000F")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x107A528", Offset = "0x107A528", VA = "0x107A528")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD041C", Offset = "0xCD041C")]
		add
		{
		}
		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x107A5CC", Offset = "0x107A5CC", VA = "0x107A5CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD042C", Offset = "0xCD042C")]
		remove
		{
		}
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x107A37C", Offset = "0x107A37C", VA = "0x107A37C")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x107A40C", Offset = "0x107A40C", VA = "0x107A40C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x107A4E4", Offset = "0x107A4E4", VA = "0x107A4E4")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x107A524", Offset = "0x107A524", VA = "0x107A524")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x107A670", Offset = "0x107A670", VA = "0x107A670")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x107A6D8", Offset = "0x107A6D8", VA = "0x107A6D8")]
	public void Recycle()
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x107A6F8", Offset = "0x107A6F8", VA = "0x107A6F8", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x200009A")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x200055C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEFB8", Offset = "0xCBEFB8")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000337")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002020")]
			[Address(RVA = "0x107AE10", Offset = "0x107AE10", VA = "0x107AE10", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000338")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002022")]
			[Address(RVA = "0x107AE78", Offset = "0x107AE78", VA = "0x107AE78", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600201D")]
		[Address(RVA = "0x107AB38", Offset = "0x107AB38", VA = "0x107AB38")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x600201E")]
		[Address(RVA = "0x107AD74", Offset = "0x107AD74", VA = "0x107AD74", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600201F")]
		[Address(RVA = "0x107AD78", Offset = "0x107AD78", VA = "0x107AD78", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002021")]
		[Address(RVA = "0x107AE18", Offset = "0x107AE18", VA = "0x107AE18", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200055D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEFC8", Offset = "0xCBEFC8")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x17000339")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002026")]
			[Address(RVA = "0x107AD04", Offset = "0x107AD04", VA = "0x107AD04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002028")]
			[Address(RVA = "0x107AD6C", Offset = "0x107AD6C", VA = "0x107AD6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002023")]
		[Address(RVA = "0x107ABE0", Offset = "0x107ABE0", VA = "0x107ABE0")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002024")]
		[Address(RVA = "0x107AC64", Offset = "0x107AC64", VA = "0x107AC64", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002025")]
		[Address(RVA = "0x107AC68", Offset = "0x107AC68", VA = "0x107AC68", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002027")]
		[Address(RVA = "0x107AD0C", Offset = "0x107AD0C", VA = "0x107AD0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly System.Action _startReadyAction;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly System.Action _startAimAction;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x107A8D8", Offset = "0x107A8D8", VA = "0x107A8D8")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x107A998", Offset = "0x107A998", VA = "0x107A998", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x107A9F8", Offset = "0x107A9F8", VA = "0x107A9F8", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x107AABC", Offset = "0x107AABC", VA = "0x107AABC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD043C", Offset = "0xCD043C")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x107AB64", Offset = "0x107AB64", VA = "0x107AB64")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD04A0", Offset = "0xCD04A0")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002AB")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x60002AC")]
	public abstract void GetAimData(out Ray aimRay);

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x107AC0C", Offset = "0x107AC0C", VA = "0x107AC0C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0504", Offset = "0xCD0504")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x107AC38", Offset = "0x107AC38", VA = "0x107AC38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0514", Offset = "0xCD0514")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x200009B")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC1454", Offset = "0xCC1454")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1464", Offset = "0xCC1464")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC149C", Offset = "0xCC149C")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC14D4", Offset = "0xCC14D4")]
	public bool FastTeleport;

	[Token(Token = "0x17000019")]
	public Transform Pointer
	{
		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x107AE80", Offset = "0x107AE80", VA = "0x107AE80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0524", Offset = "0xCD0524")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x107AE88", Offset = "0x107AE88", VA = "0x107AE88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0534", Offset = "0xCD0534")]
		private set
		{
		}
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x107AE90", Offset = "0x107AE90", VA = "0x107AE90", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x107AFEC", Offset = "0x107AFEC", VA = "0x107AFEC", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x107B0A4", Offset = "0x107B0A4", VA = "0x107B0A4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x200009C")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x200055E")]
	public enum InputModes
	{
		[Token(Token = "0x4001AB5")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001AB6")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001AB7")]
		ThumbstickTeleport,
		[Token(Token = "0x4001AB8")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x200055F")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001ABA")]
		A,
		[Token(Token = "0x4001ABB")]
		B,
		[Token(Token = "0x4001ABC")]
		LeftTrigger,
		[Token(Token = "0x4001ABD")]
		LeftThumbstick,
		[Token(Token = "0x4001ABE")]
		RightTrigger,
		[Token(Token = "0x4001ABF")]
		RightThumbstick,
		[Token(Token = "0x4001AC0")]
		X,
		[Token(Token = "0x4001AC1")]
		Y
	}

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC150C", Offset = "0xCC150C")]
	public InputModes InputMode;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1544", Offset = "0xCC1544")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC157C", Offset = "0xCC157C")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC15B4", Offset = "0xCC15B4")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x107B0A8", Offset = "0x107B0A8", VA = "0x107B0A8")]
	private void Start()
	{
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x107B0AC", Offset = "0x107B0AC", VA = "0x107B0AC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x107B4F4", Offset = "0x107B4F4", VA = "0x107B4F4", Slot = "9")]
	public override void GetAimData(out Ray aimRay)
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x107B5B4", Offset = "0x107B5B4", VA = "0x107B5B4")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200009D")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x2000560")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001AC3")]
		HeadRelative,
		[Token(Token = "0x4001AC4")]
		ForwardFacing
	}

	[Token(Token = "0x2000561")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEFD8", Offset = "0xCBEFD8")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x1700033B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600202C")]
			[Address(RVA = "0x107BA88", Offset = "0x107BA88", VA = "0x107BA88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600202E")]
			[Address(RVA = "0x107BAF0", Offset = "0x107BAF0", VA = "0x107BAF0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002029")]
		[Address(RVA = "0x107B858", Offset = "0x107B858", VA = "0x107B858")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600202A")]
		[Address(RVA = "0x107B9D4", Offset = "0x107B9D4", VA = "0x107B9D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600202B")]
		[Address(RVA = "0x107B9D8", Offset = "0x107B9D8", VA = "0x107B9D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600202D")]
		[Address(RVA = "0x107BA90", Offset = "0x107BA90", VA = "0x107BA90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly System.Action _updateOrientationAction;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x107B678", Offset = "0x107B678", VA = "0x107B678")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x107B740", Offset = "0x107B740", VA = "0x107B740")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x107B748", Offset = "0x107B748", VA = "0x107B748", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x107B794", Offset = "0x107B794", VA = "0x107B794", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x107B7DC", Offset = "0x107B7DC", VA = "0x107B7DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0544", Offset = "0xCD0544")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002BD")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x60002BE")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x107B884", Offset = "0x107B884", VA = "0x107B884")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x107B9A8", Offset = "0x107B9A8", VA = "0x107B9A8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD05A8", Offset = "0xCD05A8")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200009E")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x107BAF8", Offset = "0x107BAF8", VA = "0x107BAF8", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x107BAFC", Offset = "0x107BAFC", VA = "0x107BAFC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x107BB78", Offset = "0x107BB78", VA = "0x107BB78")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200009F")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x40003AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC15EC", Offset = "0xCC15EC")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1624", Offset = "0xCC1624")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x40003AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC165C", Offset = "0xCC165C")]
	public float AimDistanceThreshold;

	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1694", Offset = "0xCC1694")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x107BB7C", Offset = "0x107BB7C", VA = "0x107BB7C", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x107BBEC", Offset = "0x107BBEC", VA = "0x107BBEC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x107C064", Offset = "0x107C064", VA = "0x107C064")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x20000A0")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC16CC", Offset = "0xCC16CC")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1704", Offset = "0xCC1704")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC173C", Offset = "0xCC173C")]
	public float RotateStickThreshold;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x107C068", Offset = "0x107C068", VA = "0x107C068", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x107C0AC", Offset = "0x107C0AC", VA = "0x107C0AC", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x107C51C", Offset = "0x107C51C", VA = "0x107C51C")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x20000A1")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x107C52C", Offset = "0x107C52C", VA = "0x107C52C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x107C530", Offset = "0x107C530", VA = "0x107C530")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x107C538", Offset = "0x107C538", VA = "0x107C538")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x107C620", Offset = "0x107C620", VA = "0x107C620")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x107C648", Offset = "0x107C648", VA = "0x107C648")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x20000A2")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC1774", Offset = "0xCC1774")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x1700001A")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x107C660", Offset = "0x107C660", VA = "0x107C660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD05B8", Offset = "0xCD05B8")]
		get
		{
			return null;
		}
		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x107C668", Offset = "0x107C668", VA = "0x107C668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD05C8", Offset = "0xCD05C8")]
		private set
		{
		}
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1079A2C", Offset = "0x1079A2C", VA = "0x1079A2C", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1079B5C", Offset = "0x1079B5C", VA = "0x1079B5C", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x107C670", Offset = "0x107C670", VA = "0x107C670")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD05D8", Offset = "0xCD05D8")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x107A1D8", Offset = "0x107A1D8", VA = "0x107A1D8", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x107A244", Offset = "0x107A244", VA = "0x107A244", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1079B98", Offset = "0x1079B98", VA = "0x1079B98")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x20000A3")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x2000562")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEFE8", Offset = "0xCBEFE8")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x1700033D")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002032")]
			[Address(RVA = "0x107CCFC", Offset = "0x107CCFC", VA = "0x107CCFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700033E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002034")]
			[Address(RVA = "0x107CD64", Offset = "0x107CD64", VA = "0x107CD64", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600202F")]
		[Address(RVA = "0x107C8EC", Offset = "0x107C8EC", VA = "0x107C8EC")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6002030")]
		[Address(RVA = "0x107CA84", Offset = "0x107CA84", VA = "0x107CA84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002031")]
		[Address(RVA = "0x107CA88", Offset = "0x107CA88", VA = "0x107CA88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002033")]
		[Address(RVA = "0x107CD04", Offset = "0x107CD04", VA = "0x107CD04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1784", Offset = "0xCC1784")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly System.Action _startAimAction;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x40003C1")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x107C738", Offset = "0x107C738", VA = "0x107C738")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x107C81C", Offset = "0x107C81C", VA = "0x107C81C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x107C848", Offset = "0x107C848", VA = "0x107C848", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x107C870", Offset = "0x107C870", VA = "0x107C870")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0610", Offset = "0xCD0610")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x107C918", Offset = "0x107C918", VA = "0x107C918", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x60002DC")]
	protected abstract bool ConsiderTeleport(Vector3 start, ref Vector3 end);

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x107C934", Offset = "0x107C934", VA = "0x107C934", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x107CA58", Offset = "0x107CA58", VA = "0x107CA58")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0674", Offset = "0xCD0674")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x20000A4")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x107CD6C", Offset = "0x107CD6C", VA = "0x107CD6C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x107CDD4", Offset = "0x107CDD4", VA = "0x107CDD4", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x107CF58", Offset = "0x107CF58", VA = "0x107CF58", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x107D048", Offset = "0x107D048", VA = "0x107D048")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD0684", Offset = "0xCD0684")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x107D04C", Offset = "0x107D04C", VA = "0x107D04C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x20000A5")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC17BC", Offset = "0xCC17BC")]
	public float LOSOffset;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC17F4", Offset = "0xCC17F4")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x107D058", Offset = "0x107D058", VA = "0x107D058", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x107D288", Offset = "0x107D288", VA = "0x107D288")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x20000A6")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x107D294", Offset = "0x107D294", VA = "0x107D294", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, ref Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x107D418", Offset = "0x107D418", VA = "0x107D418")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x20000A7")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x107D41C", Offset = "0x107D41C", VA = "0x107D41C", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x107D4B4", Offset = "0x107D4B4", VA = "0x107D4B4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x60002EA")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x107D548", Offset = "0x107D548", VA = "0x107D548")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x20000A8")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x2000563")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBEFF8", Offset = "0xCBEFF8")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x1700033F")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002038")]
			[Address(RVA = "0x107D8D4", Offset = "0x107D8D4", VA = "0x107D8D4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000340")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600203A")]
			[Address(RVA = "0x107D93C", Offset = "0x107D93C", VA = "0x107D93C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002035")]
		[Address(RVA = "0x107D5F8", Offset = "0x107D5F8", VA = "0x107D5F8")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6002036")]
		[Address(RVA = "0x107D7C8", Offset = "0x107D7C8", VA = "0x107D7C8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002037")]
		[Address(RVA = "0x107D7CC", Offset = "0x107D7CC", VA = "0x107D7CC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002039")]
		[Address(RVA = "0x107D8DC", Offset = "0x107D8DC", VA = "0x107D8DC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC182C", Offset = "0xCC182C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC182C", Offset = "0xCC182C")]
	public float TransitionDuration;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1884", Offset = "0xCC1884")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC1884", Offset = "0xCC1884")]
	public float TeleportDelay;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC18D8", Offset = "0xCC18D8")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x107D550", Offset = "0x107D550", VA = "0x107D550", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x107D57C", Offset = "0x107D57C", VA = "0x107D57C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD06BC", Offset = "0xCD06BC")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x107D624", Offset = "0x107D624", VA = "0x107D624")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x20000A9")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x107D944", Offset = "0x107D944", VA = "0x107D944", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x107D960", Offset = "0x107D960", VA = "0x107D960")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x20000AA")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x2000564")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF008", Offset = "0xCBF008")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x17000341")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600203E")]
			[Address(RVA = "0x107DBD0", Offset = "0x107DBD0", VA = "0x107DBD0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000342")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002040")]
			[Address(RVA = "0x107DC38", Offset = "0x107DC38", VA = "0x107DC38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600203B")]
		[Address(RVA = "0x107DA10", Offset = "0x107DA10", VA = "0x107DA10")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600203C")]
		[Address(RVA = "0x107DA90", Offset = "0x107DA90", VA = "0x107DA90", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600203D")]
		[Address(RVA = "0x107DA94", Offset = "0x107DA94", VA = "0x107DA94", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600203F")]
		[Address(RVA = "0x107DBD8", Offset = "0x107DBD8", VA = "0x107DBD8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1910", Offset = "0xCC1910")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC1910", Offset = "0xCC1910")]
	public float TransitionDuration;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x107D968", Offset = "0x107D968", VA = "0x107D968", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x107D994", Offset = "0x107D994", VA = "0x107D994")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0720", Offset = "0xCD0720")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x107DA3C", Offset = "0x107DA3C", VA = "0x107DA3C")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x20000AB")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x2000565")]
	public enum PlabackState
	{
		[Token(Token = "0x4001AD7")]
		Idle = 1,
		[Token(Token = "0x4001AD8")]
		Preparing,
		[Token(Token = "0x4001AD9")]
		Buffering,
		[Token(Token = "0x4001ADA")]
		Ready,
		[Token(Token = "0x4001ADB")]
		Ended
	}

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x1700001B")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x10CECB4", Offset = "0x10CECB4", VA = "0x10CECB4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001C")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x10CEF70", Offset = "0x10CEF70", VA = "0x10CEF70")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700001D")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x10CB92C", Offset = "0x10CB92C", VA = "0x10CB92C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001E")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x10CCC00", Offset = "0x10CCC00", VA = "0x10CCC00")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700001F")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x10CF1B4", Offset = "0x10CF1B4", VA = "0x10CF1B4")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x17000020")]
	public static long Duration
	{
		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x10CCDE4", Offset = "0x10CCDE4", VA = "0x10CCDE4")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x17000021")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x10CCCF0", Offset = "0x10CCCF0", VA = "0x10CCCF0")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x10CC3A8", Offset = "0x10CC3A8", VA = "0x10CC3A8")]
		set
		{
		}
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x10CD44C", Offset = "0x10CD44C", VA = "0x10CD44C")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x10CD190", Offset = "0x10CD190", VA = "0x10CD190")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x10CC038", Offset = "0x10CC038", VA = "0x10CC038")]
	public static void Play()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x10CC1BC", Offset = "0x10CC1BC", VA = "0x10CC1BC")]
	public static void Pause()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x10CCFB0", Offset = "0x10CCFB0", VA = "0x10CCFB0")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x10CD64C", Offset = "0x10CD64C", VA = "0x10CD64C")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x10CCA3C", Offset = "0x10CCA3C", VA = "0x10CCA3C")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x20000AC")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x14000010")]
	public event System.Action onButtonDown
	{
		[Token(Token = "0x6000304")]
		[Address(RVA = "0xF696D0", Offset = "0xF696D0", VA = "0xF696D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0784", Offset = "0xCD0784")]
		add
		{
		}
		[Token(Token = "0x6000305")]
		[Address(RVA = "0xF69774", Offset = "0xF69774", VA = "0xF69774")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0794", Offset = "0xCD0794")]
		remove
		{
		}
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xF69818", Offset = "0xF69818", VA = "0xF69818", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xF6982C", Offset = "0xF6982C", VA = "0xF6982C")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x20000AD")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x2000566")]
	public enum ButtonType
	{
		[Token(Token = "0x4001ADD")]
		Play,
		[Token(Token = "0x4001ADE")]
		Pause,
		[Token(Token = "0x4001ADF")]
		FastForward,
		[Token(Token = "0x4001AE0")]
		Rewind,
		[Token(Token = "0x4001AE1")]
		SkipForward,
		[Token(Token = "0x4001AE2")]
		SkipBack,
		[Token(Token = "0x4001AE3")]
		Stop
	}

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x17000022")]
	public ButtonType buttonType
	{
		[Token(Token = "0x6000308")]
		[Address(RVA = "0x10C58AC", Offset = "0x10C58AC", VA = "0x10C58AC")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x6000309")]
		[Address(RVA = "0x10C58B4", Offset = "0x10C58B4", VA = "0x10C58B4")]
		set
		{
		}
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0x10C58D8", Offset = "0x10C58D8", VA = "0x10C58D8", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0x10C6DA4", Offset = "0x10C6DA4", VA = "0x10C6DA4")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x20000AE")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x2000567")]
	public enum VideoShape
	{
		[Token(Token = "0x4001AE5")]
		_360,
		[Token(Token = "0x4001AE6")]
		_180,
		[Token(Token = "0x4001AE7")]
		Quad
	}

	[Token(Token = "0x2000568")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001AE9")]
		Mono,
		[Token(Token = "0x4001AEA")]
		TopBottom,
		[Token(Token = "0x4001AEB")]
		LeftRight,
		[Token(Token = "0x4001AEC")]
		BottomTop
	}

	[Token(Token = "0x2000569")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF018", Offset = "0xCBF018")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x17000343")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002044")]
			[Address(RVA = "0x10CD928", Offset = "0x10CD928", VA = "0x10CD928", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000344")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002046")]
			[Address(RVA = "0x10CD990", Offset = "0x10CD990", VA = "0x10CD990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002041")]
		[Address(RVA = "0x10CBCF0", Offset = "0x10CBCF0", VA = "0x10CBCF0")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002042")]
		[Address(RVA = "0x10CD798", Offset = "0x10CD798", VA = "0x10CD798", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002043")]
		[Address(RVA = "0x10CD79C", Offset = "0x10CD79C", VA = "0x10CD79C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002045")]
		[Address(RVA = "0x10CD930", Offset = "0x10CD930", VA = "0x10CD930", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200056A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF028", Offset = "0xCBF028")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6002047")]
		[Address(RVA = "0x10CBF9C", Offset = "0x10CBF9C", VA = "0x10CBF9C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6002048")]
		[Address(RVA = "0x10CD378", Offset = "0x10CD378", VA = "0x10CD378")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC1998", Offset = "0xCC1998")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC19A8", Offset = "0xCC19A8")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC19B8", Offset = "0xCC19B8")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x17000023")]
	public bool IsPlaying
	{
		[Token(Token = "0x600030C")]
		[Address(RVA = "0x10CB6AC", Offset = "0x10CB6AC", VA = "0x10CB6AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD07A4", Offset = "0xCD07A4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600030D")]
		[Address(RVA = "0x10CB6B4", Offset = "0x10CB6B4", VA = "0x10CB6B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD07B4", Offset = "0xCD07B4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public long Duration
	{
		[Token(Token = "0x600030E")]
		[Address(RVA = "0x10CB6C0", Offset = "0x10CB6C0", VA = "0x10CB6C0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD07C4", Offset = "0xCD07C4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x600030F")]
		[Address(RVA = "0x10CB6C8", Offset = "0x10CB6C8", VA = "0x10CB6C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD07D4", Offset = "0xCD07D4")]
		private set
		{
		}
	}

	[Token(Token = "0x17000025")]
	public long PlaybackPosition
	{
		[Token(Token = "0x6000310")]
		[Address(RVA = "0x10CB6D0", Offset = "0x10CB6D0", VA = "0x10CB6D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD07E4", Offset = "0xCD07E4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x6000311")]
		[Address(RVA = "0x10CB6D8", Offset = "0x10CB6D8", VA = "0x10CB6D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD07F4", Offset = "0xCD07F4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0x10CB6E0", Offset = "0x10CB6E0", VA = "0x10CB6E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x10CB994", Offset = "0x10CB994", VA = "0x10CB994")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0x10CB9FC", Offset = "0x10CB9FC", VA = "0x10CB9FC")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x6000315")]
	[Address(RVA = "0x10CBC74", Offset = "0x10CBC74", VA = "0x10CBC74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0804", Offset = "0xCD0804")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0x10CBD1C", Offset = "0x10CBD1C", VA = "0x10CBD1C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x10CBFA4", Offset = "0x10CBFA4", VA = "0x10CBFA4")]
	public void Play()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x10CC12C", Offset = "0x10CC12C", VA = "0x10CC12C")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x10CC2B0", Offset = "0x10CC2B0", VA = "0x10CC2B0")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x600031A")]
	[Address(RVA = "0x10CC4F0", Offset = "0x10CC4F0", VA = "0x10CC4F0")]
	private void Update()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x10CCED8", Offset = "0x10CCED8", VA = "0x10CCED8")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0x10CD100", Offset = "0x10CD100", VA = "0x10CD100")]
	public void Stop()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0x10CD284", Offset = "0x10CD284", VA = "0x10CD284")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0x10CD368", Offset = "0x10CD368", VA = "0x10CD368")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x20000AF")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x200056B")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001AF4")]
		Playing,
		[Token(Token = "0x4001AF5")]
		Paused,
		[Token(Token = "0x4001AF6")]
		Rewinding,
		[Token(Token = "0x4001AF7")]
		FastForwarding
	}

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x40003FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x600031F")]
	[Address(RVA = "0x10CD998", Offset = "0x10CD998", VA = "0x10CD998")]
	private void Start()
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0x10CDC94", Offset = "0x10CDC94", VA = "0x10CDC94")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x6000321")]
	[Address(RVA = "0x10CDE70", Offset = "0x10CDE70", VA = "0x10CDE70")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0x10CDFA4", Offset = "0x10CDFA4", VA = "0x10CDFA4")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x6000323")]
	[Address(RVA = "0x10CE0AC", Offset = "0x10CE0AC", VA = "0x10CE0AC")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0x10CDF78", Offset = "0x10CDF78", VA = "0x10CDF78")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0x10CE174", Offset = "0x10CE174", VA = "0x10CE174")]
	private void Update()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0x10CDB88", Offset = "0x10CDB88", VA = "0x10CDB88")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0x10CE52C", Offset = "0x10CE52C", VA = "0x10CE52C")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x20000B0")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB6DB4", Offset = "0xCB6DB4")]
public class OVROverlayMeshGenerator : MonoBehaviour
{
	[Token(Token = "0x200056C")]
	private enum CubeFace
	{
		[Token(Token = "0x4001AF9")]
		Right,
		[Token(Token = "0x4001AFA")]
		Left,
		[Token(Token = "0x4001AFB")]
		Top,
		[Token(Token = "0x4001AFC")]
		Bottom,
		[Token(Token = "0x4001AFD")]
		Front,
		[Token(Token = "0x4001AFE")]
		Back,
		[Token(Token = "0x4001AFF")]
		COUNT
	}

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Mesh _Mesh;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> _Verts;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<Vector2> _UV;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<int> _Tris;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private OVROverlay _Overlay;

	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MeshFilter _MeshFilter;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MeshCollider _MeshCollider;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform _CameraRoot;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _Transform;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private OVROverlay.OverlayShape _LastShape;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private Vector3 _LastPosition;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Quaternion _LastRotation;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 _LastScale;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Rect _LastRectLeft;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private Rect _LastRectRight;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool _Awake;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Vector3[] BottomLeft;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Vector3[] RightVector;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Vector3[] UpVector;

	[Token(Token = "0x6000328")]
	[Address(RVA = "0x164F480", Offset = "0x164F480", VA = "0x164F480")]
	protected void Awake()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0x164F61C", Offset = "0x164F61C", VA = "0x164F61C")]
	private Rect GetBoundingRect(Rect a, Rect b)
	{
		return default(Rect);
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0x164F7D8", Offset = "0x164F7D8", VA = "0x164F7D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0x164FCB0", Offset = "0x164FCB0", VA = "0x164FCB0")]
	private void UpdateMesh(OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0x164FFA4", Offset = "0x164FFA4", VA = "0x164FFA4")]
	public static void GenerateMesh(List<Vector3> verts, List<Vector2> uvs, List<int> tris, OVROverlay.OverlayShape shape, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect)
	{
	}

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1651200", Offset = "0x1651200", VA = "0x1651200")]
	private static Vector2 GetSphereUV(float theta, float phi, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x1651260", Offset = "0x1651260", VA = "0x1651260")]
	private static Vector3 GetSphereVert(float theta, float phi)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x1650324", Offset = "0x1650324", VA = "0x1650324")]
	public static void BuildSphere(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, Rect rect, float worldScale = 800f, int latitudes = 128, int longitudes = 128, float expand_coef = 1f)
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x1651348", Offset = "0x1651348", VA = "0x1651348")]
	private static Vector2 GetCubeUV(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x1651534", Offset = "0x1651534", VA = "0x1651534")]
	private static Vector3 GetCubeVert(CubeFace face, Vector2 sideUV, float expand_coef)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x16507DC", Offset = "0x16507DC", VA = "0x16507DC")]
	public static void BuildCube(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 position, Quaternion rotation, Vector3 scale, float worldScale = 800f, int subQuads = 1, float expand_coef = 1.01f)
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1650B04", Offset = "0x1650B04", VA = "0x1650B04")]
	public static void BuildQuad(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Rect rect)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1650E5C", Offset = "0x1650E5C", VA = "0x1650E5C")]
	public static void BuildHemicylinder(List<Vector3> verts, List<Vector2> uv, List<int> triangles, Vector3 scale, Rect rect, int longitudes = 128)
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0x16516E8", Offset = "0x16516E8", VA = "0x16516E8")]
	public OVROverlayMeshGenerator()
	{
	}
}
[Token(Token = "0x20000B1")]
public static class VectorUtil
{
	[Token(Token = "0x6000337")]
	[Address(RVA = "0x1106EB4", Offset = "0x1106EB4", VA = "0x1106EB4")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x20000B2")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xF75E08", Offset = "0xF75E08", VA = "0xF75E08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xF76260", Offset = "0xF76260", VA = "0xF76260")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xF76318", Offset = "0xF76318", VA = "0xF76318")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xF7656C", Offset = "0xF7656C", VA = "0xF7656C")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xF76654", Offset = "0xF76654", VA = "0xF76654")]
	private void Update()
	{
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xF76730", Offset = "0xF76730", VA = "0xF76730")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xF7679C", Offset = "0xF7679C", VA = "0xF7679C")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xF767A4", Offset = "0xF767A4", VA = "0xF767A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0878", Offset = "0xCD0878")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xF76800", Offset = "0xF76800", VA = "0xF76800")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0888", Offset = "0xCD0888")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xF7685C", Offset = "0xF7685C", VA = "0xF7685C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0898", Offset = "0xCD0898")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xF768B8", Offset = "0xF768B8", VA = "0xF768B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD08A8", Offset = "0xCD08A8")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x20000B3")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x200056D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF038", Offset = "0xCBF038")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x17000345")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x600204C")]
			[Address(RVA = "0xF40470", Offset = "0xF40470", VA = "0xF40470", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000346")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600204E")]
			[Address(RVA = "0xF404D8", Offset = "0xF404D8", VA = "0xF404D8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002049")]
		[Address(RVA = "0xF402F4", Offset = "0xF402F4", VA = "0xF402F4")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x600204A")]
		[Address(RVA = "0xF40328", Offset = "0xF40328", VA = "0xF40328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600204B")]
		[Address(RVA = "0xF4032C", Offset = "0xF4032C", VA = "0xF4032C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600204D")]
		[Address(RVA = "0xF40478", Offset = "0xF40478", VA = "0xF40478", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xF3FFE0", Offset = "0xF3FFE0", VA = "0xF3FFE0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xF400F8", Offset = "0xF400F8", VA = "0xF400F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xF4007C", Offset = "0xF4007C", VA = "0xF4007C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD08B8", Offset = "0xCD08B8")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xF40320", Offset = "0xF40320", VA = "0xF40320")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x20000B4")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC19D8", Offset = "0xCC19D8")]
	public int SubdivisionsU;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC19F4", Offset = "0xCC19F4")]
	public int SubdivisionsV;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xF6B6DC", Offset = "0xF6B6DC", VA = "0xF6B6DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xF6C1D0", Offset = "0xF6C1D0", VA = "0xF6C1D0")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x20000B5")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000026")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x6000349")]
		[Address(RVA = "0xFC9458", Offset = "0xFC9458", VA = "0xFC9458")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xFC94B0", Offset = "0xFC94B0", VA = "0xFC94B0")]
	public void Start()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xFC9800", Offset = "0xFC9800", VA = "0xFC9800")]
	public void Update()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xFC98E4", Offset = "0xFC98E4", VA = "0xFC98E4")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD091C", Offset = "0xCD091C")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x600034D")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x600034F")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x6000350")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x6000351")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x6000352")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x6000353")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x6000354")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xFC994C", Offset = "0xFC994C", VA = "0xFC994C")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xFC9988", Offset = "0xFC9988", VA = "0xFC9988")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xFC99FC", Offset = "0xFC99FC", VA = "0xFC99FC")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xFC9B58", Offset = "0xFC9B58", VA = "0xFC9B58")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xFC9C2C", Offset = "0xFC9C2C", VA = "0xFC9C2C")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xFC970C", Offset = "0xFC970C", VA = "0xFC970C")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xFC9CEC", Offset = "0xFC9CEC", VA = "0xFC9CEC")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xFC9D54", Offset = "0xFC9D54", VA = "0xFC9D54")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xFC9E38", Offset = "0xFC9E38", VA = "0xFC9E38")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x20000B6")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB6E48", Offset = "0xCB6E48")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x200056E")]
	public enum DrawMode
	{
		[Token(Token = "0x4001B04")]
		Opaque,
		[Token(Token = "0x4001B05")]
		OpaqueWithClip,
		[Token(Token = "0x4001B06")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001B07")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000027")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000364")]
		[Address(RVA = "0x164F25C", Offset = "0x164F25C", VA = "0x164F25C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000365")]
		[Address(RVA = "0x164F2F0", Offset = "0x164F2F0", VA = "0x164F2F0")]
		set
		{
		}
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x164DB38", Offset = "0x164DB38", VA = "0x164DB38")]
	private void Start()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x164E85C", Offset = "0x164E85C", VA = "0x164E85C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x164E8E0", Offset = "0x164E8E0", VA = "0x164E8E0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x164E9D4", Offset = "0x164E9D4", VA = "0x164E9D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x164EAC8", Offset = "0x164EAC8", VA = "0x164EAC8", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x164ECCC", Offset = "0x164ECCC", VA = "0x164ECCC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x164F3C0", Offset = "0x164F3C0", VA = "0x164F3C0")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x20000B7")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x200056F")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF048", Offset = "0xCBF048")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x600204F")]
		[Address(RVA = "0x1077F9C", Offset = "0x1077F9C", VA = "0x1077F9C")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6002050")]
		[Address(RVA = "0x107808C", Offset = "0x107808C", VA = "0x107808C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1077DEC", Offset = "0x1077DEC", VA = "0x1077DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x1077FA4", Offset = "0x1077FA4", VA = "0x1077FA4")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x1078084", Offset = "0x1078084", VA = "0x1078084")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x20000B8")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCB6EAC", Offset = "0xCB6EAC")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x2000570")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001B0B")]
		MouseXAndY,
		[Token(Token = "0x4001B0C")]
		MouseX,
		[Token(Token = "0x4001B0D")]
		MouseY
	}

	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x10C9D28", Offset = "0x10C9D28", VA = "0x10C9D28")]
	private void Update()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x10C9F88", Offset = "0x10C9F88", VA = "0x10C9F88")]
	private void Start()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x10CA048", Offset = "0x10CA048", VA = "0x10CA048")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x20000B9")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x2000571")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001B0F")]
		Uninitialized = -1,
		[Token(Token = "0x4001B10")]
		NotEnabled,
		[Token(Token = "0x4001B11")]
		Success,
		[Token(Token = "0x4001B12")]
		StreamError,
		[Token(Token = "0x4001B13")]
		ProcessError,
		[Token(Token = "0x4001B14")]
		MaxStatValue
	}

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000028")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x600036E")]
		[Address(RVA = "0x10CF314", Offset = "0x10CF314", VA = "0x10CF314")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600036F")]
		[Address(RVA = "0x10CF31C", Offset = "0x10CF31C", VA = "0x10CF31C")]
		set
		{
		}
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x10CF328", Offset = "0x10CF328", VA = "0x10CF328")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x10CF56C", Offset = "0x10CF56C", VA = "0x10CF56C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x10CF7BC", Offset = "0x10CF7BC", VA = "0x10CF7BC")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x20000BA")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x2000572")]
	private enum Parameters
	{
		[Token(Token = "0x4001B16")]
		P_GAIN,
		[Token(Token = "0x4001B17")]
		P_USEINVSQR,
		[Token(Token = "0x4001B18")]
		P_NEAR,
		[Token(Token = "0x4001B19")]
		P_FAR,
		[Token(Token = "0x4001B1A")]
		P_RADIUS,
		[Token(Token = "0x4001B1B")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001B1C")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001B1D")]
		P_AMBISTAT,
		[Token(Token = "0x4001B1E")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001B1F")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001B20")]
		P_SENDLEVEL,
		[Token(Token = "0x4001B21")]
		P_NUM
	}

	[Token(Token = "0x4000452")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000029")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x6000376")]
		[Address(RVA = "0x10CFA18", Offset = "0x10CFA18", VA = "0x10CFA18")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x10CFA20", Offset = "0x10CFA20", VA = "0x10CFA20")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public float Gain
	{
		[Token(Token = "0x6000378")]
		[Address(RVA = "0x10CFA2C", Offset = "0x10CFA2C", VA = "0x10CFA2C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000379")]
		[Address(RVA = "0x10CFA34", Offset = "0x10CFA34", VA = "0x10CFA34")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public bool UseInvSqr
	{
		[Token(Token = "0x600037A")]
		[Address(RVA = "0x10CFAB8", Offset = "0x10CFAB8", VA = "0x10CFAB8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600037B")]
		[Address(RVA = "0x10CFAC0", Offset = "0x10CFAC0", VA = "0x10CFAC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public float Near
	{
		[Token(Token = "0x600037C")]
		[Address(RVA = "0x10CFACC", Offset = "0x10CFACC", VA = "0x10CFACC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600037D")]
		[Address(RVA = "0x10CFAD4", Offset = "0x10CFAD4", VA = "0x10CFAD4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public float Far
	{
		[Token(Token = "0x600037E")]
		[Address(RVA = "0x10CFB5C", Offset = "0x10CFB5C", VA = "0x10CFB5C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600037F")]
		[Address(RVA = "0x10CFB64", Offset = "0x10CFB64", VA = "0x10CFB64")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000380")]
		[Address(RVA = "0x10CFBEC", Offset = "0x10CFBEC", VA = "0x10CFBEC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000381")]
		[Address(RVA = "0x10CFBF4", Offset = "0x10CFBF4", VA = "0x10CFBF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public float ReverbSend
	{
		[Token(Token = "0x6000382")]
		[Address(RVA = "0x10CFC7C", Offset = "0x10CFC7C", VA = "0x10CFC7C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000383")]
		[Address(RVA = "0x10CFC84", Offset = "0x10CFC84", VA = "0x10CFC84")]
		set
		{
		}
	}

	[Token(Token = "0x17000030")]
	public bool EnableRfl
	{
		[Token(Token = "0x6000384")]
		[Address(RVA = "0x10CFD0C", Offset = "0x10CFD0C", VA = "0x10CFD0C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000385")]
		[Address(RVA = "0x10CFD14", Offset = "0x10CFD14", VA = "0x10CFD14")]
		set
		{
		}
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x10CF840", Offset = "0x10CF840", VA = "0x10CF840")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0xCD0954", Offset = "0xCD0954")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000375")]
	[Address(RVA = "0x10CF938", Offset = "0x10CF938", VA = "0x10CF938")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(ref bool reflOn, ref bool reverbOn, ref float width, ref float height, ref float length);

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x10CFD20", Offset = "0x10CFD20", VA = "0x10CFD20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x10CFE94", Offset = "0x10CFE94", VA = "0x10CFE94")]
	private void Start()
	{
	}

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x10CFE98", Offset = "0x10CFE98", VA = "0x10CFE98")]
	private void Update()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x10CFD8C", Offset = "0x10CFD8C", VA = "0x10CFD8C")]
	public void SetParameters(ref AudioSource source)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x10CFF60", Offset = "0x10CFF60", VA = "0x10CFF60")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x10D03C8", Offset = "0x10D03C8", VA = "0x10D03C8")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600038C")]
	[Address(RVA = "0x10CF8B8", Offset = "0x10CF8B8", VA = "0x10CF8B8")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x10D04AC", Offset = "0x10D04AC", VA = "0x10D04AC")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x20000BB")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x400045D")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x400045F")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x10D04CC", Offset = "0x10D04CC", VA = "0x10D04CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x10D04D8", Offset = "0x10D04D8", VA = "0x10D04D8")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000391")]
	[Address(RVA = "0x10D0590", Offset = "0x10D0590", VA = "0x10D0590")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000392")]
	[Address(RVA = "0x10D0510", Offset = "0x10D0510", VA = "0x10D0510")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x10D0610", Offset = "0x10D0610", VA = "0x10D0610")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x20000BC")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x2000573")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x2000574")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x4000466")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000031")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x6000394")]
		[Address(RVA = "0x10D30B0", Offset = "0x10D30B0", VA = "0x10D30B0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000032")]
	public string filePath
	{
		[Token(Token = "0x6000395")]
		[Address(RVA = "0x10D313C", Offset = "0x10D313C", VA = "0x10D313C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x10D31B4", Offset = "0x10D31B4", VA = "0x10D31B4")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x10D32FC", Offset = "0x10D32FC", VA = "0x10D32FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x10D3300", Offset = "0x10D3300", VA = "0x10D3300")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x10D3860", Offset = "0x10D3860", VA = "0x10D3860")]
	private void Update()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x10D3BF8", Offset = "0x10D3BF8", VA = "0x10D3BF8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600039B")]
	[Address(RVA = "0x10D3D54", Offset = "0x10D3D54", VA = "0x10D3D54")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, ref int ignoredMeshCount)
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x10D44A8", Offset = "0x10D44A8", VA = "0x10D44A8")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x10D44E4", Offset = "0x10D44E4", VA = "0x10D44E4")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, ref int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x10D5D54", Offset = "0x10D5D54", VA = "0x10D5D54")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, ref int vertexOffset, ref int indexOffset, ref int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x10D5C2C", Offset = "0x10D5C2C", VA = "0x10D5C2C")]
	private static void updateCountsForMesh(ref int totalVertexCount, ref uint totalIndexCount, ref int totalFaceCount, ref int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x10D3698", Offset = "0x10D3698", VA = "0x10D3698")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x10D34CC", Offset = "0x10D34CC", VA = "0x10D34CC")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0x10D6368", Offset = "0x10D6368", VA = "0x10D6368")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0x10D67A4", Offset = "0x10D67A4", VA = "0x10D67A4")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x20000BD")]
internal class ONSPPropagation
{
	[Token(Token = "0x2000575")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001B28")]
		Int8,
		[Token(Token = "0x4001B29")]
		UInt8,
		[Token(Token = "0x4001B2A")]
		Int16,
		[Token(Token = "0x4001B2B")]
		UInt16,
		[Token(Token = "0x4001B2C")]
		Int32,
		[Token(Token = "0x4001B2D")]
		UInt32,
		[Token(Token = "0x4001B2E")]
		Int64,
		[Token(Token = "0x4001B2F")]
		UInt64,
		[Token(Token = "0x4001B30")]
		Float16,
		[Token(Token = "0x4001B31")]
		Float32,
		[Token(Token = "0x4001B32")]
		Float64
	}

	[Token(Token = "0x2000576")]
	public class ClientType
	{
		[Token(Token = "0x4001B33")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001B34")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001B35")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001B36")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001B37")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001B38")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001B39")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001B3A")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001B3B")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001B3C")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001B3D")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001B3E")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001B3F")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001B40")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001B41")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6002051")]
		[Address(RVA = "0x10D0AD0", Offset = "0x10D0AD0", VA = "0x10D0AD0")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x2000577")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6002052")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6002053")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6002054")]
		int CreateAudioGeometry(out IntPtr geometry);

		[Token(Token = "0x6002055")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6002056")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6002057")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6002058")]
		int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002059")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600205A")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x600205B")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x600205C")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600205D")]
		int CreateAudioMaterial(out IntPtr material);

		[Token(Token = "0x600205E")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600205F")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6002060")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x2000578")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001B42")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000347")]
		private IntPtr context
		{
			[Token(Token = "0x6002061")]
			[Address(RVA = "0x10D1748", Offset = "0x10D1748", VA = "0x10D1748")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002062")]
		[Address(RVA = "0x10D17AC", Offset = "0x10D17AC", VA = "0x10D17AC")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002063")]
		[Address(RVA = "0x10D183C", Offset = "0x10D183C", VA = "0x10D183C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002064")]
		[Address(RVA = "0x10D18CC", Offset = "0x10D18CC", VA = "0x10D18CC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002065")]
		[Address(RVA = "0x10D18F0", Offset = "0x10D18F0", VA = "0x10D18F0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002066")]
		[Address(RVA = "0x10D1980", Offset = "0x10D1980", VA = "0x10D1980", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002067")]
		[Address(RVA = "0x10D19A4", Offset = "0x10D19A4", VA = "0x10D19A4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002068")]
		[Address(RVA = "0x10D1A30", Offset = "0x10D1A30", VA = "0x10D1A30", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002069")]
		[Address(RVA = "0x10D1A54", Offset = "0x10D1A54", VA = "0x10D1A54")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600206A")]
		[Address(RVA = "0x10D1AD4", Offset = "0x10D1AD4", VA = "0x10D1AD4", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600206B")]
		[Address(RVA = "0x10D1ADC", Offset = "0x10D1ADC", VA = "0x10D1ADC")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600206C")]
		[Address(RVA = "0x10D1BFC", Offset = "0x10D1BFC", VA = "0x10D1BFC", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600206D")]
		[Address(RVA = "0x10D1CF4", Offset = "0x10D1CF4", VA = "0x10D1CF4")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600206E")]
		[Address(RVA = "0x10D1D8C", Offset = "0x10D1D8C", VA = "0x10D1D8C", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600206F")]
		[Address(RVA = "0x10D1D98", Offset = "0x10D1D98", VA = "0x10D1D98")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002070")]
		[Address(RVA = "0x10D1ECC", Offset = "0x10D1ECC", VA = "0x10D1ECC", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002071")]
		[Address(RVA = "0x10D1ED8", Offset = "0x10D1ED8", VA = "0x10D1ED8")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002072")]
		[Address(RVA = "0x10D1F84", Offset = "0x10D1F84", VA = "0x10D1F84", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002073")]
		[Address(RVA = "0x10D1F90", Offset = "0x10D1F90", VA = "0x10D1F90")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002074")]
		[Address(RVA = "0x10D203C", Offset = "0x10D203C", VA = "0x10D203C", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002075")]
		[Address(RVA = "0x10D2048", Offset = "0x10D2048", VA = "0x10D2048")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002076")]
		[Address(RVA = "0x10D20F4", Offset = "0x10D20F4", VA = "0x10D20F4", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002077")]
		[Address(RVA = "0x10D2100", Offset = "0x10D2100", VA = "0x10D2100")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002078")]
		[Address(RVA = "0x10D218C", Offset = "0x10D218C", VA = "0x10D218C", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002079")]
		[Address(RVA = "0x10D21B0", Offset = "0x10D21B0", VA = "0x10D21B0")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600207A")]
		[Address(RVA = "0x10D2230", Offset = "0x10D2230", VA = "0x10D2230", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600207B")]
		[Address(RVA = "0x10D2238", Offset = "0x10D2238", VA = "0x10D2238")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600207C")]
		[Address(RVA = "0x10D22E0", Offset = "0x10D22E0", VA = "0x10D22E0", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600207D")]
		[Address(RVA = "0x10D22EC", Offset = "0x10D22EC", VA = "0x10D22EC")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600207E")]
		[Address(RVA = "0x10D2394", Offset = "0x10D2394", VA = "0x10D2394", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600207F")]
		[Address(RVA = "0x10D23A4", Offset = "0x10D23A4", VA = "0x10D23A4")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6002080")]
		[Address(RVA = "0x10D2434", Offset = "0x10D2434", VA = "0x10D2434", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6002081")]
		[Address(RVA = "0x10D0A7C", Offset = "0x10D0A7C", VA = "0x10D0A7C")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x2000579")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001B44")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000348")]
		private IntPtr context
		{
			[Token(Token = "0x6002082")]
			[Address(RVA = "0x10D2440", Offset = "0x10D2440", VA = "0x10D2440")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6002083")]
		[Address(RVA = "0x10D08C4", Offset = "0x10D08C4", VA = "0x10D08C4")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6002084")]
		[Address(RVA = "0x10D24A4", Offset = "0x10D24A4", VA = "0x10D24A4")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6002085")]
		[Address(RVA = "0x10D2534", Offset = "0x10D2534", VA = "0x10D2534", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002086")]
		[Address(RVA = "0x10D2558", Offset = "0x10D2558", VA = "0x10D2558")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6002087")]
		[Address(RVA = "0x10D25E8", Offset = "0x10D25E8", VA = "0x10D25E8", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002088")]
		[Address(RVA = "0x10D260C", Offset = "0x10D260C", VA = "0x10D260C")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x6002089")]
		[Address(RVA = "0x10D269C", Offset = "0x10D269C", VA = "0x10D269C", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600208A")]
		[Address(RVA = "0x10D26C0", Offset = "0x10D26C0", VA = "0x10D26C0")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x600208B")]
		[Address(RVA = "0x10D2740", Offset = "0x10D2740", VA = "0x10D2740", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600208C")]
		[Address(RVA = "0x10D2748", Offset = "0x10D2748", VA = "0x10D2748")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x600208D")]
		[Address(RVA = "0x10D2868", Offset = "0x10D2868", VA = "0x10D2868", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600208E")]
		[Address(RVA = "0x10D2960", Offset = "0x10D2960", VA = "0x10D2960")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x600208F")]
		[Address(RVA = "0x10D29F8", Offset = "0x10D29F8", VA = "0x10D29F8", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002090")]
		[Address(RVA = "0x10D2A04", Offset = "0x10D2A04", VA = "0x10D2A04")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x6002091")]
		[Address(RVA = "0x10D2B38", Offset = "0x10D2B38", VA = "0x10D2B38", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002092")]
		[Address(RVA = "0x10D2B44", Offset = "0x10D2B44", VA = "0x10D2B44")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002093")]
		[Address(RVA = "0x10D2BF0", Offset = "0x10D2BF0", VA = "0x10D2BF0", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002094")]
		[Address(RVA = "0x10D2BFC", Offset = "0x10D2BFC", VA = "0x10D2BFC")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6002095")]
		[Address(RVA = "0x10D2CA8", Offset = "0x10D2CA8", VA = "0x10D2CA8", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002096")]
		[Address(RVA = "0x10D2CB4", Offset = "0x10D2CB4", VA = "0x10D2CB4")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6002097")]
		[Address(RVA = "0x10D2D60", Offset = "0x10D2D60", VA = "0x10D2D60", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6002098")]
		[Address(RVA = "0x10D2D6C", Offset = "0x10D2D6C", VA = "0x10D2D6C")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x6002099")]
		[Address(RVA = "0x10D2DFC", Offset = "0x10D2DFC", VA = "0x10D2DFC", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600209A")]
		[Address(RVA = "0x10D2E20", Offset = "0x10D2E20", VA = "0x10D2E20")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x600209B")]
		[Address(RVA = "0x10D2EA0", Offset = "0x10D2EA0", VA = "0x10D2EA0", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600209C")]
		[Address(RVA = "0x10D2EA8", Offset = "0x10D2EA8", VA = "0x10D2EA8")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x600209D")]
		[Address(RVA = "0x10D2F50", Offset = "0x10D2F50", VA = "0x10D2F50", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x600209E")]
		[Address(RVA = "0x10D2F5C", Offset = "0x10D2F5C", VA = "0x10D2F5C")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x600209F")]
		[Address(RVA = "0x10D3004", Offset = "0x10D3004", VA = "0x10D3004", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020A0")]
		[Address(RVA = "0x10D3014", Offset = "0x10D3014", VA = "0x10D3014")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60020A1")]
		[Address(RVA = "0x10D30A4", Offset = "0x10D30A4", VA = "0x10D30A4", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60020A2")]
		[Address(RVA = "0x10D0954", Offset = "0x10D0954", VA = "0x10D0954")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x200057A")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001B46")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000349")]
		private IntPtr context
		{
			[Token(Token = "0x60020A3")]
			[Address(RVA = "0x10D0AD8", Offset = "0x10D0AD8", VA = "0x10D0AD8")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60020A4")]
		[Address(RVA = "0x10D09A0", Offset = "0x10D09A0", VA = "0x10D09A0")]
		public static extern int ovrAudio_GetPluginContext(out IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x60020A5")]
		[Address(RVA = "0x10D0B3C", Offset = "0x10D0B3C", VA = "0x10D0B3C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x60020A6")]
		[Address(RVA = "0x10D0BCC", Offset = "0x10D0BCC", VA = "0x10D0BCC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020A7")]
		[Address(RVA = "0x10D0BF0", Offset = "0x10D0BF0", VA = "0x10D0BF0")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x60020A8")]
		[Address(RVA = "0x10D0C80", Offset = "0x10D0C80", VA = "0x10D0C80", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020A9")]
		[Address(RVA = "0x10D0CA4", Offset = "0x10D0CA4", VA = "0x10D0CA4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, out IntPtr geometry);

		[Token(Token = "0x60020AA")]
		[Address(RVA = "0x10D0D34", Offset = "0x10D0D34", VA = "0x10D0D34", Slot = "6")]
		public int CreateAudioGeometry(out IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020AB")]
		[Address(RVA = "0x10D0D58", Offset = "0x10D0D58", VA = "0x10D0D58")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x60020AC")]
		[Address(RVA = "0x10D0DD8", Offset = "0x10D0DD8", VA = "0x10D0DD8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020AD")]
		[Address(RVA = "0x10D0DE0", Offset = "0x10D0DE0", VA = "0x10D0DE0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x60020AE")]
		[Address(RVA = "0x10D0F00", Offset = "0x10D0F00", VA = "0x10D0F00", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020AF")]
		[Address(RVA = "0x10D0FF8", Offset = "0x10D0FF8", VA = "0x10D0FF8")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x60020B0")]
		[Address(RVA = "0x10D1090", Offset = "0x10D1090", VA = "0x10D1090", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020B1")]
		[Address(RVA = "0x10D109C", Offset = "0x10D109C", VA = "0x10D109C")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4);

		[Token(Token = "0x60020B2")]
		[Address(RVA = "0x10D11D0", Offset = "0x10D11D0", VA = "0x10D11D0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, out float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020B3")]
		[Address(RVA = "0x10D11DC", Offset = "0x10D11DC", VA = "0x10D11DC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60020B4")]
		[Address(RVA = "0x10D1288", Offset = "0x10D1288", VA = "0x10D1288", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020B5")]
		[Address(RVA = "0x10D1294", Offset = "0x10D1294", VA = "0x10D1294")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x60020B6")]
		[Address(RVA = "0x10D1340", Offset = "0x10D1340", VA = "0x10D1340", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020B7")]
		[Address(RVA = "0x10D134C", Offset = "0x10D134C", VA = "0x10D134C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x60020B8")]
		[Address(RVA = "0x10D13F8", Offset = "0x10D13F8", VA = "0x10D13F8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020B9")]
		[Address(RVA = "0x10D1404", Offset = "0x10D1404", VA = "0x10D1404")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, out IntPtr material);

		[Token(Token = "0x60020BA")]
		[Address(RVA = "0x10D1494", Offset = "0x10D1494", VA = "0x10D1494", Slot = "15")]
		public int CreateAudioMaterial(out IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020BB")]
		[Address(RVA = "0x10D14B8", Offset = "0x10D14B8", VA = "0x10D14B8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x60020BC")]
		[Address(RVA = "0x10D1538", Offset = "0x10D1538", VA = "0x10D1538", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020BD")]
		[Address(RVA = "0x10D1540", Offset = "0x10D1540", VA = "0x10D1540")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x60020BE")]
		[Address(RVA = "0x10D15E8", Offset = "0x10D15E8", VA = "0x10D15E8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020BF")]
		[Address(RVA = "0x10D15F4", Offset = "0x10D15F4", VA = "0x10D15F4")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value);

		[Token(Token = "0x60020C0")]
		[Address(RVA = "0x10D169C", Offset = "0x10D169C", VA = "0x10D169C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, out float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x60020C1")]
		[Address(RVA = "0x10D16AC", Offset = "0x10D16AC", VA = "0x10D16AC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x60020C2")]
		[Address(RVA = "0x10D173C", Offset = "0x10D173C", VA = "0x10D173C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x60020C3")]
		[Address(RVA = "0x10D0A30", Offset = "0x10D0A30", VA = "0x10D0A30")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000033")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x10D0620", Offset = "0x10D0620", VA = "0x10D0620")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0x10D069C", Offset = "0x10D069C", VA = "0x10D069C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0x10D0AC8", Offset = "0x10D0AC8", VA = "0x10D0AC8")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x20000BE")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x200057B")]
	public enum Preset
	{
		[Token(Token = "0x4001B49")]
		Custom,
		[Token(Token = "0x4001B4A")]
		AcousticTile,
		[Token(Token = "0x4001B4B")]
		Brick,
		[Token(Token = "0x4001B4C")]
		BrickPainted,
		[Token(Token = "0x4001B4D")]
		Carpet,
		[Token(Token = "0x4001B4E")]
		CarpetHeavy,
		[Token(Token = "0x4001B4F")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001B50")]
		CeramicTile,
		[Token(Token = "0x4001B51")]
		Concrete,
		[Token(Token = "0x4001B52")]
		ConcreteRough,
		[Token(Token = "0x4001B53")]
		ConcreteBlock,
		[Token(Token = "0x4001B54")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001B55")]
		Curtain,
		[Token(Token = "0x4001B56")]
		Foliage,
		[Token(Token = "0x4001B57")]
		Glass,
		[Token(Token = "0x4001B58")]
		GlassHeavy,
		[Token(Token = "0x4001B59")]
		Grass,
		[Token(Token = "0x4001B5A")]
		Gravel,
		[Token(Token = "0x4001B5B")]
		GypsumBoard,
		[Token(Token = "0x4001B5C")]
		PlasterOnBrick,
		[Token(Token = "0x4001B5D")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001B5E")]
		Soil,
		[Token(Token = "0x4001B5F")]
		SoundProof,
		[Token(Token = "0x4001B60")]
		Snow,
		[Token(Token = "0x4001B61")]
		Steel,
		[Token(Token = "0x4001B62")]
		Water,
		[Token(Token = "0x4001B63")]
		WoodThin,
		[Token(Token = "0x4001B64")]
		WoodThick,
		[Token(Token = "0x4001B65")]
		WoodFloor,
		[Token(Token = "0x4001B66")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x200057C")]
	public sealed class Point
	{
		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x60020C4")]
		[Address(RVA = "0x163E6B4", Offset = "0x163E6B4", VA = "0x163E6B4")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x60020C5")]
		[Address(RVA = "0x163E6EC", Offset = "0x163E6EC", VA = "0x163E6EC")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x60020C6")]
		[Address(RVA = "0x163E75C", Offset = "0x163E75C", VA = "0x163E75C")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x200057D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCBF058", Offset = "0xCBF058")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x20006AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFB2C", Offset = "0xCBFB2C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x4001F8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x600250C")]
			[Address(RVA = "0x163EC4C", Offset = "0x163EC4C", VA = "0x163EC4C")]
			public <>c()
			{
			}

			[Token(Token = "0x600250D")]
			[Address(RVA = "0x163EC54", Offset = "0x163EC54", VA = "0x163EC54")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x600250E")]
			[Address(RVA = "0x163EC6C", Offset = "0x163EC6C", VA = "0x163EC6C")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700034A")]
		public float Item
		{
			[Token(Token = "0x60020C7")]
			[Address(RVA = "0x163E794", Offset = "0x163E794", VA = "0x163E794")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60020C8")]
		[Address(RVA = "0x163EB60", Offset = "0x163EB60", VA = "0x163EB60")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1B10", Offset = "0xCC1B10")]
	public Spectrum absorption;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1B48", Offset = "0xCC1B48")]
	public Spectrum transmission;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC1B80", Offset = "0xCC1B80")]
	public Spectrum scattering;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000034")]
	public Preset preset
	{
		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x10D6888", Offset = "0x10D6888", VA = "0x10D6888")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x10D6890", Offset = "0x10D6890", VA = "0x10D6890")]
		set
		{
		}
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0x10D68B8", Offset = "0x10D68B8", VA = "0x10D68B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0x10D61FC", Offset = "0x10D61FC", VA = "0x10D61FC")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0x10D6E9C", Offset = "0x10D6E9C", VA = "0x10D6E9C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0x10D6EA0", Offset = "0x10D6EA0", VA = "0x10D6EA0")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x10D68BC", Offset = "0x10D68BC", VA = "0x10D68BC")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x10D5A98", Offset = "0x10D5A98", VA = "0x10D5A98")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x10D6F84", Offset = "0x10D6F84", VA = "0x10D6F84")]
	private static void AcousticTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0x10D7444", Offset = "0x10D7444", VA = "0x10D7444")]
	private static void Brick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x10D7908", Offset = "0x10D7908", VA = "0x10D7908")]
	private static void BrickPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x10D7DC8", Offset = "0x10D7DC8", VA = "0x10D7DC8")]
	private static void Carpet(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x10D829C", Offset = "0x10D829C", VA = "0x10D829C")]
	private static void CarpetHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x10D875C", Offset = "0x10D875C", VA = "0x10D875C")]
	private static void CarpetHeavyPadded(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x10D8C1C", Offset = "0x10D8C1C", VA = "0x10D8C1C")]
	private static void CeramicTile(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x10D90E4", Offset = "0x10D90E4", VA = "0x10D90E4")]
	private static void Concrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x10D95AC", Offset = "0x10D95AC", VA = "0x10D95AC")]
	private static void ConcreteRough(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0x10D9A78", Offset = "0x10D9A78", VA = "0x10D9A78")]
	private static void ConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0x10D9F40", Offset = "0x10D9F40", VA = "0x10D9F40")]
	private static void ConcreteBlockPainted(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0x10DA410", Offset = "0x10DA410", VA = "0x10DA410")]
	private static void Curtain(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0x10DA8D0", Offset = "0x10DA8D0", VA = "0x10DA8D0")]
	private static void Foliage(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0x10DADA4", Offset = "0x10DADA4", VA = "0x10DADA4")]
	private static void Glass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0x10DB254", Offset = "0x10DB254", VA = "0x10DB254")]
	private static void GlassHeavy(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0x10DB710", Offset = "0x10DB710", VA = "0x10DB710")]
	private static void Grass(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0x10DBAB8", Offset = "0x10DBAB8", VA = "0x10DBAB8")]
	private static void Gravel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x10DBE58", Offset = "0x10DBE58", VA = "0x10DBE58")]
	private static void GypsumBoard(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x10DC328", Offset = "0x10DC328", VA = "0x10DC328")]
	private static void PlasterOnBrick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x10DC7F4", Offset = "0x10DC7F4", VA = "0x10DC7F4")]
	private static void PlasterOnConcreteBlock(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x10DCCB8", Offset = "0x10DCCB8", VA = "0x10DCCB8")]
	private static void Soil(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0x10DD064", Offset = "0x10DD064", VA = "0x10DD064")]
	private static void SoundProof(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0x10DD1E8", Offset = "0x10DD1E8", VA = "0x10DD1E8")]
	private static void Snow(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0x10DD584", Offset = "0x10DD584", VA = "0x10DD584")]
	private static void Steel(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0x10DDA34", Offset = "0x10DDA34", VA = "0x10DDA34")]
	private static void Water(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0x10DDEF8", Offset = "0x10DDEF8", VA = "0x10DDEF8")]
	private static void WoodThin(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0x10DE3B0", Offset = "0x10DE3B0", VA = "0x10DE3B0")]
	private static void WoodThick(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0x10DE870", Offset = "0x10DE870", VA = "0x10DE870")]
	private static void WoodFloor(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0x10DED38", Offset = "0x10DED38", VA = "0x10DED38")]
	private static void WoodOnConcrete(ref ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0x10DF1FC", Offset = "0x10DF1FC", VA = "0x10DF1FC")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x20000BF")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0x163EC84", Offset = "0x163EC84", VA = "0x163EC84")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0x163ED58", Offset = "0x163ED58", VA = "0x163ED58")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x20000C0")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000035")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x163F32C", Offset = "0x163F32C", VA = "0x163F32C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0x163F458", Offset = "0x163F458", VA = "0x163F458")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x20000C1")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000471")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x60003D2")]
	[Address(RVA = "0x163F468", Offset = "0x163F468", VA = "0x163F468")]
	private static extern void ONSP_GetVersion(ref int Major, ref int Minor, ref int Patch);

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0x163F500", Offset = "0x163F500", VA = "0x163F500")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0x163F60C", Offset = "0x163F60C", VA = "0x163F60C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0x163F610", Offset = "0x163F610", VA = "0x163F610")]
	private void Update()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0x163F614", Offset = "0x163F614", VA = "0x163F614")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x20000C2")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x200057E")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data);

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x4000480")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000486")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0x11CD534", Offset = "0x11CD534", VA = "0x11CD534")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0x11CD364", Offset = "0x11CD364", VA = "0x11CD364")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCD0968", Offset = "0xCD0968")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, out Vector3 point, out Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0x11CD56C", Offset = "0x11CD56C", VA = "0x11CD56C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0x11CD6B0", Offset = "0x11CD6B0", VA = "0x11CD6B0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0x11CD7A4", Offset = "0x11CD7A4", VA = "0x11CD7A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0x11CE168", Offset = "0x11CE168", VA = "0x11CE168")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x60003DD")]
	[Address(RVA = "0x11CD61C", Offset = "0x11CD61C", VA = "0x11CD61C")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003DE")]
	[Address(RVA = "0x11CD714", Offset = "0x11CD714", VA = "0x11CD714")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x60003DF")]
	[Address(RVA = "0x11CDED0", Offset = "0x11CDED0", VA = "0x11CDED0")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x60003E0")]
	[Address(RVA = "0x11CDF50", Offset = "0x11CDF50", VA = "0x11CDF50")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x60003E1")]
	[Address(RVA = "0x11CDFD8", Offset = "0x11CDFD8", VA = "0x11CDFD8")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x60003E2")]
	[Address(RVA = "0x11CE060", Offset = "0x11CE060", VA = "0x11CE060")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x60003E3")]
	[Address(RVA = "0x11CE0E0", Offset = "0x11CE0E0", VA = "0x11CE0E0")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x60003E4")]
	[Address(RVA = "0x11CEFDC", Offset = "0x11CEFDC", VA = "0x11CEFDC")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, out Vector3 position);

	[PreserveSig]
	[Token(Token = "0x60003E5")]
	[Address(RVA = "0x11CF084", Offset = "0x11CF084", VA = "0x11CF084")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0x11CF12C", Offset = "0x11CF12C", VA = "0x11CF12C")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x20000C3")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x20000C4")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0x163ED68", Offset = "0x163ED68", VA = "0x163ED68")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x163ED6C", Offset = "0x163ED6C", VA = "0x163ED6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x163ED70", Offset = "0x163ED70", VA = "0x163ED70")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x163EED8", Offset = "0x163EED8", VA = "0x163EED8")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x163EDBC", Offset = "0x163EDBC", VA = "0x163EDBC")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x163EE4C", Offset = "0x163EE4C", VA = "0x163EE4C")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x163EF24", Offset = "0x163EF24", VA = "0x163EF24")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0x163EFBC", Offset = "0x163EFBC", VA = "0x163EFBC")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0x163F12C", Offset = "0x163F12C", VA = "0x163F12C")]
	private void SetReflectionValues(ref ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0x163F29C", Offset = "0x163F29C", VA = "0x163F29C")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x20000C5")]
public class OnApplicationQuit : MonoBehaviour
{
	[Token(Token = "0x60003F3")]
	[Address(RVA = "0x11CFBA4", Offset = "0x11CFBA4", VA = "0x11CFBA4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0x11CFBA8", Offset = "0x11CFBA8", VA = "0x11CFBA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0x11CFBAC", Offset = "0x11CFBAC", VA = "0x11CFBAC")]
	public OnApplicationQuit()
	{
	}
}
[Token(Token = "0x20000C6")]
public class PrefabHierarchyHolder : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200057F")]
	public struct Reference
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UnityEngine.Object m_reference;
	}

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Reference> m_references;

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xFED814", Offset = "0xFED814", VA = "0xFED814")]
	public bool Have(string referenceSignature)
	{
		return default(bool);
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xFED8D0", Offset = "0xFED8D0", VA = "0xFED8D0")]
	public UnityEngine.Object Get(string referenceSignature)
	{
		return null;
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xFED9B4", Offset = "0xFED9B4", VA = "0xFED9B4")]
	public PrefabHierarchyHolder()
	{
	}
}
[Token(Token = "0x20000C7")]
public class ConvertTestMono : MonoBehaviour
{
	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private BoidBankSystem _boidBank;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private JobPathFollowerSystem _followSystem;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private JobMagnetSystem _magnetSystem;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private uint frameCount;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool magnetized;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool started;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public uint m_numberFrameToWait;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_sequenceId;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_curve;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_snake;

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xF6F218", Offset = "0xF6F218", VA = "0xF6F218")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xF6F3BC", Offset = "0xF6F3BC", VA = "0xF6F3BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xF6F4FC", Offset = "0xF6F4FC", VA = "0xF6F4FC")]
	public void StartConvert(int sequenceId)
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xF6F604", Offset = "0xF6F604", VA = "0xF6F604")]
	public ConvertTestMono()
	{
	}
}
[Token(Token = "0x20000C8")]
public class DebugEventsViewer : CacheBehaviour
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameEvent[] m_gameEvents;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntGameEvent[] m_intGameEvents;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private string _intValue;

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xF73200", Offset = "0xF73200", VA = "0xF73200")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xF73638", Offset = "0xF73638", VA = "0xF73638")]
	public DebugEventsViewer()
	{
	}
}
[Token(Token = "0x20000C9")]
public class MoveShamanSphere : CacheBehaviour
{
	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1BD8", Offset = "0xCC1BD8")]
	public ObjectArrayGameEvent m_wandInSphere;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ObjectArrayGameEvent m_wandLeaveSphere;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1C10", Offset = "0xCC1C10")]
	public UnityAxis1DAction m_rightAction;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityAxis1DAction m_leftAction;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1C48", Offset = "0xCC1C48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC1C48", Offset = "0xCC1C48")]
	public Transform m_rightController;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform m_leftController;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Transform m_sphereToMove;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _isRight;

	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool _updatePos;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
	private bool _isInSphere;

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0x10CB444", Offset = "0x10CB444", VA = "0x10CB444")]
	private void Start()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0x10CB524", Offset = "0x10CB524", VA = "0x10CB524")]
	private void Update()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0x10CB588", Offset = "0x10CB588", VA = "0x10CB588")]
	public void OnWandShamanSphereInteracted(object[] parameters)
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0x10CB640", Offset = "0x10CB640", VA = "0x10CB640")]
	public void OnWandShamanSphereLeave(object[] parameters)
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0x10CB648", Offset = "0x10CB648", VA = "0x10CB648")]
	public void OnRightGripPressed()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0x10CB664", Offset = "0x10CB664", VA = "0x10CB664")]
	public void OnRightGripReleased()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0x10CB674", Offset = "0x10CB674", VA = "0x10CB674")]
	public void OnLeftGripPressed()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0x10CB690", Offset = "0x10CB690", VA = "0x10CB690")]
	public void OnLeftGripReleased()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0x10CB6A4", Offset = "0x10CB6A4", VA = "0x10CB6A4")]
	public MoveShamanSphere()
	{
	}
}
[Token(Token = "0x20000CA")]
public class AchievementManager : CacheBehaviour
{
	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AchievementProfileData m_achievementProfile;

	[Token(Token = "0x6000408")]
	[Address(RVA = "0x16A6F8C", Offset = "0x16A6F8C", VA = "0x16A6F8C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0x16A6F90", Offset = "0x16A6F90", VA = "0x16A6F90")]
	private void LocaliseAchievement()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0x16A714C", Offset = "0x16A714C", VA = "0x16A714C")]
	public AchievementManager()
	{
	}
}
[Token(Token = "0x20000CB")]
public abstract class AchievementBaseData : ScriptableObject
{
	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_unlocked;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Sprite m_illustrationDisabled;

	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Sprite m_illustrationUnlocked;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StringVariable m_localisedName;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public StringVariable m_localisedDescription;

	[Token(Token = "0x600040B")]
	[Address(RVA = "0x16A6F7C", Offset = "0x16A6F7C", VA = "0x16A6F7C", Slot = "4")]
	public virtual void Unlock()
	{
	}

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x16A6F84", Offset = "0x16A6F84", VA = "0x16A6F84")]
	protected AchievementBaseData()
	{
	}
}
[Token(Token = "0x20000CC")]
public class AchievementProfileData : ScriptableObject
{
	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AchievementBaseData> m_achievements;

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x16A7154", Offset = "0x16A7154", VA = "0x16A7154")]
	public AchievementProfileData()
	{
	}
}
[Token(Token = "0x20000CD")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB6EE4", Offset = "0xCB6EE4")]
public class CountAchievementData : AchievementBaseData
{
	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_countGoal;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_currentCount;

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xF6F85C", Offset = "0xF6F85C", VA = "0xF6F85C")]
	public CountAchievementData()
	{
	}
}
[Token(Token = "0x20000CE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB6F28", Offset = "0xCB6F28")]
public class SimpleAchievementData : AchievementBaseData
{
	[Token(Token = "0x600040F")]
	[Address(RVA = "0x102AC00", Offset = "0x102AC00", VA = "0x102AC00")]
	public SimpleAchievementData()
	{
	}
}
[Token(Token = "0x20000CF")]
public class FogOverrider : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000580")]
	public struct SkyboxToFog
	{
		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Material m_skybox;

		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Color m_fogFirstColor;

		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Color m_fogSecondColor;
	}

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_distance;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color m_defaultFirstFogColor;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color m_defaultSecondFogColor;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<SkyboxToFog> m_skyboxToFogConversion;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer _renderer;

	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _firstFogColor;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color _secondFogColor;

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xF3B048", Offset = "0xF3B048", VA = "0xF3B048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xF3B1F4", Offset = "0xF3B1F4", VA = "0xF3B1F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xF3B2C4", Offset = "0xF3B2C4", VA = "0xF3B2C4")]
	public FogOverrider()
	{
	}
}
[Token(Token = "0x20000D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB6F6C", Offset = "0xCB6F6C")]
public class MusicBarReader : MonoBehaviour
{
	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVariable m_musicBarFloat;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MusicManager _musicManager;

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x10CE544", Offset = "0x10CE544", VA = "0x10CE544")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0x10CE5A4", Offset = "0x10CE5A4", VA = "0x10CE5A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0x10CE5D8", Offset = "0x10CE5D8", VA = "0x10CE5D8")]
	public MusicBarReader()
	{
	}
}
[Token(Token = "0x20000D1")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB6FD0", Offset = "0xCB6FD0")]
public class MusicBeatReader : MonoBehaviour
{
	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVariable m_musicBeatSyncFloat;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatVariable m_musicBarSyncFloat;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_musicCurrentBeatInt;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_musicBeatInBarInt;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FloatVariable m_musicVolumeFloat;

	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MusicManager _musicManager;

	[Token(Token = "0x6000416")]
	[Address(RVA = "0x10CE5E0", Offset = "0x10CE5E0", VA = "0x10CE5E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0x10CE640", Offset = "0x10CE640", VA = "0x10CE640")]
	private void Update()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0x10CE710", Offset = "0x10CE710", VA = "0x10CE710")]
	public MusicBeatReader()
	{
	}
}
[Token(Token = "0x20000D2")]
public class CheatEngine : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000581")]
	public struct EventCheat
	{
		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameEvent m_event;
	}

	[Serializable]
	[Token(Token = "0x2000582")]
	public struct IntVariableCheat
	{
		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntVariable m_variable;

		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_desiredValue;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool m_enabled;
	}

	[Serializable]
	[Token(Token = "0x2000583")]
	public struct FloatVariableCheat
	{
		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public FloatVariable m_variable;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m_desiredValue;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool m_enabled;
	}

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1C98", Offset = "0xCC1C98")]
	public GameObject m_UIEntryPrefab;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1CD0", Offset = "0xCC1CD0")]
	public Transform m_UIViewportDestination;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1D08", Offset = "0xCC1D08")]
	public List<EventCheat> m_eventCheat;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<IntVariableCheat> m_intVariableCheat;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<FloatVariableCheat> m_floatVariableCheat;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1D40", Offset = "0xCC1D40")]
	public GameEvent OnLaserEnable;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameEvent OnLaserDisable;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GameObject> m_uiEntry;

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xF6C1E0", Offset = "0xF6C1E0", VA = "0xF6C1E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xF6C37C", Offset = "0xF6C37C", VA = "0xF6C37C")]
	public void DoCheats()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xF6C20C", Offset = "0xF6C20C", VA = "0xF6C20C")]
	private void GenerateEventCheat()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xF6C28C", Offset = "0xF6C28C", VA = "0xF6C28C")]
	private void GenerateIntVariableCheat()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xF6C304", Offset = "0xF6C304", VA = "0xF6C304")]
	private void GenerateFloatVariableCheat()
	{
	}

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xF6C54C", Offset = "0xF6C54C", VA = "0xF6C54C")]
	private void GenerateUIEntry(EventCheat eventCheat)
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xF6C664", Offset = "0xF6C664", VA = "0xF6C664")]
	private void GenerateUIEntry(IntVariableCheat intCheat)
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xF6C668", Offset = "0xF6C668", VA = "0xF6C668")]
	private void GenerateUIEntry(FloatVariableCheat intCheat)
	{
	}

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xF6C66C", Offset = "0xF6C66C", VA = "0xF6C66C")]
	public CheatEngine()
	{
	}
}
[Token(Token = "0x20000D3")]
public class HapticsManager : CacheBehaviour
{
	[Token(Token = "0x2000584")]
	private enum HapticsType
	{
		[Token(Token = "0x4001B7B")]
		INVALID,
		[Token(Token = "0x4001B7C")]
		SIMPLE,
		[Token(Token = "0x4001B7D")]
		CURVE,
		[Token(Token = "0x4001B7E")]
		SPECTRUM,
		[Token(Token = "0x4001B7F")]
		LIVE,
		[Token(Token = "0x4001B80")]
		ENUM_COUNT
	}

	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public XRNodeHapticPulser m_leftMotor;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public XRNodeHapticPulser m_rightMotor;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SimpleHapticsData m_simpleDummyForDebug;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CurveHapticsData m_curvedummyForDebug;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SpectrumHapticsData m_spectrumHapticsData;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public FloatVariableHapticsData m_floatVariableHapticsData;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private HapticsType _hapticsType;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool _leftHapticsFinished;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xED")]
	private bool _rightHapticsFinished;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _leftHapticsDuration;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float _rightHpaticsDuration;

	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _leftPlayHead;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private float _rightPlayHead;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private CurveHapticsData _rightCurveHapticsData;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private CurveHapticsData _leftCurveHapticsData;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private SpectrumHapticsData _rightSpectrumHapticsData;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private SpectrumHapticsData _leftSpectrumHapticsData;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private FloatVariableHapticsData _rightFloatVariableHapticsData;

	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private FloatVariableHapticsData _leftFloatVariableHapticsData;

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xF404F4", Offset = "0xF404F4", VA = "0xF404F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xF40500", Offset = "0xF40500", VA = "0xF40500")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xF40EA8", Offset = "0xF40EA8", VA = "0xF40EA8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xF40D28", Offset = "0xF40D28", VA = "0xF40D28")]
	public void VibrateLeftController(SimpleHapticsData hapticData)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xF40D88", Offset = "0xF40D88", VA = "0xF40D88")]
	public void VibrateRightController(SimpleHapticsData hapticData)
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xF40CE8", Offset = "0xF40CE8", VA = "0xF40CE8")]
	public void VibrateLeftController(CurveHapticsData hapticsData)
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xF40D08", Offset = "0xF40D08", VA = "0xF40D08")]
	public void VibrateRightController(CurveHapticsData hapticsData)
	{
	}

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xF40DE8", Offset = "0xF40DE8", VA = "0xF40DE8")]
	public void VibrateLeftController(SpectrumHapticsData hapticsData)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xF40E08", Offset = "0xF40E08", VA = "0xF40E08")]
	public void VibrateRightController(SpectrumHapticsData hapticsData)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xF40E28", Offset = "0xF40E28", VA = "0xF40E28")]
	public void EnableLiveVibrationLeftController(FloatVariableHapticsData hapticsData)
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xF40E5C", Offset = "0xF40E5C", VA = "0xF40E5C")]
	public void EnableLiveVibrationRightController(FloatVariableHapticsData hapticsData)
	{
	}

	[Token(Token = "0x600042D")]
	[Address(RVA = "0xF40E90", Offset = "0xF40E90", VA = "0xF40E90")]
	public void DisableVibrationLeftController()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xF40E9C", Offset = "0xF40E9C", VA = "0xF40E9C")]
	public void DisableVibrationRightController()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xF4132C", Offset = "0xF4132C", VA = "0xF4132C")]
	public HapticsManager()
	{
	}
}
[Token(Token = "0x20000D4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7034", Offset = "0xCB7034")]
public class CurveHapticsData : ScriptableObject
{
	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve m_intensity;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC1D78", Offset = "0xCC1D78")]
	public float m_duration;

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xF6FA1C", Offset = "0xF6FA1C", VA = "0xF6FA1C")]
	public CurveHapticsData()
	{
	}
}
[Token(Token = "0x20000D5")]
public class FloatVariableHapticsData : MonoBehaviour
{
	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVariable m_floatVariable;

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xF3AE90", Offset = "0xF3AE90", VA = "0xF3AE90")]
	public FloatVariableHapticsData()
	{
	}
}
[Token(Token = "0x20000D6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7094", Offset = "0xCB7094")]
public class SimpleHapticsData : ScriptableObject
{
	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC1D90", Offset = "0xCC1D90")]
	public float m_intensity;

	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC1DA8", Offset = "0xCC1DA8")]
	public float m_duration;

	[Token(Token = "0x6000432")]
	[Address(RVA = "0x106B404", Offset = "0x106B404", VA = "0x106B404")]
	public SimpleHapticsData()
	{
	}
}
[Token(Token = "0x20000D7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB70F4", Offset = "0xCB70F4")]
public class SpectrumHapticsData : ScriptableObject
{
	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve m_intensity;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC1DC0", Offset = "0xCC1DC0")]
	public float m_duration;

	[Token(Token = "0x6000433")]
	[Address(RVA = "0x1072FEC", Offset = "0x1072FEC", VA = "0x1072FEC")]
	public SpectrumHapticsData()
	{
	}
}
[Token(Token = "0x20000D8")]
public class RewindParticles : MonoBehaviour
{
	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_startTime;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_simulationSpeedScale;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ParticleSystem[] _particleSystems;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float[] _simulationTimes;

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xFF89E4", Offset = "0xFF89E4", VA = "0xFF89E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xFF8B14", Offset = "0xFF8B14", VA = "0xFF8B14")]
	private void Update()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xFF8A80", Offset = "0xFF8A80", VA = "0xFF8A80")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xFF8DFC", Offset = "0xFF8DFC", VA = "0xFF8DFC")]
	public RewindParticles()
	{
	}
}
[Token(Token = "0x20000D9")]
public class SplashScreenAnimator : MonoBehaviour
{
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animatorToTrigger;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_parameterName;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_timeBeforeEvent;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnSplashScreenFinished;

	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _parameterHash;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _startTime;

	[Token(Token = "0x6000438")]
	[Address(RVA = "0x1077170", Offset = "0x1077170", VA = "0x1077170")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0x107721C", Offset = "0x107721C", VA = "0x107721C")]
	private void Start()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0x1077260", Offset = "0x1077260", VA = "0x1077260")]
	private void Update()
	{
	}

	[Token(Token = "0x600043B")]
	[Address(RVA = "0x10772B4", Offset = "0x10772B4", VA = "0x10772B4")]
	public SplashScreenAnimator()
	{
	}
}
[Token(Token = "0x20000DA")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB7154", Offset = "0xCB7154")]
public class LightSoftFlicker : CacheBehaviour
{
	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float minIntensity;

	[Token(Token = "0x40004EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float maxIntensity;

	[Token(Token = "0x40004EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private float _random;

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xFC699C", Offset = "0xFC699C", VA = "0xFC699C")]
	private void Start()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xFC69D0", Offset = "0xFC69D0", VA = "0xFC69D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xFC6A8C", Offset = "0xFC6A8C", VA = "0xFC6A8C")]
	public LightSoftFlicker()
	{
	}
}
[Token(Token = "0x20000DB")]
public class LocalisationManager : CacheBehaviour
{
	[Token(Token = "0x2000585")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF090", Offset = "0xCBF090")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lineName;

		[Token(Token = "0x60020CD")]
		[Address(RVA = "0xFC87C8", Offset = "0xFC87C8", VA = "0xFC87C8")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x60020CE")]
		[Address(RVA = "0xFC9220", Offset = "0xFC9220", VA = "0xFC9220")]
		internal bool <RefreshLocalisedText>b__0(StringVariable x)
		{
			return default(bool);
		}

		[Token(Token = "0x60020CF")]
		[Address(RVA = "0xFC9258", Offset = "0xFC9258", VA = "0xFC9258")]
		internal bool <RefreshLocalisedText>b__1(StringVariable x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000586")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF0A0", Offset = "0xCBF0A0")]
	private sealed class <>c__DisplayClass30_1
	{
		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lineName;

		[Token(Token = "0x60020D0")]
		[Address(RVA = "0xFC87D0", Offset = "0xFC87D0", VA = "0xFC87D0")]
		public <>c__DisplayClass30_1()
		{
		}

		[Token(Token = "0x60020D1")]
		[Address(RVA = "0xFC9290", Offset = "0xFC9290", VA = "0xFC9290")]
		internal bool <RefreshLocalisedText>b__2(StringVariable x)
		{
			return default(bool);
		}

		[Token(Token = "0x60020D2")]
		[Address(RVA = "0xFC92C8", Offset = "0xFC92C8", VA = "0xFC92C8")]
		internal bool <RefreshLocalisedText>b__3(StringVariable x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000587")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF0B0", Offset = "0xCBF0B0")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StringVariable lineToTranslate;

		[Token(Token = "0x60020D3")]
		[Address(RVA = "0xFC8F5C", Offset = "0xFC8F5C", VA = "0xFC8F5C")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x60020D4")]
		[Address(RVA = "0xFC9300", Offset = "0xFC9300", VA = "0xFC9300")]
		internal bool <Translate>b__0(StringVariable x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000588")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF0C0", Offset = "0xCBF0C0")]
	private sealed class <>c__DisplayClass38_0
	{
		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string lineToTranslate;

		[Token(Token = "0x60020D5")]
		[Address(RVA = "0xFC90F8", Offset = "0xFC90F8", VA = "0xFC90F8")]
		public <>c__DisplayClass38_0()
		{
		}

		[Token(Token = "0x60020D6")]
		[Address(RVA = "0xFC9354", Offset = "0xFC9354", VA = "0xFC9354")]
		internal bool <Translate>b__0(StringVariable x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40004EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LanguageData m_currentLanguage;

	[Token(Token = "0x40004ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static TMP_FontAsset m_normalFont;

	[Token(Token = "0x40004EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static TMP_FontAsset m_titleFont;

	[Token(Token = "0x40004EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1DD8", Offset = "0xCC1DD8")]
	public StringCollection m_normalFonts;

	[Token(Token = "0x40004F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public StringCollection m_titleFonts;

	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1E10", Offset = "0xCC1E10")]
	public LanguageData m_chinese;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LanguageData m_english;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LanguageData m_french;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public LanguageData m_german;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public LanguageData m_italian;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public LanguageData m_japanese;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public LanguageData m_korean;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public LanguageData m_polish;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public LanguageData m_portugese;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public LanguageData m_russian;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public LanguageData m_spanish;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static List<TextMeshProLocalisationInjector> _textMeshPro3DToLocalise;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static List<TextMeshProUGUILocalisationInjector> _textMeshProUGUIToLocalise;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static StringCollection _normalFonts;

	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static StringCollection _titleFonts;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public int _fontCount;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool _ready;

	[Token(Token = "0x17000036")]
	public static bool ready
	{
		[Token(Token = "0x6000456")]
		[Address(RVA = "0xFC9100", Offset = "0xFC9100", VA = "0xFC9100")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xFC74C0", Offset = "0xFC74C0", VA = "0xFC74C0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xFC7578", Offset = "0xFC7578", VA = "0xFC7578")]
	private void SwitchToChinese()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xFC7A80", Offset = "0xFC7A80", VA = "0xFC7A80")]
	private void SwitchToEnglish()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xFC7A88", Offset = "0xFC7A88", VA = "0xFC7A88")]
	private void SwitchToFrench()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xFC7A90", Offset = "0xFC7A90", VA = "0xFC7A90")]
	private void SwitchToGerman()
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xFC7A98", Offset = "0xFC7A98", VA = "0xFC7A98")]
	private void SwitchToItalian()
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xFC7AA0", Offset = "0xFC7AA0", VA = "0xFC7AA0")]
	private void SwitchToJapanese()
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xFC7AA8", Offset = "0xFC7AA8", VA = "0xFC7AA8")]
	private void SwitchToKorean()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xFC7AB0", Offset = "0xFC7AB0", VA = "0xFC7AB0")]
	private void SwitchToPolish()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xFC7AB8", Offset = "0xFC7AB8", VA = "0xFC7AB8")]
	private void SwitchToPortuguese()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xFC7AC0", Offset = "0xFC7AC0", VA = "0xFC7AC0")]
	private void SwitchToRussian()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xFC7AC8", Offset = "0xFC7AC8", VA = "0xFC7AC8")]
	private void SwitchToSpanish()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xFC7580", Offset = "0xFC7580", VA = "0xFC7580")]
	public void SwitchLanguage(LanguageData languageData)
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xFC82B8", Offset = "0xFC82B8", VA = "0xFC82B8")]
	private void OnFontLoaded(AsyncOperationHandle<TMP_FontAsset> obj)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xFC7AD0", Offset = "0xFC7AD0", VA = "0xFC7AD0")]
	public void RefreshLocalisedText()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xFC87D8", Offset = "0xFC87D8", VA = "0xFC87D8")]
	public static void Register(TextMeshProLocalisationInjector TMproLocalised)
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xFC89C8", Offset = "0xFC89C8", VA = "0xFC89C8")]
	public static TMP_FontAsset GetFont(TMP_FontAsset font)
	{
		return null;
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xFC8A9C", Offset = "0xFC8A9C", VA = "0xFC8A9C")]
	public static TMP_FontAsset GetFont(bool title)
	{
		return null;
	}

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xFC8B30", Offset = "0xFC8B30", VA = "0xFC8B30")]
	public static void Unregister(TextMeshProLocalisationInjector TMProLocalised)
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xFC8C00", Offset = "0xFC8C00", VA = "0xFC8C00")]
	public static void Register(TextMeshProUGUILocalisationInjector TMproLocalised)
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xFC8CD0", Offset = "0xFC8CD0", VA = "0xFC8CD0")]
	public static void Unregister(TextMeshProUGUILocalisationInjector TMProLocalised)
	{
	}

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xFC8DA0", Offset = "0xFC8DA0", VA = "0xFC8DA0")]
	public static StringVariable Translate(StringVariable lineToTranslate)
	{
		return null;
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xFC8F64", Offset = "0xFC8F64", VA = "0xFC8F64")]
	public static StringVariable Translate(string lineToTranslate)
	{
		return null;
	}

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xFC9168", Offset = "0xFC9168", VA = "0xFC9168")]
	public LocalisationManager()
	{
	}
}
[Token(Token = "0x20000DC")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB71B8", Offset = "0xCB71B8")]
public class LanguageData : ScriptableObject
{
	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Font m_font;

	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TMP_FontAsset m_fontNormal;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TMP_FontAsset m_fontTitle;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_identifier;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<StringVariable> m_lines;

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xFC16E0", Offset = "0xFC16E0", VA = "0xFC16E0")]
	public LanguageData()
	{
	}
}
[Token(Token = "0x20000DD")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB71C8", Offset = "0xCB71C8")]
public class TextMeshProLocalisationInjector : CacheBehaviour
{
	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public StringVariable m_lineToInject;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _isUGUI;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
	private bool _isTitleFont;

	[Token(Token = "0x600045A")]
	[Address(RVA = "0x107EFA0", Offset = "0x107EFA0", VA = "0x107EFA0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600045B")]
	[Address(RVA = "0x107F098", Offset = "0x107F098", VA = "0x107F098")]
	private void Start()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0x107F5C4", Offset = "0x107F5C4", VA = "0x107F5C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0x107F690", Offset = "0x107F690", VA = "0x107F690")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600045E")]
	[Address(RVA = "0x107F700", Offset = "0x107F700", VA = "0x107F700")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0x107F768", Offset = "0x107F768", VA = "0x107F768")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0x107F24C", Offset = "0x107F24C", VA = "0x107F24C")]
	public void Refresh(StringVariable localisedLine)
	{
	}

	[Token(Token = "0x6000461")]
	[Address(RVA = "0x107F2DC", Offset = "0x107F2DC", VA = "0x107F2DC")]
	public void Inject()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0x107F7D0", Offset = "0x107F7D0", VA = "0x107F7D0")]
	public void ClearLineToInject()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0x107F7DC", Offset = "0x107F7DC", VA = "0x107F7DC")]
	public void SetIsTitleFont(bool value)
	{
	}

	[Token(Token = "0x6000464")]
	[Address(RVA = "0x107F7E8", Offset = "0x107F7E8", VA = "0x107F7E8")]
	public TMP_FontAsset GetFont()
	{
		return null;
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0x107F80C", Offset = "0x107F80C", VA = "0x107F80C")]
	public TextMeshProLocalisationInjector()
	{
	}
}
[Token(Token = "0x20000DE")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB722C", Offset = "0xCB722C")]
public class TextMeshProUGUILocalisationInjector : CacheBehaviour
{
	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public StringVariable m_lineToInject;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private bool _is3DText;

	[Token(Token = "0x6000466")]
	[Address(RVA = "0x107F814", Offset = "0x107F814", VA = "0x107F814")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000467")]
	[Address(RVA = "0x107F8AC", Offset = "0x107F8AC", VA = "0x107F8AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0x107FB7C", Offset = "0x107FB7C", VA = "0x107FB7C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0x107FBE4", Offset = "0x107FBE4", VA = "0x107FBE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0x107FC4C", Offset = "0x107FC4C", VA = "0x107FC4C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0x107F9CC", Offset = "0x107F9CC", VA = "0x107F9CC")]
	public void Refresh(StringVariable localisedLine)
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0x107F9F4", Offset = "0x107F9F4", VA = "0x107F9F4")]
	public void Inject()
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0x107FCB4", Offset = "0x107FCB4", VA = "0x107FCB4")]
	public TextMeshProUGUILocalisationInjector()
	{
	}
}
[Token(Token = "0x20000DF")]
public class ConversationCharacter : CacheBehaviour
{
	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_speedOfFade;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[SerializeField]
	private List<SpriteRenderer> _renderers;

	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _isAppearing;

	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[SerializeField]
	private float _currentCharacterFade;

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xF6D050", Offset = "0xF6D050", VA = "0xF6D050")]
	public void Enter()
	{
	}

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xF6D05C", Offset = "0xF6D05C", VA = "0xF6D05C")]
	public void Leave()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xF6D158", Offset = "0xF6D158", VA = "0xF6D158")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xF6D1CC", Offset = "0xF6D1CC", VA = "0xF6D1CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000472")]
	[Address(RVA = "0xF6D28C", Offset = "0xF6D28C", VA = "0xF6D28C")]
	private void UpdateGraphics()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xF6D15C", Offset = "0xF6D15C", VA = "0xF6D15C")]
	private void PopulateRenderers()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xF6D3A4", Offset = "0xF6D3A4", VA = "0xF6D3A4")]
	private void CleanRenderers()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xF6D414", Offset = "0xF6D414", VA = "0xF6D414")]
	public ConversationCharacter()
	{
	}
}
[Token(Token = "0x20000E0")]
public class ConversationCreator : CacheBehaviour
{
	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_prefabConversation;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ConversationCollection m_conversationsData;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameEvent m_conversationFinished;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xF6D41C", Offset = "0xF6D41C", VA = "0xF6D41C")]
	public void CreateRandomConversation()
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xF6D54C", Offset = "0xF6D54C", VA = "0xF6D54C")]
	public ConversationCreator()
	{
	}
}
[Token(Token = "0x20000E1")]
public class ConversationManager : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x2000589")]
	private struct CurrentLine
	{
		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_index;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCE020", Offset = "0xCCE020")]
		public SheetData m_sheet;
	}

	[Serializable]
	[Token(Token = "0x200058A")]
	private class CurrentScene
	{
		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CurrentLine m_currentLine;

		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterPack m_leftCharacter;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CharacterPack m_rightCharacter;

		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCE058", Offset = "0xCCE058")]
		public CharacterPack m_centerCharacter;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject m_nameInstance;

		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject m_backgroundInstance;

		[Token(Token = "0x60020D7")]
		[Address(RVA = "0xF6F1EC", Offset = "0xF6F1EC", VA = "0xF6F1EC")]
		public CurrentScene()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200058B")]
	public struct CharacterPack
	{
		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public CharacterData m_characterData;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public GameObject m_characterInstance;
	}

	[Token(Token = "0x200058C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF0D0", Offset = "0xCBF0D0")]
	private sealed class <SpawnCharacterName>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConversationManager <>4__this;

		[Token(Token = "0x1700034B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020DB")]
			[Address(RVA = "0xF6EDC0", Offset = "0xF6EDC0", VA = "0xF6EDC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700034C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020DD")]
			[Address(RVA = "0xF6EE28", Offset = "0xF6EE28", VA = "0xF6EE28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020D8")]
		[Address(RVA = "0xF6E6AC", Offset = "0xF6E6AC", VA = "0xF6E6AC")]
		[DebuggerHidden]
		public <SpawnCharacterName>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x60020D9")]
		[Address(RVA = "0xF6E96C", Offset = "0xF6E96C", VA = "0xF6E96C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020DA")]
		[Address(RVA = "0xF6E970", Offset = "0xF6E970", VA = "0xF6E970", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020DC")]
		[Address(RVA = "0xF6EDC8", Offset = "0xF6EDC8", VA = "0xF6EDC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200058D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF0E0", Offset = "0xCBF0E0")]
	private sealed class <SpawnLocalisedLine>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConversationManager <>4__this;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TMP_Text <textMesh>5__2;

		[Token(Token = "0x1700034D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020E1")]
			[Address(RVA = "0xF6F120", Offset = "0xF6F120", VA = "0xF6F120", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700034E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020E3")]
			[Address(RVA = "0xF6F188", Offset = "0xF6F188", VA = "0xF6F188", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020DE")]
		[Address(RVA = "0xF6E6D8", Offset = "0xF6E6D8", VA = "0xF6E6D8")]
		[DebuggerHidden]
		public <SpawnLocalisedLine>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x60020DF")]
		[Address(RVA = "0xF6EE8C", Offset = "0xF6EE8C", VA = "0xF6EE8C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020E0")]
		[Address(RVA = "0xF6EE90", Offset = "0xF6EE90", VA = "0xF6EE90", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020E2")]
		[Address(RVA = "0xF6F128", Offset = "0xF6F128", VA = "0xF6F128", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200058E")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF0F0", Offset = "0xCBF0F0")]
	private sealed class <>c__DisplayClass24_0
	{
		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string characterName;

		[Token(Token = "0x60020E4")]
		[Address(RVA = "0xF6E8CC", Offset = "0xF6E8CC", VA = "0xF6E8CC")]
		public <>c__DisplayClass24_0()
		{
		}

		[Token(Token = "0x60020E5")]
		[Address(RVA = "0xF6E914", Offset = "0xF6E914", VA = "0xF6E914")]
		internal bool <GetCharacterPrefabFrom>b__0(CharacterData character)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_timeBeforeShowingCharacterName;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float m_timeBeforeShowingCharacterDialog;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<SheetDataEvent> m_conversationTriggers;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameEvent OnConversationFinished;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC1E68", Offset = "0xCC1E68")]
	public RosterData _roster;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC1EA4", Offset = "0xCC1EA4")]
	public ConversationData m_conversation;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC1EE0", Offset = "0xCC1EE0")]
	private PrefabHierarchyHolder _prefabHierarchy;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private TMP_Text _textDialog;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[SerializeField]
	private CurrentScene _currentScene;

	[Token(Token = "0x400051C")]
	private const string PREFAB_HIERARCHY_MAIN_TEXT = "TextDialog";

	[Token(Token = "0x400051D")]
	private const string PREFAB_HIERARCY_CHARACTER_LEFT_SLOT = "CharacterLeftSlot";

	[Token(Token = "0x400051E")]
	private const string PREFAB_HIERARCY_CHARACTER_RIGHT_SLOT = "CharacterRightSlot";

	[Token(Token = "0x400051F")]
	private const string PREFAB_HIERARCHY_CHARACTER_CENTER_SLOT = "CharacterCenterSlot";

	[Token(Token = "0x4000520")]
	private const string STAGE_DIRECTION_ENTER_LEFT = "EnterLeft";

	[Token(Token = "0x4000521")]
	private const string STAGE_DIRECTION_ENTER_RIGHT = "EnterRight";

	[Token(Token = "0x4000522")]
	private const string SHEET_COLUMN_CHARACTER = "Character";

	[Token(Token = "0x4000523")]
	private const string SHEET_COLUMN_STAGE_DIRECTION_1 = "Stage_Direction1";

	[Token(Token = "0x17000037")]
	public List<SheetData> Conversation
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0xF6D5D0", Offset = "0xF6D5D0", VA = "0xF6D5D0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000479")]
		[Address(RVA = "0xF6D5EC", Offset = "0xF6D5EC", VA = "0xF6D5EC")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public List<CharacterData> Roster
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0xF6D608", Offset = "0xF6D608", VA = "0xF6D608")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047B")]
		[Address(RVA = "0xF6D624", Offset = "0xF6D624", VA = "0xF6D624")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	private SheetData CurrentLineSheet
	{
		[Token(Token = "0x600048A")]
		[Address(RVA = "0xF6D804", Offset = "0xF6D804", VA = "0xF6D804")]
		get
		{
			return null;
		}
		[Token(Token = "0x600048B")]
		[Address(RVA = "0xF6E8F0", Offset = "0xF6E8F0", VA = "0xF6E8F0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	private int CurrentLineIndex
	{
		[Token(Token = "0x600048C")]
		[Address(RVA = "0xF6D9A0", Offset = "0xF6D9A0", VA = "0xF6D9A0")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600048D")]
		[Address(RVA = "0xF6E8D4", Offset = "0xF6E8D4", VA = "0xF6E8D4")]
		set
		{
		}
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xF6D528", Offset = "0xF6D528", VA = "0xF6D528")]
	public void Begin()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xF6D640", Offset = "0xF6D640", VA = "0xF6D640")]
	public void GoToNextLine()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xF6D664", Offset = "0xF6D664", VA = "0xF6D664")]
	private void IncrementLineNumberOrFinishConversation()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xF6D76C", Offset = "0xF6D76C", VA = "0xF6D76C")]
	private void SpawnLine()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xF6D9BC", Offset = "0xF6D9BC", VA = "0xF6D9BC")]
	private void SpawnCharacterFromStageDirection()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xF6E094", Offset = "0xF6E094", VA = "0xF6E094")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD09CC", Offset = "0xCD09CC")]
	private IEnumerator<float> SpawnCharacterName()
	{
		return null;
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xF6E110", Offset = "0xF6E110", VA = "0xF6E110")]
	private void SpawnCharacterTextBackground()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xF6E46C", Offset = "0xF6E46C", VA = "0xF6E46C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0A30", Offset = "0xCD0A30")]
	private IEnumerator<float> SpawnLocalisedLine()
	{
		return null;
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xF6E4E8", Offset = "0xF6E4E8", VA = "0xF6E4E8")]
	private void SpawnButtons()
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xF6E704", Offset = "0xF6E704", VA = "0xF6E704")]
	private void GenerateEventFlowFromReferencedConversation()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xF6E83C", Offset = "0xF6E83C", VA = "0xF6E83C")]
	private void FinishConversation()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xF6E5C0", Offset = "0xF6E5C0", VA = "0xF6E5C0")]
	private GameObject GetCharacterSlotFrom(string stageDirection)
	{
		return null;
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xF6E4EC", Offset = "0xF6E4EC", VA = "0xF6E4EC")]
	private CharacterData GetCharacterPrefabFrom(string characterName)
	{
		return null;
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xF6D820", Offset = "0xF6D820", VA = "0xF6D820")]
	private void SetLineTo(int lineNumber)
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0xF6E90C", Offset = "0xF6E90C", VA = "0xF6E90C")]
	public ConversationManager()
	{
	}
}
[Token(Token = "0x20000E2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7290", Offset = "0xCB7290")]
public class CharacterData : ScriptableObject
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_name;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_character;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_background;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_nameBackground;

	[Token(Token = "0x600048F")]
	[Address(RVA = "0xF6C1D8", Offset = "0xF6C1D8", VA = "0xF6C1D8")]
	public CharacterData()
	{
	}
}
[Token(Token = "0x20000E3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB72F0", Offset = "0xCB72F0")]
public class ConversationData : ScriptableObject
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SheetData> m_conversation;

	[Token(Token = "0x6000490")]
	[Address(RVA = "0xF6D554", Offset = "0xF6D554", VA = "0xF6D554")]
	public ConversationData()
	{
	}
}
[Token(Token = "0x20000E4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7350", Offset = "0xCB7350")]
public class RosterData : ScriptableObject
{
	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<CharacterData> m_roster;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xFFAC2C", Offset = "0xFFAC2C", VA = "0xFFAC2C")]
	public RosterData()
	{
	}
}
[Token(Token = "0x20000E5")]
public class SheetData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x200058F")]
	public struct SpreadsheetEntry
	{
		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCE090", Offset = "0xCCE090")]
		public string m_column;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_value;
	}

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SpreadsheetEntry> m_entries;

	[Token(Token = "0x1700003B")]
	public string FirstLineName
	{
		[Token(Token = "0x6000492")]
		[Address(RVA = "0x1020094", Offset = "0x1020094", VA = "0x1020094")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003C")]
	public string ConversationName
	{
		[Token(Token = "0x6000493")]
		[Address(RVA = "0x102024C", Offset = "0x102024C", VA = "0x102024C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0x1020390", Offset = "0x1020390", VA = "0x1020390")]
	public bool Have(string columnName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0x102044C", Offset = "0x102044C", VA = "0x102044C")]
	public string Get(string columnName)
	{
		return null;
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0x1020534", Offset = "0x1020534", VA = "0x1020534")]
	public string GetIfExist(string columnName)
	{
		return null;
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0x10201A8", Offset = "0x10201A8", VA = "0x10201A8")]
	private string[] GetSplitedName()
	{
		return null;
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0x1020618", Offset = "0x1020618", VA = "0x1020618")]
	public SheetData()
	{
	}
}
[Token(Token = "0x20000E6")]
public class SpreadSheetData : ScriptableObject
{
	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SheetData> m_lines;

	[Token(Token = "0x6000499")]
	[Address(RVA = "0x1077A14", Offset = "0x1077A14", VA = "0x1077A14")]
	public SpreadSheetData()
	{
	}
}
[Token(Token = "0x20000E7")]
public class TextSegmentData : MonoBehaviour
{
	[Token(Token = "0x600049A")]
	[Address(RVA = "0x107FCBC", Offset = "0x107FCBC", VA = "0x107FCBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0x107FCC0", Offset = "0x107FCC0", VA = "0x107FCC0")]
	private void Update()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0x107FCC4", Offset = "0x107FCC4", VA = "0x107FCC4")]
	public TextSegmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x20000E8")]
public struct SheetDataEvent
{
	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public SheetData m_line;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public UnityEvent OnLineBegin;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public UnityEvent OnLineDisplayed;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnLineSkipped;
}
[Token(Token = "0x20000E9")]
public class OculusManager : CacheBehaviour
{
	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1F2C", Offset = "0xCC1F2C")]
	public OculusCredential m_oculusCredentialQuest;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public OculusCredential m_oculusCredentialPC;

	[Token(Token = "0x600049D")]
	[Address(RVA = "0x11BB2EC", Offset = "0x11BB2EC", VA = "0x11BB2EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600049E")]
	[Address(RVA = "0x11BB3BC", Offset = "0x11BB3BC", VA = "0x11BB3BC")]
	private void DRMCallback(Message msg)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0x11BB3F0", Offset = "0x11BB3F0", VA = "0x11BB3F0")]
	public static void UnlockAchievement(AchievementBaseData achievement)
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0x11BB414", Offset = "0x11BB414", VA = "0x11BB414")]
	public OculusManager()
	{
	}
}
[Token(Token = "0x20000EA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB73B0", Offset = "0xCB73B0")]
public class OculusCredential : ScriptableObject
{
	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_appId;

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0x11BB2E4", Offset = "0x11BB2E4", VA = "0x11BB2E4")]
	public OculusCredential()
	{
	}
}
[Token(Token = "0x20000EB")]
[ExecuteInEditMode]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB73F4", Offset = "0xCB73F4")]
public class ParticleLookAtWorldOrigin : MonoBehaviour
{
	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1F64", Offset = "0xCC1F64")]
	public bool m_useDebugRotation;

	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 m_debugRotation;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem.Particle[] _particles;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _worldOrigin;

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0x14EEC60", Offset = "0x14EEC60", VA = "0x14EEC60")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0x14EECB4", Offset = "0x14EECB4", VA = "0x14EECB4")]
	private void Initialize()
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0x14EEDE0", Offset = "0x14EEDE0", VA = "0x14EEDE0")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0x14EEF50", Offset = "0x14EEF50", VA = "0x14EEF50")]
	public ParticleLookAtWorldOrigin()
	{
	}
}
[Token(Token = "0x20000EC")]
public class VRSDKPositionSwitcher : CacheBehaviour
{
	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1F9C", Offset = "0xCC1F9C")]
	public Vector3 m_positionForOculus;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC1FD4", Offset = "0xCC1FD4")]
	public Vector3 m_positionForOpenVR;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC200C", Offset = "0xCC200C")]
	public Vector3 m_positionForPS4;

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0x11060D4", Offset = "0x11060D4", VA = "0x11060D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0x11061E0", Offset = "0x11061E0", VA = "0x11061E0")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0x11062FC", Offset = "0x11062FC", VA = "0x11062FC")]
	private void SwitchToOculus()
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0x1106354", Offset = "0x1106354", VA = "0x1106354")]
	private void SwitchToOpenVR()
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0x11063AC", Offset = "0x11063AC", VA = "0x11063AC")]
	private void SwitchToPS4()
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0x11063B0", Offset = "0x11063B0", VA = "0x11063B0")]
	public VRSDKPositionSwitcher()
	{
	}
}
[Token(Token = "0x20000ED")]
public class VRSDKRotationSwitcher : CacheBehaviour
{
	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2044", Offset = "0xCC2044")]
	public Vector3 m_rotationForOculus;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC207C", Offset = "0xCC207C")]
	public Vector3 m_rotationForOpenVR;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC20B4", Offset = "0xCC20B4")]
	public Vector3 m_rotationForPS4;

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0x11063B8", Offset = "0x11063B8", VA = "0x11063B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0x110659C", Offset = "0x110659C", VA = "0x110659C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0x11066B8", Offset = "0x11066B8", VA = "0x11066B8")]
	private void SwitchToOculus()
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0x1106710", Offset = "0x1106710", VA = "0x1106710")]
	private void SwitchToOpenVR()
	{
	}

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0x1106768", Offset = "0x1106768", VA = "0x1106768")]
	private void SwitchToPS4()
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0x110676C", Offset = "0x110676C", VA = "0x110676C")]
	public VRSDKRotationSwitcher()
	{
	}
}
[Token(Token = "0x20000EE")]
public class SkyboxRotator : MonoBehaviour
{
	[Token(Token = "0x60004B2")]
	[Address(RVA = "0x106C86C", Offset = "0x106C86C", VA = "0x106C86C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0x106C950", Offset = "0x106C950", VA = "0x106C950")]
	public SkyboxRotator()
	{
	}
}
[Token(Token = "0x20000EF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7468", Offset = "0xCB7468")]
public class SteamCredentialData : ScriptableObject
{
	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public uint m_applicationID;

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0x10780A8", Offset = "0x10780A8", VA = "0x10780A8")]
	public SteamCredentialData()
	{
	}
}
[Token(Token = "0x20000F0")]
public class SteamManager : CacheBehaviour
{
	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SteamCredentialData m_steamCredentialData;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string m_playerName;

	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ulong m_playerSteamId;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public string m_playerLanguage;

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0x10780B0", Offset = "0x10780B0", VA = "0x10780B0")]
	public SteamManager()
	{
	}
}
[Token(Token = "0x20000F1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB74AC", Offset = "0xCB74AC")]
public class VivePortCredential : ScriptableObject
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_vivePortId;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_vivePortKey;

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0x1106FD0", Offset = "0x1106FD0", VA = "0x1106FD0")]
	public VivePortCredential()
	{
	}
}
[Token(Token = "0x20000F2")]
public class VivePortManager : CacheBehaviour
{
	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC20EC", Offset = "0xCC20EC")]
	public VivePortCredential m_vivePortCredential;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0x1106FD8", Offset = "0x1106FD8", VA = "0x1106FD8")]
	public VivePortManager()
	{
	}
}
[Token(Token = "0x20000F3")]
public class SpawnObjectInCircle : MonoBehaviour
{
	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> m_objectsToSpawn;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_centerOfSpawnCircle;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_radiusOfCircle;

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0x1072AD0", Offset = "0x1072AD0", VA = "0x1072AD0")]
	public void Start()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0x1072AD4", Offset = "0x1072AD4", VA = "0x1072AD4")]
	private void Spawn()
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0x1072D24", Offset = "0x1072D24", VA = "0x1072D24")]
	private Vector3 RandomCircle(Vector3 center, float radius, float angle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0x1072DE0", Offset = "0x1072DE0", VA = "0x1072DE0")]
	public SpawnObjectInCircle()
	{
	}
}
[Token(Token = "0x20000F4")]
public class ArrowInteractor : MonoBehaviour
{
	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_tag;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_handTag;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_axisName;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BoolVariable m_handInGesture;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObjectArrayUnityEvent OnArrowPickedUp;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObjectUnityEvent OnHandGestureStarted;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObjectUnityEvent OnAbortGesture;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IntUnityEvent OnArrowNavPickedUp;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public WandDataVariable m_wand;

	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_arrowMagnet;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject m_arrowLookAt;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_hitEffect;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject[] m_shamanSphereDeformable;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_deformationFactorMax;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float m_deformationMinDistance;

	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float m_deformationMaxDistance;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float m_distanceToReachForCompleteArrow;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObjectUnityEvent OnSpellChosen;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public GameObjectVariable m_currentCurve;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public FloatVariable m_currentDistanceBetweenArrowAndHand;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public FloatVariable m_crystalSelected;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BoolVariable m_arrowSelected;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_fallOfRatio;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public StringUnityEvent OnActivateHand;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SpellDataVariable m_handSpell;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private GameObject _arrow;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public MagnetDeformer _currentMagnetDeformer;

	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool _selected;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE9")]
	private bool _completed;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private GameObject _fakeCrystal;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Transform _shamanSphereTransform;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Vector3 _crystalSnapShotPosition;

	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private Quaternion _crystalSnapShotRotation;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject _crystal;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObjectHolder _currentHolder;

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0x121FD44", Offset = "0x121FD44", VA = "0x121FD44")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0x121FEF4", Offset = "0x121FEF4", VA = "0x121FEF4")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0x1220538", Offset = "0x1220538", VA = "0x1220538")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0x12206A4", Offset = "0x12206A4", VA = "0x12206A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0x122070C", Offset = "0x122070C", VA = "0x122070C")]
	public void Update()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0x12216BC", Offset = "0x12216BC", VA = "0x12216BC")]
	public void DestroyFakeCrystal()
	{
	}

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0x12215DC", Offset = "0x12215DC", VA = "0x12215DC")]
	public static Vector3 GetClampedPoint(Vector3 center, Vector3 objectToFollow, float radius)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0x12216C0", Offset = "0x12216C0", VA = "0x12216C0")]
	public ArrowInteractor()
	{
	}
}
[Token(Token = "0x20000F5")]
public class DotInteractor : MonoBehaviour
{
	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VelocityTracker m_velocity;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_magnitudeTreshold;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_dotImpact;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_multipleDotImpact;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObjectVariable m_currentCurve;

	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntUnityEvent OnDotHit;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObjectUnityEvent OnNewSegmentTouched;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObjectUnityEvent OnGestureFinished;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public string m_axisName;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string m_handtag;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _dotOrderIndex;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private int _numberOfDots;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xF33364", Offset = "0xF33364", VA = "0xF33364")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xF3370C", Offset = "0xF3370C", VA = "0xF3370C")]
	public void Update()
	{
	}

	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xF33484", Offset = "0xF33484", VA = "0xF33484")]
	public void DestroyDot(Collider other)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xF33750", Offset = "0xF33750", VA = "0xF33750")]
	public void OnTriggerReleased()
	{
	}

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xF33758", Offset = "0xF33758", VA = "0xF33758")]
	public DotInteractor()
	{
	}
}
[Token(Token = "0x20000F6")]
public class DotManager : MonoBehaviour
{
	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_inOrder;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_order;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_hp;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_axisName;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_handTag;

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xF33760", Offset = "0xF33760", VA = "0xF33760")]
	public void Update()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xF337FC", Offset = "0xF337FC", VA = "0xF337FC")]
	public DotManager()
	{
	}
}
[Token(Token = "0x20000F7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB74F0", Offset = "0xCB74F0")]
public class GalaxyData : ScriptableObject
{
	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_galaxyId;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_galaxyName;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_empty;

	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<SolarSystemData> m_solarSystems;

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xF3B51C", Offset = "0xF3B51C", VA = "0xF3B51C")]
	public void RegenerateGalaxy()
	{
	}

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xF3B528", Offset = "0xF3B528", VA = "0xF3B528")]
	public GalaxyData()
	{
	}
}
[Token(Token = "0x20000F8")]
public static class MeshExtension
{
	[Serializable]
	[Token(Token = "0x2000590")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF100", Offset = "0xCBF100")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, float> <>9__0_0;

		[Token(Token = "0x60020E7")]
		[Address(RVA = "0x10C720C", Offset = "0x10C720C", VA = "0x10C720C")]
		public <>c()
		{
		}

		[Token(Token = "0x60020E8")]
		[Address(RVA = "0x10C7214", Offset = "0x10C7214", VA = "0x10C7214")]
		internal float <PointIsWithinBoundingSphere>b__0_0(float vector)
		{
			return default(float);
		}
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0x10C6E0C", Offset = "0x10C6E0C", VA = "0x10C6E0C")]
	public static bool PointIsWithinBoundingSphere(this Mesh mesh, Vector3 point)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000F9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7560", Offset = "0xCB7560")]
public class PlanetData : ScriptableObject
{
	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_prefabPlanet;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_prefabPlanetString;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RecipeData m_recipe;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_type;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_boss;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_generatedPath;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_regenerated;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 m_mapPosition;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Quaternion m_mapRotation;

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xFEA5DC", Offset = "0xFEA5DC", VA = "0xFEA5DC")]
	public PlanetData()
	{
	}
}
[Token(Token = "0x20000FA")]
public class ProceduralManager : CacheBehaviour
{
	[Token(Token = "0x2000591")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF110", Offset = "0xCBF110")]
	private sealed class <StartProceduralRoutine>d__50 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProceduralManager <>4__this;

		[Token(Token = "0x1700034F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60020EC")]
			[Address(RVA = "0xFF4918", Offset = "0xFF4918", VA = "0xFF4918", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000350")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60020EE")]
			[Address(RVA = "0xFF4980", Offset = "0xFF4980", VA = "0xFF4980", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60020E9")]
		[Address(RVA = "0xFEDAB0", Offset = "0xFEDAB0", VA = "0xFEDAB0")]
		[DebuggerHidden]
		public <StartProceduralRoutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x60020EA")]
		[Address(RVA = "0xFF4608", Offset = "0xFF4608", VA = "0xFF4608", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60020EB")]
		[Address(RVA = "0xFF460C", Offset = "0xFF460C", VA = "0xFF460C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60020ED")]
		[Address(RVA = "0xFF4920", Offset = "0xFF4920", VA = "0xFF4920", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000592")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF120", Offset = "0xCBF120")]
	private sealed class <>c__DisplayClass53_0
	{
		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SolarSystemData solarSystem;

		[Token(Token = "0x60020EF")]
		[Address(RVA = "0xFF2FF8", Offset = "0xFF2FF8", VA = "0xFF2FF8")]
		public <>c__DisplayClass53_0()
		{
		}

		[Token(Token = "0x60020F0")]
		[Address(RVA = "0xFF3000", Offset = "0xFF3000", VA = "0xFF3000")]
		internal bool <CreateGalaxy>b__1(PlanetData x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x2000593")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF130", Offset = "0xCBF130")]
	private sealed class <>c
	{
		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__53_0;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_2;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_3;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_4;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_5;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_6;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Predicate<SheetData> <>9__54_0;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_7;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__54_8;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Predicate<SheetData> <>9__54_1;

		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__55_0;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__56_0;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__56_1;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__56_2;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__56_3;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_0;

		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_1;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_2;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_3;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_4;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__57_5;

		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__59_2;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__59_0;

		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__59_1;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__63_0;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__63_1;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__64_0;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__64_2;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static Func<SheetData.SpreadsheetEntry, bool> <>9__66_2;

		[Token(Token = "0x60020F2")]
		[Address(RVA = "0xFF2420", Offset = "0xFF2420", VA = "0xFF2420")]
		public <>c()
		{
		}

		[Token(Token = "0x60020F3")]
		[Address(RVA = "0xFF2428", Offset = "0xFF2428", VA = "0xFF2428")]
		internal bool <CreateGalaxy>b__53_0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F4")]
		[Address(RVA = "0xFF247C", Offset = "0xFF247C", VA = "0xFF247C")]
		internal bool <CreateSolarSystem>b__54_2(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F5")]
		[Address(RVA = "0xFF24D0", Offset = "0xFF24D0", VA = "0xFF24D0")]
		internal bool <CreateSolarSystem>b__54_3(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F6")]
		[Address(RVA = "0xFF2524", Offset = "0xFF2524", VA = "0xFF2524")]
		internal bool <CreateSolarSystem>b__54_4(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F7")]
		[Address(RVA = "0xFF2578", Offset = "0xFF2578", VA = "0xFF2578")]
		internal bool <CreateSolarSystem>b__54_5(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F8")]
		[Address(RVA = "0xFF25CC", Offset = "0xFF25CC", VA = "0xFF25CC")]
		internal bool <CreateSolarSystem>b__54_0(SheetData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60020F9")]
		[Address(RVA = "0xFF26E4", Offset = "0xFF26E4", VA = "0xFF26E4")]
		internal bool <CreateSolarSystem>b__54_6(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FA")]
		[Address(RVA = "0xFF2738", Offset = "0xFF2738", VA = "0xFF2738")]
		internal bool <CreateSolarSystem>b__54_1(SheetData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FB")]
		[Address(RVA = "0xFF2914", Offset = "0xFF2914", VA = "0xFF2914")]
		internal bool <CreateSolarSystem>b__54_7(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FC")]
		[Address(RVA = "0xFF2968", Offset = "0xFF2968", VA = "0xFF2968")]
		internal bool <CreateSolarSystem>b__54_8(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FD")]
		[Address(RVA = "0xFF29BC", Offset = "0xFF29BC", VA = "0xFF29BC")]
		internal bool <CreatePlanet>b__55_0(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FE")]
		[Address(RVA = "0xFF2A10", Offset = "0xFF2A10", VA = "0xFF2A10")]
		internal bool <CreateRecipe>b__56_0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x60020FF")]
		[Address(RVA = "0xFF2A64", Offset = "0xFF2A64", VA = "0xFF2A64")]
		internal bool <CreateRecipe>b__56_1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002100")]
		[Address(RVA = "0xFF2AB8", Offset = "0xFF2AB8", VA = "0xFF2AB8")]
		internal bool <CreateRecipe>b__56_2(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002101")]
		[Address(RVA = "0xFF2B0C", Offset = "0xFF2B0C", VA = "0xFF2B0C")]
		internal bool <CreateRecipe>b__56_3(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002102")]
		[Address(RVA = "0xFF2B60", Offset = "0xFF2B60", VA = "0xFF2B60")]
		internal bool <CreateRecipeData>b__57_0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002103")]
		[Address(RVA = "0xFF2BB4", Offset = "0xFF2BB4", VA = "0xFF2BB4")]
		internal bool <CreateRecipeData>b__57_1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002104")]
		[Address(RVA = "0xFF2C08", Offset = "0xFF2C08", VA = "0xFF2C08")]
		internal bool <CreateRecipeData>b__57_2(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002105")]
		[Address(RVA = "0xFF2C5C", Offset = "0xFF2C5C", VA = "0xFF2C5C")]
		internal bool <CreateRecipeData>b__57_3(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002106")]
		[Address(RVA = "0xFF2CB0", Offset = "0xFF2CB0", VA = "0xFF2CB0")]
		internal bool <CreateRecipeData>b__57_4(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002107")]
		[Address(RVA = "0xFF2D04", Offset = "0xFF2D04", VA = "0xFF2D04")]
		internal bool <CreateRecipeData>b__57_5(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002108")]
		[Address(RVA = "0xFF2D58", Offset = "0xFF2D58", VA = "0xFF2D58")]
		internal bool <CreateMoonWithPlanetData>b__59_2(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002109")]
		[Address(RVA = "0xFF2DAC", Offset = "0xFF2DAC", VA = "0xFF2DAC")]
		internal bool <CreateMoonWithPlanetData>b__59_0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600210A")]
		[Address(RVA = "0xFF2E00", Offset = "0xFF2E00", VA = "0xFF2E00")]
		internal bool <CreateMoonWithPlanetData>b__59_1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600210B")]
		[Address(RVA = "0xFF2E54", Offset = "0xFF2E54", VA = "0xFF2E54")]
		internal bool <GetRandomRate>b__63_0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600210C")]
		[Address(RVA = "0xFF2EA8", Offset = "0xFF2EA8", VA = "0xFF2EA8")]
		internal bool <GetRandomRate>b__63_1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}

		[Token(Token = "0x600210D")]
		[Address(RVA = "0xFF2EFC", Offset = "0xFF2EFC", VA = "0xFF2EFC")]
		internal bool <FindPossibleRemainingPlanet>b__64_0(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x600210E")]
		[Address(RVA = "0xFF2F50", Offset = "0xFF2F50", VA = "0xFF2F50")]
		internal bool <FindPossibleRemainingPlanet>b__64_2(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}

		[Token(Token = "0x600210F")]
		[Address(RVA = "0xFF2FA4", Offset = "0xFF2FA4", VA = "0xFF2FA4")]
		internal bool <RaiseDifficulty>b__66_2(SheetData.SpreadsheetEntry y)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000594")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF140", Offset = "0xCBF140")]
	private sealed class <CreateGalaxy>d__53 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProceduralManager <>4__this;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private <>c__DisplayClass53_0 <>8__1;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GalaxyData <galaxyData>5__2;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<SheetData> <jsons>5__3;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int <i>5__4;

		[Token(Token = "0x17000351")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002113")]
			[Address(RVA = "0xFF3A54", Offset = "0xFF3A54", VA = "0xFF3A54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000352")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002115")]
			[Address(RVA = "0xFF3ABC", Offset = "0xFF3ABC", VA = "0xFF3ABC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002110")]
		[Address(RVA = "0xFEE414", Offset = "0xFEE414", VA = "0xFEE414")]
		[DebuggerHidden]
		public <CreateGalaxy>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002111")]
		[Address(RVA = "0xFF31BC", Offset = "0xFF31BC", VA = "0xFF31BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002112")]
		[Address(RVA = "0xFF31C0", Offset = "0xFF31C0", VA = "0xFF31C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002114")]
		[Address(RVA = "0xFF3A5C", Offset = "0xFF3A5C", VA = "0xFF3A5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000595")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF150", Offset = "0xCBF150")]
	private sealed class <CreateSolarSystem>d__54 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ProceduralManager <>4__this;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SolarSystemData solarSystem;

		[Token(Token = "0x17000353")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002119")]
			[Address(RVA = "0xFF453C", Offset = "0xFF453C", VA = "0xFF453C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000354")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600211B")]
			[Address(RVA = "0xFF45A4", Offset = "0xFF45A4", VA = "0xFF45A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002116")]
		[Address(RVA = "0xFEE4D8", Offset = "0xFEE4D8", VA = "0xFEE4D8")]
		[DebuggerHidden]
		public <CreateSolarSystem>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6002117")]
		[Address(RVA = "0xFF3B20", Offset = "0xFF3B20", VA = "0xFF3B20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002118")]
		[Address(RVA = "0xFF3B24", Offset = "0xFF3B24", VA = "0xFF3B24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600211A")]
		[Address(RVA = "0xFF4544", Offset = "0xFF4544", VA = "0xFF4544", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000596")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF160", Offset = "0xCBF160")]
	private sealed class <>c__DisplayClass55_0
	{
		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string planettype;

		[Token(Token = "0x600211C")]
		[Address(RVA = "0xFEEBB0", Offset = "0xFEEBB0", VA = "0xFEEBB0")]
		public <>c__DisplayClass55_0()
		{
		}

		[Token(Token = "0x600211D")]
		[Address(RVA = "0xFF30B0", Offset = "0xFF30B0", VA = "0xFF30B0")]
		internal bool <CreatePlanet>b__1(PlanetData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000597")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF170", Offset = "0xCBF170")]
	private sealed class <>c__DisplayClass57_0
	{
		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string worldPrefabStr;

		[Token(Token = "0x600211E")]
		[Address(RVA = "0xFF09D0", Offset = "0xFF09D0", VA = "0xFF09D0")]
		public <>c__DisplayClass57_0()
		{
		}

		[Token(Token = "0x600211F")]
		[Address(RVA = "0xFF30DC", Offset = "0xFF30DC", VA = "0xFF30DC")]
		internal bool <CreateRecipeData>b__6(GameObject x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000598")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF180", Offset = "0xCBF180")]
	private sealed class <>c__DisplayClass57_1
	{
		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string nameEnum;

		[Token(Token = "0x6002120")]
		[Address(RVA = "0xFF09D8", Offset = "0xFF09D8", VA = "0xFF09D8")]
		public <>c__DisplayClass57_1()
		{
		}

		[Token(Token = "0x6002121")]
		[Address(RVA = "0xFF3114", Offset = "0xFF3114", VA = "0xFF3114")]
		internal bool <CreateRecipeData>b__7(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000599")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF190", Offset = "0xCBF190")]
	private sealed class <>c__DisplayClass61_0
	{
		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string fieldToCheck;

		[Token(Token = "0x6002122")]
		[Address(RVA = "0xFF0EB0", Offset = "0xFF0EB0", VA = "0xFF0EB0")]
		public <>c__DisplayClass61_0()
		{
		}

		[Token(Token = "0x6002123")]
		[Address(RVA = "0xFF3184", Offset = "0xFF3184", VA = "0xFF3184")]
		internal bool <GetMultiIntValue>b__0(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200059A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF1A0", Offset = "0xCBF1A0")]
	private sealed class <>c__DisplayClass64_0
	{
		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string planettype;

		[Token(Token = "0x6002124")]
		[Address(RVA = "0xFF1144", Offset = "0xFF1144", VA = "0xFF1144")]
		public <>c__DisplayClass64_0()
		{
		}

		[Token(Token = "0x6002125")]
		[Address(RVA = "0xFF3198", Offset = "0xFF3198", VA = "0xFF3198")]
		internal bool <FindPossibleRemainingPlanet>b__1(PlanetData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2124", Offset = "0xCC2124")]
	public IntVariable m_difficulty;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC215C", Offset = "0xCC215C")]
	public SpreadsheetDataVariable m_diffSpreadsheet;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2194", Offset = "0xCC2194")]
	public SpreadsheetDataVariable m_galaxySpreadsheet;

	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC21CC", Offset = "0xCC21CC")]
	public SpreadsheetDataCollection m_systemSolarSpreadsheets;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2204", Offset = "0xCC2204")]
	public SpreadsheetDataVariable m_levelRecipeSpreadsheet;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC223C", Offset = "0xCC223C")]
	public SpreadsheetDataVariable m_moonSpreadsheet;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2274", Offset = "0xCC2274")]
	public IntVariable m_galaxyId;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC22AC", Offset = "0xCC22AC")]
	public bool m_generateGalaxy;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC22E4", Offset = "0xCC22E4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC22E4", Offset = "0xCC22E4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC22E4", Offset = "0xCC22E4")]
	public GalaxyDataVariable m_galaxyDataHolder;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2358", Offset = "0xCC2358")]
	public SolarSystemCollection m_solarSystemDataHolder;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2390", Offset = "0xCC2390")]
	public GameObjectCollection m_allPlanetsCollection;

	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC23C8", Offset = "0xCC23C8")]
	public GameObjectCollection m_prefabWorlds;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2400", Offset = "0xCC2400")]
	public MoonDataCollection m_moonDatas;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2438", Offset = "0xCC2438")]
	public SolarSystemVariable m_currentSolarSystem;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public IntVariable m_currentSolarSystemId;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public int m_maxMoonNumber;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2470", Offset = "0xCC2470")]
	public GameModeTypeVariable m_gameModeVariable;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC24A8", Offset = "0xCC24A8")]
	public BoolVariable m_isNewGameVariable;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public BoolVariable m_skipTutoVariable;

	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public BoolVariable m_combatTutoVariable;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public BoolVariable m_cradleTutoVariable;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public BoolVariable m_firstTimeShopVariable;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC24E0", Offset = "0xCC24E0")]
	public IntVariable m_numberOfSystems;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public IntVariable m_numberOfPlanetsToReveal;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public IntVariable m_numberOfLevelFinished;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2518", Offset = "0xCC2518")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC2518", Offset = "0xCC2518")]
	public UnityEvent OnNewSolarSystem;

	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UnityEvent OnGameFinish;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public IntUnityEvent OnFirstPlanetPicked;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public IntUnityEvent OnRecipeGenerated;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public UnityEvent OnProceduralCreated;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public BoolVariable m_bossRevealed;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2568", Offset = "0xCC2568")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC2568", Offset = "0xCC2568")]
	public IntVariable m_currentAzote;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public IntVariable m_currentCarbon;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public IntVariable m_currentPhosphorus;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public IntVariable m_currentSulfur;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public IntVariable m_currentWater;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC25B8", Offset = "0xCC25B8")]
	public IntVariable m_neededAzote;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public IntVariable m_neededCarbon;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public IntVariable m_neededPhosphorus;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public IntVariable m_neededSulfur;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public IntVariable m_neededWater;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC25CC", Offset = "0xCC25CC")]
	public FloatVariable m_percentAzote;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public FloatVariable m_percentCarbon;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public FloatVariable m_percentPhosphorus;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public FloatVariable m_percentSulfur;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public FloatVariable m_percentWater;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC25E0", Offset = "0xCC25E0")]
	public IntVariable m_currentNumberOfMoons;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	public IntVariable m_currentNumberOfPlanets;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public IntVariable m_currentNumberOfMoonsRegen;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	private int _allocatedPoints;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	private List<PlanetData> _firstPlanets;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	private List<PlanetData> _tutoPlanets;

	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	private bool _planetFetched;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	private Dictionary<string, List<SheetData>> _moonsByElement;

	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	private string[] _moonElementsToHave;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	private int _countAzote;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
	private int _countCarbon;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	private int _countPhosphorus;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
	private int _countSulfur;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	private int _countWater;

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xFED9BC", Offset = "0xFED9BC", VA = "0xFED9BC")]
	public void StartProcedural()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xFEDA34", Offset = "0xFEDA34", VA = "0xFEDA34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0AA4", Offset = "0xCD0AA4")]
	private IEnumerator<float> StartProceduralRoutine()
	{
		return null;
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xFEDADC", Offset = "0xFEDADC", VA = "0xFEDADC")]
	public void RefreshNeededElementsCount()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xFEDC24", Offset = "0xFEDC24", VA = "0xFEDC24")]
	public void GetNextSolarSystem()
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xFEE398", Offset = "0xFEE398", VA = "0xFEE398")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0B08", Offset = "0xCD0B08")]
	public IEnumerator<float> CreateGalaxy()
	{
		return null;
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xFEE440", Offset = "0xFEE440", VA = "0xFEE440")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0B6C", Offset = "0xCD0B6C")]
	public IEnumerator<float> CreateSolarSystem(SolarSystemData solarSystem)
	{
		return null;
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xFEE504", Offset = "0xFEE504", VA = "0xFEE504")]
	public void CreatePlanet(int min, SheetData jsonPlanet, SolarSystemData solarSystem, Dictionary<string, List<SheetData>> recipesByType)
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xFEEBB8", Offset = "0xFEEBB8", VA = "0xFEEBB8")]
	public void CreateRecipe(PlanetData planet, SolarSystemData solarSystem, string path, int index, Dictionary<string, List<SheetData>> recipesByType)
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xFEF7DC", Offset = "0xFEF7DC", VA = "0xFEF7DC")]
	public void CreateRecipeData(RecipeData recipeData, SheetData recipe)
	{
	}

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xFF09E0", Offset = "0xFF09E0", VA = "0xFF09E0")]
	public void CreateMoon(int instanceId)
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xFEFFE4", Offset = "0xFEFFE4", VA = "0xFEFFE4")]
	private void CreateMoonWithPlanetData(PlanetData planetData, SolarSystemData solarSystem)
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xFF0D10", Offset = "0xFF0D10", VA = "0xFF0D10")]
	public int GetMultiIntValue(JSONObject json, int checkVariable, string fieldToCheck)
	{
		return default(int);
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xFEF2F0", Offset = "0xFEF2F0", VA = "0xFEF2F0")]
	public int GetMultiIntValue(SheetData json, int checkVariable, string fieldToCheck)
	{
		return default(int);
	}

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xFF09E4", Offset = "0xFF09E4", VA = "0xFF09E4")]
	public JSONObject GetRandomRate(List<JSONObject> jsonList)
	{
		return null;
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xFEF510", Offset = "0xFEF510", VA = "0xFEF510")]
	public SheetData GetRandomRate(List<SheetData> jsonList)
	{
		return null;
	}

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xFF0EB8", Offset = "0xFF0EB8", VA = "0xFF0EB8")]
	public SheetData FindPossibleRemainingPlanet(SolarSystemData solarSystem, SheetData planet)
	{
		return null;
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xFF114C", Offset = "0xFF114C", VA = "0xFF114C")]
	public void LoadCurrentSystem()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xFEDEE4", Offset = "0xFEDEE4", VA = "0xFEDEE4")]
	public void RaiseDifficulty()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xFF1790", Offset = "0xFF1790", VA = "0xFF1790")]
	public void OnFirstPlanet()
	{
	}

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xFF19BC", Offset = "0xFF19BC", VA = "0xFF19BC")]
	public void OnFirstTuto()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xFF0B60", Offset = "0xFF0B60", VA = "0xFF0B60")]
	private MoonData GetMoonData(string moonName)
	{
		return null;
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xFF1BE4", Offset = "0xFF1BE4", VA = "0xFF1BE4")]
	private MoonElement GetMoonElementFromString(string str)
	{
		return default(MoonElement);
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xFF0C2C", Offset = "0xFF0C2C", VA = "0xFF0C2C")]
	private void AddToMaxVariableDependingOnElement(MoonElement elmt, ref SolarSystemData solarSystem)
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xFF1D2C", Offset = "0xFF1D2C", VA = "0xFF1D2C")]
	private void ResetElementsCount(SolarSystemData solarSystem)
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xFF1E80", Offset = "0xFF1E80", VA = "0xFF1E80")]
	public void OnAllMoonTyped()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xFF1E84", Offset = "0xFF1E84", VA = "0xFF1E84")]
	private void SetNeededCount(IntVariable maxVariable, int allCount, FloatVariable percent)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xFF15C0", Offset = "0xFF15C0", VA = "0xFF15C0")]
	private void CalculateAnalyticsVariables()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xFF1684", Offset = "0xFF1684", VA = "0xFF1684")]
	private void CalculateAnalyticsTotalOfMoonsRegen()
	{
	}

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xFF1EC8", Offset = "0xFF1EC8", VA = "0xFF1EC8")]
	private int CalculateCountOfNeeded(int allCount, FloatVariable percent)
	{
		return default(int);
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xFF1FC0", Offset = "0xFF1FC0", VA = "0xFF1FC0")]
	private void CalculateNeededForSystem(SolarSystemData solarSystem)
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xFF2098", Offset = "0xFF2098", VA = "0xFF2098")]
	private void CreateDirectoryIfNotExists(string path)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xFF20DC", Offset = "0xFF20DC", VA = "0xFF20DC")]
	private void CreateAssetIfNotExists(string path, string name, ScriptableObject data)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xFF20E0", Offset = "0xFF20E0", VA = "0xFF20E0")]
	public ProceduralManager()
	{
	}

	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xFF21C4", Offset = "0xFF21C4", VA = "0xFF21C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0BD0", Offset = "0xCD0BD0")]
	private bool <RaiseDifficulty>b__66_0(SheetData x)
	{
		return default(bool);
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xFF2318", Offset = "0xFF2318", VA = "0xFF2318")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0BE0", Offset = "0xCD0BE0")]
	private bool <RaiseDifficulty>b__66_1(SheetData.SpreadsheetEntry x)
	{
		return default(bool);
	}
}
[Token(Token = "0x20000FB")]
public class SolarSystemData : ScriptableObject
{
	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_galaxyId;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_solarSystemId;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_numberRevealBoss;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_currentPlanetIndex;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_planetCount;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<PlanetData> m_planetDatas;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<PlanetData> m_tutoPlanets;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_azoteCountInSystem;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int m_carbonCountInSystem;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_phosphorusCountInSystem;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int m_sulfurCountInSystem;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int m_waterCountInSystem;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int m_azoteNeeded;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_carbonNeeded;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int m_phosphorusNeeded;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_sulfurNeeded;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public int m_waterNeeded;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool m_mapgenerated;

	[Token(Token = "0x60004F2")]
	[Address(RVA = "0x1070610", Offset = "0x1070610", VA = "0x1070610")]
	public SolarSystemData()
	{
	}
}
[Token(Token = "0x20000FC")]
public class ActivateGameObject : MonoBehaviour
{
	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_deactivateMode;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_useLabel;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_useParentTransformForFX;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool m_worldPosStays;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_useExternalGameObject;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_gameObjectToActivate;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Label m_gameObjectToActivateLabel;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_fxToInstantiate;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Label m_fxLabelSpawner;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool m_launchOnEnable;

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0x16A71D8", Offset = "0x16A71D8", VA = "0x16A71D8")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0x16A71E8", Offset = "0x16A71E8", VA = "0x16A71E8")]
	public void Activate()
	{
	}

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0x16A74DC", Offset = "0x16A74DC", VA = "0x16A74DC")]
	public ActivateGameObject()
	{
	}
}
[Token(Token = "0x20000FD")]
public class AmmoBehaviourImpact : AmmoBehaviour
{
	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public float m_velocityTreshold;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Vector3Variable m_leftControllerVelocity;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Vector3Variable m_rightControllerVelocity;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public LayerMask m_acceptedLayers;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public UnityEvent OnLeftAmmoImpact;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public UnityEvent OnRightAmmoImpact;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3Variable _usedVelocity;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private bool _canImpact;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private Vector3 _velocity;

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0x1215164", Offset = "0x1215164", VA = "0x1215164")]
	private new void Start()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0x1215168", Offset = "0x1215168", VA = "0x1215168", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0x1215370", Offset = "0x1215370", VA = "0x1215370")]
	public void SetInfo()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0x12153FC", Offset = "0x12153FC", VA = "0x12153FC")]
	public void Update()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0x12154C8", Offset = "0x12154C8", VA = "0x12154C8")]
	public AmmoBehaviourImpact()
	{
	}
}
[Token(Token = "0x20000FE")]
public class AnimatorBoolSetter : MonoBehaviour
{
	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_setTarget;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Animator m_animator;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Animator animator;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string lastStateName;

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0x12188EC", Offset = "0x12188EC", VA = "0x12188EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0x121895C", Offset = "0x121895C", VA = "0x121895C")]
	public void SetParameter(string p_parameterName)
	{
	}

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0x12189D0", Offset = "0x12189D0", VA = "0x12189D0")]
	public AnimatorBoolSetter()
	{
	}
}
[Token(Token = "0x20000FF")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB75C0", Offset = "0xCB75C0")]
public class AudioToHapticsBaker : MonoBehaviour
{
	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public SpectrumHapticsData m_output;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_timeBetweenBakeInMilliseconds;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float[] m_samples;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float[] m_frequencyBand;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FFTWindow m_FFTWindow;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_frequencyToBake;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource _audioSource;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _timeSinceLastBake;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _baking;

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xF64554", Offset = "0xF64554", VA = "0xF64554")]
	private void Awake()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xF645B4", Offset = "0xF645B4", VA = "0xF645B4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xF6480C", Offset = "0xF6480C", VA = "0xF6480C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000501")]
	[Address(RVA = "0xF64944", Offset = "0xF64944", VA = "0xF64944")]
	private void Bake()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xF649F4", Offset = "0xF649F4", VA = "0xF649F4")]
	public AudioToHapticsBaker()
	{
	}
}
[Token(Token = "0x2000100")]
public class BossDifficultyManager : MonoBehaviour
{
	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_bossSprites;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_difficultySprites;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_planetsToReveal;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_planetsRevealed;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable m_difficulty;

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xF68408", Offset = "0xF68408", VA = "0xF68408")]
	public void CalculateBossBar()
	{
	}

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xF685CC", Offset = "0xF685CC", VA = "0xF685CC")]
	public void DisplayDifficulty()
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xF68530", Offset = "0xF68530", VA = "0xF68530")]
	public void ResetBossBar()
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xF68688", Offset = "0xF68688", VA = "0xF68688")]
	public void ResetDifficultyBar()
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xF68730", Offset = "0xF68730", VA = "0xF68730")]
	public BossDifficultyManager()
	{
	}
}
[Token(Token = "0x2000101")]
public class Calculator : MonoBehaviour
{
	[Token(Token = "0x200059B")]
	public enum OPERATOR
	{
		[Token(Token = "0x4001BCE")]
		PLUS,
		[Token(Token = "0x4001BCF")]
		MINUS,
		[Token(Token = "0x4001BD0")]
		MULTIPLY,
		[Token(Token = "0x4001BD1")]
		DIVIDE,
		[Token(Token = "0x4001BD2")]
		MODULO
	}

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_isValueFromEvent;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BaseVariable m_valueA;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OPERATOR m_operator;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_useBConstant;

	[Token(Token = "0x4000602")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public BaseVariable m_valueB;

	[Token(Token = "0x4000603")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_valueBInt;

	[Token(Token = "0x4000604")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool m_noWriteOutputValue;

	[Token(Token = "0x4000605")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BaseVariable m_writeOutputValue;

	[Token(Token = "0x4000606")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatUnityEvent OnCalculatorFloatOutput;

	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IntUnityEvent OnCalculatorIntOutput;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnEndOfCalculator;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_launchOnEnable;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	private bool _started;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float _tValueA;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float _tValueB;

	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private string _valueType;

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xF6A440", Offset = "0xF6A440", VA = "0xF6A440")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xF6A450", Offset = "0xF6A450", VA = "0xF6A450")]
	public void DetermineValueType()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xF6AB1C", Offset = "0xF6AB1C", VA = "0xF6AB1C")]
	public void SetIntValueA(int p_value)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xF6AB28", Offset = "0xF6AB28", VA = "0xF6AB28")]
	public void SetFloatValueA(float p_value)
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xF6AB30", Offset = "0xF6AB30", VA = "0xF6AB30")]
	public void Calculate()
	{
	}

	[Token(Token = "0x600050D")]
	[Address(RVA = "0xF6A928", Offset = "0xF6A928", VA = "0xF6A928")]
	private void PrivateCalculate()
	{
	}

	[Token(Token = "0x600050E")]
	[Address(RVA = "0xF6AB34", Offset = "0xF6AB34", VA = "0xF6AB34")]
	public Calculator()
	{
	}
}
[Token(Token = "0x2000102")]
public class CollectionWasher : MonoBehaviour
{
	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BaseCollection> m_collections;

	[Token(Token = "0x600050F")]
	[Address(RVA = "0xF6CE18", Offset = "0xF6CE18", VA = "0xF6CE18")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000510")]
	[Address(RVA = "0xF6CF28", Offset = "0xF6CF28", VA = "0xF6CF28")]
	public CollectionWasher()
	{
	}
}
[Token(Token = "0x2000103")]
public class CooldownManager : MonoBehaviour
{
	[Token(Token = "0x200059C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF1B0", Offset = "0xCBF1B0")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6002126")]
		[Address(RVA = "0xF6F814", Offset = "0xF6F814", VA = "0xF6F814")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6002127")]
		[Address(RVA = "0xF6F824", Offset = "0xF6F824", VA = "0xF6F824")]
		internal bool <OnCooldownStarted>b__0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000511")]
	[Address(RVA = "0xF6F620", Offset = "0xF6F620", VA = "0xF6F620")]
	public void OnCooldownStarted(object[] parameters)
	{
	}

	[Token(Token = "0x6000512")]
	[Address(RVA = "0xF6F81C", Offset = "0xF6F81C", VA = "0xF6F81C")]
	public CooldownManager()
	{
	}
}
[Token(Token = "0x2000104")]
public class DataHolder : MonoBehaviour
{
	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ScriptableObject m_data;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xF73150", Offset = "0xF73150", VA = "0xF73150")]
	public DataHolder()
	{
	}
}
[Token(Token = "0x2000105")]
public class DeactivateAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_timer;

	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnDeactivatedEvent;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _timer;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool _enabled;

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xF73158", Offset = "0xF73158", VA = "0xF73158")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xF7316C", Offset = "0xF7316C", VA = "0xF7316C")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xF73174", Offset = "0xF73174", VA = "0xF73174")]
	public void Update()
	{
	}

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xF731F8", Offset = "0xF731F8", VA = "0xF731F8")]
	public DeactivateAfterDelay()
	{
	}
}
[Token(Token = "0x2000106")]
public class DestroyAfterDelay : MonoBehaviour
{
	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_destroyDelay;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_objectToDestroy;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnDestroyEvent;

	[Token(Token = "0x6000518")]
	[Address(RVA = "0x116F614", Offset = "0x116F614", VA = "0x116F614")]
	private void Update()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0x116F71C", Offset = "0x116F71C", VA = "0x116F71C")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600051A")]
	[Address(RVA = "0x116F738", Offset = "0x116F738", VA = "0x116F738")]
	public DestroyAfterDelay()
	{
	}
}
[Token(Token = "0x2000107")]
public class DotDamage : MonoBehaviour
{
	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public DestroyObjectOnTriggerEnter m_enemyHpManager;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_intervalDotDamage;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_damageDot;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_fxOnDot;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Label m_fxSpawn;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnDot;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public bool m_increaseDamages;

	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public float m_ratioDamages;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	protected float _intervalDotDamage;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	protected bool _init;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected List<GameObject> _fxs;

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xF32AE8", Offset = "0xF32AE8", VA = "0xF32AE8")]
	public void Update()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xF32D80", Offset = "0xF32D80", VA = "0xF32D80", Slot = "4")]
	public virtual void Init(object[] parameters)
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xF32F38", Offset = "0xF32F38", VA = "0xF32F38", Slot = "5")]
	public virtual void Init(float intervalDot, int damage, [Optional] GameObject fxOnDot)
	{
	}

	[Token(Token = "0x600051E")]
	[Address(RVA = "0xF33028", Offset = "0xF33028", VA = "0xF33028", Slot = "6")]
	public virtual void StopDotDamage()
	{
	}

	[Token(Token = "0x600051F")]
	[Address(RVA = "0xF3313C", Offset = "0xF3313C", VA = "0xF3313C")]
	public DotDamage()
	{
	}
}
[Token(Token = "0x2000108")]
public class DotDamagePlayer : DotDamage
{
	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public PlayerManager m_playerHPManager;

	[Token(Token = "0x6000520")]
	[Address(RVA = "0xF33228", Offset = "0xF33228", VA = "0xF33228")]
	public new void Update()
	{
	}

	[Token(Token = "0x6000521")]
	[Address(RVA = "0xF33360", Offset = "0xF33360", VA = "0xF33360")]
	public DotDamagePlayer()
	{
	}
}
[Token(Token = "0x2000109")]
public class ElementalPerkManager : CacheBehaviour
{
	[Token(Token = "0x200059D")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF1C0", Offset = "0xCBF1C0")]
	private sealed class <UltimateSpellActivationRoutine>d__8 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ElementalPerkManager <>4__this;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WandDataVariable wandData;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private GameObject <ultimateFeedbackText>5__2;

		[Token(Token = "0x17000355")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600212B")]
			[Address(RVA = "0xF384A4", Offset = "0xF384A4", VA = "0xF384A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000356")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600212D")]
			[Address(RVA = "0xF3850C", Offset = "0xF3850C", VA = "0xF3850C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002128")]
		[Address(RVA = "0xF38040", Offset = "0xF38040", VA = "0xF38040")]
		[DebuggerHidden]
		public <UltimateSpellActivationRoutine>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x6002129")]
		[Address(RVA = "0xF38078", Offset = "0xF38078", VA = "0xF38078", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600212A")]
		[Address(RVA = "0xF3807C", Offset = "0xF3807C", VA = "0xF3807C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600212C")]
		[Address(RVA = "0xF384AC", Offset = "0xF384AC", VA = "0xF384AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2614", Offset = "0xCC2614")]
	public List<WandDataVariable> m_wands;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC264C", Offset = "0xCC264C")]
	public GameObject m_ultimateSpellText;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2684", Offset = "0xCC2684")]
	public MoonData m_debugMoon;

	[Token(Token = "0x6000522")]
	[Address(RVA = "0xF37930", Offset = "0xF37930", VA = "0xF37930")]
	public void OnPlanetRegenerated(int instanceId)
	{
	}

	[Token(Token = "0x6000523")]
	[Address(RVA = "0xF37F64", Offset = "0xF37F64", VA = "0xF37F64")]
	public void Update()
	{
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xF37FA4", Offset = "0xF37FA4", VA = "0xF37FA4")]
	public void CheckElementalHearts(int instanceId)
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xF379E8", Offset = "0xF379E8", VA = "0xF379E8")]
	public void CheckElementalSpell(MoonData moon)
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xF37FA8", Offset = "0xF37FA8", VA = "0xF37FA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0BF0", Offset = "0xCD0BF0")]
	public IEnumerator<float> UltimateSpellActivationRoutine(WandDataVariable wandData)
	{
		return null;
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xF3806C", Offset = "0xF3806C", VA = "0xF3806C")]
	public void CheckElementalPowers(int instanceId)
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xF38070", Offset = "0xF38070", VA = "0xF38070")]
	public ElementalPerkManager()
	{
	}
}
[Token(Token = "0x200010A")]
public class EventHolder : MonoBehaviour
{
	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameEventBase m_event;

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xF38F14", Offset = "0xF38F14", VA = "0xF38F14")]
	public EventHolder()
	{
	}
}
[Token(Token = "0x200010B")]
public class EventLauncher : MonoBehaviour
{
	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEventLaunch;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool m_launchOnEnable;

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xF38F1C", Offset = "0xF38F1C", VA = "0xF38F1C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xF38F44", Offset = "0xF38F44", VA = "0xF38F44")]
	public void OnLevelStarted()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xF38F60", Offset = "0xF38F60", VA = "0xF38F60")]
	public EventLauncher()
	{
	}
}
[Token(Token = "0x200010C")]
public class EventStarter : MonoBehaviour
{
	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEventStart;

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xF38F68", Offset = "0xF38F68", VA = "0xF38F68")]
	private void Start()
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xF38F84", Offset = "0xF38F84", VA = "0xF38F84")]
	public EventStarter()
	{
	}
}
[Token(Token = "0x200010D")]
public class FloatVariableComparer : MonoBehaviour
{
	[Token(Token = "0x200059E")]
	public enum OPERATOR
	{
		[Token(Token = "0x4001BDA")]
		EQUALS,
		[Token(Token = "0x4001BDB")]
		SUPERIOR,
		[Token(Token = "0x4001BDC")]
		INFERIOR,
		[Token(Token = "0x4001BDD")]
		SUPERIOREQUALS,
		[Token(Token = "0x4001BDE")]
		INFERIOREQUALS,
		[Token(Token = "0x4001BDF")]
		DIFFERENT
	}

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_useInt;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_useConstantA;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool m_useConstantB;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatVariable m_floatA;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_intA;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_floatConstantA;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int m_intConstantA;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public OPERATOR m_operator;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FloatVariable m_floatB;

	[Token(Token = "0x4000634")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntVariable m_intB;

	[Token(Token = "0x4000635")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_floatConstantB;

	[Token(Token = "0x4000636")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int m_intConstantB;

	[Token(Token = "0x4000637")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent OnComparisonSuccess;

	[Token(Token = "0x4000638")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnComparisonFailed;

	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool m_launchOnEnable;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float _floatValueA;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float _floatValueB;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int _intValueA;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int _intValueB;

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xF3AC6C", Offset = "0xF3AC6C", VA = "0xF3AC6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000530")]
	[Address(RVA = "0xF3AC7C", Offset = "0xF3AC7C", VA = "0xF3AC7C")]
	public void Compare()
	{
	}

	[Token(Token = "0x6000531")]
	[Address(RVA = "0xF3AE78", Offset = "0xF3AE78", VA = "0xF3AE78")]
	public void SetIntConstantA(int constantA)
	{
	}

	[Token(Token = "0x6000532")]
	[Address(RVA = "0xF3AE80", Offset = "0xF3AE80", VA = "0xF3AE80")]
	public void SetIntConstantB(int constantB)
	{
	}

	[Token(Token = "0x6000533")]
	[Address(RVA = "0xF3AE88", Offset = "0xF3AE88", VA = "0xF3AE88")]
	public FloatVariableComparer()
	{
	}
}
[Token(Token = "0x200010E")]
public class HandManager : MonoBehaviour
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_hands;

	[Token(Token = "0x6000534")]
	[Address(RVA = "0xF3FCE8", Offset = "0xF3FCE8", VA = "0xF3FCE8")]
	public void Activatehand(string tag)
	{
	}

	[Token(Token = "0x6000535")]
	[Address(RVA = "0xF3FE30", Offset = "0xF3FE30", VA = "0xF3FE30")]
	public HandManager()
	{
	}
}
[Token(Token = "0x200010F")]
public class HoverObjectTriggerEvent : MonoBehaviour
{
	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string _tag;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntUnityEvent OnHoverObject;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntUnityEvent OnExitObject;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject _planetChosen;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xF42CC0", Offset = "0xF42CC0", VA = "0xF42CC0")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xF42D6C", Offset = "0xF42D6C", VA = "0xF42D6C")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xF42E18", Offset = "0xF42E18", VA = "0xF42E18")]
	public HoverObjectTriggerEvent()
	{
	}
}
[Token(Token = "0x2000110")]
public class IDChecker : CacheBehaviour
{
	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_target;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent m_response;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xF42E20", Offset = "0xF42E20", VA = "0xF42E20")]
	public void CheckID(int p_instanceID)
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xF42EE4", Offset = "0xF42EE4", VA = "0xF42EE4")]
	public IDChecker()
	{
	}
}
[Token(Token = "0x2000111")]
public class InitialScaleInjector : MonoBehaviour
{
	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3Variable m_initialScale;

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xFBB53C", Offset = "0xFBB53C", VA = "0xFBB53C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xFBB5D4", Offset = "0xFBB5D4", VA = "0xFBB5D4")]
	private void Update()
	{
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xFBB5D8", Offset = "0xFBB5D8", VA = "0xFBB5D8")]
	public InitialScaleInjector()
	{
	}
}
[Token(Token = "0x2000112")]
public class ActorDeployer : MonoBehaviour
{
	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ActorData m_actorDataToDeploy;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Label> m_labels;

	[Token(Token = "0x4000648")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> m_elementsToDeploy;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<int> unitBatches;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable m_unitsToDestroy;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ActorDataTransformUnityEvent m_OnDeployUnit;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnUnitBatchDestroyed;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent OnAllUnitsDestroyed;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int currentUnitIndex;

	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private int unitBatchIndex;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int currentNumberOfUnits;

	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private ActorDataTransformGameEventStruct str;

	[Token(Token = "0x600053E")]
	[Address(RVA = "0x16A75E8", Offset = "0x16A75E8", VA = "0x16A75E8")]
	public void OnDeployUnit()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0x16A7914", Offset = "0x16A7914", VA = "0x16A7914")]
	public void OnUnitDestroy()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0x16A79C0", Offset = "0x16A79C0", VA = "0x16A79C0")]
	private void Reset()
	{
	}

	[Token(Token = "0x6000541")]
	[Address(RVA = "0x16A79CC", Offset = "0x16A79CC", VA = "0x16A79CC")]
	public ActorDeployer()
	{
	}
}
[Token(Token = "0x2000113")]
public class Instantiator : MonoBehaviour
{
	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_prefabToInstantiate;

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xFBB720", Offset = "0xFBB720", VA = "0xFBB720")]
	public void InstantiateObject(Label m_positionToInstantiate)
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xFBB8FC", Offset = "0xFBB8FC", VA = "0xFBB8FC")]
	public Instantiator()
	{
	}
}
[Token(Token = "0x2000114")]
public class FloatVariableTrigger : MonoBehaviour
{
	[Token(Token = "0x200059F")]
	public enum EComparator
	{
		[Token(Token = "0x4001BE1")]
		INVALID,
		[Token(Token = "0x4001BE2")]
		INFERIOR,
		[Token(Token = "0x4001BE3")]
		SUPERIOR,
		[Token(Token = "0x4001BE4")]
		ENUM_COUNT
	}

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC26BC", Offset = "0xCC26BC")]
	public FloatVariable m_floatVariable;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EComparator m_comparator;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_valueToCompare;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_isOneShot;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC26F4", Offset = "0xCC26F4")]
	public GameEvent OnConditionValid;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _consumed;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xF3AE98", Offset = "0xF3AE98", VA = "0xF3AE98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xF3AF6C", Offset = "0xF3AF6C", VA = "0xF3AF6C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xF3B018", Offset = "0xF3B018", VA = "0xF3B018")]
	public bool CanEvaluate()
	{
		return default(bool);
	}

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xF3B040", Offset = "0xF3B040", VA = "0xF3B040")]
	public FloatVariableTrigger()
	{
	}
}
[Token(Token = "0x2000115")]
public class IntVariableTrigger : MonoBehaviour
{
	[Token(Token = "0x20005A0")]
	public enum EComparator
	{
		[Token(Token = "0x4001BE6")]
		INVALID,
		[Token(Token = "0x4001BE7")]
		INFERIOR,
		[Token(Token = "0x4001BE8")]
		INFERIOR_OR_EQUALS,
		[Token(Token = "0x4001BE9")]
		EQUALS,
		[Token(Token = "0x4001BEA")]
		SUPERIOR_OR_EQUALS,
		[Token(Token = "0x4001BEB")]
		SUPERIOR,
		[Token(Token = "0x4001BEC")]
		DIFFERENT,
		[Token(Token = "0x4001BED")]
		ENUM_COUNT
	}

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC272C", Offset = "0xCC272C")]
	public IntVariable m_intVariable;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public EComparator m_comparator;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_valueToCompare;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_isOneShot;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_checkOnUpdate;

	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2764", Offset = "0xCC2764")]
	public UnityEvent OnConditionValid;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool _consumed;

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xFBB904", Offset = "0xFBB904", VA = "0xFBB904")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xFBB9D8", Offset = "0xFBB9D8", VA = "0xFBB9D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xFBB9E8", Offset = "0xFBB9E8", VA = "0xFBB9E8")]
	public void Evaluate()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xFBBB44", Offset = "0xFBBB44", VA = "0xFBBB44")]
	public bool CanEvaluate()
	{
		return default(bool);
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xFBBB6C", Offset = "0xFBBB6C", VA = "0xFBBB6C")]
	public IntVariableTrigger()
	{
	}
}
[Token(Token = "0x2000116")]
public class PauseEditorInGame : MonoBehaviour
{
	[Token(Token = "0x600054D")]
	[Address(RVA = "0xFE8534", Offset = "0xFE8534", VA = "0xFE8534")]
	public void PauseEditor()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xFE8594", Offset = "0xFE8594", VA = "0xFE8594")]
	public PauseEditorInGame()
	{
	}
}
[Token(Token = "0x2000117")]
public class SceneConsoleFacade : MonoBehaviour
{
	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro textMeshPro;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color logMessageColor;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color AssertMessasgeColor;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC279C", Offset = "0xCC279C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC279C", Offset = "0xCC279C")]
	[DocumentedByXml]
	private int <FontSize>k__BackingField;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC27F8", Offset = "0xCC27F8")]
	[DocumentedByXml]
	private Color <InfoMessage>k__BackingField;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC2830", Offset = "0xCC2830")]
	[DocumentedByXml]
	private Color <AssertMessage>k__BackingField;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC2868", Offset = "0xCC2868")]
	[DocumentedByXml]
	private Color <WarningMessage>k__BackingField;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC28A0", Offset = "0xCC28A0")]
	[DocumentedByXml]
	private Color <ErrorMessage>k__BackingField;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC28D8", Offset = "0xCC28D8")]
	[DocumentedByXml]
	private Color <ExceptionMessage>k__BackingField;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC2910", Offset = "0xCC2910")]
	[DocumentedByXml]
	private bool <CollapseLog>k__BackingField;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC2948", Offset = "0xCC2948")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2948", Offset = "0xCC2948")]
	[DocumentedByXml]
	[AttributeAttribute(Name = "RestrictedAttribute", RVA = "0xCC2948", Offset = "0xCC2948")]
	private ScrollRect <ScrollWindow>k__BackingField;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC29B8", Offset = "0xCC29B8")]
	[DocumentedByXml]
	[AttributeAttribute(Name = "RestrictedAttribute", RVA = "0xCC29B8", Offset = "0xCC29B8")]
	private RectTransform <ConsoleRect>k__BackingField;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC2A04", Offset = "0xCC2A04")]
	[DocumentedByXml]
	private TextMeshPro <ConsoleOutput>k__BackingField;

	[Token(Token = "0x400066D")]
	protected const string newline = "\n";

	[Token(Token = "0x400066E")]
	protected const int lineBuffer = 50;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	protected int currentBuffer;

	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	protected string lastMessage;

	[Token(Token = "0x1700003D")]
	[Serialized]
	public int FontSize
	{
		[Token(Token = "0x600054F")]
		[Address(RVA = "0xFFD6B4", Offset = "0xFFD6B4", VA = "0xFFD6B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0C54", Offset = "0xCD0C54")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000550")]
		[Address(RVA = "0xFFD6BC", Offset = "0xFFD6BC", VA = "0xFFD6BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0C64", Offset = "0xCD0C64")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	[Serialized]
	public Color InfoMessage
	{
		[Token(Token = "0x6000551")]
		[Address(RVA = "0xFFD6C4", Offset = "0xFFD6C4", VA = "0xFFD6C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0C74", Offset = "0xCD0C74")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000552")]
		[Address(RVA = "0xFFD6D0", Offset = "0xFFD6D0", VA = "0xFFD6D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0C84", Offset = "0xCD0C84")]
		set
		{
		}
	}

	[Token(Token = "0x1700003F")]
	[Serialized]
	public Color AssertMessage
	{
		[Token(Token = "0x6000553")]
		[Address(RVA = "0xFFD6DC", Offset = "0xFFD6DC", VA = "0xFFD6DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0C94", Offset = "0xCD0C94")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000554")]
		[Address(RVA = "0xFFD6E8", Offset = "0xFFD6E8", VA = "0xFFD6E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0CA4", Offset = "0xCD0CA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	[Serialized]
	public Color WarningMessage
	{
		[Token(Token = "0x6000555")]
		[Address(RVA = "0xFFD6F4", Offset = "0xFFD6F4", VA = "0xFFD6F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0CB4", Offset = "0xCD0CB4")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000556")]
		[Address(RVA = "0xFFD700", Offset = "0xFFD700", VA = "0xFFD700")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0CC4", Offset = "0xCD0CC4")]
		set
		{
		}
	}

	[Token(Token = "0x17000041")]
	[Serialized]
	public Color ErrorMessage
	{
		[Token(Token = "0x6000557")]
		[Address(RVA = "0xFFD70C", Offset = "0xFFD70C", VA = "0xFFD70C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0CD4", Offset = "0xCD0CD4")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000558")]
		[Address(RVA = "0xFFD718", Offset = "0xFFD718", VA = "0xFFD718")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0CE4", Offset = "0xCD0CE4")]
		set
		{
		}
	}

	[Token(Token = "0x17000042")]
	[Serialized]
	public Color ExceptionMessage
	{
		[Token(Token = "0x6000559")]
		[Address(RVA = "0xFFD724", Offset = "0xFFD724", VA = "0xFFD724")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0CF4", Offset = "0xCD0CF4")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x600055A")]
		[Address(RVA = "0xFFD730", Offset = "0xFFD730", VA = "0xFFD730")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0D04", Offset = "0xCD0D04")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	[Serialized]
	public bool CollapseLog
	{
		[Token(Token = "0x600055B")]
		[Address(RVA = "0xFFD73C", Offset = "0xFFD73C", VA = "0xFFD73C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0D14", Offset = "0xCD0D14")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600055C")]
		[Address(RVA = "0xFFD744", Offset = "0xFFD744", VA = "0xFFD744")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0D24", Offset = "0xCD0D24")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	[Serialized]
	public ScrollRect ScrollWindow
	{
		[Token(Token = "0x600055D")]
		[Address(RVA = "0xFFD750", Offset = "0xFFD750", VA = "0xFFD750")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0D34", Offset = "0xCD0D34")]
		get
		{
			return null;
		}
		[Token(Token = "0x600055E")]
		[Address(RVA = "0xFFD758", Offset = "0xFFD758", VA = "0xFFD758")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0D44", Offset = "0xCD0D44")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000045")]
	[Serialized]
	public RectTransform ConsoleRect
	{
		[Token(Token = "0x600055F")]
		[Address(RVA = "0xFFD760", Offset = "0xFFD760", VA = "0xFFD760")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0D54", Offset = "0xCD0D54")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000560")]
		[Address(RVA = "0xFFD768", Offset = "0xFFD768", VA = "0xFFD768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0D64", Offset = "0xCD0D64")]
		protected set
		{
		}
	}

	[Token(Token = "0x17000046")]
	[Serialized]
	public TextMeshPro ConsoleOutput
	{
		[Token(Token = "0x6000561")]
		[Address(RVA = "0xFFD770", Offset = "0xFFD770", VA = "0xFFD770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0D74", Offset = "0xCD0D74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000562")]
		[Address(RVA = "0xFFD778", Offset = "0xFFD778", VA = "0xFFD778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD0D84", Offset = "0xCD0D84")]
		protected set
		{
		}
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xFFD780", Offset = "0xFFD780", VA = "0xFFD780")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xFFD7B8", Offset = "0xFFD7B8", VA = "0xFFD7B8", Slot = "4")]
	public virtual void ClearLog()
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xFFD868", Offset = "0xFFD868", VA = "0xFFD868", Slot = "5")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xFFD8E0", Offset = "0xFFD8E0", VA = "0xFFD8E0", Slot = "6")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xFFD9D8", Offset = "0xFFD9D8", VA = "0xFFD9D8", Slot = "7")]
	protected virtual string GetMessage(string message, LogType type)
	{
		return null;
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xFFDCB0", Offset = "0xFFDCB0", VA = "0xFFDCB0", Slot = "8")]
	protected virtual void HandleLog(string message, string stackTrace, LogType type)
	{
	}

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xFFDF34", Offset = "0xFFDF34", VA = "0xFFDF34")]
	public SceneConsoleFacade()
	{
	}
}
[Token(Token = "0x2000118")]
public class UIDebugToggle : MonoBehaviour
{
	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_togglableElement;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int _currentToggledElement;

	[Token(Token = "0x600056A")]
	[Address(RVA = "0x10FC6A4", Offset = "0x10FC6A4", VA = "0x10FC6A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600056B")]
	[Address(RVA = "0x10FC6AC", Offset = "0x10FC6AC", VA = "0x10FC6AC")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0x10FC704", Offset = "0x10FC704", VA = "0x10FC704")]
	private void SetAllActivationTo(bool status)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0x10FC990", Offset = "0x10FC990", VA = "0x10FC990")]
	private void ActivateEverythingUntilIndex(int index)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0x10FCC20", Offset = "0x10FCC20", VA = "0x10FCC20")]
	public UIDebugToggle()
	{
	}
}
[Token(Token = "0x2000119")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB7624", Offset = "0xCB7624")]
public class VariableViewer : CacheBehaviour
{
	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public BaseVariable[] m_variablesToDisplay;

	[Token(Token = "0x600056F")]
	[Address(RVA = "0x1106774", Offset = "0x1106774", VA = "0x1106774")]
	private void Update()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0x1106A6C", Offset = "0x1106A6C", VA = "0x1106A6C")]
	public VariableViewer()
	{
	}
}
[Token(Token = "0x200011A")]
public class GroupsHolder : MonoBehaviour
{
	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Group> m_groups;

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xF3DBD8", Offset = "0xF3DBD8", VA = "0xF3DBD8")]
	public bool IsInGroup(Group group)
	{
		return default(bool);
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xF3DC40", Offset = "0xF3DC40", VA = "0xF3DC40")]
	public bool IsInGroup(string group)
	{
		return default(bool);
	}

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xF3DCF8", Offset = "0xF3DCF8", VA = "0xF3DCF8")]
	public GroupsHolder()
	{
	}
}
[Token(Token = "0x200011B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7688", Offset = "0xCB7688")]
public class Group : ScriptableObject
{
	[Token(Token = "0x6000574")]
	[Address(RVA = "0xF3DBD0", Offset = "0xF3DBD0", VA = "0xF3DBD0")]
	public Group()
	{
	}
}
[Token(Token = "0x200011C")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB76E8", Offset = "0xCB76E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB76E8", Offset = "0xCB76E8")]
public class Identity : MonoBehaviour
{
	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_instanceId;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GroupsHolder _groupHolder;

	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private LabelsHolder _labelsHolder;

	[Token(Token = "0x17000047")]
	public int InstanceId
	{
		[Token(Token = "0x6000575")]
		[Address(RVA = "0xF42EEC", Offset = "0xF42EEC", VA = "0xF42EEC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000576")]
		[Address(RVA = "0xF42EF4", Offset = "0xF42EF4", VA = "0xF42EF4")]
		private set
		{
		}
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xF42EFC", Offset = "0xF42EFC", VA = "0xF42EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xF42F90", Offset = "0xF42F90", VA = "0xF42F90")]
	public bool HaveLabel(Label label)
	{
		return default(bool);
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xF42FAC", Offset = "0xF42FAC", VA = "0xF42FAC")]
	public bool HaveLabel(string label)
	{
		return default(bool);
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xF42FC8", Offset = "0xF42FC8", VA = "0xF42FC8")]
	public bool IsInGroup(Group group)
	{
		return default(bool);
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xF42FE0", Offset = "0xF42FE0", VA = "0xF42FE0")]
	public Identity()
	{
	}
}
[Token(Token = "0x200011D")]
public class LabelHolder : MonoBehaviour
{
	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Label label;

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xFC15B0", Offset = "0xFC15B0", VA = "0xFC15B0")]
	public LabelHolder()
	{
	}
}
[Token(Token = "0x200011E")]
public class LabelsHolder : MonoBehaviour
{
	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Label> m_labels;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xFC15B8", Offset = "0xFC15B8", VA = "0xFC15B8")]
	public bool HaveLabel(Label label)
	{
		return default(bool);
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xFC1620", Offset = "0xFC1620", VA = "0xFC1620")]
	public bool HaveLabel(string label)
	{
		return default(bool);
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xFC16D8", Offset = "0xFC16D8", VA = "0xFC16D8")]
	public LabelsHolder()
	{
	}
}
[Token(Token = "0x200011F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7774", Offset = "0xCB7774")]
public class Label : ScriptableObject
{
	[Token(Token = "0x6000580")]
	[Address(RVA = "0xFC15A8", Offset = "0xFC15A8", VA = "0xFC15A8")]
	public Label()
	{
	}
}
[Token(Token = "0x2000120")]
public class Countdown : CacheBehaviour
{
	[Token(Token = "0x20005A1")]
	public enum TimeMode
	{
		[Token(Token = "0x4001BEF")]
		Normal,
		[Token(Token = "0x4001BF0")]
		Unscaled
	}

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_timeBeforeEvent;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_timeBeforeEventVariable;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_isRepeated;

	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public TimeMode m_timeMode;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnCountdownReached;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2A3C", Offset = "0xCC2A3C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC2A3C", Offset = "0xCC2A3C")]
	[SerializeField]
	public bool m_isConsumed;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private float _startTime;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _started;

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xF6F864", Offset = "0xF6F864", VA = "0xF6F864")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xF6F8E8", Offset = "0xF6F8E8", VA = "0xF6F8E8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xF6F8EC", Offset = "0xF6F8EC", VA = "0xF6F8EC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xF6F8F4", Offset = "0xF6F8F4", VA = "0xF6F8F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xF6F89C", Offset = "0xF6F89C", VA = "0xF6F89C")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xF6FA14", Offset = "0xF6FA14", VA = "0xF6FA14")]
	public Countdown()
	{
	}
}
[Token(Token = "0x2000121")]
public class DisplayTimer : MonoBehaviour
{
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI m_timerTxt;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _timerStarted;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int _minutes;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int _hours;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _time;

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xF32760", Offset = "0xF32760", VA = "0xF32760")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xF32770", Offset = "0xF32770", VA = "0xF32770")]
	public void StopTimer()
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xF32778", Offset = "0xF32778", VA = "0xF32778")]
	private void Update()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xF32A00", Offset = "0xF32A00", VA = "0xF32A00")]
	public DisplayTimer()
	{
	}
}
[Token(Token = "0x2000122")]
public class UnityOnEnable : MonoBehaviour
{
	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEnableEvent;

	[Token(Token = "0x600058B")]
	[Address(RVA = "0x11052DC", Offset = "0x11052DC", VA = "0x11052DC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600058C")]
	[Address(RVA = "0x11052F8", Offset = "0x11052F8", VA = "0x11052F8")]
	public UnityOnEnable()
	{
	}
}
[Token(Token = "0x2000123")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB77D4", Offset = "0xCB77D4")]
public class UnityOnTriggerEnter : MonoBehaviour
{
	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> m_validTags;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask m_validLayers;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnUnityTriggerEnter;

	[Token(Token = "0x600058D")]
	[Address(RVA = "0x1105300", Offset = "0x1105300", VA = "0x1105300")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600058E")]
	[Address(RVA = "0x11053FC", Offset = "0x11053FC", VA = "0x11053FC")]
	public UnityOnTriggerEnter()
	{
	}
}
[Token(Token = "0x2000124")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB7838", Offset = "0xCB7838")]
public class UnityOnTriggerExit : MonoBehaviour
{
	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> m_validTags;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask m_validLayers;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnUnityTriggerExit;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0x1105404", Offset = "0x1105404", VA = "0x1105404")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0x1105500", Offset = "0x1105500", VA = "0x1105500")]
	public UnityOnTriggerExit()
	{
	}
}
[Token(Token = "0x2000125")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB789C", Offset = "0xCB789C")]
public class AnimatorBoolUpdater : CacheBehaviour
{
	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_animatorPropertyName;

	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BoolVariable m_boolToInject;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _bypassInjection;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int _propertyHash;

	[Token(Token = "0x6000591")]
	[Address(RVA = "0x12189D8", Offset = "0x12189D8", VA = "0x12189D8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0x1218AD0", Offset = "0x1218AD0", VA = "0x1218AD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0x1218B44", Offset = "0x1218B44", VA = "0x1218B44")]
	public AnimatorBoolUpdater()
	{
	}
}
[Token(Token = "0x2000126")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB7900", Offset = "0xCB7900")]
public class AnimatorFloatUpdater : CacheBehaviour
{
	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_animatorPropertyName;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_floatToInject;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _bypassInjection;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int _propertyHash;

	[Token(Token = "0x6000594")]
	[Address(RVA = "0x1218B4C", Offset = "0x1218B4C", VA = "0x1218B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000595")]
	[Address(RVA = "0x1218C44", Offset = "0x1218C44", VA = "0x1218C44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0x1218CB4", Offset = "0x1218CB4", VA = "0x1218CB4")]
	public AnimatorFloatUpdater()
	{
	}
}
[Token(Token = "0x2000127")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB7964", Offset = "0xCB7964")]
public class AnimatorIntUpdater : CacheBehaviour
{
	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_animatorPropertyName;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_intToInject;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _bypassInjection;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int _propertyHash;

	[Token(Token = "0x6000597")]
	[Address(RVA = "0x1218CBC", Offset = "0x1218CBC", VA = "0x1218CBC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0x1218DB4", Offset = "0x1218DB4", VA = "0x1218DB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0x1218E28", Offset = "0x1218E28", VA = "0x1218E28")]
	public AnimatorIntUpdater()
	{
	}
}
[Token(Token = "0x2000128")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB79C8", Offset = "0xCB79C8")]
public class TMProBuildVersionSetter : MonoBehaviour
{
	[Token(Token = "0x600059A")]
	[Address(RVA = "0x107898C", Offset = "0x107898C", VA = "0x107898C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0x1078A1C", Offset = "0x1078A1C", VA = "0x1078A1C")]
	public TMProBuildVersionSetter()
	{
	}
}
[Token(Token = "0x2000129")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB7A2C", Offset = "0xCB7A2C")]
public class FPSCounter : MonoBehaviour
{
	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_updateInterval;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro m_text;

	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _accum;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int _frames;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _timeleft;

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xF39658", Offset = "0xF39658", VA = "0xF39658")]
	private void Awake()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xF396B8", Offset = "0xF396B8", VA = "0xF396B8")]
	private void Start()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xF3974C", Offset = "0xF3974C", VA = "0xF3974C")]
	private void Update()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xF39850", Offset = "0xF39850", VA = "0xF39850")]
	public FPSCounter()
	{
	}
}
[Token(Token = "0x200012A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB7A90", Offset = "0xCB7A90")]
public class ImageFillAmountUpdater : MonoBehaviour
{
	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVariable m_fillAmount;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Image _image;

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xFBB31C", Offset = "0xFBB31C", VA = "0xFBB31C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xFBB37C", Offset = "0xFBB37C", VA = "0xFBB37C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xFBB3C4", Offset = "0xFBB3C4", VA = "0xFBB3C4")]
	public ImageFillAmountUpdater()
	{
	}
}
[Token(Token = "0x200012B")]
public class SharedMaterialUpdater : CacheBehaviour
{
	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Material[] m_materials;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_speed;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string m_propertyName;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public FloatVariable m_visibilityTarget;

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0x101FF28", Offset = "0x101FF28", VA = "0x101FF28")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0x101FFA8", Offset = "0x101FFA8", VA = "0x101FFA8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0x102008C", Offset = "0x102008C", VA = "0x102008C")]
	public SharedMaterialUpdater()
	{
	}
}
[Token(Token = "0x200012C")]
public class ShaderBoolUpdater : CacheBehaviour
{
	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyNameToUpdate;

	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BoolVariable m_sourceOfData;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Renderer _renderer;

	[Token(Token = "0x60005A6")]
	[Address(RVA = "0x101E0B4", Offset = "0x101E0B4", VA = "0x101E0B4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0x101E114", Offset = "0x101E114", VA = "0x101E114")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0x101E1C0", Offset = "0x101E1C0", VA = "0x101E1C0")]
	public ShaderBoolUpdater()
	{
	}
}
[Token(Token = "0x200012D")]
public class ShaderFloatUpdater : CacheBehaviour
{
	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC2A9C", Offset = "0xCC2A9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2A9C", Offset = "0xCC2A9C")]
	public Renderer m_renderer;

	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC2AFC", Offset = "0xCC2AFC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2AFC", Offset = "0xCC2AFC")]
	public string m_propertyNameToUpdate;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FloatVariable m_sourceOfData;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2B4C", Offset = "0xCC2B4C")]
	public bool m_isLerp;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float m_lerpSpeed;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Renderer _renderer;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _propertyValue;

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0x101E1C8", Offset = "0x101E1C8", VA = "0x101E1C8")]
	public void FadeIn()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0x101E40C", Offset = "0x101E40C", VA = "0x101E40C")]
	public void FadeOut()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0x101E5E0", Offset = "0x101E5E0", VA = "0x101E5E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0x101E67C", Offset = "0x101E67C", VA = "0x101E67C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0x101E7D0", Offset = "0x101E7D0", VA = "0x101E7D0")]
	public void SetFloatLerped(string parameterName, float destination)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0x101E3C0", Offset = "0x101E3C0", VA = "0x101E3C0")]
	private void OnValueUpdate(float value)
	{
	}

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0x101E730", Offset = "0x101E730", VA = "0x101E730")]
	private void SetFloat(string parameterName, float destination)
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0x101E830", Offset = "0x101E830", VA = "0x101E830")]
	public ShaderFloatUpdater()
	{
	}
}
[Token(Token = "0x200012E")]
public class ShaderPropertyUpdater : CacheBehaviour
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyNameToUpdate;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_sourceOfData;

	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_isLerp;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public float m_lerpSpeed;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Renderer _renderer;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _propertyValue;

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0x101E838", Offset = "0x101E838", VA = "0x101E838")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0x101E898", Offset = "0x101E898", VA = "0x101E898")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0x101E97C", Offset = "0x101E97C", VA = "0x101E97C")]
	public ShaderPropertyUpdater()
	{
	}
}
[Token(Token = "0x200012F")]
public class SkyboxColorUpdater : CacheBehaviour
{
	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyName;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ColorVariable m_colorVariable;

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0x106C694", Offset = "0x106C694", VA = "0x106C694")]
	public void Update()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0x106C6E8", Offset = "0x106C6E8", VA = "0x106C6E8")]
	public SkyboxColorUpdater()
	{
	}
}
[Token(Token = "0x2000130")]
public class SkyboxFloatUpdater : CacheBehaviour
{
	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyName;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_floatVariable;

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0x106C6F0", Offset = "0x106C6F0", VA = "0x106C6F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0x106C74C", Offset = "0x106C74C", VA = "0x106C74C")]
	public SkyboxFloatUpdater()
	{
	}
}
[Token(Token = "0x2000131")]
public class SkyboxIntUpdater : CacheBehaviour
{
	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyName;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_floatVariable;

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0x106C754", Offset = "0x106C754", VA = "0x106C754")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0x106C800", Offset = "0x106C800", VA = "0x106C800")]
	public SkyboxIntUpdater()
	{
	}
}
[Token(Token = "0x2000132")]
public class SkyboxOffsetUpdater : CacheBehaviour
{
	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyName;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector2Variable m_value;

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0x106C808", Offset = "0x106C808", VA = "0x106C808")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0x106C864", Offset = "0x106C864", VA = "0x106C864")]
	public SkyboxOffsetUpdater()
	{
	}
}
[Token(Token = "0x2000133")]
public class SkyboxTextureTillingUpdater : CacheBehaviour
{
	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_propertyName;

	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Vector2Variable m_value;

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0x106C958", Offset = "0x106C958", VA = "0x106C958")]
	private void Update()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0x106C9B4", Offset = "0x106C9B4", VA = "0x106C9B4")]
	public SkyboxTextureTillingUpdater()
	{
	}
}
[Token(Token = "0x2000134")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7AF4", Offset = "0xCB7AF4")]
public class BuildWasher : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20005A2")]
	public struct BoolVariableWash
	{
		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public BoolVariable m_var;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool m_buildValue;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool m_buildDefaultValue;
	}

	[Serializable]
	[Token(Token = "0x20005A3")]
	public struct IntVariableWash
	{
		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntVariable m_var;

		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_buildValue;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_buildDefaultValue;
	}

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2B84", Offset = "0xCC2B84")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC2B84", Offset = "0xCC2B84")]
	public GameModeTypeVariable m_gameModeVar;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameModeType m_buildValue;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public GameModeType m_buildDefaultValue;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2BD4", Offset = "0xCC2BD4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC2BD4", Offset = "0xCC2BD4")]
	public List<BoolVariableWash> m_boolVarsToWash;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2C24", Offset = "0xCC2C24")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC2C24", Offset = "0xCC2C24")]
	public List<IntVariableWash> m_intVarsToWash;

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xF696C8", Offset = "0xF696C8", VA = "0xF696C8")]
	public BuildWasher()
	{
	}
}
[Token(Token = "0x2000135")]
public class SpellWasher : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005A4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF1D0", Offset = "0xCBF1D0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Ammo, Ammo> <>9__3_0;

		[Token(Token = "0x600212F")]
		[Address(RVA = "0x1076BBC", Offset = "0x1076BBC", VA = "0x1076BBC")]
		public <>c()
		{
		}

		[Token(Token = "0x6002130")]
		[Address(RVA = "0x1076BC4", Offset = "0x1076BC4", VA = "0x1076BC4")]
		internal Ammo <Wash>b__3_0(Ammo ammo)
		{
			return null;
		}
	}

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2C74", Offset = "0xCC2C74")]
	public SpellData[] m_spellDatas;

	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GestureData[] m_gestureDatas;

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0x1076818", Offset = "0x1076818", VA = "0x1076818")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0x107681C", Offset = "0x107681C", VA = "0x107681C")]
	public void Wash()
	{
	}

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0x1076B4C", Offset = "0x1076B4C", VA = "0x1076B4C")]
	public SpellWasher()
	{
	}
}
[Token(Token = "0x2000136")]
public class Washer : MonoBehaviour
{
	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BaseVariable> m_variablesToWash;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnPostWash;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_launchOnAwake;

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0x1108AB4", Offset = "0x1108AB4", VA = "0x1108AB4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0x1108AF8", Offset = "0x1108AF8", VA = "0x1108AF8")]
	public void Wash()
	{
	}

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0x1108B98", Offset = "0x1108B98", VA = "0x1108B98")]
	public Washer()
	{
	}
}
[Token(Token = "0x2000137")]
public class MapManager : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x20005A5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF1E0", Offset = "0xCBF1E0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__28_0;

		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__28_1;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__28_2;

		[Token(Token = "0x6002132")]
		[Address(RVA = "0x10C5328", Offset = "0x10C5328", VA = "0x10C5328")]
		public <>c()
		{
		}

		[Token(Token = "0x6002133")]
		[Address(RVA = "0x10C5330", Offset = "0x10C5330", VA = "0x10C5330")]
		internal bool <DisplayMap>b__28_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002134")]
		[Address(RVA = "0x10C538C", Offset = "0x10C538C", VA = "0x10C538C")]
		internal bool <DisplayMap>b__28_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002135")]
		[Address(RVA = "0x10C53E8", Offset = "0x10C53E8", VA = "0x10C53E8")]
		internal bool <DisplayMap>b__28_2(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005A6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF1F0", Offset = "0xCBF1F0")]
	private sealed class <WaitForRotation>d__32 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject planet;

		[Token(Token = "0x17000357")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002139")]
			[Address(RVA = "0x10C5614", Offset = "0x10C5614", VA = "0x10C5614", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000358")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600213B")]
			[Address(RVA = "0x10C567C", Offset = "0x10C567C", VA = "0x10C567C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002136")]
		[Address(RVA = "0x10C4660", Offset = "0x10C4660", VA = "0x10C4660")]
		[DebuggerHidden]
		public <WaitForRotation>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6002137")]
		[Address(RVA = "0x10C5544", Offset = "0x10C5544", VA = "0x10C5544", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002138")]
		[Address(RVA = "0x10C5548", Offset = "0x10C5548", VA = "0x10C5548", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600213A")]
		[Address(RVA = "0x10C561C", Offset = "0x10C561C", VA = "0x10C561C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005A7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF200", Offset = "0xCBF200")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int i;

		[Token(Token = "0x600213C")]
		[Address(RVA = "0x10C4FD0", Offset = "0x10C4FD0", VA = "0x10C4FD0")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x600213D")]
		[Address(RVA = "0x10C5444", Offset = "0x10C5444", VA = "0x10C5444")]
		internal bool <OnBossReveal>b__0(GameObject x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2CAC", Offset = "0xCC2CAC")]
	public IntVariable m_difficultyGlobal;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2CE4", Offset = "0xCC2CE4")]
	public SolarSystemVariable m_currentSolarSystem;

	[Token(Token = "0x40006CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2D1C", Offset = "0xCC2D1C")]
	public LayerMask m_layerMask;

	[Token(Token = "0x40006CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2D54", Offset = "0xCC2D54")]
	public GameObject[] m_rings;

	[Token(Token = "0x40006CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<int> m_ringsCount;

	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_map;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public IntUnityEvent OnGenerateRecipe;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent OnAllMoonTyped;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntUnityEvent OnCradleMapPosition;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public IntVariable m_numberOfPlanetsRevealed;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public BoolVariable m_playerInBoss;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public BoolVariable m_playerInLastBoss;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public BoolVariable m_bossRevealed;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public IntVariable m_numberOfSystems;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public FloatVariable m_sphereState;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public GameObject m_shamanSphereHolderMap;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public GameObject m_shamanSphereHolder;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObjectCollection m_planets;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2D8C", Offset = "0xCC2D8C")]
	public float m_planetMinXRotation;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	public float m_planetMaxXRotation;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public float m_planetMinYRotation;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	public float m_planetMaxYRotation;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public float m_planetMinZRotation;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	public float m_planetMaxZRotation;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public float m_radiusFactor;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
	private int _lastPlanetIndex;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private int _lastPlanetPicked;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<GameObject> _planets;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private List<GameObject> _planetBosses;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Vector3 _originalPos;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private Teleport _radarTeleport;

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0x10C2464", Offset = "0x10C2464", VA = "0x10C2464")]
	public void Start()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0x10C25A0", Offset = "0x10C25A0", VA = "0x10C25A0")]
	public void GenerateMap()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0x10C2BA4", Offset = "0x10C2BA4", VA = "0x10C2BA4")]
	public void DisplayMap(int numberOfPlanetToGenerate, bool alreadyCalculated)
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0x10C3EC8", Offset = "0x10C3EC8", VA = "0x10C3EC8")]
	public void ShowOnlyShop()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0x10C414C", Offset = "0x10C414C", VA = "0x10C414C")]
	public void PositionIconOnCradle()
	{
	}

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0x10C4208", Offset = "0x10C4208", VA = "0x10C4208")]
	public void ActivatePlanets()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0x10C45E4", Offset = "0x10C45E4", VA = "0x10C45E4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0D94", Offset = "0xCD0D94")]
	private IEnumerator<float> WaitForRotation(GameObject planet)
	{
		return null;
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0x10C468C", Offset = "0x10C468C", VA = "0x10C468C")]
	private Vector3 GetRandomPointOf(List<Vector3> vertices)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0x10C4714", Offset = "0x10C4714", VA = "0x10C4714")]
	public void ActiveMap()
	{
	}

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0x10C4980", Offset = "0x10C4980", VA = "0x10C4980")]
	public void DeactiveMap()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0x10C4B08", Offset = "0x10C4B08", VA = "0x10C4B08")]
	public void ActivatePlanetsCollider()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0x10C4CE0", Offset = "0x10C4CE0", VA = "0x10C4CE0")]
	public void DeactivatePlanetsCollider()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0x10C4DF8", Offset = "0x10C4DF8", VA = "0x10C4DF8")]
	public void ReactivateSphereShamanCollider()
	{
	}

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0x10C29CC", Offset = "0x10C29CC", VA = "0x10C29CC")]
	public void DeleteMap()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0x10C4E7C", Offset = "0x10C4E7C", VA = "0x10C4E7C")]
	public void OnBossReveal()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0x10C4FD8", Offset = "0x10C4FD8", VA = "0x10C4FD8")]
	public void OnRecipeGenerated(int instanceId)
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0x10C4FDC", Offset = "0x10C4FDC", VA = "0x10C4FDC")]
	public void OnPlanetPicked(int instanceId)
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0x10C3954", Offset = "0x10C3954", VA = "0x10C3954")]
	private void DisplayRecipe(int instanceId)
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0x10C5218", Offset = "0x10C5218", VA = "0x10C5218")]
	public MapManager()
	{
	}
}
[Token(Token = "0x2000138")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB7B60", Offset = "0xCB7B60")]
public class MaterialPropertyOverrider : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005A8")]
	public struct FloatOverride
	{
		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_value;
	}

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FloatOverride> m_floatOverrides;

	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MaterialPropertyBlock _materialPropertyBlock;

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0x10C56E0", Offset = "0x10C56E0", VA = "0x10C56E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0x10C576C", Offset = "0x10C576C", VA = "0x10C576C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0x10C5864", Offset = "0x10C5864", VA = "0x10C5864")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0x10C58A4", Offset = "0x10C58A4", VA = "0x10C58A4")]
	public MaterialPropertyOverrider()
	{
	}
}
[Token(Token = "0x2000139")]
public class MoonShowroom : MonoBehaviour
{
	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> m_moons;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_offset;

	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_moonPerLine;

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0x10C9B68", Offset = "0x10C9B68", VA = "0x10C9B68")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0x10C9D20", Offset = "0x10C9D20", VA = "0x10C9D20")]
	public MoonShowroom()
	{
	}
}
[Token(Token = "0x200013A")]
public class OnStopVFXCallback : CacheBehaviour
{
	[Token(Token = "0x20005A9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF210", Offset = "0xCBF210")]
	private sealed class <WaitUntilEndOfVFX>d__3 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OnStopVFXCallback <>4__this;

		[Token(Token = "0x17000359")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002141")]
			[Address(RVA = "0x11D0290", Offset = "0x11D0290", VA = "0x11D0290", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002143")]
			[Address(RVA = "0x11D02F8", Offset = "0x11D02F8", VA = "0x11D02F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600213E")]
		[Address(RVA = "0x11D0190", Offset = "0x11D0190", VA = "0x11D0190")]
		[DebuggerHidden]
		public <WaitUntilEndOfVFX>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x600213F")]
		[Address(RVA = "0x11D01C4", Offset = "0x11D01C4", VA = "0x11D01C4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002140")]
		[Address(RVA = "0x11D01C8", Offset = "0x11D01C8", VA = "0x11D01C8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002142")]
		[Address(RVA = "0x11D0298", Offset = "0x11D0298", VA = "0x11D0298", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<VisualEffect> m_vfxs;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2DC4", Offset = "0xCC2DC4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC2DC4", Offset = "0xCC2DC4")]
	public UnityEvent OnFinishedVFX;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0x11CFE78", Offset = "0x11CFE78", VA = "0x11CFE78")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0x11D0104", Offset = "0x11D0104", VA = "0x11D0104")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0DF8", Offset = "0xCD0DF8")]
	private IEnumerator<float> WaitUntilEndOfVFX(float delay)
	{
		return null;
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0x11D01BC", Offset = "0x11D01BC", VA = "0x11D01BC")]
	public OnStopVFXCallback()
	{
	}
}
[Token(Token = "0x200013B")]
public class PauseScreen : MonoBehaviour
{
	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PerkDataCollection m_obtainedPerks;

	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_playerPerksContainer;

	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_leftPerksContainer;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_rightPerksContainer;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_offset;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int m_playerPerksIndex;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int m_leftPerksIndex;

	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int m_rightPerksIndex;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GameObject> m_perkIcons;

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xFE859C", Offset = "0xFE859C", VA = "0xFE859C")]
	public void Create()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xFE8A24", Offset = "0xFE8A24", VA = "0xFE8A24")]
	public void ClearIcons()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xFE88A0", Offset = "0xFE88A0", VA = "0xFE88A0")]
	private void AddPerkIcon(Sprite p_sprite, Transform p_transform, int p_index)
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xFE8B18", Offset = "0xFE8B18", VA = "0xFE8B18")]
	public PauseScreen()
	{
	}
}
[Token(Token = "0x200013C")]
public class PermanentPerkManager : MonoBehaviour
{
	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2E14", Offset = "0xCC2E14")]
	public FloatVariable m_damageBase;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatVariable m_damageInterRun;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2E4C", Offset = "0xCC2E4C")]
	public IntVariable m_health;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_healthMax;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable m_healthInterRun;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2E84", Offset = "0xCC2E84")]
	public FloatVariable m_criticalOdd;

	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatVariable m_criticalDamage;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FloatVariable m_criticalOddInterRun;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public FloatVariable m_criticalDamageInterRun;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2EBC", Offset = "0xCC2EBC")]
	public StringVariable m_dominantHand;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public List<GestureVariable> m_starterSpells;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public WandDataVariable m_leftWand;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public WandDataVariable m_rightWand;

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xFE8BAC", Offset = "0xFE8BAC", VA = "0xFE8BAC")]
	public void ApplyPermanentPerks()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xFE8BD8", Offset = "0xFE8BD8", VA = "0xFE8BD8")]
	public void AddHealthInterRun()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xFE8C48", Offset = "0xFE8C48", VA = "0xFE8C48")]
	public void AddCriticalRateAndDamageInterRun()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xFE8D0C", Offset = "0xFE8D0C", VA = "0xFE8D0C")]
	public void AddDamageInterRun()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xFE8D80", Offset = "0xFE8D80", VA = "0xFE8D80")]
	public void AddGesture()
	{
	}

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xFE9058", Offset = "0xFE9058", VA = "0xFE9058")]
	public PermanentPerkManager()
	{
	}
}
[Token(Token = "0x200013D")]
public class PillarRegenerationManager : CacheBehaviour
{
	[Token(Token = "0x20005AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF220", Offset = "0xCBF220")]
	private sealed class <WaitForQTEEffect>d__19 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PillarRegenerationManager <>4__this;

		[Token(Token = "0x1700035B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002147")]
			[Address(RVA = "0xFEA510", Offset = "0xFEA510", VA = "0xFEA510", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002149")]
			[Address(RVA = "0xFEA578", Offset = "0xFEA578", VA = "0xFEA578", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002144")]
		[Address(RVA = "0xFEA028", Offset = "0xFEA028", VA = "0xFEA028")]
		[DebuggerHidden]
		public <WaitForQTEEffect>d__19(int <>1__state)
		{
		}

		[Token(Token = "0x6002145")]
		[Address(RVA = "0xFEA40C", Offset = "0xFEA40C", VA = "0xFEA40C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002146")]
		[Address(RVA = "0xFEA410", Offset = "0xFEA410", VA = "0xFEA410", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002148")]
		[Address(RVA = "0xFEA518", Offset = "0xFEA518", VA = "0xFEA518", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF230", Offset = "0xCBF230")]
	private sealed class <>c__DisplayClass20_0
	{
		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string elmt;

		[Token(Token = "0x600214A")]
		[Address(RVA = "0xFEA054", Offset = "0xFEA054", VA = "0xFEA054")]
		public <>c__DisplayClass20_0()
		{
		}

		[Token(Token = "0x600214B")]
		[Address(RVA = "0xFEA3D4", Offset = "0xFEA3D4", VA = "0xFEA3D4")]
		internal bool <RegeneratePillar>b__0(GameObject x)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20005AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF240", Offset = "0xCBF240")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__20_1;

		[Token(Token = "0x600214D")]
		[Address(RVA = "0xFEA368", Offset = "0xFEA368", VA = "0xFEA368")]
		public <>c()
		{
		}

		[Token(Token = "0x600214E")]
		[Address(RVA = "0xFEA370", Offset = "0xFEA370", VA = "0xFEA370")]
		internal bool <RegeneratePillar>b__20_1(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IntVariable[] m_currentElements;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable[] m_neededElements;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string[] m_elements;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public BoolVariable m_sulfurPillar;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BoolVariable m_azotePillar;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolVariable m_phosphorusPillar;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BoolVariable m_waterPillar;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BoolVariable m_carbonPillar;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public BoolVariable m_bossRevealed;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject m_qteManager;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject m_shamanSphereCradle;

	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_pillarAnimatorState;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UnityEvent OnAllPillarRegenerated;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UnityEvent OnEndPillarLoop;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Dictionary<string, BoolVariable> m_pillars;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int _index;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private string _currentElement;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private List<GameObject> m_pillarsGO;

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xFE9908", Offset = "0xFE9908", VA = "0xFE9908")]
	public void Start()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xFE99F4", Offset = "0xFE99F4", VA = "0xFE99F4")]
	public void CheckPillar()
	{
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xFE9A6C", Offset = "0xFE9A6C", VA = "0xFE9A6C")]
	public void CheckPillar(IntVariable current, IntVariable needed, string element)
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xFE9C8C", Offset = "0xFE9C8C", VA = "0xFE9C8C")]
	public void OnPillarRegeneration()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xFE9FAC", Offset = "0xFE9FAC", VA = "0xFE9FAC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0E5C", Offset = "0xCD0E5C")]
	public IEnumerator<float> WaitForQTEEffect()
	{
		return null;
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xFE9DB4", Offset = "0xFE9DB4", VA = "0xFE9DB4")]
	public void RegeneratePillar([Optional] string element)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xFEA05C", Offset = "0xFEA05C", VA = "0xFEA05C")]
	public void OnNewSystemDiscovered()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xFEA108", Offset = "0xFEA108", VA = "0xFEA108")]
	public void OnArriveCradle()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xFEA110", Offset = "0xFEA110", VA = "0xFEA110")]
	public void OnPillarRegistered(GameObject pillar)
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xFEA250", Offset = "0xFEA250", VA = "0xFEA250")]
	public PillarRegenerationManager()
	{
	}
}
[Token(Token = "0x200013E")]
public class PlanetPicker : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x20005AD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF250", Offset = "0xCBF250")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__16_0;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__16_1;

		[Token(Token = "0x6002150")]
		[Address(RVA = "0xFEB48C", Offset = "0xFEB48C", VA = "0xFEB48C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002151")]
		[Address(RVA = "0xFEB494", Offset = "0xFEB494", VA = "0xFEB494")]
		internal bool <OnPlanetPick>b__16_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002152")]
		[Address(RVA = "0xFEB4F8", Offset = "0xFEB4F8", VA = "0xFEB4F8")]
		internal bool <OnPlanetPick>b__16_1(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_infoPlanet;

	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_infoPlanetUnknown;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_background;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_triggerTime;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public IntUnityEvent OnPlanetPicked;

	[Token(Token = "0x400071E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolVariable m_inPlanetChoice;

	[Token(Token = "0x400071F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BoolVariable m_bossRevealed;

	[Token(Token = "0x4000720")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BoolVariable m_playerInBoss;

	[Token(Token = "0x4000721")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public BoolVariable m_playerInLastBoss;

	[Token(Token = "0x4000722")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public IntVariable m_numberOfSystems;

	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public bool toDenySound;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2EF4", Offset = "0xCC2EF4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC2EF4", Offset = "0xCC2EF4")]
	public GameEventListener m_triggerPressed;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameEventListener m_triggerReleased;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool _triggered;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool _picked;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float _triggerTime;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject _planetParent;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private PlanetData _data;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int _instanceID;

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xFEA5E4", Offset = "0xFEA5E4", VA = "0xFEA5E4")]
	public void Start()
	{
	}

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xFEA798", Offset = "0xFEA798", VA = "0xFEA798")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xFEA7E0", Offset = "0xFEA7E0", VA = "0xFEA7E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xFEAB78", Offset = "0xFEAB78", VA = "0xFEAB78")]
	public void OnPlanetPick(int instanceId)
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xFEA9C0", Offset = "0xFEA9C0", VA = "0xFEA9C0")]
	public void FindBossPlanet(int instanceID)
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xFEAEC4", Offset = "0xFEAEC4", VA = "0xFEAEC4")]
	public void OnHoverEnter(int instanceID)
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xFEB000", Offset = "0xFEB000", VA = "0xFEB000")]
	public void OnHoverExit(int instanceID)
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xFEB0F0", Offset = "0xFEB0F0", VA = "0xFEB0F0")]
	public void OnHoverEnterUnknown(int instanceID)
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xFEB234", Offset = "0xFEB234", VA = "0xFEB234")]
	public void OnHoverExitUnknown(int instanceID)
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xFEB324", Offset = "0xFEB324", VA = "0xFEB324")]
	private void InstantiateHorizontalLayout()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xFEB328", Offset = "0xFEB328", VA = "0xFEB328")]
	public void OnTriggerPressed()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xFEB3CC", Offset = "0xFEB3CC", VA = "0xFEB3CC")]
	public void OnTriggerRelease()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xFEB3DC", Offset = "0xFEB3DC", VA = "0xFEB3DC")]
	public void PickedToFalse()
	{
	}

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xFEB3E4", Offset = "0xFEB3E4", VA = "0xFEB3E4")]
	public void SetInstanceId()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xFEB41C", Offset = "0xFEB41C", VA = "0xFEB41C")]
	public PlanetPicker()
	{
	}
}
[Token(Token = "0x200013F")]
public class PlanetShowroomBehaviour : MonoBehaviour
{
	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Transform> m_moons;

	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public KeyCode m_nextKey;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public KeyCode m_previousKey;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public KeyCode m_regenerateKey;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_fxAzote;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_fxCarbon;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject m_fxPhosphorus;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject m_fxSulfur;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_fxWater;

	[Token(Token = "0x4000735")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform _currentMoon;

	[Token(Token = "0x4000736")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform _currentFX;

	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _currentMoonIndex;

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xFEC27C", Offset = "0xFEC27C", VA = "0xFEC27C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xFEC3DC", Offset = "0xFEC3DC", VA = "0xFEC3DC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xFECE44", Offset = "0xFECE44", VA = "0xFECE44")]
	public PlanetShowroomBehaviour()
	{
	}
}
[Token(Token = "0x2000140")]
public class ProgressBar : MonoBehaviour
{
	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntVariable m_currentWaveNumber;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntVariable m_currentWaveIndex;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_currentBatchNumber;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_currentBatchIndex;

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xFF49E4", Offset = "0xFF49E4", VA = "0xFF49E4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xFF4BAC", Offset = "0xFF4BAC", VA = "0xFF4BAC")]
	public ProgressBar()
	{
	}
}
[Token(Token = "0x2000141")]
public class ProximityManager : MonoBehaviour
{
	[Token(Token = "0x6000609")]
	[Address(RVA = "0xFF574C", Offset = "0xFF574C", VA = "0xFF574C")]
	public ProximityManager()
	{
	}
}
[Token(Token = "0x2000142")]
public class QTEObjectManager : CacheBehaviour
{
	[Token(Token = "0x20005AE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF260", Offset = "0xCBF260")]
	private sealed class <LerpToPunchPoint>d__17 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QTEObjectManager <>4__this;

		[Token(Token = "0x1700035D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002156")]
			[Address(RVA = "0xFF6038", Offset = "0xFF6038", VA = "0xFF6038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700035E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002158")]
			[Address(RVA = "0xFF60A0", Offset = "0xFF60A0", VA = "0xFF60A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002153")]
		[Address(RVA = "0xFF5910", Offset = "0xFF5910", VA = "0xFF5910")]
		[DebuggerHidden]
		public <LerpToPunchPoint>d__17(int <>1__state)
		{
		}

		[Token(Token = "0x6002154")]
		[Address(RVA = "0xFF5DB8", Offset = "0xFF5DB8", VA = "0xFF5DB8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002155")]
		[Address(RVA = "0xFF5DBC", Offset = "0xFF5DBC", VA = "0xFF5DBC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002157")]
		[Address(RVA = "0xFF6040", Offset = "0xFF6040", VA = "0xFF6040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF270", Offset = "0xCBF270")]
	private sealed class <OnTimeLifeSupport>d__20 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public QTEObjectManager <>4__this;

		[Token(Token = "0x1700035F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600215C")]
			[Address(RVA = "0xFF61F0", Offset = "0xFF61F0", VA = "0xFF61F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000360")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600215E")]
			[Address(RVA = "0xFF6258", Offset = "0xFF6258", VA = "0xFF6258", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002159")]
		[Address(RVA = "0xFF5B74", Offset = "0xFF5B74", VA = "0xFF5B74")]
		[DebuggerHidden]
		public <OnTimeLifeSupport>d__20(int <>1__state)
		{
		}

		[Token(Token = "0x600215A")]
		[Address(RVA = "0xFF6104", Offset = "0xFF6104", VA = "0xFF6104", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600215B")]
		[Address(RVA = "0xFF6108", Offset = "0xFF6108", VA = "0xFF6108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600215D")]
		[Address(RVA = "0xFF61F8", Offset = "0xFF61F8", VA = "0xFF61F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_deformer;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_QTEObject;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_QTEfx;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_QTESphere;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityEvent OnQTELifeSupportSent;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public UnityEvent OnPillarRegeneration;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_punchSprite;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_standardPoint;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject m_lerpPoint;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject m_pictoPunch;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public FloatVariable m_sphereState;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public float m_modifierTweenTime;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	public float m_tweenAmount;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public bool m_pillarMode;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private Vector3 _modifierPosition;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Vector3 _spherePosition;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xFF5754", Offset = "0xFF5754", VA = "0xFF5754")]
	private void Start()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xFF579C", Offset = "0xFF579C", VA = "0xFF579C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600060C")]
	[Address(RVA = "0xFF5894", Offset = "0xFF5894", VA = "0xFF5894")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0EC0", Offset = "0xCD0EC0")]
	public IEnumerator<float> LerpToPunchPoint()
	{
		return null;
	}

	[Token(Token = "0x600060D")]
	[Address(RVA = "0xFF593C", Offset = "0xFF593C", VA = "0xFF593C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xFF59C4", Offset = "0xFF59C4", VA = "0xFF59C4")]
	public void OnQTEObjectPunched()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xFF5AF8", Offset = "0xFF5AF8", VA = "0xFF5AF8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0F24", Offset = "0xCD0F24")]
	public IEnumerator<float> OnTimeLifeSupport(float time)
	{
		return null;
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xFF5BA0", Offset = "0xFF5BA0", VA = "0xFF5BA0")]
	public void OnDeformerTweenComplete()
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xFF5C64", Offset = "0xFF5C64", VA = "0xFF5C64")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xFF5DB0", Offset = "0xFF5DB0", VA = "0xFF5DB0")]
	public QTEObjectManager()
	{
	}
}
[Token(Token = "0x2000143")]
public class RandomElementGainer : MonoBehaviour
{
	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<IntVariable> m_currentElements;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<IntVariable> m_neededElements;

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xFF6484", Offset = "0xFF6484", VA = "0xFF6484")]
	public void GainRandomElement(int elementCount)
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xFF654C", Offset = "0xFF654C", VA = "0xFF654C")]
	public void GainRandomNeededElement(int elementCount)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xFF6718", Offset = "0xFF6718", VA = "0xFF6718")]
	public RandomElementGainer()
	{
	}
}
[Token(Token = "0x2000144")]
public class RandomNumberDrawer : MonoBehaviour
{
	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_useInt;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatVariable m_outputValue;

	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_outputValueInt;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_minValue;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_maxValue;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_minValueInt;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_maxValueInt;

	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent m_OnNumberDrawned;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_launchOnEnable;

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xFF6720", Offset = "0xFF6720", VA = "0xFF6720")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xFF6730", Offset = "0xFF6730", VA = "0xFF6730")]
	public void DrawRandomNumber()
	{
	}

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xFF67B8", Offset = "0xFF67B8", VA = "0xFF67B8")]
	public RandomNumberDrawer()
	{
	}
}
[Token(Token = "0x2000145")]
public class Randomizer : MonoBehaviour
{
	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_oddPercentage;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool m_superiorOdd;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent m_OnSuccess;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public FloatUnityEvent m_OnFail;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_launchOnEnable;

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xFF67C0", Offset = "0xFF67C0", VA = "0xFF67C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xFF6888", Offset = "0xFF6888", VA = "0xFF6888")]
	public void CheckOdds(float odd)
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xFF67D0", Offset = "0xFF67D0", VA = "0xFF67D0")]
	public void DrawRandom()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xFF6924", Offset = "0xFF6924", VA = "0xFF6924")]
	public Randomizer()
	{
	}
}
[Token(Token = "0x2000146")]
public class ReferenceHolder : MonoBehaviour
{
	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_reference;

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xFF6A94", Offset = "0xFF6A94", VA = "0xFF6A94")]
	public ReferenceHolder()
	{
	}
}
[Token(Token = "0x2000147")]
public class ReflectiveEffect : MonoBehaviour
{
	[Token(Token = "0x20005B0")]
	public enum ReflectMode
	{
		[Token(Token = "0x4001C17")]
		Instantiate,
		[Token(Token = "0x4001C18")]
		Activate
	}

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable headGO;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ReflectMode m_reflectMode;

	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_objectToInstantiate;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_objectToActivate;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnReflect;

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xFF6A9C", Offset = "0xFF6A9C", VA = "0xFF6A9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xFF6D40", Offset = "0xFF6D40", VA = "0xFF6D40")]
	public ReflectiveEffect()
	{
	}
}
[Token(Token = "0x2000148")]
public class RegenerationManager : MonoBehaviour
{
	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2F44", Offset = "0xCC2F44")]
	public string m_regenerationStateName;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2F7C", Offset = "0xCC2F7C")]
	public GameObject m_superNovaFX;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2FB4", Offset = "0xCC2FB4")]
	public GameObject m_shockwaveCollider;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_shockwaveSpeed;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _regenerated;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject _shockWaveCollider;

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xFF7760", Offset = "0xFF7760", VA = "0xFF7760")]
	public void Update()
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xFF7898", Offset = "0xFF7898", VA = "0xFF7898")]
	public void OnPlanetRegenerated(int instanceID)
	{
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xFF7AD0", Offset = "0xFF7AD0", VA = "0xFF7AD0")]
	public void OnWaveFinished()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xFF7B40", Offset = "0xFF7B40", VA = "0xFF7B40")]
	public RegenerationManager()
	{
	}
}
[Token(Token = "0x2000149")]
public class ResetAnimatorBoolParams : MonoBehaviour
{
	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator m_animator;

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xFF87E0", Offset = "0xFF87E0", VA = "0xFF87E0")]
	public void ResetAllParams()
	{
	}

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xFF891C", Offset = "0xFF891C", VA = "0xFF891C")]
	public ResetAnimatorBoolParams()
	{
	}
}
[Token(Token = "0x200014A")]
public class StopActionCallback : MonoBehaviour
{
	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnShockwaveFinished;

	[Token(Token = "0x6000626")]
	[Address(RVA = "0x10780B8", Offset = "0x10780B8", VA = "0x10780B8")]
	public void OnParticleSystemStopped()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0x10780D4", Offset = "0x10780D4", VA = "0x10780D4")]
	public StopActionCallback()
	{
	}
}
[Token(Token = "0x200014B")]
public class StringReferenceHolder : MonoBehaviour
{
	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_reference;

	[Token(Token = "0x6000628")]
	[Address(RVA = "0x10780DC", Offset = "0x10780DC", VA = "0x10780DC")]
	public StringReferenceHolder()
	{
	}
}
[Token(Token = "0x200014C")]
public class StringVariableComparer : MonoBehaviour
{
	[Token(Token = "0x20005B1")]
	public enum StringToCompareType
	{
		[Token(Token = "0x4001C1A")]
		CONSTANTE,
		[Token(Token = "0x4001C1B")]
		STRINGVARIABLE,
		[Token(Token = "0x4001C1C")]
		STRING_REFERENCE_HOLDER
	}

	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC2FEC", Offset = "0xCC2FEC")]
	public StringToCompareType m_variableAType;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_variableAString;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public StringVariable m_variableAStringVar;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StringReferenceHolder m_variableAReferenceHolder;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC3024", Offset = "0xCC3024")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3024", Offset = "0xCC3024")]
	public StringToCompareType m_variableBType;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_variableBString;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public StringVariable m_variableBStringVar;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public StringReferenceHolder m_variableBReferenceHolder;

	[Token(Token = "0x4000774")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3074", Offset = "0xCC3074")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC3074", Offset = "0xCC3074")]
	public UnityEvent OnComparisonSuccess;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent OnComparisonFail;

	[Token(Token = "0x6000629")]
	[Address(RVA = "0x1078178", Offset = "0x1078178", VA = "0x1078178")]
	public void Check()
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0x10781E4", Offset = "0x10781E4", VA = "0x10781E4")]
	private string ReturnGoodString(StringToCompareType typeOfString, string constanteChoice, StringVariable stringVariableChoice, StringReferenceHolder stringReferenceHolderChoice)
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0x107822C", Offset = "0x107822C", VA = "0x107822C")]
	public StringVariableComparer()
	{
	}
}
[Token(Token = "0x200014D")]
public abstract class AmmoBehaviour : CacheBehaviour
{
	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public ScriptableObject m_ammo;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public int m_actorInstanceId;

	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnImpact;

	[Token(Token = "0x4000779")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public bool m_overridedTrigger;

	[Token(Token = "0x400077A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
	[HideInInspector]
	public bool m_overridedUpdate;

	[Token(Token = "0x400077B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_hitFeedback;

	[Token(Token = "0x400077C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public List<ModifierData> m_modifiersData;

	[Token(Token = "0x400077D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public List<SpellModifierBase> m_modifiers;

	[Token(Token = "0x400077E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public int m_damages;

	[Token(Token = "0x400077F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	[HideInInspector]
	public bool m_isCrit;

	[Token(Token = "0x4000780")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent m_OnDestroy;

	[Token(Token = "0x4000781")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	protected readonly string _ammoTag;

	[Token(Token = "0x4000782")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	protected Ammo _linkToAmmoData;

	[Token(Token = "0x4000783")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	protected float _autoDestructTimer;

	[Token(Token = "0x600062C")]
	[Address(RVA = "0x1213D58", Offset = "0x1213D58", VA = "0x1213D58")]
	protected void Awake()
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0x1213D5C", Offset = "0x1213D5C", VA = "0x1213D5C")]
	protected void Start()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0x1213E08", Offset = "0x1213E08", VA = "0x1213E08")]
	private void Update()
	{
	}

	[Token(Token = "0x600062F")]
	[Address(RVA = "0x1213EDC", Offset = "0x1213EDC", VA = "0x1213EDC", Slot = "4")]
	public virtual void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0x12141A4", Offset = "0x12141A4", VA = "0x12141A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0x12141C0", Offset = "0x12141C0", VA = "0x12141C0")]
	public void InstantiateModifiers()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0x1213E30", Offset = "0x1213E30", VA = "0x1213E30")]
	protected void DecrementAutoDestroyTimer(float deltaTime)
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0x12143EC", Offset = "0x12143EC", VA = "0x12143EC")]
	protected AmmoBehaviour()
	{
	}
}
[Token(Token = "0x200014E")]
public class AmmoBehaviourExchangeVars : AmmoBehaviour
{
	[Token(Token = "0x4000784")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UnityEvent OnNotEnoughMana;

	[Token(Token = "0x4000785")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private AmmoExchangeData _ammoExchange;

	[Token(Token = "0x4000786")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private AmmoExchangeData.VariableType _variableToDecrementType;

	[Token(Token = "0x4000787")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private FloatVariable _variableToDecrementFloat;

	[Token(Token = "0x4000788")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private IntVariable _variableToDecrementInt;

	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _floatToDecrement;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int _intToDecrement;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private AmmoExchangeData.VariableType _variableToIncrementType;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private FloatVariable _variableToIncrementFloat;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private IntVariable _variableToIncrementInt;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float _floatToIncrement;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private int _intToIncrement;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private float _timeToDestroyFx;

	[Token(Token = "0x6000634")]
	[Address(RVA = "0x121445C", Offset = "0x121445C", VA = "0x121445C")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0x1214858", Offset = "0x1214858", VA = "0x1214858")]
	private void Update()
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0x121475C", Offset = "0x121475C", VA = "0x121475C")]
	private void DestroyExchangeFX()
	{
	}

	[Token(Token = "0x6000637")]
	[Address(RVA = "0x12148AC", Offset = "0x12148AC", VA = "0x12148AC")]
	public AmmoBehaviourExchangeVars()
	{
	}
}
[Token(Token = "0x200014F")]
public class AmmoBehaviourHold : AmmoBehaviour
{
	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public LayerMask m_layersToIgnore;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public StringUnityEvent OnEndCanalization;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public string m_ownerTag;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public bool m_maintainTrigger;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string m_leftTrigger;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string m_rightTrigger;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public float _stayTime;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	protected float _intervalDotDamage;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	protected List<DotDamage> _dotDamages;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	protected bool _increaseDamages;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	protected float _ratioDamages;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private string _trigger;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	protected Event _stopHoldingEvent;

	[Token(Token = "0x6000638")]
	[Address(RVA = "0x12148B0", Offset = "0x12148B0", VA = "0x12148B0")]
	protected new void Start()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0x1214998", Offset = "0x1214998", VA = "0x1214998")]
	protected void Update()
	{
	}

	[Token(Token = "0x600063A")]
	[Address(RVA = "0x1214BB8", Offset = "0x1214BB8", VA = "0x1214BB8", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600063B")]
	[Address(RVA = "0x1214F5C", Offset = "0x1214F5C", VA = "0x1214F5C")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600063C")]
	[Address(RVA = "0x12150EC", Offset = "0x12150EC", VA = "0x12150EC")]
	public AmmoBehaviourHold()
	{
	}
}
[Token(Token = "0x2000150")]
public class AmmoBehaviourShield : AmmoBehaviour
{
	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameObject m_shieldImpact;

	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool _reflect;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int _hp;

	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float _longevity;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObjectIntUnityEvent _OnShieldDestroyed;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Event _shieldHitAudioEvent;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Event _shieldDestroyAudioEvent;

	[Token(Token = "0x17000048")]
	public bool Reflect
	{
		[Token(Token = "0x6000640")]
		[Address(RVA = "0x121590C", Offset = "0x121590C", VA = "0x121590C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1215914", Offset = "0x1215914", VA = "0x1215914")]
		set
		{
		}
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0x12154CC", Offset = "0x12154CC", VA = "0x12154CC")]
	private new void Start()
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0x1215590", Offset = "0x1215590", VA = "0x1215590")]
	private void Update()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0x12156B0", Offset = "0x12156B0", VA = "0x12156B0", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0x1215920", Offset = "0x1215920", VA = "0x1215920")]
	public AmmoBehaviourShield()
	{
	}
}
[Token(Token = "0x2000151")]
public class AmmoBehaviourShieldCharge : AmmoBehaviourShield
{
	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public IntVariable m_dominantHand;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public IntVariable m_numberOfChargesLeft;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public IntVariable m_numberOfChargesRight;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public SpellDataVariable m_leftSpell;

	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public SpellDataVariable m_rightSpell;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public float m_addTime;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
	public int m_chargeNumber;

	[Token(Token = "0x6000643")]
	[Address(RVA = "0x1215924", Offset = "0x1215924", VA = "0x1215924", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0x1215B18", Offset = "0x1215B18", VA = "0x1215B18")]
	public AmmoBehaviourShieldCharge()
	{
	}
}
[Token(Token = "0x2000152")]
public class AmmoBehaviourSlash : Projectile
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Transform m_GOToRotate;

	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public BoxCollider m_collider;

	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public Vector3 m_vectorToFollow;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private bool _scalable;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private float _minScale;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	private float _maxScale;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private float _initPropulsion;

	[Token(Token = "0x6000645")]
	[Address(RVA = "0x1215B1C", Offset = "0x1215B1C", VA = "0x1215B1C")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0x1215BC8", Offset = "0x1215BC8", VA = "0x1215BC8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0x1215DC8", Offset = "0x1215DC8", VA = "0x1215DC8")]
	public AmmoBehaviourSlash()
	{
	}
}
[Token(Token = "0x2000153")]
public class AmmoBehaviourTotem : AmmoBehaviour
{
	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private GameObject _totemPrefab;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float _propulsionFuelTime;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float _speed;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _totemHasBeenPlanted;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0x1215DDC", Offset = "0x1215DDC", VA = "0x1215DDC")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0x1215F40", Offset = "0x1215F40", VA = "0x1215F40")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0x12160BC", Offset = "0x12160BC", VA = "0x12160BC", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600064B")]
	[Address(RVA = "0x12162F4", Offset = "0x12162F4", VA = "0x12162F4")]
	public AmmoBehaviourTotem()
	{
	}
}
[Token(Token = "0x2000154")]
public class BombBehaviour : CacheBehaviour
{
	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3154", Offset = "0xCC3154")]
	public float m_delayBeforeCharge;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public float m_timeBeforeExplode;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_timeOfExplosion;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC318C", Offset = "0xCC318C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC318C", Offset = "0xCC318C")]
	public GameObject m_sphereColliderGO;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_maxSphereScale;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC31DC", Offset = "0xCC31DC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC31DC", Offset = "0xCC31DC")]
	public Animator m_animator;

	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string m_animChargeExplosion;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string m_animExplosion;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC322C", Offset = "0xCC322C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC322C", Offset = "0xCC322C")]
	public UnityEvent OnStartCharge;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent OnExplosion;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _timeBeforeExplode;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float _delay;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float _explodeTime;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private bool _delayDone;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10D")]
	private bool _exploding;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 _tempScale;

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xF67D2C", Offset = "0xF67D2C", VA = "0xF67D2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xF67E04", Offset = "0xF67E04", VA = "0xF67E04")]
	private void Update()
	{
	}

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xF67D50", Offset = "0xF67D50", VA = "0xF67D50")]
	private void StartChargeExplosion()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xF67FAC", Offset = "0xF67FAC", VA = "0xF67FAC")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xF68060", Offset = "0xF68060", VA = "0xF68060")]
	public BombBehaviour()
	{
	}
}
[Token(Token = "0x2000155")]
public class HoldBehaviourEnemy : AmmoBehaviourHold
{
	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC327C", Offset = "0xCC327C")]
	public EnemyLaserBehaviour m_laser;

	[Token(Token = "0x40007C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public Collider m_boxCollider;

	[Token(Token = "0x40007C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject m_warningBox;

	[Token(Token = "0x40007CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Countdown m_colliderCountdown;

	[Token(Token = "0x40007CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public float m_ratioOfRayTimeBeforeColliderActivated;

	[Token(Token = "0x40007CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC32B4", Offset = "0xCC32B4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC32B4", Offset = "0xCC32B4")]
	public PlayerManager m_playerManager;

	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public float m_intervalDot;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
	public int m_damageDot;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public float m_rayTime;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
	private float _holdStayTime;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private int _ownerID;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
	private bool _started;

	[Token(Token = "0x17000049")]
	public float StayTime
	{
		[Token(Token = "0x6000651")]
		[Address(RVA = "0xF41334", Offset = "0xF41334", VA = "0xF41334")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000652")]
		[Address(RVA = "0xF4133C", Offset = "0xF4133C", VA = "0xF4133C")]
		set
		{
		}
	}

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xF41348", Offset = "0xF41348", VA = "0xF41348")]
	public void StartStayTime()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xF41354", Offset = "0xF41354", VA = "0xF41354")]
	public void SetOwnerID(int ownerID)
	{
	}

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xF4135C", Offset = "0xF4135C", VA = "0xF4135C")]
	public void OnLaserDeath(int laserID)
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xF41400", Offset = "0xF41400", VA = "0xF41400")]
	private new void Start()
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xF41444", Offset = "0xF41444", VA = "0xF41444")]
	private new void Update()
	{
	}

	[Token(Token = "0x6000658")]
	[Address(RVA = "0xF4144C", Offset = "0xF4144C", VA = "0xF4144C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000659")]
	[Address(RVA = "0xF41508", Offset = "0xF41508", VA = "0xF41508")]
	public void StartLaser()
	{
	}

	[Token(Token = "0x600065A")]
	[Address(RVA = "0xF41540", Offset = "0xF41540", VA = "0xF41540", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600065B")]
	[Address(RVA = "0xF41864", Offset = "0xF41864", VA = "0xF41864")]
	public new void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600065C")]
	[Address(RVA = "0xF419EC", Offset = "0xF419EC", VA = "0xF419EC")]
	public HoldBehaviourEnemy()
	{
	}
}
[Token(Token = "0x2000156")]
public class BouncingModifier : SpellModifierBase
{
	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int m_numberOfBounces;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float m_radius;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_bouncingSpeed;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public LayerMask m_layerMask;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _isBouncing;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private int _bounceCounter;

	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 _target;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private GameObject _targetGO;

	[Token(Token = "0x600065D")]
	[Address(RVA = "0xF68844", Offset = "0xF68844", VA = "0xF68844", Slot = "5")]
	public override void OnImpact([Optional] Collider other)
	{
	}

	[Token(Token = "0x600065E")]
	[Address(RVA = "0xF68C78", Offset = "0xF68C78", VA = "0xF68C78", Slot = "6")]
	public override void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x600065F")]
	[Address(RVA = "0xF68D38", Offset = "0xF68D38", VA = "0xF68D38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000660")]
	[Address(RVA = "0xF68FE4", Offset = "0xF68FE4", VA = "0xF68FE4")]
	public BouncingModifier()
	{
	}
}
[Token(Token = "0x2000157")]
public class ExplosiveModifier : SpellModifierBase
{
	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3304", Offset = "0xCC3304")]
	public Transform m_explodeSphere;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Projectile m_fakeProjectile;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC333C", Offset = "0xCC333C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC333C", Offset = "0xCC333C")]
	public float m_radius;

	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	public float m_speed;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public int m_damages;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private bool _hasImpacted;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 _tempScale;

	[Token(Token = "0x6000661")]
	[Address(RVA = "0xF38FDC", Offset = "0xF38FDC", VA = "0xF38FDC", Slot = "5")]
	public override void OnImpact([Optional] Collider other)
	{
	}

	[Token(Token = "0x6000662")]
	[Address(RVA = "0xF390C8", Offset = "0xF390C8", VA = "0xF390C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000663")]
	[Address(RVA = "0xF39254", Offset = "0xF39254", VA = "0xF39254", Slot = "6")]
	public override void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x6000664")]
	[Address(RVA = "0xF39368", Offset = "0xF39368", VA = "0xF39368")]
	public ExplosiveModifier()
	{
	}
}
[Token(Token = "0x2000158")]
public class HomingModifier : SpellModifierBase
{
	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform m_target;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_speed;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float m_timeForLock;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _targetLocked;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _step;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private GameObject _lockedUI;

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xF41F54", Offset = "0xF41F54", VA = "0xF41F54")]
	private void Update()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xF42158", Offset = "0xF42158", VA = "0xF42158")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xF4220C", Offset = "0xF4220C", VA = "0xF4220C")]
	public void OnTargetLocked(GameObject targetLocked)
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xF422BC", Offset = "0xF422BC", VA = "0xF422BC", Slot = "6")]
	public override void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xF42708", Offset = "0xF42708", VA = "0xF42708")]
	public HomingModifier()
	{
	}
}
[Token(Token = "0x2000159")]
public class PiercingModifier : SpellModifierBase
{
	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int m_hp;

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xFE9814", Offset = "0xFE9814", VA = "0xFE9814", Slot = "5")]
	public override void OnImpact([Optional] Collider other)
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xFE9858", Offset = "0xFE9858", VA = "0xFE9858", Slot = "6")]
	public override void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xFE98F8", Offset = "0xFE98F8", VA = "0xFE98F8")]
	public PiercingModifier()
	{
	}
}
[Token(Token = "0x200015A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7BC4", Offset = "0xCB7BC4")]
public class BouncingModifierData : ModifierData
{
	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_numberOfBounces;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_radius;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_bouncingSpeed;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask m_layerMask;

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xF68FFC", Offset = "0xF68FFC", VA = "0xF68FFC")]
	public BouncingModifierData()
	{
	}
}
[Token(Token = "0x200015B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7C24", Offset = "0xCB7C24")]
public class ExplosiveModifierData : ModifierData
{
	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_radius;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_speed;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_useSameDamagesAsAmmo;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_damages;

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xF39370", Offset = "0xF39370", VA = "0xF39370")]
	public ExplosiveModifierData()
	{
	}
}
[Token(Token = "0x200015C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7C84", Offset = "0xCB7C84")]
public class HomingModifierData : ModifierData
{
	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_speed;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_timeForLock;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_allChargesAtOnce;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_homingLaser;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public HomingLock m_laserInstantiated;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public HomingLock m_laserInstantiatedLeft;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Transform m_target;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<Transform> m_targets;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public int m_targetIndex;

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xF42710", Offset = "0xF42710", VA = "0xF42710")]
	public HomingModifierData()
	{
	}
}
[Token(Token = "0x200015D")]
public class ModifierData : ScriptableObject
{
	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_modifierPrefab;

	[Token(Token = "0x6000670")]
	[Address(RVA = "0x10C88F4", Offset = "0x10C88F4", VA = "0x10C88F4")]
	public ModifierData()
	{
	}
}
[Token(Token = "0x200015E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7CE4", Offset = "0xCB7CE4")]
public class PiercingModifierData : ModifierData
{
	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_hp;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xFE9900", Offset = "0xFE9900", VA = "0xFE9900")]
	public PiercingModifierData()
	{
	}
}
[Token(Token = "0x200015F")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7D44", Offset = "0xCB7D44")]
public class SpreadModifierData : ModifierData
{
	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 m_layoutOfDispersion;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_offset;

	[Token(Token = "0x6000672")]
	[Address(RVA = "0x1077A04", Offset = "0x1077A04", VA = "0x1077A04")]
	public SpreadModifierData()
	{
	}
}
[Token(Token = "0x2000160")]
public class SpellModifierBase : CacheBehaviour
{
	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public AmmoBehaviour m_ammo;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public Ammo m_ammoData;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	protected ModifierData _modifierData;

	[Token(Token = "0x6000673")]
	[Address(RVA = "0x10730DC", Offset = "0x10730DC", VA = "0x10730DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0x1073158", Offset = "0x1073158", VA = "0x1073158", Slot = "4")]
	public virtual void OnStart()
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0x107315C", Offset = "0x107315C", VA = "0x107315C", Slot = "5")]
	public virtual void OnImpact([Optional] Collider other)
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0x1073160", Offset = "0x1073160", VA = "0x1073160", Slot = "6")]
	public virtual void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x6000677")]
	[Address(RVA = "0x1073168", Offset = "0x1073168", VA = "0x1073168")]
	public SpellModifierBase()
	{
	}
}
[Token(Token = "0x2000161")]
public class SpreadModifier : SpellModifierBase
{
	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector2 m_layoutOfDispersion;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public int m_offset;

	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Transform _parent;

	[Token(Token = "0x6000678")]
	[Address(RVA = "0x10772BC", Offset = "0x10772BC", VA = "0x10772BC", Slot = "4")]
	public override void OnStart()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0x1077828", Offset = "0x1077828", VA = "0x1077828")]
	private void Update()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0x1077944", Offset = "0x1077944", VA = "0x1077944", Slot = "6")]
	public override void SetModifierData(ModifierData value)
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0x10779F4", Offset = "0x10779F4", VA = "0x10779F4")]
	public SpreadModifier()
	{
	}
}
[Token(Token = "0x2000162")]
public class HomingLock : CacheBehaviour
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_timeForLock;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObjectUnityEvent OnTargetLocked;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC340C", Offset = "0xCC340C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC340C", Offset = "0xCC340C")]
	public TextMeshPro m_uiCounter;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_homingLockPrefab;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_targetLockedGO;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_objectToDestroy;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public HomingModifierData m_data;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public HomingModifierData m_dataLeft;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public bool m_isRight;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	[HideInInspector]
	public int m_countToLock;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<Transform> m_targets;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject _currentTarget;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform _currentTargetTransform;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private bool _timingStarted;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private float _currTiming;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool _targetLocked;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private MaterialPropertyBlock _mpb;

	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Renderer _renderer;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private GameObject _homingLock;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Material _homingLockMat;

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xF41A08", Offset = "0xF41A08", VA = "0xF41A08")]
	private void Update()
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xF41C2C", Offset = "0xF41C2C", VA = "0xF41C2C")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xF41DB8", Offset = "0xF41DB8", VA = "0xF41DB8")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xF41BF0", Offset = "0xF41BF0", VA = "0xF41BF0")]
	public void ResetLaser()
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xF41ECC", Offset = "0xF41ECC", VA = "0xF41ECC")]
	public HomingLock()
	{
	}
}
[Token(Token = "0x2000163")]
public class Projectile : AmmoBehaviour
{
	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool m_notMoving;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Vector3 m_direction;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	protected float _propulsionFuelTime;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected float _propulsionForce;

	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	protected Vector2Int _dispersion;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected float _speed;

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xFF4BB4", Offset = "0xFF4BB4", VA = "0xFF4BB4")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xFF4C84", Offset = "0xFF4C84", VA = "0xFF4C84")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xFF4E04", Offset = "0xFF4E04", VA = "0xFF4E04")]
	public Projectile()
	{
	}
}
[Token(Token = "0x2000164")]
public class ProjectileAlongRay : AmmoBehaviour
{
	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	public bool m_useLayerMaskFilter;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public LayerMask m_layerToCollideWith;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public IntUnityEvent OnFinishAction;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UnityEvent OnDisable;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Ray _ray;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Vector3 _target;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
	private float _speed;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Vector3 _movementVector;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
	private float _timer;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private bool _overrideCollision;

	[Token(Token = "0x4000828")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
	private bool _finished;

	[Token(Token = "0x4000829")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private AmmoBehaviour _otherAmmoBehav;

	[Token(Token = "0x1700004A")]
	public Vector3 MovementVector
	{
		[Token(Token = "0x6000687")]
		[Address(RVA = "0xFF52E4", Offset = "0xFF52E4", VA = "0xFF52E4")]
		get
		{
			return default(Vector3);
		}
		[Token(Token = "0x6000688")]
		[Address(RVA = "0xFF52F4", Offset = "0xFF52F4", VA = "0xFF52F4")]
		set
		{
		}
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xFF4E0C", Offset = "0xFF4E0C", VA = "0xFF4E0C")]
	public new void Start()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xFF4F94", Offset = "0xFF4F94", VA = "0xFF4F94")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xFF50E8", Offset = "0xFF50E8", VA = "0xFF50E8", Slot = "4")]
	public override void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xFF5304", Offset = "0xFF5304", VA = "0xFF5304")]
	public ProjectileAlongRay()
	{
	}
}
[Token(Token = "0x2000165")]
public class ProjectileHomingTorpedo : AmmoBehaviour
{
	[Token(Token = "0x400082A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 _dir;

	[Token(Token = "0x400082B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Transform m_target;

	[Token(Token = "0x400082C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public float m_speed;

	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	public float m_time;

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xFF530C", Offset = "0xFF530C", VA = "0xFF530C")]
	public new void Start()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xFF53D4", Offset = "0xFF53D4", VA = "0xFF53D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xFF5468", Offset = "0xFF5468", VA = "0xFF5468")]
	private void Update()
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xFF573C", Offset = "0xFF573C", VA = "0xFF573C")]
	public ProjectileHomingTorpedo()
	{
	}
}
[Token(Token = "0x2000166")]
public class Ammo : ScriptableObject
{
	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_ammoToSpawn;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_size;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC349C", Offset = "0xCC349C")]
	public float m_defaultSize;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC34D4", Offset = "0xCC34D4")]
	public float m_autoDestructTimer;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0x1213D3C", Offset = "0x1213D3C", VA = "0x1213D3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0x1213D40", Offset = "0x1213D40", VA = "0x1213D40")]
	public Ammo()
	{
	}
}
[Token(Token = "0x2000167")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7DA4", Offset = "0xCB7DA4")]
public class AmmoExchangeData : Ammo
{
	[Token(Token = "0x20005B2")]
	public enum VariableType
	{
		[Token(Token = "0x4001C1E")]
		FLOAT,
		[Token(Token = "0x4001C1F")]
		INT
	}

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC350C", Offset = "0xCC350C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC350C", Offset = "0xCC350C")]
	public VariableType m_variableToDecrementType;

	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FloatVariable m_variableToDecrementFloat;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float m_floatValueToDecrement;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntVariable m_variableToDecrementInt;

	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_intValueToDecrement;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC355C", Offset = "0xCC355C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC355C", Offset = "0xCC355C")]
	public VariableType m_variableToIncrementType;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public FloatVariable m_variableToIncrementFloat;

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float m_floatValueToIncrement;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public IntVariable m_variableToIncrementInt;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int m_intValueToIncrement;

	[Token(Token = "0x6000690")]
	[Address(RVA = "0x1216304", Offset = "0x1216304", VA = "0x1216304")]
	public AmmoExchangeData()
	{
	}
}
[Token(Token = "0x2000168")]
public abstract class AmmoGearData : Ammo
{
	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC35AC", Offset = "0xCC35AC")]
	public int m_gearHP;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC35E4", Offset = "0xCC35E4")]
	public float m_gearLongevity;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC361C", Offset = "0xCC361C")]
	public Label m_spawner;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3654", Offset = "0xCC3654")]
	public Label m_spawnerRight;

	[Token(Token = "0x6000691")]
	[Address(RVA = "0x121631C", Offset = "0x121631C", VA = "0x121631C")]
	protected AmmoGearData()
	{
	}
}
[Token(Token = "0x2000169")]
public class AmmoGearMineralShield : AmmoGearShieldData
{
	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC368C", Offset = "0xCC368C")]
	public float m_distanceOffset;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0x1216334", Offset = "0x1216334", VA = "0x1216334")]
	public AmmoGearMineralShield()
	{
	}
}
[Token(Token = "0x200016A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7E04", Offset = "0xCB7E04")]
public class AmmoGearShieldData : AmmoGearData
{
	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC36C4", Offset = "0xCC36C4")]
	public bool m_reflect;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObjectIntUnityEvent OnShieldDestroyed;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC36FC", Offset = "0xCC36FC")]
	public Event m_shieldHitAudioEvent;

	[Token(Token = "0x4000844")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Event m_shieldDestroyAudioEvent;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0x121634C", Offset = "0x121634C", VA = "0x121634C")]
	public AmmoGearShieldData()
	{
	}
}
[Token(Token = "0x200016B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7E64", Offset = "0xCB7E64")]
public class AmmoHoldData : Ammo
{
	[Token(Token = "0x4000845")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3734", Offset = "0xCC3734")]
	public float m_lifeTime;

	[Token(Token = "0x4000846")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC376C", Offset = "0xCC376C")]
	public float m_intervalDamages;

	[Token(Token = "0x4000847")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC37A4", Offset = "0xCC37A4")]
	public int m_damages;

	[Token(Token = "0x4000848")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC37DC", Offset = "0xCC37DC")]
	public bool m_increasingDamagesOvertime;

	[Token(Token = "0x4000849")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3814", Offset = "0xCC3814")]
	public float m_ratioToIncrease;

	[Token(Token = "0x400084A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC384C", Offset = "0xCC384C")]
	public Event m_audioEventOnStopHolding;

	[Token(Token = "0x6000694")]
	[Address(RVA = "0x1216364", Offset = "0x1216364", VA = "0x1216364")]
	public AmmoHoldData()
	{
	}
}
[Token(Token = "0x200016C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7EC4", Offset = "0xCB7EC4")]
public class AmmoHomingTorpedo : Ammo
{
	[Token(Token = "0x400084B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3884", Offset = "0xCC3884")]
	public Transform m_target;

	[Token(Token = "0x400084C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC38BC", Offset = "0xCC38BC")]
	public float m_speed;

	[Token(Token = "0x6000695")]
	[Address(RVA = "0x1216388", Offset = "0x1216388", VA = "0x1216388")]
	public AmmoHomingTorpedo()
	{
	}
}
[Token(Token = "0x200016D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7F24", Offset = "0xCB7F24")]
public class AmmoProjectile : Ammo
{
	[Token(Token = "0x20005B3")]
	public enum EType
	{
		[Token(Token = "0x4001C21")]
		NONE,
		[Token(Token = "0x4001C22")]
		EXPLOSIVE
	}

	[Token(Token = "0x400084D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC38F4", Offset = "0xCC38F4")]
	public float m_damage;

	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC392C", Offset = "0xCC392C")]
	public float m_speed;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3964", Offset = "0xCC3964")]
	public float m_propulsionFuelTime;

	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC399C", Offset = "0xCC399C")]
	public float m_propulsionRatio;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC39D4", Offset = "0xCC39D4")]
	public Vector2Int m_layoutOfDispersion;

	[Token(Token = "0x6000696")]
	[Address(RVA = "0x12163A0", Offset = "0x12163A0", VA = "0x12163A0")]
	public AmmoProjectile()
	{
	}
}
[Token(Token = "0x200016E")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7F84", Offset = "0xCB7F84")]
public class AmmoProjectileRay : Ammo
{
	[Token(Token = "0x20005B4")]
	public enum EType
	{
		[Token(Token = "0x4001C24")]
		NONE,
		[Token(Token = "0x4001C25")]
		EXPLOSIVE
	}

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3A0C", Offset = "0xCC3A0C")]
	public float m_damage;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3A44", Offset = "0xCC3A44")]
	public float m_speed;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	public Ray m_ray;

	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[HideInInspector]
	public Vector3 m_target;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float m_timer;

	[Token(Token = "0x6000697")]
	[Address(RVA = "0x12163B8", Offset = "0x12163B8", VA = "0x12163B8")]
	public AmmoProjectileRay()
	{
	}
}
[Token(Token = "0x200016F")]
public class AmmoRayData : Ammo
{
	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3AAC", Offset = "0xCC3AAC")]
	public float m_reachValue;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3AE4", Offset = "0xCC3AE4")]
	public float m_rayLongevity;

	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3B1C", Offset = "0xCC3B1C")]
	public Vector2Int m_rayDispersion;

	[Token(Token = "0x6000698")]
	[Address(RVA = "0x12163D0", Offset = "0x12163D0", VA = "0x12163D0")]
	public AmmoRayData()
	{
	}
}
[Token(Token = "0x2000170")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB7FE4", Offset = "0xCB7FE4")]
public class AmmoSlashData : AmmoProjectile
{
	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3B54", Offset = "0xCC3B54")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC3B54", Offset = "0xCC3B54")]
	public bool m_scaleSlash;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float m_minScale;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float m_maxScale;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0x12163E8", Offset = "0x12163E8", VA = "0x12163E8")]
	public AmmoSlashData()
	{
	}
}
[Token(Token = "0x2000171")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8044", Offset = "0xCB8044")]
public class AmmoTotemData : AmmoGearData
{
	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_isOffensive;

	[Token(Token = "0x600069A")]
	[Address(RVA = "0x1216400", Offset = "0x1216400", VA = "0x1216400")]
	public AmmoTotemData()
	{
	}
}
[Token(Token = "0x2000172")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB80A4", Offset = "0xCB80A4")]
public class UltimeDotDamageAmmoData : Ammo
{
	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3BA4", Offset = "0xCC3BA4")]
	public ObjectArrayGameEvent DotDamageEvent;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3BDC", Offset = "0xCC3BDC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC3BDC", Offset = "0xCC3BDC")]
	public float m_intervalBetweenDot;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3C2C", Offset = "0xCC3C2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC3C2C", Offset = "0xCC3C2C")]
	public float m_stopAfterTime;

	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3C7C", Offset = "0xCC3C7C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC3C7C", Offset = "0xCC3C7C")]
	public float m_delayBeforeHit;

	[Token(Token = "0x600069B")]
	[Address(RVA = "0x1104DA8", Offset = "0x1104DA8", VA = "0x1104DA8")]
	public UltimeDotDamageAmmoData()
	{
	}
}
[Token(Token = "0x2000173")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8104", Offset = "0xCB8104")]
public class UltimeOneHitAmmoData : Ammo
{
	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_delayBeforeHit;

	[Token(Token = "0x600069C")]
	[Address(RVA = "0x1104DB0", Offset = "0x1104DB0", VA = "0x1104DB0")]
	public UltimeOneHitAmmoData()
	{
	}
}
[Token(Token = "0x2000174")]
public class UltimeDotDamageAmmoBehaviour : AmmoBehaviour
{
	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public ObjectArrayGameEvent DotDamageEvent;

	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	protected UltimeDotDamageAmmoData _data;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	protected float _intervalBetweenDot;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	protected int _dotDamage;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	protected float _totalTime;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected bool _destroyAfterTime;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected object[] _dotParams;

	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private float _delay;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool _delayEnded;

	[Token(Token = "0x600069D")]
	[Address(RVA = "0x11045D4", Offset = "0x11045D4", VA = "0x11045D4")]
	private void LaunchDotDamage()
	{
	}

	[Token(Token = "0x600069E")]
	[Address(RVA = "0x11046E8", Offset = "0x11046E8", VA = "0x11046E8")]
	private new void Start()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0x11049A0", Offset = "0x11049A0", VA = "0x11049A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0x1104B90", Offset = "0x1104B90", VA = "0x1104B90")]
	public void OnActorCreated(int instanceId)
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0x1104DA0", Offset = "0x1104DA0", VA = "0x1104DA0")]
	public UltimeDotDamageAmmoBehaviour()
	{
	}
}
[Token(Token = "0x2000175")]
public class UltimeOneShotAmmoBehaviour : AmmoBehaviour
{
	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private List<DestroyObjectOnTriggerEnter> _hpManagers;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float _destructTime;

	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float _delay;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _delayEnded;

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0x1104DB8", Offset = "0x1104DB8", VA = "0x1104DB8")]
	private new void Start()
	{
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0x11050B0", Offset = "0x11050B0", VA = "0x11050B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0x1105194", Offset = "0x1105194", VA = "0x1105194")]
	private void Hit()
	{
	}

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0x1105234", Offset = "0x1105234", VA = "0x1105234")]
	public UltimeOneShotAmmoBehaviour()
	{
	}
}
[Token(Token = "0x2000176")]
public class RaisingEventWhenTutoPlanetRegenerated : MonoBehaviour
{
	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolVariable m_boolTutorialCombat;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnTutoPlanetRegenerated;

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xFF62BC", Offset = "0xFF62BC", VA = "0xFF62BC")]
	public void OnTutoPlanetRegeneration()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xFF6310", Offset = "0xFF6310", VA = "0xFF6310")]
	public RaisingEventWhenTutoPlanetRegenerated()
	{
	}
}
[Token(Token = "0x2000177")]
public class RaisingGenericEventWhenBooleanIsFalse : MonoBehaviour
{
	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolVariable m_GenericBoolean;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent GenericEventWhenFalse;

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xFF6318", Offset = "0xFF6318", VA = "0xFF6318")]
	public void OnRaisingGenericEvent()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xFF638C", Offset = "0xFF638C", VA = "0xFF638C")]
	public RaisingGenericEventWhenBooleanIsFalse()
	{
	}
}
[Token(Token = "0x2000178")]
public class RaisingGenericEventWhenBooleanIsTrueOrFalse : MonoBehaviour
{
	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolVariable m_GenericBooleanFalsePerDefault;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoolVariable m_GenericBooleanTruePerDefault;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent GenericEventWhenTrue;

	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent GenericEventWhenFalse;

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xFF6394", Offset = "0xFF6394", VA = "0xFF6394")]
	public void OnRaisingGenericEventWhenTrue()
	{
	}

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xFF6408", Offset = "0xFF6408", VA = "0xFF6408")]
	public void OnRaisingGenericEventWhenFalse()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xFF647C", Offset = "0xFF647C", VA = "0xFF647C")]
	public RaisingGenericEventWhenBooleanIsTrueOrFalse()
	{
	}
}
[Token(Token = "0x2000179")]
public class AutoAimSolver : CacheBehaviour
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3CCC", Offset = "0xCC3CCC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3CCC", Offset = "0xCC3CCC")]
	public AutoAimTier[] m_autoAimTiers;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObjectVariable m_mostPertinentTarget;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnRefreshMostPertinentTarget;

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xF64A84", Offset = "0xF64A84", VA = "0xF64A84")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xF64B84", Offset = "0xF64B84", VA = "0xF64B84")]
	public void ResetMostPertinentTarget()
	{
	}

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xF64BAC", Offset = "0xF64BAC", VA = "0xF64BAC")]
	public void RefreshMostPertinentTarget()
	{
	}

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xF64F1C", Offset = "0xF64F1C", VA = "0xF64F1C")]
	public AutoAimSolver()
	{
	}
}
[Token(Token = "0x200017A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB8164", Offset = "0xCB8164")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB8164", Offset = "0xCB8164")]
public class AutoAimTier : CacheBehaviour
{
	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3D2C", Offset = "0xCC3D2C")]
	public List<Label> m_labelsToFind;

	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3D64", Offset = "0xCC3D64")]
	public UnityEvent OnTargetListDirty;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private List<Transform> _currentTargets;

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xF64F24", Offset = "0xF64F24", VA = "0xF64F24")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xF64FD0", Offset = "0xF64FD0", VA = "0xF64FD0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xF6529C", Offset = "0xF6529C", VA = "0xF6529C")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xF652A0", Offset = "0xF652A0", VA = "0xF652A0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xF65360", Offset = "0xF65360", VA = "0xF65360")]
	public void RemoveCurrentTargets()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xF64CC8", Offset = "0xF64CC8", VA = "0xF64CC8")]
	public Transform GetMostPertinentTarget()
	{
		return null;
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xF650B0", Offset = "0xF650B0", VA = "0xF650B0")]
	private bool GetTargetFromLabelHolder(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xF65180", Offset = "0xF65180", VA = "0xF65180")]
	private bool GetTargetFromLabelsHolder(Collider other)
	{
		return default(bool);
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xF653B8", Offset = "0xF653B8", VA = "0xF653B8")]
	public AutoAimTier()
	{
	}
}
[Token(Token = "0x200017B")]
public class CalibrationManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005B5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF280", Offset = "0xCBF280")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<float, float> <>9__7_0;

		[Token(Token = "0x4001C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<IGrouping<float, float>, int> <>9__7_1;

		[Token(Token = "0x4001C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<IGrouping<float, float>, float> <>9__7_2;

		[Token(Token = "0x6002160")]
		[Address(RVA = "0xF6B16C", Offset = "0xF6B16C", VA = "0xF6B16C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002161")]
		[Address(RVA = "0xF6B174", Offset = "0xF6B174", VA = "0xF6B174")]
		internal float <Update>b__7_0(float i)
		{
			return default(float);
		}

		[Token(Token = "0x6002162")]
		[Address(RVA = "0xF6B178", Offset = "0xF6B178", VA = "0xF6B178")]
		internal int <Update>b__7_1(IGrouping<float, float> grp)
		{
			return default(int);
		}

		[Token(Token = "0x6002163")]
		[Address(RVA = "0xF6B1C8", Offset = "0xF6B1C8", VA = "0xF6B1C8")]
		internal float <Update>b__7_2(IGrouping<float, float> grp)
		{
			return default(float);
		}
	}

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3D9C", Offset = "0xCC3D9C")]
	public GameObject m_magicCircle;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3DD4", Offset = "0xCC3DD4")]
	public GameObjectVariable m_leftHand;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObjectVariable m_rightHand;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public FloatVariable m_calibrationTime;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FloatVariable m_calibrationProgress;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3E0C", Offset = "0xCC3E0C")]
	public UnityEvent m_calibrationFinished;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool _started;

	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool _finished;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float _time;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<float> _calibrations;

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xF6AB3C", Offset = "0xF6AB3C", VA = "0xF6AB3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xF6ABAC", Offset = "0xF6ABAC", VA = "0xF6ABAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xF6B078", Offset = "0xF6B078", VA = "0xF6B078")]
	public void OnCalibrationStarted()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xF6B0BC", Offset = "0xF6B0BC", VA = "0xF6B0BC")]
	public void OnCalibrationFinished()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xF6B0FC", Offset = "0xF6B0FC", VA = "0xF6B0FC")]
	public CalibrationManager()
	{
	}
}
[Token(Token = "0x200017C")]
public struct BoidSequenceData : ISharedComponentData
{
	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_sequenceId;
}
[Token(Token = "0x200017D")]
public struct AddingBoidComponentJob : IJob
{
	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[ReadOnly]
	public EntityCommandBuffer CommandBuffer;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public NativeArray<Entity> m_entities;

	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public Boid settings;

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xDF66F0", Offset = "0xDF66F0", VA = "0xDF66F0", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x200017E")]
public class BoidBankSystem : JobComponentSystem
{
	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private EntityManager _entityManager;

	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private EntityArchetype _boidArchetype;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private EntityQuery _allBoidQuery;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EntityQuery _boidQuery;

	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EntityQuery _boidQueryWithoutSequence;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Boid _boidTemplate;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private RenderMesh _renderMeshTemplate;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private LocalToWorld _localToWorldTemplate;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private LocalToWorld _cachedLocalToWorld;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Unity.Mathematics.Random _bakedRandom;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private SimulationsData _simulationData;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private EndSimulationEntityCommandBufferSystem _commandBufferSystem;

	[Token(Token = "0x1700004B")]
	public SimulationsData m_simulationData
	{
		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xF660A0", Offset = "0xF660A0", VA = "0xF660A0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xF660A8", Offset = "0xF660A8", VA = "0xF660A8")]
		set
		{
		}
	}

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xF661DC", Offset = "0xF661DC", VA = "0xF661DC", Slot = "4")]
	protected override void OnCreate()
	{
	}

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xF666A8", Offset = "0xF666A8", VA = "0xF666A8", Slot = "13")]
	protected override JobHandle OnUpdate(JobHandle inputDeps)
	{
		return default(JobHandle);
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xF666B4", Offset = "0xF666B4", VA = "0xF666B4")]
	public void GetOrCreate(ref NativeArray<Entity> returnedArray, float3 position, [Optional] ComponentType[] componentsToAdd, int sequenceId = -1)
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xF66C5C", Offset = "0xF66C5C", VA = "0xF66C5C")]
	public void FreeBoidWithSequenceID(int sequenceId)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xF668E0", Offset = "0xF668E0", VA = "0xF668E0")]
	public void Get(ref NativeArray<Entity> nativeArray, float3 position, [Optional] ComponentType[] componentsToAdd, int sequenceId = -1)
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xF673DC", Offset = "0xF673DC", VA = "0xF673DC")]
	public void Get(ref NativeArray<Entity> nativeArray, [Optional] ComponentType[] componentsToAdd, int sequenceId = -1)
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xF66D94", Offset = "0xF66D94", VA = "0xF66D94")]
	private void InternalGet(ref NativeArray<Entity> nativeArray, float3 position, [Optional] ComponentType[] componentsToAdd, int sequenceId = -1, bool teleportBoid = false)
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xF668E8", Offset = "0xF668E8", VA = "0xF668E8")]
	public void Create(ref NativeArray<Entity> creationArray, float3 positionToSpawn, bool isBoid, int sequenceId = -1)
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xF67464", Offset = "0xF67464", VA = "0xF67464")]
	public void ReleaseToBoid(NativeArray<Entity> entitiesToConvert, ComponentType[] componentsToRemove)
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xF67638", Offset = "0xF67638", VA = "0xF67638")]
	public void ReleaseToBoid(NativeList<Entity> entitiesToConvert, ComponentType[] componentsToRemove)
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xF6779C", Offset = "0xF6779C", VA = "0xF6779C")]
	public void ConvertTo(NativeArray<Entity> entitiesToConvert, ComponentType[] componentsToRemove, ComponentType[] componentsToAdd)
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xF67890", Offset = "0xF67890", VA = "0xF67890")]
	public void ConvertTo(int sequenceId, ComponentType[] componentsToRemove, ComponentType[] componentsToAdd)
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xF67B54", Offset = "0xF67B54", VA = "0xF67B54")]
	public void DestroyAllBoids()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xF67D04", Offset = "0xF67D04", VA = "0xF67D04")]
	public BoidBankSystem()
	{
	}
}
[Token(Token = "0x200017F")]
public struct PathPointBuffer : IBufferElementData
{
	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float3 Value;
}
[Token(Token = "0x2000180")]
[AttributeAttribute(Name = "WriteGroupAttribute", RVA = "0xCB81F0", Offset = "0xCB81F0")]
public struct FollowerSimulationDataComponent : IComponentData
{
	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint m_followerId;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public uint m_pathId;

	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float m_radius;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float m_rotateSpeed;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float m_followSpeed;

	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public short m_index;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	public bool m_toremove;
}
[Token(Token = "0x2000181")]
public struct PathDataComponent : IComponentData
{
	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public bool m_boidAutoGeneration;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
	public ushort m_numberOfBoid;

	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public bool m_isLooping;

	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float2 m_rangeOfRadius;

	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ushort m_granularityAlongCurve;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float2 m_rangeSpeed;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_followCurveSpeed;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public uint m_pathId;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ushort m_pathVersion;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_sequenceId;

	[Token(Token = "0x40008AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool m_raiseEventAtEnd;

	[Token(Token = "0x40008AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool m_boidRetrieved;
}
[Token(Token = "0x2000182")]
public struct PathDataLiteComponent : ISharedComponentData
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint m_pathId;
}
[Token(Token = "0x2000183")]
public struct PathToDestroyLabelComponent : IComponentData
{
	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public uint m_pathId;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public ushort m_pathVersion;
}
[Token(Token = "0x2000184")]
public struct DestroyPathJob : IJobParallelFor
{
	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[ReadOnly]
	public EntityCommandBuffer CommandBuffer;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public NativeArray<Entity> m_pathsToDestroy;

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xDD718C", Offset = "0xDD718C", VA = "0xDD718C", Slot = "4")]
	public void Execute(int i)
	{
	}
}
[Token(Token = "0x2000185")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0xCB8254", Offset = "0xCB8254")]
public struct FollowerSimulationJob : IJobForEachWithEntity<FollowerSimulationDataComponent, LocalToWorld>, IJobForEachWithEntity_ECC<FollowerSimulationDataComponent, LocalToWorld>, JobForEachExtensions.IBaseJobForEach_ECC, JobForEachExtensions.IBaseJobForEach
{
	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[ReadOnly]
	public uint m_pathId;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[ReadOnly]
	public DynamicBuffer<PathPointBuffer> m_pathPoints;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnly]
	public int m_numberOfBoid;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[ReadOnly]
	public bool m_curveLoop;

	[Token(Token = "0x40008B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnly]
	public float m_time;

	[Token(Token = "0x40008B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[ReadOnly]
	public float m_deltaTime;

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xDD316C", Offset = "0xDD316C", VA = "0xDD316C", Slot = "4")]
	public void Execute(Entity entity, int i, ref FollowerSimulationDataComponent fs, ref LocalToWorld localToWorld)
	{
	}
}
[Token(Token = "0x2000186")]
public struct MoveFollowersJob : IJobForEachWithEntity<FollowerSimulationDataComponent, LocalToWorld>, IJobForEachWithEntity_ECC<FollowerSimulationDataComponent, LocalToWorld>, JobForEachExtensions.IBaseJobForEach_ECC, JobForEachExtensions.IBaseJobForEach
{
	[Token(Token = "0x40008B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public EntityCommandBuffer CommandBuffer;

	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[ReadOnly]
	public NativeArray<float4> m_positions;

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xDD5B54", Offset = "0xDD5B54", VA = "0xDD5B54", Slot = "4")]
	public void Execute(Entity entity, int i, ref FollowerSimulationDataComponent fs, ref LocalToWorld localToWorld)
	{
	}
}
[Token(Token = "0x2000187")]
public struct RemoveFollowerJob : IJob
{
	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NativeArray<FollowerSimulationDataComponent> m_followersData;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public NativeArray<Entity> m_followers;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public NativeList<Entity> m_backToBoid;

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xDD49EC", Offset = "0xDD49EC", VA = "0xDD49EC", Slot = "4")]
	public void Execute()
	{
	}
}
[Token(Token = "0x2000188")]
public class JobPathFollowerSystem : JobComponentSystem
{
	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SimulationsData m_simulationData;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public IntGameEvent m_onEndPath;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[ReadOnly]
	public ComponentType[] m_components;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EntityQuery _boidQuery;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EntityQuery _followersQuery;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private EntityQuery _boidSequenceQuery;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private EntityQuery _curveQuery;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private EntityQuery _pathToDestroyQuery;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private EntityManager _entityManager;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Unity.Mathematics.Random _bakedRandom;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<uint, DynamicBuffer<PathPointBuffer>> _pathPoints;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<Entity> _pathDatas;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<uint> _pathIds;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private EntityCommandBufferSystem _commandBufferSystem;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private DestroyPathJob _destroyPathJob;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private RemoveFollowerJob _removeFollowJob;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private JobHandle _destroyPathHandle;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private JobHandle _calculPosHandle;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private JobHandle _removeFollowHandle;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private BoidBankSystem _boidBankSystem;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xFBC694", Offset = "0xFBC694", VA = "0xFBC694", Slot = "4")]
	protected override void OnCreate()
	{
	}

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xFBCD00", Offset = "0xFBCD00", VA = "0xFBCD00", Slot = "7")]
	protected override void OnStartRunning()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xFBCF84", Offset = "0xFBCF84", VA = "0xFBCF84", Slot = "13")]
	protected override JobHandle OnUpdate(JobHandle inputDeps)
	{
		return default(JobHandle);
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xFBDC54", Offset = "0xFBDC54", VA = "0xFBDC54")]
	protected void MoveFollowers(NativeArray<Entity> followers, float percentage, NativeList<float> followSpeed, NativeList<float3> curPositions, NativeArray<float3> posToGoList)
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xFBD998", Offset = "0xFBD998", VA = "0xFBD998")]
	protected bool CreateBoid(int numberOfBoids, PathDataComponent data, int pathLength, float3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xFBDAA4", Offset = "0xFBDAA4", VA = "0xFBDAA4")]
	protected bool RetrieveBoid(int numberOfBoids, PathDataComponent data, int pathLength, float3 position)
	{
		return default(bool);
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xFBE07C", Offset = "0xFBE07C", VA = "0xFBE07C")]
	protected void SettingUsefulComponentsToFollowers(NativeArray<Entity> followers, PathDataComponent data, int pathLength)
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xFBDDFC", Offset = "0xFBDDFC", VA = "0xFBDDFC")]
	protected void AddingUsefulComponentsToFollowers(NativeArray<Entity> followers, PathDataComponent data, int pathLength)
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xFBCE5C", Offset = "0xFBCE5C", VA = "0xFBCE5C")]
	protected void AddPathData(Entity curveData)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xFBE2FC", Offset = "0xFBE2FC", VA = "0xFBE2FC")]
	public JobPathFollowerSystem()
	{
	}
}
[Token(Token = "0x2000189")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB8264", Offset = "0xCB8264")]
public class CinemachinePathBaker : CacheBehaviour
{
	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Color m_colorOfDebugSphere;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC3EF4", Offset = "0xCC3EF4")]
	public float m_sizeOfDebugSphere;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC3F10", Offset = "0xCC3F10")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3F10", Offset = "0xCC3F10")]
	public bool m_boidAutoGenerated;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public int m_granularityAlongCurve;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public int m_numberOfBoid;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float2 m_rangeOfRadius;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public float2 m_rangeSpeed;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public float m_followCurveSpeed;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	public bool m_raiseEventAtEnd;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public int m_sequenceId;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float3[] _bakedPoints;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private EntityManager _entityManager;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Entity _followDataHolder;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private PathDataComponent _pathData;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private uint _pathId;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private ushort _pathVersion;

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xF6C7B0", Offset = "0xF6C7B0", VA = "0xF6C7B0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xF6C7B4", Offset = "0xF6C7B4", VA = "0xF6C7B4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xF6CA5C", Offset = "0xF6CA5C", VA = "0xF6CA5C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xF6CA60", Offset = "0xF6CA60", VA = "0xF6CA60")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xF6CB68", Offset = "0xF6CB68", VA = "0xF6CB68")]
	public void OnEndPath(int sequenceId)
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xF6CB84", Offset = "0xF6CB84", VA = "0xF6CB84")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xF6CD84", Offset = "0xF6CD84", VA = "0xF6CD84")]
	public CinemachinePathBaker()
	{
	}
}
[Token(Token = "0x200018A")]
public struct PositionsToMagnetizeBuffer : IBufferElementData
{
	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float3 Value;
}
[Token(Token = "0x200018B")]
public struct MagnetDataHolderLabelComponent : IComponentData
{
	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_sequenceId;
}
[Token(Token = "0x200018C")]
[AttributeAttribute(Name = "WriteGroupAttribute", RVA = "0xCB82C8", Offset = "0xCB82C8")]
public struct MagnetComponent : IComponentData
{
}
[Serializable]
[Token(Token = "0x200018D")]
public struct MagnetTargetComponent : IComponentData
{
	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float3 position;
}
[Token(Token = "0x200018E")]
[DisallowMultipleComponent]
public class MagnetTargetComponentProxy : ComponentDataProxy<MagnetTargetComponent>
{
	[Token(Token = "0x60006E5")]
	[Address(RVA = "0x10C2414", Offset = "0x10C2414", VA = "0x10C2414")]
	public MagnetTargetComponentProxy()
	{
	}
}
[Token(Token = "0x200018F")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0xCB833C", Offset = "0xCB833C")]
public struct CalculPositionToMagnet : IJobParallelFor
{
	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public NativeArray<float3> m_positions;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float3 m_angle;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float3 m_position;

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xDD3320", Offset = "0xDD3320", VA = "0xDD3320", Slot = "4")]
	public void Execute(int index)
	{
	}
}
[Token(Token = "0x2000190")]
[AttributeAttribute(Name = "BurstCompileAttribute", RVA = "0xCB834C", Offset = "0xCB834C")]
internal struct UpdateMagnetPosition : IJobForEachWithEntity<LocalToWorld>, IJobForEachWithEntity_EC<LocalToWorld>, JobForEachExtensions.IBaseJobForEach_EC, JobForEachExtensions.IBaseJobForEach
{
	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public float m_speed;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public float m_deltaTime;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[ReadOnly]
	public DynamicBuffer<PositionsToMagnetizeBuffer> m_magnetTarget;

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xDD5C88", Offset = "0xDD5C88", VA = "0xDD5C88", Slot = "4")]
	public void Execute(Entity entity, int index, ref LocalToWorld localToWorld)
	{
	}
}
[Token(Token = "0x2000191")]
public class JobMagnetSystem : JobComponentSystem
{
	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SimulationsData m_simulationData;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[ReadOnly]
	public ComponentType[] m_components;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private EntityManager _entityManager;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EntityQuery _magnetizedQuery;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private EntityQuery _magnetDataHolderQuery;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private EntityQuery _boidsQuery;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Entity _allActorDataHolder;

	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private DynamicBuffer<PositionsToMagnetizeBuffer> _allActorDataBuffer;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Unity.Mathematics.Random _bakedRandom;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private BoidBankSystem _boidBankSystem;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xFBBD5C", Offset = "0xFBBD5C", VA = "0xFBBD5C")]
	public void DestroyMagnetizedBoids(int sequenceId)
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xFBBE34", Offset = "0xFBBE34", VA = "0xFBBE34", Slot = "4")]
	protected override void OnCreate()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xFBC29C", Offset = "0xFBC29C", VA = "0xFBC29C", Slot = "13")]
	protected override JobHandle OnUpdate(JobHandle inputDeps)
	{
		return default(JobHandle);
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xFBBF6C", Offset = "0xFBBF6C", VA = "0xFBBF6C")]
	private void SetupEntityQuery()
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xFBC5B8", Offset = "0xFBC5B8", VA = "0xFBC5B8")]
	public JobMagnetSystem()
	{
	}
}
[Token(Token = "0x2000192")]
public class RigBaker1 : CacheBehaviour
{
	[Token(Token = "0x20005B6")]
	public struct BoneStructure
	{
		[Token(Token = "0x4001C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform m_bone;

		[Token(Token = "0x4001C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public BoneStructure[] m_childBones;
	}

	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3F80", Offset = "0xCC3F80")]
	public Transform m_magnetTargetPrefab;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Transform m_rootBone;

	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC3FB8", Offset = "0xCC3FB8")]
	public int m_granularityPerBone;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC3FD4", Offset = "0xCC3FD4")]
	public List<BoneStructure> m_bones;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector3[] _granularRigPosition;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Transform[] _granularRigTransform;

	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public EntityManager _entityManager;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Entity _jobMagnetDataHolder;

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xFF8E10", Offset = "0xFF8E10", VA = "0xFF8E10")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xFF9528", Offset = "0xFF9528", VA = "0xFF9528")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xFF95BC", Offset = "0xFF95BC", VA = "0xFF95BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xFF8F38", Offset = "0xFF8F38", VA = "0xFF8F38")]
	private BoneStructure[] GetChildBones(Transform childTransform)
	{
		return null;
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xFF9240", Offset = "0xFF9240", VA = "0xFF9240")]
	private Transform[] CreateGranularEntities(BoneStructure bonesStructure)
	{
		return null;
	}

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xFF9634", Offset = "0xFF9634", VA = "0xFF9634")]
	private Vector3[] GetGranularBones(BoneStructure bonesStructure)
	{
		return null;
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xFF9B18", Offset = "0xFF9B18", VA = "0xFF9B18")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xFF9BCC", Offset = "0xFF9BCC", VA = "0xFF9BCC")]
	public RigBaker1()
	{
	}
}
[Token(Token = "0x2000193")]
public class SkinnedMeshBaker : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x20005B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF290", Offset = "0xCBF290")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<SkinnedMeshRenderer, bool> <>9__21_0;

		[Token(Token = "0x6002165")]
		[Address(RVA = "0x106C620", Offset = "0x106C620", VA = "0x106C620")]
		public <>c()
		{
		}

		[Token(Token = "0x6002166")]
		[Address(RVA = "0x106C628", Offset = "0x106C628", VA = "0x106C628")]
		internal bool <UpdateBuffer>b__21_0(SkinnedMeshRenderer c)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC400C", Offset = "0xCC400C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC400C", Offset = "0xCC400C")]
	public string m_prefixToIgnore;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string m_prefixToConvertIntoInvulnerable;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IntIntUnityEvent OnActorTouched;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public IntUnityEvent OnActorFullParts;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public CustomActionUnityEvent OnActionTouched;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public bool m_useHurt;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public AnimationActionData m_AnimationActionData;

	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public int m_currentMagnetCount;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_actorRoot;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	private int _sequenceId;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private SkinnedMeshRenderer[] _skinnedMeshRenderers;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private EntityManager _entityManager;

	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Entity _entityDataHolder;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private MagnetDataHolderLabelComponent _magnetData;

	[Token(Token = "0x1700004C")]
	public int m_sequenceId
	{
		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x106B420", Offset = "0x106B420", VA = "0x106B420")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x106B428", Offset = "0x106B428", VA = "0x106B428")]
		set
		{
		}
	}

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0x106B52C", Offset = "0x106B52C", VA = "0x106B52C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0x106B5F0", Offset = "0x106B5F0", VA = "0x106B5F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0x106BB88", Offset = "0x106BB88", VA = "0x106BB88")]
	private void Update()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0x106C0B8", Offset = "0x106C0B8", VA = "0x106C0B8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0x106C1F8", Offset = "0x106C1F8", VA = "0x106C1F8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0x106B67C", Offset = "0x106B67C", VA = "0x106B67C")]
	private SkinnedMeshRenderer[] GetAllChildSkinnedMeshes()
	{
		return null;
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0x106B9FC", Offset = "0x106B9FC", VA = "0x106B9FC")]
	private void CreateEntityDataHolder()
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0x106BA90", Offset = "0x106BA90", VA = "0x106BA90")]
	private void CreatePhysicsGeometry()
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0x106BB8C", Offset = "0x106BB8C", VA = "0x106BB8C")]
	private void UpdateBuffer()
	{
	}

	[Token(Token = "0x6000700")]
	[Address(RVA = "0x106C3F4", Offset = "0x106C3F4", VA = "0x106C3F4")]
	public void OnTouched(int instanceID)
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0x106C308", Offset = "0x106C308", VA = "0x106C308")]
	private NativeArray<float3> GetNativeVertexArrays(Vector3[] vertexArray)
	{
		return default(NativeArray<float3>);
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0x106C530", Offset = "0x106C530", VA = "0x106C530")]
	public SkinnedMeshBaker()
	{
	}
}
[Token(Token = "0x2000194")]
public class DestroyObjectOnTriggerEnter : CacheBehaviour
{
	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public int m_hp;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	public int m_maxHp;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_objectToDestroyOnContact;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_colliderSize;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3UnityEvent OnDestroyPosition;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Vector3UnityEvent OnTouchSkeletonPosition;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntUnityEvent OnDestroy;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public ObjectArrayUnityEvent OnDestroyObjectArray;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public IntUnityEvent OnGainHP;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntUnityEvent OnLoseHP;

	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public UnityEvent OnRefreshMaxHP;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public IntIntUnityEvent OnActorPart;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC407C", Offset = "0xCC407C")]
	public ObjectArrayUnityEvent OnHit;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public bool m_hasSkeleton;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x119")]
	public bool m_isDead;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private readonly string _ammoTag;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private int _currentHp;

	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private int _maxHp;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _isDead;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	private int _enemyHitCountValue;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0x116F7C4", Offset = "0x116F7C4", VA = "0x116F7C4")]
	public void RefreshMaxHP()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0x116F7EC", Offset = "0x116F7EC", VA = "0x116F7EC")]
	public void RefreshHp()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0x116F7F8", Offset = "0x116F7F8", VA = "0x116F7F8")]
	public int GetCurrentHP()
	{
		return default(int);
	}

	[Token(Token = "0x6000706")]
	[Address(RVA = "0x116F800", Offset = "0x116F800", VA = "0x116F800")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000707")]
	[Address(RVA = "0x116F80C", Offset = "0x116F80C", VA = "0x116F80C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0x116FEB4", Offset = "0x116FEB4", VA = "0x116FEB4")]
	public void OnDebugTouched()
	{
	}

	[Token(Token = "0x6000709")]
	[Address(RVA = "0x116F9A0", Offset = "0x116F9A0", VA = "0x116F9A0")]
	public void DealDamage(int damage, bool crit)
	{
	}

	[Token(Token = "0x600070A")]
	[Address(RVA = "0x116FEC4", Offset = "0x116FEC4", VA = "0x116FEC4")]
	public void Ressurect()
	{
	}

	[Token(Token = "0x600070B")]
	[Address(RVA = "0x116FED4", Offset = "0x116FED4", VA = "0x116FED4")]
	public DestroyObjectOnTriggerEnter()
	{
	}
}
[Token(Token = "0x2000195")]
public class DestroyObjectsOnTriggerEnter : CacheBehaviour
{
	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<GameObject> m_objectsToDestroyOnContact;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_colliderSize;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnDestroy;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private readonly string _ammoTag;

	[Token(Token = "0x600070C")]
	[Address(RVA = "0x116FF3C", Offset = "0x116FF3C", VA = "0x116FF3C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600070D")]
	[Address(RVA = "0x116FFC0", Offset = "0x116FFC0", VA = "0x116FFC0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600070E")]
	[Address(RVA = "0x1170190", Offset = "0x1170190", VA = "0x1170190")]
	public DestroyObjectsOnTriggerEnter()
	{
	}
}
[Token(Token = "0x2000196")]
public class OnMagnetTriggerEnter : MonoBehaviour
{
	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_ammoTag;

	[Token(Token = "0x600070F")]
	[Address(RVA = "0x11CFC44", Offset = "0x11CFC44", VA = "0x11CFC44")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000710")]
	[Address(RVA = "0x11CFE4C", Offset = "0x11CFE4C", VA = "0x11CFE4C")]
	public OnMagnetTriggerEnter()
	{
	}
}
[Token(Token = "0x2000197")]
public class RotationFollower : CacheBehaviour
{
	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_rotationTarget;

	[Token(Token = "0x6000711")]
	[Address(RVA = "0xFFADC8", Offset = "0xFFADC8", VA = "0xFFADC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000712")]
	[Address(RVA = "0xFFAE14", Offset = "0xFFAE14", VA = "0xFFAE14")]
	public RotationFollower()
	{
	}
}
[Token(Token = "0x2000198")]
public class SnakeAI : CacheBehaviour
{
	[Token(Token = "0x6000713")]
	[Address(RVA = "0x106D3B0", Offset = "0x106D3B0", VA = "0x106D3B0")]
	public SnakeAI()
	{
	}
}
[Token(Token = "0x2000199")]
public class DOTSManager : CacheBehaviour
{
	[Token(Token = "0x20005B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF2A0", Offset = "0xCBF2A0")]
	private sealed class <DisablePathFollow>d__3 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DOTSManager <>4__this;

		[Token(Token = "0x4001C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int <i>5__2;

		[Token(Token = "0x17000361")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600216A")]
			[Address(RVA = "0xF73038", Offset = "0xF73038", VA = "0xF73038", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000362")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600216C")]
			[Address(RVA = "0xF730A0", Offset = "0xF730A0", VA = "0xF730A0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002167")]
		[Address(RVA = "0xF72F60", Offset = "0xF72F60", VA = "0xF72F60")]
		[DebuggerHidden]
		public <DisablePathFollow>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6002168")]
		[Address(RVA = "0xF72FB4", Offset = "0xF72FB4", VA = "0xF72FB4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002169")]
		[Address(RVA = "0xF72FB8", Offset = "0xF72FB8", VA = "0xF72FB8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600216B")]
		[Address(RVA = "0xF73040", Offset = "0xF73040", VA = "0xF73040", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IntGameEvent m_boidPathFollow_OnEndPath;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[Expandable]
	public SimulationsData m_simulationConfig;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private World _world;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private JobMagnetSystem _jobMagnetSystem;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private JobPathFollowerSystem _boidPathFollow;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private BoidBankSystem _boidBankSystem;

	[Token(Token = "0x6000714")]
	[Address(RVA = "0xF72CD0", Offset = "0xF72CD0", VA = "0xF72CD0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000715")]
	[Address(RVA = "0xF72EE4", Offset = "0xF72EE4", VA = "0xF72EE4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0F88", Offset = "0xCD0F88")]
	private IEnumerator<float> DisablePathFollow()
	{
		return null;
	}

	[Token(Token = "0x6000716")]
	[Address(RVA = "0xF72F8C", Offset = "0xF72F8C", VA = "0xF72F8C")]
	public void OnGameStarted()
	{
	}

	[Token(Token = "0x6000717")]
	[Address(RVA = "0xF72FAC", Offset = "0xF72FAC", VA = "0xF72FAC")]
	public DOTSManager()
	{
	}
}
[Token(Token = "0x200019A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB835C", Offset = "0xCB835C")]
public class BoidData : ScriptableObject
{
	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Mesh m_mesh;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material m_material;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC40C4", Offset = "0xCC40C4")]
	public int m_cellRadius;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_separationWeight;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_alignmentWeight;

	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int m_targetWeight;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_obstacleAversionDistance;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_moveSpeed;

	[Token(Token = "0x6000718")]
	[Address(RVA = "0xF67D0C", Offset = "0xF67D0C", VA = "0xF67D0C")]
	public BoidData()
	{
	}
}
[Token(Token = "0x200019B")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB83BC", Offset = "0xCB83BC")]
public class MagnetData : ScriptableObject
{
	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_speed;

	[Token(Token = "0x6000719")]
	[Address(RVA = "0x10C2404", Offset = "0x10C2404", VA = "0x10C2404")]
	public MagnetData()
	{
	}
}
[Token(Token = "0x200019C")]
public class PathFollowerData : ScriptableObject
{
	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC40D8", Offset = "0xCC40D8")]
	public GameObject m_curve;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_prefabOfBoid;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4110", Offset = "0xCC4110")]
	public int m_numberOfBoid;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float2 m_rangeOfRadius;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int m_granularityAlongCurve;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float2 m_rangeSpeed;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_followCurveSpeed;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool m_isLooping;

	[Token(Token = "0x600071A")]
	[Address(RVA = "0x14EEF58", Offset = "0x14EEF58", VA = "0x14EEF58")]
	public PathFollowerData()
	{
	}
}
[Token(Token = "0x200019D")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB841C", Offset = "0xCB841C")]
public class SimulationsData : ScriptableObject
{
	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Expandable]
	public BoidData m_boidData;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4158", Offset = "0xCC4158")]
	[Expandable]
	public MagnetData m_magnetData;

	[Token(Token = "0x600071B")]
	[Address(RVA = "0x106B418", Offset = "0x106B418", VA = "0x106B418")]
	public SimulationsData()
	{
	}
}
[Token(Token = "0x200019E")]
public class ActorManager : CacheBehaviour
{
	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4194", Offset = "0xCC4194")]
	public IntUnityEvent OnActorSpawned;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntUnityEvent OnRequestSnapPosition;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IntUnityEvent OnStopSnapPosition;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public IntIntUnityEvent OnChangePattern;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public IntIntUnityEvent OnBypassPattern;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntUnityEvent OnChangePatternInstanceID;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC41CC", Offset = "0xCC41CC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC41CC", Offset = "0xCC41CC")]
	public Vector3IntGameEventListener m_snapGridListener;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_speed;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC421C", Offset = "0xCC421C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC421C", Offset = "0xCC421C")]
	public DestroyObjectOnTriggerEnter m_hpManager;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC426C", Offset = "0xCC426C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC426C", Offset = "0xCC426C")]
	[HideInInspector]
	public float m_timeBeforeStart;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	[HideInInspector]
	public bool m_isDisabled;

	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public CustomActionData m_customActionCurrent;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public bool m_isInGrid;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC42FC", Offset = "0xCC42FC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC42FC", Offset = "0xCC42FC")]
	[HideInInspector]
	public IntUnityEvent OnBecameInvisibleEvent;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[HideInInspector]
	public IntUnityEvent OnBecameVisibleEvent;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public IntUnityEvent OnDestroyEvent;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[HideInInspector]
	public bool m_isDead;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
	[HideInInspector]
	public bool m_fromSpawner;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
	public bool m_fakeFromSpawner;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC439C", Offset = "0xCC439C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC439C", Offset = "0xCC439C")]
	public bool m_SnapGridSound;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	protected int _instanceId;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	protected bool _started;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
	protected bool _lerping;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	protected Vector3 _lerpPosition;

	[Token(Token = "0x600071C")]
	[Address(RVA = "0x16A7E2C", Offset = "0x16A7E2C", VA = "0x16A7E2C")]
	private void Start()
	{
	}

	[Token(Token = "0x600071D")]
	[Address(RVA = "0x16A7E64", Offset = "0x16A7E64", VA = "0x16A7E64")]
	private void Update()
	{
	}

	[Token(Token = "0x600071E")]
	[Address(RVA = "0x16A8110", Offset = "0x16A8110", VA = "0x16A8110")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600071F")]
	[Address(RVA = "0x16A81B4", Offset = "0x16A81B4", VA = "0x16A81B4")]
	public void OnStun()
	{
	}

	[Token(Token = "0x6000720")]
	[Address(RVA = "0x16A81BC", Offset = "0x16A81BC", VA = "0x16A81BC")]
	public void ChangePattern(int pattern)
	{
	}

	[Token(Token = "0x6000721")]
	[Address(RVA = "0x16A8244", Offset = "0x16A8244", VA = "0x16A8244")]
	public void BypassPattern(int pattern)
	{
	}

	[Token(Token = "0x6000722")]
	[Address(RVA = "0x16A82B0", Offset = "0x16A82B0", VA = "0x16A82B0")]
	public void OnSnap()
	{
	}

	[Token(Token = "0x6000723")]
	[Address(RVA = "0x16A82B8", Offset = "0x16A82B8", VA = "0x16A82B8")]
	public void OnSnap(int instanceId)
	{
	}

	[Token(Token = "0x6000724")]
	[Address(RVA = "0x16A8398", Offset = "0x16A8398", VA = "0x16A8398")]
	public void ExitSnap(int instanceId)
	{
	}

	[Token(Token = "0x6000725")]
	[Address(RVA = "0x16A83C8", Offset = "0x16A83C8", VA = "0x16A83C8")]
	public void OnBecameVisible()
	{
	}

	[Token(Token = "0x6000726")]
	[Address(RVA = "0x16A8424", Offset = "0x16A8424", VA = "0x16A8424")]
	public void OnBecameInvisible()
	{
	}

	[Token(Token = "0x6000727")]
	[Address(RVA = "0x16A8480", Offset = "0x16A8480", VA = "0x16A8480")]
	public void SetInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000728")]
	[Address(RVA = "0x16A8488", Offset = "0x16A8488", VA = "0x16A8488", Slot = "4")]
	public virtual void OnReceivedSnapPosition(Vector3IntGameEventStruct str)
	{
	}

	[Token(Token = "0x6000729")]
	[Address(RVA = "0x16A8574", Offset = "0x16A8574", VA = "0x16A8574")]
	public ActorManager()
	{
	}
}
[Serializable]
[Token(Token = "0x200019F")]
public struct IntIntGameEventStruct
{
	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_instanceId;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int m_parts;
}
[Serializable]
[Token(Token = "0x20001A0")]
public struct LabelVector3GameEventStruct
{
	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Label m_label;

	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Vector3 m_scale;
}
[Token(Token = "0x20001A1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB847C", Offset = "0xCB847C")]
public class ActorData : ScriptableObject
{
	[Token(Token = "0x20005B9")]
	private enum ActorType
	{
		[Token(Token = "0x4001C33")]
		ACTOR,
		[Token(Token = "0x4001C34")]
		SHIELD
	}

	[Serializable]
	[Token(Token = "0x20005BA")]
	public struct Pattern
	{
		[Token(Token = "0x4001C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Expandable]
		public PatternData m_patternData;
	}

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC43EC", Offset = "0xCC43EC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC43EC", Offset = "0xCC43EC")]
	public GameObject m_actorPrefab;

	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_ratioScale;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC443C", Offset = "0xCC443C")]
	public bool m_eventWait;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4474", Offset = "0xCC4474")]
	public IntGameEvent m_startAction;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC44AC", Offset = "0xCC44AC")]
	public bool m_timeWait;

	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC44E4", Offset = "0xCC44E4")]
	public float m_timeToWaitBeforeStart;

	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC451C", Offset = "0xCC451C")]
	public bool m_fromSpawner;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4554", Offset = "0xCC4554")]
	public bool m_useActorSpawnPoint;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC458C", Offset = "0xCC458C")]
	public Label m_actorSpawnPoint;

	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC45C4", Offset = "0xCC45C4")]
	public Pattern[] m_patterns;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC45FC", Offset = "0xCC45FC")]
	public int m_numberOfSectionRemainingToKillActor;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4634", Offset = "0xCC4634")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4634", Offset = "0xCC4634")]
	public bool m_useHp;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_hpCount;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public PatternData m_currentPattern;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public int m_currentPatternIndex;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[HideInInspector]
	public int m_instanceId;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public string m_type;

	[Token(Token = "0x600072A")]
	[Address(RVA = "0x16A7584", Offset = "0x16A7584", VA = "0x16A7584")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072B")]
	[Address(RVA = "0x16A75D8", Offset = "0x16A75D8", VA = "0x16A75D8")]
	public ActorData()
	{
	}
}
[Token(Token = "0x20001A2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB84DC", Offset = "0xCB84DC")]
public class ActorSpawnedData : ScriptableObject
{
	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC46C4", Offset = "0xCC46C4")]
	public ActorData m_actorData;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC46FC", Offset = "0xCC46FC")]
	public int m_spawnRate;

	[Token(Token = "0x600072C")]
	[Address(RVA = "0x16A8584", Offset = "0x16A8584", VA = "0x16A8584")]
	public ActorSpawnedData()
	{
	}
}
[Token(Token = "0x20001A3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB853C", Offset = "0xCB853C")]
public class LevelSettingsCollection : Collection<LevelSettingsCollection.LevelSettingsWrapper>
{
	[Serializable]
	[Token(Token = "0x20005BB")]
	public struct LevelSettingsWrapper
	{
		[Token(Token = "0x4001C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_difficulty;

		[Token(Token = "0x4001C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public List<LevelSettingsData> m_levelSettings;
	}

	[Token(Token = "0x600072D")]
	[Address(RVA = "0xFC46FC", Offset = "0xFC46FC", VA = "0xFC46FC")]
	public LevelSettingsCollection()
	{
	}
}
[Token(Token = "0x20001A4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB85A8", Offset = "0xCB85A8")]
public class ShieldData : ActorData
{
	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public List<string> m_propertiesToHide;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4744", Offset = "0xCC4744")]
	public float m_orbitRadius;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC477C", Offset = "0xCC477C")]
	public float m_orbitRoationSpeed;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[HideInInspector]
	public float m_orbitAlignToDirectionSpeed;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public Vector3 m_orbitAxis;

	[Token(Token = "0x600072E")]
	[Address(RVA = "0x10208C4", Offset = "0x10208C4", VA = "0x10208C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600072F")]
	[Address(RVA = "0x1020934", Offset = "0x1020934", VA = "0x1020934")]
	public ShieldData()
	{
	}
}
[Token(Token = "0x20001A5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8608", Offset = "0xCB8608")]
public class SpawnListData : ScriptableObject
{
	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC47D4", Offset = "0xCC47D4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC47D4", Offset = "0xCC47D4")]
	public List<ActorListWrapper> m_spawnLines;

	[Token(Token = "0x6000730")]
	[Address(RVA = "0x1071758", Offset = "0x1071758", VA = "0x1071758")]
	public SpawnListData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001A6")]
public class SpawnListRate : ScriptableObject
{
	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_rate;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_spawnlistId;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SpreadSheetData m_spawnlistSpreadsheet;

	[Token(Token = "0x6000731")]
	[Address(RVA = "0x10717D4", Offset = "0x10717D4", VA = "0x10717D4")]
	public SpawnListRate()
	{
	}
}
[Token(Token = "0x20001A7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8668", Offset = "0xCB8668")]
public class SpawnerData : ActorData
{
	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public int spawnListIndex;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public int m_currentEnemyCount;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int m_maxEnemyLimit;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public SpawnActionData m_spawnAction;

	[Token(Token = "0x6000732")]
	[Address(RVA = "0x1072DE8", Offset = "0x1072DE8", VA = "0x1072DE8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000733")]
	[Address(RVA = "0x1072E3C", Offset = "0x1072E3C", VA = "0x1072E3C")]
	public SpawnerData()
	{
	}
}
[Token(Token = "0x20001A8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB86C8", Offset = "0xCB86C8")]
public class SpawnerGroupCollection : Collection<SpawnerGroupData>
{
	[Token(Token = "0x6000734")]
	[Address(RVA = "0x1072E44", Offset = "0x1072E44", VA = "0x1072E44")]
	public SpawnerGroupCollection()
	{
	}
}
[Token(Token = "0x20001A9")]
public class SpawnerGroupData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20005BC")]
	public struct SpawnlistRate
	{
		[Token(Token = "0x4001C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int m_rate;

		[Token(Token = "0x4001C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_spawnlistId;

		[Token(Token = "0x4001C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SpreadSheetData m_spawnlistSpreadsheet;
	}

	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_name;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SpawnlistRate> m_spawnlists;

	[Token(Token = "0x6000735")]
	[Address(RVA = "0x1072E94", Offset = "0x1072E94", VA = "0x1072E94")]
	public SpawnerGroupData()
	{
	}
}
[Token(Token = "0x20001AA")]
public class ShieldActorManager : CacheBehaviour
{
	[Token(Token = "0x400097A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DestroyObjectOnTriggerEnter m_destroyObjectOnTriggerEnter;

	[Token(Token = "0x400097B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[HideInInspector]
	public Transform m_targetToProtect;

	[Token(Token = "0x400097C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public int m_targetToProtectInstanceId;

	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	[HideInInspector]
	public float m_angleOffset;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _orbiting;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private Vector3 _orbitDesiredPosition;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 _previousPosition;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 _relativePos;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Quaternion _rotation;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ShieldData _data;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private float _orbitRadius;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private float _orbitRoationSpeed;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 _orbitAxis;

	[Token(Token = "0x6000736")]
	[Address(RVA = "0x1020620", Offset = "0x1020620", VA = "0x1020620")]
	public void SetData(ShieldData value)
	{
	}

	[Token(Token = "0x6000737")]
	[Address(RVA = "0x1020750", Offset = "0x1020750", VA = "0x1020750")]
	private void Start()
	{
	}

	[Token(Token = "0x6000738")]
	[Address(RVA = "0x1020754", Offset = "0x1020754", VA = "0x1020754")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000739")]
	[Address(RVA = "0x1020824", Offset = "0x1020824", VA = "0x1020824")]
	public void OnActorSpawnedInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x600073A")]
	[Address(RVA = "0x102083C", Offset = "0x102083C", VA = "0x102083C")]
	public ShieldActorManager()
	{
	}
}
[Token(Token = "0x20001AB")]
public class SpawnerManager : CacheBehaviour
{
	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public SpawnActionData m_spawnAction;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public CustomActionUnityEvent OnCustomActionEvent;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public int m_enemiesEachSpawn;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private CustomActionGameEventStruct _str;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private bool _ready;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private SpawnerData _spawnerData;

	[Token(Token = "0x1700004D")]
	public SpawnerData SpawnerData
	{
		[Token(Token = "0x600073C")]
		[Address(RVA = "0x1072F8C", Offset = "0x1072F8C", VA = "0x1072F8C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600073D")]
		[Address(RVA = "0x1072F94", Offset = "0x1072F94", VA = "0x1072F94")]
		set
		{
		}
	}

	[Token(Token = "0x600073B")]
	[Address(RVA = "0x1072E9C", Offset = "0x1072E9C", VA = "0x1072E9C")]
	public void OnAskForEnemies()
	{
	}

	[Token(Token = "0x600073E")]
	[Address(RVA = "0x1072FE4", Offset = "0x1072FE4", VA = "0x1072FE4")]
	public SpawnerManager()
	{
	}
}
[Token(Token = "0x20001AC")]
public class ActionManager : CacheBehaviour
{
	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IntUnityEvent m_OnActorFinishedAction;

	[Token(Token = "0x600073F")]
	[Address(RVA = "0x16A71D0", Offset = "0x16A71D0", VA = "0x16A71D0")]
	public ActionManager()
	{
	}
}
[Token(Token = "0x20001AD")]
public class AnimationManager : ActionManager
{
	[Token(Token = "0x20005BD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF2B0", Offset = "0xCBF2B0")]
	private sealed class <CheckAnimationEnd>d__4 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationManager <>4__this;

		[Token(Token = "0x4001C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x4001C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationActionData animationAction;

		[Token(Token = "0x4001C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WrapMode wrapMode;

		[Token(Token = "0x4001C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int instanceId;

		[Token(Token = "0x4001C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float <timer>5__2;

		[Token(Token = "0x17000363")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002170")]
			[Address(RVA = "0x1218820", Offset = "0x1218820", VA = "0x1218820", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000364")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002172")]
			[Address(RVA = "0x1218888", Offset = "0x1218888", VA = "0x1218888", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600216D")]
		[Address(RVA = "0x1217E28", Offset = "0x1217E28", VA = "0x1217E28")]
		[DebuggerHidden]
		public <CheckAnimationEnd>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x600216E")]
		[Address(RVA = "0x12182BC", Offset = "0x12182BC", VA = "0x12182BC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600216F")]
		[Address(RVA = "0x12182C0", Offset = "0x12182C0", VA = "0x12182C0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002171")]
		[Address(RVA = "0x1218828", Offset = "0x1218828", VA = "0x1218828", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Animator m_animatorTriacontt;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _paused;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool _pausedException;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private int _instanceIdException;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Dictionary<int, CoroutineHandle> animationRoutines;

	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<int, List<CoroutineHandle>> animationRoutinesList;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<Collider> _deactivatedCollider;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private List<Renderer> _deactivatedRenderer;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private List<GameObject> _deactivatedGameObjects;

	[Token(Token = "0x6000740")]
	[Address(RVA = "0x12170FC", Offset = "0x12170FC", VA = "0x12170FC")]
	public void OnAnimationAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000741")]
	[Address(RVA = "0x12174B8", Offset = "0x12174B8", VA = "0x12174B8")]
	public void OnSetEnabledComponentAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000742")]
	[Address(RVA = "0x1217C44", Offset = "0x1217C44", VA = "0x1217C44")]
	public void OnChangePattern(int instanceId)
	{
	}

	[Token(Token = "0x6000743")]
	[Address(RVA = "0x12173F8", Offset = "0x12173F8", VA = "0x12173F8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD0FEC", Offset = "0xCD0FEC")]
	private IEnumerator<float> CheckAnimationEnd(Animator animator, AnimationActionData animationAction, int instanceId, WrapMode wrapMode)
	{
		return null;
	}

	[Token(Token = "0x6000744")]
	[Address(RVA = "0x1217E54", Offset = "0x1217E54", VA = "0x1217E54")]
	public void Update()
	{
	}

	[Token(Token = "0x6000745")]
	[Address(RVA = "0x1217E58", Offset = "0x1217E58", VA = "0x1217E58")]
	public void OnLevelStarted()
	{
	}

	[Token(Token = "0x6000746")]
	[Address(RVA = "0x1217EE0", Offset = "0x1217EE0", VA = "0x1217EE0")]
	public void OnPauseRoutine()
	{
	}

	[Token(Token = "0x6000747")]
	[Address(RVA = "0x1217F4C", Offset = "0x1217F4C", VA = "0x1217F4C")]
	public void OnPauseRoutineException(int instanceId)
	{
	}

	[Token(Token = "0x6000748")]
	[Address(RVA = "0x1218084", Offset = "0x1218084", VA = "0x1218084")]
	public void OnResumeRoutineException(int instanceId)
	{
	}

	[Token(Token = "0x6000749")]
	[Address(RVA = "0x12180EC", Offset = "0x12180EC", VA = "0x12180EC")]
	public void OnResumeRoutine()
	{
	}

	[Token(Token = "0x600074A")]
	[Address(RVA = "0x1218170", Offset = "0x1218170", VA = "0x1218170")]
	public AnimationManager()
	{
	}
}
[Token(Token = "0x20001AE")]
public class AttackManager : ActionManager
{
	[Token(Token = "0x20005BE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF2C0", Offset = "0xCBF2C0")]
	private sealed class <WaitBeforeEnd>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeToWait;

		[Token(Token = "0x4001C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AttackManager <>4__this;

		[Token(Token = "0x4001C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int instanceId;

		[Token(Token = "0x17000365")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002176")]
			[Address(RVA = "0xF63DD8", Offset = "0xF63DD8", VA = "0xF63DD8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000366")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002178")]
			[Address(RVA = "0xF63E40", Offset = "0xF63E40", VA = "0xF63E40", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002173")]
		[Address(RVA = "0xF6397C", Offset = "0xF6397C", VA = "0xF6397C")]
		[DebuggerHidden]
		public <WaitBeforeEnd>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002174")]
		[Address(RVA = "0xF63D00", Offset = "0xF63D00", VA = "0xF63D00", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002175")]
		[Address(RVA = "0xF63D04", Offset = "0xF63D04", VA = "0xF63D04", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002177")]
		[Address(RVA = "0xF63DE0", Offset = "0xF63DE0", VA = "0xF63DE0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005BF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF2D0", Offset = "0xCBF2D0")]
	private sealed class <LaunchDotDamageAttack>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timeBeforeEnd;

		[Token(Token = "0x4001C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DotDamage target;

		[Token(Token = "0x4001C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AttackManager <>4__this;

		[Token(Token = "0x4001C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int instanceId;

		[Token(Token = "0x17000367")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600217C")]
			[Address(RVA = "0xF63C34", Offset = "0xF63C34", VA = "0xF63C34", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000368")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600217E")]
			[Address(RVA = "0xF63C9C", Offset = "0xF63C9C", VA = "0xF63C9C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002179")]
		[Address(RVA = "0xF639A8", Offset = "0xF639A8", VA = "0xF639A8")]
		[DebuggerHidden]
		public <LaunchDotDamageAttack>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600217A")]
		[Address(RVA = "0xF639E4", Offset = "0xF639E4", VA = "0xF639E4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600217B")]
		[Address(RVA = "0xF639E8", Offset = "0xF639E8", VA = "0xF639E8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600217D")]
		[Address(RVA = "0xF63C3C", Offset = "0xF63C3C", VA = "0xF63C3C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ObjectArrayGameEvent OnDotDamage;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4884", Offset = "0xCC4884")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4884", Offset = "0xCC4884")]
	public PlayerManager m_playerManager;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _isIKattacking;

	[Token(Token = "0x600074B")]
	[Address(RVA = "0xF62644", Offset = "0xF62644", VA = "0xF62644")]
	public void PlayAttackProjectile(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x600074C")]
	[Address(RVA = "0xF629CC", Offset = "0xF629CC", VA = "0xF629CC")]
	public void PlayAttackDotDamage(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x600074D")]
	[Address(RVA = "0xF62EA0", Offset = "0xF62EA0", VA = "0xF62EA0")]
	public void PlayAttackLaser(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x600074E")]
	[Address(RVA = "0xF6327C", Offset = "0xF6327C", VA = "0xF6327C")]
	public void PlayAttackDropPrefab(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x600074F")]
	[Address(RVA = "0xF62930", Offset = "0xF62930", VA = "0xF62930")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1050", Offset = "0xCD1050")]
	private IEnumerator<float> WaitBeforeEnd(int instanceId, float timeToWait)
	{
		return null;
	}

	[Token(Token = "0x6000750")]
	[Address(RVA = "0xF62DF0", Offset = "0xF62DF0", VA = "0xF62DF0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD10B4", Offset = "0xCD10B4")]
	private IEnumerator<float> LaunchDotDamageAttack(float timeBeforeEnd, int instanceId, [Optional] DotDamage target)
	{
		return null;
	}

	[Token(Token = "0x6000751")]
	[Address(RVA = "0xF639D4", Offset = "0xF639D4", VA = "0xF639D4")]
	public void PlayAttackIK(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x6000752")]
	[Address(RVA = "0xF639D8", Offset = "0xF639D8", VA = "0xF639D8")]
	public void PlayAttackRay(CustomActionGameEventStruct customActionParams)
	{
	}

	[Token(Token = "0x6000753")]
	[Address(RVA = "0xF639DC", Offset = "0xF639DC", VA = "0xF639DC")]
	public AttackManager()
	{
	}
}
[Token(Token = "0x20001AF")]
public class EnemyLaserBehaviour : CacheBehaviour
{
	[Token(Token = "0x20005C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF2E0", Offset = "0xCBF2E0")]
	private sealed class <MoveAndScaleRay>d__11 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyLaserBehaviour <>4__this;

		[Token(Token = "0x4001C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float finalZScale;

		[Token(Token = "0x4001C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector3 finalPosition;

		[Token(Token = "0x4001C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 startPosition;

		[Token(Token = "0x17000369")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002182")]
			[Address(RVA = "0xF38C54", Offset = "0xF38C54", VA = "0xF38C54", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700036A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002184")]
			[Address(RVA = "0xF38CBC", Offset = "0xF38CBC", VA = "0xF38CBC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600217F")]
		[Address(RVA = "0xF38A18", Offset = "0xF38A18", VA = "0xF38A18")]
		[DebuggerHidden]
		public <MoveAndScaleRay>d__11(int <>1__state)
		{
		}

		[Token(Token = "0x6002180")]
		[Address(RVA = "0xF38A84", Offset = "0xF38A84", VA = "0xF38A84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002181")]
		[Address(RVA = "0xF38A88", Offset = "0xF38A88", VA = "0xF38A88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002183")]
		[Address(RVA = "0xF38C5C", Offset = "0xF38C5C", VA = "0xF38C5C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF2F0", Offset = "0xCBF2F0")]
	private sealed class <ScaleRay>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EnemyLaserBehaviour <>4__this;

		[Token(Token = "0x4001C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float finalZScale;

		[Token(Token = "0x1700036B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002188")]
			[Address(RVA = "0xF38E48", Offset = "0xF38E48", VA = "0xF38E48", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700036C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600218A")]
			[Address(RVA = "0xF38EB0", Offset = "0xF38EB0", VA = "0xF38EB0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002185")]
		[Address(RVA = "0xF38A44", Offset = "0xF38A44", VA = "0xF38A44")]
		[DebuggerHidden]
		public <ScaleRay>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x6002186")]
		[Address(RVA = "0xF38D20", Offset = "0xF38D20", VA = "0xF38D20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002187")]
		[Address(RVA = "0xF38D24", Offset = "0xF38D24", VA = "0xF38D24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002189")]
		[Address(RVA = "0xF38E50", Offset = "0xF38E50", VA = "0xF38E50", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC48D4", Offset = "0xCC48D4")]
	public HoldBehaviourEnemy m_holdBehaviourEnemy;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Collider m_boxCollider;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_warningBox;

	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Transform m_target;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool m_middlePivot;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float m_scaleOffset;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC490C", Offset = "0xCC490C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC490C", Offset = "0xCC490C")]
	public float m_rayTime;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC495C", Offset = "0xCC495C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC495C", Offset = "0xCC495C")]
	public UnityEvent OnEndRayScale;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private float _scaleTimer;

	[Token(Token = "0x6000754")]
	[Address(RVA = "0xF38578", Offset = "0xF38578", VA = "0xF38578")]
	private void Start()
	{
	}

	[Token(Token = "0x6000755")]
	[Address(RVA = "0xF3857C", Offset = "0xF3857C", VA = "0xF3857C")]
	public void StartScalingLaserRay()
	{
	}

	[Token(Token = "0x6000756")]
	[Address(RVA = "0xF38920", Offset = "0xF38920", VA = "0xF38920")]
	private void StartBoxDamage()
	{
	}

	[Token(Token = "0x6000757")]
	[Address(RVA = "0xF387CC", Offset = "0xF387CC", VA = "0xF387CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1118", Offset = "0xCD1118")]
	private IEnumerator<float> MoveAndScaleRay(Vector3 startPosition, Vector3 finalPosition, float finalZScale)
	{
		return null;
	}

	[Token(Token = "0x6000758")]
	[Address(RVA = "0xF38894", Offset = "0xF38894", VA = "0xF38894")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD117C", Offset = "0xCD117C")]
	private IEnumerator<float> ScaleRay(float finalZScale)
	{
		return null;
	}

	[Token(Token = "0x6000759")]
	[Address(RVA = "0xF38A70", Offset = "0xF38A70", VA = "0xF38A70")]
	public EnemyLaserBehaviour()
	{
	}
}
[Token(Token = "0x20001B0")]
public class MoveManager : ActionManager
{
	[Token(Token = "0x20005C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF300", Offset = "0xCBF300")]
	private sealed class <WaitForTimer>d__12 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float timer;

		[Token(Token = "0x4001C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoveManager <>4__this;

		[Token(Token = "0x4001C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sequenceId;

		[Token(Token = "0x1700036D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600218E")]
			[Address(RVA = "0x10CB31C", Offset = "0x10CB31C", VA = "0x10CB31C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700036E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002190")]
			[Address(RVA = "0x10CB384", Offset = "0x10CB384", VA = "0x10CB384", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600218B")]
		[Address(RVA = "0x10CB210", Offset = "0x10CB210", VA = "0x10CB210")]
		[DebuggerHidden]
		public <WaitForTimer>d__12(int <>1__state)
		{
		}

		[Token(Token = "0x600218C")]
		[Address(RVA = "0x10CB244", Offset = "0x10CB244", VA = "0x10CB244", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600218D")]
		[Address(RVA = "0x10CB248", Offset = "0x10CB248", VA = "0x10CB248", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600218F")]
		[Address(RVA = "0x10CB324", Offset = "0x10CB324", VA = "0x10CB324", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SpawnGrid m_gridManager;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[Expandable]
	public MagnetData m_magnetData;

	[Token(Token = "0x600075A")]
	[Address(RVA = "0x10CA130", Offset = "0x10CA130", VA = "0x10CA130")]
	public void Awake()
	{
	}

	[Token(Token = "0x600075B")]
	[Address(RVA = "0x10CA134", Offset = "0x10CA134", VA = "0x10CA134")]
	public void OnLerpBackToSpawner(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x600075C")]
	[Address(RVA = "0x10CA4B8", Offset = "0x10CA4B8", VA = "0x10CA4B8")]
	public void OnChangeSnapPositionAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x600075D")]
	[Address(RVA = "0x10CA668", Offset = "0x10CA668", VA = "0x10CA668")]
	public void OnChangePositionAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x600075E")]
	[Address(RVA = "0x10CAE20", Offset = "0x10CAE20", VA = "0x10CAE20")]
	private void OnChangePositionCompleteWithMovePositionActionData(object param)
	{
	}

	[Token(Token = "0x600075F")]
	[Address(RVA = "0x10CA298", Offset = "0x10CA298", VA = "0x10CA298")]
	private void TweenToPosition(Vector3 position, GameObject actor, float lerpTime, int instanceId)
	{
	}

	[Token(Token = "0x6000760")]
	[Address(RVA = "0x10CB030", Offset = "0x10CB030", VA = "0x10CB030")]
	public void OnChangePositionComplete(object param)
	{
	}

	[Token(Token = "0x6000761")]
	[Address(RVA = "0x10CB0B8", Offset = "0x10CB0B8", VA = "0x10CB0B8")]
	public void OnMoveCurveAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000762")]
	[Address(RVA = "0x10CB154", Offset = "0x10CB154", VA = "0x10CB154")]
	public void OnMoveCurveActionFinished(int sequenceId)
	{
	}

	[Token(Token = "0x6000763")]
	[Address(RVA = "0x10CB158", Offset = "0x10CB158", VA = "0x10CB158")]
	public void MagnetSpeedTween(float value)
	{
	}

	[Token(Token = "0x6000764")]
	[Address(RVA = "0x10CB174", Offset = "0x10CB174", VA = "0x10CB174")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD11E0", Offset = "0xCD11E0")]
	private IEnumerator<float> WaitForTimer(float timer, int sequenceId)
	{
		return null;
	}

	[Token(Token = "0x6000765")]
	[Address(RVA = "0x10CB23C", Offset = "0x10CB23C", VA = "0x10CB23C")]
	public MoveManager()
	{
	}
}
[Token(Token = "0x20001B1")]
public struct OrbitalMoveDollyData
{
	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_instanceId;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public CinemachineDollyCart m_dolly;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_loopCountToDo;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public int m_loopCountDone;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_previousPosition;
}
[Token(Token = "0x20001B2")]
public class OrbitalMoveManager : ActionManager
{
	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Dictionary<int, OrbitalMoveDollyData> _dollies;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject _actor;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private OrbitalMoveActionData _actiondata;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private CinemachineDollyCart _dolly;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private OrbitalMoveDollyData _dollyData;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private float _newPos;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int _instanceId;

	[Token(Token = "0x6000766")]
	[Address(RVA = "0x11D0794", Offset = "0x11D0794", VA = "0x11D0794")]
	public void OnOrbitalMoveAction(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x6000767")]
	[Address(RVA = "0x11D0CEC", Offset = "0x11D0CEC", VA = "0x11D0CEC")]
	public void OnStopOrbitalMove(int instanceId)
	{
	}

	[Token(Token = "0x6000768")]
	[Address(RVA = "0x11D0F4C", Offset = "0x11D0F4C", VA = "0x11D0F4C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000769")]
	[Address(RVA = "0x11D10C8", Offset = "0x11D10C8", VA = "0x11D10C8")]
	public OrbitalMoveManager()
	{
	}
}
[Token(Token = "0x20001B3")]
public class PatternManager : ActionManager
{
	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntIntUnityEvent OnChangePattern;

	[Token(Token = "0x600076A")]
	[Address(RVA = "0xFE8480", Offset = "0xFE8480", VA = "0xFE8480")]
	public void ChangePattern(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x600076B")]
	[Address(RVA = "0xFE852C", Offset = "0xFE852C", VA = "0xFE852C")]
	public PatternManager()
	{
	}
}
[Token(Token = "0x20001B4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8734", Offset = "0xCB8734")]
public class AnimationActionData : CustomActionData
{
	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC49BC", Offset = "0xCC49BC")]
	public string m_animationStateName;

	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_animationSpeed;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC49F4", Offset = "0xCC49F4")]
	public WrapMode m_wrapMode;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4A2C", Offset = "0xCC4A2C")]
	public float m_timer;

	[Token(Token = "0x600076C")]
	[Address(RVA = "0x1217098", Offset = "0x1217098", VA = "0x1217098")]
	private void Awake()
	{
	}

	[Token(Token = "0x600076D")]
	[Address(RVA = "0x12170EC", Offset = "0x12170EC", VA = "0x12170EC")]
	public AnimationActionData()
	{
	}
}
[Token(Token = "0x20001B5")]
public abstract class AttackActionData : CustomActionData
{
	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4A64", Offset = "0xCC4A64")]
	public Label m_memberLabel;

	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4A9C", Offset = "0xCC4A9C")]
	public Label m_labelTarget;

	[Token(Token = "0x600076E")]
	[Address(RVA = "0xF624E8", Offset = "0xF624E8", VA = "0xF624E8")]
	protected AttackActionData()
	{
	}
}
[Token(Token = "0x20001B6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8794", Offset = "0xCB8794")]
public class AttackDropPrefabActionData : CustomActionData
{
	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4AD4", Offset = "0xCC4AD4")]
	public GameObject m_prefabToInstantiate;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4B0C", Offset = "0xCC4B0C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4B0C", Offset = "0xCC4B0C")]
	public bool m_useRadius;

	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float m_radius;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float m_yPosition;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float m_angleRange;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4B5C", Offset = "0xCC4B5C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4B5C", Offset = "0xCC4B5C")]
	public List<Label> m_locationsForSpawn;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4BAC", Offset = "0xCC4BAC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4BAC", Offset = "0xCC4BAC")]
	public int m_numberToSpawn;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4BFC", Offset = "0xCC4BFC")]
	public bool m_lerpToPosition;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public float m_timeToLerp;

	[Token(Token = "0x600076F")]
	[Address(RVA = "0xF62564", Offset = "0xF62564", VA = "0xF62564")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000770")]
	[Address(RVA = "0xF625B8", Offset = "0xF625B8", VA = "0xF625B8")]
	public AttackDropPrefabActionData()
	{
	}
}
[Token(Token = "0x20001B7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB87F4", Offset = "0xCB87F4")]
public class AttackIKActionData : AttackActionData
{
	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4C34", Offset = "0xCC4C34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4C34", Offset = "0xCC4C34")]
	public float m_speed;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4C84", Offset = "0xCC4C84")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4C84", Offset = "0xCC4C84")]
	public float m_ikWeight;

	[Token(Token = "0x6000771")]
	[Address(RVA = "0xF625D0", Offset = "0xF625D0", VA = "0xF625D0")]
	public AttackIKActionData()
	{
	}
}
[Token(Token = "0x20001B8")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8854", Offset = "0xCB8854")]
public class AttackLaserActionData : CustomActionData
{
	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4CD4", Offset = "0xCC4CD4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4CD4", Offset = "0xCC4CD4")]
	public float m_intervalBetweenDots;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4D24", Offset = "0xCC4D24")]
	public int m_dotDamages;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4D5C", Offset = "0xCC4D5C")]
	public float m_laserRayTime;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4D94", Offset = "0xCC4D94")]
	public float m_totalTime;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4DCC", Offset = "0xCC4DCC")]
	public Label m_memberLabel;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4E04", Offset = "0xCC4E04")]
	public Label m_targetOfLaser;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4E3C", Offset = "0xCC4E3C")]
	public float m_waitTime;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4E74", Offset = "0xCC4E74")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4E74", Offset = "0xCC4E74")]
	public GameObject m_prefabLaserAttack;

	[Token(Token = "0x6000772")]
	[Address(RVA = "0xF625D4", Offset = "0xF625D4", VA = "0xF625D4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000773")]
	[Address(RVA = "0xF62628", Offset = "0xF62628", VA = "0xF62628")]
	public AttackLaserActionData()
	{
	}
}
[Token(Token = "0x20001B9")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB88B4", Offset = "0xCB88B4")]
public class AttackProjectileActionData : AttackActionData
{
	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4EC4", Offset = "0xCC4EC4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4EC4", Offset = "0xCC4EC4")]
	public Ammo m_projectile;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4F14", Offset = "0xCC4F14")]
	public float m_timer;

	[Token(Token = "0x6000774")]
	[Address(RVA = "0xF63EA4", Offset = "0xF63EA4", VA = "0xF63EA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000775")]
	[Address(RVA = "0xF63EF8", Offset = "0xF63EF8", VA = "0xF63EF8")]
	public AttackProjectileActionData()
	{
	}
}
[Token(Token = "0x20001BA")]
public abstract class CustomActionData : ScriptableObject
{
	[Token(Token = "0x20005C3")]
	public enum ShowAttackHUD
	{
		[Token(Token = "0x4001C5F")]
		NOCHANGE,
		[Token(Token = "0x4001C60")]
		SHOW,
		[Token(Token = "0x4001C61")]
		HIDE
	}

	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4F4C", Offset = "0xCC4F4C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4F4C", Offset = "0xCC4F4C")]
	public bool m_dontWaitForNextAction;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4F9C", Offset = "0xCC4F9C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4F9C", Offset = "0xCC4F9C")]
	public float m_actionDelay;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC4FEC", Offset = "0xCC4FEC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC4FEC", Offset = "0xCC4FEC")]
	public string m_eventName;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC503C", Offset = "0xCC503C")]
	public bool m_playOnce;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5074", Offset = "0xCC5074")]
	public float m_delayCustomActionEvent;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC50AC", Offset = "0xCC50AC")]
	public IntUnityEvent OnCustomActionPlayed;

	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC50E4", Offset = "0xCC50E4")]
	public ShowAttackHUD m_showAttackHUD;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC511C", Offset = "0xCC511C")]
	public ShowAttackHUD m_showWarningZone;

	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Label m_locationWhereToShow;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 m_scaleOfWarningZone;

	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public bool m_alreadyPlayed;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool m_finished;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5164", Offset = "0xCC5164")]
	public Event m_actionWwiseEvent;

	[Token(Token = "0x6000776")]
	[Address(RVA = "0xF624EC", Offset = "0xF624EC", VA = "0xF624EC")]
	protected CustomActionData()
	{
	}
}
[Token(Token = "0x20001BB")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8914", Offset = "0xCB8914")]
public class DotDamageAttackActionData : CustomActionData
{
	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC519C", Offset = "0xCC519C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC519C", Offset = "0xCC519C")]
	public float m_intervalBetweenDots;

	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC51EC", Offset = "0xCC51EC")]
	public int m_dotDamages;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5224", Offset = "0xCC5224")]
	public float m_totalTime;

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC525C", Offset = "0xCC525C")]
	public GameObject m_fxOnDot;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5294", Offset = "0xCC5294")]
	public Label m_targetOfDotDamage;

	[Token(Token = "0x6000777")]
	[Address(RVA = "0xF331B8", Offset = "0xF331B8", VA = "0xF331B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000778")]
	[Address(RVA = "0xF3320C", Offset = "0xF3320C", VA = "0xF3320C")]
	public DotDamageAttackActionData()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BC")]
public struct CustomActionGameEventStruct
{
	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public CustomActionData m_customAction;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int m_instanceId;
}
[Token(Token = "0x20001BD")]
public class FeedbackActionData : CustomActionData
{
	[Token(Token = "0x40009E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC52CC", Offset = "0xCC52CC")]
	[Expandable]
	public FeedbackData m_feedback;

	[Token(Token = "0x6000779")]
	[Address(RVA = "0xF39F74", Offset = "0xF39F74", VA = "0xF39F74")]
	public FeedbackActionData()
	{
	}
}
[Token(Token = "0x20001BE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8974", Offset = "0xCB8974")]
public class FeedbackRayActionData : FeedbackActionData
{
	[Token(Token = "0x600077A")]
	[Address(RVA = "0xF3A17C", Offset = "0xF3A17C", VA = "0xF3A17C")]
	public FeedbackRayActionData()
	{
	}
}
[Token(Token = "0x20001BF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB89D4", Offset = "0xCB89D4")]
public class LerpBackToSpawnerActionData : CustomActionData
{
	[Token(Token = "0x40009E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5318", Offset = "0xCC5318")]
	public float m_timeToLerpBack;

	[Token(Token = "0x600077B")]
	[Address(RVA = "0xFC1F84", Offset = "0xFC1F84", VA = "0xFC1F84")]
	private void Awake()
	{
	}

	[Token(Token = "0x600077C")]
	[Address(RVA = "0xFC1FD8", Offset = "0xFC1FD8", VA = "0xFC1FD8")]
	public LerpBackToSpawnerActionData()
	{
	}
}
[Token(Token = "0x20001C0")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8A34", Offset = "0xCB8A34")]
public class MoveChangeSnapPositionActionData : CustomActionData
{
	[Token(Token = "0x40009E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5350", Offset = "0xCC5350")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5350", Offset = "0xCC5350")]
	public float m_lerpTime;

	[Token(Token = "0x40009E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public bool m_assignPosition;

	[Token(Token = "0x40009E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int x;

	[Token(Token = "0x40009E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int y;

	[Token(Token = "0x600077D")]
	[Address(RVA = "0x10CA068", Offset = "0x10CA068", VA = "0x10CA068")]
	public MoveChangeSnapPositionActionData()
	{
	}
}
[Token(Token = "0x20001C1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8A94", Offset = "0xCB8A94")]
public class MoveCurveActionData : CustomActionData
{
	[Token(Token = "0x40009E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC53A0", Offset = "0xCC53A0")]
	public Label m_curve;

	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC53D8", Offset = "0xCC53D8")]
	public Label m_arrivalPoint;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5410", Offset = "0xCC5410")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5410", Offset = "0xCC5410")]
	public float m_actionWaitEnd;

	[Token(Token = "0x600077E")]
	[Address(RVA = "0x10CA078", Offset = "0x10CA078", VA = "0x10CA078")]
	public MoveCurveActionData()
	{
	}
}
[Token(Token = "0x20001C2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8AF4", Offset = "0xCB8AF4")]
public class MovePositionActionData : CustomActionData
{
	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5460", Offset = "0xCC5460")]
	public bool m_lerp;

	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5498", Offset = "0xCC5498")]
	public float m_lerpTime;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC54D0", Offset = "0xCC54D0")]
	public Label m_positionLabel;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5508", Offset = "0xCC5508")]
	public Label m_targetLabel;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5540", Offset = "0xCC5540")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5540", Offset = "0xCC5540")]
	public bool m_lerpBack;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5590", Offset = "0xCC5590")]
	public Label m_lerpBackLabel;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC55C8", Offset = "0xCC55C8")]
	public bool m_lerpBackTimeDifferent;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5600", Offset = "0xCC5600")]
	public float m_lerpTimeBack;

	[Token(Token = "0x600077F")]
	[Address(RVA = "0x10CB3E8", Offset = "0x10CB3E8", VA = "0x10CB3E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000780")]
	[Address(RVA = "0x10CB43C", Offset = "0x10CB43C", VA = "0x10CB43C")]
	public MovePositionActionData()
	{
	}
}
[Token(Token = "0x20001C3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8B54", Offset = "0xCB8B54")]
public class OrbitalMoveActionData : CustomActionData
{
	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5638", Offset = "0xCC5638")]
	public bool m_useSpawnerCurve;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5670", Offset = "0xCC5670")]
	public Label m_path;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC56A8", Offset = "0xCC56A8")]
	public float m_speed;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC56E0", Offset = "0xCC56E0")]
	public int m_loopCount;

	[Token(Token = "0x6000781")]
	[Address(RVA = "0x11D0738", Offset = "0x11D0738", VA = "0x11D0738")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000782")]
	[Address(RVA = "0x11D078C", Offset = "0x11D078C", VA = "0x11D078C")]
	public OrbitalMoveActionData()
	{
	}
}
[Token(Token = "0x20001C4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8BB4", Offset = "0xCB8BB4")]
public class PatternChangeActionData : CustomActionData
{
	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int m_patternIndex;

	[Token(Token = "0x6000783")]
	[Address(RVA = "0x14EEF78", Offset = "0x14EEF78", VA = "0x14EEF78")]
	public PatternChangeActionData()
	{
	}
}
[Token(Token = "0x20001C5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8C14", Offset = "0xCB8C14")]
public class SetEnabledComponentActionData : CustomActionData
{
	[Token(Token = "0x20005C4")]
	public enum ComponentType
	{
		[Token(Token = "0x4001C63")]
		GAMEOBJECT,
		[Token(Token = "0x4001C64")]
		COLLIDER,
		[Token(Token = "0x4001C65")]
		RENDERER
	}

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5718", Offset = "0xCC5718")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5718", Offset = "0xCC5718")]
	public ComponentType m_componentType;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5768", Offset = "0xCC5768")]
	public bool m_ownComponent;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC57A0", Offset = "0xCC57A0")]
	public Label m_componentLabel;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC57D8", Offset = "0xCC57D8")]
	public bool m_enabled;

	[Token(Token = "0x6000784")]
	[Address(RVA = "0x101E050", Offset = "0x101E050", VA = "0x101E050")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000785")]
	[Address(RVA = "0x101E0A4", Offset = "0x101E0A4", VA = "0x101E0A4")]
	public SetEnabledComponentActionData()
	{
	}
}
[Token(Token = "0x20001C6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8C74", Offset = "0xCB8C74")]
public class SpawnActionData : CustomActionData
{
	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public SpawnListData m_spawnList;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_spawnBetweenDelaySpawn;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Label m_curveLabel;

	[Token(Token = "0x6000786")]
	[Address(RVA = "0x10706DC", Offset = "0x10706DC", VA = "0x10706DC")]
	public SpawnActionData()
	{
	}
}
[Token(Token = "0x20001C7")]
public class OrbitRotation : CacheBehaviour
{
	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform m_targetToProtect;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_orbitRadius;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_orbitRoationSpeed;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_orbitAlignToDirectionSpeed;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	public Vector3 m_orbitAxis;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float orbitRadiusCorrectionSpeed;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 orbitDesiredPosition;

	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 previousPosition;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 relativePos;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Quaternion rotation;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Transform _transform;

	[Token(Token = "0x6000787")]
	[Address(RVA = "0x11D035C", Offset = "0x11D035C", VA = "0x11D035C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000788")]
	[Address(RVA = "0x11D038C", Offset = "0x11D038C", VA = "0x11D038C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000789")]
	[Address(RVA = "0x11D06AC", Offset = "0x11D06AC", VA = "0x11D06AC")]
	public OrbitRotation()
	{
	}
}
[Token(Token = "0x20001C8")]
public class SpawnManager : ActionManager
{
	[Token(Token = "0x20005C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF310", Offset = "0xCBF310")]
	private sealed class <>c__DisplayClass7_0
	{
		[Token(Token = "0x4001C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int instanceId;

		[Token(Token = "0x6002191")]
		[Address(RVA = "0x1072290", Offset = "0x1072290", VA = "0x1072290")]
		public <>c__DisplayClass7_0()
		{
		}

		[Token(Token = "0x6002192")]
		[Address(RVA = "0x1072908", Offset = "0x1072908", VA = "0x1072908")]
		internal bool <OnSpawnAction>b__0(ActorData act)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF320", Offset = "0xCBF320")]
	private sealed class <WaitForDelaySpawn>d__9 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float seconds;

		[Token(Token = "0x4001C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SpawnManager <>4__this;

		[Token(Token = "0x4001C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int instanceId;

		[Token(Token = "0x1700036F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002196")]
			[Address(RVA = "0x1072A04", Offset = "0x1072A04", VA = "0x1072A04", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000370")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002198")]
			[Address(RVA = "0x1072A6C", Offset = "0x1072A6C", VA = "0x1072A6C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002193")]
		[Address(RVA = "0x1072860", Offset = "0x1072860", VA = "0x1072860")]
		[DebuggerHidden]
		public <WaitForDelaySpawn>d__9(int <>1__state)
		{
		}

		[Token(Token = "0x6002194")]
		[Address(RVA = "0x107292C", Offset = "0x107292C", VA = "0x107292C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002195")]
		[Address(RVA = "0x1072930", Offset = "0x1072930", VA = "0x1072930", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002197")]
		[Address(RVA = "0x1072A0C", Offset = "0x1072A0C", VA = "0x1072A0C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ActorCollection m_actorDatas;

	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public ActorDataTransformUnityEvent OnLoadActor;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public IntGameEventListener m_onActorCreatedInstanceIdListener;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BoolVariable m_useBatchSystem;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntVariable m_currentBatchEnemyCount;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public IntVariable m_numberOfBatches;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public IntVariable m_currentBatchIndex;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<int, List<ActorSpawnedData>> _waitingShields;

	[Token(Token = "0x600078A")]
	[Address(RVA = "0x10717DC", Offset = "0x10717DC", VA = "0x10717DC")]
	public void OnSpawnAction(CustomActionGameEventStruct action)
	{
	}

	[Token(Token = "0x600078B")]
	[Address(RVA = "0x1072528", Offset = "0x1072528", VA = "0x1072528")]
	public void OnActorCreatedInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x600078C")]
	[Address(RVA = "0x1072298", Offset = "0x1072298", VA = "0x1072298")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1244", Offset = "0xCD1244")]
	public IEnumerator<float> WaitForDelaySpawn(float seconds, int instanceId)
	{
		return null;
	}

	[Token(Token = "0x600078D")]
	[Address(RVA = "0x1072334", Offset = "0x1072334", VA = "0x1072334")]
	public ActorData FindSpawnedActor(SpawnListData spawnListData, int spawnListIndex)
	{
		return null;
	}

	[Token(Token = "0x600078E")]
	[Address(RVA = "0x107288C", Offset = "0x107288C", VA = "0x107288C")]
	public SpawnManager()
	{
	}
}
[Token(Token = "0x20001C9")]
public class UpdateSpawner : CacheBehaviour
{
	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public IntVariable m_currentBatchEnemyCount;

	[Token(Token = "0x600078F")]
	[Address(RVA = "0x1105EBC", Offset = "0x1105EBC", VA = "0x1105EBC")]
	public void OnUpdateSpawner(int instanceId)
	{
	}

	[Token(Token = "0x6000790")]
	[Address(RVA = "0x11060CC", Offset = "0x11060CC", VA = "0x11060CC")]
	public UpdateSpawner()
	{
	}
}
[Token(Token = "0x20001CA")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8CD4", Offset = "0xCB8CD4")]
public class DirectorGeneralData : ScriptableObject
{
	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Expandable]
	public GameData m_game;

	[Token(Token = "0x6000791")]
	[Address(RVA = "0x1170200", Offset = "0x1170200", VA = "0x1170200")]
	public DirectorGeneralData()
	{
	}
}
[Token(Token = "0x20001CB")]
public class DirectorManager : CacheBehaviour
{
	[Token(Token = "0x20005C7")]
	public enum EGameState
	{
		[Token(Token = "0x4001C6D")]
		INVALID,
		[Token(Token = "0x4001C6E")]
		LOADING,
		[Token(Token = "0x4001C6F")]
		PLAY,
		[Token(Token = "0x4001C70")]
		PAUSE,
		[Token(Token = "0x4001C71")]
		MAX
	}

	[Token(Token = "0x20005C8")]
	public enum TypeLevel
	{
		[Token(Token = "0x4001C73")]
		TUTO,
		[Token(Token = "0x4001C74")]
		CLASSIC,
		[Token(Token = "0x4001C75")]
		ELITE,
		[Token(Token = "0x4001C76")]
		INTERACTIVELORE,
		[Token(Token = "0x4001C77")]
		SHOP,
		[Token(Token = "0x4001C78")]
		GOBLIN,
		[Token(Token = "0x4001C79")]
		BOSS
	}

	[Token(Token = "0x20005C9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF330", Offset = "0xCBF330")]
	private sealed class <LoadActorActionRoutine>d__50 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int instanceId;

		[Token(Token = "0x4001C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DirectorManager <>4__this;

		[Token(Token = "0x4001C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ActorStruct <actorStruct>5__2;

		[Token(Token = "0x4001C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ActorData <actorData>5__3;

		[Token(Token = "0x4001C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private CustomActionGameEventStruct <str>5__4;

		[Token(Token = "0x4001C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ActorManager <actorManager>5__5;

		[Token(Token = "0x17000371")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600219C")]
			[Address(RVA = "0xF31E2C", Offset = "0xF31E2C", VA = "0xF31E2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000372")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600219E")]
			[Address(RVA = "0xF31E94", Offset = "0xF31E94", VA = "0xF31E94", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002199")]
		[Address(RVA = "0xF2FAA0", Offset = "0xF2FAA0", VA = "0xF2FAA0")]
		[DebuggerHidden]
		public <LoadActorActionRoutine>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x600219A")]
		[Address(RVA = "0xF31724", Offset = "0xF31724", VA = "0xF31724", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600219B")]
		[Address(RVA = "0xF31728", Offset = "0xF31728", VA = "0xF31728", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600219D")]
		[Address(RVA = "0xF31E34", Offset = "0xF31E34", VA = "0xF31E34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF340", Offset = "0xCBF340")]
	private sealed class <DelayCustomActionEvent>d__52 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CustomActionData customAction;

		[Token(Token = "0x4001C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int instanceID;

		[Token(Token = "0x17000373")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021A2")]
			[Address(RVA = "0xF31658", Offset = "0xF31658", VA = "0xF31658", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000374")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021A4")]
			[Address(RVA = "0xF316C0", Offset = "0xF316C0", VA = "0xF316C0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600219F")]
		[Address(RVA = "0xF2FCB8", Offset = "0xF2FCB8", VA = "0xF2FCB8")]
		[DebuggerHidden]
		public <DelayCustomActionEvent>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x60021A0")]
		[Address(RVA = "0xF31578", Offset = "0xF31578", VA = "0xF31578", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021A1")]
		[Address(RVA = "0xF3157C", Offset = "0xF3157C", VA = "0xF3157C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021A3")]
		[Address(RVA = "0xF31660", Offset = "0xF31660", VA = "0xF31660", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20005CB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF350", Offset = "0xCBF350")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__53_0;

		[Token(Token = "0x60021A6")]
		[Address(RVA = "0xF31334", Offset = "0xF31334", VA = "0xF31334")]
		public <>c()
		{
		}

		[Token(Token = "0x60021A7")]
		[Address(RVA = "0xF3133C", Offset = "0xF3133C", VA = "0xF3133C")]
		internal bool <OnBypassPatternRoutine>b__53_0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF360", Offset = "0xCBF360")]
	private sealed class <OnBypassPatternRoutine>d__53 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int instanceId;

		[Token(Token = "0x4001C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DirectorManager <>4__this;

		[Token(Token = "0x4001C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int pattern;

		[Token(Token = "0x17000375")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021AB")]
			[Address(RVA = "0xF32308", Offset = "0xF32308", VA = "0xF32308", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000376")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021AD")]
			[Address(RVA = "0xF32370", Offset = "0xF32370", VA = "0xF32370", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021A8")]
		[Address(RVA = "0xF2FCE4", Offset = "0xF2FCE4", VA = "0xF2FCE4")]
		[DebuggerHidden]
		public <OnBypassPatternRoutine>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x60021A9")]
		[Address(RVA = "0xF31EF8", Offset = "0xF31EF8", VA = "0xF31EF8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021AA")]
		[Address(RVA = "0xF31EFC", Offset = "0xF31EFC", VA = "0xF31EFC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021AC")]
		[Address(RVA = "0xF32310", Offset = "0xF32310", VA = "0xF32310", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF370", Offset = "0xCBF370")]
	private sealed class <>c__DisplayClass65_0
	{
		[Token(Token = "0x4001C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CustomActionData customAction;

		[Token(Token = "0x60021AE")]
		[Address(RVA = "0xF30BE0", Offset = "0xF30BE0", VA = "0xF30BE0")]
		public <>c__DisplayClass65_0()
		{
		}

		[Token(Token = "0x60021AF")]
		[Address(RVA = "0xF313CC", Offset = "0xF313CC", VA = "0xF313CC")]
		internal bool <FindCustomActionGameEvent>b__0(CustomActionGameEvent customActionEvent)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF380", Offset = "0xCBF380")]
	private sealed class <Wait>d__72 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float time;

		[Token(Token = "0x4001C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public DirectorManager <>4__this;

		[Token(Token = "0x17000377")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021B3")]
			[Address(RVA = "0xF324B0", Offset = "0xF324B0", VA = "0xF324B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000378")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021B5")]
			[Address(RVA = "0xF32518", Offset = "0xF32518", VA = "0xF32518", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021B0")]
		[Address(RVA = "0xF3117C", Offset = "0xF3117C", VA = "0xF3117C")]
		[DebuggerHidden]
		public <Wait>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x60021B1")]
		[Address(RVA = "0xF323D4", Offset = "0xF323D4", VA = "0xF323D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021B2")]
		[Address(RVA = "0xF323D8", Offset = "0xF323D8", VA = "0xF323D8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021B4")]
		[Address(RVA = "0xF324B8", Offset = "0xF324B8", VA = "0xF324B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5820", Offset = "0xCC5820")]
	[Expandable]
	public DirectorGeneralData m_director;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC586C", Offset = "0xCC586C")]
	public GameDataVariable m_currentGameData;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC58A4", Offset = "0xCC58A4")]
	public LevelDataVariable m_currentLevelData;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC58B8", Offset = "0xCC58B8")]
	public WaveDataVariable m_currentWaveData;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC58CC", Offset = "0xCC58CC")]
	public PatternDataVariable m_currentPatternData;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC58E0", Offset = "0xCC58E0")]
	public CustomActionDataVariable m_currentCustomActionData;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC58F4", Offset = "0xCC58F4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC58F4", Offset = "0xCC58F4")]
	public List<CustomActionGameEvent> m_customActionEvents;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5944", Offset = "0xCC5944")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5944", Offset = "0xCC5944")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5944", Offset = "0xCC5944")]
	public BetterEvent OnActorDeath;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntUnityEvent OnActorDeathInstanceId;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public Vector3UnityEvent OnActorDeathPosition;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public IntUnityEvent OnActorCreated;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public IntUnityEvent OnActorCreatedInstanceId;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UnityEvent OnLevelFinished;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public IntUnityEvent OnActorAttack;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public IntUnityEvent OnActorStopAttack;

	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public ObjectArrayUnityEvent OnActivateWarningZone;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public ObjectArrayUnityEvent OnDeactivateWarningZone;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public IntUnityEvent OnChangePatternInstanceId;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public UnityEvent OnWaveDisplay;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public BoolVariable m_useBatchSystem;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC59B8", Offset = "0xCC59B8")]
	public int m_offsetRemainingParts;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public ActorCollection m_actorDatas;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public IntVariable m_currentWaveNumber;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public IntVariable m_enemyRemaining;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public IntVariable m_difficultyFactor;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public bool m_isBoss;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
	public bool m_overrideDropRateBoidBall;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject m_boidBall;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject m_animationManager;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[HideInInspector]
	public bool m_endWhenNoEnemies;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public TextMeshPro m_objectiveText;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5A00", Offset = "0xCC5A00")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5A00", Offset = "0xCC5A00")]
	public BoolVariable m_playerDead;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5A50", Offset = "0xCC5A50")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5A50", Offset = "0xCC5A50")]
	public TextFeedbackUI m_currentWaveText;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public float m_currentWaveDisplayTime;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5AA0", Offset = "0xCC5AA0")]
	public BoolVariable m_shopAtEachWave;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public GameEvent m_shopEvent;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[HideInInspector]
	public static bool m_showWave;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5AE8", Offset = "0xCC5AE8")]
	public EGameState m_gameState;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	[HideInInspector]
	public static TypeLevel m_nextLevelType;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private Dictionary<int, CoroutineHandle> m_actorRoutines;

	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private int _currentLevel;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private int _currentWave;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private int _currentActor;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private int _currentPattern;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private int _currentAction;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
	private int _nbActorsInWave;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private List<int> _actorsAlreadySpawned;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private GameBehaviour _gameBehaviour;

	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	private List<GameObject> actorsSpawned;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	private bool _killRemaining;

	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
	private bool _paused;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x212")]
	private bool _recipeDone;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x213")]
	private bool _shockwaving;

	[Token(Token = "0x6000792")]
	[Address(RVA = "0xF2E23C", Offset = "0xF2E23C", VA = "0xF2E23C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000793")]
	[Address(RVA = "0xF2E378", Offset = "0xF2E378", VA = "0xF2E378")]
	private void Update()
	{
	}

	[Token(Token = "0x6000794")]
	[Address(RVA = "0xF2E3A0", Offset = "0xF2E3A0", VA = "0xF2E3A0")]
	public void GameStart()
	{
	}

	[Token(Token = "0x6000795")]
	[Address(RVA = "0xF2E968", Offset = "0xF2E968", VA = "0xF2E968")]
	public void LoadLevel(LevelData level)
	{
	}

	[Token(Token = "0x6000796")]
	[Address(RVA = "0xF2EA6C", Offset = "0xF2EA6C", VA = "0xF2EA6C")]
	public void LoadWave(WaveData wave)
	{
	}

	[Token(Token = "0x6000797")]
	[Address(RVA = "0xF2F578", Offset = "0xF2F578", VA = "0xF2F578")]
	public void LoadActor(ActorDataTransformGameEventStruct str)
	{
	}

	[Token(Token = "0x6000798")]
	[Address(RVA = "0xF2EE38", Offset = "0xF2EE38", VA = "0xF2EE38")]
	public void LoadActor(ActorData actorData, Transform spawnPoint, int ownerInstanceId = 0)
	{
	}

	[Token(Token = "0x6000799")]
	[Address(RVA = "0xF2F7BC", Offset = "0xF2F7BC", VA = "0xF2F7BC")]
	public void LoadActorAction(int instanceId)
	{
	}

	[Token(Token = "0x600079A")]
	[Address(RVA = "0xF2F944", Offset = "0xF2F944", VA = "0xF2F944")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD12A8", Offset = "0xCD12A8")]
	public IEnumerator<float> LoadActorActionRoutine(int instanceId)
	{
		return null;
	}

	[Token(Token = "0x600079B")]
	[Address(RVA = "0xF2FACC", Offset = "0xF2FACC", VA = "0xF2FACC")]
	public void OnBypassPattern(IntIntGameEventStruct str)
	{
	}

	[Token(Token = "0x600079C")]
	[Address(RVA = "0xF2FC2C", Offset = "0xF2FC2C", VA = "0xF2FC2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD130C", Offset = "0xCD130C")]
	public IEnumerator<float> DelayCustomActionEvent(CustomActionData customAction, int instanceID)
	{
		return null;
	}

	[Token(Token = "0x600079D")]
	[Address(RVA = "0xF2FB98", Offset = "0xF2FB98", VA = "0xF2FB98")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1370", Offset = "0xCD1370")]
	public IEnumerator<float> OnBypassPatternRoutine(int instanceId, int pattern)
	{
		return null;
	}

	[Token(Token = "0x600079E")]
	[Address(RVA = "0xF2FD10", Offset = "0xF2FD10", VA = "0xF2FD10")]
	public void NextActorAction(int instanceId)
	{
	}

	[Token(Token = "0x600079F")]
	[Address(RVA = "0xF301FC", Offset = "0xF301FC", VA = "0xF301FC")]
	private void NextActorPattern(int instanceId)
	{
	}

	[Token(Token = "0x60007A0")]
	[Address(RVA = "0xF30200", Offset = "0xF30200", VA = "0xF30200")]
	private void ResetCurrentPattern(int instanceId)
	{
	}

	[Token(Token = "0x60007A1")]
	[Address(RVA = "0xF3036C", Offset = "0xF3036C", VA = "0xF3036C")]
	public void PauseAllRoutines()
	{
	}

	[Token(Token = "0x60007A2")]
	[Address(RVA = "0xF303E8", Offset = "0xF303E8", VA = "0xF303E8")]
	public void ResumeAllRoutines()
	{
	}

	[Token(Token = "0x60007A3")]
	[Address(RVA = "0xF303F0", Offset = "0xF303F0", VA = "0xF303F0")]
	public void OnChangePattern(IntIntGameEventStruct str)
	{
	}

	[Token(Token = "0x60007A4")]
	[Address(RVA = "0xF300B4", Offset = "0xF300B4", VA = "0xF300B4")]
	public void ResetActorActions(int instanceId)
	{
	}

	[Token(Token = "0x60007A5")]
	[Address(RVA = "0xF30510", Offset = "0xF30510", VA = "0xF30510")]
	public void OnPlanetRegenerated()
	{
	}

	[Token(Token = "0x60007A6")]
	[Address(RVA = "0xF30954", Offset = "0xF30954", VA = "0xF30954")]
	public void OnAllPlanetsRegenerated()
	{
	}

	[Token(Token = "0x60007A7")]
	[Address(RVA = "0xF2E3EC", Offset = "0xF2E3EC", VA = "0xF2E3EC")]
	private void ResetAllPlayedCustomAction()
	{
	}

	[Token(Token = "0x60007A8")]
	[Address(RVA = "0xF30960", Offset = "0xF30960", VA = "0xF30960")]
	private void CheckActionException(CustomActionData currentAction, CustomActionData nextAction)
	{
	}

	[Token(Token = "0x60007A9")]
	[Address(RVA = "0xF30B10", Offset = "0xF30B10", VA = "0xF30B10")]
	private CustomActionGameEvent FindCustomActionGameEvent(CustomActionData customAction)
	{
		return null;
	}

	[Token(Token = "0x60007AA")]
	[Address(RVA = "0xF2E890", Offset = "0xF2E890", VA = "0xF2E890")]
	public void LoadGame(GameData game)
	{
	}

	[Token(Token = "0x60007AB")]
	[Address(RVA = "0xF30BE8", Offset = "0xF30BE8", VA = "0xF30BE8")]
	public void OnActorDead(IntIntGameEventStruct str)
	{
	}

	[Token(Token = "0x60007AC")]
	[Address(RVA = "0xF30CE0", Offset = "0xF30CE0", VA = "0xF30CE0")]
	public void RemoveActorFromFinder(int instanceId)
	{
	}

	[Token(Token = "0x60007AD")]
	[Address(RVA = "0xF30EA0", Offset = "0xF30EA0", VA = "0xF30EA0")]
	public void NextWave()
	{
	}

	[Token(Token = "0x60007AE")]
	[Address(RVA = "0xF3051C", Offset = "0xF3051C", VA = "0xF3051C")]
	public void DestroyAllGameElements()
	{
	}

	[Token(Token = "0x60007AF")]
	[Address(RVA = "0xF2E8D4", Offset = "0xF2E8D4", VA = "0xF2E8D4")]
	public void DisplayWave()
	{
	}

	[Token(Token = "0x60007B0")]
	[Address(RVA = "0xF310F0", Offset = "0xF310F0", VA = "0xF310F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD13D4", Offset = "0xCD13D4")]
	private IEnumerator<float> Wait(float time)
	{
		return null;
	}

	[Token(Token = "0x60007B1")]
	[Address(RVA = "0xF311A8", Offset = "0xF311A8", VA = "0xF311A8")]
	public void OnDisplayComplete()
	{
	}

	[Token(Token = "0x60007B2")]
	[Address(RVA = "0xF31034", Offset = "0xF31034", VA = "0xF31034")]
	public void OnEndGame()
	{
	}

	[Token(Token = "0x60007B3")]
	[Address(RVA = "0xF2E260", Offset = "0xF2E260", VA = "0xF2E260")]
	private void CheckParameters()
	{
	}

	[Token(Token = "0x60007B4")]
	[Address(RVA = "0xF2E310", Offset = "0xF2E310", VA = "0xF2E310")]
	private void InitializeParameters()
	{
	}

	[Token(Token = "0x60007B5")]
	[Address(RVA = "0xF311AC", Offset = "0xF311AC", VA = "0xF311AC")]
	public DirectorManager()
	{
	}
}
[Token(Token = "0x20001CC")]
public class GameBehaviour : CacheBehaviour
{
	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameDataVariable m_gameData;

	[Token(Token = "0x60007B6")]
	[Address(RVA = "0xF3C07C", Offset = "0xF3C07C", VA = "0xF3C07C")]
	public void StartGame(int level, int wave, int pattern, int action)
	{
	}

	[Token(Token = "0x60007B7")]
	[Address(RVA = "0xF2E39C", Offset = "0xF2E39C", VA = "0xF2E39C")]
	public void Play()
	{
	}

	[Token(Token = "0x60007B8")]
	[Address(RVA = "0xF3C1F4", Offset = "0xF3C1F4", VA = "0xF3C1F4")]
	public void Pause()
	{
	}

	[Token(Token = "0x60007B9")]
	[Address(RVA = "0xF3C1F8", Offset = "0xF3C1F8", VA = "0xF3C1F8")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60007BA")]
	[Address(RVA = "0xF3C200", Offset = "0xF3C200", VA = "0xF3C200")]
	public GameBehaviour()
	{
	}
}
[Token(Token = "0x20001CD")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8D34", Offset = "0xCB8D34")]
public class GameData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20005CF")]
	public struct Level
	{
		[Token(Token = "0x4001C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Expandable]
		public LevelData m_levelData;
	}

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Level[] m_levelDatas;

	[Token(Token = "0x60007BB")]
	[Address(RVA = "0xF3C208", Offset = "0xF3C208", VA = "0xF3C208")]
	public GameData()
	{
	}
}
[Token(Token = "0x20001CE")]
public class LevelBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LevelData m_levelData;

	[Token(Token = "0x60007BC")]
	[Address(RVA = "0xFC25A8", Offset = "0xFC25A8", VA = "0xFC25A8")]
	public void Play()
	{
	}

	[Token(Token = "0x60007BD")]
	[Address(RVA = "0xFC25AC", Offset = "0xFC25AC", VA = "0xFC25AC")]
	public void Pause()
	{
	}

	[Token(Token = "0x60007BE")]
	[Address(RVA = "0xFC25B0", Offset = "0xFC25B0", VA = "0xFC25B0")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60007BF")]
	[Address(RVA = "0xFC25B8", Offset = "0xFC25B8", VA = "0xFC25B8")]
	public LevelBehaviour()
	{
	}
}
[Token(Token = "0x20001CF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8D94", Offset = "0xCB8D94")]
public class LevelData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20005D0")]
	public class Wave
	{
		[Token(Token = "0x4001C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string m_name;

		[Token(Token = "0x4001C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Expandable]
		public WaveData m_waveData;

		[Token(Token = "0x60021B6")]
		[Address(RVA = "0xFC25D8", Offset = "0xFC25D8", VA = "0xFC25D8")]
		public Wave()
		{
		}
	}

	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Wave[] m_waveDatas;

	[Token(Token = "0x60007C0")]
	[Address(RVA = "0xFC25C0", Offset = "0xFC25C0", VA = "0xFC25C0")]
	public void Play()
	{
	}

	[Token(Token = "0x60007C1")]
	[Address(RVA = "0xFC25C4", Offset = "0xFC25C4", VA = "0xFC25C4")]
	public void Pause()
	{
	}

	[Token(Token = "0x60007C2")]
	[Address(RVA = "0xFC25C8", Offset = "0xFC25C8", VA = "0xFC25C8")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C3")]
	[Address(RVA = "0xFC25D0", Offset = "0xFC25D0", VA = "0xFC25D0")]
	public LevelData()
	{
	}
}
[Token(Token = "0x20001D0")]
public class PatternBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PatternData m_patternData;

	[Token(Token = "0x60007C4")]
	[Address(RVA = "0x14EEF60", Offset = "0x14EEF60", VA = "0x14EEF60")]
	public void Play()
	{
	}

	[Token(Token = "0x60007C5")]
	[Address(RVA = "0x14EEF64", Offset = "0x14EEF64", VA = "0x14EEF64")]
	public void Pause()
	{
	}

	[Token(Token = "0x60007C6")]
	[Address(RVA = "0x14EEF68", Offset = "0x14EEF68", VA = "0x14EEF68")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60007C7")]
	[Address(RVA = "0x14EEF70", Offset = "0x14EEF70", VA = "0x14EEF70")]
	public PatternBehaviour()
	{
	}
}
[Token(Token = "0x20001D1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8DF4", Offset = "0xCB8DF4")]
public class PatternData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x20005D1")]
	public struct Action
	{
		[Token(Token = "0x4001C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[Expandable]
		public CustomActionData m_customAction;
	}

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Action[] m_actions;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public CustomActionData m_currentActionData;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public int m_currentActionDataIndex;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntGameEvent m_activatorEvent;

	[Token(Token = "0x60007C8")]
	[Address(RVA = "0x14EEF80", Offset = "0x14EEF80", VA = "0x14EEF80")]
	public PatternData()
	{
	}
}
[Token(Token = "0x20001D2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8E54", Offset = "0xCB8E54")]
public class CustomActionDataVariable : BaseVariable<CustomActionData>
{
	[Token(Token = "0x60007C9")]
	[Address(RVA = "0xF72C80", Offset = "0xF72C80", VA = "0xF72C80")]
	public CustomActionDataVariable()
	{
	}
}
[Token(Token = "0x20001D3")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8EC0", Offset = "0xCB8EC0")]
public class GameDataVariable : BaseVariable<GameData>
{
	[Token(Token = "0x60007CA")]
	[Address(RVA = "0xF3C210", Offset = "0xF3C210", VA = "0xF3C210")]
	public GameDataVariable()
	{
	}
}
[Token(Token = "0x20001D4")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8F2C", Offset = "0xCB8F2C")]
public class LevelDataVariable : BaseVariable<LevelData>
{
	[Token(Token = "0x60007CB")]
	[Address(RVA = "0xFC25E0", Offset = "0xFC25E0", VA = "0xFC25E0")]
	public LevelDataVariable()
	{
	}
}
[Token(Token = "0x20001D5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB8F98", Offset = "0xCB8F98")]
public class PatternDataVariable : BaseVariable<PatternData>
{
	[Token(Token = "0x60007CC")]
	[Address(RVA = "0x14EEF88", Offset = "0x14EEF88", VA = "0x14EEF88")]
	public PatternDataVariable()
	{
	}
}
[Token(Token = "0x20001D6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9004", Offset = "0xCB9004")]
public class WaveDataVariable : BaseVariable<WaveData>
{
	[Token(Token = "0x60007CD")]
	[Address(RVA = "0x1108C3C", Offset = "0x1108C3C", VA = "0x1108C3C")]
	public WaveDataVariable()
	{
	}
}
[Token(Token = "0x20001D7")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9070", Offset = "0xCB9070")]
public class WaveData : ScriptableObject
{
	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5B50", Offset = "0xCC5B50")]
	public List<Label> m_spawnPoints;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5B88", Offset = "0xCC5B88")]
	public bool m_boss;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Expandable]
	public List<ActorData> m_actors;

	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_actorIndex;

	[Token(Token = "0x60007CE")]
	[Address(RVA = "0x1108BC0", Offset = "0x1108BC0", VA = "0x1108BC0")]
	public WaveData()
	{
	}
}
[Token(Token = "0x20001D8")]
public class WaveBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WaveData m_waveData;

	[Token(Token = "0x60007CF")]
	[Address(RVA = "0x1108BA8", Offset = "0x1108BA8", VA = "0x1108BA8")]
	public void Play()
	{
	}

	[Token(Token = "0x60007D0")]
	[Address(RVA = "0x1108BAC", Offset = "0x1108BAC", VA = "0x1108BAC")]
	public void Pause()
	{
	}

	[Token(Token = "0x60007D1")]
	[Address(RVA = "0x1108BB0", Offset = "0x1108BB0", VA = "0x1108BB0")]
	public bool IsFinished()
	{
		return default(bool);
	}

	[Token(Token = "0x60007D2")]
	[Address(RVA = "0x1108BB8", Offset = "0x1108BB8", VA = "0x1108BB8")]
	public WaveBehaviour()
	{
	}
}
[Token(Token = "0x20001D9")]
public class ActivateGameObjectWithTrigger : CacheBehaviour
{
	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public string m_tag;

	[Token(Token = "0x60007D3")]
	[Address(RVA = "0x16A74E4", Offset = "0x16A74E4", VA = "0x16A74E4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60007D4")]
	[Address(RVA = "0x16A757C", Offset = "0x16A757C", VA = "0x16A757C")]
	public ActivateGameObjectWithTrigger()
	{
	}
}
[Token(Token = "0x20001DA")]
public class AttackSignManager : MonoBehaviour
{
	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_leftAttackSign;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_rightAttackSign;

	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_midAttackSign;

	[Token(Token = "0x60007D5")]
	[Address(RVA = "0xF63EFC", Offset = "0xF63EFC", VA = "0xF63EFC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007D6")]
	[Address(RVA = "0xF63FA4", Offset = "0xF63FA4", VA = "0xF63FA4")]
	public void OnLeftAttackSign()
	{
	}

	[Token(Token = "0x60007D7")]
	[Address(RVA = "0xF64054", Offset = "0xF64054", VA = "0xF64054")]
	public void OnRightAttackSign()
	{
	}

	[Token(Token = "0x60007D8")]
	[Address(RVA = "0xF64104", Offset = "0xF64104", VA = "0xF64104")]
	public void OnMidAttackSign()
	{
	}

	[Token(Token = "0x60007D9")]
	[Address(RVA = "0xF641B4", Offset = "0xF641B4", VA = "0xF641B4")]
	public void OnLeftAttackSignDisabled()
	{
	}

	[Token(Token = "0x60007DA")]
	[Address(RVA = "0xF64264", Offset = "0xF64264", VA = "0xF64264")]
	public void OnRightAttackSignDisabled()
	{
	}

	[Token(Token = "0x60007DB")]
	[Address(RVA = "0xF64314", Offset = "0xF64314", VA = "0xF64314")]
	public void OnMidAttackSignDisabled()
	{
	}

	[Token(Token = "0x60007DC")]
	[Address(RVA = "0xF643C4", Offset = "0xF643C4", VA = "0xF643C4")]
	public AttackSignManager()
	{
	}
}
[Token(Token = "0x20001DB")]
public class BossChangeColor : MonoBehaviour
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material weakPointMat;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material classicMat;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject objectToChangeL;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject objectToChangeR;

	[Token(Token = "0x60007DD")]
	[Address(RVA = "0xF681D8", Offset = "0xF681D8", VA = "0xF681D8")]
	public void EventStartColorChangeL()
	{
	}

	[Token(Token = "0x60007DE")]
	[Address(RVA = "0xF68240", Offset = "0xF68240", VA = "0xF68240")]
	public void EventStartColorChangeR()
	{
	}

	[Token(Token = "0x60007DF")]
	[Address(RVA = "0xF682A8", Offset = "0xF682A8", VA = "0xF682A8")]
	public void EventEndColorChangeR()
	{
	}

	[Token(Token = "0x60007E0")]
	[Address(RVA = "0xF68310", Offset = "0xF68310", VA = "0xF68310")]
	public void EventEndColorChangeL()
	{
	}

	[Token(Token = "0x60007E1")]
	[Address(RVA = "0xF68378", Offset = "0xF68378", VA = "0xF68378")]
	public void EventHurt()
	{
	}

	[Token(Token = "0x60007E2")]
	[Address(RVA = "0xF68400", Offset = "0xF68400", VA = "0xF68400")]
	public BossChangeColor()
	{
	}
}
[Token(Token = "0x20001DC")]
public class EffectManager : MonoBehaviour
{
	[Token(Token = "0x60007E3")]
	[Address(RVA = "0xF36BDC", Offset = "0xF36BDC", VA = "0xF36BDC")]
	public void PlayFeedbackRay(CustomActionGameEventStruct str)
	{
	}

	[Token(Token = "0x60007E4")]
	[Address(RVA = "0xF36EE0", Offset = "0xF36EE0", VA = "0xF36EE0")]
	public void PlayFeedbackInstantiate(GameObjectGameEventStruct str)
	{
	}

	[Token(Token = "0x60007E5")]
	[Address(RVA = "0xF37014", Offset = "0xF37014", VA = "0xF37014")]
	public EffectManager()
	{
	}
}
[Token(Token = "0x20001DD")]
public abstract class FeedbackData : ScriptableObject
{
	[Token(Token = "0x60007E6")]
	[Address(RVA = "0xF3A16C", Offset = "0xF3A16C", VA = "0xF3A16C")]
	protected FeedbackData()
	{
	}
}
[Token(Token = "0x20001DE")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB90D0", Offset = "0xCB90D0")]
public class FeedbackInstantiateData : FeedbackData
{
	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5BD0", Offset = "0xCC5BD0")]
	public GameObject m_feedbackToInstantiate;

	[Token(Token = "0x60007E7")]
	[Address(RVA = "0xF3A174", Offset = "0xF3A174", VA = "0xF3A174")]
	public FeedbackInstantiateData()
	{
	}
}
[Token(Token = "0x20001DF")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9130", Offset = "0xCB9130")]
public class FeedbackRayData : FeedbackData
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5C08", Offset = "0xCC5C08")]
	public TrailRenderer m_trailRenderer;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5C40", Offset = "0xCC5C40")]
	public Label m_originLabel;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5C78", Offset = "0xCC5C78")]
	public Label m_directionLabel;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5CB0", Offset = "0xCC5CB0")]
	public bool m_copyData;

	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5CE8", Offset = "0xCC5CE8")]
	public Color m_color;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5D20", Offset = "0xCC5D20")]
	public float m_time;

	[Token(Token = "0x60007E8")]
	[Address(RVA = "0xF3A184", Offset = "0xF3A184", VA = "0xF3A184")]
	public FeedbackRayData()
	{
	}
}
[Token(Token = "0x20001E0")]
public class InverseVelocity : MonoBehaviour
{
	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VelocityTracker m_velocity;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform _transform;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 _vectorZero;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 _velocity;

	[Token(Token = "0x60007E9")]
	[Address(RVA = "0xFBBB7C", Offset = "0xFBBB7C", VA = "0xFBBB7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007EA")]
	[Address(RVA = "0xFBBBE8", Offset = "0xFBBBE8", VA = "0xFBBBE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60007EB")]
	[Address(RVA = "0xFBBD54", Offset = "0xFBBD54", VA = "0xFBBD54")]
	public InverseVelocity()
	{
	}
}
[Token(Token = "0x20001E1")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9190", Offset = "0xCB9190")]
public class Effect : ScriptableObject
{
	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<FeedbackData> m_feedbacks;

	[Token(Token = "0x60007EC")]
	[Address(RVA = "0xF36BD4", Offset = "0xF36BD4", VA = "0xF36BD4")]
	public Effect()
	{
	}
}
[Serializable]
[Token(Token = "0x20001E2")]
public enum GameModeType
{
	[Token(Token = "0x4000A6B")]
	CLASSIC,
	[Token(Token = "0x4000A6C")]
	CHECKPOINT
}
[Token(Token = "0x20001E3")]
public class GameModeTypeComparer : CacheBehaviour
{
	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5D58", Offset = "0xCC5D58")]
	public GameModeTypeVariable m_variableToCompare;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameModeType m_gameModeToCompare;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5D6C", Offset = "0xCC5D6C")]
	public UnityEvent OnComparisonSuccess;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnComparisonFailed;

	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool m_launchOnEnable;

	[Token(Token = "0x60007ED")]
	[Address(RVA = "0xF3C9B4", Offset = "0xF3C9B4", VA = "0xF3C9B4")]
	public void Compare()
	{
	}

	[Token(Token = "0x60007EE")]
	[Address(RVA = "0xF3CA0C", Offset = "0xF3CA0C", VA = "0xF3CA0C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60007EF")]
	[Address(RVA = "0xF3CA1C", Offset = "0xF3CA1C", VA = "0xF3CA1C")]
	public GameModeTypeComparer()
	{
	}
}
[Token(Token = "0x20001E4")]
public class CalculateCurveDirection : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Expandable]
	public CinemachinePath m_path;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_granularity;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject root;

	[Token(Token = "0x60007F0")]
	[Address(RVA = "0xF6A248", Offset = "0xF6A248", VA = "0xF6A248")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F1")]
	[Address(RVA = "0xF6A24C", Offset = "0xF6A24C", VA = "0xF6A24C")]
	private void GenerateCurveData()
	{
	}

	[Token(Token = "0x60007F2")]
	[Address(RVA = "0xF6A438", Offset = "0xF6A438", VA = "0xF6A438")]
	public CalculateCurveDirection()
	{
	}
}
[Token(Token = "0x20001E5")]
public class ChangeDollyCartPosition : CacheBehaviour
{
	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Expandable]
	public CinemachineDollyCart m_cart;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_cartPosition;

	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public TrailRenderer m_trail;

	[Token(Token = "0x60007F3")]
	[Address(RVA = "0xF6B274", Offset = "0xF6B274", VA = "0xF6B274")]
	public void ChangePosition()
	{
	}

	[Token(Token = "0x60007F4")]
	[Address(RVA = "0xF6B2C8", Offset = "0xF6B2C8", VA = "0xF6B2C8")]
	public ChangeDollyCartPosition()
	{
	}
}
[Token(Token = "0x20001E6")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB91F0", Offset = "0xCB91F0")]
public class CinemachineDollyCartVariable : BaseVariable<CinemachineDollyCart>
{
	[Token(Token = "0x60007F5")]
	[Address(RVA = "0xF6C760", Offset = "0xF6C760", VA = "0xF6C760")]
	public CinemachineDollyCartVariable()
	{
	}
}
[Token(Token = "0x20001E7")]
public class CurveSegment : MonoBehaviour
{
	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_guid;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_tag;

	[Token(Token = "0x60007F6")]
	[Address(RVA = "0xF6FA2C", Offset = "0xF6FA2C", VA = "0xF6FA2C")]
	public CurveSegment()
	{
	}
}
[Token(Token = "0x20001E8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB925C", Offset = "0xCB925C")]
public class CurveTracer : MonoBehaviour
{
	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CinemachinePath path;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform trans;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int granularity;

	[Token(Token = "0x60007F7")]
	[Address(RVA = "0xF6FA34", Offset = "0xF6FA34", VA = "0xF6FA34")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007F8")]
	[Address(RVA = "0xF6FA94", Offset = "0xF6FA94", VA = "0xF6FA94")]
	private void Start()
	{
	}

	[Token(Token = "0x60007F9")]
	[Address(RVA = "0xF6FBF4", Offset = "0xF6FBF4", VA = "0xF6FBF4")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FA")]
	[Address(RVA = "0xF6FBF8", Offset = "0xF6FBF8", VA = "0xF6FBF8")]
	public CurveTracer()
	{
	}
}
[Token(Token = "0x20001E9")]
public class DollyCartTreshold : CacheBehaviour
{
	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public CinemachineDollyCart m_cart;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool m_usePathLength;

	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	[HideInInspector]
	public float m_threshold;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[HideInInspector]
	public CinemachinePath m_thresholdPath;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnCartReachedThreshold;

	[Token(Token = "0x60007FB")]
	[Address(RVA = "0xF32A08", Offset = "0xF32A08", VA = "0xF32A08")]
	private void Awake()
	{
	}

	[Token(Token = "0x60007FC")]
	[Address(RVA = "0xF32A0C", Offset = "0xF32A0C", VA = "0xF32A0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60007FD")]
	[Address(RVA = "0xF32A84", Offset = "0xF32A84", VA = "0xF32A84")]
	private void ResetPathWithThreshold()
	{
	}

	[Token(Token = "0x60007FE")]
	[Address(RVA = "0xF32A1C", Offset = "0xF32A1C", VA = "0xF32A1C")]
	private void ResetPathWithPathLength()
	{
	}

	[Token(Token = "0x60007FF")]
	[Address(RVA = "0xF32AC4", Offset = "0xF32AC4", VA = "0xF32AC4")]
	public void ResetPath()
	{
	}

	[Token(Token = "0x6000800")]
	[Address(RVA = "0xF32AE0", Offset = "0xF32AE0", VA = "0xF32AE0")]
	public DollyCartTreshold()
	{
	}
}
[Token(Token = "0x20001EA")]
public class FadeOut : MonoBehaviour
{
	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material m_colorToFade;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_fadingTime;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _time;

	[Token(Token = "0x6000801")]
	[Address(RVA = "0xF39860", Offset = "0xF39860", VA = "0xF39860")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000802")]
	[Address(RVA = "0xF399D8", Offset = "0xF399D8", VA = "0xF399D8")]
	private void OnFinish()
	{
	}

	[Token(Token = "0x6000803")]
	[Address(RVA = "0xF39A90", Offset = "0xF39A90", VA = "0xF39A90")]
	public FadeOut()
	{
	}
}
[Token(Token = "0x20001EB")]
public class GameManager : CacheBehaviour
{
	[Token(Token = "0x20005D2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF390", Offset = "0xCBF390")]
	private sealed class <Start>d__28 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameManager <>4__this;

		[Token(Token = "0x17000379")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60021BA")]
			[Address(RVA = "0xF3C944", Offset = "0xF3C944", VA = "0xF3C944", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700037A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021BC")]
			[Address(RVA = "0xF3C9AC", Offset = "0xF3C9AC", VA = "0xF3C9AC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021B7")]
		[Address(RVA = "0xF3C2DC", Offset = "0xF3C2DC", VA = "0xF3C2DC")]
		[DebuggerHidden]
		public <Start>d__28(int <>1__state)
		{
		}

		[Token(Token = "0x60021B8")]
		[Address(RVA = "0xF3C7F4", Offset = "0xF3C7F4", VA = "0xF3C7F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021B9")]
		[Address(RVA = "0xF3C7F8", Offset = "0xF3C7F8", VA = "0xF3C7F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021BB")]
		[Address(RVA = "0xF3C94C", Offset = "0xF3C94C", VA = "0xF3C94C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent OnGameStarted;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnIntroMenu;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameStateData m_currentGameState;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<IntVariable> m_states;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string m_sceneName;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolVariable m_shopAtEachWave;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5DC0", Offset = "0xCC5DC0")]
	public bool m_elementsReveal;

	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5DF8", Offset = "0xCC5DF8")]
	public IntVariable m_numberOfPlanetsToReveal;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntVariable m_numberOfPlanetsRevealed;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public IntVariable m_numberOfLevelFinished;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5E0C", Offset = "0xCC5E0C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5E0C", Offset = "0xCC5E0C")]
	public IntVariable m_currentAzote;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public IntVariable m_currentCarbon;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public IntVariable m_currentPhosphorus;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public IntVariable m_currentSulfur;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public IntVariable m_currentWater;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5E5C", Offset = "0xCC5E5C")]
	public IntVariable m_neededAzote;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public IntVariable m_neededCarbon;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public IntVariable m_neededPhosphorus;

	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public IntVariable m_neededSulfur;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public IntVariable m_neededWater;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public UnityEvent OnBossReveal;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public UnityEvent OnGameRestartAfterDeath;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public IntVariable m_score;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public IntVariable m_currency;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public BoolVariable m_bossRevealed;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5E70", Offset = "0xCC5E70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC5E70", Offset = "0xCC5E70")]
	public BoolVariable m_isPaused;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public UnityEvent OnGamePause;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public UnityEvent OnGameUnpause;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public bool _gamePaused;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
	private bool _canPause;

	[Token(Token = "0x6000804")]
	[Address(RVA = "0xF3C260", Offset = "0xF3C260", VA = "0xF3C260")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1438", Offset = "0xCD1438")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x6000805")]
	[Address(RVA = "0xF3C308", Offset = "0xF3C308", VA = "0xF3C308")]
	public void OnRestartGame()
	{
	}

	[Token(Token = "0x6000806")]
	[Address(RVA = "0xF3C350", Offset = "0xF3C350", VA = "0xF3C350")]
	public void OnLevelFinished()
	{
	}

	[Token(Token = "0x6000807")]
	[Address(RVA = "0xF3C578", Offset = "0xF3C578", VA = "0xF3C578")]
	public void PauseGame()
	{
	}

	[Token(Token = "0x6000808")]
	[Address(RVA = "0xF3C624", Offset = "0xF3C624", VA = "0xF3C624")]
	public void UnpauseGame()
	{
	}

	[Token(Token = "0x6000809")]
	[Address(RVA = "0xF3C6CC", Offset = "0xF3C6CC", VA = "0xF3C6CC")]
	public void OnLaunchPauseOrResume()
	{
	}

	[Token(Token = "0x600080A")]
	[Address(RVA = "0xF3C72C", Offset = "0xF3C72C", VA = "0xF3C72C")]
	public void OnLaunchPause()
	{
	}

	[Token(Token = "0x600080B")]
	[Address(RVA = "0xF3C774", Offset = "0xF3C774", VA = "0xF3C774")]
	public void SetCanPause(bool value)
	{
	}

	[Token(Token = "0x600080C")]
	[Address(RVA = "0xF3C780", Offset = "0xF3C780", VA = "0xF3C780")]
	public void Test()
	{
	}

	[Token(Token = "0x600080D")]
	[Address(RVA = "0xF3C7EC", Offset = "0xF3C7EC", VA = "0xF3C7EC")]
	public GameManager()
	{
	}
}
[Token(Token = "0x20001EC")]
public class GetColorOfChildParticle : CacheBehaviour
{
	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[Expandable]
	public ColorVariable m_colorToInject;

	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ParticleSystem _particle;

	[Token(Token = "0x600080E")]
	[Address(RVA = "0xF3D5D0", Offset = "0xF3D5D0", VA = "0xF3D5D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x600080F")]
	[Address(RVA = "0xF3D710", Offset = "0xF3D710", VA = "0xF3D710")]
	public GetColorOfChildParticle()
	{
	}
}
[Token(Token = "0x20001ED")]
public class GuardianExit : MonoBehaviour
{
	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolVariable m_rightHandInGesture;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoolVariable m_leftHandInGesture;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObjectVariable m_leftHand;

	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObjectVariable m_rightHand;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoolVariable m_rightHandInteracted;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoolVariable m_leftHandInteracted;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent m_OnLeftHandGuardianReferentialLeave;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent m_OnRightHandGuardianReferentialLeave;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent m_OnBothHandsGuardianReferentialLeave;

	[Token(Token = "0x6000810")]
	[Address(RVA = "0xF3E420", Offset = "0xF3E420", VA = "0xF3E420")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000811")]
	[Address(RVA = "0xF3E620", Offset = "0xF3E620", VA = "0xF3E620")]
	public GuardianExit()
	{
	}
}
[Token(Token = "0x20001EE")]
public class GuardianReferentialInteractor : MonoBehaviour
{
	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatReference m_tolerance;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ContactPointVariable m_handLeftContactPoint;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ContactPointVariable m_handRightContactPoint;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent _OnLeftHandGuardianReferentialInteracted;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent _OnRightHandGuardianReferentialInteracted;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent _OnBothHandsGuardianReferentialInteracted;

	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent m_OnLeftHandGuardianReferentialLeave;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent m_OnRightHandGuardianReferentialLeave;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public UnityEvent m_OnBothHandsGuardianReferentialLeave;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEvent m_OnIntroStartFinished;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public BoolVariable m_rightHandInGesture;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BoolVariable m_leftHandInGesture;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BoolVariable m_rightHandInChoice;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public BoolVariable m_leftHandInChoice;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public BoolVariable m_introStart;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObjectVariable m_leftHand;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public GameObjectVariable m_rightHand;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public BoolVariable m_rightHandInteracted;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public BoolVariable m_leftHandInteracted;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObjectVariable m_rightHandSpell;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObjectVariable m_leftHandSpell;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public BoolVariable m_readyToPlay;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float _tolerance;

	[Token(Token = "0x6000812")]
	[Address(RVA = "0xF3E628", Offset = "0xF3E628", VA = "0xF3E628")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000813")]
	[Address(RVA = "0xF3E688", Offset = "0xF3E688", VA = "0xF3E688")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000814")]
	[Address(RVA = "0xF3E9DC", Offset = "0xF3E9DC", VA = "0xF3E9DC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000815")]
	[Address(RVA = "0xF3EBDC", Offset = "0xF3EBDC", VA = "0xF3EBDC")]
	public void ResetGuardian(GameObject hand)
	{
	}

	[Token(Token = "0x6000816")]
	[Address(RVA = "0xF3ED64", Offset = "0xF3ED64", VA = "0xF3ED64")]
	public GuardianReferentialInteractor()
	{
	}
}
[Token(Token = "0x20001EF")]
public class Hand : MonoBehaviour
{
	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable m_handGestureLeft;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObjectVariable m_handGestureRight;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject activeHand;

	[Token(Token = "0x6000817")]
	[Address(RVA = "0xF3F06C", Offset = "0xF3F06C", VA = "0xF3F06C")]
	public void SetHandLeft(GameObject hand)
	{
	}

	[Token(Token = "0x6000818")]
	[Address(RVA = "0xF3F090", Offset = "0xF3F090", VA = "0xF3F090")]
	public void SetHandRight(GameObject hand)
	{
	}

	[Token(Token = "0x6000819")]
	[Address(RVA = "0xF3F0B4", Offset = "0xF3F0B4", VA = "0xF3F0B4")]
	public void SetHand(GameObject hand)
	{
	}

	[Token(Token = "0x600081A")]
	[Address(RVA = "0xF3F150", Offset = "0xF3F150", VA = "0xF3F150")]
	public Hand()
	{
	}
}
[Token(Token = "0x20001F0")]
public class HandGestureInteractor : CacheBehaviour
{
	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObjectGameEvent OnBeginCurve;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObjectGameEvent OnHandRaise;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnAbortCurve;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObjectGameEvent m_OnGestureFinished;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UnityEvent _OnHandFree;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolVariable _rightHandInGesture;

	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public BoolVariable _leftHandInGesture;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BoolVariable m_useTrigger;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string m_axisName;

	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public SphereCollider m_sphereCollider;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public float m_incrementSphereCollider;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public UnityEvent m_OnNewSegmentTouched;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public List<int> _curveSegmentsGuids;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private bool _gestureFinished;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x121")]
	private bool _following;

	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private float _trailTime;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject _curve;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private CinemachinePathVariable _path;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private CinemachineDollyCartVariable _cart;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private TrailRendererVariable _playerTrail;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private float _sphereColliderRadius;

	[Token(Token = "0x1700004E")]
	public CinemachinePathVariable Path
	{
		[Token(Token = "0x600081B")]
		[Address(RVA = "0xF3F3F0", Offset = "0xF3F3F0", VA = "0xF3F3F0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600081C")]
		[Address(RVA = "0xF3F3F8", Offset = "0xF3F3F8", VA = "0xF3F3F8")]
		set
		{
		}
	}

	[Token(Token = "0x1700004F")]
	public CinemachineDollyCartVariable Cart
	{
		[Token(Token = "0x600081D")]
		[Address(RVA = "0xF3F408", Offset = "0xF3F408", VA = "0xF3F408")]
		get
		{
			return null;
		}
		[Token(Token = "0x600081E")]
		[Address(RVA = "0xF3F410", Offset = "0xF3F410", VA = "0xF3F410")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public TrailRendererVariable PlayerTrail
	{
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xF3F420", Offset = "0xF3F420", VA = "0xF3F420")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000820")]
		[Address(RVA = "0xF3F428", Offset = "0xF3F428", VA = "0xF3F428")]
		set
		{
		}
	}

	[Token(Token = "0x6000821")]
	[Address(RVA = "0xF3F438", Offset = "0xF3F438", VA = "0xF3F438")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000822")]
	[Address(RVA = "0xF3F46C", Offset = "0xF3F46C", VA = "0xF3F46C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000823")]
	[Address(RVA = "0xF3F7E8", Offset = "0xF3F7E8", VA = "0xF3F7E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000824")]
	[Address(RVA = "0xF3FA70", Offset = "0xF3FA70", VA = "0xF3FA70")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000825")]
	[Address(RVA = "0xF3F678", Offset = "0xF3F678", VA = "0xF3F678")]
	private void SetHand(bool value)
	{
	}

	[Token(Token = "0x6000826")]
	[Address(RVA = "0xF3F9FC", Offset = "0xF3F9FC", VA = "0xF3F9FC")]
	private void ResetCurve()
	{
	}

	[Token(Token = "0x6000827")]
	[Address(RVA = "0xF3F718", Offset = "0xF3F718", VA = "0xF3F718")]
	private void AddCurveSegment(CurveSegment cs)
	{
	}

	[Token(Token = "0x6000828")]
	[Address(RVA = "0xF3FC6C", Offset = "0xF3FC6C", VA = "0xF3FC6C")]
	public HandGestureInteractor()
	{
	}
}
[Token(Token = "0x20001F1")]
public class LoadPath : MonoBehaviour
{
	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CinemachinePathVariable path;

	[Token(Token = "0x6000829")]
	[Address(RVA = "0xFC7444", Offset = "0xFC7444", VA = "0xFC7444")]
	private void Awake()
	{
	}

	[Token(Token = "0x600082A")]
	[Address(RVA = "0xFC74B8", Offset = "0xFC74B8", VA = "0xFC74B8")]
	public LoadPath()
	{
	}
}
[Token(Token = "0x20001F2")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB92C0", Offset = "0xCB92C0")]
public class SpellData : ScriptableObject
{
	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5ED0", Offset = "0xCC5ED0")]
	public int m_numberOfCharges;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5F08", Offset = "0xCC5F08")]
	public int m_defaultNumberOfCharges;

	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5F40", Offset = "0xCC5F40")]
	public float m_velocityThreshold;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5F78", Offset = "0xCC5F78")]
	public List<Ammo> m_ammoList;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5FB0", Offset = "0xCC5FB0")]
	public GameObject m_spellPrefab;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC5FE8", Offset = "0xCC5FE8")]
	public GameObject m_muzzleFlash;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6020", Offset = "0xCC6020")]
	public float m_sizeRatio;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6058", Offset = "0xCC6058")]
	public bool m_instant;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6090", Offset = "0xCC6090")]
	public bool m_impact;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC60C8", Offset = "0xCC60C8")]
	public bool m_autoFire;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6100", Offset = "0xCC6100")]
	public bool m_launch;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6138", Offset = "0xCC6138")]
	public bool m_canalized;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6170", Offset = "0xCC6170")]
	public bool m_useModifiers;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC61A8", Offset = "0xCC61A8")]
	public bool m_isHoming;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC61E0", Offset = "0xCC61E0")]
	public List<ModifierData> m_modifiers;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6218", Offset = "0xCC6218")]
	public Event m_akEventCast;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6250", Offset = "0xCC6250")]
	public Event m_akEventHolding;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public int m_damages;

	[Token(Token = "0x600082B")]
	[Address(RVA = "0x1072FFC", Offset = "0x1072FFC", VA = "0x1072FFC")]
	public SpellData()
	{
	}
}
[Token(Token = "0x20001F3")]
public class ShamanSphereInteractor : MonoBehaviour
{
	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_axisName;

	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6298", Offset = "0xCC6298")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6298", Offset = "0xCC6298")]
	public WandDataVariable m_wand;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BoolVariable m_useTrigger;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SpellDataVariable m_spellInHand;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BoolVariable m_otherHandInChoice;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public BoolVariable m_otherHandInGesture;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BoolVariable m_handInGesture;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public BoolVariable m_arrowSelected;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool m_overrideTrigger;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC62E8", Offset = "0xCC62E8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC62E8", Offset = "0xCC62E8")]
	public ObjectArrayUnityEvent OnHandShamanSphereInteracted;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ObjectArrayUnityEvent OnHandShamanSphereLeave;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public BoolVariable m_shamanSphereNavMode;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private bool _interacting;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
	private bool _triggerPressed;

	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
	private bool _trigger;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject m_shamanSphere;

	[Token(Token = "0x600082C")]
	[Address(RVA = "0x101E984", Offset = "0x101E984", VA = "0x101E984")]
	public void Start()
	{
	}

	[Token(Token = "0x600082D")]
	[Address(RVA = "0x101E9D4", Offset = "0x101E9D4", VA = "0x101E9D4")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600082E")]
	[Address(RVA = "0x101EBF0", Offset = "0x101EBF0", VA = "0x101EBF0")]
	private void ActivateCrystals()
	{
	}

	[Token(Token = "0x600082F")]
	[Address(RVA = "0x101F2A8", Offset = "0x101F2A8", VA = "0x101F2A8")]
	private void DeactivateCrystals()
	{
	}

	[Token(Token = "0x6000830")]
	[Address(RVA = "0x101F778", Offset = "0x101F778", VA = "0x101F778")]
	public void DeactivateCrystalsWithException(int instanceId)
	{
	}

	[Token(Token = "0x6000831")]
	[Address(RVA = "0x101FBB0", Offset = "0x101FBB0", VA = "0x101FBB0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000832")]
	[Address(RVA = "0x101FDC0", Offset = "0x101FDC0", VA = "0x101FDC0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000833")]
	[Address(RVA = "0x101F150", Offset = "0x101F150", VA = "0x101F150")]
	public void Interaction()
	{
	}

	[Token(Token = "0x6000834")]
	[Address(RVA = "0x101FC38", Offset = "0x101FC38", VA = "0x101FC38")]
	public void LeaveShamanSphere()
	{
	}

	[Token(Token = "0x6000835")]
	[Address(RVA = "0x101FF20", Offset = "0x101FF20", VA = "0x101FF20")]
	public ShamanSphereInteractor()
	{
	}
}
[Token(Token = "0x20001F4")]
internal class boolVariable
{
	[Token(Token = "0x6000836")]
	[Address(RVA = "0x110D8E8", Offset = "0x110D8E8", VA = "0x110D8E8")]
	public boolVariable()
	{
	}
}
[Token(Token = "0x20001F5")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9320", Offset = "0xCB9320")]
public class HapticsData : ScriptableObject
{
	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC6338", Offset = "0xCC6338")]
	public float m_intensity;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC6350", Offset = "0xCC6350")]
	public float m_duration;

	[Token(Token = "0x6000837")]
	[Address(RVA = "0xF404E0", Offset = "0xF404E0", VA = "0xF404E0")]
	public HapticsData()
	{
	}
}
[Token(Token = "0x20001F6")]
public class Inject : MonoBehaviour
{
	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable m_variableToInject;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6368", Offset = "0xCC6368")]
	public GameObject m_gameObjectToInject;

	[Token(Token = "0x6000838")]
	[Address(RVA = "0xFBB5E0", Offset = "0xFBB5E0", VA = "0xFBB5E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000839")]
	[Address(RVA = "0xFBB694", Offset = "0xFBB694", VA = "0xFBB694")]
	public Inject()
	{
	}
}
[Token(Token = "0x20001F7")]
public static class Finder
{
	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<int, PlanetData> m_planetInstances;

	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static Dictionary<int, GameObject> m_instanceIdPlanetDataToGameObjectPlanet;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static Dictionary<int, MoonData> m_moonInstances;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static Dictionary<int, GameObject> m_instanceIDTable;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public static Dictionary<int, GameObject> m_enemiesIDTable;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public static Dictionary<int, ActorStruct> m_actorStructTable;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public static Dictionary<int, ActorStruct> m_actorSpawnerTable;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public static Dictionary<int, Label> m_spawnerCurve;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public static ActorCollection m_actorDatas;

	[Token(Token = "0x600083A")]
	[Address(RVA = "0xF3A1B8", Offset = "0xF3A1B8", VA = "0xF3A1B8")]
	public static Label FindLabel(string labelName)
	{
		return null;
	}

	[Token(Token = "0x600083B")]
	[Address(RVA = "0xF3A390", Offset = "0xF3A390", VA = "0xF3A390")]
	public static ActorData FindActorDataWithInstanceId(int configId, ActorCollection actorDatas)
	{
		return null;
	}

	[Token(Token = "0x600083C")]
	[Address(RVA = "0xF2FF90", Offset = "0xF2FF90", VA = "0xF2FF90")]
	public static ActorData FindActorDataWithInstanceId(int configId)
	{
		return null;
	}

	[Token(Token = "0x600083D")]
	[Address(RVA = "0xF2F588", Offset = "0xF2F588", VA = "0xF2F588")]
	public static void AddActorData(ActorData data)
	{
	}

	[Token(Token = "0x600083E")]
	[Address(RVA = "0xF3A458", Offset = "0xF3A458", VA = "0xF3A458")]
	public static void RemoveActorData(ActorData data)
	{
	}

	[Token(Token = "0x600083F")]
	[Address(RVA = "0xF2ECAC", Offset = "0xF2ECAC", VA = "0xF2ECAC")]
	public static void ClearActorDataCollection()
	{
	}

	[Token(Token = "0x6000840")]
	[Address(RVA = "0xF2ED28", Offset = "0xF2ED28", VA = "0xF2ED28")]
	public static GameObject FindGameObjectByLabel(string labelName)
	{
		return null;
	}

	[Token(Token = "0x6000841")]
	[Address(RVA = "0xF3A52C", Offset = "0xF3A52C", VA = "0xF3A52C")]
	public static GameObject FindGameObjectByLabel(string labelName, GameObject parent)
	{
		return null;
	}

	[Token(Token = "0x6000842")]
	[Address(RVA = "0xF3A628", Offset = "0xF3A628", VA = "0xF3A628")]
	public static GameObject FindGameObjectByLabel(string labelName, int parentInstanceId)
	{
		return null;
	}

	[Token(Token = "0x6000843")]
	[Address(RVA = "0xF3A748", Offset = "0xF3A748", VA = "0xF3A748")]
	public static List<GameObject> FindGameObjectsByLabel(string labelName)
	{
		return null;
	}

	[Token(Token = "0x6000844")]
	[Address(RVA = "0xF2F9D0", Offset = "0xF2F9D0", VA = "0xF2F9D0")]
	public static GameObject FindGameObjectWithInstanceId(int instanceId)
	{
		return null;
	}

	[Token(Token = "0x6000845")]
	[Address(RVA = "0xF2F65C", Offset = "0xF2F65C", VA = "0xF2F65C")]
	public static ActorStruct FindActorStructWithInstanceId(int instanceId)
	{
		return default(ActorStruct);
	}

	[Token(Token = "0x6000846")]
	[Address(RVA = "0xF3A954", Offset = "0xF3A954", VA = "0xF3A954")]
	public static ActorStruct FindActorSpawnerStructWithInstanceId(int instanceId)
	{
		return default(ActorStruct);
	}

	[Token(Token = "0x6000847")]
	public static T FindComponentInChildren<T>(GameObject parent)
	{
		return (T)null;
	}
}
[Token(Token = "0x20001F8")]
public class LerpToPosition : CacheBehaviour
{
	[Token(Token = "0x20005D3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF3A0", Offset = "0xCBF3A0")]
	private sealed class <StartLerpWithDelay>d__3 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LerpToPosition <>4__this;

		[Token(Token = "0x1700037B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021C0")]
			[Address(RVA = "0xFC22C4", Offset = "0xFC22C4", VA = "0xFC22C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021C2")]
			[Address(RVA = "0xFC232C", Offset = "0xFC232C", VA = "0xFC232C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021BD")]
		[Address(RVA = "0xFC20B8", Offset = "0xFC20B8", VA = "0xFC20B8")]
		[DebuggerHidden]
		public <StartLerpWithDelay>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60021BE")]
		[Address(RVA = "0xFC2204", Offset = "0xFC2204", VA = "0xFC2204", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021BF")]
		[Address(RVA = "0xFC2208", Offset = "0xFC2208", VA = "0xFC2208", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021C1")]
		[Address(RVA = "0xFC22CC", Offset = "0xFC22CC", VA = "0xFC22CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 m_destination;

	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_timeToLerp;

	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector3 _startPosition;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private float _timeToSpend;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private bool _started;

	[Token(Token = "0x6000849")]
	[Address(RVA = "0xFC1FE0", Offset = "0xFC1FE0", VA = "0xFC1FE0")]
	public void StartLerp()
	{
	}

	[Token(Token = "0x600084A")]
	[Address(RVA = "0xFC202C", Offset = "0xFC202C", VA = "0xFC202C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD149C", Offset = "0xCD149C")]
	public IEnumerator<float> StartLerpWithDelay(float delay)
	{
		return null;
	}

	[Token(Token = "0x600084B")]
	[Address(RVA = "0xFC20E4", Offset = "0xFC20E4", VA = "0xFC20E4")]
	private void Update()
	{
	}

	[Token(Token = "0x600084C")]
	[Address(RVA = "0xFC21F4", Offset = "0xFC21F4", VA = "0xFC21F4")]
	public LerpToPosition()
	{
	}
}
[Token(Token = "0x20001F9")]
public class LerpToTarget : MonoBehaviour
{
	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable m_target;

	[Token(Token = "0x600084D")]
	[Address(RVA = "0xFC2390", Offset = "0xFC2390", VA = "0xFC2390")]
	private void Update()
	{
	}

	[Token(Token = "0x600084E")]
	[Address(RVA = "0xFC25A0", Offset = "0xFC25A0", VA = "0xFC25A0")]
	public LerpToTarget()
	{
	}
}
[Token(Token = "0x20001FA")]
public class LightColorFader : CacheBehaviour
{
	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ColorVariable m_destination;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_speed;

	[Token(Token = "0x600084F")]
	[Address(RVA = "0xFC6884", Offset = "0xFC6884", VA = "0xFC6884")]
	private void Update()
	{
	}

	[Token(Token = "0x6000850")]
	[Address(RVA = "0xFC6994", Offset = "0xFC6994", VA = "0xFC6994")]
	public LightColorFader()
	{
	}
}
[Token(Token = "0x20001FB")]
public class LookAtTarget : CacheBehaviour
{
	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool m_moveForwardAfterLookAt;

	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObjectVariable m_target;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC63A0", Offset = "0xCC63A0")]
	public bool m_x;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	public bool m_y;

	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	public bool m_z;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
	private bool _updateErrorShown;

	[Token(Token = "0x6000851")]
	[Address(RVA = "0xFCC7AC", Offset = "0xFCC7AC", VA = "0xFCC7AC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000852")]
	[Address(RVA = "0xFCCB44", Offset = "0xFCCB44", VA = "0xFCCB44")]
	private void Update()
	{
	}

	[Token(Token = "0x6000853")]
	[Address(RVA = "0xFB93C4", Offset = "0xFB93C4", VA = "0xFB93C4")]
	public void LookAt()
	{
	}

	[Token(Token = "0x6000854")]
	[Address(RVA = "0xFCCE98", Offset = "0xFCCE98", VA = "0xFCCE98")]
	public LookAtTarget()
	{
	}
}
[Token(Token = "0x20001FC")]
public class LookAtWorldOrigin : MonoBehaviour
{
	[Token(Token = "0x6000855")]
	[Address(RVA = "0x10C223C", Offset = "0x10C223C", VA = "0x10C223C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000856")]
	[Address(RVA = "0x10C22F4", Offset = "0x10C22F4", VA = "0x10C22F4")]
	public LookAtWorldOrigin()
	{
	}
}
[Token(Token = "0x20001FD")]
public class LookAtWorldOriginYAxisIgnored : MonoBehaviour
{
	[Token(Token = "0x6000857")]
	[Address(RVA = "0x10C22FC", Offset = "0x10C22FC", VA = "0x10C22FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000858")]
	[Address(RVA = "0x10C237C", Offset = "0x10C237C", VA = "0x10C237C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000859")]
	[Address(RVA = "0x10C23FC", Offset = "0x10C23FC", VA = "0x10C23FC")]
	public LookAtWorldOriginYAxisIgnored()
	{
	}
}
[Token(Token = "0x20001FE")]
public class ResetRotation : MonoBehaviour
{
	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float _baseRotationX;

	[Token(Token = "0x600085A")]
	[Address(RVA = "0xFF8924", Offset = "0xFF8924", VA = "0xFF8924")]
	private void Awake()
	{
	}

	[Token(Token = "0x600085B")]
	[Address(RVA = "0xFF8930", Offset = "0xFF8930", VA = "0xFF8930")]
	private void Start()
	{
	}

	[Token(Token = "0x600085C")]
	[Address(RVA = "0xFF8934", Offset = "0xFF8934", VA = "0xFF8934")]
	private void Update()
	{
	}

	[Token(Token = "0x600085D")]
	[Address(RVA = "0xFF89DC", Offset = "0xFF89DC", VA = "0xFF89DC")]
	public ResetRotation()
	{
	}
}
[Token(Token = "0x20001FF")]
public class Rotate : CacheBehaviour
{
	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 m_orientation;

	[Token(Token = "0x4000B1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_speed;

	[Token(Token = "0x4000B1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_random;

	[Token(Token = "0x600085E")]
	[Address(RVA = "0xFFAC34", Offset = "0xFFAC34", VA = "0xFFAC34")]
	private void Start()
	{
	}

	[Token(Token = "0x600085F")]
	[Address(RVA = "0xFFACE0", Offset = "0xFFACE0", VA = "0xFFACE0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000860")]
	[Address(RVA = "0xFFADC0", Offset = "0xFFADC0", VA = "0xFFADC0")]
	public Rotate()
	{
	}
}
[Token(Token = "0x2000200")]
public class TriggerEvent : MonoBehaviour
{
	[Token(Token = "0x4000B1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_useTag;

	[Token(Token = "0x4000B20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_tag;

	[Token(Token = "0x4000B21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_useTriggerExit;

	[Token(Token = "0x4000B22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool m_useLayerMaskFilter;

	[Token(Token = "0x4000B23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public LayerMask m_layerToCollideWith;

	[Token(Token = "0x4000B24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC63D8", Offset = "0xCC63D8")]
	public bool m_useIntEnterEvent;

	[Token(Token = "0x4000B25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent m_OnTriggerEnter;

	[Token(Token = "0x4000B26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntUnityEvent m_OnTriggerEnterInt;

	[Token(Token = "0x4000B27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6410", Offset = "0xCC6410")]
	public bool m_useIntExitEvent;

	[Token(Token = "0x4000B28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEvent m_OnTriggerExit;

	[Token(Token = "0x4000B29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public IntUnityEvent m_OnTriggerExitInt;

	[Token(Token = "0x4000B2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool m_useInstanceId;

	[Token(Token = "0x4000B2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject instanceIdGo;

	[Token(Token = "0x6000861")]
	[Address(RVA = "0x10FBB84", Offset = "0x10FBB84", VA = "0x10FBB84")]
	public void Start()
	{
	}

	[Token(Token = "0x6000862")]
	[Address(RVA = "0x10FBB88", Offset = "0x10FBB88", VA = "0x10FBB88")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000863")]
	[Address(RVA = "0x10FBCB4", Offset = "0x10FBCB4", VA = "0x10FBCB4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000864")]
	[Address(RVA = "0x10FBDE8", Offset = "0x10FBDE8", VA = "0x10FBDE8")]
	public TriggerEvent()
	{
	}
}
[Token(Token = "0x2000201")]
public class TriggerEventInputWithDelay : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF3B0", Offset = "0xCBF3B0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__6_0;

		[Token(Token = "0x60021C4")]
		[Address(RVA = "0x10FC090", Offset = "0x10FC090", VA = "0x10FC090")]
		public <>c()
		{
		}

		[Token(Token = "0x60021C5")]
		[Address(RVA = "0x10FC098", Offset = "0x10FC098", VA = "0x10FC098")]
		internal bool <OnTriggerStay>b__6_0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000B2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_tag;

	[Token(Token = "0x4000B2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_axisName;

	[Token(Token = "0x4000B2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float m_delay;

	[Token(Token = "0x4000B2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public StringUnityEvent OnTriggerDelay;

	[Token(Token = "0x4000B30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform parent;

	[Token(Token = "0x4000B31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _delay;

	[Token(Token = "0x4000B32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private bool _interacted;

	[Token(Token = "0x6000865")]
	[Address(RVA = "0x10FBDF0", Offset = "0x10FBDF0", VA = "0x10FBDF0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000866")]
	[Address(RVA = "0x10FBDFC", Offset = "0x10FBDFC", VA = "0x10FBDFC")]
	private void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000867")]
	[Address(RVA = "0x10FC010", Offset = "0x10FC010", VA = "0x10FC010")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000868")]
	[Address(RVA = "0x10FC020", Offset = "0x10FC020", VA = "0x10FC020")]
	public TriggerEventInputWithDelay()
	{
	}
}
[Token(Token = "0x2000202")]
public class WaitForTimeEvent : MonoBehaviour
{
	[Token(Token = "0x4000B33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TrailRenderer m_trailRenderer;

	[Token(Token = "0x4000B34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int m_instanceId;

	[Token(Token = "0x4000B35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntUnityEvent m_OnActorFinishedAction;

	[Token(Token = "0x4000B36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float _time;

	[Token(Token = "0x4000B37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool _finished;

	[Token(Token = "0x6000869")]
	[Address(RVA = "0x110764C", Offset = "0x110764C", VA = "0x110764C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600086A")]
	[Address(RVA = "0x1107668", Offset = "0x1107668", VA = "0x1107668")]
	private void Start()
	{
	}

	[Token(Token = "0x600086B")]
	[Address(RVA = "0x110769C", Offset = "0x110769C", VA = "0x110769C")]
	private void Update()
	{
	}

	[Token(Token = "0x600086C")]
	[Address(RVA = "0x110777C", Offset = "0x110777C", VA = "0x110777C")]
	public WaitForTimeEvent()
	{
	}
}
[Token(Token = "0x2000203")]
public class PlateauManager : MonoBehaviour
{
	[Token(Token = "0x4000B38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> plateaux;

	[Token(Token = "0x4000B39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnWinGame;

	[Token(Token = "0x600086D")]
	[Address(RVA = "0xFECE4C", Offset = "0xFECE4C", VA = "0xFECE4C")]
	public void PlateauActivator(int plateauNumber)
	{
	}

	[Token(Token = "0x600086E")]
	[Address(RVA = "0xFECEF4", Offset = "0xFECEF4", VA = "0xFECEF4")]
	public PlateauManager()
	{
	}
}
[Token(Token = "0x2000204")]
public class PerkManager : MonoBehaviour
{
	[Token(Token = "0x600086F")]
	[Address(RVA = "0xFE8B9C", Offset = "0xFE8B9C", VA = "0xFE8B9C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000870")]
	[Address(RVA = "0xFE8BA0", Offset = "0xFE8BA0", VA = "0xFE8BA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000871")]
	[Address(RVA = "0xFE8BA4", Offset = "0xFE8BA4", VA = "0xFE8BA4")]
	public PerkManager()
	{
	}
}
[Token(Token = "0x2000205")]
public class GobelinManager : ActorManager
{
	[Token(Token = "0x4000B3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public IntUnityEvent m_destroyGobelin;

	[Token(Token = "0x4000B3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public UnityEvent m_onGoblinLevelFinished;

	[Token(Token = "0x4000B3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[HideInInspector]
	public float m_increment;

	[Token(Token = "0x4000B3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
	[HideInInspector]
	public float m_stayTime;

	[Token(Token = "0x4000B3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public bool m_isIntVar;

	[Token(Token = "0x4000B3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	[HideInInspector]
	public FloatVariable m_varFloat;

	[Token(Token = "0x4000B40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[HideInInspector]
	public IntVariable m_varInt;

	[Token(Token = "0x4000B41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[HideInInspector]
	public bool m_spawnedByPertubatorsManager;

	[Token(Token = "0x4000B42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
	private float _stayingTime;

	[Token(Token = "0x4000B43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private float _currentTime;

	[Token(Token = "0x4000B44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
	private bool _staying;

	[Token(Token = "0x4000B45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x185")]
	private bool _waitingDestruction;

	[Token(Token = "0x4000B46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private GobelinData _data;

	[Token(Token = "0x6000872")]
	[Address(RVA = "0xF3D774", Offset = "0xF3D774", VA = "0xF3D774")]
	public int InstanceId()
	{
		return default(int);
	}

	[Token(Token = "0x6000873")]
	[Address(RVA = "0xF2F750", Offset = "0xF2F750", VA = "0xF2F750")]
	public void SetData(GobelinData data)
	{
	}

	[Token(Token = "0x6000874")]
	[Address(RVA = "0xF3D77C", Offset = "0xF3D77C", VA = "0xF3D77C")]
	public void OnlyStartWhenOnGrid()
	{
	}

	[Token(Token = "0x6000875")]
	[Address(RVA = "0xF3D78C", Offset = "0xF3D78C", VA = "0xF3D78C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000876")]
	[Address(RVA = "0xF3D7C4", Offset = "0xF3D7C4", VA = "0xF3D7C4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000877")]
	[Address(RVA = "0xF3DA2C", Offset = "0xF3DA2C", VA = "0xF3DA2C", Slot = "4")]
	public override void OnReceivedSnapPosition(Vector3IntGameEventStruct str)
	{
	}

	[Token(Token = "0x6000878")]
	[Address(RVA = "0xF3DB14", Offset = "0xF3DB14", VA = "0xF3DB14")]
	public void OnTriggerEnter()
	{
	}

	[Token(Token = "0x6000879")]
	[Address(RVA = "0xF3DBB4", Offset = "0xF3DBB4", VA = "0xF3DBB4")]
	public GobelinManager()
	{
	}
}
[Token(Token = "0x2000206")]
public class PertubatorsManager : CacheBehaviour
{
	[Token(Token = "0x4000B47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC64B8", Offset = "0xCC64B8")]
	public FloatVariable m_timeBetweenCheck;

	[Token(Token = "0x4000B48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC64F0", Offset = "0xCC64F0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC64F0", Offset = "0xCC64F0")]
	public List<GobelinData> m_listCurrencyGobelin;

	[Token(Token = "0x4000B49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<GobelinData> m_listLifeGobelin;

	[Token(Token = "0x4000B4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public List<GobelinData> m_listManaGobelin;

	[Token(Token = "0x4000B4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6540", Offset = "0xCC6540")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6540", Offset = "0xCC6540")]
	public FloatVariable m_oddsCurrencyGobelin;

	[Token(Token = "0x4000B4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public FloatVariable m_oddsLifeGobelin;

	[Token(Token = "0x4000B4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public FloatVariable m_oddsManaGobelin;

	[Token(Token = "0x4000B4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6590", Offset = "0xCC6590")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6590", Offset = "0xCC6590")]
	public IntVariable m_maxAmountCurrencyGobelin;

	[Token(Token = "0x4000B4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntVariable m_maxAmountLifeGobelin;

	[Token(Token = "0x4000B50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public IntVariable m_maxAmountManaGobelin;

	[Token(Token = "0x4000B51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC65E0", Offset = "0xCC65E0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC65E0", Offset = "0xCC65E0")]
	public FloatVariable m_gobelinChance;

	[Token(Token = "0x4000B52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6630", Offset = "0xCC6630")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6630", Offset = "0xCC6630")]
	public IntVariable m_scoreMultiplier;

	[Token(Token = "0x4000B53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6680", Offset = "0xCC6680")]
	public SpawnGrid m_gridManager;

	[Token(Token = "0x4000B54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC66B8", Offset = "0xCC66B8")]
	public DirectorManager m_directorManager;

	[Token(Token = "0x4000B55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float _beginTime;

	[Token(Token = "0x4000B56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private float _currentTime;

	[Token(Token = "0x4000B57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private bool _started;

	[Token(Token = "0x600087A")]
	[Address(RVA = "0xFE9060", Offset = "0xFE9060", VA = "0xFE9060")]
	public void StartCheckingOdds()
	{
	}

	[Token(Token = "0x600087B")]
	[Address(RVA = "0xFE9090", Offset = "0xFE9090", VA = "0xFE9090")]
	public void StopCheckingOdds()
	{
	}

	[Token(Token = "0x600087C")]
	[Address(RVA = "0xFE90A0", Offset = "0xFE90A0", VA = "0xFE90A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600087D")]
	[Address(RVA = "0xFE9144", Offset = "0xFE9144", VA = "0xFE9144")]
	private void CheckAndInstantiate()
	{
	}

	[Token(Token = "0x600087E")]
	[Address(RVA = "0xFE937C", Offset = "0xFE937C", VA = "0xFE937C")]
	private void InstantiateGobelins(List<GobelinData> list, IntVariable amountVariable)
	{
	}

	[Token(Token = "0x600087F")]
	[Address(RVA = "0xFE9268", Offset = "0xFE9268", VA = "0xFE9268")]
	private bool CheckOdds(FloatVariable oddsVariable)
	{
		return default(bool);
	}

	[Token(Token = "0x6000880")]
	[Address(RVA = "0xFE980C", Offset = "0xFE980C", VA = "0xFE980C")]
	public PertubatorsManager()
	{
	}
}
[Token(Token = "0x2000207")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9380", Offset = "0xCB9380")]
public class GobelinData : ActorData
{
	[Token(Token = "0x20005D5")]
	public enum VariableType
	{
		[Token(Token = "0x4001CA2")]
		FLOAT,
		[Token(Token = "0x4001CA3")]
		INT
	}

	[Token(Token = "0x4000B58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC66F0", Offset = "0xCC66F0")]
	public VariableType m_variableAffectedType;

	[Token(Token = "0x4000B59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public FloatVariable m_variableAffectedFloat;

	[Token(Token = "0x4000B5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public IntVariable m_variableAffectedInt;

	[Token(Token = "0x4000B5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6728", Offset = "0xCC6728")]
	public float m_incrementAmountOnHit;

	[Token(Token = "0x4000B5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float m_stayTime;

	[Token(Token = "0x6000881")]
	[Address(RVA = "0xF3D718", Offset = "0xF3D718", VA = "0xF3D718")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000882")]
	[Address(RVA = "0xF3D76C", Offset = "0xF3D76C", VA = "0xF3D76C")]
	public GobelinData()
	{
	}
}
[Token(Token = "0x2000208")]
public class LifeSupportManager : CacheBehaviour
{
	[Token(Token = "0x20005D6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF3C0", Offset = "0xCBF3C0")]
	private sealed class <WaitForShamanSphere>d__40 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LifeSupportManager <>4__this;

		[Token(Token = "0x1700037D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021C9")]
			[Address(RVA = "0xFC67B8", Offset = "0xFC67B8", VA = "0xFC67B8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700037E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021CB")]
			[Address(RVA = "0xFC6820", Offset = "0xFC6820", VA = "0xFC6820", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021C6")]
		[Address(RVA = "0xFC5E68", Offset = "0xFC5E68", VA = "0xFC5E68")]
		[DebuggerHidden]
		public <WaitForShamanSphere>d__40(int <>1__state)
		{
		}

		[Token(Token = "0x60021C7")]
		[Address(RVA = "0xFC6614", Offset = "0xFC6614", VA = "0xFC6614", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021C8")]
		[Address(RVA = "0xFC6618", Offset = "0xFC6618", VA = "0xFC6618", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021CA")]
		[Address(RVA = "0xFC67C0", Offset = "0xFC67C0", VA = "0xFC67C0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000B5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<string> m_handTags;

	[Token(Token = "0x4000B5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC673C", Offset = "0xCC673C")]
	public GameObject m_lifeSupportAfterEnemyDeath;

	[Token(Token = "0x4000B5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_lifeSupportInHand;

	[Token(Token = "0x4000B60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Vector3 m_lifeSupportInHandOffset;

	[Token(Token = "0x4000B61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public Vector3 m_lifeSupportInHandScale;

	[Token(Token = "0x4000B62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_lifeSupportLaunch;

	[Token(Token = "0x4000B63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject m_qteObjectManager;

	[Token(Token = "0x4000B64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x4000B65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6774", Offset = "0xCC6774")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6774", Offset = "0xCC6774")]
	public IntVariable m_lifeSupportChance;

	[Token(Token = "0x4000B66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public IntVariable m_lifeSupportAcquired;

	[Token(Token = "0x4000B67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public BoolVariable m_useBatchSystem;

	[Token(Token = "0x4000B68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public IntVariable m_currentBatchEnemyCount;

	[Token(Token = "0x4000B69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public IntVariable m_currentBatchIndex;

	[Token(Token = "0x4000B6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public IntVariable m_numberOfBatches;

	[Token(Token = "0x4000B6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public IntVariable m_leftCharges;

	[Token(Token = "0x4000B6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public IntVariable m_rightCharges;

	[Token(Token = "0x4000B6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC67C4", Offset = "0xCC67C4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC67C4", Offset = "0xCC67C4")]
	public float m_lerpToBackTime;

	[Token(Token = "0x4000B6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6814", Offset = "0xCC6814")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6814", Offset = "0xCC6814")]
	public GameObject m_rightGripPressed;

	[Token(Token = "0x4000B6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public GameObject m_rigthGripReleased;

	[Token(Token = "0x4000B70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public GameObject m_leftGripPressed;

	[Token(Token = "0x4000B71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public GameObject m_leftGripReleased;

	[Token(Token = "0x4000B72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public StringUnityEvent OnAllChargesLaunchedString;

	[Token(Token = "0x4000B73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6864", Offset = "0xCC6864")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6864", Offset = "0xCC6864")]
	public Transform m_rightHandTransform;

	[Token(Token = "0x4000B74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public Transform m_leftHandTransform;

	[Token(Token = "0x4000B75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC68B4", Offset = "0xCC68B4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC68B4", Offset = "0xCC68B4")]
	public GameObjectVariable m_nextMoonToRegen;

	[Token(Token = "0x4000B76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6904", Offset = "0xCC6904")]
	public float m_goingToMoonTime;

	[Token(Token = "0x4000B77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC693C", Offset = "0xCC693C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC693C", Offset = "0xCC693C")]
	public UnityEvent OnLifeSupportAcquired;

	[Token(Token = "0x4000B78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public UnityEvent OnLifeSupportSent;

	[Token(Token = "0x4000B79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public UnityEvent OnDestroySpells;

	[Token(Token = "0x4000B7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC698C", Offset = "0xCC698C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC698C", Offset = "0xCC698C")]
	public MoonSelector m_moonSelector;

	[Token(Token = "0x4000B7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private List<GameObject> _lifeSupports;

	[Token(Token = "0x4000B7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private List<float> _lifeSupportsLerpTime;

	[Token(Token = "0x4000B7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private GameObject _lifeSupportToLaunch;

	[Token(Token = "0x4000B7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private bool _supportsToLerp;

	[Token(Token = "0x4000B7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
	private bool _supportsGrabbed;

	[Token(Token = "0x4000B80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CA")]
	private bool _intoGrabArea;

	[Token(Token = "0x4000B81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CB")]
	private bool _supportGoingToMoon;

	[Token(Token = "0x4000B82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private bool _shockwaving;

	[Token(Token = "0x4000B83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float _supportGoingToMoonTime;

	[Token(Token = "0x4000B84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 _supportOriginPos;

	[Token(Token = "0x4000B85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Transform _moonToRegenTransform;

	[Token(Token = "0x4000B86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private Transform _handTransform;

	[Token(Token = "0x4000B87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private bool _inRightHand;

	[Token(Token = "0x4000B88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private GameObject _tempGO;

	[Token(Token = "0x4000B89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private Vector3 _shamanSphereOriginalPos;

	[Token(Token = "0x4000B8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
	private bool _dead;

	[Token(Token = "0x6000883")]
	[Address(RVA = "0xFC47CC", Offset = "0xFC47CC", VA = "0xFC47CC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000884")]
	[Address(RVA = "0xFC4830", Offset = "0xFC4830", VA = "0xFC4830")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000885")]
	[Address(RVA = "0xFC4C9C", Offset = "0xFC4C9C", VA = "0xFC4C9C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000886")]
	[Address(RVA = "0xFC4DB4", Offset = "0xFC4DB4", VA = "0xFC4DB4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000887")]
	[Address(RVA = "0xFC4EB8", Offset = "0xFC4EB8", VA = "0xFC4EB8")]
	public void OnActorDeadPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000888")]
	[Address(RVA = "0xFC5508", Offset = "0xFC5508", VA = "0xFC5508")]
	public void OnBossDead()
	{
	}

	[Token(Token = "0x6000889")]
	[Address(RVA = "0xFC56BC", Offset = "0xFC56BC", VA = "0xFC56BC")]
	public void OnButtonPressed(bool isRight)
	{
	}

	[Token(Token = "0x600088A")]
	[Address(RVA = "0xFC5868", Offset = "0xFC5868", VA = "0xFC5868")]
	public void OnLevelStarted()
	{
	}

	[Token(Token = "0x600088B")]
	[Address(RVA = "0xFC58AC", Offset = "0xFC58AC", VA = "0xFC58AC")]
	public void OnLevelFinished()
	{
	}

	[Token(Token = "0x600088C")]
	[Address(RVA = "0xFC58C8", Offset = "0xFC58C8", VA = "0xFC58C8")]
	public void OnQTELifeSupportSent()
	{
	}

	[Token(Token = "0x600088D")]
	[Address(RVA = "0xFC5DEC", Offset = "0xFC5DEC", VA = "0xFC5DEC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1500", Offset = "0xCD1500")]
	public IEnumerator<float> WaitForShamanSphere()
	{
		return null;
	}

	[Token(Token = "0x600088E")]
	[Address(RVA = "0xFC5E94", Offset = "0xFC5E94", VA = "0xFC5E94")]
	public void OnDeath()
	{
	}

	[Token(Token = "0x600088F")]
	[Address(RVA = "0xFC5F4C", Offset = "0xFC5F4C", VA = "0xFC5F4C")]
	public void OnButtonReleased(bool isRight)
	{
	}

	[Token(Token = "0x6000890")]
	[Address(RVA = "0xFC6374", Offset = "0xFC6374", VA = "0xFC6374")]
	public void OnPlanetRegenerated()
	{
	}

	[Token(Token = "0x6000891")]
	[Address(RVA = "0xFC63F0", Offset = "0xFC63F0", VA = "0xFC63F0")]
	public void OnShockwaveFinished()
	{
	}

	[Token(Token = "0x6000892")]
	[Address(RVA = "0xFC63F8", Offset = "0xFC63F8", VA = "0xFC63F8")]
	public LifeSupportManager()
	{
	}
}
[Token(Token = "0x2000209")]
public class MoonSelector : CacheBehaviour
{
	[Token(Token = "0x4000B8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC69DC", Offset = "0xCC69DC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC69DC", Offset = "0xCC69DC")]
	public GameObjectVariable m_nextMoonToRegen;

	[Token(Token = "0x4000B8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObjectVariable m_autoAimPlanetRight;

	[Token(Token = "0x4000B8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObjectVariable m_autoAimPlanetLeft;

	[Token(Token = "0x4000B8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6A2C", Offset = "0xCC6A2C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6A2C", Offset = "0xCC6A2C")]
	public RegenerationDetector m_regenerationDetector;

	[Token(Token = "0x4000B8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6A7C", Offset = "0xCC6A7C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6A7C", Offset = "0xCC6A7C")]
	public GameObject m_currentMoonReticle;

	[Token(Token = "0x4000B90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_nextMoonReticle;

	[Token(Token = "0x4000B91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_prefabReadyMoonReticle;

	[Token(Token = "0x4000B92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6ACC", Offset = "0xCC6ACC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6ACC", Offset = "0xCC6ACC")]
	public UnityEvent m_OnBeginSelection;

	[Token(Token = "0x4000B93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent m_OnEndSelection;

	[Token(Token = "0x4000B94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public UnityEvent OnReadyDisplayed;

	[Token(Token = "0x4000B95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public UnityEvent OnReadyHidden;

	[Token(Token = "0x4000B96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool _buttonAPressed;

	[Token(Token = "0x4000B97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool _buttonXPressed;

	[Token(Token = "0x4000B98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x112")]
	private bool _rightHandMaster;

	[Token(Token = "0x4000B99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private PlanetRegeneration _currentPlanetRegen;

	[Token(Token = "0x4000B9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameObject _currentMoon;

	[Token(Token = "0x4000B9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private bool _selecting;

	[Token(Token = "0x4000B9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private GameObject _currentMoonSelected;

	[Token(Token = "0x4000B9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 _tempPos;

	[Token(Token = "0x4000B9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private Dictionary<int, GameObject> _readyUI;

	[Token(Token = "0x17000051")]
	public PlanetRegeneration m_currentPlanetRegen
	{
		[Token(Token = "0x6000893")]
		[Address(RVA = "0x10C8948", Offset = "0x10C8948", VA = "0x10C8948")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000894")]
	[Address(RVA = "0x10C8950", Offset = "0x10C8950", VA = "0x10C8950")]
	public void OnButtonOnePressed()
	{
	}

	[Token(Token = "0x6000895")]
	[Address(RVA = "0x10C8B6C", Offset = "0x10C8B6C", VA = "0x10C8B6C")]
	public void OnButtonOneReleased()
	{
	}

	[Token(Token = "0x6000896")]
	[Address(RVA = "0x10C8BD0", Offset = "0x10C8BD0", VA = "0x10C8BD0")]
	public void OnButtonThreePressed()
	{
	}

	[Token(Token = "0x6000897")]
	[Address(RVA = "0x10C8BEC", Offset = "0x10C8BEC", VA = "0x10C8BEC")]
	public void OnButtonThreeReleased()
	{
	}

	[Token(Token = "0x6000898")]
	[Address(RVA = "0x10C8C50", Offset = "0x10C8C50", VA = "0x10C8C50")]
	public void OnRefreshMostPertinentTarget()
	{
	}

	[Token(Token = "0x6000899")]
	[Address(RVA = "0x10C90FC", Offset = "0x10C90FC", VA = "0x10C90FC")]
	public void OnPlanetRegenerated()
	{
	}

	[Token(Token = "0x600089A")]
	[Address(RVA = "0x10C9398", Offset = "0x10C9398", VA = "0x10C9398")]
	public void OnPlanetReady(int instanceid)
	{
	}

	[Token(Token = "0x600089B")]
	[Address(RVA = "0x10C9674", Offset = "0x10C9674", VA = "0x10C9674")]
	public void OnLevelStarted()
	{
	}

	[Token(Token = "0x600089C")]
	[Address(RVA = "0x10C96CC", Offset = "0x10C96CC", VA = "0x10C96CC")]
	private void ShowUI()
	{
	}

	[Token(Token = "0x600089D")]
	[Address(RVA = "0x10C9710", Offset = "0x10C9710", VA = "0x10C9710")]
	public void HideUI()
	{
	}

	[Token(Token = "0x600089E")]
	[Address(RVA = "0x10C896C", Offset = "0x10C896C", VA = "0x10C896C")]
	public void BeginSelectMoon()
	{
	}

	[Token(Token = "0x600089F")]
	[Address(RVA = "0x10C984C", Offset = "0x10C984C", VA = "0x10C984C")]
	public void SelectCurrentMoon()
	{
	}

	[Token(Token = "0x60008A0")]
	[Address(RVA = "0x10C9100", Offset = "0x10C9100", VA = "0x10C9100")]
	public void RefreshCurrentMoon()
	{
	}

	[Token(Token = "0x60008A1")]
	[Address(RVA = "0x10C9A34", Offset = "0x10C9A34", VA = "0x10C9A34")]
	public void DeactivateCurrentMoon()
	{
	}

	[Token(Token = "0x60008A2")]
	[Address(RVA = "0x10C9A54", Offset = "0x10C9A54", VA = "0x10C9A54")]
	public void SetHand(bool isRightHand)
	{
	}

	[Token(Token = "0x60008A3")]
	[Address(RVA = "0x10C9A60", Offset = "0x10C9A60", VA = "0x10C9A60")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A4")]
	[Address(RVA = "0x10C9AEC", Offset = "0x10C9AEC", VA = "0x10C9AEC")]
	public MoonSelector()
	{
	}
}
[Token(Token = "0x200020A")]
public enum MoonElement
{
	[Token(Token = "0x4000BA0")]
	Azote,
	[Token(Token = "0x4000BA1")]
	Phosphorus,
	[Token(Token = "0x4000BA2")]
	Carbon,
	[Token(Token = "0x4000BA3")]
	Water,
	[Token(Token = "0x4000BA4")]
	Sulfur
}
[Token(Token = "0x200020B")]
public class PlanetRegeneration : CacheBehaviour
{
	[Token(Token = "0x4000BA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6B1C", Offset = "0xCC6B1C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6B1C", Offset = "0xCC6B1C")]
	public string m_boidBallTag;

	[Token(Token = "0x4000BA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public int m_currentRegenLevel;

	[Token(Token = "0x4000BA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public int m_regenLevelNeeded;

	[Token(Token = "0x4000BA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6B6C", Offset = "0xCC6B6C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6B6C", Offset = "0xCC6B6C")]
	public TextMeshPro m_lifeCounterText;

	[Token(Token = "0x4000BA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LabelHolder m_autoAimHolder;

	[Token(Token = "0x4000BAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6BBC", Offset = "0xCC6BBC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6BBC", Offset = "0xCC6BBC")]
	public GameObjectVariable m_headset;

	[Token(Token = "0x4000BAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntVariable m_lifeSupportAcquired;

	[Token(Token = "0x4000BAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public IntVariable m_currentElementCount;

	[Token(Token = "0x4000BAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6C0C", Offset = "0xCC6C0C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6C0C", Offset = "0xCC6C0C")]
	public IntGameEvent OnPlanetRegenerableCreated;

	[Token(Token = "0x4000BAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public IntGameEvent OnPlanetRegeneratedEvent;

	[Token(Token = "0x4000BAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameEvent OnLifeSupportsSpent;

	[Token(Token = "0x4000BB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public IntUnityEvent OnPlanetReadyEvent;

	[Token(Token = "0x4000BB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public IntGameEvent OnPlanetReadyGameEvent;

	[Token(Token = "0x4000BB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public GameEventListener m_listenerOnLifeSupportAcquired;

	[Token(Token = "0x4000BB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6C5C", Offset = "0xCC6C5C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6C5C", Offset = "0xCC6C5C")]
	public Event m_OnRegeneratedWwiseEvent;

	[Token(Token = "0x4000BB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Color _tempColor;

	[Token(Token = "0x4000BB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Transform _headsetTransform;

	[Token(Token = "0x4000BB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private int _instanceID;

	[Token(Token = "0x4000BB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private bool _regenerated;

	[Token(Token = "0x4000BB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private IDChecker _idchecker;

	[Token(Token = "0x60008A5")]
	[Address(RVA = "0xFEB55C", Offset = "0xFEB55C", VA = "0xFEB55C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008A6")]
	[Address(RVA = "0xFEB5AC", Offset = "0xFEB5AC", VA = "0xFEB5AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60008A7")]
	[Address(RVA = "0xFEB778", Offset = "0xFEB778", VA = "0xFEB778")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60008A8")]
	[Address(RVA = "0xFEB7F4", Offset = "0xFEB7F4", VA = "0xFEB7F4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60008A9")]
	[Address(RVA = "0xFEC094", Offset = "0xFEC094", VA = "0xFEC094")]
	public void OnLifeSupportAcquired()
	{
	}

	[Token(Token = "0x60008AA")]
	[Address(RVA = "0xFEC12C", Offset = "0xFEC12C", VA = "0xFEC12C")]
	private void UpdateTextMeshProAlpha(float value)
	{
	}

	[Token(Token = "0x60008AB")]
	[Address(RVA = "0xFEC198", Offset = "0xFEC198", VA = "0xFEC198")]
	private void OnFadeInComplete()
	{
	}

	[Token(Token = "0x60008AC")]
	[Address(RVA = "0xFEBE08", Offset = "0xFEBE08", VA = "0xFEBE08")]
	private void RunTweenValueTo(string onupdate, float from, float to, float time, float delay = -1f, [Optional] string easeType, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x60008AD")]
	[Address(RVA = "0xFEC214", Offset = "0xFEC214", VA = "0xFEC214")]
	public PlanetRegeneration()
	{
	}
}
[Token(Token = "0x200020C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB93E0", Offset = "0xCB93E0")]
public class TelekineticData : ScriptableObject
{
	[Token(Token = "0x4000BB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_telekineticDistance;

	[Token(Token = "0x4000BBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC6CAC", Offset = "0xCC6CAC")]
	public float m_telekineticForce;

	[Token(Token = "0x4000BBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6CC4", Offset = "0xCC6CC4")]
	public float m_thresholdDistance;

	[Token(Token = "0x4000BBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6CFC", Offset = "0xCC6CFC")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC6CFC", Offset = "0xCC6CFC")]
	public float m_accelerationForce;

	[Token(Token = "0x4000BBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6D50", Offset = "0xCC6D50")]
	public float m_deadZoneAroundPlayer;

	[Token(Token = "0x4000BBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC6D88", Offset = "0xCC6D88")]
	public float m_depthForce;

	[Token(Token = "0x4000BBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6DA0", Offset = "0xCC6DA0")]
	public LayerMask m_affectedLayers;

	[Token(Token = "0x4000BC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6DD8", Offset = "0xCC6DD8")]
	public bool m_useTelekineticEffect;

	[Token(Token = "0x4000BC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_curve;

	[Token(Token = "0x4000BC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6E10", Offset = "0xCC6E10")]
	public bool m_useInertia;

	[Token(Token = "0x4000BC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6E48", Offset = "0xCC6E48")]
	public float m_inertiaSpeed;

	[Token(Token = "0x60008AE")]
	[Address(RVA = "0x1078A2C", Offset = "0x1078A2C", VA = "0x1078A2C")]
	public TelekineticData()
	{
	}
}
[Token(Token = "0x200020D")]
public class PlayerManager : MonoBehaviour
{
	[Token(Token = "0x4000BC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntVariable m_health;

	[Token(Token = "0x4000BC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnDeath;

	[Token(Token = "0x4000BC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_deathPrefab;

	[Token(Token = "0x4000BC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 m_positionDeathPrefab;

	[Token(Token = "0x4000BC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6E80", Offset = "0xCC6E80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC6E80", Offset = "0xCC6E80")]
	public IntVariable m_reviveLives;

	[Token(Token = "0x4000BC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnRevive;

	[Token(Token = "0x4000BCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _touchTimer;

	[Token(Token = "0x4000BCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private bool _touched;

	[Token(Token = "0x60008AF")]
	[Address(RVA = "0xFED284", Offset = "0xFED284", VA = "0xFED284")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B0")]
	[Address(RVA = "0xFED2CC", Offset = "0xFED2CC", VA = "0xFED2CC")]
	public void OnTouched()
	{
	}

	[Token(Token = "0x60008B1")]
	[Address(RVA = "0xFED2E4", Offset = "0xFED2E4", VA = "0xFED2E4")]
	public void DealDamage(int damage = 1, float touchTimer = 1f)
	{
	}

	[Token(Token = "0x60008B2")]
	[Address(RVA = "0xFED574", Offset = "0xFED574", VA = "0xFED574")]
	public PlayerManager()
	{
	}
}
[Token(Token = "0x200020E")]
public class SpellUser : CacheBehaviour
{
	[Token(Token = "0x20005D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF3D0", Offset = "0xCBF3D0")]
	private sealed class <ShootCountdown>d__35 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SpellUser <>4__this;

		[Token(Token = "0x1700037F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021CF")]
			[Address(RVA = "0x107674C", Offset = "0x107674C", VA = "0x107674C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000380")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021D1")]
			[Address(RVA = "0x10767B4", Offset = "0x10767B4", VA = "0x10767B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021CC")]
		[Address(RVA = "0x1075BE8", Offset = "0x1075BE8", VA = "0x1075BE8")]
		[DebuggerHidden]
		public <ShootCountdown>d__35(int <>1__state)
		{
		}

		[Token(Token = "0x60021CD")]
		[Address(RVA = "0x1076648", Offset = "0x1076648", VA = "0x1076648", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021CE")]
		[Address(RVA = "0x107664C", Offset = "0x107664C", VA = "0x107664C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021D0")]
		[Address(RVA = "0x1076754", Offset = "0x1076754", VA = "0x1076754", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000BCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public VelocityTracker m_velocity;

	[Token(Token = "0x4000BCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6ED0", Offset = "0xCC6ED0")]
	public GameObjectVariable m_rightHandSpell;

	[Token(Token = "0x4000BCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SpellDataVariable m_rightHandSpellData;

	[Token(Token = "0x4000BCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObjectVariable m_leftHandSpell;

	[Token(Token = "0x4000BD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SpellDataVariable m_leftHandSpellData;

	[Token(Token = "0x4000BD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntVariable m_numberOfChargeLeft;

	[Token(Token = "0x4000BD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public IntVariable m_numberOfChargeRight;

	[Token(Token = "0x4000BD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_velocityThreshold;

	[Token(Token = "0x4000BD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_shooter;

	[Token(Token = "0x4000BD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public FloatVariable m_manaVariable;

	[Token(Token = "0x4000BD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public BoolVariable m_useTrigger;

	[Token(Token = "0x4000BD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_axisName;

	[Token(Token = "0x4000BD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string m_grabAxisName;

	[Token(Token = "0x4000BD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public BoolVariable m_canShoot;

	[Token(Token = "0x4000BDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public BoolVariable m_isPaused;

	[Token(Token = "0x4000BDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public BoolVariable m_useGunSystem;

	[Token(Token = "0x4000BDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public Vector3Variable m_controllerVelocity;

	[Token(Token = "0x4000BDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6F08", Offset = "0xCC6F08")]
	public float m_baseScale;

	[Token(Token = "0x4000BDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	public float m_scaleFactor;

	[Token(Token = "0x4000BDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6F40", Offset = "0xCC6F40")]
	public FloatVariable m_critOdds;

	[Token(Token = "0x4000BE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public FloatVariable m_critMulti;

	[Token(Token = "0x4000BE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public FloatVariable m_shamanBaseDmgMulti;

	[Token(Token = "0x4000BE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6F78", Offset = "0xCC6F78")]
	public GameObjectVariable m_spell;

	[Token(Token = "0x4000BE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public SpellDataVariable m_spellData;

	[Token(Token = "0x4000BE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public IntVariable m_numberOfCharge;

	[Token(Token = "0x4000BE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6FB0", Offset = "0xCC6FB0")]
	public bool m_useAutoAim;

	[Token(Token = "0x4000BE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObjectVariable m_autoAimedEnemy;

	[Token(Token = "0x4000BE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject m_autoAimCone;

	[Token(Token = "0x4000BE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC6FE8", Offset = "0xCC6FE8")]
	public UnityEvent OnSpellLaunched;

	[Token(Token = "0x4000BE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public UnityEvent OnAllChargesLaunched;

	[Token(Token = "0x4000BEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public StringUnityEvent OnAllChargesLaunchedString;

	[Token(Token = "0x4000BEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObjectGameEvent m_OnSpellLaunched;

	[Token(Token = "0x4000BEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public ObjectGameEvent m_OnSpellDataLaunched;

	[Token(Token = "0x4000BED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Vector3 _velocity;

	[Token(Token = "0x4000BEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
	private bool _reachVelocityTreshold;

	[Token(Token = "0x4000BEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private Vector3 _firstPos;

	[Token(Token = "0x4000BF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D4")]
	private Vector3 _firstShooterForward;

	[Token(Token = "0x4000BF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private bool _slashBegun;

	[Token(Token = "0x4000BF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
	private float _baseScale;

	[Token(Token = "0x4000BF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	private bool _canalized;

	[Token(Token = "0x4000BF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
	private bool _isRight;

	[Token(Token = "0x4000BF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
	private Vector3 _autoAimConeBaseSize;

	[Token(Token = "0x4000BF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private bool _homingUnactive;

	[Token(Token = "0x60008B3")]
	[Address(RVA = "0x1073170", Offset = "0x1073170", VA = "0x1073170")]
	private void Start()
	{
	}

	[Token(Token = "0x60008B4")]
	[Address(RVA = "0x10733A8", Offset = "0x10733A8", VA = "0x10733A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60008B5")]
	[Address(RVA = "0x1075B6C", Offset = "0x1075B6C", VA = "0x1075B6C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1564", Offset = "0xCD1564")]
	private IEnumerator<float> ShootCountdown()
	{
		return null;
	}

	[Token(Token = "0x60008B6")]
	[Address(RVA = "0x1075990", Offset = "0x1075990", VA = "0x1075990")]
	private void BeginDeceleration()
	{
	}

	[Token(Token = "0x60008B7")]
	[Address(RVA = "0x1075C14", Offset = "0x1075C14", VA = "0x1075C14")]
	public void LaunchSpell()
	{
	}

	[Token(Token = "0x60008B8")]
	[Address(RVA = "0x10740E8", Offset = "0x10740E8", VA = "0x10740E8")]
	private void LaunchSpell(SpellDataVariable spellDataVar, GameObjectVariable spellGOVariable, IntVariable chargesVariables, bool tooSoon = false)
	{
	}

	[Token(Token = "0x60008B9")]
	[Address(RVA = "0x1075E0C", Offset = "0x1075E0C", VA = "0x1075E0C")]
	public void DestroySpells()
	{
	}

	[Token(Token = "0x60008BA")]
	[Address(RVA = "0x1075C24", Offset = "0x1075C24", VA = "0x1075C24")]
	private int CalculateDamages(AmmoBehaviour ammoBehav, int baseDamage)
	{
		return default(int);
	}

	[Token(Token = "0x60008BB")]
	[Address(RVA = "0x1076640", Offset = "0x1076640", VA = "0x1076640")]
	public SpellUser()
	{
	}
}
[Token(Token = "0x200020F")]
public class DirectorGenerator : CacheBehaviour
{
	[Token(Token = "0x20005D8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF3E0", Offset = "0xCBF3E0")]
	private sealed class <>c__DisplayClass30_0
	{
		[Token(Token = "0x4001CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string spawnGroup;

		[Token(Token = "0x4001CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Func<SpawnerGroupData, bool> <>9__0;

		[Token(Token = "0x60021D2")]
		[Address(RVA = "0xF2E054", Offset = "0xF2E054", VA = "0xF2E054")]
		public <>c__DisplayClass30_0()
		{
		}

		[Token(Token = "0x60021D3")]
		[Address(RVA = "0xF2E05C", Offset = "0xF2E05C", VA = "0xF2E05C")]
		internal bool <BuildBossLevelDirector>b__0(SpawnerGroupData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF3F0", Offset = "0xCBF3F0")]
	private sealed class <>c__DisplayClass30_1
	{
		[Token(Token = "0x4001CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string actorColumn;

		[Token(Token = "0x60021D4")]
		[Address(RVA = "0xF2E080", Offset = "0xF2E080", VA = "0xF2E080")]
		public <>c__DisplayClass30_1()
		{
		}

		[Token(Token = "0x60021D5")]
		[Address(RVA = "0xF2E088", Offset = "0xF2E088", VA = "0xF2E088")]
		internal bool <BuildBossLevelDirector>b__1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005DA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF400", Offset = "0xCBF400")]
	private sealed class <>c__DisplayClass32_0
	{
		[Token(Token = "0x4001CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string spawnGroup;

		[Token(Token = "0x60021D6")]
		[Address(RVA = "0xF2E09C", Offset = "0xF2E09C", VA = "0xF2E09C")]
		public <>c__DisplayClass32_0()
		{
		}

		[Token(Token = "0x60021D7")]
		[Address(RVA = "0xF2E0A4", Offset = "0xF2E0A4", VA = "0xF2E0A4")]
		internal bool <CreateSpawnList>b__0(SpawnerGroupData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005DB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF410", Offset = "0xCBF410")]
	private sealed class <>c__DisplayClass32_1
	{
		[Token(Token = "0x4001CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int j;

		[Token(Token = "0x60021D8")]
		[Address(RVA = "0xF2E0C8", Offset = "0xF2E0C8", VA = "0xF2E0C8")]
		public <>c__DisplayClass32_1()
		{
		}

		[Token(Token = "0x60021D9")]
		[Address(RVA = "0xF2E0D0", Offset = "0xF2E0D0", VA = "0xF2E0D0")]
		internal bool <CreateSpawnList>b__2(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005DC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF420", Offset = "0xCBF420")]
	private sealed class <>c__DisplayClass32_2
	{
		[Token(Token = "0x4001CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string actorColumn;

		[Token(Token = "0x60021DA")]
		[Address(RVA = "0xF2E150", Offset = "0xF2E150", VA = "0xF2E150")]
		public <>c__DisplayClass32_2()
		{
		}

		[Token(Token = "0x60021DB")]
		[Address(RVA = "0xF2E158", Offset = "0xF2E158", VA = "0xF2E158")]
		internal bool <CreateSpawnList>b__1(SheetData.SpreadsheetEntry x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005DD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF430", Offset = "0xCBF430")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string recipeId;

		[Token(Token = "0x4001CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int moonCount;

		[Token(Token = "0x4001CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string type;

		[Token(Token = "0x60021DC")]
		[Address(RVA = "0xF2E16C", Offset = "0xF2E16C", VA = "0xF2E16C")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x60021DD")]
		[Address(RVA = "0xF2E174", Offset = "0xF2E174", VA = "0xF2E174")]
		internal bool <SelectLevelSettings>b__0(LevelSettingsData x)
		{
			return default(bool);
		}

		[Token(Token = "0x60021DE")]
		[Address(RVA = "0xF2E198", Offset = "0xF2E198", VA = "0xF2E198")]
		internal bool <SelectLevelSettings>b__1(LevelSettingsData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000BF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7020", Offset = "0xCC7020")]
	public IntVariable m_difficultyGlobal;

	[Token(Token = "0x4000BF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public ShopManager m_shopManager;

	[Token(Token = "0x4000BF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Label m_dataHolderLabel;

	[Token(Token = "0x4000BFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public LevelGenerator m_levelGenerator;

	[Token(Token = "0x4000BFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public LevelData m_levelDataContainer;

	[Token(Token = "0x4000BFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string m_prefixLevelBoss;

	[Token(Token = "0x4000BFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string m_prefixLevelGobelin;

	[Token(Token = "0x4000BFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string m_prefixLevelLockedShop;

	[Token(Token = "0x4000BFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static string m_nameLevelClassic;

	[Token(Token = "0x4000C00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public static string m_nameLevelElite;

	[Token(Token = "0x4000C01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public string m_nameLevelShop;

	[Token(Token = "0x4000C02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public string m_nameInteractiveLore;

	[Token(Token = "0x4000C03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<GameObject> m_timeChangers;

	[Token(Token = "0x4000C04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<ActorData> m_actorConfigs;

	[Token(Token = "0x4000C05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_spawnPointPrefix;

	[Token(Token = "0x4000C06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string m_spawnerPrefix;

	[Token(Token = "0x4000C07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public float m_spawnerDelayBeforeSpawning;

	[Token(Token = "0x4000C08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public GameObject m_spawnerPrefab;

	[Token(Token = "0x4000C09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public float m_spawnBetweenDelaySpawn;

	[Token(Token = "0x4000C0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
	public float m_actionDelay;

	[Token(Token = "0x4000C0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7058", Offset = "0xCC7058")]
	public LevelSettingsCollection m_levelSettingsCollection;

	[Token(Token = "0x4000C0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7090", Offset = "0xCC7090")]
	public SpawnerGroupCollection m_spawnerGroupCollection;

	[Token(Token = "0x4000C0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public UnityEvent OnLevelStarted;

	[Token(Token = "0x4000C0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	[HideInInspector]
	public int m_maxDifficulty;

	[Token(Token = "0x4000C0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private Dictionary<string, ActorData> _actorDataDico;

	[Token(Token = "0x4000C10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	private Dictionary<string, SpawnListData> _spawnlists;

	[Token(Token = "0x4000C11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private Dictionary<string, GameObject> _timeChangers;

	[Token(Token = "0x4000C12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private string _spawnerGroupField;

	[Token(Token = "0x4000C13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private string _spawnerCountField;

	[Token(Token = "0x4000C14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private string _spawnerMaxEnemyField;

	[Token(Token = "0x4000C15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private LevelSettingsData _levelSelected;

	[Token(Token = "0x4000C16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private bool _levelCleared;

	[Token(Token = "0x60008BC")]
	[Address(RVA = "0x1170208", Offset = "0x1170208", VA = "0x1170208")]
	private void Start()
	{
	}

	[Token(Token = "0x60008BD")]
	[Address(RVA = "0x1170450", Offset = "0x1170450", VA = "0x1170450")]
	public void ClearDirector()
	{
	}

	[Token(Token = "0x60008BE")]
	[Address(RVA = "0x11704CC", Offset = "0x11704CC", VA = "0x11704CC")]
	public void BuildDirector(int moonCount, string type, [Optional] string recipeId)
	{
	}

	[Token(Token = "0x60008BF")]
	[Address(RVA = "0x1172668", Offset = "0x1172668", VA = "0x1172668")]
	private void BuildInteractiveLoreDirector()
	{
	}

	[Token(Token = "0x60008C0")]
	[Address(RVA = "0x1171B84", Offset = "0x1171B84", VA = "0x1171B84")]
	private void BuildGoblinLevel()
	{
	}

	[Token(Token = "0x60008C1")]
	[Address(RVA = "0x1172420", Offset = "0x1172420", VA = "0x1172420")]
	private void BuildShopLevel()
	{
	}

	[Token(Token = "0x60008C2")]
	[Address(RVA = "0x1171B8C", Offset = "0x1171B8C", VA = "0x1171B8C")]
	private void BuildBossLevelDirector(bool bossLevel = true)
	{
	}

	[Token(Token = "0x60008C3")]
	[Address(RVA = "0x1171498", Offset = "0x1171498", VA = "0x1171498")]
	private void BuildClassicLevelDirector()
	{
	}

	[Token(Token = "0x60008C4")]
	[Address(RVA = "0x1172840", Offset = "0x1172840", VA = "0x1172840")]
	private SpawnListData CreateSpawnList(string spawnGroup, Label spawnpoint)
	{
		return null;
	}

	[Token(Token = "0x60008C5")]
	[Address(RVA = "0x1170A14", Offset = "0x1170A14", VA = "0x1170A14")]
	private void SelectLevelSettings(int moonCount, string type, [Optional] string recipeId)
	{
	}

	[Token(Token = "0x60008C6")]
	[Address(RVA = "0x117304C", Offset = "0x117304C", VA = "0x117304C")]
	private LevelSettingsData CloneLevelSettingsData(LevelSettingsData original)
	{
		return null;
	}

	[Token(Token = "0x60008C7")]
	[Address(RVA = "0x117022C", Offset = "0x117022C", VA = "0x117022C")]
	private void CreateActorDico()
	{
	}

	[Token(Token = "0x60008C8")]
	[Address(RVA = "0x1170364", Offset = "0x1170364", VA = "0x1170364")]
	private void CreateTimeChangersDico()
	{
	}

	[Token(Token = "0x60008C9")]
	[Address(RVA = "0x1173154", Offset = "0x1173154", VA = "0x1173154")]
	private WaveSettingsData CreateWaveSettings(int index, JSONObject jsonObject)
	{
		return null;
	}

	[Token(Token = "0x60008CA")]
	[Address(RVA = "0x11726B8", Offset = "0x11726B8", VA = "0x11726B8")]
	private SpawnerGroupData.SpawnlistRate GetRandomSpawnlist(List<SpawnerGroupData.SpawnlistRate> spawnlistRates)
	{
		return default(SpawnerGroupData.SpawnlistRate);
	}

	[Token(Token = "0x60008CB")]
	[Address(RVA = "0x1173C5C", Offset = "0x1173C5C", VA = "0x1173C5C")]
	public DirectorGenerator()
	{
	}
}
[Token(Token = "0x2000210")]
public class LevelSettingsData : ScriptableObject
{
	[Token(Token = "0x4000C17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_settingId;

	[Token(Token = "0x4000C18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_type;

	[Token(Token = "0x4000C19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_difficultyTier;

	[Token(Token = "0x4000C1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<int> m_diffTierInt;

	[Token(Token = "0x4000C1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int m_moonCount;

	[Token(Token = "0x4000C1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int m_rate;

	[Token(Token = "0x4000C1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int m_waveCount;

	[Token(Token = "0x4000C1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string m_timeChangerPrefabName;

	[Token(Token = "0x4000C1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<WaveSettingsData> m_wavesSettings;

	[Token(Token = "0x60008CD")]
	[Address(RVA = "0xFC474C", Offset = "0xFC474C", VA = "0xFC474C")]
	public LevelSettingsData()
	{
	}
}
[Token(Token = "0x2000211")]
public class WaveSettingsData : ScriptableObject
{
	[Token(Token = "0x4000C20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_spawnerGroup;

	[Token(Token = "0x4000C21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_prefabGridRythmTime;

	[Token(Token = "0x4000C22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_spawnerCount;

	[Token(Token = "0x4000C23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_maxEnemySpawner;

	[Token(Token = "0x60008CE")]
	[Address(RVA = "0x1108C8C", Offset = "0x1108C8C", VA = "0x1108C8C")]
	public WaveSettingsData()
	{
	}
}
[Token(Token = "0x2000212")]
public class LevelGenerator : CacheBehaviour
{
	[Token(Token = "0x4000C24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public DirectorGenerator m_directorGenerator;

	[Token(Token = "0x4000C25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public RegenerationDetector m_regenerationDetector;

	[Token(Token = "0x4000C26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string m_moonPositionPrefix;

	[Token(Token = "0x4000C27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public PlanetData m_planet;

	[Token(Token = "0x4000C28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool m_loadLevelOnStart;

	[Token(Token = "0x4000C29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
	public bool m_invokeDeloadLoadWithDelay;

	[Token(Token = "0x4000C2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float m_invokeDelay;

	[Token(Token = "0x4000C2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC70D8", Offset = "0xCC70D8")]
	public List<Label> m_spawnpoints;

	[Token(Token = "0x4000C2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7110", Offset = "0xCC7110")]
	public List<Label> m_spawnerCurveLabels;

	[Token(Token = "0x4000C2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7148", Offset = "0xCC7148")]
	public List<Material> m_skyboxMaterials;

	[Token(Token = "0x4000C2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent OnMoonsInstantiated;

	[Token(Token = "0x4000C2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7180", Offset = "0xCC7180")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7180", Offset = "0xCC7180")]
	public IntGameEvent OnPlanetRegenerableCreated;

	[Token(Token = "0x4000C30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public IntGameEvent OnPlanetRegeneratedEvent;

	[Token(Token = "0x4000C31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameEvent OnLifeSupportsSpent;

	[Token(Token = "0x4000C32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public IntGameEvent OnPlanetReady;

	[Token(Token = "0x4000C33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Label m_labelAutoAimablePlanet;

	[Token(Token = "0x4000C34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public IntVariable m_lifeSupportAcquired;

	[Token(Token = "0x4000C35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObjectVariable m_headset;

	[Token(Token = "0x4000C36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC71D0", Offset = "0xCC71D0")]
	public IntVariable m_currentAzote;

	[Token(Token = "0x4000C37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public IntVariable m_currentCarbon;

	[Token(Token = "0x4000C38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public IntVariable m_currentPhosphorus;

	[Token(Token = "0x4000C39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public IntVariable m_currentSulfur;

	[Token(Token = "0x4000C3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public IntVariable m_currentWater;

	[Token(Token = "0x4000C3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	[HideInInspector]
	public Dictionary<Label, Label> m_spawnpointsCurve;

	[Token(Token = "0x4000C3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	private GameObject _worldPrefab;

	[Token(Token = "0x4000C3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	private List<GameObject> _moons;

	[Token(Token = "0x4000C3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	private List<GameObject> _moonsLoaded;

	[Token(Token = "0x4000C3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	private Dictionary<string, Material> _skyboxesDico;

	[Token(Token = "0x4000C40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	private Dictionary<string, IResourceLocation> _dicoRes;

	[Token(Token = "0x4000C41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	private int _moonToLoad;

	[Token(Token = "0x4000C42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	private string[] _planetTypes;

	[Token(Token = "0x4000C43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	private List<PlanetRegeneration> _moonRegen;

	[Token(Token = "0x60008CF")]
	[Address(RVA = "0xFC2630", Offset = "0xFC2630", VA = "0xFC2630")]
	public void OnLifeSupportAcquired()
	{
	}

	[Token(Token = "0x60008D0")]
	[Address(RVA = "0xFC272C", Offset = "0xFC272C", VA = "0xFC272C")]
	public void DeloadPreviousLevel()
	{
	}

	[Token(Token = "0x60008D1")]
	[Address(RVA = "0xFC2928", Offset = "0xFC2928", VA = "0xFC2928")]
	public void LoadLevel()
	{
	}

	[Token(Token = "0x60008D2")]
	[Address(RVA = "0xFC2DF0", Offset = "0xFC2DF0", VA = "0xFC2DF0")]
	private void ApplyRandomRotationToSkybox()
	{
	}

	[Token(Token = "0x60008D3")]
	[Address(RVA = "0xFC2F1C", Offset = "0xFC2F1C", VA = "0xFC2F1C")]
	public void OnNewPlanetToLoad(int planetDataInstanceid)
	{
	}

	[Token(Token = "0x60008D4")]
	[Address(RVA = "0xFC3094", Offset = "0xFC3094", VA = "0xFC3094")]
	private void Awake()
	{
	}

	[Token(Token = "0x60008D5")]
	[Address(RVA = "0xFC3190", Offset = "0xFC3190", VA = "0xFC3190")]
	private void OnAddressablesInitialized(AsyncOperationHandle<IResourceLocator> obj)
	{
	}

	[Token(Token = "0x60008D6")]
	[Address(RVA = "0xFC3194", Offset = "0xFC3194", VA = "0xFC3194")]
	private void Start()
	{
	}

	[Token(Token = "0x60008D7")]
	[Address(RVA = "0xFC3384", Offset = "0xFC3384", VA = "0xFC3384")]
	private void OnMoonLoaded(AsyncOperationHandle<GameObject> obj)
	{
	}

	[Token(Token = "0x60008D8")]
	[Address(RVA = "0xFC34E0", Offset = "0xFC34E0", VA = "0xFC34E0")]
	private void InstantiateMoons()
	{
	}

	[Token(Token = "0x60008D9")]
	[Address(RVA = "0xFC4190", Offset = "0xFC4190", VA = "0xFC4190")]
	private IntVariable GetCurrentCountVariable(MoonElement elmt)
	{
		return null;
	}

	[Token(Token = "0x60008DA")]
	[Address(RVA = "0xFC2EC0", Offset = "0xFC2EC0", VA = "0xFC2EC0")]
	private void OnEndMoonsInstanciation(int moonCount)
	{
	}

	[Token(Token = "0x60008DB")]
	[Address(RVA = "0xFC41E4", Offset = "0xFC41E4", VA = "0xFC41E4")]
	public LevelGenerator()
	{
	}
}
[Token(Token = "0x2000213")]
public class MoonInformationLinks : CacheBehaviour
{
	[Token(Token = "0x20005DE")]
	public enum MoonType
	{
		[Token(Token = "0x4001CB4")]
		AZOTE,
		[Token(Token = "0x4001CB5")]
		PHOSPHORUS,
		[Token(Token = "0x4001CB6")]
		CARBON,
		[Token(Token = "0x4001CB7")]
		WATER,
		[Token(Token = "0x4001CB8")]
		SULFUR
	}

	[Token(Token = "0x4000C44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LabelHolder m_spawnpointLabelHolder;

	[Token(Token = "0x4000C45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public LabelHolder m_spawncurveLabelHolder;

	[Token(Token = "0x4000C46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MoonType m_type;

	[Token(Token = "0x60008DC")]
	[Address(RVA = "0x10C8940", Offset = "0x10C8940", VA = "0x10C8940")]
	public MoonInformationLinks()
	{
	}
}
[Token(Token = "0x2000214")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9440", Offset = "0xCB9440")]
public class MoonData : ScriptableObject
{
	[Token(Token = "0x4000C47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_moonName;

	[Token(Token = "0x4000C48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_type;

	[Token(Token = "0x4000C49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MoonElement m_element;

	[Token(Token = "0x4000C4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int m_rate;

	[Token(Token = "0x4000C4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_numerOfBoidsToRegenerate;

	[Token(Token = "0x4000C4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool m_neededForRecipe;

	[Token(Token = "0x60008DD")]
	[Address(RVA = "0x10C88FC", Offset = "0x10C88FC", VA = "0x10C88FC")]
	public static int CompareByNumberOfBoidsToRegen(MoonData x, MoonData y)
	{
		return default(int);
	}

	[Token(Token = "0x60008DE")]
	[Address(RVA = "0x10C8938", Offset = "0x10C8938", VA = "0x10C8938")]
	public MoonData()
	{
	}
}
[Token(Token = "0x2000215")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB94A0", Offset = "0xCB94A0")]
public class RecipeData : ScriptableObject
{
	[Token(Token = "0x4000C4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_recipeId;

	[Token(Token = "0x4000C4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_worldPrefab;

	[Token(Token = "0x4000C4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_worldPrefabString;

	[Token(Token = "0x4000C50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string m_skybox;

	[Token(Token = "0x4000C51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<MoonData> m_moonsData;

	[Token(Token = "0x4000C52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<string> m_moonsString;

	[Token(Token = "0x4000C53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int m_moonNeededCount;

	[Token(Token = "0x4000C54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public int m_moonCount;

	[Token(Token = "0x4000C55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<MoonElement> m_elementsNeeded;

	[Token(Token = "0x4000C56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int m_minRecipeNumber;

	[Token(Token = "0x4000C57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public int m_maxRecipeNumber;

	[Token(Token = "0x4000C58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dictionary<string, int> m_moonRates;

	[Token(Token = "0x4000C59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public JSONObject m_recipeJson;

	[Token(Token = "0x4000C5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public SheetData m_recipeSheetData;

	[Token(Token = "0x60008DF")]
	[Address(RVA = "0xFF697C", Offset = "0xFF697C", VA = "0xFF697C")]
	public RecipeData()
	{
	}
}
[Token(Token = "0x2000216")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9500", Offset = "0xCB9500")]
public class SpreadsheetDataVariable : BaseVariable<SpreadSheetData>
{
	[Token(Token = "0x60008E0")]
	[Address(RVA = "0x1077B68", Offset = "0x1077B68", VA = "0x1077B68")]
	public SpreadsheetDataVariable()
	{
	}
}
[Token(Token = "0x2000217")]
public class RegenerationDetector : CacheBehaviour
{
	[Token(Token = "0x4000C5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC71F4", Offset = "0xCC71F4")]
	public UnityEvent OnAllPlanetsRegenerated;

	[Token(Token = "0x4000C5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC722C", Offset = "0xCC722C")]
	public string m_regenerationStateName;

	[Token(Token = "0x4000C5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7264", Offset = "0xCC7264")]
	public GameObject m_superNovaFX;

	[Token(Token = "0x4000C5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC729C", Offset = "0xCC729C")]
	public ObjectArrayUnityEvent OnDotDamage;

	[Token(Token = "0x4000C5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC72D4", Offset = "0xCC72D4")]
	public GameObjectVariable m_nextMoonToRegen;

	[Token(Token = "0x4000C60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC730C", Offset = "0xCC730C")]
	public GameEvent m_onShockwaveFinished;

	[Token(Token = "0x4000C61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[HideInInspector]
	public int m_moonNeededCount;

	[Token(Token = "0x4000C62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[HideInInspector]
	public List<MoonElement> m_elementsNeeded;

	[Token(Token = "0x4000C63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[HideInInspector]
	public List<GameObject> m_moonAutoRegenOrder;

	[Token(Token = "0x4000C64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	[HideInInspector]
	public List<GameObject> m_moonAutoRegenOrderOrigin;

	[Token(Token = "0x4000C65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[HideInInspector]
	public GameObject m_currentMoonReticle;

	[Token(Token = "0x4000C66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[HideInInspector]
	public GameObject m_nextMoonReticle;

	[Token(Token = "0x4000C67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int _moonNeededRegenerated;

	[Token(Token = "0x4000C68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
	private int _planetToRegenerate;

	[Token(Token = "0x4000C69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int _planetRegenerated;

	[Token(Token = "0x4000C6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool _regenerated;

	[Token(Token = "0x4000C6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private GameObject _shockWaveCollider;

	[Token(Token = "0x4000C6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private int _currentMoonIndex;

	[Token(Token = "0x4000C6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Dictionary<MoonElement, List<GameObject>> _moonsByElement;

	[Token(Token = "0x60008E1")]
	[Address(RVA = "0xFF6D48", Offset = "0xFF6D48", VA = "0xFF6D48")]
	public void RegisterRegenerablePlanet()
	{
	}

	[Token(Token = "0x60008E2")]
	[Address(RVA = "0xFF6D58", Offset = "0xFF6D58", VA = "0xFF6D58")]
	public void RegisterPlanetRegerationCompleted()
	{
	}

	[Token(Token = "0x60008E3")]
	[Address(RVA = "0xFF6E88", Offset = "0xFF6E88", VA = "0xFF6E88")]
	public void ChangeNextMoon(GameObject nextMoon)
	{
	}

	[Token(Token = "0x60008E4")]
	[Address(RVA = "0xFF6F68", Offset = "0xFF6F68", VA = "0xFF6F68")]
	public void OnPlanetRegenerated(int instanceID)
	{
	}

	[Token(Token = "0x60008E5")]
	[Address(RVA = "0xFF7438", Offset = "0xFF7438", VA = "0xFF7438")]
	public void OnWaveFinished()
	{
	}

	[Token(Token = "0x60008E6")]
	[Address(RVA = "0xFF7440", Offset = "0xFF7440", VA = "0xFF7440")]
	public void OnLevelFinished()
	{
	}

	[Token(Token = "0x60008E7")]
	[Address(RVA = "0xFF74A4", Offset = "0xFF74A4", VA = "0xFF74A4")]
	public void OnLevelStarted()
	{
	}

	[Token(Token = "0x60008E8")]
	[Address(RVA = "0xFF6DB0", Offset = "0xFF6DB0", VA = "0xFF6DB0")]
	public void SendMoonRegeneratedPercentageToWwise()
	{
	}

	[Token(Token = "0x60008E9")]
	[Address(RVA = "0xFF753C", Offset = "0xFF753C", VA = "0xFF753C")]
	private void CreateMoonByElementDictionary()
	{
	}

	[Token(Token = "0x60008EA")]
	[Address(RVA = "0xFF7758", Offset = "0xFF7758", VA = "0xFF7758")]
	public RegenerationDetector()
	{
	}
}
[Serializable]
[Token(Token = "0x2000218")]
public class SaveGroup
{
	[Token(Token = "0x20005DF")]
	public enum ELevel
	{
		[Token(Token = "0x4001CBA")]
		APPLICATION,
		[Token(Token = "0x4001CBB")]
		GAME,
		[Token(Token = "0x4001CBC")]
		RUN
	}

	[Token(Token = "0x20005E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF440", Offset = "0xCBF440")]
	private sealed class <Save>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveGroup <>4__this;

		[Token(Token = "0x4001CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveProvider saveProvider;

		[Token(Token = "0x4001CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <i>5__2;

		[Token(Token = "0x17000381")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021E2")]
			[Address(RVA = "0xFFBE94", Offset = "0xFFBE94", VA = "0xFFBE94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000382")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021E4")]
			[Address(RVA = "0xFFBEFC", Offset = "0xFFBEFC", VA = "0xFFBEFC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021DF")]
		[Address(RVA = "0xFFB4BC", Offset = "0xFFB4BC", VA = "0xFFB4BC")]
		[DebuggerHidden]
		public <Save>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x60021E0")]
		[Address(RVA = "0xFFBCE4", Offset = "0xFFBCE4", VA = "0xFFBCE4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021E1")]
		[Address(RVA = "0xFFBCE8", Offset = "0xFFBCE8", VA = "0xFFBCE8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E3")]
		[Address(RVA = "0xFFBE9C", Offset = "0xFFBE9C", VA = "0xFFBE9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005E1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF450", Offset = "0xCBF450")]
	private sealed class <Load>d__7 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveGroup <>4__this;

		[Token(Token = "0x4001CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SaveProvider saveProvider;

		[Token(Token = "0x4001CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ScriptableObject <data>5__2;

		[Token(Token = "0x4001CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <i>5__3;

		[Token(Token = "0x17000383")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021E8")]
			[Address(RVA = "0xFFBC18", Offset = "0xFFBC18", VA = "0xFFBC18", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000384")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021EA")]
			[Address(RVA = "0xFFBC80", Offset = "0xFFBC80", VA = "0xFFBC80", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021E5")]
		[Address(RVA = "0xFFB580", Offset = "0xFFB580", VA = "0xFFB580")]
		[DebuggerHidden]
		public <Load>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x60021E6")]
		[Address(RVA = "0xFFB8B4", Offset = "0xFFB8B4", VA = "0xFFB8B4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021E7")]
		[Address(RVA = "0xFFB8B8", Offset = "0xFFB8B8", VA = "0xFFB8B8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021E9")]
		[Address(RVA = "0xFFBC20", Offset = "0xFFBC20", VA = "0xFFBC20", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005E2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF460", Offset = "0xCBF460")]
	private sealed class <>c__DisplayClass9_0
	{
		[Token(Token = "0x4001CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x60021EB")]
		[Address(RVA = "0xFFB86C", Offset = "0xFFB86C", VA = "0xFFB86C")]
		public <>c__DisplayClass9_0()
		{
		}

		[Token(Token = "0x60021EC")]
		[Address(RVA = "0xFFB87C", Offset = "0xFFB87C", VA = "0xFFB87C")]
		internal bool <GetGestureData>b__0(GestureData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ELevel m_level;

	[Token(Token = "0x4000C6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<ScriptableObject> m_datas;

	[Token(Token = "0x4000C70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public GestureData[] m_allGesturesData;

	[Token(Token = "0x4000C71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnEndSaveGroup;

	[Token(Token = "0x4000C72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnEndLoadGroup;

	[Token(Token = "0x60008EB")]
	[Address(RVA = "0xFFB424", Offset = "0xFFB424", VA = "0xFFB424")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD15C8", Offset = "0xCD15C8")]
	public IEnumerator<float> Save(SaveProvider saveProvider)
	{
		return null;
	}

	[Token(Token = "0x60008EC")]
	[Address(RVA = "0xFFB4E8", Offset = "0xFFB4E8", VA = "0xFFB4E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD162C", Offset = "0xCD162C")]
	public IEnumerator<float> Load(SaveProvider saveProvider)
	{
		return null;
	}

	[Token(Token = "0x60008ED")]
	[Address(RVA = "0xFFB5AC", Offset = "0xFFB5AC", VA = "0xFFB5AC")]
	public void Wash(bool launchEventAtEnd = true)
	{
	}

	[Token(Token = "0x60008EE")]
	[Address(RVA = "0xFFB7A0", Offset = "0xFFB7A0", VA = "0xFFB7A0")]
	private GestureData GetGestureData(string name)
	{
		return null;
	}

	[Token(Token = "0x60008EF")]
	[Address(RVA = "0xFFB874", Offset = "0xFFB874", VA = "0xFFB874")]
	public SaveGroup()
	{
	}
}
[Token(Token = "0x2000219")]
public class SaveManager : CacheBehaviour
{
	[Token(Token = "0x20005E3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF470", Offset = "0xCBF470")]
	private sealed class <>c__DisplayClass18_0
	{
		[Token(Token = "0x4001CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveGroup.ELevel level;

		[Token(Token = "0x60021ED")]
		[Address(RVA = "0xFFC9B0", Offset = "0xFFC9B0", VA = "0xFFC9B0")]
		public <>c__DisplayClass18_0()
		{
		}

		[Token(Token = "0x60021EE")]
		[Address(RVA = "0xFFD268", Offset = "0xFFD268", VA = "0xFFD268")]
		internal bool <Save>b__0(SaveGroup t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005E4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF480", Offset = "0xCBF480")]
	private sealed class <>c__DisplayClass19_0
	{
		[Token(Token = "0x4001CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveGroup.ELevel level;

		[Token(Token = "0x60021EF")]
		[Address(RVA = "0xFFC9B8", Offset = "0xFFC9B8", VA = "0xFFC9B8")]
		public <>c__DisplayClass19_0()
		{
		}

		[Token(Token = "0x60021F0")]
		[Address(RVA = "0xFFD28C", Offset = "0xFFD28C", VA = "0xFFD28C")]
		internal bool <Load>b__0(SaveGroup t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF490", Offset = "0xCBF490")]
	private sealed class <>c__DisplayClass23_0
	{
		[Token(Token = "0x4001CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SaveGroup.ELevel level;

		[Token(Token = "0x60021F1")]
		[Address(RVA = "0xFFCAC0", Offset = "0xFFCAC0", VA = "0xFFCAC0")]
		public <>c__DisplayClass23_0()
		{
		}

		[Token(Token = "0x60021F2")]
		[Address(RVA = "0xFFD2B0", Offset = "0xFFD2B0", VA = "0xFFD2B0")]
		internal bool <Wash>b__0(SaveGroup t)
		{
			return default(bool);
		}
	}

	[Serializable]
	[Token(Token = "0x20005E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF4A0", Offset = "0xCBF4A0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<SaveGroup, bool> <>9__24_0;

		[Token(Token = "0x4001CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<SaveGroup, bool> <>9__24_1;

		[Token(Token = "0x60021F4")]
		[Address(RVA = "0xFFD220", Offset = "0xFFD220", VA = "0xFFD220")]
		public <>c()
		{
		}

		[Token(Token = "0x60021F5")]
		[Address(RVA = "0xFFD228", Offset = "0xFFD228", VA = "0xFFD228")]
		internal bool <WashGameAndRun>b__24_0(SaveGroup t)
		{
			return default(bool);
		}

		[Token(Token = "0x60021F6")]
		[Address(RVA = "0xFFD248", Offset = "0xFFD248", VA = "0xFFD248")]
		internal bool <WashGameAndRun>b__24_1(SaveGroup t)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005E7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF4B0", Offset = "0xCBF4B0")]
	private sealed class <LoadAllCoroutine>d__27 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SaveManager <>4__this;

		[Token(Token = "0x4001CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<SaveGroup>.Enumerator <>7__wrap1;

		[Token(Token = "0x17000385")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60021FB")]
			[Address(RVA = "0xFFD588", Offset = "0xFFD588", VA = "0xFFD588", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000386")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60021FD")]
			[Address(RVA = "0xFFD5F0", Offset = "0xFFD5F0", VA = "0xFFD5F0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60021F7")]
		[Address(RVA = "0xFFCE6C", Offset = "0xFFCE6C", VA = "0xFFCE6C")]
		[DebuggerHidden]
		public <LoadAllCoroutine>d__27(int <>1__state)
		{
		}

		[Token(Token = "0x60021F8")]
		[Address(RVA = "0xFFD2D4", Offset = "0xFFD2D4", VA = "0xFFD2D4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60021F9")]
		[Address(RVA = "0xFFD348", Offset = "0xFFD348", VA = "0xFFD348", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60021FA")]
		[Address(RVA = "0xFFD2F0", Offset = "0xFFD2F0", VA = "0xFFD2F0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x60021FC")]
		[Address(RVA = "0xFFD590", Offset = "0xFFD590", VA = "0xFFD590", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000C73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GestureGeneralData m_gestureGeneralData;

	[Token(Token = "0x4000C74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public bool m_avoidSaveData;

	[Token(Token = "0x4000C75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC73B4", Offset = "0xCC73B4")]
	public UnityEvent OnEndSave;

	[Token(Token = "0x4000C76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnEndLoad;

	[Token(Token = "0x4000C77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public IntUnityEvent OnEndWashSaveGroup;

	[Token(Token = "0x4000C78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC73EC", Offset = "0xCC73EC")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC73EC", Offset = "0xCC73EC")]
	public List<SaveGroup> m_saveGroups;

	[Token(Token = "0x4000C79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[SerializeField]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC743C", Offset = "0xCC743C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC743C", Offset = "0xCC743C")]
	private SaveProvider _saveProvider;

	[Token(Token = "0x4000C7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private SaveGroup savegroupAllSaveCallback;

	[Token(Token = "0x4000C7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private SaveGroup savegroupAllLoadCallback;

	[Token(Token = "0x4000C7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private SaveGroup savegroupCallbackStore;

	[Token(Token = "0x4000C7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Dictionary<string, GestureData> _gestureDictionary;

	[Token(Token = "0x4000C7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private bool _isSavingAll;

	[Token(Token = "0x4000C7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x111")]
	private bool _isLoadingAll;

	[Token(Token = "0x4000C80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private int _saveGroupCounter;

	[Token(Token = "0x4000C81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private int _loadGroupCounter;

	[Token(Token = "0x17000052")]
	public SaveProvider SaveProvider
	{
		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xFFBF60", Offset = "0xFFBF60", VA = "0xFFBF60")]
		get
		{
			return null;
		}
		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xFFBF68", Offset = "0xFFBF68", VA = "0xFFBF68")]
		set
		{
		}
	}

	[Token(Token = "0x60008F2")]
	[Address(RVA = "0xFFBF70", Offset = "0xFFBF70", VA = "0xFFBF70")]
	private void Start()
	{
	}

	[Token(Token = "0x60008F3")]
	[Address(RVA = "0xFFC0E0", Offset = "0xFFC0E0", VA = "0xFFC0E0")]
	public void OnGUI()
	{
	}

	[Token(Token = "0x60008F4")]
	[Address(RVA = "0xFFC5B4", Offset = "0xFFC5B4", VA = "0xFFC5B4")]
	public void SaveSaveGroupWithInt(int enumInt)
	{
	}

	[Token(Token = "0x60008F5")]
	[Address(RVA = "0xFFC82C", Offset = "0xFFC82C", VA = "0xFFC82C")]
	public void SaveApplication()
	{
	}

	[Token(Token = "0x60008F6")]
	[Address(RVA = "0xFFC834", Offset = "0xFFC834", VA = "0xFFC834")]
	public void SaveGame()
	{
	}

	[Token(Token = "0x60008F7")]
	[Address(RVA = "0xFFC83C", Offset = "0xFFC83C", VA = "0xFFC83C")]
	public void SaveRun()
	{
	}

	[Token(Token = "0x60008F8")]
	[Address(RVA = "0xFFC59C", Offset = "0xFFC59C", VA = "0xFFC59C")]
	public void LoadApplication()
	{
	}

	[Token(Token = "0x60008F9")]
	[Address(RVA = "0xFFC5A4", Offset = "0xFFC5A4", VA = "0xFFC5A4")]
	public void LoadGame()
	{
	}

	[Token(Token = "0x60008FA")]
	[Address(RVA = "0xFFC5AC", Offset = "0xFFC5AC", VA = "0xFFC5AC")]
	public void LoadRun()
	{
	}

	[Token(Token = "0x60008FB")]
	[Address(RVA = "0xFFC674", Offset = "0xFFC674", VA = "0xFFC674")]
	public void Save(SaveGroup.ELevel level)
	{
	}

	[Token(Token = "0x60008FC")]
	[Address(RVA = "0xFFC844", Offset = "0xFFC844", VA = "0xFFC844")]
	public void Load(SaveGroup.ELevel level)
	{
	}

	[Token(Token = "0x60008FD")]
	[Address(RVA = "0xFFC9C0", Offset = "0xFFC9C0", VA = "0xFFC9C0")]
	public void WashApplication()
	{
	}

	[Token(Token = "0x60008FE")]
	[Address(RVA = "0xFFCAB0", Offset = "0xFFCAB0", VA = "0xFFCAB0")]
	public void WashGame()
	{
	}

	[Token(Token = "0x60008FF")]
	[Address(RVA = "0xFFCAB8", Offset = "0xFFCAB8", VA = "0xFFCAB8")]
	public void WashRun()
	{
	}

	[Token(Token = "0x6000900")]
	[Address(RVA = "0xFFC9C8", Offset = "0xFFC9C8", VA = "0xFFC9C8")]
	public void Wash(SaveGroup.ELevel level)
	{
	}

	[Token(Token = "0x6000901")]
	[Address(RVA = "0xFFCAC8", Offset = "0xFFCAC8", VA = "0xFFCAC8")]
	public void WashGameAndRun(bool saveApplication = true)
	{
	}

	[Token(Token = "0x6000902")]
	[Address(RVA = "0xFFC340", Offset = "0xFFC340", VA = "0xFFC340")]
	public void SaveAll()
	{
	}

	[Token(Token = "0x6000903")]
	[Address(RVA = "0xFFC4D8", Offset = "0xFFC4D8", VA = "0xFFC4D8")]
	public void LoadAll()
	{
	}

	[Token(Token = "0x6000904")]
	[Address(RVA = "0xFFCDA0", Offset = "0xFFCDA0", VA = "0xFFCDA0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1690", Offset = "0xCD1690")]
	private IEnumerator<float> LoadAllCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000905")]
	[Address(RVA = "0xFFCE98", Offset = "0xFFCE98", VA = "0xFFCE98")]
	public void OnEndSaveGroup()
	{
	}

	[Token(Token = "0x6000906")]
	[Address(RVA = "0xFFCF1C", Offset = "0xFFCF1C", VA = "0xFFCF1C")]
	public void OnEndLoadGroup()
	{
	}

	[Token(Token = "0x6000907")]
	[Address(RVA = "0xFFCE1C", Offset = "0xFFCE1C", VA = "0xFFCE1C")]
	private void OnEndLoadCallback()
	{
	}

	[Token(Token = "0x6000908")]
	[Address(RVA = "0xFFCCD8", Offset = "0xFFCCD8", VA = "0xFFCCD8")]
	private void OnEndSaveCallback()
	{
	}

	[Token(Token = "0x6000909")]
	[Address(RVA = "0xFFD00C", Offset = "0xFFD00C", VA = "0xFFD00C")]
	private void StoreCachedFile()
	{
	}

	[Token(Token = "0x600090A")]
	[Address(RVA = "0xFFD0C8", Offset = "0xFFD0C8", VA = "0xFFD0C8")]
	public void QuitApplication()
	{
	}

	[Token(Token = "0x600090B")]
	[Address(RVA = "0xFFD13C", Offset = "0xFFD13C", VA = "0xFFD13C")]
	public SaveManager()
	{
	}
}
[Token(Token = "0x200021A")]
public class EasySaveWrapper : SaveProvider
{
	[Token(Token = "0x600090C")]
	[Address(RVA = "0xF36600", Offset = "0xF36600", VA = "0xF36600", Slot = "4")]
	public override void Save(string name, object val)
	{
	}

	[Token(Token = "0x600090D")]
	[Address(RVA = "0xF36718", Offset = "0xF36718", VA = "0xF36718", Slot = "5")]
	public override void Load(string name)
	{
	}

	[Token(Token = "0x600090E")]
	[Address(RVA = "0xF36810", Offset = "0xF36810", VA = "0xF36810", Slot = "6")]
	public override void Load(string name, object val)
	{
	}

	[Token(Token = "0x600090F")]
	[Address(RVA = "0xF36934", Offset = "0xF36934", VA = "0xF36934", Slot = "9")]
	public override void OnEndSave()
	{
	}

	[Token(Token = "0x6000910")]
	[Address(RVA = "0xF3693C", Offset = "0xF3693C", VA = "0xF3693C", Slot = "10")]
	public override void OnEndLoad()
	{
	}

	[Token(Token = "0x6000911")]
	[Address(RVA = "0xF36948", Offset = "0xF36948", VA = "0xF36948", Slot = "7")]
	public override bool CheckIfSaveFileExists()
	{
		return default(bool);
	}

	[Token(Token = "0x6000912")]
	[Address(RVA = "0xF36A40", Offset = "0xF36A40", VA = "0xF36A40", Slot = "8")]
	public override void DeleteSaveFile()
	{
	}

	[Token(Token = "0x6000913")]
	[Address(RVA = "0xF36BCC", Offset = "0xF36BCC", VA = "0xF36BCC")]
	public EasySaveWrapper()
	{
	}
}
[Token(Token = "0x200021B")]
public abstract class SaveProvider : MonoBehaviour
{
	[Token(Token = "0x4000C82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_saveFile;

	[Token(Token = "0x6000914")]
	public abstract void Save(string name, object val);

	[Token(Token = "0x6000915")]
	public abstract void Load(string name);

	[Token(Token = "0x6000916")]
	public abstract void Load(string name, object val);

	[Token(Token = "0x6000917")]
	public abstract bool CheckIfSaveFileExists();

	[Token(Token = "0x6000918")]
	public abstract void DeleteSaveFile();

	[Token(Token = "0x6000919")]
	public abstract void OnEndSave();

	[Token(Token = "0x600091A")]
	public abstract void OnEndLoad();

	[Token(Token = "0x600091B")]
	[Address(RVA = "0xFFD654", Offset = "0xFFD654", VA = "0xFFD654")]
	protected SaveProvider()
	{
	}
}
[Token(Token = "0x200021C")]
public class ShopManager : CacheBehaviour
{
	[Token(Token = "0x20005E8")]
	public enum PerkType
	{
		[Token(Token = "0x4001CD4")]
		ANY,
		[Token(Token = "0x4001CD5")]
		WAND_RIGHT,
		[Token(Token = "0x4001CD6")]
		WAND_LEFT,
		[Token(Token = "0x4001CD7")]
		PLAYER,
		[Token(Token = "0x4001CD8")]
		ATTACK,
		[Token(Token = "0x4001CD9")]
		DEFENSE
	}

	[Serializable]
	[Token(Token = "0x20005E9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF4C0", Offset = "0xCBF4C0")]
	private sealed class <>c
	{
		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__81_0;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__81_1;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__82_0;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Transform, bool> <>9__82_1;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<Transform, bool> <>9__83_0;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<Transform, bool> <>9__83_1;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<Transform, bool> <>9__84_1;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<Transform, bool> <>9__85_0;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<Transform, bool> <>9__85_1;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static Func<Transform, bool> <>9__85_2;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static Func<Transform, bool> <>9__86_0;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Func<Transform, bool> <>9__86_1;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static Func<Transform, bool> <>9__86_2;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static Func<Transform, bool> <>9__86_3;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static Func<Transform, bool> <>9__86_4;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static Func<Transform, bool> <>9__86_5;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static Func<Transform, bool> <>9__86_6;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static Func<Transform, bool> <>9__86_7;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public static Func<Transform, bool> <>9__86_8;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public static Func<Transform, bool> <>9__86_9;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static Func<Transform, bool> <>9__86_10;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static Func<Transform, bool> <>9__86_11;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public static Func<Transform, bool> <>9__86_12;

		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public static Func<Transform, bool> <>9__86_13;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public static Func<Transform, bool> <>9__86_14;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public static Func<Transform, bool> <>9__86_15;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static Func<Transform, bool> <>9__86_16;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public static Func<Transform, bool> <>9__86_18;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static Func<Transform, bool> <>9__86_20;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public static Func<Transform, bool> <>9__86_21;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public static Func<Transform, bool> <>9__95_2;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static Func<Transform, bool> <>9__98_0;

		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public static Func<Transform, bool> <>9__100_0;

		[Token(Token = "0x60021FF")]
		[Address(RVA = "0x1026D4C", Offset = "0x1026D4C", VA = "0x1026D4C")]
		public <>c()
		{
		}

		[Token(Token = "0x6002200")]
		[Address(RVA = "0x1026D54", Offset = "0x1026D54", VA = "0x1026D54")]
		internal bool <OnDisplayShop>b__81_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002201")]
		[Address(RVA = "0x1026DB8", Offset = "0x1026DB8", VA = "0x1026DB8")]
		internal bool <OnDisplayShop>b__81_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002202")]
		[Address(RVA = "0x1026E1C", Offset = "0x1026E1C", VA = "0x1026E1C")]
		internal bool <OnDisplayShop>b__82_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002203")]
		[Address(RVA = "0x1026E80", Offset = "0x1026E80", VA = "0x1026E80")]
		internal bool <OnDisplayShop>b__82_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002204")]
		[Address(RVA = "0x1026EE4", Offset = "0x1026EE4", VA = "0x1026EE4")]
		internal bool <PopulateWire>b__83_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002205")]
		[Address(RVA = "0x1026F74", Offset = "0x1026F74", VA = "0x1026F74")]
		internal bool <PopulateWire>b__83_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002206")]
		[Address(RVA = "0x1027004", Offset = "0x1027004", VA = "0x1027004")]
		internal bool <OnHighlightPerk>b__84_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002207")]
		[Address(RVA = "0x1027068", Offset = "0x1027068", VA = "0x1027068")]
		internal bool <OnExitHighlightPerk>b__85_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002208")]
		[Address(RVA = "0x10270CC", Offset = "0x10270CC", VA = "0x10270CC")]
		internal bool <OnExitHighlightPerk>b__85_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002209")]
		[Address(RVA = "0x1027130", Offset = "0x1027130", VA = "0x1027130")]
		internal bool <OnExitHighlightPerk>b__85_2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600220A")]
		[Address(RVA = "0x1027194", Offset = "0x1027194", VA = "0x1027194")]
		internal bool <CreatePerkBubble>b__86_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600220B")]
		[Address(RVA = "0x10271F8", Offset = "0x10271F8", VA = "0x10271F8")]
		internal bool <CreatePerkBubble>b__86_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600220C")]
		[Address(RVA = "0x102725C", Offset = "0x102725C", VA = "0x102725C")]
		internal bool <CreatePerkBubble>b__86_2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600220D")]
		[Address(RVA = "0x10272C0", Offset = "0x10272C0", VA = "0x10272C0")]
		internal bool <CreatePerkBubble>b__86_3(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600220E")]
		[Address(RVA = "0x1027324", Offset = "0x1027324", VA = "0x1027324")]
		internal bool <CreatePerkBubble>b__86_4(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600220F")]
		[Address(RVA = "0x1027388", Offset = "0x1027388", VA = "0x1027388")]
		internal bool <CreatePerkBubble>b__86_5(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002210")]
		[Address(RVA = "0x10273EC", Offset = "0x10273EC", VA = "0x10273EC")]
		internal bool <CreatePerkBubble>b__86_6(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002211")]
		[Address(RVA = "0x1027450", Offset = "0x1027450", VA = "0x1027450")]
		internal bool <CreatePerkBubble>b__86_7(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002212")]
		[Address(RVA = "0x10274B4", Offset = "0x10274B4", VA = "0x10274B4")]
		internal bool <CreatePerkBubble>b__86_8(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002213")]
		[Address(RVA = "0x1027518", Offset = "0x1027518", VA = "0x1027518")]
		internal bool <CreatePerkBubble>b__86_9(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002214")]
		[Address(RVA = "0x102757C", Offset = "0x102757C", VA = "0x102757C")]
		internal bool <CreatePerkBubble>b__86_10(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002215")]
		[Address(RVA = "0x10275E0", Offset = "0x10275E0", VA = "0x10275E0")]
		internal bool <CreatePerkBubble>b__86_11(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002216")]
		[Address(RVA = "0x1027644", Offset = "0x1027644", VA = "0x1027644")]
		internal bool <CreatePerkBubble>b__86_12(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002217")]
		[Address(RVA = "0x10276A8", Offset = "0x10276A8", VA = "0x10276A8")]
		internal bool <CreatePerkBubble>b__86_13(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002218")]
		[Address(RVA = "0x102770C", Offset = "0x102770C", VA = "0x102770C")]
		internal bool <CreatePerkBubble>b__86_14(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002219")]
		[Address(RVA = "0x1027770", Offset = "0x1027770", VA = "0x1027770")]
		internal bool <CreatePerkBubble>b__86_15(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600221A")]
		[Address(RVA = "0x10277D4", Offset = "0x10277D4", VA = "0x10277D4")]
		internal bool <CreatePerkBubble>b__86_16(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600221B")]
		[Address(RVA = "0x1027838", Offset = "0x1027838", VA = "0x1027838")]
		internal bool <CreatePerkBubble>b__86_18(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600221C")]
		[Address(RVA = "0x102789C", Offset = "0x102789C", VA = "0x102789C")]
		internal bool <CreatePerkBubble>b__86_20(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600221D")]
		[Address(RVA = "0x1027900", Offset = "0x1027900", VA = "0x1027900")]
		internal bool <CreatePerkBubble>b__86_21(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600221E")]
		[Address(RVA = "0x1027964", Offset = "0x1027964", VA = "0x1027964")]
		internal bool <CheckReplacement>b__95_2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600221F")]
		[Address(RVA = "0x10279C8", Offset = "0x10279C8", VA = "0x10279C8")]
		internal bool <DeactiveAllBubbles>b__98_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002220")]
		[Address(RVA = "0x1027A2C", Offset = "0x1027A2C", VA = "0x1027A2C")]
		internal bool <ActivateAllBubbles>b__100_0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005EA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF4D0", Offset = "0xCBF4D0")]
	private sealed class <>c__DisplayClass84_0
	{
		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string param1;

		[Token(Token = "0x6002221")]
		[Address(RVA = "0x1025070", Offset = "0x1025070", VA = "0x1025070")]
		public <>c__DisplayClass84_0()
		{
		}

		[Token(Token = "0x6002222")]
		[Address(RVA = "0x1027B7C", Offset = "0x1027B7C", VA = "0x1027B7C")]
		internal bool <OnHighlightPerk>b__0(PerkData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005EB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF4E0", Offset = "0xCBF4E0")]
	private sealed class <>c__DisplayClass86_0
	{
		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PerkData perk;

		[Token(Token = "0x6002223")]
		[Address(RVA = "0x1025398", Offset = "0x1025398", VA = "0x1025398")]
		public <>c__DisplayClass86_0()
		{
		}

		[Token(Token = "0x6002224")]
		[Address(RVA = "0x1027BA0", Offset = "0x1027BA0", VA = "0x1027BA0")]
		internal bool <CreatePerkBubble>b__17(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002225")]
		[Address(RVA = "0x1027C58", Offset = "0x1027C58", VA = "0x1027C58")]
		internal bool <CreatePerkBubble>b__19(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF4F0", Offset = "0xCBF4F0")]
	private sealed class <>c__DisplayClass86_1
	{
		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int j;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public <>c__DisplayClass86_0 CS$<>8__locals1;

		[Token(Token = "0x6002226")]
		[Address(RVA = "0x10253A0", Offset = "0x10253A0", VA = "0x10253A0")]
		public <>c__DisplayClass86_1()
		{
		}

		[Token(Token = "0x6002227")]
		[Address(RVA = "0x1027D10", Offset = "0x1027D10", VA = "0x1027D10")]
		internal bool <CreatePerkBubble>b__22(GameObject x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002228")]
		[Address(RVA = "0x1027DC0", Offset = "0x1027DC0", VA = "0x1027DC0")]
		internal bool <CreatePerkBubble>b__23(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002229")]
		[Address(RVA = "0x1027E0C", Offset = "0x1027E0C", VA = "0x1027E0C")]
		internal bool <CreatePerkBubble>b__24(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF500", Offset = "0xCBF500")]
	private sealed class <>c__DisplayClass86_2
	{
		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int starNumber;

		[Token(Token = "0x600222A")]
		[Address(RVA = "0x10253A8", Offset = "0x10253A8", VA = "0x10253A8")]
		public <>c__DisplayClass86_2()
		{
		}

		[Token(Token = "0x600222B")]
		[Address(RVA = "0x1027E58", Offset = "0x1027E58", VA = "0x1027E58")]
		internal bool <CreatePerkBubble>b__25(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF510", Offset = "0xCBF510")]
	private sealed class <>c__DisplayClass93_0
	{
		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PerkData perk;

		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Predicate<GestureData> <>9__2;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Predicate<GestureData> <>9__3;

		[Token(Token = "0x600222C")]
		[Address(RVA = "0x1027F18", Offset = "0x1027F18", VA = "0x1027F18")]
		public <>c__DisplayClass93_0()
		{
		}

		[Token(Token = "0x600222D")]
		[Address(RVA = "0x1027F20", Offset = "0x1027F20", VA = "0x1027F20")]
		internal bool <OnPurchasePerkRoutine>b__0(GestureData x)
		{
			return default(bool);
		}

		[Token(Token = "0x600222E")]
		[Address(RVA = "0x1027F50", Offset = "0x1027F50", VA = "0x1027F50")]
		internal bool <OnPurchasePerkRoutine>b__1(GestureData x)
		{
			return default(bool);
		}

		[Token(Token = "0x600222F")]
		[Address(RVA = "0x1027F80", Offset = "0x1027F80", VA = "0x1027F80")]
		internal bool <OnPurchasePerkRoutine>b__2(GestureData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002230")]
		[Address(RVA = "0x1027FE4", Offset = "0x1027FE4", VA = "0x1027FE4")]
		internal bool <OnPurchasePerkRoutine>b__3(GestureData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002231")]
		[Address(RVA = "0x1028048", Offset = "0x1028048", VA = "0x1028048")]
		internal bool <OnPurchasePerkRoutine>b__4(GestureData x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002232")]
		[Address(RVA = "0x1028078", Offset = "0x1028078", VA = "0x1028078")]
		internal Ammo <OnPurchasePerkRoutine>b__5(Ammo ammo)
		{
			return null;
		}
	}

	[Token(Token = "0x20005EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF520", Offset = "0xCBF520")]
	private sealed class <OnPurchasePerkRoutine>d__93 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string perkId;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ShopManager <>4__this;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public WandData wandUsed;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool routine;

		[Token(Token = "0x17000387")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002236")]
			[Address(RVA = "0x10292BC", Offset = "0x10292BC", VA = "0x10292BC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000388")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002238")]
			[Address(RVA = "0x1029324", Offset = "0x1029324", VA = "0x1029324", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002233")]
		[Address(RVA = "0x10259BC", Offset = "0x10259BC", VA = "0x10259BC")]
		[DebuggerHidden]
		public <OnPurchasePerkRoutine>d__93(int <>1__state)
		{
		}

		[Token(Token = "0x6002234")]
		[Address(RVA = "0x1028318", Offset = "0x1028318", VA = "0x1028318", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002235")]
		[Address(RVA = "0x102831C", Offset = "0x102831C", VA = "0x102831C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002237")]
		[Address(RVA = "0x10292C4", Offset = "0x10292C4", VA = "0x10292C4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF530", Offset = "0xCBF530")]
	private sealed class <BuyRoutine>d__94 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShopManager <>4__this;

		[Token(Token = "0x17000389")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600223C")]
			[Address(RVA = "0x102824C", Offset = "0x102824C", VA = "0x102824C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600223E")]
			[Address(RVA = "0x10282B4", Offset = "0x10282B4", VA = "0x10282B4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002239")]
		[Address(RVA = "0x1025A64", Offset = "0x1025A64", VA = "0x1025A64")]
		[DebuggerHidden]
		public <BuyRoutine>d__94(int <>1__state)
		{
		}

		[Token(Token = "0x600223A")]
		[Address(RVA = "0x10281C0", Offset = "0x10281C0", VA = "0x10281C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600223B")]
		[Address(RVA = "0x10281C4", Offset = "0x10281C4", VA = "0x10281C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600223D")]
		[Address(RVA = "0x1028254", Offset = "0x1028254", VA = "0x1028254", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF540", Offset = "0xCBF540")]
	private sealed class <>c__DisplayClass95_0
	{
		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GestureData gesture;

		[Token(Token = "0x600223F")]
		[Address(RVA = "0x1025A90", Offset = "0x1025A90", VA = "0x1025A90")]
		public <>c__DisplayClass95_0()
		{
		}

		[Token(Token = "0x6002240")]
		[Address(RVA = "0x10280B0", Offset = "0x10280B0", VA = "0x10280B0")]
		internal bool <CheckReplacement>b__0(PerkData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF550", Offset = "0xCBF550")]
	private sealed class <>c__DisplayClass95_1
	{
		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GestureData gesture;

		[Token(Token = "0x6002241")]
		[Address(RVA = "0x1025A98", Offset = "0x1025A98", VA = "0x1025A98")]
		public <>c__DisplayClass95_1()
		{
		}

		[Token(Token = "0x6002242")]
		[Address(RVA = "0x1028138", Offset = "0x1028138", VA = "0x1028138")]
		internal bool <CheckReplacement>b__1(PerkData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x20005F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF560", Offset = "0xCBF560")]
	private sealed class <>c__DisplayClass109_0
	{
		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform bubble;

		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string perkId;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Func<Transform, bool> <>9__0;

		[Token(Token = "0x6002243")]
		[Address(RVA = "0x1026AFC", Offset = "0x1026AFC", VA = "0x1026AFC")]
		public <>c__DisplayClass109_0()
		{
		}

		[Token(Token = "0x6002244")]
		[Address(RVA = "0x1027A90", Offset = "0x1027A90", VA = "0x1027A90")]
		internal bool <FindBubble>b__0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000C83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<PerkData> m_remainingPerks;

	[Token(Token = "0x4000C84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC749C", Offset = "0xCC749C")]
	public ShopData m_shopData;

	[Token(Token = "0x4000C85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC74D4", Offset = "0xCC74D4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC74D4", Offset = "0xCC74D4")]
	public List<PerkData> m_allPerks;

	[Token(Token = "0x4000C86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public GameObject m_canvas;

	[Token(Token = "0x4000C87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_perkBubblePanel;

	[Token(Token = "0x4000C88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public GameObject m_perkBubble;

	[Token(Token = "0x4000C89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_perBubbleReplacement;

	[Token(Token = "0x4000C8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshPro m_rerollPerks;

	[Token(Token = "0x4000C8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public BoxCollider m_rerollPerkButtonCollider;

	[Token(Token = "0x4000C8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public Animator m_rerollPerkButtonAnimator;

	[Token(Token = "0x4000C8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public TextMeshPro m_upgradeShopText;

	[Token(Token = "0x4000C8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public BoxCollider m_upgradeShopCollider;

	[Token(Token = "0x4000C8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public Animator m_upgradeShopAnimator;

	[Token(Token = "0x4000C90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public Sprite[] m_cardRaritySprites;

	[Token(Token = "0x4000C91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public Sprite m_cardSpriteDisabled;

	[Token(Token = "0x4000C92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public Sprite[] m_starSprites;

	[Token(Token = "0x4000C93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject m_star;

	[Token(Token = "0x4000C94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public SpriteRenderer[] m_upgradeSprites;

	[Token(Token = "0x4000C95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public Sprite m_filledUpgradeSprite;

	[Token(Token = "0x4000C96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject m_equipBubble;

	[Token(Token = "0x4000C97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public TextMeshPro m_equipHandText;

	[Token(Token = "0x4000C98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	public TextMeshPro m_placeText;

	[Token(Token = "0x4000C99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public TextMeshPro m_spellNameText;

	[Token(Token = "0x4000C9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public TextMeshPro m_holdTriggerText;

	[Token(Token = "0x4000C9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	public GameObject m_cardTween;

	[Token(Token = "0x4000C9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject m_cardComparedTween;

	[Token(Token = "0x4000C9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public GameObject m_cardPlayerPerkTween;

	[Token(Token = "0x4000C9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
	public GameObject m_reroll;

	[Token(Token = "0x4000C9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	public GameObject m_exit;

	[Token(Token = "0x4000CA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	public GameObject m_upgrade;

	[Token(Token = "0x4000CA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	public GameObject m_cancelPurchase;

	[Token(Token = "0x4000CA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	public GameObject m_replaceArrow;

	[Token(Token = "0x4000CA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	public GameObject m_arrowVizualization;

	[Token(Token = "0x4000CA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	public GameObject m_spellHolder;

	[Token(Token = "0x4000CA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	public GameObject m_crystalReroll;

	[Token(Token = "0x4000CA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	public TextMeshPro m_rerollCostText;

	[Token(Token = "0x4000CA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	public TextMeshPro m_textSpell;

	[Token(Token = "0x4000CA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	public TextMeshPro m_purchased;

	[Token(Token = "0x4000CA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	public TextMeshPro m_purchasedCost;

	[Token(Token = "0x4000CAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
	public GameObject m_purchasedTween;

	[Token(Token = "0x4000CAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	public GameObject m_shamanSphere;

	[Token(Token = "0x4000CAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	public GameObject m_purchaseTween;

	[Token(Token = "0x4000CAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	public TextMeshPro m_spellPurchasedLeft;

	[Token(Token = "0x4000CAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
	public TextMeshPro m_spellPurchasedRight;

	[Token(Token = "0x4000CAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
	public GameObject bg_window;

	[Token(Token = "0x4000CB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
	public GameObject m_slotCategoryShop;

	[Token(Token = "0x4000CB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
	public List<GameObject> m_moonElementSprites;

	[Token(Token = "0x4000CB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
	public List<GameObject> m_slots;

	[Token(Token = "0x4000CB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7524", Offset = "0xCC7524")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7524", Offset = "0xCC7524")]
	public WandDataVariable m_leftWand;

	[Token(Token = "0x4000CB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
	public WandDataVariable m_rightWand;

	[Token(Token = "0x4000CB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
	public IntVariable m_currency;

	[Token(Token = "0x4000CB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
	public IntVariable m_currentShopLevel;

	[Token(Token = "0x4000CB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
	public GameObjectVariable m_equipmentHand;

	[Token(Token = "0x4000CB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
	public GameObjectVariable m_leftHand;

	[Token(Token = "0x4000CB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
	public GameObjectVariable m_rightHand;

	[Token(Token = "0x4000CBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
	public StringVariable m_locLeftHand;

	[Token(Token = "0x4000CBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
	public StringVariable m_locRightHand;

	[Token(Token = "0x4000CBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
	public StringVariable m_chooseHand;

	[Token(Token = "0x4000CBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
	public SolarSystemVariable m_currentSolarSystem;

	[Token(Token = "0x4000CBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
	public FloatVariable m_fidelityShopSaleCard;

	[Token(Token = "0x4000CBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
	public BoolVariable m_firstTimeShop;

	[Token(Token = "0x4000CC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7574", Offset = "0xCC7574")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7574", Offset = "0xCC7574")]
	public int m_currentPerkNumber;

	[Token(Token = "0x4000CC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
	public IntVariable m_currentRerollCost;

	[Token(Token = "0x4000CC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
	public IntVariable m_currentUpgradeCost;

	[Token(Token = "0x4000CC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
	public BoolVariable m_firstShopVisit;

	[Token(Token = "0x4000CC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
	public List<PerkListWrapper> m_perkListUpgrades;

	[Token(Token = "0x4000CC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
	public string m_buttonStateDisabled;

	[Token(Token = "0x4000CC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
	public bool m_usePerkWand;

	[Token(Token = "0x4000CC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
	public List<PerkData> m_firstShopList;

	[Token(Token = "0x4000CC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC75C4", Offset = "0xCC75C4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC75C4", Offset = "0xCC75C4")]
	public StringVariable m_dominantHand;

	[Token(Token = "0x4000CC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
	public List<GestureData.SpellType> m_leadingHandSpellTypes;

	[Token(Token = "0x4000CCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
	public List<GestureData.SpellType> m_nonLeadingHandSpellTypes;

	[Token(Token = "0x4000CCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7614", Offset = "0xCC7614")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7614", Offset = "0xCC7614")]
	public UnityEvent OnPurchase;

	[Token(Token = "0x4000CCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
	public UnityEvent OnExitShop;

	[Token(Token = "0x4000CCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
	public StringUnityEvent OnExitTutoShop;

	[Token(Token = "0x4000CCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
	public StringUnityEvent OnNewGestureLeft;

	[Token(Token = "0x4000CCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
	public StringUnityEvent OnNewGestureRight;

	[Token(Token = "0x4000CD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
	public PerkListUpgradeUnityEvent OnNewPerkListShop;

	[Token(Token = "0x4000CD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
	public UnityEvent OnEndPurchase;

	[Token(Token = "0x4000CD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
	private List<GameObject> _instanciatedPerkBubbles;

	[Token(Token = "0x4000CD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
	private List<PerkData> _pickedPerks;

	[Token(Token = "0x4000CD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
	private bool _inEquipment;

	[Token(Token = "0x4000CD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
	private GameObject _currentReplacementBubble;

	[Token(Token = "0x4000CD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
	private GameObject _currentArrowVizualization;

	[Token(Token = "0x4000CD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
	private GameObject _currentSpellFeedback;

	[Token(Token = "0x4000CD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
	private GameObject _equipment;

	[Token(Token = "0x4000CD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
	private TextMeshPro _currentText;

	[Token(Token = "0x4000CDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
	private Dictionary<GameObject, GameObject> _wireCrystalBinder;

	[Token(Token = "0x4000CDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
	private int _currentSlotReroll;

	[Token(Token = "0x4000CDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
	private List<PerkType> _types;

	[Token(Token = "0x600091C")]
	[Address(RVA = "0x1020C54", Offset = "0x1020C54", VA = "0x1020C54")]
	private void Awake()
	{
	}

	[Token(Token = "0x600091D")]
	[Address(RVA = "0x1020E38", Offset = "0x1020E38", VA = "0x1020E38")]
	public void OnDisplayShop(bool reroll = false)
	{
	}

	[Token(Token = "0x600091E")]
	[Address(RVA = "0x10240F8", Offset = "0x10240F8", VA = "0x10240F8")]
	public void OnDisplayShop(int slotNumber)
	{
	}

	[Token(Token = "0x600091F")]
	[Address(RVA = "0x10248EC", Offset = "0x10248EC", VA = "0x10248EC")]
	public void PopulateWire(int index)
	{
	}

	[Token(Token = "0x6000920")]
	[Address(RVA = "0x1024DC0", Offset = "0x1024DC0", VA = "0x1024DC0")]
	public void OnHighlightPerk(object[] perkInfo)
	{
	}

	[Token(Token = "0x6000921")]
	[Address(RVA = "0x1025078", Offset = "0x1025078", VA = "0x1025078")]
	public void OnExitHighlightPerk(object[] perkInfo)
	{
	}

	[Token(Token = "0x6000922")]
	[Address(RVA = "0x1021FE0", Offset = "0x1021FE0", VA = "0x1021FE0")]
	public void CreatePerkBubble(GameObject perkBubble, PerkData perk)
	{
	}

	[Token(Token = "0x6000923")]
	[Address(RVA = "0x1021E70", Offset = "0x1021E70", VA = "0x1021E70")]
	public PerkData GetRandomPerk([Optional] List<PerkData> perks, PerkType type = PerkType.DEFENSE)
	{
		return null;
	}

	[Token(Token = "0x6000924")]
	[Address(RVA = "0x10253B0", Offset = "0x10253B0", VA = "0x10253B0")]
	public bool LimitPerk(PerkData perk)
	{
		return default(bool);
	}

	[Token(Token = "0x6000925")]
	[Address(RVA = "0x1021658", Offset = "0x1021658", VA = "0x1021658")]
	public List<PerkData> CheckPerks(PerkType type)
	{
		return null;
	}

	[Token(Token = "0x6000926")]
	[Address(RVA = "0x1025488", Offset = "0x1025488", VA = "0x1025488")]
	public void OnEquipmentChosen()
	{
	}

	[Token(Token = "0x6000927")]
	[Address(RVA = "0x10254D0", Offset = "0x10254D0", VA = "0x10254D0")]
	public void OnPurchasePerk(object[] parameters)
	{
	}

	[Token(Token = "0x6000928")]
	[Address(RVA = "0x10257C4", Offset = "0x10257C4", VA = "0x10257C4")]
	public void OnPurchasePerkNoRoutine(object[] parameters)
	{
	}

	[Token(Token = "0x6000929")]
	[Address(RVA = "0x1025704", Offset = "0x1025704", VA = "0x1025704")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD16F4", Offset = "0xCD16F4")]
	public IEnumerator<float> OnPurchasePerkRoutine(string perkId, WandData wandUsed, bool routine = true)
	{
		return null;
	}

	[Token(Token = "0x600092A")]
	[Address(RVA = "0x10259E8", Offset = "0x10259E8", VA = "0x10259E8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1758", Offset = "0xCD1758")]
	public IEnumerator<float> BuyRoutine(PerkData perk)
	{
		return null;
	}

	[Token(Token = "0x600092B")]
	[Address(RVA = "0x10238E4", Offset = "0x10238E4", VA = "0x10238E4")]
	public void CheckReplacement(PerkData perk, string handTag, Transform parent)
	{
	}

	[Token(Token = "0x600092C")]
	[Address(RVA = "0x1025AA0", Offset = "0x1025AA0", VA = "0x1025AA0")]
	public void CancelPurchase()
	{
	}

	[Token(Token = "0x600092D")]
	[Address(RVA = "0x1025B88", Offset = "0x1025B88", VA = "0x1025B88")]
	public void DeactiveAllBubbles(int instanceId)
	{
	}

	[Token(Token = "0x600092E")]
	[Address(RVA = "0x1025CAC", Offset = "0x1025CAC", VA = "0x1025CAC")]
	public void DeactiveAllBubbles([Optional] string perkId)
	{
	}

	[Token(Token = "0x600092F")]
	[Address(RVA = "0x1025F2C", Offset = "0x1025F2C", VA = "0x1025F2C")]
	public void ActivateAllBubbles(int instanceId)
	{
	}

	[Token(Token = "0x6000930")]
	[Address(RVA = "0x1026050", Offset = "0x1026050", VA = "0x1026050")]
	public void ActivateAllBubbles([Optional] string perkId)
	{
	}

	[Token(Token = "0x6000931")]
	[Address(RVA = "0x10262D0", Offset = "0x10262D0", VA = "0x10262D0")]
	public void OnRerollPerks()
	{
	}

	[Token(Token = "0x6000932")]
	[Address(RVA = "0x1024710", Offset = "0x1024710", VA = "0x1024710")]
	public void CheckBuyingPossibility()
	{
	}

	[Token(Token = "0x6000933")]
	[Address(RVA = "0x10240F4", Offset = "0x10240F4", VA = "0x10240F4")]
	public void CheckRerollPossibility()
	{
	}

	[Token(Token = "0x6000934")]
	[Address(RVA = "0x10262D4", Offset = "0x10262D4", VA = "0x10262D4")]
	public void RestoreShopLevelState()
	{
	}

	[Token(Token = "0x6000935")]
	[Address(RVA = "0x102635C", Offset = "0x102635C", VA = "0x102635C")]
	public void OnUpgradeShop(string upgrade)
	{
	}

	[Token(Token = "0x6000936")]
	[Address(RVA = "0x10265D8", Offset = "0x10265D8", VA = "0x10265D8")]
	public void UnlockPerkList(PerkListWrapper perkList)
	{
	}

	[Token(Token = "0x6000937")]
	[Address(RVA = "0x102669C", Offset = "0x102669C", VA = "0x102669C")]
	public void ExitShop()
	{
	}

	[Token(Token = "0x6000938")]
	[Address(RVA = "0x10267D8", Offset = "0x10267D8", VA = "0x10267D8")]
	public void ResetStars()
	{
	}

	[Token(Token = "0x6000939")]
	[Address(RVA = "0x102689C", Offset = "0x102689C", VA = "0x102689C")]
	public GameObject FindBubble(string perkId)
	{
		return null;
	}

	[Token(Token = "0x600093A")]
	[Address(RVA = "0x1026B04", Offset = "0x1026B04", VA = "0x1026B04")]
	public ShopManager()
	{
	}
}
[Token(Token = "0x200021D")]
public class ShopPurchaseManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005F4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF570", Offset = "0xCBF570")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__14_0;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__14_1;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__15_0;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Transform, bool> <>9__15_1;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<Transform, bool> <>9__16_0;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<Transform, bool> <>9__17_0;

		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<Transform, bool> <>9__17_1;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<Transform, bool> <>9__17_2;

		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static Func<Transform, bool> <>9__17_3;

		[Token(Token = "0x6002246")]
		[Address(RVA = "0x102A874", Offset = "0x102A874", VA = "0x102A874")]
		public <>c()
		{
		}

		[Token(Token = "0x6002247")]
		[Address(RVA = "0x102A87C", Offset = "0x102A87C", VA = "0x102A87C")]
		internal bool <OnTriggerExit>b__14_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002248")]
		[Address(RVA = "0x102A8E0", Offset = "0x102A8E0", VA = "0x102A8E0")]
		internal bool <OnTriggerExit>b__14_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002249")]
		[Address(RVA = "0x102A944", Offset = "0x102A944", VA = "0x102A944")]
		internal bool <OnTriggerEnter>b__15_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600224A")]
		[Address(RVA = "0x102A9A8", Offset = "0x102A9A8", VA = "0x102A9A8")]
		internal bool <OnTriggerEnter>b__15_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600224B")]
		[Address(RVA = "0x102AA0C", Offset = "0x102AA0C", VA = "0x102AA0C")]
		internal bool <OnTriggerStay>b__16_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600224C")]
		[Address(RVA = "0x102AA70", Offset = "0x102AA70", VA = "0x102AA70")]
		internal bool <Update>b__17_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600224D")]
		[Address(RVA = "0x102AAD4", Offset = "0x102AAD4", VA = "0x102AAD4")]
		internal bool <Update>b__17_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600224E")]
		[Address(RVA = "0x102AB38", Offset = "0x102AB38", VA = "0x102AB38")]
		internal bool <Update>b__17_2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600224F")]
		[Address(RVA = "0x102AB9C", Offset = "0x102AB9C", VA = "0x102AB9C")]
		internal bool <Update>b__17_3(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000CDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_tag;

	[Token(Token = "0x4000CDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_axisName;

	[Token(Token = "0x4000CDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ObjectArrayUnityEvent OnPurchasedPerk;

	[Token(Token = "0x4000CE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ObjectArrayUnityEvent OnHighlightPerk;

	[Token(Token = "0x4000CE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ObjectArrayUnityEvent OnExitHighlightPerk;

	[Token(Token = "0x4000CE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_purchaseTimer;

	[Token(Token = "0x4000CE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float m_minDistance;

	[Token(Token = "0x4000CE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FloatVariable m_distance;

	[Token(Token = "0x4000CE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float m_speed;

	[Token(Token = "0x4000CE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_arrowMagnet;

	[Token(Token = "0x4000CE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_replaceArrow;

	[Token(Token = "0x4000CE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_destroyFX;

	[Token(Token = "0x4000CE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public WandDataVariable m_wandData;

	[Token(Token = "0x4000CEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public StringVariable m_dominantHand;

	[Token(Token = "0x4000CEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _interacted;

	[Token(Token = "0x4000CEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _purchaseTimer;

	[Token(Token = "0x4000CED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject m_currentSlot;

	[Token(Token = "0x4000CEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject m_currentCrystal;

	[Token(Token = "0x4000CEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject m_currentParent;

	[Token(Token = "0x4000CF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject m_currentCard;

	[Token(Token = "0x600093C")]
	[Address(RVA = "0x1029388", Offset = "0x1029388", VA = "0x1029388")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600093D")]
	[Address(RVA = "0x1029750", Offset = "0x1029750", VA = "0x1029750")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600093E")]
	[Address(RVA = "0x1029B14", Offset = "0x1029B14", VA = "0x1029B14")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x600093F")]
	[Address(RVA = "0x1029E70", Offset = "0x1029E70", VA = "0x1029E70")]
	public void Update()
	{
	}

	[Token(Token = "0x6000940")]
	[Address(RVA = "0x102A804", Offset = "0x102A804", VA = "0x102A804")]
	public ShopPurchaseManager()
	{
	}
}
[Token(Token = "0x200021E")]
internal class UnityStringEvent
{
	[Token(Token = "0x6000941")]
	[Address(RVA = "0x1105508", Offset = "0x1105508", VA = "0x1105508")]
	public UnityStringEvent()
	{
	}
}
[Token(Token = "0x200021F")]
public struct ActorDataTransformGameEventStruct
{
	[Token(Token = "0x4000CF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public ActorData m_actorData;

	[Token(Token = "0x4000CF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public Transform m_spawnPoint;

	[Token(Token = "0x4000CF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_ownerInstanceId;
}
[Token(Token = "0x2000220")]
public struct ActorStruct
{
	[Token(Token = "0x4000CF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int m_currentPatternIndex;

	[Token(Token = "0x4000CF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public int m_currentActionDataIndex;

	[Token(Token = "0x4000CF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public PatternData m_currentPattern;

	[Token(Token = "0x4000CF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public CustomActionData m_currentAction;

	[Token(Token = "0x4000CF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int m_configId;

	[Token(Token = "0x4000CF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int m_maxEnemyLimit;

	[Token(Token = "0x4000CFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_currentEnemyCount;

	[Token(Token = "0x4000CFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_spawnListIndex;

	[Token(Token = "0x4000CFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_spawnerInstanceId;

	[Token(Token = "0x4000CFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ActorListWrapper> m_batches;

	[Token(Token = "0x4000CFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_set;

	[Token(Token = "0x4000CFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_type;

	[Token(Token = "0x4000D00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool m_finished;
}
[Token(Token = "0x2000221")]
public struct GameObjectGameEventStruct
{
	[Token(Token = "0x4000D01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public GameObject m_gameObject;

	[Token(Token = "0x4000D02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public int m_instanceId;
}
[Serializable]
[Token(Token = "0x2000222")]
public struct Pattern
{
	[Token(Token = "0x4000D03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string m_name;

	[Token(Token = "0x4000D04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[Expandable]
	public PatternData m_patternData;
}
[Token(Token = "0x2000223")]
public struct StringTextAssetListStruct
{
	[Token(Token = "0x4000D05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public string m_name;

	[Token(Token = "0x4000D06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public List<TextAsset> m_textAssets;

	[Token(Token = "0x4000D07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int m_numberOfTextAssetToDownload;

	[Token(Token = "0x6000942")]
	[Address(RVA = "0xDD5560", Offset = "0xDD5560", VA = "0xDD5560")]
	public StringTextAssetListStruct(string name)
	{
	}
}
[Token(Token = "0x2000224")]
public struct Vector3IntGameEventStruct
{
	[Token(Token = "0x4000D08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 m_position;

	[Token(Token = "0x4000D09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public int m_instanceId;
}
[Token(Token = "0x2000225")]
public class ParticleInteractorSigns : MonoBehaviour
{
	[Token(Token = "0x4000D0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable m_gameObjectVariable;

	[Token(Token = "0x4000D0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Color m_defaultColor;

	[Token(Token = "0x4000D0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Color m_activatedColor;

	[Token(Token = "0x4000D0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject _gameObject;

	[Token(Token = "0x4000D0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private ParticleSystem _particleSystem;

	[Token(Token = "0x6000943")]
	[Address(RVA = "0x14EE964", Offset = "0x14EE964", VA = "0x14EE964")]
	private void Update()
	{
	}

	[Token(Token = "0x6000944")]
	[Address(RVA = "0x14EEB7C", Offset = "0x14EEB7C", VA = "0x14EEB7C")]
	public void ChangeColor(GameObject go, Color color)
	{
	}

	[Token(Token = "0x6000945")]
	[Address(RVA = "0x14EEC58", Offset = "0x14EEC58", VA = "0x14EEC58")]
	public ParticleInteractorSigns()
	{
	}
}
[Token(Token = "0x2000226")]
public class TelekineticManager : MonoBehaviour
{
	[Token(Token = "0x4000D0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TelekineticData m_telekineticData;

	[Token(Token = "0x4000D10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_shooter;

	[Token(Token = "0x4000D11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_telekineticEffect;

	[Token(Token = "0x4000D12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject m_telekinesisTarget;

	[Token(Token = "0x4000D13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_debugSphere;

	[Token(Token = "0x4000D14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string m_axisName;

	[Token(Token = "0x4000D15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public VelocityTracker m_velocityTracker;

	[Token(Token = "0x4000D16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7674", Offset = "0xCC7674")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7674", Offset = "0xCC7674")]
	public bool m_useAutoAimForBoidBall;

	[Token(Token = "0x4000D17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObjectVariable m_autoAimedBoidBall;

	[Token(Token = "0x4000D18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC76C4", Offset = "0xCC76C4")]
	public bool m_useAutoAimForPlanet;

	[Token(Token = "0x4000D19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObjectVariable m_autoAimedPlanet;

	[Token(Token = "0x4000D1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameObject _hand;

	[Token(Token = "0x4000D1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float _distance;

	[Token(Token = "0x4000D1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float _force;

	[Token(Token = "0x4000D1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float _thresholdDistance;

	[Token(Token = "0x4000D1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float _accelerationForce;

	[Token(Token = "0x4000D1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _depthForce;

	[Token(Token = "0x4000D20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _useInertia;

	[Token(Token = "0x4000D21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
	private bool _telekinesisOn;

	[Token(Token = "0x4000D22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject _telekinesisObject;

	[Token(Token = "0x4000D23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private float _zSnap;

	[Token(Token = "0x4000D24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject _curve;

	[Token(Token = "0x4000D25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private CinemachinePath _telekineticEffectPath;

	[Token(Token = "0x4000D26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private CinemachineDollyCart _telekineticEffectCart;

	[Token(Token = "0x4000D27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Vector3 _handPositionSnapshot;

	[Token(Token = "0x4000D28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject _debugSphere;

	[Token(Token = "0x4000D29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private float _depth;

	[Token(Token = "0x6000946")]
	[Address(RVA = "0x1078A34", Offset = "0x1078A34", VA = "0x1078A34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000947")]
	[Address(RVA = "0x1078AC8", Offset = "0x1078AC8", VA = "0x1078AC8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000948")]
	[Address(RVA = "0x1078DE0", Offset = "0x1078DE0", VA = "0x1078DE0")]
	public void OnControllerTriggerPressed()
	{
	}

	[Token(Token = "0x6000949")]
	[Address(RVA = "0x10791C8", Offset = "0x10791C8", VA = "0x10791C8")]
	public void OnControllerTriggerReleased()
	{
	}

	[Token(Token = "0x600094A")]
	[Address(RVA = "0x10793CC", Offset = "0x10793CC", VA = "0x10793CC")]
	public void MoveDepth()
	{
	}

	[Token(Token = "0x600094B")]
	[Address(RVA = "0x107955C", Offset = "0x107955C", VA = "0x107955C")]
	public TelekineticManager()
	{
	}
}
[Token(Token = "0x2000227")]
public class VectorFollower : CacheBehaviour
{
	[Token(Token = "0x4000D2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Vector3 m_vectorToFollow;

	[Token(Token = "0x4000D2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	public float m_speed;

	[Token(Token = "0x4000D2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public Transform m_transformToFollow;

	[Token(Token = "0x600094C")]
	[Address(RVA = "0x1106CC0", Offset = "0x1106CC0", VA = "0x1106CC0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600094D")]
	[Address(RVA = "0x1106EAC", Offset = "0x1106EAC", VA = "0x1106EAC")]
	public VectorFollower()
	{
	}
}
[Token(Token = "0x2000228")]
public class ActorLifeGauge : CacheBehaviour
{
	[Token(Token = "0x4000D2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC76D8", Offset = "0xCC76D8")]
	public Transform m_gaugeTransform;

	[Token(Token = "0x4000D2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public float m_barPositionWhenDeath;

	[Token(Token = "0x4000D2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public DestroyObjectOnTriggerEnter[] m_triggers;

	[Token(Token = "0x4000D30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[HideInInspector]
	public int m_maxHP;

	[Token(Token = "0x4000D31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[HideInInspector]
	public int m_currentHP;

	[Token(Token = "0x4000D32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Vector3 _tempPosition;

	[Token(Token = "0x600094E")]
	[Address(RVA = "0x16A7AA0", Offset = "0x16A7AA0", VA = "0x16A7AA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600094F")]
	[Address(RVA = "0x16A7C08", Offset = "0x16A7C08", VA = "0x16A7C08")]
	public void OnLoseHP(int hpLost)
	{
	}

	[Token(Token = "0x6000950")]
	[Address(RVA = "0x16A7D94", Offset = "0x16A7D94", VA = "0x16A7D94")]
	public void OnRefreshMaxHP()
	{
	}

	[Token(Token = "0x6000951")]
	[Address(RVA = "0x16A7D34", Offset = "0x16A7D34", VA = "0x16A7D34")]
	private void MoveGauge()
	{
	}

	[Token(Token = "0x6000952")]
	[Address(RVA = "0x16A7E14", Offset = "0x16A7E14", VA = "0x16A7E14")]
	public ActorLifeGauge()
	{
	}
}
[Token(Token = "0x2000229")]
public class BossLifeGauge : MonoBehaviour
{
	[Token(Token = "0x4000D33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_gaugeTransform;

	[Token(Token = "0x4000D34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public readonly float m_barPositionWhenDeath;

	[Token(Token = "0x4000D35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_offsetRemainingParts;

	[Token(Token = "0x4000D36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_remainingParts;

	[Token(Token = "0x4000D37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_fullPartsCount;

	[Token(Token = "0x4000D38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable m_partsToDestroyCount;

	[Token(Token = "0x4000D39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 _tempPosition;

	[Token(Token = "0x6000953")]
	[Address(RVA = "0xF68738", Offset = "0xF68738", VA = "0xF68738")]
	public void OnActorPart(IntIntGameEventStruct gameEventStruct)
	{
	}

	[Token(Token = "0x6000954")]
	[Address(RVA = "0xF68830", Offset = "0xF68830", VA = "0xF68830")]
	public BossLifeGauge()
	{
	}
}
[Token(Token = "0x200022A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB956C", Offset = "0xCB956C")]
public class SOUIScoreDisplaySettings : ScriptableObject
{
	[Token(Token = "0x4000D3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_text;

	[Token(Token = "0x4000D3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int m_score;

	[Token(Token = "0x4000D3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Vector3 m_offset;

	[Token(Token = "0x4000D3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float m_stayTime;

	[Token(Token = "0x4000D3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject m_uiFeedback;

	[Token(Token = "0x6000955")]
	[Address(RVA = "0xFFAE1C", Offset = "0xFFAE1C", VA = "0xFFAE1C")]
	public SOUIScoreDisplaySettings()
	{
	}
}
[Token(Token = "0x200022B")]
public class DamageDisplay : CacheBehaviour
{
	[Token(Token = "0x4000D3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro m_text;

	[Token(Token = "0x4000D40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FadeOutTextMeshPro m_fadeOut;

	[Token(Token = "0x6000956")]
	[Address(RVA = "0xF73104", Offset = "0xF73104", VA = "0xF73104")]
	public void Show()
	{
	}

	[Token(Token = "0x6000957")]
	[Address(RVA = "0xF73148", Offset = "0xF73148", VA = "0xF73148")]
	public DamageDisplay()
	{
	}
}
[Token(Token = "0x200022C")]
public class FadeOutTextMeshPro : MonoBehaviour
{
	[Token(Token = "0x4000D41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro m_textMeshPro;

	[Token(Token = "0x4000D42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_fadingTime;

	[Token(Token = "0x4000D43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float m_delay;

	[Token(Token = "0x4000D44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_destroyOnFinish;

	[Token(Token = "0x4000D45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Color _tempcolor;

	[Token(Token = "0x6000958")]
	[Address(RVA = "0xF39A98", Offset = "0xF39A98", VA = "0xF39A98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000959")]
	[Address(RVA = "0xF39E08", Offset = "0xF39E08", VA = "0xF39E08")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600095A")]
	[Address(RVA = "0xF39E84", Offset = "0xF39E84", VA = "0xF39E84")]
	private void OnCompleteFadeOut()
	{
	}

	[Token(Token = "0x600095B")]
	[Address(RVA = "0xF39F34", Offset = "0xF39F34", VA = "0xF39F34")]
	private void UpdateTextMeshProAlpha(float value)
	{
	}

	[Token(Token = "0x600095C")]
	[Address(RVA = "0xF39B9C", Offset = "0xF39B9C", VA = "0xF39B9C")]
	private void RunTweenValueTo(string name, string onupdate, float from, float to, float time, float delay = -1f, [Optional] string easeType, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x600095D")]
	[Address(RVA = "0xF39F6C", Offset = "0xF39F6C", VA = "0xF39F6C")]
	public FadeOutTextMeshPro()
	{
	}
}
[Token(Token = "0x200022D")]
public class FeedbackAttack3D : CacheBehaviour
{
	[Token(Token = "0x4000D46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public ActorLifeGauge m_lifeGauge;

	[Token(Token = "0x4000D47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_graphics;

	[Token(Token = "0x4000D48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_useTarget;

	[Token(Token = "0x4000D49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_target;

	[Token(Token = "0x4000D4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private int _instanceId;

	[Token(Token = "0x600095E")]
	[Address(RVA = "0xF39F7C", Offset = "0xF39F7C", VA = "0xF39F7C")]
	private void Start()
	{
	}

	[Token(Token = "0x600095F")]
	[Address(RVA = "0xF3A0C8", Offset = "0xF3A0C8", VA = "0xF3A0C8")]
	public void OnAttackHUD(int instanceId)
	{
	}

	[Token(Token = "0x6000960")]
	[Address(RVA = "0xF3A134", Offset = "0xF3A134", VA = "0xF3A134")]
	public void OnStopAttackHUD(int instanceId)
	{
	}

	[Token(Token = "0x6000961")]
	[Address(RVA = "0xF3A164", Offset = "0xF3A164", VA = "0xF3A164")]
	public FeedbackAttack3D()
	{
	}
}
[Token(Token = "0x200022E")]
public class InfoPlanet : MonoBehaviour
{
	[Token(Token = "0x4000D4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7730", Offset = "0xCC7730")]
	public TextMeshPro m_planetName;

	[Token(Token = "0x4000D4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro m_azoteCount;

	[Token(Token = "0x4000D4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro m_carbonCount;

	[Token(Token = "0x4000D4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public TextMeshPro m_phosphorusCount;

	[Token(Token = "0x4000D4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshPro m_sulfurCount;

	[Token(Token = "0x4000D50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshPro m_waterCount;

	[Token(Token = "0x4000D51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7768", Offset = "0xCC7768")]
	public GameObject m_azoteGO;

	[Token(Token = "0x4000D52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject m_carbonGO;

	[Token(Token = "0x4000D53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject m_phosphorusGO;

	[Token(Token = "0x4000D54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject m_sulfurGO;

	[Token(Token = "0x4000D55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject m_waterGO;

	[Token(Token = "0x4000D56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC77A0", Offset = "0xCC77A0")]
	public GameObject m_azoteNoneGO;

	[Token(Token = "0x4000D57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject m_carbonNoneGO;

	[Token(Token = "0x4000D58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject m_phosphorusNoneGO;

	[Token(Token = "0x4000D59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public GameObject m_sulfurNoneGO;

	[Token(Token = "0x4000D5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public GameObject m_waterNoneGO;

	[Token(Token = "0x6000962")]
	[Address(RVA = "0xFBB3CC", Offset = "0xFBB3CC", VA = "0xFBB3CC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000963")]
	[Address(RVA = "0xFBB534", Offset = "0xFBB534", VA = "0xFBB534")]
	public InfoPlanet()
	{
	}
}
[Token(Token = "0x200022F")]
public class ScoreDisplay : CacheBehaviour
{
	[Token(Token = "0x4000D5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC77D8", Offset = "0xCC77D8")]
	public TextMeshPro m_text;

	[Token(Token = "0x4000D5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public TextMeshPro m_score;

	[Token(Token = "0x4000D5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7810", Offset = "0xCC7810")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7810", Offset = "0xCC7810")]
	public SOUIScoreDisplaySettings m_hitSettings;

	[Token(Token = "0x4000D5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public SOUIScoreDisplaySettings m_deadSettings;

	[Token(Token = "0x4000D5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public SOUIScoreDisplaySettings m_invulnerableSettings;

	[Token(Token = "0x4000D60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public SOUIScoreDisplaySettings m_dodgeSettings;

	[Token(Token = "0x4000D61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7860", Offset = "0xCC7860")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7860", Offset = "0xCC7860")]
	public IntVariable m_playerScore;

	[Token(Token = "0x4000D62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public IntVariable m_playerScoreMultiplyer;

	[Token(Token = "0x4000D63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObjectVariable m_headset;

	[Token(Token = "0x4000D64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int _hitCount;

	[Token(Token = "0x4000D65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int _tempAddScore;

	[Token(Token = "0x4000D66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 _startTextPos;

	[Token(Token = "0x4000D67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private Vector3 _startScorePos;

	[Token(Token = "0x4000D68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Transform _headsetTransform;

	[Token(Token = "0x6000964")]
	[Address(RVA = "0x1014CC0", Offset = "0x1014CC0", VA = "0x1014CC0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000965")]
	[Address(RVA = "0x1014CC4", Offset = "0x1014CC4", VA = "0x1014CC4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000966")]
	[Address(RVA = "0x1014D90", Offset = "0x1014D90", VA = "0x1014D90")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000967")]
	[Address(RVA = "0x1014E0C", Offset = "0x1014E0C", VA = "0x1014E0C")]
	public void OnActorTouchedPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000968")]
	[Address(RVA = "0x1015194", Offset = "0x1015194", VA = "0x1015194")]
	public void OnActorSkeletonTouchedPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000969")]
	[Address(RVA = "0x1015384", Offset = "0x1015384", VA = "0x1015384")]
	public void OnActorDeadPosition(Vector3 position)
	{
	}

	[Token(Token = "0x600096A")]
	[Address(RVA = "0x10155E0", Offset = "0x10155E0", VA = "0x10155E0")]
	public void OnDodge()
	{
	}

	[Token(Token = "0x600096B")]
	[Address(RVA = "0x1015720", Offset = "0x1015720", VA = "0x1015720")]
	public void ResetMultiplyer()
	{
	}

	[Token(Token = "0x600096C")]
	[Address(RVA = "0x10150CC", Offset = "0x10150CC", VA = "0x10150CC")]
	private void ShowUI(float stayTime, string hideFunction)
	{
	}

	[Token(Token = "0x600096D")]
	[Address(RVA = "0x10159F8", Offset = "0x10159F8", VA = "0x10159F8")]
	public void HideAfterTouched()
	{
	}

	[Token(Token = "0x600096E")]
	[Address(RVA = "0x1015ADC", Offset = "0x1015ADC", VA = "0x1015ADC")]
	public void HideAfterInvulnerable()
	{
	}

	[Token(Token = "0x600096F")]
	[Address(RVA = "0x1015AF8", Offset = "0x1015AF8", VA = "0x1015AF8")]
	public void HideAfterDead()
	{
	}

	[Token(Token = "0x6000970")]
	[Address(RVA = "0x1015B14", Offset = "0x1015B14", VA = "0x1015B14")]
	public void HideAfterDodge()
	{
	}

	[Token(Token = "0x6000971")]
	[Address(RVA = "0x1015A14", Offset = "0x1015A14", VA = "0x1015A14")]
	public void HideUI(float delay = -1f)
	{
	}

	[Token(Token = "0x6000972")]
	[Address(RVA = "0x1015B30", Offset = "0x1015B30", VA = "0x1015B30")]
	private void UpdateTextAlpha(float value)
	{
	}

	[Token(Token = "0x6000973")]
	[Address(RVA = "0x1015B90", Offset = "0x1015B90", VA = "0x1015B90")]
	private void UpdateScoreAlpha(float value)
	{
	}

	[Token(Token = "0x6000974")]
	[Address(RVA = "0x1015B38", Offset = "0x1015B38", VA = "0x1015B38")]
	private void UpdateTextMeshProAlpha(TextMeshPro tmp, float value)
	{
	}

	[Token(Token = "0x6000975")]
	[Address(RVA = "0x1015760", Offset = "0x1015760", VA = "0x1015760")]
	private void RunTweenValueTo(string name, string onupdate, float from, float to, float time, float delay = -1f, [Optional] string easeType, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x6000976")]
	[Address(RVA = "0x1015B98", Offset = "0x1015B98", VA = "0x1015B98")]
	public ScoreDisplay()
	{
	}
}
[Token(Token = "0x2000230")]
public class TextFeedbackUI : MonoBehaviour
{
	[Token(Token = "0x4000D69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshPro m_textMeshPro;

	[Token(Token = "0x4000D6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string m_prefix;

	[Token(Token = "0x4000D6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TextMeshPro m_score;

	[Token(Token = "0x6000977")]
	[Address(RVA = "0x107ED7C", Offset = "0x107ED7C", VA = "0x107ED7C")]
	public void ChangeText(string newText)
	{
	}

	[Token(Token = "0x6000978")]
	[Address(RVA = "0x107EE38", Offset = "0x107EE38", VA = "0x107EE38")]
	public void ChangeText(StringVariable stringVariable)
	{
	}

	[Token(Token = "0x6000979")]
	[Address(RVA = "0x107EE94", Offset = "0x107EE94", VA = "0x107EE94")]
	public void ChangeText(IntVariable intVariable)
	{
	}

	[Token(Token = "0x600097A")]
	[Address(RVA = "0x107EF40", Offset = "0x107EF40", VA = "0x107EF40")]
	public TextFeedbackUI()
	{
	}
}
[Token(Token = "0x2000231")]
public class WarningZoneManager : CacheBehaviour
{
	[Token(Token = "0x20005F5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF580", Offset = "0xCBF580")]
	private sealed class <DeactivateBox>d__10 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m_disappearAnimTime;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject box;

		[Token(Token = "0x1700038B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002253")]
			[Address(RVA = "0x11089E8", Offset = "0x11089E8", VA = "0x11089E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002255")]
			[Address(RVA = "0x1108A50", Offset = "0x1108A50", VA = "0x1108A50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002250")]
		[Address(RVA = "0x1108808", Offset = "0x1108808", VA = "0x1108808")]
		[DebuggerHidden]
		public <DeactivateBox>d__10(int <>1__state)
		{
		}

		[Token(Token = "0x6002251")]
		[Address(RVA = "0x1108920", Offset = "0x1108920", VA = "0x1108920", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002252")]
		[Address(RVA = "0x1108924", Offset = "0x1108924", VA = "0x1108924", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002254")]
		[Address(RVA = "0x11089F0", Offset = "0x11089F0", VA = "0x11089F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000D6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_warningZonePrefab;

	[Token(Token = "0x4000D6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC78B0", Offset = "0xCC78B0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC78B0", Offset = "0xCC78B0")]
	public string m_nameAnimationDisappear;

	[Token(Token = "0x4000D6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public float m_disappearAnimTime;

	[Token(Token = "0x4000D6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Dictionary<string, GameObject> _dicoLabelZones;

	[Token(Token = "0x4000D70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private Dictionary<string, List<int>> _dicoLabelInstances;

	[Token(Token = "0x4000D71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<string> _labels;

	[Token(Token = "0x600097B")]
	[Address(RVA = "0x1107B64", Offset = "0x1107B64", VA = "0x1107B64")]
	public void OnActivateWarningZone(object[] eventParams)
	{
	}

	[Token(Token = "0x600097C")]
	[Address(RVA = "0x1108044", Offset = "0x1108044", VA = "0x1108044")]
	public void OnDeactivateWarningZone(object[] eventParams)
	{
	}

	[Token(Token = "0x600097D")]
	[Address(RVA = "0x1108234", Offset = "0x1108234", VA = "0x1108234")]
	public void OnDeactivateAllWarningZonesInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x600097E")]
	[Address(RVA = "0x1108450", Offset = "0x1108450", VA = "0x1108450")]
	public void OnActorDestroyedInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x600097F")]
	[Address(RVA = "0x1108454", Offset = "0x1108454", VA = "0x1108454")]
	public void OnAllPlanetsRegenerated()
	{
	}

	[Token(Token = "0x6000980")]
	[Address(RVA = "0x1108370", Offset = "0x1108370", VA = "0x1108370")]
	private void RemoveInstanceId(int instanceId, string labelName)
	{
	}

	[Token(Token = "0x6000981")]
	[Address(RVA = "0x1108600", Offset = "0x1108600", VA = "0x1108600")]
	private void BoxDisappear(GameObject box)
	{
	}

	[Token(Token = "0x6000982")]
	[Address(RVA = "0x110877C", Offset = "0x110877C", VA = "0x110877C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD17BC", Offset = "0xCD17BC")]
	private IEnumerator<float> DeactivateBox(GameObject box, float m_disappearAnimTime)
	{
		return null;
	}

	[Token(Token = "0x6000983")]
	[Address(RVA = "0x1108834", Offset = "0x1108834", VA = "0x1108834")]
	public WarningZoneManager()
	{
	}
}
[Token(Token = "0x2000232")]
public class UI_EndScreen : CacheBehaviour
{
	[Token(Token = "0x4000D72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private bool _isVictory;

	[Token(Token = "0x4000D73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7900", Offset = "0xCC7900")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7900", Offset = "0xCC7900")]
	public IntVariable m_playerScore;

	[Token(Token = "0x4000D74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IntVariable m_playerScoreMultiplyer;

	[Token(Token = "0x4000D75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public IntVariable m_playerHealth;

	[Token(Token = "0x4000D76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public BoolVariable m_playerInBoss;

	[Token(Token = "0x4000D77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public BoolVariable m_playerInLastBoss;

	[Token(Token = "0x4000D78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7950", Offset = "0xCC7950")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7950", Offset = "0xCC7950")]
	public SpriteRenderer m_IcoWin;

	[Token(Token = "0x4000D79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public SpriteRenderer m_IcoLose;

	[Token(Token = "0x4000D7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public TextMeshPro m_text_gameOver;

	[Token(Token = "0x4000D7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject button_Continue;

	[Token(Token = "0x4000D7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public GameObject button_Resume;

	[Token(Token = "0x4000D7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC79A0", Offset = "0xCC79A0")]
	public TextMeshPro m_newSystemDiscovered;

	[Token(Token = "0x4000D7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC79D8", Offset = "0xCC79D8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC79D8", Offset = "0xCC79D8")]
	public GameEventListener m_triggerThenHide;

	[Token(Token = "0x4000D7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public BoolUnityEvent OnTweenOver;

	[Token(Token = "0x4000D80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UnityEvent OnScreenHiddenWin;

	[Token(Token = "0x4000D81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public UnityEvent OnScreenHiddenLose;

	[Token(Token = "0x4000D82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public UnityEvent OnScreenHiddenBoss;

	[Token(Token = "0x6000984")]
	[Address(RVA = "0x10FF858", Offset = "0x10FF858", VA = "0x10FF858")]
	public void OnVictory()
	{
	}

	[Token(Token = "0x6000985")]
	[Address(RVA = "0x10FF8E8", Offset = "0x10FF8E8", VA = "0x10FF8E8")]
	public void OnLose()
	{
	}

	[Token(Token = "0x6000986")]
	[Address(RVA = "0x10FF994", Offset = "0x10FF994", VA = "0x10FF994")]
	public void RaiseHiddenEvent()
	{
	}

	[Token(Token = "0x6000987")]
	[Address(RVA = "0x10FFAA8", Offset = "0x10FFAA8", VA = "0x10FFAA8")]
	public void OnShowComplete()
	{
	}

	[Token(Token = "0x6000988")]
	[Address(RVA = "0x10FFB04", Offset = "0x10FFB04", VA = "0x10FFB04")]
	public void OnEndScreenTweenStart()
	{
	}

	[Token(Token = "0x6000989")]
	[Address(RVA = "0x10FFB8C", Offset = "0x10FFB8C", VA = "0x10FFB8C")]
	public void OnFinalScoreTweenStart()
	{
	}

	[Token(Token = "0x600098A")]
	[Address(RVA = "0x10FFC14", Offset = "0x10FFC14", VA = "0x10FFC14")]
	private void Start()
	{
	}

	[Token(Token = "0x600098B")]
	[Address(RVA = "0x10FFC18", Offset = "0x10FFC18", VA = "0x10FFC18")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600098C")]
	[Address(RVA = "0x10FFC94", Offset = "0x10FFC94", VA = "0x10FFC94")]
	public UI_EndScreen()
	{
	}
}
[Token(Token = "0x2000233")]
public class UI_EnemyRadar : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x20005F6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF590", Offset = "0xCBF590")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__15_0;

		[Token(Token = "0x6002257")]
		[Address(RVA = "0x1100B70", Offset = "0x1100B70", VA = "0x1100B70")]
		public <>c()
		{
		}

		[Token(Token = "0x6002258")]
		[Address(RVA = "0x1100B78", Offset = "0x1100B78", VA = "0x1100B78")]
		internal bool <CheckDistanceAndCreateArrow>b__15_0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000D83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public float m_detectionDistance;

	[Token(Token = "0x4000D84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GameObject m_arrow;

	[Token(Token = "0x4000D85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public RectTransform m_mainCanvas;

	[Token(Token = "0x4000D86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_screenOffsetX;

	[Token(Token = "0x4000D87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	public float m_screenOffsetY;

	[Token(Token = "0x4000D88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public Camera m_headCamera;

	[Token(Token = "0x4000D89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Color m_signColor;

	[Token(Token = "0x4000D8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Dictionary<int, Transform> _enemiesDico;

	[Token(Token = "0x4000D8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Dictionary<int, GameObject> _signsDico;

	[Token(Token = "0x4000D8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private Dictionary<int, GameObject> _signsIdleDico;

	[Token(Token = "0x4000D8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private GameObject _tempArrow;

	[Token(Token = "0x4000D8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Vector3 _screenCenter;

	[Token(Token = "0x4000D8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private Camera _mainCamera;

	[Token(Token = "0x4000D90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Plane[] _planes;

	[Token(Token = "0x4000D91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private Color _baseColor;

	[Token(Token = "0x600098D")]
	[Address(RVA = "0x10FFCA4", Offset = "0x10FFCA4", VA = "0x10FFCA4")]
	private void Start()
	{
	}

	[Token(Token = "0x600098E")]
	[Address(RVA = "0x10FFDB8", Offset = "0x10FFDB8", VA = "0x10FFDB8")]
	private void Update()
	{
	}

	[Token(Token = "0x600098F")]
	[Address(RVA = "0x110020C", Offset = "0x110020C", VA = "0x110020C")]
	public void OnActorCreatedInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000990")]
	[Address(RVA = "0x11006D4", Offset = "0x11006D4", VA = "0x11006D4")]
	private void OnActorSnapped(int instanceId)
	{
	}

	[Token(Token = "0x6000991")]
	[Address(RVA = "0x11006D8", Offset = "0x11006D8", VA = "0x11006D8")]
	public void OnActorIsAttacking(int instanceId)
	{
	}

	[Token(Token = "0x6000992")]
	[Address(RVA = "0x11007F4", Offset = "0x11007F4", VA = "0x11007F4")]
	public void OnActorStopAttack(int instanceId)
	{
	}

	[Token(Token = "0x6000993")]
	[Address(RVA = "0x1100910", Offset = "0x1100910", VA = "0x1100910")]
	private void OnBecameVisibleIntEvent(int instanceId)
	{
	}

	[Token(Token = "0x6000994")]
	[Address(RVA = "0x1100914", Offset = "0x1100914", VA = "0x1100914")]
	private void OnBecameInvisibleIntEvent(int instanceId)
	{
	}

	[Token(Token = "0x6000995")]
	[Address(RVA = "0x1100380", Offset = "0x1100380", VA = "0x1100380")]
	private void CheckDistanceAndCreateArrow(int instanceId)
	{
	}

	[Token(Token = "0x6000996")]
	[Address(RVA = "0x1100918", Offset = "0x1100918", VA = "0x1100918")]
	private void OnDestroyIntEvent(int instanceId)
	{
	}

	[Token(Token = "0x6000997")]
	[Address(RVA = "0x1100A20", Offset = "0x1100A20", VA = "0x1100A20")]
	public UI_EnemyRadar()
	{
	}
}
[Token(Token = "0x2000234")]
public class UI_FloatVariableSpriteDisplay : CacheBehaviour
{
	[Token(Token = "0x4000D92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_spriteDisplay;

	[Token(Token = "0x4000D93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_currentVariable;

	[Token(Token = "0x4000D94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FloatVariable m_maxVariable;

	[Token(Token = "0x4000D95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CanvasGroup m_allSpriteCanvasGroup;

	[Token(Token = "0x4000D96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_offset;

	[Token(Token = "0x4000D97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	[HideInInspector]
	public bool m_maxVarChanged;

	[Token(Token = "0x4000D98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
	[HideInInspector]
	public bool m_currentChanged;

	[Token(Token = "0x4000D99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private List<GameObject> _sprites;

	[Token(Token = "0x4000D9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _maxVar;

	[Token(Token = "0x4000D9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float _currentVar;

	[Token(Token = "0x6000998")]
	[Address(RVA = "0x1100BDC", Offset = "0x1100BDC", VA = "0x1100BDC")]
	public void UpdateVarCount()
	{
	}

	[Token(Token = "0x6000999")]
	[Address(RVA = "0x1100D28", Offset = "0x1100D28", VA = "0x1100D28")]
	public void UpdateVarMax()
	{
	}

	[Token(Token = "0x600099A")]
	[Address(RVA = "0x11010DC", Offset = "0x11010DC", VA = "0x11010DC")]
	public void Create()
	{
	}

	[Token(Token = "0x600099B")]
	[Address(RVA = "0x1101208", Offset = "0x1101208", VA = "0x1101208")]
	public void Clear()
	{
	}

	[Token(Token = "0x600099C")]
	[Address(RVA = "0x11012F4", Offset = "0x11012F4", VA = "0x11012F4")]
	private void Start()
	{
	}

	[Token(Token = "0x600099D")]
	[Address(RVA = "0x1101498", Offset = "0x1101498", VA = "0x1101498")]
	private void Update()
	{
	}

	[Token(Token = "0x600099E")]
	[Address(RVA = "0x110147C", Offset = "0x110147C", VA = "0x110147C")]
	public void UpdateChildrenAlpha(float value)
	{
	}

	[Token(Token = "0x600099F")]
	[Address(RVA = "0x1100FC4", Offset = "0x1100FC4", VA = "0x1100FC4")]
	private void AddSprite(int index)
	{
	}

	[Token(Token = "0x60009A0")]
	[Address(RVA = "0x1101528", Offset = "0x1101528", VA = "0x1101528")]
	public UI_FloatVariableSpriteDisplay()
	{
	}
}
[Token(Token = "0x2000235")]
public class UI_HUD : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20005F7")]
	public struct VariableWatcherGraph
	{
		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntVariable m_intVariable;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public CanvasGroup m_canvasGroup;
	}

	[Token(Token = "0x4000D9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7A48", Offset = "0xCC7A48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7A48", Offset = "0xCC7A48")]
	public Canvas m_mainCanvas;

	[Token(Token = "0x4000D9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UI_LifeGauge m_life;

	[Token(Token = "0x4000D9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UI_ManaGauge m_manaGauge;

	[Token(Token = "0x4000D9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UI_FloatVariableSpriteDisplay m_newManaGauge;

	[Token(Token = "0x4000DA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public TextMeshProUGUI m_score;

	[Token(Token = "0x4000DA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextMeshProUGUI m_multiplyer;

	[Token(Token = "0x4000DA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public SpriteRenderer m_lifeSupportIcon;

	[Token(Token = "0x4000DA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TextMeshPro m_lifeSupportsText;

	[Token(Token = "0x4000DA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7A98", Offset = "0xCC7A98")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7A98", Offset = "0xCC7A98")]
	public bool m_deactivateIdleCanvas;

	[Token(Token = "0x4000DA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float m_displayTime;

	[Token(Token = "0x4000DA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float m_fadeInTime;

	[Token(Token = "0x4000DA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float m_fadeOutTime;

	[Token(Token = "0x4000DA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7AE8", Offset = "0xCC7AE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7AE8", Offset = "0xCC7AE8")]
	public VariableWatcherGraph[] m_intVarToWatchWithCanvasGroup;

	[Token(Token = "0x4000DA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7B38", Offset = "0xCC7B38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7B38", Offset = "0xCC7B38")]
	public bool m_enemyRadarActivate;

	[Token(Token = "0x4000DAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public UI_EnemyRadar m_enemyRadar;

	[Token(Token = "0x4000DAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool _lifeTweening;

	[Token(Token = "0x4000DAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool _manaTweening;

	[Token(Token = "0x4000DAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private List<int> _previousIntVars;

	[Token(Token = "0x60009A1")]
	[Address(RVA = "0x11015AC", Offset = "0x11015AC", VA = "0x11015AC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009A2")]
	[Address(RVA = "0x1101838", Offset = "0x1101838", VA = "0x1101838")]
	private void Update()
	{
	}

	[Token(Token = "0x60009A3")]
	[Address(RVA = "0x1101A04", Offset = "0x1101A04", VA = "0x1101A04")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009A4")]
	[Address(RVA = "0x1101A80", Offset = "0x1101A80", VA = "0x1101A80")]
	public void ShowLifeSupport()
	{
	}

	[Token(Token = "0x60009A5")]
	[Address(RVA = "0x1101D48", Offset = "0x1101D48", VA = "0x1101D48")]
	public void HideLifeSupport()
	{
	}

	[Token(Token = "0x60009A6")]
	[Address(RVA = "0x11017B8", Offset = "0x11017B8", VA = "0x11017B8")]
	public void UpdateLifeSupportAlpha(float value)
	{
	}

	[Token(Token = "0x60009A7")]
	[Address(RVA = "0x1101E04", Offset = "0x1101E04", VA = "0x1101E04")]
	public void OnCompleteLifeSupportAlpha()
	{
	}

	[Token(Token = "0x60009A8")]
	[Address(RVA = "0x11019B4", Offset = "0x11019B4", VA = "0x11019B4")]
	public void PlayerLoseLifeFeedback()
	{
	}

	[Token(Token = "0x60009A9")]
	[Address(RVA = "0x1102328", Offset = "0x1102328", VA = "0x1102328")]
	public void OnUpdateAlphaLife(float value)
	{
	}

	[Token(Token = "0x60009AA")]
	[Address(RVA = "0x1102350", Offset = "0x1102350", VA = "0x1102350")]
	public void OnCompleteAlphaLife()
	{
	}

	[Token(Token = "0x60009AB")]
	[Address(RVA = "0x11025B4", Offset = "0x11025B4", VA = "0x11025B4")]
	public void OnCompleteDisableCanvas()
	{
	}

	[Token(Token = "0x60009AC")]
	[Address(RVA = "0x11018D8", Offset = "0x11018D8", VA = "0x11018D8")]
	public void ShowManaGauge()
	{
	}

	[Token(Token = "0x60009AD")]
	[Address(RVA = "0x11025E0", Offset = "0x11025E0", VA = "0x11025E0")]
	public void OnUpdateManaAlpha(float value)
	{
	}

	[Token(Token = "0x60009AE")]
	[Address(RVA = "0x1102608", Offset = "0x1102608", VA = "0x1102608")]
	public void OnCompleteManaAlpha()
	{
	}

	[Token(Token = "0x60009AF")]
	[Address(RVA = "0x11026F4", Offset = "0x11026F4", VA = "0x11026F4")]
	public void OnActorTouched()
	{
	}

	[Token(Token = "0x60009B0")]
	[Address(RVA = "0x1101728", Offset = "0x1101728", VA = "0x1101728")]
	public void OnUpdateAlphaScore(float value)
	{
	}

	[Token(Token = "0x60009B1")]
	[Address(RVA = "0x11027C8", Offset = "0x11027C8", VA = "0x11027C8")]
	public void OnCompleteScoreAlpha()
	{
	}

	[Token(Token = "0x60009B2")]
	[Address(RVA = "0x1101B54", Offset = "0x1101B54", VA = "0x1101B54")]
	private Hashtable GetTweenHashtable(string name, string onupdate, float from, float to, float time, [Optional] string oncomplete, float delay = -1f)
	{
		return null;
	}

	[Token(Token = "0x60009B3")]
	[Address(RVA = "0x1102884", Offset = "0x1102884", VA = "0x1102884")]
	public UI_HUD()
	{
	}
}
[Token(Token = "0x2000236")]
public class UI_HUD_Dodge : MonoBehaviour
{
	[Token(Token = "0x4000DAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7B88", Offset = "0xCC7B88")]
	public TextMeshProUGUI m_text;

	[Token(Token = "0x4000DAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshProUGUI m_score;

	[Token(Token = "0x4000DB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7BC0", Offset = "0xCC7BC0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7BC0", Offset = "0xCC7BC0")]
	public string m_textWhenDodged;

	[Token(Token = "0x4000DB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int m_scoreWhenDodged;

	[Token(Token = "0x4000DB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7C10", Offset = "0xCC7C10")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7C10", Offset = "0xCC7C10")]
	public IntVariable m_playerScore;

	[Token(Token = "0x4000DB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntVariable m_playerScoreMultiplyer;

	[Token(Token = "0x4000DB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7C60", Offset = "0xCC7C60")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7C60", Offset = "0xCC7C60")]
	public float m_dodgeStayTime;

	[Token(Token = "0x4000DB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int _tempAddScore;

	[Token(Token = "0x4000DB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Color _tempcolor;

	[Token(Token = "0x60009B4")]
	[Address(RVA = "0x11028A0", Offset = "0x11028A0", VA = "0x11028A0")]
	public void OnDodge()
	{
	}

	[Token(Token = "0x60009B5")]
	[Address(RVA = "0x11029B0", Offset = "0x11029B0", VA = "0x11029B0")]
	private void ShowUI(float stayTime, string hideFunction)
	{
	}

	[Token(Token = "0x60009B6")]
	[Address(RVA = "0x1102D10", Offset = "0x1102D10", VA = "0x1102D10")]
	public void HideAfterDodge()
	{
	}

	[Token(Token = "0x60009B7")]
	[Address(RVA = "0x1102D18", Offset = "0x1102D18", VA = "0x1102D18")]
	public void HideUI(float delay = -1f)
	{
	}

	[Token(Token = "0x60009B8")]
	[Address(RVA = "0x1102DE0", Offset = "0x1102DE0", VA = "0x1102DE0")]
	private void UpdateTextAlpha(float value)
	{
	}

	[Token(Token = "0x60009B9")]
	[Address(RVA = "0x1102E4C", Offset = "0x1102E4C", VA = "0x1102E4C")]
	private void UpdateScoreAlpha(float value)
	{
	}

	[Token(Token = "0x60009BA")]
	[Address(RVA = "0x1102DE8", Offset = "0x1102DE8", VA = "0x1102DE8")]
	private void UpdateTextMeshProAlpha(TextMeshProUGUI tmp, float value)
	{
	}

	[Token(Token = "0x60009BB")]
	[Address(RVA = "0x1102A78", Offset = "0x1102A78", VA = "0x1102A78")]
	private void RunTweenValueTo(string name, string onupdate, float from, float to, float time, float delay = -1f, [Optional] string easeType, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x60009BC")]
	[Address(RVA = "0x1102E54", Offset = "0x1102E54", VA = "0x1102E54")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009BD")]
	[Address(RVA = "0x1102ED0", Offset = "0x1102ED0", VA = "0x1102ED0")]
	public UI_HUD_Dodge()
	{
	}
}
[Token(Token = "0x2000237")]
public class UI_IntVarToText : MonoBehaviour
{
	[Token(Token = "0x4000DB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TextMeshProUGUI m_text;

	[Token(Token = "0x4000DB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntVariable m_intVariable;

	[Token(Token = "0x4000DB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string m_prefix;

	[Token(Token = "0x4000DBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int _currentValue;

	[Token(Token = "0x60009BE")]
	[Address(RVA = "0x1102F40", Offset = "0x1102F40", VA = "0x1102F40")]
	private void Start()
	{
	}

	[Token(Token = "0x60009BF")]
	[Address(RVA = "0x1102F44", Offset = "0x1102F44", VA = "0x1102F44")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C0")]
	[Address(RVA = "0x1102FF4", Offset = "0x1102FF4", VA = "0x1102FF4")]
	public UI_IntVarToText()
	{
	}
}
[Token(Token = "0x2000238")]
public class UI_IntVarToTextMeshPro : CacheBehaviour
{
	[Token(Token = "0x4000DBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public TextMeshPro m_text;

	[Token(Token = "0x4000DBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_intVariable;

	[Token(Token = "0x4000DBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public string m_prefix;

	[Token(Token = "0x4000DBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public bool m_updateEachFrame;

	[Token(Token = "0x4000DBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private int _currentValue;

	[Token(Token = "0x60009C1")]
	[Address(RVA = "0x1103054", Offset = "0x1103054", VA = "0x1103054")]
	private void Update()
	{
	}

	[Token(Token = "0x60009C2")]
	[Address(RVA = "0x110310C", Offset = "0x110310C", VA = "0x110310C")]
	public void ChangeTextWithVar(IntVariable intvar)
	{
	}

	[Token(Token = "0x60009C3")]
	[Address(RVA = "0x11031F8", Offset = "0x11031F8", VA = "0x11031F8")]
	public void UpdateTextWithRefVar()
	{
	}

	[Token(Token = "0x60009C4")]
	[Address(RVA = "0x11032DC", Offset = "0x11032DC", VA = "0x11032DC")]
	public UI_IntVarToTextMeshPro()
	{
	}
}
[Token(Token = "0x2000239")]
public class UI_LifeGauge : CacheBehaviour
{
	[Token(Token = "0x4000DC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GameObject m_heart;

	[Token(Token = "0x4000DC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_playerHp;

	[Token(Token = "0x4000DC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IntVariable m_playerMaxHp;

	[Token(Token = "0x4000DC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public CanvasGroup m_allHeartsGroup;

	[Token(Token = "0x4000DC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7CB0", Offset = "0xCC7CB0")]
	public string m_loseLifeAnim;

	[Token(Token = "0x4000DC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string m_lastLifeAnim;

	[Token(Token = "0x4000DC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public string m_idleLifeAnim;

	[Token(Token = "0x4000DC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public float m_offset;

	[Token(Token = "0x4000DC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public bool m_linearLife;

	[Token(Token = "0x4000DC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float m_deployAngle;

	[Token(Token = "0x4000DCA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float m_radius;

	[Token(Token = "0x4000DCB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float m_offsetAngle;

	[Token(Token = "0x4000DCC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7CE8", Offset = "0xCC7CE8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7CE8", Offset = "0xCC7CE8")]
	public UnityEvent OnGainLife;

	[Token(Token = "0x4000DCD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public UnityEvent OnLoseLife;

	[Token(Token = "0x4000DCE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UnityEvent OnLastLife;

	[Token(Token = "0x4000DCF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UnityEvent OnDeath;

	[Token(Token = "0x4000DD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	[HideInInspector]
	public bool m_maxHpChanged;

	[Token(Token = "0x4000DD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
	[HideInInspector]
	public bool m_hpChanged;

	[Token(Token = "0x4000DD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
	[HideInInspector]
	public bool m_lastLife;

	[Token(Token = "0x4000DD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private List<GameObject> _hearts;

	[Token(Token = "0x4000DD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private int _maxHealth;

	[Token(Token = "0x4000DD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private int _currentHealth;

	[Token(Token = "0x60009C5")]
	[Address(RVA = "0x1101E08", Offset = "0x1101E08", VA = "0x1101E08")]
	public void UpdateLifeCount()
	{
	}

	[Token(Token = "0x60009C6")]
	[Address(RVA = "0x11020B4", Offset = "0x11020B4", VA = "0x11020B4")]
	public void UpdateLifeMax()
	{
	}

	[Token(Token = "0x60009C7")]
	[Address(RVA = "0x11036C4", Offset = "0x11036C4", VA = "0x11036C4")]
	public void Create()
	{
	}

	[Token(Token = "0x60009C8")]
	[Address(RVA = "0x110345C", Offset = "0x110345C", VA = "0x110345C")]
	private void GenerateRadialLifeGauge()
	{
	}

	[Token(Token = "0x60009C9")]
	[Address(RVA = "0x1103800", Offset = "0x1103800", VA = "0x1103800")]
	public void Clear()
	{
	}

	[Token(Token = "0x60009CA")]
	[Address(RVA = "0x11038EC", Offset = "0x11038EC", VA = "0x11038EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009CB")]
	[Address(RVA = "0x11039FC", Offset = "0x11039FC", VA = "0x11039FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009CC")]
	[Address(RVA = "0x1101664", Offset = "0x1101664", VA = "0x1101664")]
	public void UpdateChildrenAlpha(float value)
	{
	}

	[Token(Token = "0x60009CD")]
	[Address(RVA = "0x110333C", Offset = "0x110333C", VA = "0x110333C")]
	private void AddHeart(int index)
	{
	}

	[Token(Token = "0x60009CE")]
	[Address(RVA = "0x1103A84", Offset = "0x1103A84", VA = "0x1103A84")]
	public UI_LifeGauge()
	{
	}
}
[Token(Token = "0x200023A")]
public class UI_ManaGauge : CacheBehaviour
{
	[Token(Token = "0x4000DD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7D68", Offset = "0xCC7D68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7D68", Offset = "0xCC7D68")]
	public Image m_border;

	[Token(Token = "0x4000DD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Image m_full;

	[Token(Token = "0x4000DD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7DB8", Offset = "0xCC7DB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7DB8", Offset = "0xCC7DB8")]
	public FloatVariable m_manaMax;

	[Token(Token = "0x4000DD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7E08", Offset = "0xCC7E08")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7E08", Offset = "0xCC7E08")]
	public FloatVariable m_manaVar;

	[Token(Token = "0x4000DDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public RectTransform m_transformGauge;

	[Token(Token = "0x4000DDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public bool m_showGauge;

	[Token(Token = "0x4000DDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private float _currentValue;

	[Token(Token = "0x4000DDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _currentMaxValue;

	[Token(Token = "0x4000DDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector3 _tempVector;

	[Token(Token = "0x4000DDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private Color _tempColor;

	[Token(Token = "0x4000DE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _updateGauge;

	[Token(Token = "0x60009CF")]
	[Address(RVA = "0x1101680", Offset = "0x1101680", VA = "0x1101680")]
	public void UpdateAlpha(float value)
	{
	}

	[Token(Token = "0x60009D0")]
	[Address(RVA = "0x1103ECC", Offset = "0x1103ECC", VA = "0x1103ECC")]
	public void OnCompleteManaAlpha()
	{
	}

	[Token(Token = "0x60009D1")]
	[Address(RVA = "0x1104190", Offset = "0x1104190", VA = "0x1104190")]
	public void OnSpellDataLaunched(UnityEngine.Object value)
	{
	}

	[Token(Token = "0x60009D2")]
	[Address(RVA = "0x1104194", Offset = "0x1104194", VA = "0x1104194")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D3")]
	[Address(RVA = "0x1104264", Offset = "0x1104264", VA = "0x1104264")]
	private void Update()
	{
	}

	[Token(Token = "0x60009D4")]
	[Address(RVA = "0x11043AC", Offset = "0x11043AC", VA = "0x11043AC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009D5")]
	[Address(RVA = "0x1103F74", Offset = "0x1103F74", VA = "0x1103F74")]
	private Hashtable GetTweenHashtable(string onupdate, float from, float to, float time, [Optional] string oncomplete, float delay = -1f)
	{
		return null;
	}

	[Token(Token = "0x60009D6")]
	[Address(RVA = "0x1104428", Offset = "0x1104428", VA = "0x1104428")]
	public UI_ManaGauge()
	{
	}
}
[Token(Token = "0x200023B")]
public class UI_NatureGauge : MonoBehaviour
{
	[Token(Token = "0x4000DE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7E68", Offset = "0xCC7E68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7E68", Offset = "0xCC7E68")]
	public Image m_border;

	[Token(Token = "0x4000DE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Image m_full;

	[Token(Token = "0x4000DE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7EB8", Offset = "0xCC7EB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7EB8", Offset = "0xCC7EB8")]
	public FloatVariable m_groundPower;

	[Token(Token = "0x4000DE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RectTransform m_transformGauge;

	[Token(Token = "0x4000DE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _currentValue;

	[Token(Token = "0x4000DE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 _tempVector;

	[Token(Token = "0x60009D7")]
	[Address(RVA = "0x1104440", Offset = "0x1104440", VA = "0x1104440")]
	public void UpdateAlpha(float value)
	{
	}

	[Token(Token = "0x60009D8")]
	[Address(RVA = "0x11044D0", Offset = "0x11044D0", VA = "0x11044D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60009D9")]
	[Address(RVA = "0x11044D4", Offset = "0x11044D4", VA = "0x11044D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60009DA")]
	[Address(RVA = "0x11045CC", Offset = "0x11045CC", VA = "0x11045CC")]
	public UI_NatureGauge()
	{
	}
}
[Token(Token = "0x200023C")]
public class VisibilityEvents : CacheBehaviour
{
	[Token(Token = "0x4000DE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent OnBecameInvisibleEvent;

	[Token(Token = "0x4000DE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnBecameVisibleEvent;

	[Token(Token = "0x60009DB")]
	[Address(RVA = "0x1106F90", Offset = "0x1106F90", VA = "0x1106F90")]
	private void OnBecameVisible()
	{
	}

	[Token(Token = "0x60009DC")]
	[Address(RVA = "0x1106FAC", Offset = "0x1106FAC", VA = "0x1106FAC")]
	private void OnBecameInvisible()
	{
	}

	[Token(Token = "0x60009DD")]
	[Address(RVA = "0x1106FC8", Offset = "0x1106FC8", VA = "0x1106FC8")]
	public VisibilityEvents()
	{
	}
}
[Token(Token = "0x200023D")]
public class AlphaPulse : MonoBehaviour
{
	[Token(Token = "0x4000DE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float m_speed;

	[Token(Token = "0x4000DEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private TextMeshPro _textMeshPro;

	[Token(Token = "0x60009DE")]
	[Address(RVA = "0x1213BF0", Offset = "0x1213BF0", VA = "0x1213BF0")]
	private void Awake()
	{
	}

	[Token(Token = "0x60009DF")]
	[Address(RVA = "0x1213C50", Offset = "0x1213C50", VA = "0x1213C50")]
	private void Update()
	{
	}

	[Token(Token = "0x60009E0")]
	[Address(RVA = "0x1213D34", Offset = "0x1213D34", VA = "0x1213D34")]
	public AlphaPulse()
	{
	}
}
[Token(Token = "0x200023E")]
public class UI_MainScreen : MonoBehaviour
{
	[Token(Token = "0x4000DEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7F08", Offset = "0xCC7F08")]
	public SpriteRenderer m_logo;

	[Token(Token = "0x4000DEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TextMeshPro m_text;

	[Token(Token = "0x4000DED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AlphaPulse m_pulse;

	[Token(Token = "0x4000DEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7F40", Offset = "0xCC7F40")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7F40", Offset = "0xCC7F40")]
	public float m_fadeInTime;

	[Token(Token = "0x4000DEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float m_fadeOutTime;

	[Token(Token = "0x4000DF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color _tempColor;

	[Token(Token = "0x60009E1")]
	[Address(RVA = "0x10FD374", Offset = "0x10FD374", VA = "0x10FD374")]
	public void Show()
	{
	}

	[Token(Token = "0x60009E2")]
	[Address(RVA = "0x10FD3C0", Offset = "0x10FD3C0", VA = "0x10FD3C0")]
	public void Hide()
	{
	}

	[Token(Token = "0x60009E3")]
	[Address(RVA = "0x1103B24", Offset = "0x1103B24", VA = "0x1103B24")]
	public void ActivatePulse()
	{
	}

	[Token(Token = "0x60009E4")]
	[Address(RVA = "0x1103B44", Offset = "0x1103B44", VA = "0x1103B44")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60009E5")]
	[Address(RVA = "0x1103BC0", Offset = "0x1103BC0", VA = "0x1103BC0")]
	public void UpdateLogoAlpha(float value)
	{
	}

	[Token(Token = "0x60009E6")]
	[Address(RVA = "0x1103C14", Offset = "0x1103C14", VA = "0x1103C14")]
	public void UpdateTextAlpha(float value)
	{
	}

	[Token(Token = "0x60009E7")]
	[Address(RVA = "0x1103C78", Offset = "0x1103C78", VA = "0x1103C78")]
	private void RunTweenValueTo(string name, string onupdate, float from, float to, float time, float delay = -1f, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x60009E8")]
	[Address(RVA = "0x1103EB8", Offset = "0x1103EB8", VA = "0x1103EB8")]
	public UI_MainScreen()
	{
	}
}
[Token(Token = "0x200023F")]
public class ElementProgressText : CacheBehaviour
{
	[Token(Token = "0x20005F8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF5A0", Offset = "0xCBF5A0")]
	private sealed class <WaitForUpdateText>d__13 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElementProgressText <>4__this;

		[Token(Token = "0x1700038D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600225C")]
			[Address(RVA = "0xF37864", Offset = "0xF37864", VA = "0xF37864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700038E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600225E")]
			[Address(RVA = "0xF378CC", Offset = "0xF378CC", VA = "0xF378CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002259")]
		[Address(RVA = "0xF37554", Offset = "0xF37554", VA = "0xF37554")]
		[DebuggerHidden]
		public <WaitForUpdateText>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x600225A")]
		[Address(RVA = "0xF377A4", Offset = "0xF377A4", VA = "0xF377A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600225B")]
		[Address(RVA = "0xF377A8", Offset = "0xF377A8", VA = "0xF377A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600225D")]
		[Address(RVA = "0xF3786C", Offset = "0xF3786C", VA = "0xF3786C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF5B0", Offset = "0xCBF5B0")]
	private sealed class <WaitForEventLaunch>d__15 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElementProgressText <>4__this;

		[Token(Token = "0x1700038F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002262")]
			[Address(RVA = "0xF376D8", Offset = "0xF376D8", VA = "0xF376D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000390")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002264")]
			[Address(RVA = "0xF37740", Offset = "0xF37740", VA = "0xF37740", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600225F")]
		[Address(RVA = "0xF37580", Offset = "0xF37580", VA = "0xF37580")]
		[DebuggerHidden]
		public <WaitForEventLaunch>d__15(int <>1__state)
		{
		}

		[Token(Token = "0x6002260")]
		[Address(RVA = "0xF37618", Offset = "0xF37618", VA = "0xF37618", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002261")]
		[Address(RVA = "0xF3761C", Offset = "0xF3761C", VA = "0xF3761C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002263")]
		[Address(RVA = "0xF376E0", Offset = "0xF376E0", VA = "0xF376E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000DF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7F90", Offset = "0xCC7F90")]
	public IntVariable m_elementCurrentCount;

	[Token(Token = "0x4000DF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_elementNeededCount;

	[Token(Token = "0x4000DF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC7FC8", Offset = "0xCC7FC8")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC7FC8", Offset = "0xCC7FC8")]
	public TextMeshPro m_textCurrent;

	[Token(Token = "0x4000DF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro m_textNeeded;

	[Token(Token = "0x4000DF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8018", Offset = "0xCC8018")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC8018", Offset = "0xCC8018")]
	public float m_delayBeforeEvent;

	[Token(Token = "0x4000DF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	public float m_delayChangeTextWithCurrentValue;

	[Token(Token = "0x4000DF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public string m_neededPrefix;

	[Token(Token = "0x4000DF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8068", Offset = "0xCC8068")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC8068", Offset = "0xCC8068")]
	public UnityEvent OnChangeValue;

	[Token(Token = "0x4000DF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent OnFullGauge;

	[Token(Token = "0x4000DFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public UnityEvent OnFullGaugeIncrease;

	[Token(Token = "0x4000DFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int _previousValue;

	[Token(Token = "0x4000DFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private int _maxValue;

	[Token(Token = "0x4000DFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _fullGauge;

	[Token(Token = "0x4000DFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
	private bool _started;

	[Token(Token = "0x60009E9")]
	[Address(RVA = "0xF3701C", Offset = "0xF3701C", VA = "0xF3701C")]
	public void UpdateDisplay()
	{
	}

	[Token(Token = "0x60009EA")]
	[Address(RVA = "0xF370C8", Offset = "0xF370C8", VA = "0xF370C8")]
	public void UpdateProgress()
	{
	}

	[Token(Token = "0x60009EB")]
	[Address(RVA = "0xF374BC", Offset = "0xF374BC", VA = "0xF374BC")]
	public void ReinitializeProgress()
	{
	}

	[Token(Token = "0x60009EC")]
	[Address(RVA = "0xF37430", Offset = "0xF37430", VA = "0xF37430")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1820", Offset = "0xCD1820")]
	private IEnumerator<float> WaitForUpdateText(float delay)
	{
		return null;
	}

	[Token(Token = "0x60009ED")]
	[Address(RVA = "0xF373CC", Offset = "0xF373CC", VA = "0xF373CC")]
	private void UpdateCurrentTextMeshPro()
	{
	}

	[Token(Token = "0x60009EE")]
	[Address(RVA = "0xF37340", Offset = "0xF37340", VA = "0xF37340")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1884", Offset = "0xCD1884")]
	private IEnumerator<float> WaitForEventLaunch(float delay)
	{
		return null;
	}

	[Token(Token = "0x60009EF")]
	[Address(RVA = "0xF37294", Offset = "0xF37294", VA = "0xF37294")]
	private void LaunchEvent()
	{
	}

	[Token(Token = "0x60009F0")]
	[Address(RVA = "0xF375AC", Offset = "0xF375AC", VA = "0xF375AC")]
	public ElementProgressText()
	{
	}
}
[Token(Token = "0x2000240")]
public class HorizontalChoicesList : MonoBehaviour
{
	[Token(Token = "0x4000DFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC80B8", Offset = "0xCC80B8")]
	public TextMeshPro m_choiceText;

	[Token(Token = "0x4000E00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> m_choices;

	[Token(Token = "0x4000E01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_defaultChoiceIndex;

	[Token(Token = "0x4000E02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_indexVariable;

	[Token(Token = "0x4000E03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC80F0", Offset = "0xCC80F0")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC80F0", Offset = "0xCC80F0")]
	public bool m_infiniteLoop;

	[Token(Token = "0x4000E04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8140", Offset = "0xCC8140")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC8140", Offset = "0xCC8140")]
	public Collider m_leftArrow;

	[Token(Token = "0x4000E05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Collider m_rightArrow;

	[Token(Token = "0x4000E06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8190", Offset = "0xCC8190")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC8190", Offset = "0xCC8190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8190", Offset = "0xCC8190")]
	public List<UnityEvent> OnEachIndexChanged;

	[Token(Token = "0x4000E07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8204", Offset = "0xCC8204")]
	public IntUnityEvent OnIndexChanged;

	[Token(Token = "0x4000E08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private int _rightInstanceId;

	[Token(Token = "0x4000E09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private int _leftInstanceId;

	[Token(Token = "0x4000E0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int _currentIndex;

	[Token(Token = "0x60009F1")]
	[Address(RVA = "0xF4278C", Offset = "0xF4278C", VA = "0xF4278C")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F2")]
	[Address(RVA = "0xF429F0", Offset = "0xF429F0", VA = "0xF429F0")]
	private void ChangeIndex(int step)
	{
	}

	[Token(Token = "0x60009F3")]
	[Address(RVA = "0xF42AB8", Offset = "0xF42AB8", VA = "0xF42AB8")]
	public void OnSelectedUI(ObjectPointer.EventData eventData)
	{
	}

	[Token(Token = "0x60009F4")]
	[Address(RVA = "0xF42BE4", Offset = "0xF42BE4", VA = "0xF42BE4")]
	public void UpdateWithIntVariable()
	{
	}

	[Token(Token = "0x60009F5")]
	[Address(RVA = "0xF427FC", Offset = "0xF427FC", VA = "0xF427FC")]
	private void ChangeCurrentIndex(int index, bool sendEvent = true)
	{
	}

	[Token(Token = "0x60009F6")]
	[Address(RVA = "0xF42CB0", Offset = "0xF42CB0", VA = "0xF42CB0")]
	public HorizontalChoicesList()
	{
	}
}
[Token(Token = "0x2000241")]
public class SliderFloat : CacheBehaviour
{
	[Token(Token = "0x4000E0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC823C", Offset = "0xCC823C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC823C", Offset = "0xCC823C")]
	public FloatVariable m_floatVariable;

	[Token(Token = "0x4000E0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC828C", Offset = "0xCC828C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC828C", Offset = "0xCC828C")]
	public SpriteRenderer m_sliderButton;

	[Token(Token = "0x4000E0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SpriteRenderer m_sliderBar;

	[Token(Token = "0x4000E0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public TextMeshPro m_valueText;

	[Token(Token = "0x4000E0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public float m_barPivotOnAxis;

	[Token(Token = "0x4000E10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC82DC", Offset = "0xCC82DC")]
	public Collider m_leftArrow;

	[Token(Token = "0x4000E11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Collider m_rightArrow;

	[Token(Token = "0x4000E12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8314", Offset = "0xCC8314")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC8314", Offset = "0xCC8314")]
	public float m_minValue;

	[Token(Token = "0x4000E13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	public float m_maxValue;

	[Token(Token = "0x4000E14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public float m_step;

	[Token(Token = "0x4000E15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	public float m_defaultRatio;

	[Token(Token = "0x4000E16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public float m_currentRatio;

	[Token(Token = "0x4000E17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8364", Offset = "0xCC8364")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC8364", Offset = "0xCC8364")]
	public GameEventListener m_onTriggerPressedListener;

	[Token(Token = "0x4000E18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public GameEventListener m_onTriggerReleasedListener;

	[Token(Token = "0x4000E19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC83B4", Offset = "0xCC83B4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC83B4", Offset = "0xCC83B4")]
	public FloatUnityEvent OnRatioChanged;

	[Token(Token = "0x4000E1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int _instanceId;

	[Token(Token = "0x4000E1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private bool _grabbing;

	[Token(Token = "0x4000E1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private float _barWidth;

	[Token(Token = "0x4000E1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
	private Vector3 _sliderBarBasicPosition;

	[Token(Token = "0x4000E1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private Vector3 _buttonPosition;

	[Token(Token = "0x4000E1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
	private int _rightInstanceId;

	[Token(Token = "0x4000E20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	private int _leftInstanceId;

	[Token(Token = "0x4000E21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private bool _init;

	[Token(Token = "0x60009F7")]
	[Address(RVA = "0x106C9BC", Offset = "0x106C9BC", VA = "0x106C9BC")]
	private void Start()
	{
	}

	[Token(Token = "0x60009F8")]
	[Address(RVA = "0x106C9C0", Offset = "0x106C9C0", VA = "0x106C9C0")]
	private void InitSliderFloat()
	{
	}

	[Token(Token = "0x60009F9")]
	[Address(RVA = "0x106CCDC", Offset = "0x106CCDC", VA = "0x106CCDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60009FA")]
	[Address(RVA = "0x106CBF8", Offset = "0x106CBF8", VA = "0x106CBF8")]
	private void MoveButtonWithRatio(float ratio)
	{
	}

	[Token(Token = "0x60009FB")]
	[Address(RVA = "0x106CCEC", Offset = "0x106CCEC", VA = "0x106CCEC")]
	private void CalculateRatioWithPosition()
	{
	}

	[Token(Token = "0x60009FC")]
	[Address(RVA = "0x106CE64", Offset = "0x106CE64", VA = "0x106CE64")]
	private void ChangeRatio(float ratioDelta)
	{
	}

	[Token(Token = "0x60009FD")]
	[Address(RVA = "0x106CF90", Offset = "0x106CF90", VA = "0x106CF90")]
	private void SetRatio(float ratio, bool forceSet = false)
	{
	}

	[Token(Token = "0x60009FE")]
	[Address(RVA = "0x106CDAC", Offset = "0x106CDAC", VA = "0x106CDAC")]
	private void SetValueText(float ratio)
	{
	}

	[Token(Token = "0x60009FF")]
	[Address(RVA = "0x106D078", Offset = "0x106D078", VA = "0x106D078")]
	public void UpdateWithFloatVariable()
	{
	}

	[Token(Token = "0x6000A00")]
	[Address(RVA = "0x106D130", Offset = "0x106D130", VA = "0x106D130")]
	public void OnHoverInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000A01")]
	[Address(RVA = "0x106D18C", Offset = "0x106D18C", VA = "0x106D18C")]
	public void OnExitInstanceId(int instanceId)
	{
	}

	[Token(Token = "0x6000A02")]
	[Address(RVA = "0x106D1E8", Offset = "0x106D1E8", VA = "0x106D1E8")]
	public void OnSelectedUI(ObjectPointer.EventData eventData)
	{
	}

	[Token(Token = "0x6000A03")]
	[Address(RVA = "0x106D378", Offset = "0x106D378", VA = "0x106D378")]
	public void OnTriggerPressed()
	{
	}

	[Token(Token = "0x6000A04")]
	[Address(RVA = "0x106D384", Offset = "0x106D384", VA = "0x106D384")]
	public void OnTriggerReleased()
	{
	}

	[Token(Token = "0x6000A05")]
	[Address(RVA = "0x106D38C", Offset = "0x106D38C", VA = "0x106D38C")]
	public SliderFloat()
	{
	}
}
[Token(Token = "0x2000242")]
public class PointerManager : CacheBehaviour
{
	[Token(Token = "0x4000E22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public UnityEvent OnPointerActivatedEvent;

	[Token(Token = "0x4000E23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnPointerDeactivatedEvent;

	[Token(Token = "0x4000E24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool _currentStatus;

	[Token(Token = "0x4000E25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool _previousStatus;

	[Token(Token = "0x4000E26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
	private bool _savedStatus;

	[Token(Token = "0x6000A06")]
	[Address(RVA = "0xFED57C", Offset = "0xFED57C", VA = "0xFED57C")]
	public void OnPointerActivated()
	{
	}

	[Token(Token = "0x6000A07")]
	[Address(RVA = "0xFED590", Offset = "0xFED590", VA = "0xFED590")]
	public void OnPointerDeactivated()
	{
	}

	[Token(Token = "0x6000A08")]
	[Address(RVA = "0xFED5A0", Offset = "0xFED5A0", VA = "0xFED5A0")]
	public void OnPointerBackToPreviousStatus()
	{
	}

	[Token(Token = "0x6000A09")]
	[Address(RVA = "0xFED5D0", Offset = "0xFED5D0", VA = "0xFED5D0")]
	public void SaveCurrentPointerStatus()
	{
	}

	[Token(Token = "0x6000A0A")]
	[Address(RVA = "0xFED5DC", Offset = "0xFED5DC", VA = "0xFED5DC")]
	public void OnPointerBackToSavedStatus()
	{
	}

	[Token(Token = "0x6000A0B")]
	[Address(RVA = "0xFED60C", Offset = "0xFED60C", VA = "0xFED60C")]
	public PointerManager()
	{
	}
}
[Token(Token = "0x2000243")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB95CC", Offset = "0xCB95CC")]
public class GameStateData : ScriptableObject
{
	[Token(Token = "0x4000E27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntVariable m_state;

	[Token(Token = "0x6000A0C")]
	[Address(RVA = "0xF3CB14", Offset = "0xF3CB14", VA = "0xF3CB14")]
	public GameStateData()
	{
	}
}
[Token(Token = "0x2000244")]
public class ScoreManager : CacheBehaviour
{
	[Token(Token = "0x20005FA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF5C0", Offset = "0xCBF5C0")]
	private sealed class <DisplayScore>d__13 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float displayTime;

		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject scoreDisplay;

		[Token(Token = "0x17000391")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002268")]
			[Address(RVA = "0x1016860", Offset = "0x1016860", VA = "0x1016860", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000392")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600226A")]
			[Address(RVA = "0x10168C8", Offset = "0x10168C8", VA = "0x10168C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002265")]
		[Address(RVA = "0x101674C", Offset = "0x101674C", VA = "0x101674C")]
		[DebuggerHidden]
		public <DisplayScore>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x6002266")]
		[Address(RVA = "0x1016780", Offset = "0x1016780", VA = "0x1016780", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002267")]
		[Address(RVA = "0x1016784", Offset = "0x1016784", VA = "0x1016784", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002269")]
		[Address(RVA = "0x1016868", Offset = "0x1016868", VA = "0x1016868", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8404", Offset = "0xCC8404")]
	public SOUIScoreDisplaySettings m_moonRegenSettings;

	[Token(Token = "0x4000E29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public SOUIScoreDisplaySettings m_moonOverchargeSettings;

	[Token(Token = "0x4000E2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public SOUIScoreDisplaySettings m_deadSettings;

	[Token(Token = "0x4000E2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC843C", Offset = "0xCC843C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC843C", Offset = "0xCC843C")]
	public IntVariable m_playerScore;

	[Token(Token = "0x4000E2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public IntVariable m_levelScore;

	[Token(Token = "0x4000E2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntVariable m_playerScoreMultiplyer;

	[Token(Token = "0x4000E2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObjectVariable m_headset;

	[Token(Token = "0x4000E2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Transform _headsetTransform;

	[Token(Token = "0x4000E30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private int _tempAddScore;

	[Token(Token = "0x4000E31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private int _hitCount;

	[Token(Token = "0x6000A0D")]
	[Address(RVA = "0x1015BA0", Offset = "0x1015BA0", VA = "0x1015BA0")]
	public void OnActorDeadPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000A0E")]
	[Address(RVA = "0x10160BC", Offset = "0x10160BC", VA = "0x10160BC")]
	public void OnPlanetRegenerated(int instanceId)
	{
	}

	[Token(Token = "0x6000A0F")]
	[Address(RVA = "0x1016608", Offset = "0x1016608", VA = "0x1016608")]
	public void OnActorTouchedPosition(Vector3 position)
	{
	}

	[Token(Token = "0x6000A10")]
	[Address(RVA = "0x1016690", Offset = "0x1016690", VA = "0x1016690")]
	public void ResetMultiplyer()
	{
	}

	[Token(Token = "0x6000A11")]
	[Address(RVA = "0x10166D0", Offset = "0x10166D0", VA = "0x10166D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A12")]
	[Address(RVA = "0x1015FF4", Offset = "0x1015FF4", VA = "0x1015FF4")]
	private int CalculateScore(int baseScore)
	{
		return default(int);
	}

	[Token(Token = "0x6000A13")]
	[Address(RVA = "0x1016030", Offset = "0x1016030", VA = "0x1016030")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD18E8", Offset = "0xCD18E8")]
	private IEnumerator<float> DisplayScore(float displayTime, GameObject scoreDisplay)
	{
		return null;
	}

	[Token(Token = "0x6000A14")]
	[Address(RVA = "0x1016778", Offset = "0x1016778", VA = "0x1016778")]
	public ScoreManager()
	{
	}
}
[Token(Token = "0x2000245")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB962C", Offset = "0xCB962C")]
public class SplashScreenAnimation : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x20005FB")]
	public struct LogoSequence
	{
		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Sprite m_logo;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCE108", Offset = "0xCCE108")]
		public float m_timeToDisplay;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCE120", Offset = "0xCCE120")]
		public float m_timeToFadeIn;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCE13C", Offset = "0xCCE13C")]
		public float m_timeToFadeOut;
	}

	[Token(Token = "0x4000E32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC848C", Offset = "0xCC848C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC848C", Offset = "0xCC848C")]
	public List<LogoSequence> m_logosSequence;

	[Token(Token = "0x4000E33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC84DC", Offset = "0xCC84DC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC84DC", Offset = "0xCC84DC")]
	public UnityEvent OnLogoChanged;

	[Token(Token = "0x4000E34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnSplashScreenFinished;

	[Token(Token = "0x4000E35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private int _step;

	[Token(Token = "0x4000E36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	private bool _finished;

	[Token(Token = "0x4000E37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private float _timeOfLastLogoSwitch;

	[Token(Token = "0x4000E38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private SpriteRenderer _targetTexture;

	[Token(Token = "0x4000E39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Color _tempColor;

	[Token(Token = "0x6000A15")]
	[Address(RVA = "0x1076BE4", Offset = "0x1076BE4", VA = "0x1076BE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A16")]
	[Address(RVA = "0x1076C44", Offset = "0x1076C44", VA = "0x1076C44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A17")]
	[Address(RVA = "0x1076CC4", Offset = "0x1076CC4", VA = "0x1076CC4")]
	public void SwitchLogo()
	{
	}

	[Token(Token = "0x6000A18")]
	[Address(RVA = "0x1077054", Offset = "0x1077054", VA = "0x1077054")]
	public void FadeOutLogo()
	{
	}

	[Token(Token = "0x6000A19")]
	[Address(RVA = "0x1076C70", Offset = "0x1076C70", VA = "0x1076C70")]
	public void OnUpdateScreenAlpha(float value)
	{
	}

	[Token(Token = "0x6000A1A")]
	[Address(RVA = "0x1076E14", Offset = "0x1076E14", VA = "0x1076E14")]
	private void RunTweenValueTo(string name, string onupdate, float from, float to, float time, float delay = -1f, [Optional] string oncomplete)
	{
	}

	[Token(Token = "0x6000A1B")]
	[Address(RVA = "0x1077168", Offset = "0x1077168", VA = "0x1077168")]
	public SplashScreenAnimation()
	{
	}
}
[Token(Token = "0x2000246")]
public class UIManager : CacheBehaviour
{
	[Token(Token = "0x20005FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF5D0", Offset = "0xCBF5D0")]
	private sealed class <WaitForScale>d__52 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIManager <>4__this;

		[Token(Token = "0x17000393")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600226E")]
			[Address(RVA = "0x10FF5EC", Offset = "0x10FF5EC", VA = "0x10FF5EC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000394")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002270")]
			[Address(RVA = "0x10FF654", Offset = "0x10FF654", VA = "0x10FF654", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600226B")]
		[Address(RVA = "0x10FE768", Offset = "0x10FE768", VA = "0x10FE768")]
		[DebuggerHidden]
		public <WaitForScale>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x600226C")]
		[Address(RVA = "0x10FF408", Offset = "0x10FF408", VA = "0x10FF408", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600226D")]
		[Address(RVA = "0x10FF40C", Offset = "0x10FF40C", VA = "0x10FF40C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600226F")]
		[Address(RVA = "0x10FF5F4", Offset = "0x10FF5F4", VA = "0x10FF5F4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF5E0", Offset = "0xCBF5E0")]
	private sealed class <WaitForAnimation>d__53 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string stateName;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UIManager <>4__this;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject selectedUI;

		[Token(Token = "0x17000395")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002274")]
			[Address(RVA = "0x10FF33C", Offset = "0x10FF33C", VA = "0x10FF33C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000396")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002276")]
			[Address(RVA = "0x10FF3A4", Offset = "0x10FF3A4", VA = "0x10FF3A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002271")]
		[Address(RVA = "0x10FE794", Offset = "0x10FE794", VA = "0x10FE794")]
		[DebuggerHidden]
		public <WaitForAnimation>d__53(int <>1__state)
		{
		}

		[Token(Token = "0x6002272")]
		[Address(RVA = "0x10FEDC4", Offset = "0x10FEDC4", VA = "0x10FEDC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002273")]
		[Address(RVA = "0x10FEDC8", Offset = "0x10FEDC8", VA = "0x10FEDC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002275")]
		[Address(RVA = "0x10FF344", Offset = "0x10FF344", VA = "0x10FF344", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20005FE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF5F0", Offset = "0xCBF5F0")]
	private sealed class <WaitForSelection>d__54 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UIManager <>4__this;

		[Token(Token = "0x17000397")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600227A")]
			[Address(RVA = "0x10FF77C", Offset = "0x10FF77C", VA = "0x10FF77C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000398")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600227C")]
			[Address(RVA = "0x10FF7E4", Offset = "0x10FF7E4", VA = "0x10FF7E4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002277")]
		[Address(RVA = "0x10FE83C", Offset = "0x10FE83C", VA = "0x10FE83C")]
		[DebuggerHidden]
		public <WaitForSelection>d__54(int <>1__state)
		{
		}

		[Token(Token = "0x6002278")]
		[Address(RVA = "0x10FF6B8", Offset = "0x10FF6B8", VA = "0x10FF6B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002279")]
		[Address(RVA = "0x10FF6BC", Offset = "0x10FF6BC", VA = "0x10FF6BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600227B")]
		[Address(RVA = "0x10FF784", Offset = "0x10FF784", VA = "0x10FF784", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public PostProcessVolume m_headsetVolume;

	[Token(Token = "0x4000E3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public IntVariable m_hpPlayer;

	[Token(Token = "0x4000E3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public FloatVariable m_deathTime;

	[Token(Token = "0x4000E3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public GameObject m_splashScreen;

	[Token(Token = "0x4000E3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public UI_MainScreen m_mainMenu;

	[Token(Token = "0x4000E3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public GameObject m_environment;

	[Token(Token = "0x4000E40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public GameObject m_magicCircle;

	[Token(Token = "0x4000E41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public GameObject m_reverseSphere;

	[Token(Token = "0x4000E42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_newPerkVerticalLayout;

	[Token(Token = "0x4000E43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public GameObject m_newPerkText;

	[Token(Token = "0x4000E44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public FloatVariable m_reverseSpherePower;

	[Token(Token = "0x4000E45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public FloatVariable m_magicWallPower;

	[Token(Token = "0x4000E46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public UnityEvent m_OnCompleteDissolving;

	[Token(Token = "0x4000E47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public StringUnityEvent OnSelectedUIPointer;

	[Token(Token = "0x4000E48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public List<string> m_acceptedTagsForSelectionUIPointer;

	[Token(Token = "0x4000E49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public string m_buttonStateName;

	[Token(Token = "0x4000E4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	public string m_idleStateName;

	[Token(Token = "0x4000E4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	public StringVariable m_dominantHand;

	[Token(Token = "0x4000E4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	public GameObject m_shopCard;

	[Token(Token = "0x4000E4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	public float m_UIScaleTimer;

	[Token(Token = "0x4000E4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC852C", Offset = "0xCC852C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC852C", Offset = "0xCC852C")]
	public IntUnityEvent OnHoverInstanceId;

	[Token(Token = "0x4000E4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
	public IntUnityEvent OnExitInstanceId;

	[Token(Token = "0x4000E50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
	public UnityEvent OnOculusMenu;

	[Token(Token = "0x4000E51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC857C", Offset = "0xCC857C")]
	public GameObjectVariable m_headset;

	[Token(Token = "0x4000E52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
	public GameObject m_damageDisplay;

	[Token(Token = "0x4000E53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
	public Color m_critColor;

	[Token(Token = "0x4000E54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC85B4", Offset = "0xCC85B4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC85B4", Offset = "0xCC85B4")]
	public GameObject m_prefabCinematicIntro;

	[Token(Token = "0x4000E55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8604", Offset = "0xCC8604")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC8604", Offset = "0xCC8604")]
	public GameObject m_prefabCinematicEnding;

	[Token(Token = "0x4000E56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8654", Offset = "0xCC8654")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC8654", Offset = "0xCC8654")]
	public GameObject m_prefabCredits;

	[Token(Token = "0x4000E57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
	private bool _gameLose;

	[Token(Token = "0x4000E58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
	private Transform _headsetTransform;

	[Token(Token = "0x4000E59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
	private Animator _currentAnimator;

	[Token(Token = "0x4000E5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
	private string _currentTrigger;

	[Token(Token = "0x4000E5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
	private CoroutineHandle _coroutineHandle;

	[Token(Token = "0x4000E5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
	private bool _canSelect;

	[Token(Token = "0x4000E5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
	private float _UIScaleTimer;

	[Token(Token = "0x4000E5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
	private GameObject _currentUI;

	[Token(Token = "0x4000E5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
	private Vector3 _currentUIOldScale;

	[Token(Token = "0x4000E60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
	private AudioUIHolder _currentAudioHolder;

	[Token(Token = "0x4000E61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
	private float _previousTime;

	[Token(Token = "0x4000E62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
	private float _currentTime;

	[Token(Token = "0x4000E63")]
	private const float TIME_BETWEEN_CHECKS = 0.5f;

	[Token(Token = "0x4000E64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
	private bool _isOpenVRDevice;

	[Token(Token = "0x4000E65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x201")]
	private bool _isCurrentlySelecting;

	[Token(Token = "0x6000A1C")]
	[Address(RVA = "0x10FCC28", Offset = "0x10FCC28", VA = "0x10FCC28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A1D")]
	[Address(RVA = "0x10FCD1C", Offset = "0x10FCD1C", VA = "0x10FCD1C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A1E")]
	[Address(RVA = "0x10FCC88", Offset = "0x10FCC88", VA = "0x10FCC88")]
	public void DominantHandHasChanged()
	{
	}

	[Token(Token = "0x6000A1F")]
	[Address(RVA = "0x10FCE3C", Offset = "0x10FCE3C", VA = "0x10FCE3C")]
	public void PlayerLoseLifeFeedback()
	{
	}

	[Token(Token = "0x6000A20")]
	[Address(RVA = "0x10FCFD4", Offset = "0x10FCFD4", VA = "0x10FCFD4")]
	public void PlayerLoseLifeFeedbackUpdate(float value)
	{
	}

	[Token(Token = "0x6000A21")]
	[Address(RVA = "0x10FD068", Offset = "0x10FD068", VA = "0x10FD068")]
	public void OnIntroMenu()
	{
	}

	[Token(Token = "0x6000A22")]
	[Address(RVA = "0x10FD0E8", Offset = "0x10FD0E8", VA = "0x10FD0E8")]
	public void OnLaunchCinematicIntro()
	{
	}

	[Token(Token = "0x6000A23")]
	[Address(RVA = "0x10FD19C", Offset = "0x10FD19C", VA = "0x10FD19C")]
	public void OnLaunchCinematicEnding()
	{
	}

	[Token(Token = "0x6000A24")]
	[Address(RVA = "0x10FD210", Offset = "0x10FD210", VA = "0x10FD210")]
	public void OnCredits()
	{
	}

	[Token(Token = "0x6000A25")]
	[Address(RVA = "0x10FD284", Offset = "0x10FD284", VA = "0x10FD284")]
	public void OnMainMenuStarted()
	{
	}

	[Token(Token = "0x6000A26")]
	[Address(RVA = "0x10FD378", Offset = "0x10FD378", VA = "0x10FD378")]
	public void OnCalibrationStarted()
	{
	}

	[Token(Token = "0x6000A27")]
	[Address(RVA = "0x10FD3C4", Offset = "0x10FD3C4", VA = "0x10FD3C4")]
	public void WallAppearing()
	{
	}

	[Token(Token = "0x6000A28")]
	[Address(RVA = "0x10FD3E0", Offset = "0x10FD3E0", VA = "0x10FD3E0")]
	public void WallAppearingTween(float value)
	{
	}

	[Token(Token = "0x6000A29")]
	[Address(RVA = "0x10FD404", Offset = "0x10FD404", VA = "0x10FD404")]
	public void OnPlayerDeath()
	{
	}

	[Token(Token = "0x6000A2A")]
	[Address(RVA = "0x10FD410", Offset = "0x10FD410", VA = "0x10FD410")]
	public void OnWallAppearingTweenComplete()
	{
	}

	[Token(Token = "0x6000A2B")]
	[Address(RVA = "0x10FD454", Offset = "0x10FD454", VA = "0x10FD454")]
	public void Dissolve(float from, float to)
	{
	}

	[Token(Token = "0x6000A2C")]
	[Address(RVA = "0x10FD620", Offset = "0x10FD620", VA = "0x10FD620")]
	public void DissolveTween(float value)
	{
	}

	[Token(Token = "0x6000A2D")]
	[Address(RVA = "0x10FD644", Offset = "0x10FD644", VA = "0x10FD644")]
	public void OnCompleteDissolveTween()
	{
	}

	[Token(Token = "0x6000A2E")]
	[Address(RVA = "0x10FD698", Offset = "0x10FD698", VA = "0x10FD698")]
	public void OnHit(object[] parameters)
	{
	}

	[Token(Token = "0x6000A2F")]
	[Address(RVA = "0x10FD914", Offset = "0x10FD914", VA = "0x10FD914")]
	public void OnHoverPointer(ObjectPointer.EventData eventData)
	{
	}

	[Token(Token = "0x6000A30")]
	[Address(RVA = "0x10FDF5C", Offset = "0x10FDF5C", VA = "0x10FDF5C")]
	public void OnExitPointer(ObjectPointer.EventData eventData)
	{
	}

	[Token(Token = "0x6000A31")]
	[Address(RVA = "0x10FE308", Offset = "0x10FE308", VA = "0x10FE308")]
	public void OnSelectedUI(ObjectPointer.EventData eventData)
	{
	}

	[Token(Token = "0x6000A32")]
	[Address(RVA = "0x10FDD8C", Offset = "0x10FDD8C", VA = "0x10FDD8C")]
	public Transform FindButton(ObjectPointer.EventData eventData)
	{
		return null;
	}

	[Token(Token = "0x6000A33")]
	[Address(RVA = "0x10FE6EC", Offset = "0x10FE6EC", VA = "0x10FE6EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD194C", Offset = "0xCD194C")]
	private IEnumerator<float> WaitForScale()
	{
		return null;
	}

	[Token(Token = "0x6000A34")]
	[Address(RVA = "0x10FE624", Offset = "0x10FE624", VA = "0x10FE624")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD19B0", Offset = "0xCD19B0")]
	public IEnumerator<float> WaitForAnimation(Animator animator, string stateName, GameObject selectedUI)
	{
		return null;
	}

	[Token(Token = "0x6000A35")]
	[Address(RVA = "0x10FE7C0", Offset = "0x10FE7C0", VA = "0x10FE7C0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1A14", Offset = "0xCD1A14")]
	public IEnumerator<float> WaitForSelection()
	{
		return null;
	}

	[Token(Token = "0x6000A36")]
	[Address(RVA = "0x10FE868", Offset = "0x10FE868", VA = "0x10FE868")]
	public void OnNewPerkListShop(PerkListWrapper perkList)
	{
	}

	[Token(Token = "0x6000A37")]
	[Address(RVA = "0x10FEA34", Offset = "0x10FEA34", VA = "0x10FEA34")]
	public void OnExitShop()
	{
	}

	[Token(Token = "0x6000A38")]
	[Address(RVA = "0x10FECC8", Offset = "0x10FECC8", VA = "0x10FECC8")]
	public UIManager()
	{
	}

	[Token(Token = "0x6000A39")]
	[Address(RVA = "0x10FED48", Offset = "0x10FED48", VA = "0x10FED48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1A78", Offset = "0xCD1A78")]
	private bool <FindButton>b__51_0(Transform x)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000247")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9690", Offset = "0xCB9690")]
public class WandData : ScriptableObject
{
	[Token(Token = "0x20005FF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF600", Offset = "0xCBF600")]
	private sealed class <>c__DisplayClass5_0
	{
		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GestureData gesture;

		[Token(Token = "0x600227D")]
		[Address(RVA = "0x110789C", Offset = "0x110789C", VA = "0x110789C")]
		public <>c__DisplayClass5_0()
		{
		}

		[Token(Token = "0x600227E")]
		[Address(RVA = "0x11078AC", Offset = "0x11078AC", VA = "0x11078AC")]
		internal bool <AddGesture>b__0(GestureData x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000E66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_handTag;

	[Token(Token = "0x4000E67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int m_numberOfCharges;

	[Token(Token = "0x4000E68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GestureData> m_gestureList;

	[Token(Token = "0x4000E69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC86B4", Offset = "0xCC86B4")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC86B4", Offset = "0xCC86B4")]
	public int m_defaultNumberOfCharges;

	[Token(Token = "0x4000E6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GestureData> m_defaultGestureList;

	[Token(Token = "0x6000A3A")]
	[Address(RVA = "0x1107784", Offset = "0x1107784", VA = "0x1107784")]
	public void AddGesture(GestureData gesture)
	{
	}

	[Token(Token = "0x6000A3B")]
	[Address(RVA = "0x11078A4", Offset = "0x11078A4", VA = "0x11078A4")]
	public WandData()
	{
	}
}
[Token(Token = "0x2000248")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB96F0", Offset = "0xCB96F0")]
public class WandDataVariable : BaseVariable<WandData>
{
	[Token(Token = "0x6000A3C")]
	[Address(RVA = "0x1107908", Offset = "0x1107908", VA = "0x1107908")]
	public WandDataVariable()
	{
	}
}
[Token(Token = "0x2000249")]
public class WandWasher : MonoBehaviour
{
	[Token(Token = "0x4000E6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<WandData> m_wandsDataToWash;

	[Token(Token = "0x4000E6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnPostWash;

	[Token(Token = "0x6000A3D")]
	[Address(RVA = "0x1107958", Offset = "0x1107958", VA = "0x1107958")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A3E")]
	[Address(RVA = "0x1107988", Offset = "0x1107988", VA = "0x1107988")]
	public void Wash()
	{
	}

	[Token(Token = "0x6000A3F")]
	[Address(RVA = "0x1107B5C", Offset = "0x1107B5C", VA = "0x1107B5C")]
	public WandWasher()
	{
	}
}
[Token(Token = "0x200024A")]
public class TestGen : MonoBehaviour
{
	[Token(Token = "0x2000600")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF610", Offset = "0xCBF610")]
	private sealed class <Generate>d__6 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TestGen <>4__this;

		[Token(Token = "0x17000399")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002282")]
			[Address(RVA = "0x107E38C", Offset = "0x107E38C", VA = "0x107E38C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700039A")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002284")]
			[Address(RVA = "0x107E3F4", Offset = "0x107E3F4", VA = "0x107E3F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600227F")]
		[Address(RVA = "0x107DD20", Offset = "0x107DD20", VA = "0x107DD20")]
		[DebuggerHidden]
		public <Generate>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6002280")]
		[Address(RVA = "0x107E044", Offset = "0x107E044", VA = "0x107E044", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002281")]
		[Address(RVA = "0x107E048", Offset = "0x107E048", VA = "0x107E048", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002283")]
		[Address(RVA = "0x107E394", Offset = "0x107E394", VA = "0x107E394", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000E6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject planet;

	[Token(Token = "0x4000E6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> planets;

	[Token(Token = "0x4000E6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask m_layerMask;

	[Token(Token = "0x4000E70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float radiusMultiplyer;

	[Token(Token = "0x4000E71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x6000A40")]
	[Address(RVA = "0x107DC40", Offset = "0x107DC40", VA = "0x107DC40")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A41")]
	[Address(RVA = "0x107DCA0", Offset = "0x107DCA0", VA = "0x107DCA0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A42")]
	[Address(RVA = "0x107DCA4", Offset = "0x107DCA4", VA = "0x107DCA4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1A88", Offset = "0xCD1A88")]
	private IEnumerator<float> Generate()
	{
		return null;
	}

	[Token(Token = "0x6000A43")]
	[Address(RVA = "0x107DD4C", Offset = "0x107DD4C", VA = "0x107DD4C")]
	private Vector3 GetRandomPointOf(List<Vector3> vertices)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000A44")]
	[Address(RVA = "0x107DDFC", Offset = "0x107DDFC", VA = "0x107DDFC")]
	private void CleanPlanets()
	{
	}

	[Token(Token = "0x6000A45")]
	[Address(RVA = "0x107DF2C", Offset = "0x107DF2C", VA = "0x107DF2C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A46")]
	[Address(RVA = "0x107DFC0", Offset = "0x107DFC0", VA = "0x107DFC0")]
	public TestGen()
	{
	}
}
[Token(Token = "0x200024B")]
public class TimeScaler : MonoBehaviour
{
	[Token(Token = "0x4000E72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_isTweened;

	[Token(Token = "0x4000E73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float timeScale;

	[Token(Token = "0x6000A47")]
	[Address(RVA = "0x107FCCC", Offset = "0x107FCCC", VA = "0x107FCCC")]
	public void SetTimeScale(float p_timeScale)
	{
	}

	[Token(Token = "0x6000A48")]
	[Address(RVA = "0x107FF3C", Offset = "0x107FF3C", VA = "0x107FF3C")]
	public void OnTimeScaleUpdate(float value)
	{
	}

	[Token(Token = "0x6000A49")]
	[Address(RVA = "0x107FF68", Offset = "0x107FF68", VA = "0x107FF68")]
	public TimeScaler()
	{
	}
}
[Token(Token = "0x200024C")]
public class Transformer : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000601")]
	public class PositionToggle
	{
		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Enabled;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE158", Offset = "0xCCE158")]
		public bool m_useLabelTarget;

		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE190", Offset = "0xCCE190")]
		public bool m_useLabelDestination;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE1C8", Offset = "0xCCE1C8")]
		public GameObject m_target;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE200", Offset = "0xCCE200")]
		public Label m_targetLabel;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE238", Offset = "0xCCE238")]
		public GameObject m_destination;

		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE270", Offset = "0xCCE270")]
		public Label m_destinationLabel;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE2A8", Offset = "0xCCE2A8")]
		public bool m_useUpdate;

		[Token(Token = "0x6002285")]
		[Address(RVA = "0x10FB3E0", Offset = "0x10FB3E0", VA = "0x10FB3E0")]
		public PositionToggle()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000602")]
	public class RotationToggle
	{
		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Enabled;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE2E0", Offset = "0xCCE2E0")]
		public bool m_useLabelTarget;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE318", Offset = "0xCCE318")]
		public GameObject m_target;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE350", Offset = "0xCCE350")]
		public Label m_targetLabel;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE388", Offset = "0xCCE388")]
		public bool m_setRotation;

		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE3C0", Offset = "0xCCE3C0")]
		public bool m_addRotation;

		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_angle;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE3F8", Offset = "0xCCE3F8")]
		public bool m_setFromGameObject;

		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE430", Offset = "0xCCE430")]
		public GameObject m_destination;

		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE468", Offset = "0xCCE468")]
		public bool m_useUpdate;

		[Token(Token = "0x6002286")]
		[Address(RVA = "0x10FB3E8", Offset = "0x10FB3E8", VA = "0x10FB3E8")]
		public RotationToggle()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000603")]
	public class ScaleToggle
	{
		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool Enabled;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE4A0", Offset = "0xCCE4A0")]
		public bool m_useLabelTarget;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE4D8", Offset = "0xCCE4D8")]
		public GameObject m_target;

		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE510", Offset = "0xCCE510")]
		public Label m_targetLabel;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE548", Offset = "0xCCE548")]
		public bool m_setScale;

		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCE580", Offset = "0xCCE580")]
		public bool m_addScale;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 m_scale;

		[Token(Token = "0x6002287")]
		[Address(RVA = "0x10FB3F0", Offset = "0x10FB3F0", VA = "0x10FB3F0")]
		public ScaleToggle()
		{
		}
	}

	[Token(Token = "0x4000E74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_launchOnEnable;

	[Token(Token = "0x4000E75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PositionToggle m_position;

	[Token(Token = "0x4000E76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RotationToggle m_rotation;

	[Token(Token = "0x4000E77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ScaleToggle m_scale;

	[Token(Token = "0x6000A4A")]
	[Address(RVA = "0x10FAA90", Offset = "0x10FAA90", VA = "0x10FAA90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000A4B")]
	[Address(RVA = "0x10FB12C", Offset = "0x10FB12C", VA = "0x10FB12C")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A4C")]
	[Address(RVA = "0x10FAB18", Offset = "0x10FAB18", VA = "0x10FAB18")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000A4D")]
	[Address(RVA = "0x10FB194", Offset = "0x10FB194", VA = "0x10FB194")]
	public void DoTeleport(int instanceId)
	{
	}

	[Token(Token = "0x6000A4E")]
	[Address(RVA = "0x10FACDC", Offset = "0x10FACDC", VA = "0x10FACDC")]
	public void DoRotation()
	{
	}

	[Token(Token = "0x6000A4F")]
	[Address(RVA = "0x10FAF2C", Offset = "0x10FAF2C", VA = "0x10FAF2C")]
	public void DoScale()
	{
	}

	[Token(Token = "0x6000A50")]
	[Address(RVA = "0x10FB314", Offset = "0x10FB314", VA = "0x10FB314")]
	public Transformer()
	{
	}
}
[Token(Token = "0x200024D")]
public class TransitionManager : CacheBehaviour
{
	[Token(Token = "0x4000E78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8704", Offset = "0xCC8704")]
	public FloatVariable m_InTunnel;

	[Token(Token = "0x4000E79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_OutTunnel;

	[Token(Token = "0x4000E7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC873C", Offset = "0xCC873C")]
	public GameObject m_transitionObject;

	[Token(Token = "0x4000E7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8774", Offset = "0xCC8774")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC8774", Offset = "0xCC8774")]
	public float m_transitionTime;

	[Token(Token = "0x4000E7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC87C4", Offset = "0xCC87C4")]
	public float m_tweenTime;

	[Token(Token = "0x4000E7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC87FC", Offset = "0xCC87FC")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC87FC", Offset = "0xCC87FC")]
	public UnityEvent OnLevelStarted;

	[Token(Token = "0x4000E7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public IntUnityEvent OnLoadLevel;

	[Token(Token = "0x4000E7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public UnityEvent OnTransitionIn;

	[Token(Token = "0x4000E80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public UnityEvent OnTransitionOut;

	[Token(Token = "0x4000E81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC884C", Offset = "0xCC884C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC884C", Offset = "0xCC884C")]
	public UnityEvent OnGoingToShop;

	[Token(Token = "0x4000E82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public UnityEvent OnGoingToAnyTypeOfLevelExceptShop;

	[Token(Token = "0x4000E83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private bool _tweenStart;

	[Token(Token = "0x4000E84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float _transitionTime;

	[Token(Token = "0x4000E85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private int planetPicked;

	[Token(Token = "0x4000E86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
	private bool _levelGenerated;

	[Token(Token = "0x4000E87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x115")]
	private bool _transitionEnded;

	[Token(Token = "0x6000A51")]
	[Address(RVA = "0x10FB3F8", Offset = "0x10FB3F8", VA = "0x10FB3F8")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A52")]
	[Address(RVA = "0x10FB404", Offset = "0x10FB404", VA = "0x10FB404")]
	public void Update()
	{
	}

	[Token(Token = "0x6000A53")]
	[Address(RVA = "0x10FB66C", Offset = "0x10FB66C", VA = "0x10FB66C")]
	public void OnLevelGenerated()
	{
	}

	[Token(Token = "0x6000A54")]
	[Address(RVA = "0x10FB700", Offset = "0x10FB700", VA = "0x10FB700")]
	public void TransitionIn(int instanceID)
	{
	}

	[Token(Token = "0x6000A55")]
	[Address(RVA = "0x10FB924", Offset = "0x10FB924", VA = "0x10FB924")]
	public void TransitionInTween(float value)
	{
	}

	[Token(Token = "0x6000A56")]
	[Address(RVA = "0x10FB99C", Offset = "0x10FB99C", VA = "0x10FB99C")]
	public void TransitionOutTween(float value)
	{
	}

	[Token(Token = "0x6000A57")]
	[Address(RVA = "0x10FBA14", Offset = "0x10FBA14", VA = "0x10FBA14")]
	public void TransitionInTweenComplete()
	{
	}

	[Token(Token = "0x6000A58")]
	[Address(RVA = "0x10FBA78", Offset = "0x10FBA78", VA = "0x10FBA78")]
	public void TransitionOutTweenComplete()
	{
	}

	[Token(Token = "0x6000A59")]
	[Address(RVA = "0x10FB468", Offset = "0x10FB468", VA = "0x10FB468")]
	public void TransitionOut()
	{
	}

	[Token(Token = "0x6000A5A")]
	[Address(RVA = "0x10FBB74", Offset = "0x10FBB74", VA = "0x10FBB74")]
	public TransitionManager()
	{
	}
}
[Token(Token = "0x200024E")]
public class TriggerGameObjectInject : MonoBehaviour
{
	[Token(Token = "0x4000E88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObjectVariable m_variableToInject;

	[Token(Token = "0x4000E89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> m_acceptedTags;

	[Token(Token = "0x4000E8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_useInteraction;

	[Token(Token = "0x4000E8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_longPressTime;

	[Token(Token = "0x4000E8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnTriggerReleased;

	[Token(Token = "0x4000E8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnLongPress;

	[Token(Token = "0x4000E8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnLongPressFinished;

	[Token(Token = "0x4000E8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float _longPressTime;

	[Token(Token = "0x4000E90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool _interactedLeft;

	[Token(Token = "0x4000E91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool _interactedRight;

	[Token(Token = "0x4000E92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
	private bool _finished;

	[Token(Token = "0x4000E93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
	private bool _firstGrab;

	[Token(Token = "0x6000A5B")]
	[Address(RVA = "0x10FC0FC", Offset = "0x10FC0FC", VA = "0x10FC0FC")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000A5C")]
	[Address(RVA = "0x10FC164", Offset = "0x10FC164", VA = "0x10FC164")]
	public void OnTriggerStay(Collider other)
	{
	}

	[Token(Token = "0x6000A5D")]
	[Address(RVA = "0x10FC3E4", Offset = "0x10FC3E4", VA = "0x10FC3E4")]
	public void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000A5E")]
	[Address(RVA = "0x10FC4A8", Offset = "0x10FC4A8", VA = "0x10FC4A8")]
	public TriggerGameObjectInject()
	{
	}
}
[Token(Token = "0x200024F")]
public class Tweener : MonoBehaviour
{
	[Token(Token = "0x4000E94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_targetIsAnotherObject;

	[Token(Token = "0x4000E95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_target;

	[Token(Token = "0x4000E96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_setOrigin;

	[Token(Token = "0x4000E97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Label m_originLabel;

	[Token(Token = "0x4000E98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Label m_destinationLabel;

	[Token(Token = "0x4000E99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float m_tweenTime;

	[Token(Token = "0x4000E9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public iTween.EaseType m_easeType;

	[Token(Token = "0x4000E9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent m_onTweenOver;

	[Token(Token = "0x6000A5F")]
	[Address(RVA = "0x10FC4B0", Offset = "0x10FC4B0", VA = "0x10FC4B0")]
	public void DoTween()
	{
	}

	[Token(Token = "0x6000A60")]
	[Address(RVA = "0x10FC680", Offset = "0x10FC680", VA = "0x10FC680")]
	private void OnTweenComplete()
	{
	}

	[Token(Token = "0x6000A61")]
	[Address(RVA = "0x10FC69C", Offset = "0x10FC69C", VA = "0x10FC69C")]
	public Tweener()
	{
	}
}
[Token(Token = "0x2000250")]
public class OnAnimationFinished : CacheBehaviour
{
	[Token(Token = "0x4000E9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Animator m_animator;

	[Token(Token = "0x4000E9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public string m_animationName;

	[Token(Token = "0x4000E9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_launchAtStart;

	[Token(Token = "0x4000E9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC889C", Offset = "0xCC889C")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC889C", Offset = "0xCC889C")]
	public UnityEvent OnAnimationFinishedEvent;

	[Token(Token = "0x4000EA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private AnimationClip _animClip;

	[Token(Token = "0x4000EA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float _length;

	[Token(Token = "0x4000EA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool _started;

	[Token(Token = "0x4000EA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float _reverseTimer;

	[Token(Token = "0x6000A62")]
	[Address(RVA = "0x11CF760", Offset = "0x11CF760", VA = "0x11CF760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A63")]
	[Address(RVA = "0x11CFAE4", Offset = "0x11CFAE4", VA = "0x11CFAE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A64")]
	[Address(RVA = "0x11CFAD0", Offset = "0x11CFAD0", VA = "0x11CFAD0")]
	public void LaunchTimer()
	{
	}

	[Token(Token = "0x6000A65")]
	[Address(RVA = "0x11CFB40", Offset = "0x11CFB40", VA = "0x11CFB40")]
	public void AnimationFinished()
	{
	}

	[Token(Token = "0x6000A66")]
	[Address(RVA = "0x11CFB64", Offset = "0x11CFB64", VA = "0x11CFB64")]
	public OnAnimationFinished()
	{
	}

	[Token(Token = "0x6000A67")]
	[Address(RVA = "0x11CFB6C", Offset = "0x11CFB6C", VA = "0x11CFB6C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1AEC", Offset = "0xCD1AEC")]
	private bool <Start>b__4_0(AnimationClip x)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000251")]
public class OnFinishState : StateMachineBehaviour
{
	[Token(Token = "0x4000EA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntUnityEvent OnStateFinished;

	[Token(Token = "0x6000A68")]
	[Address(RVA = "0x11CFBB4", Offset = "0x11CFBB4", VA = "0x11CFBB4", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000A69")]
	[Address(RVA = "0x11CFC3C", Offset = "0x11CFC3C", VA = "0x11CFC3C")]
	public OnFinishState()
	{
	}
}
[Token(Token = "0x2000252")]
public class OnStateOverrideBehaviour : StateMachineBehaviour
{
	[Token(Token = "0x4000EA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnStateFinished;

	[Token(Token = "0x6000A6A")]
	[Address(RVA = "0x11CFE54", Offset = "0x11CFE54", VA = "0x11CFE54", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x6000A6B")]
	[Address(RVA = "0x11CFE70", Offset = "0x11CFE70", VA = "0x11CFE70")]
	public OnStateOverrideBehaviour()
	{
	}
}
[Token(Token = "0x2000253")]
public class AudioDelayedHolder : MonoBehaviour
{
	[Token(Token = "0x4000EA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameAudioManager gameAudioManager;

	[Token(Token = "0x4000EA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkInitializer wwiseGlobal;

	[Token(Token = "0x4000EA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkAudioListener audioListener;

	[Token(Token = "0x4000EA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC88EC", Offset = "0xCC88EC")]
	public int framesToWait;

	[Token(Token = "0x4000EAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int currentFrames;

	[Token(Token = "0x6000A6C")]
	[Address(RVA = "0xF643CC", Offset = "0xF643CC", VA = "0xF643CC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A6D")]
	[Address(RVA = "0xF643D4", Offset = "0xF643D4", VA = "0xF643D4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A6E")]
	[Address(RVA = "0xF64478", Offset = "0xF64478", VA = "0xF64478")]
	public AudioDelayedHolder()
	{
	}
}
[Token(Token = "0x2000254")]
public class AudioEventTrigger : MonoBehaviour
{
	[Token(Token = "0x4000EAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_audioSource;

	[Token(Token = "0x6000A6F")]
	[Address(RVA = "0xF64480", Offset = "0xF64480", VA = "0xF64480")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A70")]
	[Address(RVA = "0xF64484", Offset = "0xF64484", VA = "0xF64484")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A71")]
	[Address(RVA = "0xF64488", Offset = "0xF64488", VA = "0xF64488", Slot = "4")]
	public virtual void LaunchAkEvent(string eventName)
	{
	}

	[Token(Token = "0x6000A72")]
	[Address(RVA = "0xF64504", Offset = "0xF64504", VA = "0xF64504", Slot = "5")]
	public virtual void LaunchAkEvent(Event akEvent)
	{
	}

	[Token(Token = "0x6000A73")]
	[Address(RVA = "0xF6454C", Offset = "0xF6454C", VA = "0xF6454C")]
	public AudioEventTrigger()
	{
	}
}
[Token(Token = "0x2000255")]
public class AudioUIHolder : MonoBehaviour
{
	[Token(Token = "0x4000EAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Event onUIHover;

	[Token(Token = "0x4000EAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Event onUIClick;

	[Token(Token = "0x4000EAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event onUICancel;

	[Token(Token = "0x4000EAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Event onUIValidate;

	[Token(Token = "0x6000A74")]
	[Address(RVA = "0xF64A7C", Offset = "0xF64A7C", VA = "0xF64A7C")]
	public AudioUIHolder()
	{
	}
}
[Token(Token = "0x2000256")]
public class BarksSpatializer : MonoBehaviour
{
	[Token(Token = "0x4000EB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8924", Offset = "0xCC8924")]
	public Vector3[] m_podsPositions;

	[Token(Token = "0x4000EB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _playNextBark;

	[Token(Token = "0x4000EB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _currentPodPosition;

	[Token(Token = "0x6000A75")]
	[Address(RVA = "0xF65620", Offset = "0xF65620", VA = "0xF65620")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A76")]
	[Address(RVA = "0xF6568C", Offset = "0xF6568C", VA = "0xF6568C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A77")]
	[Address(RVA = "0xF65690", Offset = "0xF65690", VA = "0xF65690")]
	public BarksSpatializer()
	{
	}
}
[Token(Token = "0x2000257")]
public class ConditionalAudioEventTrigger : AudioEventTrigger
{
	[Token(Token = "0x4000EB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BoolVariable m_condition;

	[Token(Token = "0x4000EB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool m_requiredState;

	[Token(Token = "0x6000A78")]
	[Address(RVA = "0xF6CF30", Offset = "0xF6CF30", VA = "0xF6CF30", Slot = "5")]
	public override void LaunchAkEvent(Event akEvent)
	{
	}

	[Token(Token = "0x6000A79")]
	[Address(RVA = "0xF6CF94", Offset = "0xF6CF94", VA = "0xF6CF94", Slot = "4")]
	public override void LaunchAkEvent(string eventName)
	{
	}

	[Token(Token = "0x6000A7A")]
	[Address(RVA = "0xF6CFF8", Offset = "0xF6CFF8", VA = "0xF6CFF8")]
	public ConditionalAudioEventTrigger()
	{
	}
}
[Token(Token = "0x2000258")]
public class GameAudioManager : MonoBehaviour
{
	[Token(Token = "0x4000EB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC895C", Offset = "0xCC895C")]
	[SerializeField]
	private float _OverrideNatureRestorationLevel;

	[Token(Token = "0x4000EB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC899C", Offset = "0xCC899C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC899C", Offset = "0xCC899C")]
	[SerializeField]
	private float _editorMainVolume;

	[Token(Token = "0x4000EB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC8A00", Offset = "0xCC8A00")]
	[SerializeField]
	private float _editorSFXVolume;

	[Token(Token = "0x4000EB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC8A40", Offset = "0xCC8A40")]
	[SerializeField]
	private float _editorAMBVolume;

	[Token(Token = "0x4000EB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC8A80", Offset = "0xCC8A80")]
	[SerializeField]
	private float _editorMusicVolume;

	[Token(Token = "0x4000EBA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MusicManager m_musicManager;

	[Token(Token = "0x4000EBB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable _currentEnemyCount;

	[Token(Token = "0x4000EBC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntVariable _currentBatchIndex;

	[Token(Token = "0x4000EBD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntVariable _numberOfBatches;

	[Token(Token = "0x4000EBE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float _currentNatureRestorationLevel;

	[Token(Token = "0x4000EBF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float _currentMainVolume;

	[Token(Token = "0x4000EC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float _currentSFXVolume;

	[Token(Token = "0x4000EC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float _currentMusicVolume;

	[Token(Token = "0x4000EC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float _currentAmbientVolume;

	[Token(Token = "0x4000EC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static GameAudioManager Instance;

	[Token(Token = "0x17000053")]
	public float m_mainVolume
	{
		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xF3BA68", Offset = "0xF3BA68", VA = "0xF3BA68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xF3B728", Offset = "0xF3B728", VA = "0xF3B728")]
		set
		{
		}
	}

	[Token(Token = "0x17000054")]
	public float m_SFXVolume
	{
		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xF3BA70", Offset = "0xF3BA70", VA = "0xF3BA70")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xF3B7F8", Offset = "0xF3B7F8", VA = "0xF3B7F8")]
		set
		{
		}
	}

	[Token(Token = "0x17000055")]
	public float m_AMBVolume
	{
		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xF3BA78", Offset = "0xF3BA78", VA = "0xF3BA78")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xF3B998", Offset = "0xF3B998", VA = "0xF3B998")]
		set
		{
		}
	}

	[Token(Token = "0x17000056")]
	public float m_musicVolume
	{
		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xF3BA80", Offset = "0xF3BA80", VA = "0xF3BA80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xF3B8C8", Offset = "0xF3B8C8", VA = "0xF3B8C8")]
		set
		{
		}
	}

	[Token(Token = "0x17000057")]
	public float m_natureRestorationLevel
	{
		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xF3BA9C", Offset = "0xF3BA9C", VA = "0xF3BA9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xF3BA88", Offset = "0xF3BA88", VA = "0xF3BA88")]
		set
		{
		}
	}

	[Token(Token = "0x6000A7B")]
	[Address(RVA = "0xF3B5FC", Offset = "0xF3B5FC", VA = "0xF3B5FC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000A86")]
	[Address(RVA = "0xF3BAA4", Offset = "0xF3BAA4", VA = "0xF3BAA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000A87")]
	[Address(RVA = "0xF3BC08", Offset = "0xF3BC08", VA = "0xF3BC08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000A88")]
	[Address(RVA = "0xF3BDB8", Offset = "0xF3BDB8", VA = "0xF3BDB8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A89")]
	[Address(RVA = "0xF3B65C", Offset = "0xF3B65C", VA = "0xF3B65C")]
	public void ChangeAudioNatureRestorationLevel(float restorationLevel)
	{
	}

	[Token(Token = "0x6000A8A")]
	[Address(RVA = "0xF3BDBC", Offset = "0xF3BDBC", VA = "0xF3BDBC")]
	public void SetAmbienceState(string ambienceState)
	{
	}

	[Token(Token = "0x6000A8B")]
	[Address(RVA = "0xF3BE30", Offset = "0xF3BE30", VA = "0xF3BE30")]
	public void SetAmbienceRTPCValue(float ambienceRTPC)
	{
	}

	[Token(Token = "0x6000A8C")]
	[Address(RVA = "0xF3BC98", Offset = "0xF3BC98", VA = "0xF3BC98")]
	public void LoadSolarSystem(int solarSystemId)
	{
	}

	[Token(Token = "0x6000A8D")]
	[Address(RVA = "0xF3BEAC", Offset = "0xF3BEAC", VA = "0xF3BEAC")]
	public void UnloadSolarSystem(int solarSystemId)
	{
	}

	[Token(Token = "0x6000A8E")]
	[Address(RVA = "0xF3BF5C", Offset = "0xF3BF5C", VA = "0xF3BF5C")]
	public void CheckIfAllEnemiesDead()
	{
	}

	[Token(Token = "0x6000A8F")]
	[Address(RVA = "0xF3C070", Offset = "0xF3C070", VA = "0xF3C070")]
	public GameAudioManager()
	{
	}
}
[Token(Token = "0x2000259")]
public class HandAudioEventTrigger : AudioEventTrigger
{
	[Token(Token = "0x4000EC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Event m_gestureAbortedAkEvent;

	[Token(Token = "0x4000EC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event m_gestureFinishedAkEvent;

	[Token(Token = "0x4000EC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public int m_gestureMaxSteps;

	[Token(Token = "0x4000EC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private int _currentGestureSegmentCount;

	[Token(Token = "0x6000A91")]
	[Address(RVA = "0xF3F158", Offset = "0xF3F158", VA = "0xF3F158")]
	public void LaunchGestureAbortedAkEvent(GameObject audioSource)
	{
	}

	[Token(Token = "0x6000A92")]
	[Address(RVA = "0xF3F1F0", Offset = "0xF3F1F0", VA = "0xF3F1F0")]
	public void LaunchGestureFinishedAkEvent(GameObject audioSource)
	{
	}

	[Token(Token = "0x6000A93")]
	[Address(RVA = "0xF3F288", Offset = "0xF3F288", VA = "0xF3F288")]
	public void ResetGestureAudioSegmentCount(int newGestureMaxSteps = 1)
	{
	}

	[Token(Token = "0x6000A94")]
	[Address(RVA = "0xF3F330", Offset = "0xF3F330", VA = "0xF3F330")]
	public void IncreaseGestureAudioSegmentCount()
	{
	}

	[Token(Token = "0x6000A95")]
	[Address(RVA = "0xF3F3E8", Offset = "0xF3F3E8", VA = "0xF3F3E8")]
	public HandAudioEventTrigger()
	{
	}
}
[Token(Token = "0x200025A")]
public class MusicManager : MonoBehaviour
{
	[Token(Token = "0x4000EC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_playMusicOnStart;

	[Token(Token = "0x4000EC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_musicBeatSyncFloat;

	[Token(Token = "0x4000ECA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float m_musicBarSyncFloat;

	[Token(Token = "0x4000ECB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int m_musicCurrentBeatInt;

	[Token(Token = "0x4000ECC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int m_musicBeatsInBarInt;

	[Token(Token = "0x4000ECD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float m_musicVolumeFloat;

	[Token(Token = "0x4000ECE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool _isMusicPlaying;

	[Token(Token = "0x4000ECF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float _timeInCurrentBeat;

	[Token(Token = "0x4000ED0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float _timeInCurrentBar;

	[Token(Token = "0x4000ED1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _currentBeatLength;

	[Token(Token = "0x4000ED2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float _currentBarLength;

	[Token(Token = "0x4000ED3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float _currentMusicBusVolume;

	[Token(Token = "0x4000ED4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int _rtpcValueType;

	[Token(Token = "0x4000ED5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AnimationCurve _beatFloatInterpolationCurve;

	[Token(Token = "0x4000ED6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private AnimationCurve _barFloatInterpolationCurve;

	[Token(Token = "0x4000ED7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private AnimationCurve _musicVolumeFloatInterpolationCurve;

	[Token(Token = "0x4000ED8")]
	private const uint _callbackFlags = 768u;

	[Token(Token = "0x6000A96")]
	[Address(RVA = "0x10CE718", Offset = "0x10CE718", VA = "0x10CE718")]
	public void StartMusicWithCallbacks()
	{
	}

	[Token(Token = "0x6000A97")]
	[Address(RVA = "0x10CE878", Offset = "0x10CE878", VA = "0x10CE878")]
	public void StopMusic()
	{
	}

	[Token(Token = "0x6000A98")]
	[Address(RVA = "0x10CE804", Offset = "0x10CE804", VA = "0x10CE804")]
	public void SetMusicState(string musicState)
	{
	}

	[Token(Token = "0x6000A99")]
	[Address(RVA = "0x10CE908", Offset = "0x10CE908", VA = "0x10CE908")]
	public void SetWinState(string winState)
	{
	}

	[Token(Token = "0x6000A9A")]
	[Address(RVA = "0x10CE97C", Offset = "0x10CE97C", VA = "0x10CE97C")]
	public void SetCradleState(string cradleState)
	{
	}

	[Token(Token = "0x6000A9B")]
	[Address(RVA = "0x10CE9F0", Offset = "0x10CE9F0", VA = "0x10CE9F0")]
	private void MusicMarkerCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x6000A9C")]
	[Address(RVA = "0x10CEB00", Offset = "0x10CEB00", VA = "0x10CEB00")]
	public void Start()
	{
	}

	[Token(Token = "0x6000A9D")]
	[Address(RVA = "0x10CEB10", Offset = "0x10CEB10", VA = "0x10CEB10")]
	private void Update()
	{
	}

	[Token(Token = "0x6000A9E")]
	[Address(RVA = "0x10CECA0", Offset = "0x10CECA0", VA = "0x10CECA0")]
	public MusicManager()
	{
	}
}
[Token(Token = "0x200025B")]
public class SendSpeedToWwise : MonoBehaviour
{
	[Token(Token = "0x4000ED9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RTPC m_WwiseParameter;

	[Token(Token = "0x4000EDA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 _previousPosition;

	[Token(Token = "0x4000EDB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _speed;

	[Token(Token = "0x6000A9F")]
	[Address(RVA = "0x101DC88", Offset = "0x101DC88", VA = "0x101DC88")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA0")]
	[Address(RVA = "0x101DCC4", Offset = "0x101DCC4", VA = "0x101DCC4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA1")]
	[Address(RVA = "0x101DE20", Offset = "0x101DE20", VA = "0x101DE20")]
	public SendSpeedToWwise()
	{
	}
}
[Token(Token = "0x200025C")]
public class SendValueToWwise : MonoBehaviour
{
	[Token(Token = "0x4000EDC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool _sendEveryFrame;

	[Token(Token = "0x4000EDD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool m_activateUpdateSendOnStart;

	[Token(Token = "0x4000EDE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public FloatVariable m_valueToSend;

	[Token(Token = "0x4000EDF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_receiverObject;

	[Token(Token = "0x4000EE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public RTPC m_rtpcValue;

	[Token(Token = "0x6000AA2")]
	[Address(RVA = "0x101DE28", Offset = "0x101DE28", VA = "0x101DE28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA3")]
	[Address(RVA = "0x101DE3C", Offset = "0x101DE3C", VA = "0x101DE3C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AA4")]
	[Address(RVA = "0x101DF40", Offset = "0x101DF40", VA = "0x101DF40")]
	public void SendValueEveryFrame(bool active)
	{
	}

	[Token(Token = "0x6000AA5")]
	[Address(RVA = "0x101DF4C", Offset = "0x101DF4C", VA = "0x101DF4C")]
	public void SendCurrentValue()
	{
	}

	[Token(Token = "0x6000AA6")]
	[Address(RVA = "0x101E048", Offset = "0x101E048", VA = "0x101E048")]
	public SendValueToWwise()
	{
	}
}
[Token(Token = "0x200025D")]
public class TestMusicSwitcher : MonoBehaviour
{
	[Token(Token = "0x4000EE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private int _currentTrack;

	[Token(Token = "0x4000EE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private string[] _trackNames;

	[Token(Token = "0x6000AA7")]
	[Address(RVA = "0x107E458", Offset = "0x107E458", VA = "0x107E458")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AA8")]
	[Address(RVA = "0x107E4E0", Offset = "0x107E4E0", VA = "0x107E4E0")]
	public void NextSong()
	{
	}

	[Token(Token = "0x6000AA9")]
	[Address(RVA = "0x107E63C", Offset = "0x107E63C", VA = "0x107E63C")]
	public void PreviousSong()
	{
	}

	[Token(Token = "0x6000AAA")]
	[Address(RVA = "0x107E798", Offset = "0x107E798", VA = "0x107E798")]
	public TestMusicSwitcher()
	{
	}
}
[Token(Token = "0x200025E")]
public class BooleanActionIkimasho : BooleanAction
{
	[Token(Token = "0x6000AAB")]
	[Address(RVA = "0xF681C0", Offset = "0xF681C0", VA = "0xF681C0")]
	public void OnBooleanChange(bool value)
	{
	}

	[Token(Token = "0x6000AAC")]
	[Address(RVA = "0xF681D0", Offset = "0xF681D0", VA = "0xF681D0")]
	public BooleanActionIkimasho()
	{
	}
}
[Token(Token = "0x200025F")]
public static class Float3Extension
{
	[Token(Token = "0x6000AAD")]
	[Address(RVA = "0xF3AC50", Offset = "0xF3AC50", VA = "0xF3AC50")]
	public static Vector3 ToVector3(this float3 float3ToConvert)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000260")]
public static class FloatExtention
{
	[Token(Token = "0x6000AAE")]
	[Address(RVA = "0xF3AC54", Offset = "0xF3AC54", VA = "0xF3AC54")]
	public static bool Between(this float toCompare, float min, float max)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000261")]
public static class GameObjectExtension
{
	[Token(Token = "0x6000AAF")]
	[Address(RVA = "0xF3CA24", Offset = "0xF3CA24", VA = "0xF3CA24")]
	public static void Destroy(this GameObject go)
	{
	}
}
[Token(Token = "0x2000262")]
public static class Vector3Extensions
{
	[Token(Token = "0x6000AB0")]
	[Address(RVA = "0x1106A74", Offset = "0x1106A74", VA = "0x1106A74")]
	public static Vector3 GetDirection(this Vector3 from, Vector3 to)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000AB1")]
	[Address(RVA = "0x1106B90", Offset = "0x1106B90", VA = "0x1106B90")]
	public static float3 ToFloat3(this Vector3 vector)
	{
		return default(float3);
	}

	[Token(Token = "0x6000AB2")]
	[Address(RVA = "0x1106B94", Offset = "0x1106B94", VA = "0x1106B94")]
	public static Vector3 RotateAroundPivot(this Vector3 point, Vector3 pivot, Vector3 angle)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000263")]
public class BoolChecker : CacheBehaviour
{
	[Token(Token = "0x4000EE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public bool m_startValue;

	[Token(Token = "0x4000EE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public UnityEvent OnTrue;

	[Token(Token = "0x4000EE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnFalse;

	[Token(Token = "0x4000EE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private bool _boolToCheck;

	[Token(Token = "0x6000AB3")]
	[Address(RVA = "0xF68070", Offset = "0xF68070", VA = "0xF68070")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AB4")]
	[Address(RVA = "0xF6807C", Offset = "0xF6807C", VA = "0xF6807C")]
	public void SetBoolVariable(bool value)
	{
	}

	[Token(Token = "0x6000AB5")]
	[Address(RVA = "0xF68088", Offset = "0xF68088", VA = "0xF68088")]
	public void Check()
	{
	}

	[Token(Token = "0x6000AB6")]
	[Address(RVA = "0xF680B8", Offset = "0xF680B8", VA = "0xF680B8")]
	public BoolChecker()
	{
	}
}
[Token(Token = "0x2000264")]
public class BoolVariableChecker : MonoBehaviour
{
	[Token(Token = "0x4000EE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BoolVariable m_variableToCheck;

	[Token(Token = "0x4000EE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnIsTrue;

	[Token(Token = "0x4000EE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnIsFalse;

	[Token(Token = "0x4000EEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_launchOnEnable;

	[Token(Token = "0x6000AB7")]
	[Address(RVA = "0xF680C0", Offset = "0xF680C0", VA = "0xF680C0")]
	public void Check()
	{
	}

	[Token(Token = "0x6000AB8")]
	[Address(RVA = "0xF681A8", Offset = "0xF681A8", VA = "0xF681A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AB9")]
	[Address(RVA = "0xF681B8", Offset = "0xF681B8", VA = "0xF681B8")]
	public BoolVariableChecker()
	{
	}
}
[Token(Token = "0x2000265")]
public class GestureVariableComparer : CacheBehaviour
{
	[Token(Token = "0x4000EEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public GestureVariable m_variableA;

	[Token(Token = "0x4000EEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public GestureVariable m_variableB;

	[Token(Token = "0x4000EED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public UnityEvent OnCompareTrue;

	[Token(Token = "0x4000EEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnCompareFalse;

	[Token(Token = "0x6000ABA")]
	[Address(RVA = "0xF3D208", Offset = "0xF3D208", VA = "0xF3D208")]
	public void CompareDefaultWithValue()
	{
	}

	[Token(Token = "0x6000ABB")]
	[Address(RVA = "0xF3D330", Offset = "0xF3D330", VA = "0xF3D330")]
	public void CompareValueNull()
	{
	}

	[Token(Token = "0x6000ABC")]
	[Address(RVA = "0xF3D454", Offset = "0xF3D454", VA = "0xF3D454")]
	public void CompareVariables()
	{
	}

	[Token(Token = "0x6000ABD")]
	[Address(RVA = "0xF3D5C8", Offset = "0xF3D5C8", VA = "0xF3D5C8")]
	public GestureVariableComparer()
	{
	}
}
[Token(Token = "0x2000266")]
public class DisableOnReleaseBuild : MonoBehaviour
{
	[Token(Token = "0x6000ABE")]
	[Address(RVA = "0xF326C4", Offset = "0xF326C4", VA = "0xF326C4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ABF")]
	[Address(RVA = "0xF32758", Offset = "0xF32758", VA = "0xF32758")]
	public DisableOnReleaseBuild()
	{
	}
}
[Token(Token = "0x2000267")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB979C", Offset = "0xCB979C")]
public class SpreadsheetCredentialData : ScriptableObject
{
	[Serializable]
	[Token(Token = "0x2000604")]
	public struct GETParameterData
	{
		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string m_name;

		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string m_value;
	}

	[Token(Token = "0x4000EEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string m_nameForExport;

	[Token(Token = "0x4000EF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8B00", Offset = "0xCC8B00")]
	public string m_serviceUrl;

	[Token(Token = "0x4000EF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GETParameterData[] m_GETparameters;

	[Token(Token = "0x6000AC0")]
	[Address(RVA = "0x1077A1C", Offset = "0x1077A1C", VA = "0x1077A1C")]
	public string GetConstructedUrl()
	{
		return null;
	}

	[Token(Token = "0x6000AC1")]
	[Address(RVA = "0x1077B10", Offset = "0x1077B10", VA = "0x1077B10")]
	public SpreadsheetCredentialData()
	{
	}
}
[Token(Token = "0x2000268")]
public class GameObjectHolder : MonoBehaviour
{
	[Token(Token = "0x4000EF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject m_gameObject;

	[Token(Token = "0x4000EF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<GameObject> m_gameObjects;

	[Token(Token = "0x4000EF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_parent;

	[Token(Token = "0x4000EF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool m_notReady;

	[Token(Token = "0x6000AC2")]
	[Address(RVA = "0xF3CA90", Offset = "0xF3CA90", VA = "0xF3CA90")]
	public void SetGameObject(GameObject value)
	{
	}

	[Token(Token = "0x6000AC3")]
	[Address(RVA = "0xF3CA98", Offset = "0xF3CA98", VA = "0xF3CA98")]
	public GameObjectHolder()
	{
	}
}
[Token(Token = "0x2000269")]
public class BoneInjector : MonoBehaviour
{
	[Token(Token = "0x6000AC4")]
	[Address(RVA = "0xF68068", Offset = "0xF68068", VA = "0xF68068")]
	public BoneInjector()
	{
	}
}
[Token(Token = "0x200026A")]
public class DebugWaveText : CacheBehaviour
{
	[Token(Token = "0x4000EF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public WaveDataVariable m_waveData;

	[Token(Token = "0x6000AC5")]
	[Address(RVA = "0xF76914", Offset = "0xF76914", VA = "0xF76914")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000AC6")]
	[Address(RVA = "0xF76AD4", Offset = "0xF76AD4", VA = "0xF76AD4")]
	public DebugWaveText()
	{
	}
}
[Token(Token = "0x200026B")]
public class LIVDebugTools : MonoBehaviour
{
	[Token(Token = "0x4000EF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform m_worldOrigin;

	[Token(Token = "0x4000EF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform m_lefthHand;

	[Token(Token = "0x4000EF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform m_rightHand;

	[Token(Token = "0x4000EFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform m_leftWand;

	[Token(Token = "0x4000EFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform m_rightWand;

	[Token(Token = "0x4000EFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform m_head;

	[Token(Token = "0x4000EFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCC8B38", Offset = "0xCC8B38")]
	public float m_worldOriginIncrement;

	[Token(Token = "0x4000EFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector2 m_boxSize;

	[Token(Token = "0x6000AC7")]
	[Address(RVA = "0xFC15A0", Offset = "0xFC15A0", VA = "0xFC15A0")]
	public LIVDebugTools()
	{
	}
}
[Token(Token = "0x200026C")]
public class ImageFillAmountInjector : CacheBehaviour
{
	[Serializable]
	[Token(Token = "0x2000605")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF620", Offset = "0xCBF620")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__9_0;

		[Token(Token = "0x6002289")]
		[Address(RVA = "0xFBB2B0", Offset = "0xFBB2B0", VA = "0xFBB2B0")]
		public <>c()
		{
		}

		[Token(Token = "0x600228A")]
		[Address(RVA = "0xFBB2B8", Offset = "0xFBB2B8", VA = "0xFBB2B8")]
		internal bool <OnRegisterCrystal>b__9_0(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000EFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public FloatVariable m_floatToInject;

	[Token(Token = "0x4000F00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public AnimationCurve m_acceleration;

	[Token(Token = "0x4000F01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public bool m_useSpriteRenderer;

	[Token(Token = "0x4000F02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public UnityEvent OnFillComplete;

	[Token(Token = "0x4000F03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public string m_cooldownTag;

	[Token(Token = "0x4000F04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public Image _target;

	[Token(Token = "0x4000F05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public SpriteRenderer _targetSprite;

	[Token(Token = "0x4000F06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool _fillInProgress;

	[Token(Token = "0x4000F07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
	private bool _noRenderer;

	[Token(Token = "0x4000F08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private float _normalizedTimer;

	[Token(Token = "0x4000F09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private float _val;

	[Token(Token = "0x6000AC8")]
	[Address(RVA = "0xFBA7E8", Offset = "0xFBA7E8", VA = "0xFBA7E8")]
	public void AnimateFill()
	{
	}

	[Token(Token = "0x6000AC9")]
	[Address(RVA = "0xFBAA70", Offset = "0xFBAA70", VA = "0xFBAA70")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000ACA")]
	[Address(RVA = "0xFBAB44", Offset = "0xFBAB44", VA = "0xFBAB44")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000ACB")]
	[Address(RVA = "0xFBAB48", Offset = "0xFBAB48", VA = "0xFBAB48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000ACC")]
	[Address(RVA = "0xFBAFB0", Offset = "0xFBAFB0", VA = "0xFBAFB0")]
	public void OnRegisterCrystal(GameObject crystal)
	{
	}

	[Token(Token = "0x6000ACD")]
	[Address(RVA = "0xFBB240", Offset = "0xFBB240", VA = "0xFBB240")]
	public ImageFillAmountInjector()
	{
	}
}
[Token(Token = "0x200026D")]
public class ExpandableAttribute : PropertyAttribute
{
	[Token(Token = "0x6000ACE")]
	[Address(RVA = "0xF38FD4", Offset = "0xF38FD4", VA = "0xF38FD4")]
	public ExpandableAttribute()
	{
	}
}
[Serializable]
[Token(Token = "0x200026E")]
public struct BetterEvent
{
	[Token(Token = "0x4000F0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public List<BetterEventEntry> Events;

	[Token(Token = "0x6000ACF")]
	[Address(RVA = "0xDD3228", Offset = "0xDD3228", VA = "0xDD3228")]
	public void Invoke()
	{
	}
}
[Serializable]
[Token(Token = "0x200026F")]
public class BetterEventEntry : ISerializationCallbackReceiver
{
	[Token(Token = "0x2000606")]
	private struct OdinSerializedData
	{
		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Delegate Delegate;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public object[] ParameterValues;
	}

	[NonSerialized]
	[Token(Token = "0x4000F0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public Delegate Delegate;

	[NonSerialized]
	[Token(Token = "0x4000F0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public object[] ParameterValues;

	[Token(Token = "0x4000F0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private List<UnityEngine.Object> unityReferences;

	[Token(Token = "0x4000F0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	[HideInInspector]
	private byte[] bytes;

	[Token(Token = "0x6000AD0")]
	[Address(RVA = "0xF65788", Offset = "0xF65788", VA = "0xF65788")]
	public BetterEventEntry(Delegate del)
	{
	}

	[Token(Token = "0x6000AD1")]
	[Address(RVA = "0xF6572C", Offset = "0xF6572C", VA = "0xF6572C")]
	public void Invoke()
	{
	}

	[Token(Token = "0x6000AD2")]
	[Address(RVA = "0xF6586C", Offset = "0xF6586C", VA = "0xF6586C", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000AD3")]
	[Address(RVA = "0xF658EC", Offset = "0xF658EC", VA = "0xF658EC", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}
}
[Token(Token = "0x2000270")]
public class ExampleMonoBehaviour : MonoBehaviour
{
	[Token(Token = "0x4000F0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BetterEvent MyEvent;

	[Token(Token = "0x6000AD4")]
	[Address(RVA = "0xF38F8C", Offset = "0xF38F8C", VA = "0xF38F8C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AD5")]
	[Address(RVA = "0xF38FCC", Offset = "0xF38FCC", VA = "0xF38FCC")]
	public ExampleMonoBehaviour()
	{
	}
}
[Token(Token = "0x2000271")]
public class TagSelectorAttribute : PropertyAttribute
{
	[Token(Token = "0x4000F10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool UseDefaultTagFieldDrawer;

	[Token(Token = "0x6000AD6")]
	[Address(RVA = "0x1078A24", Offset = "0x1078A24", VA = "0x1078A24")]
	public TagSelectorAttribute()
	{
	}
}
[Token(Token = "0x2000272")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xCB97FC", Offset = "0xCB97FC")]
public class MultiLine : Attribute
{
	[Token(Token = "0x6000AD7")]
	[Address(RVA = "0x10CE53C", Offset = "0x10CE53C", VA = "0x10CE53C")]
	public MultiLine()
	{
	}
}
[Token(Token = "0x2000273")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9810", Offset = "0xCB9810")]
public class CinemachinePathVariable : BaseVariable<CinemachinePath>
{
	[Token(Token = "0x4000F11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float m_curveSegmentsNb;

	[Token(Token = "0x6000AD8")]
	[Address(RVA = "0xF6CDC8", Offset = "0xF6CDC8", VA = "0xF6CDC8")]
	public CinemachinePathVariable()
	{
	}
}
[Token(Token = "0x2000274")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB987C", Offset = "0xCB987C")]
public class ContactPointVariable : BaseVariable<ContactPoint>
{
	[Token(Token = "0x6000AD9")]
	[Address(RVA = "0xF6D000", Offset = "0xF6D000", VA = "0xF6D000")]
	public ContactPointVariable()
	{
	}
}
[Token(Token = "0x2000275")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB98E8", Offset = "0xCB98E8")]
public class GalaxyDataVariable : BaseVariable<GalaxyData>
{
	[Token(Token = "0x6000ADA")]
	[Address(RVA = "0xF3B5AC", Offset = "0xF3B5AC", VA = "0xF3B5AC")]
	public GalaxyDataVariable()
	{
	}
}
[Token(Token = "0x2000276")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9954", Offset = "0xCB9954")]
public class RaycastHitVariable : BaseVariable<RaycastHit>
{
	[Token(Token = "0x6000ADB")]
	[Address(RVA = "0xFF692C", Offset = "0xFF692C", VA = "0xFF692C")]
	public RaycastHitVariable()
	{
	}
}
[Token(Token = "0x2000277")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB99C0", Offset = "0xCB99C0")]
public class SolarSystemVariable : BaseVariable<SolarSystemData>
{
	[Token(Token = "0x6000ADC")]
	[Address(RVA = "0x107068C", Offset = "0x107068C", VA = "0x107068C")]
	public SolarSystemVariable()
	{
	}
}
[Token(Token = "0x2000278")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9A2C", Offset = "0xCB9A2C")]
public class SpellDataVariable : BaseVariable<SpellData>
{
	[Token(Token = "0x6000ADD")]
	[Address(RVA = "0x107308C", Offset = "0x107308C", VA = "0x107308C")]
	public SpellDataVariable()
	{
	}
}
[Token(Token = "0x2000279")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9A98", Offset = "0xCB9A98")]
public class SpreadsheetDataCollection : Collection<SpreadSheetData>
{
	[Token(Token = "0x6000ADE")]
	[Address(RVA = "0x1077B18", Offset = "0x1077B18", VA = "0x1077B18")]
	public SpreadsheetDataCollection()
	{
	}
}
[Token(Token = "0x200027A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9B04", Offset = "0xCB9B04")]
public class TrailRendererVariable : BaseVariable<TrailRenderer>
{
	[Token(Token = "0x6000ADF")]
	[Address(RVA = "0x10812F8", Offset = "0x10812F8", VA = "0x10812F8")]
	public TrailRendererVariable()
	{
	}
}
[Token(Token = "0x200027B")]
public class SwapIntVariables : MonoBehaviour
{
	[Token(Token = "0x4000F12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntVariable m_intVarA;

	[Token(Token = "0x4000F13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntVariable m_intVarB;

	[Token(Token = "0x4000F14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntVariable _tempVar;

	[Token(Token = "0x6000AE0")]
	[Address(RVA = "0x1078348", Offset = "0x1078348", VA = "0x1078348")]
	public void SwapVariables(bool swapDefaultToo = false)
	{
	}

	[Token(Token = "0x6000AE1")]
	[Address(RVA = "0x1078620", Offset = "0x1078620", VA = "0x1078620")]
	public SwapIntVariables()
	{
	}
}
[Token(Token = "0x200027C")]
public class SwapWandDataVariables : MonoBehaviour
{
	[Token(Token = "0x4000F15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WandDataVariable m_wandVarLeft;

	[Token(Token = "0x4000F16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public WandDataVariable m_wandVarRight;

	[Token(Token = "0x4000F17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public WandData m_leftWandData;

	[Token(Token = "0x4000F18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public WandData m_rightWandData;

	[Token(Token = "0x4000F19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private WandDataVariable _tempVar;

	[Token(Token = "0x6000AE2")]
	[Address(RVA = "0x1078628", Offset = "0x1078628", VA = "0x1078628")]
	public void SwapVariablesWithIndex(int index)
	{
	}

	[Token(Token = "0x6000AE3")]
	[Address(RVA = "0x10786AC", Offset = "0x10786AC", VA = "0x10786AC")]
	public void SwapVariables(bool swapDefaultToo = false)
	{
	}

	[Token(Token = "0x6000AE4")]
	[Address(RVA = "0x1078984", Offset = "0x1078984", VA = "0x1078984")]
	public SwapWandDataVariables()
	{
	}
}
[Token(Token = "0x200027D")]
public static class TransformEx
{
	[Token(Token = "0x6000AE5")]
	[Address(RVA = "0x10FA910", Offset = "0x10FA910", VA = "0x10FA910")]
	public static Transform FirstChildOrDefault(this Transform parent, Func<Transform, bool> query)
	{
		return null;
	}
}
[Token(Token = "0x200027E")]
public class UnityAplicationQuit : MonoBehaviour
{
	[Token(Token = "0x4000F1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnApplicationQuitted;

	[Token(Token = "0x6000AE6")]
	[Address(RVA = "0x11052B0", Offset = "0x11052B0", VA = "0x11052B0")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000AE7")]
	[Address(RVA = "0x11052CC", Offset = "0x11052CC", VA = "0x11052CC")]
	public UnityAplicationQuit()
	{
	}
}
[Token(Token = "0x200027F")]
public class FFRSetter : MonoBehaviour
{
	[Token(Token = "0x4000F1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FloatVariable m_resolutionScale;

	[Token(Token = "0x4000F1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRPlugin.FixedFoveatedRenderingLevel m_FFRLevel;

	[Token(Token = "0x4000F1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public uint m_frameToSkip;

	[Token(Token = "0x4000F1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private uint _framecount;

	[Token(Token = "0x6000AE8")]
	[Address(RVA = "0xF39384", Offset = "0xF39384", VA = "0xF39384")]
	public void IncrementResolution()
	{
	}

	[Token(Token = "0x6000AE9")]
	[Address(RVA = "0xF393FC", Offset = "0xF393FC", VA = "0xF393FC")]
	public void DecrementResolution()
	{
	}

	[Token(Token = "0x6000AEA")]
	[Address(RVA = "0xF39474", Offset = "0xF39474", VA = "0xF39474")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000AEB")]
	[Address(RVA = "0xF39504", Offset = "0xF39504", VA = "0xF39504")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AEC")]
	[Address(RVA = "0xF39594", Offset = "0xF39594", VA = "0xF39594")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AED")]
	[Address(RVA = "0xF39630", Offset = "0xF39630", VA = "0xF39630")]
	public FFRSetter()
	{
	}
}
[Token(Token = "0x2000280")]
public class FFRSetterProfileData : ScriptableObject
{
	[Token(Token = "0x4000F1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRPlugin.FixedFoveatedRenderingLevel m_FFRLevel;

	[Token(Token = "0x4000F20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float m_resolutionScale;

	[Token(Token = "0x6000AEE")]
	[Address(RVA = "0xF39644", Offset = "0xF39644", VA = "0xF39644")]
	public FFRSetterProfileData()
	{
	}
}
[Token(Token = "0x2000281")]
public class VersionNumberInjector : MonoBehaviour
{
	[Token(Token = "0x4000F21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public StringVariable m_target;

	[Token(Token = "0x6000AEF")]
	[Address(RVA = "0x1106F48", Offset = "0x1106F48", VA = "0x1106F48")]
	private void Start()
	{
	}

	[Token(Token = "0x6000AF0")]
	[Address(RVA = "0x1106F88", Offset = "0x1106F88", VA = "0x1106F88")]
	public VersionNumberInjector()
	{
	}
}
[Serializable]
[Token(Token = "0x2000282")]
public class ActorListWrapper
{
	[Token(Token = "0x4000F22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Expandable]
	public List<ActorSpawnedData> m_list;

	[Token(Token = "0x4000F23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isShield;

	[Token(Token = "0x6000AF1")]
	[Address(RVA = "0x16A7E24", Offset = "0x16A7E24", VA = "0x16A7E24")]
	public ActorListWrapper()
	{
	}
}
[Serializable]
[Token(Token = "0x2000283")]
public class PatternListWrapper
{
	[Token(Token = "0x4000F24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Expandable]
	public List<PatternData> m_patternList;

	[Token(Token = "0x6000AF2")]
	[Address(RVA = "0xFE8478", Offset = "0xFE8478", VA = "0xFE8478")]
	public PatternListWrapper()
	{
	}
}
[Serializable]
[Token(Token = "0x2000284")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCB9B80", Offset = "0xCB9B80")]
public class PerkListWrapper : ScriptableObject
{
	[Token(Token = "0x4000F25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Expandable]
	public List<PerkData> m_perkList;

	[Token(Token = "0x6000AF3")]
	[Address(RVA = "0xFE8B94", Offset = "0xFE8B94", VA = "0xFE8B94")]
	public PerkListWrapper()
	{
	}
}
[Token(Token = "0x2000285")]
public class Teleport : MonoBehaviour
{
	[Token(Token = "0x4000F26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool m_useLabel;

	[Token(Token = "0x4000F27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject m_target;

	[Token(Token = "0x4000F28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject m_destination;

	[Token(Token = "0x4000F29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Label m_destinationLabel;

	[Token(Token = "0x4000F2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool m_launchOnEnable;

	[Token(Token = "0x4000F2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool m_useUpdate;

	[Token(Token = "0x4000F2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObjectCollection m_planets;

	[Token(Token = "0x6000AF4")]
	[Address(RVA = "0x1079564", Offset = "0x1079564", VA = "0x1079564")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000AF5")]
	[Address(RVA = "0x1079724", Offset = "0x1079724", VA = "0x1079724")]
	public void Update()
	{
	}

	[Token(Token = "0x6000AF6")]
	[Address(RVA = "0x1079734", Offset = "0x1079734", VA = "0x1079734")]
	public void SetDestination(Label label)
	{
	}

	[Token(Token = "0x6000AF7")]
	[Address(RVA = "0x10795F0", Offset = "0x10795F0", VA = "0x10795F0")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x6000AF8")]
	[Address(RVA = "0x10797D4", Offset = "0x10797D4", VA = "0x10797D4")]
	public void DoTeleport(int instanceId)
	{
	}

	[Token(Token = "0x6000AF9")]
	[Address(RVA = "0x10799F0", Offset = "0x10799F0", VA = "0x10799F0")]
	public Teleport()
	{
	}
}
[Token(Token = "0x2000286")]
public class XPManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000607")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF630", Offset = "0xCBF630")]
	private sealed class <>c
	{
		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Transform, bool> <>9__37_0;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<Transform, bool> <>9__37_1;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Func<Transform, bool> <>9__44_2;

		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static Func<Transform, bool> <>9__44_3;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static Func<Transform, bool> <>9__44_4;

		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static Func<Transform, bool> <>9__44_5;

		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Func<Transform, bool> <>9__44_0;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static Func<Transform, bool> <>9__44_1;

		[Token(Token = "0x600228C")]
		[Address(RVA = "0x110AF70", Offset = "0x110AF70", VA = "0x110AF70")]
		public <>c()
		{
		}

		[Token(Token = "0x600228D")]
		[Address(RVA = "0x110AF78", Offset = "0x110AF78", VA = "0x110AF78")]
		internal bool <RestoreState>b__37_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600228E")]
		[Address(RVA = "0x110AFDC", Offset = "0x110AFDC", VA = "0x110AFDC")]
		internal bool <RestoreState>b__37_1(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x600228F")]
		[Address(RVA = "0x110B040", Offset = "0x110B040", VA = "0x110B040")]
		internal bool <LevelUpRoutine>b__44_2(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002290")]
		[Address(RVA = "0x110B0A4", Offset = "0x110B0A4", VA = "0x110B0A4")]
		internal bool <LevelUpRoutine>b__44_3(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002291")]
		[Address(RVA = "0x110B108", Offset = "0x110B108", VA = "0x110B108")]
		internal bool <LevelUpRoutine>b__44_4(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002292")]
		[Address(RVA = "0x110B16C", Offset = "0x110B16C", VA = "0x110B16C")]
		internal bool <LevelUpRoutine>b__44_5(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002293")]
		[Address(RVA = "0x110B1D0", Offset = "0x110B1D0", VA = "0x110B1D0")]
		internal bool <LevelUpRoutine>b__44_0(Transform x)
		{
			return default(bool);
		}

		[Token(Token = "0x6002294")]
		[Address(RVA = "0x110B234", Offset = "0x110B234", VA = "0x110B234")]
		internal bool <LevelUpRoutine>b__44_1(Transform x)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x2000608")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF640", Offset = "0xCBF640")]
	private sealed class <LevelUp>d__41 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XPManager <>4__this;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float xpGain;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float <newScale>5__2;

		[Token(Token = "0x1700039B")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x6002298")]
			[Address(RVA = "0x110B8A4", Offset = "0x110B8A4", VA = "0x110B8A4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700039C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x600229A")]
			[Address(RVA = "0x110B90C", Offset = "0x110B90C", VA = "0x110B90C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002295")]
		[Address(RVA = "0x110A4F0", Offset = "0x110A4F0", VA = "0x110A4F0")]
		[DebuggerHidden]
		public <LevelUp>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6002296")]
		[Address(RVA = "0x110B298", Offset = "0x110B298", VA = "0x110B298", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002297")]
		[Address(RVA = "0x110B29C", Offset = "0x110B29C", VA = "0x110B29C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002299")]
		[Address(RVA = "0x110B8AC", Offset = "0x110B8AC", VA = "0x110B8AC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x2000609")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF650", Offset = "0xCBF650")]
	private sealed class <LevelUpRoutine>d__44 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XPManager <>4__this;

		[Token(Token = "0x1700039D")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x600229E")]
			[Address(RVA = "0x110C864", Offset = "0x110C864", VA = "0x110C864", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700039E")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022A0")]
			[Address(RVA = "0x110C8CC", Offset = "0x110C8CC", VA = "0x110C8CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600229B")]
		[Address(RVA = "0x110A978", Offset = "0x110A978", VA = "0x110A978")]
		[DebuggerHidden]
		public <LevelUpRoutine>d__44(int <>1__state)
		{
		}

		[Token(Token = "0x600229C")]
		[Address(RVA = "0x110B970", Offset = "0x110B970", VA = "0x110B970", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600229D")]
		[Address(RVA = "0x110B974", Offset = "0x110B974", VA = "0x110B974", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x600229F")]
		[Address(RVA = "0x110C86C", Offset = "0x110C86C", VA = "0x110C86C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x200060A")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF660", Offset = "0xCBF660")]
	private sealed class <OnWaitMoneyLegacyScreen>d__46 : IEnumerator<float>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float <>2__current;

		[Token(Token = "0x4001D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public XPManager <>4__this;

		[Token(Token = "0x1700039F")]
		private float System.Collections.Generic.IEnumerator<System.Single>.Current
		{
			[Token(Token = "0x60022A4")]
			[Address(RVA = "0x110CA24", Offset = "0x110CA24", VA = "0x110CA24", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170003A0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60022A6")]
			[Address(RVA = "0x110CA8C", Offset = "0x110CA8C", VA = "0x110CA8C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60022A1")]
		[Address(RVA = "0x110AE2C", Offset = "0x110AE2C", VA = "0x110AE2C")]
		[DebuggerHidden]
		public <OnWaitMoneyLegacyScreen>d__46(int <>1__state)
		{
		}

		[Token(Token = "0x60022A2")]
		[Address(RVA = "0x110C930", Offset = "0x110C930", VA = "0x110C930", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60022A3")]
		[Address(RVA = "0x110C934", Offset = "0x110C934", VA = "0x110C934", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60022A5")]
		[Address(RVA = "0x110CA2C", Offset = "0x110CA2C", VA = "0x110CA2C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000F2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC8C0C", Offset = "0xCC8C0C")]
	public List<int> m_xpThreshold;

	[Token(Token = "0x4000F2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntVariable m_starShamanLevelInterRun;

	[Token(Token = "0x4000F2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public IntVariable m_starShamanLevel;

	[Token(Token = "0x4000F30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public IntVariable m_perkPageNumber;

	[Token(Token = "0x4000F31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public IntVariable m_perkPanelNumber;

	[Token(Token = "0x4000F32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public IntVariable m_xpInterRun;

	[Token(Token = "0x4000F33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public IntVariable m_xpCurrent;

	[Token(Token = "0x4000F34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public IntVariable m_xpNeeded;

	[Token(Token = "0x4000F35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public IntVariable m_xpRemaining;

	[Token(Token = "0x4000F36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public IntVariable m_score;

	[Token(Token = "0x4000F37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public IntVariable m_shopTier;

	[Token(Token = "0x4000F38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public FloatVariable m_progressBarScaleX;

	[Token(Token = "0x4000F39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public BoolVariable m_isInLevelUp;

	[Token(Token = "0x4000F3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<float> m_statsScorePercentages;

	[Token(Token = "0x4000F3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<TextMeshProLocalisationInjector> m_statsScoreTextMeshLocalizationInjectors;

	[Token(Token = "0x4000F3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public List<TextMeshPro> m_statsScoreTextMesh;

	[Token(Token = "0x4000F3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public List<StringVariable> m_statsScoreStringVariable;

	[Token(Token = "0x4000F3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public TextMeshPro m_totalScore;

	[Token(Token = "0x4000F3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public TextMeshPro m_ratioScore;

	[Token(Token = "0x4000F40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public TextMeshPro m_lifeSeq;

	[Token(Token = "0x4000F41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public FloatVariable m_scoreRatio;

	[Token(Token = "0x4000F42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public FloatVariable m_xpRatio;

	[Token(Token = "0x4000F43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public IntVariable m_currency;

	[Token(Token = "0x4000F44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public float m_animTime;

	[Token(Token = "0x4000F45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public TextMeshPro m_xpNeededText;

	[Token(Token = "0x4000F46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	public TextMeshPro m_xpGainText;

	[Token(Token = "0x4000F47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public TextMeshPro m_xpTotalText;

	[Token(Token = "0x4000F48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Transform m_progressBar;

	[Token(Token = "0x4000F49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public GameObject m_xpScreen;

	[Token(Token = "0x4000F4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	public List<GameObject> perks;

	[Token(Token = "0x4000F4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	public List<PerkListWrapper> m_perkLists;

	[Token(Token = "0x4000F4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public string m_unlockedState;

	[Token(Token = "0x4000F4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	public string m_unlockingState;

	[Token(Token = "0x4000F4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	public UnityEvent OnXpScreenRoutineEnd;

	[Token(Token = "0x4000F4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	public UnityEvent OnMoneyScreenRoutineEnd;

	[Token(Token = "0x4000F50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public GameObject m_newItemsInShop;

	[Token(Token = "0x4000F51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private float _time;

	[Token(Token = "0x4000F52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
	private float _totalXp;

	[Token(Token = "0x4000F53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private bool _endInvoked;

	[Token(Token = "0x6000AFA")]
	[Address(RVA = "0x1109948", Offset = "0x1109948", VA = "0x1109948")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x6000AFB")]
	[Address(RVA = "0x110994C", Offset = "0x110994C", VA = "0x110994C")]
	public void RestoreState()
	{
	}

	[Token(Token = "0x6000AFC")]
	[Address(RVA = "0x1109DD8", Offset = "0x1109DD8", VA = "0x1109DD8")]
	public void TryLevelUp()
	{
	}

	[Token(Token = "0x6000AFD")]
	[Address(RVA = "0x110A158", Offset = "0x110A158", VA = "0x110A158")]
	public void TryLevelUpInRun()
	{
	}

	[Token(Token = "0x6000AFE")]
	[Address(RVA = "0x110A3E4", Offset = "0x110A3E4", VA = "0x110A3E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000AFF")]
	[Address(RVA = "0x110A0CC", Offset = "0x110A0CC", VA = "0x110A0CC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1B6C", Offset = "0xCD1B6C")]
	public IEnumerator<float> LevelUp(float xpGain)
	{
		return null;
	}

	[Token(Token = "0x6000B00")]
	[Address(RVA = "0x110A51C", Offset = "0x110A51C", VA = "0x110A51C")]
	private void OnScaleUpdate()
	{
	}

	[Token(Token = "0x6000B01")]
	[Address(RVA = "0x110A61C", Offset = "0x110A61C", VA = "0x110A61C")]
	private void OnValueUpdate(float value)
	{
	}

	[Token(Token = "0x6000B02")]
	[Address(RVA = "0x110A8FC", Offset = "0x110A8FC", VA = "0x110A8FC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1BD0", Offset = "0xCD1BD0")]
	public IEnumerator<float> LevelUpRoutine()
	{
		return null;
	}

	[Token(Token = "0x6000B03")]
	[Address(RVA = "0x110A9A4", Offset = "0x110A9A4", VA = "0x110A9A4")]
	public void OnMoneyLegacyScreen()
	{
	}

	[Token(Token = "0x6000B04")]
	[Address(RVA = "0x110ADB0", Offset = "0x110ADB0", VA = "0x110ADB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1C34", Offset = "0xCD1C34")]
	private IEnumerator<float> OnWaitMoneyLegacyScreen()
	{
		return null;
	}

	[Token(Token = "0x6000B05")]
	[Address(RVA = "0x110AE58", Offset = "0x110AE58", VA = "0x110AE58")]
	public XPManager()
	{
	}
}
[Token(Token = "0x2000287")]
public class Stun : MonoBehaviour
{
	[Token(Token = "0x4000F54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask m_acceptedLayers;

	[Token(Token = "0x4000F55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public IntUnityEvent OnStun;

	[Token(Token = "0x6000B06")]
	[Address(RVA = "0x1078234", Offset = "0x1078234", VA = "0x1078234")]
	public void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000B07")]
	[Address(RVA = "0x1078340", Offset = "0x1078340", VA = "0x1078340")]
	public Stun()
	{
	}
}
[Token(Token = "0x2000288")]
public class AkCommunicationSettings : IDisposable
{
	[Token(Token = "0x4000F56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000058")]
	public uint uPoolSize
	{
		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x16B764C", Offset = "0x16B764C", VA = "0x16B764C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0x16B68D0", Offset = "0x16B68D0", VA = "0x16B68D0")]
		set
		{
		}
	}

	[Token(Token = "0x17000059")]
	public ushort uDiscoveryBroadcastPort
	{
		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x16B76B8", Offset = "0x16B76B8", VA = "0x16B76B8")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x16B694C", Offset = "0x16B694C", VA = "0x16B694C")]
		set
		{
		}
	}

	[Token(Token = "0x1700005A")]
	public ushort uCommandPort
	{
		[Token(Token = "0x6000B13")]
		[Address(RVA = "0x16B7724", Offset = "0x16B7724", VA = "0x16B7724")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000B12")]
		[Address(RVA = "0x16B69C8", Offset = "0x16B69C8", VA = "0x16B69C8")]
		set
		{
		}
	}

	[Token(Token = "0x1700005B")]
	public ushort uNotificationPort
	{
		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x16B7790", Offset = "0x16B7790", VA = "0x16B7790")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000B14")]
		[Address(RVA = "0x16B6A44", Offset = "0x16B6A44", VA = "0x16B6A44")]
		set
		{
		}
	}

	[Token(Token = "0x1700005C")]
	public bool bInitSystemLib
	{
		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x16B77FC", Offset = "0x16B77FC", VA = "0x16B77FC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x16B6AC0", Offset = "0x16B6AC0", VA = "0x16B6AC0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005D")]
	public string szAppNetworkName
	{
		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x16B7868", Offset = "0x16B7868", VA = "0x16B7868")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x16B6B3C", Offset = "0x16B6B3C", VA = "0x16B6B3C")]
		set
		{
		}
	}

	[Token(Token = "0x6000B08")]
	[Address(RVA = "0x16B73DC", Offset = "0x16B73DC", VA = "0x16B73DC")]
	internal AkCommunicationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B09")]
	[Address(RVA = "0x16B741C", Offset = "0x16B741C", VA = "0x16B741C")]
	internal static IntPtr getCPtr(AkCommunicationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B0A")]
	[Address(RVA = "0x16B746C", Offset = "0x16B746C", VA = "0x16B746C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B0B")]
	[Address(RVA = "0x16B74A0", Offset = "0x16B74A0", VA = "0x16B74A0", Slot = "1")]
	~AkCommunicationSettings()
	{
	}

	[Token(Token = "0x6000B0C")]
	[Address(RVA = "0x16B7510", Offset = "0x16B7510", VA = "0x16B7510", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B0D")]
	[Address(RVA = "0x16B17D0", Offset = "0x16B17D0", VA = "0x16B17D0")]
	public AkCommunicationSettings()
	{
	}
}
[Token(Token = "0x2000289")]
public enum AkMemPoolAttributes
{
	[Token(Token = "0x4000F59")]
	AkNoAlloc = 0,
	[Token(Token = "0x4000F5A")]
	AkMalloc = 1,
	[Token(Token = "0x4000F5B")]
	AkAllocMask = 1,
	[Token(Token = "0x4000F5C")]
	AkFixedSizeBlocksMode = 8,
	[Token(Token = "0x4000F5D")]
	AkBlockMgmtMask = 8
}
[Token(Token = "0x200028A")]
public class AkPlatformInitSettings : IDisposable
{
	[Token(Token = "0x4000F5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4000F5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700005E")]
	public AkThreadProperties threadLEngine
	{
		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1C8D240", Offset = "0x1C8D240", VA = "0x1C8D240")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x1C8D1B0", Offset = "0x1C8D1B0", VA = "0x1C8D1B0")]
		set
		{
		}
	}

	[Token(Token = "0x1700005F")]
	public AkThreadProperties threadOutputMgr
	{
		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1C8D380", Offset = "0x1C8D380", VA = "0x1C8D380")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x1C8D2F0", Offset = "0x1C8D2F0", VA = "0x1C8D2F0")]
		set
		{
		}
	}

	[Token(Token = "0x17000060")]
	public AkThreadProperties threadBankManager
	{
		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1C8D4C0", Offset = "0x1C8D4C0", VA = "0x1C8D4C0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1C8D430", Offset = "0x1C8D430", VA = "0x1C8D430")]
		set
		{
		}
	}

	[Token(Token = "0x17000061")]
	public AkThreadProperties threadMonitor
	{
		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x1C8D600", Offset = "0x1C8D600", VA = "0x1C8D600")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x1C8D570", Offset = "0x1C8D570", VA = "0x1C8D570")]
		set
		{
		}
	}

	[Token(Token = "0x17000062")]
	public float fLEngineDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1C8D72C", Offset = "0x1C8D72C", VA = "0x1C8D72C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x1C8D6B0", Offset = "0x1C8D6B0", VA = "0x1C8D6B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000063")]
	public uint uLEngineDefaultPoolSize
	{
		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1C8D814", Offset = "0x1C8D814", VA = "0x1C8D814")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1C8D798", Offset = "0x1C8D798", VA = "0x1C8D798")]
		set
		{
		}
	}

	[Token(Token = "0x17000064")]
	public uint uSampleRate
	{
		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1C8D8FC", Offset = "0x1C8D8FC", VA = "0x1C8D8FC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1C8D880", Offset = "0x1C8D880", VA = "0x1C8D880")]
		set
		{
		}
	}

	[Token(Token = "0x17000065")]
	public ushort uNumRefillsInVoice
	{
		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1C8D9E4", Offset = "0x1C8D9E4", VA = "0x1C8D9E4")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1C8D968", Offset = "0x1C8D968", VA = "0x1C8D968")]
		set
		{
		}
	}

	[Token(Token = "0x17000066")]
	public uint uChannelMask
	{
		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x1C8DACC", Offset = "0x1C8DACC", VA = "0x1C8DACC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x1C8DA50", Offset = "0x1C8DA50", VA = "0x1C8DA50")]
		set
		{
		}
	}

	[Token(Token = "0x17000067")]
	public bool bRoundFrameSizeToHWSize
	{
		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x1C8DBB4", Offset = "0x1C8DBB4", VA = "0x1C8DBB4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1C8DB38", Offset = "0x1C8DB38", VA = "0x1C8DB38")]
		set
		{
		}
	}

	[Token(Token = "0x6000B1A")]
	[Address(RVA = "0x1C812B0", Offset = "0x1C812B0", VA = "0x1C812B0")]
	internal AkPlatformInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6000B1B")]
	[Address(RVA = "0x1C811B0", Offset = "0x1C811B0", VA = "0x1C811B0")]
	internal static IntPtr getCPtr(AkPlatformInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6000B1C")]
	[Address(RVA = "0x1C8CFD0", Offset = "0x1C8CFD0", VA = "0x1C8CFD0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6000B1D")]
	[Address(RVA = "0x1C8D004", Offset = "0x1C8D004", VA = "0x1C8D004", Slot = "1")]
	~AkPlatformInitSettings()
	{
	}

	[Token(Token = "0x6000B1E")]
	[Address(RVA = "0x1C8D074", Offset = "0x1C8D074", VA = "0x1C8D074", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6000B33")]
	[Address(RVA = "0x1C8DC20", Offset = "0x1C8DC20", VA = "0x1C8DC20")]
	public AkPlatformInitSettings()
	{
	}
}
[Token(Token = "0x200028B")]
internal class AkSoundEnginePINVOKE
{
	[Token(Token = "0x6000B34")]
	[Address(RVA = "0x11F0F8C", Offset = "0x11F0F8C", VA = "0x11F0F8C")]
	static AkSoundEnginePINVOKE()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000B35")]
	[Address(RVA = "0x11D5B74", Offset = "0x11D5B74", VA = "0x11D5B74")]
	public static extern uint CSharp_AK_SOUNDBANK_VERSION_get();

	[PreserveSig]
	[Token(Token = "0x6000B36")]
	[Address(RVA = "0x11F0F90", Offset = "0x11F0F90", VA = "0x11F0F90")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B37")]
	[Address(RVA = "0x11F1020", Offset = "0x11F1020", VA = "0x11F1020")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B38")]
	[Address(RVA = "0x11F10A0", Offset = "0x11F10A0", VA = "0x11F10A0")]
	public static extern void CSharp_AkAudioSettings_uNumSamplesPerSecond_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B39")]
	[Address(RVA = "0x11F1130", Offset = "0x11F1130", VA = "0x11F1130")]
	public static extern uint CSharp_AkAudioSettings_uNumSamplesPerSecond_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B3A")]
	[Address(RVA = "0x11F11B0", Offset = "0x11F11B0", VA = "0x11F11B0")]
	public static extern IntPtr CSharp_new_AkAudioSettings();

	[PreserveSig]
	[Token(Token = "0x6000B3B")]
	[Address(RVA = "0x11F1224", Offset = "0x11F1224", VA = "0x11F1224")]
	public static extern void CSharp_delete_AkAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B3C")]
	[Address(RVA = "0x11F12A4", Offset = "0x11F12A4", VA = "0x11F12A4")]
	public static extern void CSharp_AkVector_Zero(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B3D")]
	[Address(RVA = "0x11F1324", Offset = "0x11F1324", VA = "0x11F1324")]
	public static extern void CSharp_AkVector_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B3E")]
	[Address(RVA = "0x11F13B4", Offset = "0x11F13B4", VA = "0x11F13B4")]
	public static extern float CSharp_AkVector_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B3F")]
	[Address(RVA = "0x11F1434", Offset = "0x11F1434", VA = "0x11F1434")]
	public static extern void CSharp_AkVector_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B40")]
	[Address(RVA = "0x11F14C4", Offset = "0x11F14C4", VA = "0x11F14C4")]
	public static extern float CSharp_AkVector_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B41")]
	[Address(RVA = "0x11F1544", Offset = "0x11F1544", VA = "0x11F1544")]
	public static extern void CSharp_AkVector_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B42")]
	[Address(RVA = "0x11F15D4", Offset = "0x11F15D4", VA = "0x11F15D4")]
	public static extern float CSharp_AkVector_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B43")]
	[Address(RVA = "0x11F1654", Offset = "0x11F1654", VA = "0x11F1654")]
	public static extern IntPtr CSharp_new_AkVector();

	[PreserveSig]
	[Token(Token = "0x6000B44")]
	[Address(RVA = "0x11F16C8", Offset = "0x11F16C8", VA = "0x11F16C8")]
	public static extern void CSharp_delete_AkVector(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B45")]
	[Address(RVA = "0x11F1748", Offset = "0x11F1748", VA = "0x11F1748")]
	public static extern IntPtr CSharp_AkTransform_Position(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B46")]
	[Address(RVA = "0x11F17C8", Offset = "0x11F17C8", VA = "0x11F17C8")]
	public static extern IntPtr CSharp_AkTransform_OrientationFront(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B47")]
	[Address(RVA = "0x11F1848", Offset = "0x11F1848", VA = "0x11F1848")]
	public static extern IntPtr CSharp_AkTransform_OrientationTop(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B48")]
	[Address(RVA = "0x11F18C8", Offset = "0x11F18C8", VA = "0x11F18C8")]
	public static extern void CSharp_AkTransform_Set__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000B49")]
	[Address(RVA = "0x11F1970", Offset = "0x11F1970", VA = "0x11F1970")]
	public static extern void CSharp_AkTransform_Set__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6000B4A")]
	[Address(RVA = "0x11F1A58", Offset = "0x11F1A58", VA = "0x11F1A58")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B4B")]
	[Address(RVA = "0x11F1AE8", Offset = "0x11F1AE8", VA = "0x11F1AE8")]
	public static extern void CSharp_AkTransform_SetPosition__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000B4C")]
	[Address(RVA = "0x11F1B90", Offset = "0x11F1B90", VA = "0x11F1B90")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_0(IntPtr jarg1, IntPtr jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000B4D")]
	[Address(RVA = "0x11F1C28", Offset = "0x11F1C28", VA = "0x11F1C28")]
	public static extern void CSharp_AkTransform_SetOrientation__SWIG_1(IntPtr jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7);

	[PreserveSig]
	[Token(Token = "0x6000B4E")]
	[Address(RVA = "0x11F1CF0", Offset = "0x11F1CF0", VA = "0x11F1CF0")]
	public static extern IntPtr CSharp_new_AkTransform();

	[PreserveSig]
	[Token(Token = "0x6000B4F")]
	[Address(RVA = "0x11F1D64", Offset = "0x11F1D64", VA = "0x11F1D64")]
	public static extern void CSharp_delete_AkTransform(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B50")]
	[Address(RVA = "0x11F1DE4", Offset = "0x11F1DE4", VA = "0x11F1DE4")]
	public static extern void CSharp_AkObstructionOcclusionValues_occlusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B51")]
	[Address(RVA = "0x11F1E74", Offset = "0x11F1E74", VA = "0x11F1E74")]
	public static extern float CSharp_AkObstructionOcclusionValues_occlusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B52")]
	[Address(RVA = "0x11F1EF4", Offset = "0x11F1EF4", VA = "0x11F1EF4")]
	public static extern void CSharp_AkObstructionOcclusionValues_obstruction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B53")]
	[Address(RVA = "0x11F1F84", Offset = "0x11F1F84", VA = "0x11F1F84")]
	public static extern float CSharp_AkObstructionOcclusionValues_obstruction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B54")]
	[Address(RVA = "0x11F2004", Offset = "0x11F2004", VA = "0x11F2004")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B55")]
	[Address(RVA = "0x11F2084", Offset = "0x11F2084", VA = "0x11F2084")]
	public static extern int CSharp_AkObstructionOcclusionValues_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000B56")]
	[Address(RVA = "0x11F20F8", Offset = "0x11F20F8", VA = "0x11F20F8")]
	public static extern void CSharp_AkObstructionOcclusionValues_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B57")]
	[Address(RVA = "0x11F2188", Offset = "0x11F2188", VA = "0x11F2188")]
	public static extern IntPtr CSharp_new_AkObstructionOcclusionValues();

	[PreserveSig]
	[Token(Token = "0x6000B58")]
	[Address(RVA = "0x11F21FC", Offset = "0x11F21FC", VA = "0x11F21FC")]
	public static extern void CSharp_delete_AkObstructionOcclusionValues(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B59")]
	[Address(RVA = "0x11F227C", Offset = "0x11F227C", VA = "0x11F227C")]
	public static extern void CSharp_AkChannelEmitter_position_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B5A")]
	[Address(RVA = "0x11F230C", Offset = "0x11F230C", VA = "0x11F230C")]
	public static extern IntPtr CSharp_AkChannelEmitter_position_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B5B")]
	[Address(RVA = "0x11F238C", Offset = "0x11F238C", VA = "0x11F238C")]
	public static extern void CSharp_AkChannelEmitter_uInputChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B5C")]
	[Address(RVA = "0x11F241C", Offset = "0x11F241C", VA = "0x11F241C")]
	public static extern uint CSharp_AkChannelEmitter_uInputChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B5D")]
	[Address(RVA = "0x11F249C", Offset = "0x11F249C", VA = "0x11F249C")]
	public static extern void CSharp_delete_AkChannelEmitter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B5E")]
	[Address(RVA = "0x11F251C", Offset = "0x11F251C", VA = "0x11F251C")]
	public static extern void CSharp_AkAuxSendValue_listenerID_set(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B5F")]
	[Address(RVA = "0x11F25AC", Offset = "0x11F25AC", VA = "0x11F25AC")]
	public static extern ulong CSharp_AkAuxSendValue_listenerID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B60")]
	[Address(RVA = "0x11F262C", Offset = "0x11F262C", VA = "0x11F262C")]
	public static extern void CSharp_AkAuxSendValue_auxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B61")]
	[Address(RVA = "0x11F26BC", Offset = "0x11F26BC", VA = "0x11F26BC")]
	public static extern uint CSharp_AkAuxSendValue_auxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B62")]
	[Address(RVA = "0x11F273C", Offset = "0x11F273C", VA = "0x11F273C")]
	public static extern void CSharp_AkAuxSendValue_fControlValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B63")]
	[Address(RVA = "0x11F27CC", Offset = "0x11F27CC", VA = "0x11F27CC")]
	public static extern float CSharp_AkAuxSendValue_fControlValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B64")]
	[Address(RVA = "0x11F284C", Offset = "0x11F284C", VA = "0x11F284C")]
	public static extern void CSharp_AkAuxSendValue_Set(IntPtr jarg1, ulong jarg2, uint jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000B65")]
	[Address(RVA = "0x11F28F4", Offset = "0x11F28F4", VA = "0x11F28F4")]
	public static extern bool CSharp_AkAuxSendValue_IsSame(IntPtr jarg1, ulong jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000B66")]
	[Address(RVA = "0x11F2994", Offset = "0x11F2994", VA = "0x11F2994")]
	public static extern int CSharp_AkAuxSendValue_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000B67")]
	[Address(RVA = "0x11F2A08", Offset = "0x11F2A08", VA = "0x11F2A08")]
	public static extern void CSharp_delete_AkAuxSendValue(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B68")]
	[Address(RVA = "0x11F2A88", Offset = "0x11F2A88", VA = "0x11F2A88")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000B69")]
	[Address(RVA = "0x11F2AFC", Offset = "0x11F2AFC", VA = "0x11F2AFC")]
	public static extern IntPtr CSharp_new_AkRamp__SWIG_1(float jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B6A")]
	[Address(RVA = "0x11F2B8C", Offset = "0x11F2B8C", VA = "0x11F2B8C")]
	public static extern void CSharp_AkRamp_fPrev_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B6B")]
	[Address(RVA = "0x11F2C1C", Offset = "0x11F2C1C", VA = "0x11F2C1C")]
	public static extern float CSharp_AkRamp_fPrev_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B6C")]
	[Address(RVA = "0x11F2C9C", Offset = "0x11F2C9C", VA = "0x11F2C9C")]
	public static extern void CSharp_AkRamp_fNext_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B6D")]
	[Address(RVA = "0x11F2D2C", Offset = "0x11F2D2C", VA = "0x11F2D2C")]
	public static extern float CSharp_AkRamp_fNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B6E")]
	[Address(RVA = "0x11F2DAC", Offset = "0x11F2DAC", VA = "0x11F2DAC")]
	public static extern void CSharp_delete_AkRamp(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B6F")]
	[Address(RVA = "0x11D5C44", Offset = "0x11D5C44", VA = "0x11D5C44")]
	public static extern ushort CSharp_AK_INT_get();

	[PreserveSig]
	[Token(Token = "0x6000B70")]
	[Address(RVA = "0x11D5D14", Offset = "0x11D5D14", VA = "0x11D5D14")]
	public static extern ushort CSharp_AK_FLOAT_get();

	[PreserveSig]
	[Token(Token = "0x6000B71")]
	[Address(RVA = "0x11D5DE4", Offset = "0x11D5DE4", VA = "0x11D5DE4")]
	public static extern byte CSharp_AK_INTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6000B72")]
	[Address(RVA = "0x11D5EB4", Offset = "0x11D5EB4", VA = "0x11D5EB4")]
	public static extern byte CSharp_AK_NONINTERLEAVED_get();

	[PreserveSig]
	[Token(Token = "0x6000B73")]
	[Address(RVA = "0x11D5F84", Offset = "0x11D5F84", VA = "0x11D5F84")]
	public static extern uint CSharp_AK_LE_NATIVE_BITSPERSAMPLE_get();

	[PreserveSig]
	[Token(Token = "0x6000B74")]
	[Address(RVA = "0x11D6054", Offset = "0x11D6054", VA = "0x11D6054")]
	public static extern uint CSharp_AK_LE_NATIVE_SAMPLETYPE_get();

	[PreserveSig]
	[Token(Token = "0x6000B75")]
	[Address(RVA = "0x11D6124", Offset = "0x11D6124", VA = "0x11D6124")]
	public static extern uint CSharp_AK_LE_NATIVE_INTERLEAVE_get();

	[PreserveSig]
	[Token(Token = "0x6000B76")]
	[Address(RVA = "0x11F2E2C", Offset = "0x11F2E2C", VA = "0x11F2E2C")]
	public static extern void CSharp_AkAudioFormat_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B77")]
	[Address(RVA = "0x11F2EBC", Offset = "0x11F2EBC", VA = "0x11F2EBC")]
	public static extern uint CSharp_AkAudioFormat_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B78")]
	[Address(RVA = "0x11F2F3C", Offset = "0x11F2F3C", VA = "0x11F2F3C")]
	public static extern void CSharp_AkAudioFormat_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B79")]
	[Address(RVA = "0x11F2FCC", Offset = "0x11F2FCC", VA = "0x11F2FCC")]
	public static extern IntPtr CSharp_AkAudioFormat_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B7A")]
	[Address(RVA = "0x11F304C", Offset = "0x11F304C", VA = "0x11F304C")]
	public static extern void CSharp_AkAudioFormat_uBitsPerSample_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B7B")]
	[Address(RVA = "0x11F30DC", Offset = "0x11F30DC", VA = "0x11F30DC")]
	public static extern uint CSharp_AkAudioFormat_uBitsPerSample_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B7C")]
	[Address(RVA = "0x11F315C", Offset = "0x11F315C", VA = "0x11F315C")]
	public static extern void CSharp_AkAudioFormat_uBlockAlign_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B7D")]
	[Address(RVA = "0x11F31EC", Offset = "0x11F31EC", VA = "0x11F31EC")]
	public static extern uint CSharp_AkAudioFormat_uBlockAlign_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B7E")]
	[Address(RVA = "0x11F326C", Offset = "0x11F326C", VA = "0x11F326C")]
	public static extern void CSharp_AkAudioFormat_uTypeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B7F")]
	[Address(RVA = "0x11F32FC", Offset = "0x11F32FC", VA = "0x11F32FC")]
	public static extern uint CSharp_AkAudioFormat_uTypeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B80")]
	[Address(RVA = "0x11F337C", Offset = "0x11F337C", VA = "0x11F337C")]
	public static extern void CSharp_AkAudioFormat_uInterleaveID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B81")]
	[Address(RVA = "0x11F340C", Offset = "0x11F340C", VA = "0x11F340C")]
	public static extern uint CSharp_AkAudioFormat_uInterleaveID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B82")]
	[Address(RVA = "0x11F348C", Offset = "0x11F348C", VA = "0x11F348C")]
	public static extern uint CSharp_AkAudioFormat_GetNumChannels(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B83")]
	[Address(RVA = "0x11F350C", Offset = "0x11F350C", VA = "0x11F350C")]
	public static extern uint CSharp_AkAudioFormat_GetBitsPerSample(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B84")]
	[Address(RVA = "0x11F358C", Offset = "0x11F358C", VA = "0x11F358C")]
	public static extern uint CSharp_AkAudioFormat_GetBlockAlign(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B85")]
	[Address(RVA = "0x11F360C", Offset = "0x11F360C", VA = "0x11F360C")]
	public static extern uint CSharp_AkAudioFormat_GetTypeID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B86")]
	[Address(RVA = "0x11F368C", Offset = "0x11F368C", VA = "0x11F368C")]
	public static extern uint CSharp_AkAudioFormat_GetInterleaveID(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B87")]
	[Address(RVA = "0x11F370C", Offset = "0x11F370C", VA = "0x11F370C")]
	public static extern void CSharp_AkAudioFormat_SetAll(IntPtr jarg1, uint jarg2, IntPtr jarg3, uint jarg4, uint jarg5, uint jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6000B88")]
	[Address(RVA = "0x11F37D4", Offset = "0x11F37D4", VA = "0x11F37D4")]
	public static extern bool CSharp_AkAudioFormat_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B89")]
	[Address(RVA = "0x11F385C", Offset = "0x11F385C", VA = "0x11F385C")]
	public static extern IntPtr CSharp_new_AkAudioFormat();

	[PreserveSig]
	[Token(Token = "0x6000B8A")]
	[Address(RVA = "0x11F38D0", Offset = "0x11F38D0", VA = "0x11F38D0")]
	public static extern void CSharp_delete_AkAudioFormat(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B8B")]
	[Address(RVA = "0x11F3950", Offset = "0x11F3950", VA = "0x11F3950")]
	public static extern void CSharp_AkIterator_pItem_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B8C")]
	[Address(RVA = "0x11F39E0", Offset = "0x11F39E0", VA = "0x11F39E0")]
	public static extern IntPtr CSharp_AkIterator_pItem_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B8D")]
	[Address(RVA = "0x11F3A60", Offset = "0x11F3A60", VA = "0x11F3A60")]
	public static extern IntPtr CSharp_AkIterator_NextIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B8E")]
	[Address(RVA = "0x11F3AE0", Offset = "0x11F3AE0", VA = "0x11F3AE0")]
	public static extern IntPtr CSharp_AkIterator_PrevIter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B8F")]
	[Address(RVA = "0x11F3B60", Offset = "0x11F3B60", VA = "0x11F3B60")]
	public static extern IntPtr CSharp_AkIterator_GetItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B90")]
	[Address(RVA = "0x11F3BE0", Offset = "0x11F3BE0", VA = "0x11F3BE0")]
	public static extern bool CSharp_AkIterator_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B91")]
	[Address(RVA = "0x11F3C78", Offset = "0x11F3C78", VA = "0x11F3C78")]
	public static extern bool CSharp_AkIterator_IsDifferentFrom(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B92")]
	[Address(RVA = "0x11F3D10", Offset = "0x11F3D10", VA = "0x11F3D10")]
	public static extern IntPtr CSharp_new_AkIterator();

	[PreserveSig]
	[Token(Token = "0x6000B93")]
	[Address(RVA = "0x11F3D84", Offset = "0x11F3D84", VA = "0x11F3D84")]
	public static extern void CSharp_delete_AkIterator(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B94")]
	[Address(RVA = "0x11F3E04", Offset = "0x11F3E04", VA = "0x11F3E04")]
	public static extern int CSharp__ArrayPoolDefault_Get();

	[PreserveSig]
	[Token(Token = "0x6000B95")]
	[Address(RVA = "0x11F3E78", Offset = "0x11F3E78", VA = "0x11F3E78")]
	public static extern IntPtr CSharp_new__ArrayPoolDefault();

	[PreserveSig]
	[Token(Token = "0x6000B96")]
	[Address(RVA = "0x11F3EEC", Offset = "0x11F3EEC", VA = "0x11F3EEC")]
	public static extern void CSharp_delete__ArrayPoolDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B97")]
	[Address(RVA = "0x11F3F6C", Offset = "0x11F3F6C", VA = "0x11F3F6C")]
	public static extern int CSharp__ArrayPoolLEngineDefault_Get();

	[PreserveSig]
	[Token(Token = "0x6000B98")]
	[Address(RVA = "0x11F3FE0", Offset = "0x11F3FE0", VA = "0x11F3FE0")]
	public static extern IntPtr CSharp_new__ArrayPoolLEngineDefault();

	[PreserveSig]
	[Token(Token = "0x6000B99")]
	[Address(RVA = "0x11F4054", Offset = "0x11F4054", VA = "0x11F4054")]
	public static extern void CSharp_delete__ArrayPoolLEngineDefault(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B9A")]
	[Address(RVA = "0x11F40D4", Offset = "0x11F40D4", VA = "0x11F40D4")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000B9B")]
	[Address(RVA = "0x11F4148", Offset = "0x11F4148", VA = "0x11F4148")]
	public static extern IntPtr CSharp_new_AkPlaylistItem__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B9C")]
	[Address(RVA = "0x11F41C8", Offset = "0x11F41C8", VA = "0x11F41C8")]
	public static extern void CSharp_delete_AkPlaylistItem(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000B9D")]
	[Address(RVA = "0x11F4248", Offset = "0x11F4248", VA = "0x11F4248")]
	public static extern IntPtr CSharp_AkPlaylistItem_Assign(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B9E")]
	[Address(RVA = "0x11F42D8", Offset = "0x11F42D8", VA = "0x11F42D8")]
	public static extern bool CSharp_AkPlaylistItem_IsEqualTo(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000B9F")]
	[Address(RVA = "0x11F4370", Offset = "0x11F4370", VA = "0x11F4370")]
	public static extern int CSharp_AkPlaylistItem_SetExternalSources(IntPtr jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000BA0")]
	[Address(RVA = "0x11F4408", Offset = "0x11F4408", VA = "0x11F4408")]
	public static extern void CSharp_AkPlaylistItem_audioNodeID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BA1")]
	[Address(RVA = "0x11F4498", Offset = "0x11F4498", VA = "0x11F4498")]
	public static extern uint CSharp_AkPlaylistItem_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BA2")]
	[Address(RVA = "0x11F4518", Offset = "0x11F4518", VA = "0x11F4518")]
	public static extern void CSharp_AkPlaylistItem_msDelay_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BA3")]
	[Address(RVA = "0x11F45A8", Offset = "0x11F45A8", VA = "0x11F45A8")]
	public static extern int CSharp_AkPlaylistItem_msDelay_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BA4")]
	[Address(RVA = "0x11F4628", Offset = "0x11F4628", VA = "0x11F4628")]
	public static extern void CSharp_AkPlaylistItem_pCustomInfo_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BA5")]
	[Address(RVA = "0x11F46B8", Offset = "0x11F46B8", VA = "0x11F46B8")]
	public static extern IntPtr CSharp_AkPlaylistItem_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BA6")]
	[Address(RVA = "0x11F4738", Offset = "0x11F4738", VA = "0x11F4738")]
	public static extern IntPtr CSharp_new_AkPlaylistArray();

	[PreserveSig]
	[Token(Token = "0x6000BA7")]
	[Address(RVA = "0x11F47AC", Offset = "0x11F47AC", VA = "0x11F47AC")]
	public static extern void CSharp_delete_AkPlaylistArray(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BA8")]
	[Address(RVA = "0x11F482C", Offset = "0x11F482C", VA = "0x11F482C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Begin(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BA9")]
	[Address(RVA = "0x11F48AC", Offset = "0x11F48AC", VA = "0x11F48AC")]
	public static extern IntPtr CSharp_AkPlaylistArray_End(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BAA")]
	[Address(RVA = "0x11F492C", Offset = "0x11F492C", VA = "0x11F492C")]
	public static extern IntPtr CSharp_AkPlaylistArray_FindEx(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BAB")]
	[Address(RVA = "0x11F49BC", Offset = "0x11F49BC", VA = "0x11F49BC")]
	public static extern IntPtr CSharp_AkPlaylistArray_Erase__SWIG_0(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BAC")]
	[Address(RVA = "0x11F4A4C", Offset = "0x11F4A4C", VA = "0x11F4A4C")]
	public static extern void CSharp_AkPlaylistArray_Erase__SWIG_1(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BAD")]
	[Address(RVA = "0x11F4ADC", Offset = "0x11F4ADC", VA = "0x11F4ADC")]
	public static extern IntPtr CSharp_AkPlaylistArray_EraseSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BAE")]
	[Address(RVA = "0x11F4B6C", Offset = "0x11F4B6C", VA = "0x11F4B6C")]
	public static extern int CSharp_AkPlaylistArray_Reserve(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BAF")]
	[Address(RVA = "0x11F4BFC", Offset = "0x11F4BFC", VA = "0x11F4BFC")]
	public static extern uint CSharp_AkPlaylistArray_Reserved(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BB0")]
	[Address(RVA = "0x11F4C7C", Offset = "0x11F4C7C", VA = "0x11F4C7C")]
	public static extern void CSharp_AkPlaylistArray_Term(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BB1")]
	[Address(RVA = "0x11F4CFC", Offset = "0x11F4CFC", VA = "0x11F4CFC")]
	public static extern uint CSharp_AkPlaylistArray_Length(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BB2")]
	[Address(RVA = "0x11F4D7C", Offset = "0x11F4D7C", VA = "0x11F4D7C")]
	public static extern IntPtr CSharp_AkPlaylistArray_Data(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BB3")]
	[Address(RVA = "0x11F4DFC", Offset = "0x11F4DFC", VA = "0x11F4DFC")]
	public static extern bool CSharp_AkPlaylistArray_IsEmpty(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BB4")]
	[Address(RVA = "0x11F4E84", Offset = "0x11F4E84", VA = "0x11F4E84")]
	public static extern IntPtr CSharp_AkPlaylistArray_Exists(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BB5")]
	[Address(RVA = "0x11F4F14", Offset = "0x11F4F14", VA = "0x11F4F14")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_0(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BB6")]
	[Address(RVA = "0x11F4F94", Offset = "0x11F4F94", VA = "0x11F4F94")]
	public static extern IntPtr CSharp_AkPlaylistArray_AddLast__SWIG_1(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BB7")]
	[Address(RVA = "0x11F5024", Offset = "0x11F5024", VA = "0x11F5024")]
	public static extern IntPtr CSharp_AkPlaylistArray_Last(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BB8")]
	[Address(RVA = "0x11F50A4", Offset = "0x11F50A4", VA = "0x11F50A4")]
	public static extern void CSharp_AkPlaylistArray_RemoveLast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BB9")]
	[Address(RVA = "0x11F5124", Offset = "0x11F5124", VA = "0x11F5124")]
	public static extern int CSharp_AkPlaylistArray_Remove(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BBA")]
	[Address(RVA = "0x11F51B4", Offset = "0x11F51B4", VA = "0x11F51B4")]
	public static extern int CSharp_AkPlaylistArray_RemoveSwap(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BBB")]
	[Address(RVA = "0x11F5244", Offset = "0x11F5244", VA = "0x11F5244")]
	public static extern void CSharp_AkPlaylistArray_RemoveAll(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BBC")]
	[Address(RVA = "0x11F52C4", Offset = "0x11F52C4", VA = "0x11F52C4")]
	public static extern IntPtr CSharp_AkPlaylistArray_ItemAtIndex(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BBD")]
	[Address(RVA = "0x11F5354", Offset = "0x11F5354", VA = "0x11F5354")]
	public static extern IntPtr CSharp_AkPlaylistArray_Insert(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BBE")]
	[Address(RVA = "0x11F53E4", Offset = "0x11F53E4", VA = "0x11F53E4")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_0(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BBF")]
	[Address(RVA = "0x11F547C", Offset = "0x11F547C", VA = "0x11F547C")]
	public static extern bool CSharp_AkPlaylistArray_GrowArray__SWIG_1(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BC0")]
	[Address(RVA = "0x11F5504", Offset = "0x11F5504", VA = "0x11F5504")]
	public static extern bool CSharp_AkPlaylistArray_Resize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BC1")]
	[Address(RVA = "0x11F559C", Offset = "0x11F559C", VA = "0x11F559C")]
	public static extern void CSharp_AkPlaylistArray_Transfer(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BC2")]
	[Address(RVA = "0x11F562C", Offset = "0x11F562C", VA = "0x11F562C")]
	public static extern int CSharp_AkPlaylistArray_Copy(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BC3")]
	[Address(RVA = "0x11F56BC", Offset = "0x11F56BC", VA = "0x11F56BC")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_0(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6);

	[PreserveSig]
	[Token(Token = "0x6000BC4")]
	[Address(RVA = "0x11F577C", Offset = "0x11F577C", VA = "0x11F577C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_1(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000BC5")]
	[Address(RVA = "0x11F582C", Offset = "0x11F582C", VA = "0x11F582C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_2(IntPtr jarg1, uint jarg2, int jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000BC6")]
	[Address(RVA = "0x11F58D4", Offset = "0x11F58D4", VA = "0x11F58D4")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000BC7")]
	[Address(RVA = "0x11F596C", Offset = "0x11F596C", VA = "0x11F596C")]
	public static extern int CSharp_AkPlaylist_Enqueue__SWIG_4(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BC8")]
	[Address(RVA = "0x11F59FC", Offset = "0x11F59FC", VA = "0x11F59FC")]
	public static extern IntPtr CSharp_new_AkPlaylist();

	[PreserveSig]
	[Token(Token = "0x6000BC9")]
	[Address(RVA = "0x11F5A70", Offset = "0x11F5A70", VA = "0x11F5A70")]
	public static extern void CSharp_delete_AkPlaylist(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BCA")]
	[Address(RVA = "0x11D63E8", Offset = "0x11D63E8", VA = "0x11D63E8")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_0(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000BCB")]
	[Address(RVA = "0x11D65F4", Offset = "0x11D65F4", VA = "0x11D65F4")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_1(ulong jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000BCC")]
	[Address(RVA = "0x11D6774", Offset = "0x11D6774", VA = "0x11D6774")]
	public static extern uint CSharp_DynamicSequenceOpen__SWIG_2(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BCD")]
	[Address(RVA = "0x11D6858", Offset = "0x11D6858", VA = "0x11D6858")]
	public static extern int CSharp_DynamicSequenceClose(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BCE")]
	[Address(RVA = "0x11D6954", Offset = "0x11D6954", VA = "0x11D6954")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000BCF")]
	[Address(RVA = "0x11D6A60", Offset = "0x11D6A60", VA = "0x11D6A60")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BD0")]
	[Address(RVA = "0x11D6B54", Offset = "0x11D6B54", VA = "0x11D6B54")]
	public static extern int CSharp_DynamicSequencePlay__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BD1")]
	[Address(RVA = "0x11D6C50", Offset = "0x11D6C50", VA = "0x11D6C50")]
	public static extern int CSharp_DynamicSequencePause__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000BD2")]
	[Address(RVA = "0x11D6D5C", Offset = "0x11D6D5C", VA = "0x11D6D5C")]
	public static extern int CSharp_DynamicSequencePause__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BD3")]
	[Address(RVA = "0x11D6E50", Offset = "0x11D6E50", VA = "0x11D6E50")]
	public static extern int CSharp_DynamicSequencePause__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BD4")]
	[Address(RVA = "0x11D6F4C", Offset = "0x11D6F4C", VA = "0x11D6F4C")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000BD5")]
	[Address(RVA = "0x11D7058", Offset = "0x11D7058", VA = "0x11D7058")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BD6")]
	[Address(RVA = "0x11D714C", Offset = "0x11D714C", VA = "0x11D714C")]
	public static extern int CSharp_DynamicSequenceResume__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BD7")]
	[Address(RVA = "0x11D7248", Offset = "0x11D7248", VA = "0x11D7248")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000BD8")]
	[Address(RVA = "0x11D7354", Offset = "0x11D7354", VA = "0x11D7354")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BD9")]
	[Address(RVA = "0x11D7448", Offset = "0x11D7448", VA = "0x11D7448")]
	public static extern int CSharp_DynamicSequenceStop__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BDA")]
	[Address(RVA = "0x11D752C", Offset = "0x11D752C", VA = "0x11D752C")]
	public static extern int CSharp_DynamicSequenceBreak(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BDB")]
	[Address(RVA = "0x11D7628", Offset = "0x11D7628", VA = "0x11D7628")]
	public static extern int CSharp_DynamicSequenceGetPauseTimes(uint jarg1, out uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000BDC")]
	[Address(RVA = "0x11D7768", Offset = "0x11D7768", VA = "0x11D7768")]
	public static extern IntPtr CSharp_DynamicSequenceLockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BDD")]
	[Address(RVA = "0x11D784C", Offset = "0x11D784C", VA = "0x11D784C")]
	public static extern int CSharp_DynamicSequenceUnlockPlaylist(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BDE")]
	[Address(RVA = "0x11F5AF0", Offset = "0x11F5AF0", VA = "0x11F5AF0")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000BDF")]
	[Address(RVA = "0x11F5B64", Offset = "0x11F5B64", VA = "0x11F5B64")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_1(string jarg1, uint jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000BE0")]
	[Address(RVA = "0x11F5C24", Offset = "0x11F5C24", VA = "0x11F5C24")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_2(string jarg1, uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000BE1")]
	[Address(RVA = "0x11F5CD4", Offset = "0x11F5CD4", VA = "0x11F5CD4")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_3(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BE2")]
	[Address(RVA = "0x11F5D7C", Offset = "0x11F5D7C", VA = "0x11F5D7C")]
	public static extern IntPtr CSharp_new_AkOutputSettings__SWIG_4(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BE3")]
	[Address(RVA = "0x11F5E14", Offset = "0x11F5E14", VA = "0x11F5E14")]
	public static extern void CSharp_AkOutputSettings_audioDeviceShareset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BE4")]
	[Address(RVA = "0x11F5EA4", Offset = "0x11F5EA4", VA = "0x11F5EA4")]
	public static extern uint CSharp_AkOutputSettings_audioDeviceShareset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BE5")]
	[Address(RVA = "0x11F5F24", Offset = "0x11F5F24", VA = "0x11F5F24")]
	public static extern void CSharp_AkOutputSettings_idDevice_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BE6")]
	[Address(RVA = "0x11F5FB4", Offset = "0x11F5FB4", VA = "0x11F5FB4")]
	public static extern uint CSharp_AkOutputSettings_idDevice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BE7")]
	[Address(RVA = "0x11F6034", Offset = "0x11F6034", VA = "0x11F6034")]
	public static extern void CSharp_AkOutputSettings_ePanningRule_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BE8")]
	[Address(RVA = "0x11F60C4", Offset = "0x11F60C4", VA = "0x11F60C4")]
	public static extern int CSharp_AkOutputSettings_ePanningRule_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BE9")]
	[Address(RVA = "0x11F6144", Offset = "0x11F6144", VA = "0x11F6144")]
	public static extern void CSharp_AkOutputSettings_channelConfig_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BEA")]
	[Address(RVA = "0x11F61D4", Offset = "0x11F61D4", VA = "0x11F61D4")]
	public static extern IntPtr CSharp_AkOutputSettings_channelConfig_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BEB")]
	[Address(RVA = "0x11F6254", Offset = "0x11F6254", VA = "0x11F6254")]
	public static extern void CSharp_delete_AkOutputSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BEC")]
	[Address(RVA = "0x11F62D4", Offset = "0x11F62D4", VA = "0x11F62D4")]
	public static extern void CSharp_AkTaskContext_uIdxThread_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BED")]
	[Address(RVA = "0x11F6364", Offset = "0x11F6364", VA = "0x11F6364")]
	public static extern uint CSharp_AkTaskContext_uIdxThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BEE")]
	[Address(RVA = "0x11F63E4", Offset = "0x11F63E4", VA = "0x11F63E4")]
	public static extern IntPtr CSharp_new_AkTaskContext();

	[PreserveSig]
	[Token(Token = "0x6000BEF")]
	[Address(RVA = "0x11F6458", Offset = "0x11F6458", VA = "0x11F6458")]
	public static extern void CSharp_delete_AkTaskContext(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BF0")]
	[Address(RVA = "0x11F64D8", Offset = "0x11F64D8", VA = "0x11F64D8")]
	public static extern void CSharp_AkInitSettings_uMaxNumPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BF1")]
	[Address(RVA = "0x11F6568", Offset = "0x11F6568", VA = "0x11F6568")]
	public static extern uint CSharp_AkInitSettings_uMaxNumPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BF2")]
	[Address(RVA = "0x11F65E8", Offset = "0x11F65E8", VA = "0x11F65E8")]
	public static extern void CSharp_AkInitSettings_uDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BF3")]
	[Address(RVA = "0x11F6678", Offset = "0x11F6678", VA = "0x11F6678")]
	public static extern uint CSharp_AkInitSettings_uDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BF4")]
	[Address(RVA = "0x11F66F8", Offset = "0x11F66F8", VA = "0x11F66F8")]
	public static extern void CSharp_AkInitSettings_fDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BF5")]
	[Address(RVA = "0x11F6788", Offset = "0x11F6788", VA = "0x11F6788")]
	public static extern float CSharp_AkInitSettings_fDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BF6")]
	[Address(RVA = "0x11F6808", Offset = "0x11F6808", VA = "0x11F6808")]
	public static extern void CSharp_AkInitSettings_uCommandQueueSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BF7")]
	[Address(RVA = "0x11F6898", Offset = "0x11F6898", VA = "0x11F6898")]
	public static extern uint CSharp_AkInitSettings_uCommandQueueSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BF8")]
	[Address(RVA = "0x11F6918", Offset = "0x11F6918", VA = "0x11F6918")]
	public static extern void CSharp_AkInitSettings_uPrepareEventMemoryPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BF9")]
	[Address(RVA = "0x11F69A8", Offset = "0x11F69A8", VA = "0x11F69A8")]
	public static extern int CSharp_AkInitSettings_uPrepareEventMemoryPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BFA")]
	[Address(RVA = "0x11F6A28", Offset = "0x11F6A28", VA = "0x11F6A28")]
	public static extern void CSharp_AkInitSettings_bEnableGameSyncPreparation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BFB")]
	[Address(RVA = "0x11F6AB8", Offset = "0x11F6AB8", VA = "0x11F6AB8")]
	public static extern bool CSharp_AkInitSettings_bEnableGameSyncPreparation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BFC")]
	[Address(RVA = "0x11F6B40", Offset = "0x11F6B40", VA = "0x11F6B40")]
	public static extern void CSharp_AkInitSettings_uContinuousPlaybackLookAhead_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BFD")]
	[Address(RVA = "0x11F6BD0", Offset = "0x11F6BD0", VA = "0x11F6BD0")]
	public static extern uint CSharp_AkInitSettings_uContinuousPlaybackLookAhead_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000BFE")]
	[Address(RVA = "0x11F6C50", Offset = "0x11F6C50", VA = "0x11F6C50")]
	public static extern void CSharp_AkInitSettings_uNumSamplesPerFrame_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000BFF")]
	[Address(RVA = "0x11F6CE0", Offset = "0x11F6CE0", VA = "0x11F6CE0")]
	public static extern uint CSharp_AkInitSettings_uNumSamplesPerFrame_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C00")]
	[Address(RVA = "0x11F6D60", Offset = "0x11F6D60", VA = "0x11F6D60")]
	public static extern void CSharp_AkInitSettings_uMonitorPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C01")]
	[Address(RVA = "0x11F6DF0", Offset = "0x11F6DF0", VA = "0x11F6DF0")]
	public static extern uint CSharp_AkInitSettings_uMonitorPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C02")]
	[Address(RVA = "0x11F6E70", Offset = "0x11F6E70", VA = "0x11F6E70")]
	public static extern void CSharp_AkInitSettings_uMonitorQueuePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C03")]
	[Address(RVA = "0x11F6F00", Offset = "0x11F6F00", VA = "0x11F6F00")]
	public static extern uint CSharp_AkInitSettings_uMonitorQueuePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C04")]
	[Address(RVA = "0x11F6F80", Offset = "0x11F6F80", VA = "0x11F6F80")]
	public static extern void CSharp_AkInitSettings_settingsMainOutput_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C05")]
	[Address(RVA = "0x11F7010", Offset = "0x11F7010", VA = "0x11F7010")]
	public static extern IntPtr CSharp_AkInitSettings_settingsMainOutput_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C06")]
	[Address(RVA = "0x11F7090", Offset = "0x11F7090", VA = "0x11F7090")]
	public static extern void CSharp_AkInitSettings_uMaxHardwareTimeoutMs_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C07")]
	[Address(RVA = "0x11F7120", Offset = "0x11F7120", VA = "0x11F7120")]
	public static extern uint CSharp_AkInitSettings_uMaxHardwareTimeoutMs_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C08")]
	[Address(RVA = "0x11F71A0", Offset = "0x11F71A0", VA = "0x11F71A0")]
	public static extern void CSharp_AkInitSettings_bUseSoundBankMgrThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C09")]
	[Address(RVA = "0x11F7230", Offset = "0x11F7230", VA = "0x11F7230")]
	public static extern bool CSharp_AkInitSettings_bUseSoundBankMgrThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C0A")]
	[Address(RVA = "0x11F72B8", Offset = "0x11F72B8", VA = "0x11F72B8")]
	public static extern void CSharp_AkInitSettings_bUseLEngineThread_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C0B")]
	[Address(RVA = "0x11F7348", Offset = "0x11F7348", VA = "0x11F7348")]
	public static extern bool CSharp_AkInitSettings_bUseLEngineThread_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C0C")]
	[Address(RVA = "0x11F73D0", Offset = "0x11F73D0", VA = "0x11F73D0")]
	public static extern void CSharp_AkInitSettings_szPluginDLLPath_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C0D")]
	[Address(RVA = "0x11F7474", Offset = "0x11F7474", VA = "0x11F7474")]
	public static extern IntPtr CSharp_AkInitSettings_szPluginDLLPath_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C0E")]
	[Address(RVA = "0x11F74F4", Offset = "0x11F74F4", VA = "0x11F74F4")]
	public static extern void CSharp_AkInitSettings_eFloorPlane_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C0F")]
	[Address(RVA = "0x11F7584", Offset = "0x11F7584", VA = "0x11F7584")]
	public static extern int CSharp_AkInitSettings_eFloorPlane_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C10")]
	[Address(RVA = "0x11F7604", Offset = "0x11F7604", VA = "0x11F7604")]
	public static extern IntPtr CSharp_new_AkInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000C11")]
	[Address(RVA = "0x11F7678", Offset = "0x11F7678", VA = "0x11F7678")]
	public static extern void CSharp_delete_AkInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C12")]
	[Address(RVA = "0x11F76F8", Offset = "0x11F76F8", VA = "0x11F76F8")]
	public static extern void CSharp_AkSourceSettings_sourceID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C13")]
	[Address(RVA = "0x11F7788", Offset = "0x11F7788", VA = "0x11F7788")]
	public static extern uint CSharp_AkSourceSettings_sourceID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C14")]
	[Address(RVA = "0x11F7808", Offset = "0x11F7808", VA = "0x11F7808")]
	public static extern void CSharp_AkSourceSettings_pMediaMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C15")]
	[Address(RVA = "0x11F7898", Offset = "0x11F7898", VA = "0x11F7898")]
	public static extern IntPtr CSharp_AkSourceSettings_pMediaMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C16")]
	[Address(RVA = "0x11F7918", Offset = "0x11F7918", VA = "0x11F7918")]
	public static extern void CSharp_AkSourceSettings_uMediaSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C17")]
	[Address(RVA = "0x11F79A8", Offset = "0x11F79A8", VA = "0x11F79A8")]
	public static extern uint CSharp_AkSourceSettings_uMediaSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C18")]
	[Address(RVA = "0x11F7A28", Offset = "0x11F7A28", VA = "0x11F7A28")]
	public static extern void CSharp_AkSourceSettings_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C19")]
	[Address(RVA = "0x11F7AA8", Offset = "0x11F7AA8", VA = "0x11F7AA8")]
	public static extern int CSharp_AkSourceSettings_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000C1A")]
	[Address(RVA = "0x11F7B1C", Offset = "0x11F7B1C", VA = "0x11F7B1C")]
	public static extern void CSharp_AkSourceSettings_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C1B")]
	[Address(RVA = "0x11F7BAC", Offset = "0x11F7BAC", VA = "0x11F7BAC")]
	public static extern IntPtr CSharp_new_AkSourceSettings();

	[PreserveSig]
	[Token(Token = "0x6000C1C")]
	[Address(RVA = "0x11F7C20", Offset = "0x11F7C20", VA = "0x11F7C20")]
	public static extern void CSharp_delete_AkSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C1D")]
	[Address(RVA = "0x11D7928", Offset = "0x11D7928", VA = "0x11D7928")]
	public static extern bool CSharp_IsInitialized();

	[PreserveSig]
	[Token(Token = "0x6000C1E")]
	[Address(RVA = "0x11D7A1C", Offset = "0x11D7A1C", VA = "0x11D7A1C")]
	public static extern int CSharp_GetAudioSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C1F")]
	[Address(RVA = "0x11D7B34", Offset = "0x11D7B34", VA = "0x11D7B34")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C20")]
	[Address(RVA = "0x11D7C44", Offset = "0x11D7C44", VA = "0x11D7C44")]
	public static extern IntPtr CSharp_GetSpeakerConfiguration__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000C21")]
	[Address(RVA = "0x11D7D2C", Offset = "0x11D7D2C", VA = "0x11D7D2C")]
	public static extern int CSharp_GetPanningRule__SWIG_0(out int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C22")]
	[Address(RVA = "0x11D7E20", Offset = "0x11D7E20", VA = "0x11D7E20")]
	public static extern int CSharp_GetPanningRule__SWIG_1(out int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C23")]
	[Address(RVA = "0x11D7F14", Offset = "0x11D7F14", VA = "0x11D7F14")]
	public static extern int CSharp_SetPanningRule__SWIG_0(int jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C24")]
	[Address(RVA = "0x11D8008", Offset = "0x11D8008", VA = "0x11D8008")]
	public static extern int CSharp_SetPanningRule__SWIG_1(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C25")]
	[Address(RVA = "0x11D8114", Offset = "0x11D8114", VA = "0x11D8114")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_0([In][Out] float[] jarg1, ref uint jarg2, out float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C26")]
	[Address(RVA = "0x11D8240", Offset = "0x11D8240", VA = "0x11D8240")]
	public static extern int CSharp_GetSpeakerAngles__SWIG_1([In][Out] float[] jarg1, ref uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C27")]
	[Address(RVA = "0x11D836C", Offset = "0x11D836C", VA = "0x11D836C")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_0([In] float[] jarg1, uint jarg2, float jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C28")]
	[Address(RVA = "0x11D84A0", Offset = "0x11D84A0", VA = "0x11D84A0")]
	public static extern int CSharp_SetSpeakerAngles__SWIG_1([In] float[] jarg1, uint jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C29")]
	[Address(RVA = "0x11D85B4", Offset = "0x11D85B4", VA = "0x11D85B4")]
	public static extern int CSharp_SetVolumeThreshold(float jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2A")]
	[Address(RVA = "0x11D86A0", Offset = "0x11D86A0", VA = "0x11D86A0")]
	public static extern int CSharp_SetMaxNumVoicesLimit(ushort jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2B")]
	[Address(RVA = "0x11D8784", Offset = "0x11D8784", VA = "0x11D8784")]
	public static extern int CSharp_RenderAudio__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2C")]
	[Address(RVA = "0x11D8860", Offset = "0x11D8860", VA = "0x11D8860")]
	public static extern int CSharp_RenderAudio__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000C2D")]
	[Address(RVA = "0x11D8938", Offset = "0x11D8938", VA = "0x11D8938")]
	public static extern int CSharp_RegisterPluginDLL(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2E")]
	[Address(RVA = "0x11D8A34", Offset = "0x11D8A34", VA = "0x11D8A34")]
	public static extern uint CSharp_GetIDFromString(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C2F")]
	[Address(RVA = "0x11D8C64", Offset = "0x11D8C64", VA = "0x11D8C64")]
	public static extern uint CSharp_PostEvent__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6000C30")]
	[Address(RVA = "0x11D8EC4", Offset = "0x11D8EC4", VA = "0x11D8EC4")]
	public static extern uint CSharp_PostEvent__SWIG_1(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000C31")]
	[Address(RVA = "0x11D90F0", Offset = "0x11D90F0", VA = "0x11D90F0")]
	public static extern uint CSharp_PostEvent__SWIG_2(uint jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C32")]
	[Address(RVA = "0x11D9288", Offset = "0x11D9288", VA = "0x11D9288")]
	public static extern uint CSharp_PostEvent__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C33")]
	[Address(RVA = "0x11D94B0", Offset = "0x11D94B0", VA = "0x11D94B0")]
	public static extern uint CSharp_PostEvent__SWIG_4(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7, uint jarg8);

	[PreserveSig]
	[Token(Token = "0x6000C34")]
	[Address(RVA = "0x11D9728", Offset = "0x11D9728", VA = "0x11D9728")]
	public static extern uint CSharp_PostEvent__SWIG_5(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5, uint jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000C35")]
	[Address(RVA = "0x11D996C", Offset = "0x11D996C", VA = "0x11D996C")]
	public static extern uint CSharp_PostEvent__SWIG_6(string jarg1, ulong jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C36")]
	[Address(RVA = "0x11D9B1C", Offset = "0x11D9B1C", VA = "0x11D9B1C")]
	public static extern uint CSharp_PostEvent__SWIG_7(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C37")]
	[Address(RVA = "0x11D9CA0", Offset = "0x11D9CA0", VA = "0x11D9CA0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_0(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000C38")]
	[Address(RVA = "0x11D9E2C", Offset = "0x11D9E2C", VA = "0x11D9E2C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_1(uint jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C39")]
	[Address(RVA = "0x11D9FA0", Offset = "0x11D9FA0", VA = "0x11D9FA0")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_2(uint jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C3A")]
	[Address(RVA = "0x11DA0FC", Offset = "0x11DA0FC", VA = "0x11DA0FC")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_3(uint jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C3B")]
	[Address(RVA = "0x11DA208", Offset = "0x11DA208", VA = "0x11DA208")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_4(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C3C")]
	[Address(RVA = "0x11DA374", Offset = "0x11DA374", VA = "0x11DA374")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_5(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5, uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000C3D")]
	[Address(RVA = "0x11DA518", Offset = "0x11DA518", VA = "0x11DA518")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_6(string jarg1, int jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C3E")]
	[Address(RVA = "0x11DA6A4", Offset = "0x11DA6A4", VA = "0x11DA6A4")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_7(string jarg1, int jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C3F")]
	[Address(RVA = "0x11DA818", Offset = "0x11DA818", VA = "0x11DA818")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_8(string jarg1, int jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C40")]
	[Address(RVA = "0x11DA93C", Offset = "0x11DA93C", VA = "0x11DA93C")]
	public static extern int CSharp_ExecuteActionOnEvent__SWIG_9(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C41")]
	[Address(RVA = "0x11DAAB4", Offset = "0x11DAAB4", VA = "0x11DAAB4")]
	public static extern int CSharp_PostMIDIOnEvent(uint jarg1, ulong jarg2, IntPtr jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C42")]
	[Address(RVA = "0x11DAC08", Offset = "0x11DAC08", VA = "0x11DAC08")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C43")]
	[Address(RVA = "0x11DACFC", Offset = "0x11DACFC", VA = "0x11DACFC")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_1(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C44")]
	[Address(RVA = "0x11DADD8", Offset = "0x11DADD8", VA = "0x11DADD8")]
	public static extern int CSharp_StopMIDIOnEvent__SWIG_2();

	[PreserveSig]
	[Token(Token = "0x6000C45")]
	[Address(RVA = "0x11DAEC8", Offset = "0x11DAEC8", VA = "0x11DAEC8")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_0(uint jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C46")]
	[Address(RVA = "0x11DAFDC", Offset = "0x11DAFDC", VA = "0x11DAFDC")]
	public static extern int CSharp_PinEventInStreamCache__SWIG_1(string jarg1, sbyte jarg2, sbyte jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C47")]
	[Address(RVA = "0x11DB0F0", Offset = "0x11DB0F0", VA = "0x11DB0F0")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_0(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C48")]
	[Address(RVA = "0x11DB1D4", Offset = "0x11DB1D4", VA = "0x11DB1D4")]
	public static extern int CSharp_UnpinEventInStreamCache__SWIG_1(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C49")]
	[Address(RVA = "0x11DB2E8", Offset = "0x11DB2E8", VA = "0x11DB2E8")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_0(uint jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C4A")]
	[Address(RVA = "0x11DB3FC", Offset = "0x11DB3FC", VA = "0x11DB3FC")]
	public static extern int CSharp_GetBufferStatusForPinnedEvent__SWIG_1(string jarg1, out float jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C4B")]
	[Address(RVA = "0x11DB578", Offset = "0x11DB578", VA = "0x11DB578")]
	public static extern int CSharp_SeekOnEvent__SWIG_0(uint jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C4C")]
	[Address(RVA = "0x11DB6EC", Offset = "0x11DB6EC", VA = "0x11DB6EC")]
	public static extern int CSharp_SeekOnEvent__SWIG_1(uint jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C4D")]
	[Address(RVA = "0x11DB848", Offset = "0x11DB848", VA = "0x11DB848")]
	public static extern int CSharp_SeekOnEvent__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C4E")]
	[Address(RVA = "0x11DB9AC", Offset = "0x11DB9AC", VA = "0x11DB9AC")]
	public static extern int CSharp_SeekOnEvent__SWIG_3(string jarg1, ulong jarg2, int jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C4F")]
	[Address(RVA = "0x11DBB38", Offset = "0x11DBB38", VA = "0x11DBB38")]
	public static extern int CSharp_SeekOnEvent__SWIG_4(string jarg1, ulong jarg2, int jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C50")]
	[Address(RVA = "0x11DBCAC", Offset = "0x11DBCAC", VA = "0x11DBCAC")]
	public static extern int CSharp_SeekOnEvent__SWIG_5(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C51")]
	[Address(RVA = "0x11DBE30", Offset = "0x11DBE30", VA = "0x11DBE30")]
	public static extern int CSharp_SeekOnEvent__SWIG_6(uint jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C52")]
	[Address(RVA = "0x11DBFAC", Offset = "0x11DBFAC", VA = "0x11DBFAC")]
	public static extern int CSharp_SeekOnEvent__SWIG_7(uint jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C53")]
	[Address(RVA = "0x11DC110", Offset = "0x11DC110", VA = "0x11DC110")]
	public static extern int CSharp_SeekOnEvent__SWIG_8(uint jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C54")]
	[Address(RVA = "0x11DC284", Offset = "0x11DC284", VA = "0x11DC284")]
	public static extern int CSharp_SeekOnEvent__SWIG_9(string jarg1, ulong jarg2, float jarg3, bool jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C55")]
	[Address(RVA = "0x11DC418", Offset = "0x11DC418", VA = "0x11DC418")]
	public static extern int CSharp_SeekOnEvent__SWIG_10(string jarg1, ulong jarg2, float jarg3, bool jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C56")]
	[Address(RVA = "0x11DC594", Offset = "0x11DC594", VA = "0x11DC594")]
	public static extern int CSharp_SeekOnEvent__SWIG_11(string jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C57")]
	[Address(RVA = "0x11F7CA0", Offset = "0x11F7CA0", VA = "0x11F7CA0")]
	public static extern void CSharp_CancelEventCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C58")]
	[Address(RVA = "0x11DC750", Offset = "0x11DC750", VA = "0x11DC750")]
	public static extern void CSharp_CancelEventCallbackGameObject(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C59")]
	[Address(RVA = "0x11F7D20", Offset = "0x11F7D20", VA = "0x11F7D20")]
	public static extern void CSharp_CancelEventCallback(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C5A")]
	[Address(RVA = "0x11DC8B4", Offset = "0x11DC8B4", VA = "0x11DC8B4")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_0(uint jarg1, out int jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C5B")]
	[Address(RVA = "0x11DC9C0", Offset = "0x11DC9C0", VA = "0x11DC9C0")]
	public static extern int CSharp_GetSourcePlayPosition__SWIG_1(uint jarg1, out int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C5C")]
	[Address(RVA = "0x11DCACC", Offset = "0x11DCACC", VA = "0x11DCACC")]
	public static extern int CSharp_GetSourceStreamBuffering(uint jarg1, out int jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C5D")]
	[Address(RVA = "0x11DCC00", Offset = "0x11DCC00", VA = "0x11DCC00")]
	public static extern void CSharp_StopAll__SWIG_0(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C5E")]
	[Address(RVA = "0x11DCCDC", Offset = "0x11DCCDC", VA = "0x11DCCDC")]
	public static extern void CSharp_StopAll__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000C5F")]
	[Address(RVA = "0x11DCDC8", Offset = "0x11DCDC8", VA = "0x11DCDC8")]
	public static extern void CSharp_StopPlayingID__SWIG_0(uint jarg1, int jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C60")]
	[Address(RVA = "0x11DCED4", Offset = "0x11DCED4", VA = "0x11DCED4")]
	public static extern void CSharp_StopPlayingID__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C61")]
	[Address(RVA = "0x11DCFC8", Offset = "0x11DCFC8", VA = "0x11DCFC8")]
	public static extern void CSharp_StopPlayingID__SWIG_2(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C62")]
	[Address(RVA = "0x11DD0D4", Offset = "0x11DD0D4", VA = "0x11DD0D4")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_0(int jarg1, uint jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C63")]
	[Address(RVA = "0x11DD1F8", Offset = "0x11DD1F8", VA = "0x11DD1F8")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_1(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C64")]
	[Address(RVA = "0x11DD304", Offset = "0x11DD304", VA = "0x11DD304")]
	public static extern void CSharp_ExecuteActionOnPlayingID__SWIG_2(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C65")]
	[Address(RVA = "0x11DD3F8", Offset = "0x11DD3F8", VA = "0x11DD3F8")]
	public static extern void CSharp_SetRandomSeed(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C66")]
	[Address(RVA = "0x11DD4DC", Offset = "0x11DD4DC", VA = "0x11DD4DC")]
	public static extern void CSharp_MuteBackgroundMusic(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C67")]
	[Address(RVA = "0x11DD5B8", Offset = "0x11DD5B8", VA = "0x11DD5B8")]
	public static extern bool CSharp_GetBackgroundMusicMute();

	[PreserveSig]
	[Token(Token = "0x6000C68")]
	[Address(RVA = "0x11DD718", Offset = "0x11DD718", VA = "0x11DD718")]
	public static extern int CSharp_SendPluginCustomGameData(uint jarg1, ulong jarg2, int jarg3, uint jarg4, uint jarg5, IntPtr jarg6, uint jarg7);

	[PreserveSig]
	[Token(Token = "0x6000C69")]
	[Address(RVA = "0x11DD83C", Offset = "0x11DD83C", VA = "0x11DD83C")]
	public static extern int CSharp_UnregisterAllGameObj();

	[PreserveSig]
	[Token(Token = "0x6000C6A")]
	[Address(RVA = "0x11DD974", Offset = "0x11DD974", VA = "0x11DD974")]
	public static extern int CSharp_SetMultiplePositions__SWIG_0(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C6B")]
	[Address(RVA = "0x11DDAD0", Offset = "0x11DDAD0", VA = "0x11DDAD0")]
	public static extern int CSharp_SetMultiplePositions__SWIG_1(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C6C")]
	[Address(RVA = "0x11DDC2C", Offset = "0x11DDC2C", VA = "0x11DDC2C")]
	public static extern int CSharp_SetMultiplePositions__SWIG_2(ulong jarg1, IntPtr jarg2, ushort jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C6D")]
	[Address(RVA = "0x11DDD88", Offset = "0x11DDD88", VA = "0x11DDD88")]
	public static extern int CSharp_SetMultiplePositions__SWIG_3(ulong jarg1, IntPtr jarg2, ushort jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C6E")]
	[Address(RVA = "0x11DDEC4", Offset = "0x11DDEC4", VA = "0x11DDEC4")]
	public static extern int CSharp_SetScalingFactor(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C6F")]
	[Address(RVA = "0x11DDFB0", Offset = "0x11DDFB0", VA = "0x11DDFB0")]
	public static extern int CSharp_ClearBanks();

	[PreserveSig]
	[Token(Token = "0x6000C70")]
	[Address(RVA = "0x11DE098", Offset = "0x11DE098", VA = "0x11DE098")]
	public static extern int CSharp_SetBankLoadIOSettings(float jarg1, sbyte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C71")]
	[Address(RVA = "0x11DE1A4", Offset = "0x11DE1A4", VA = "0x11DE1A4")]
	public static extern int CSharp_LoadBank__SWIG_0(string jarg1, int jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C72")]
	[Address(RVA = "0x11DE2C8", Offset = "0x11DE2C8", VA = "0x11DE2C8")]
	public static extern int CSharp_LoadBank__SWIG_1(uint jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C73")]
	[Address(RVA = "0x11DE3D4", Offset = "0x11DE3D4", VA = "0x11DE3D4")]
	public static extern int CSharp_LoadBank__SWIG_2(IntPtr jarg1, uint jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C74")]
	[Address(RVA = "0x11DE4F8", Offset = "0x11DE4F8", VA = "0x11DE4F8")]
	public static extern int CSharp_LoadBank__SWIG_3(IntPtr jarg1, uint jarg2, int jarg3, out uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C75")]
	[Address(RVA = "0x11DE680", Offset = "0x11DE680", VA = "0x11DE680")]
	public static extern int CSharp_LoadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C76")]
	[Address(RVA = "0x11DE820", Offset = "0x11DE820", VA = "0x11DE820")]
	public static extern int CSharp_LoadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C77")]
	[Address(RVA = "0x11DE9A8", Offset = "0x11DE9A8", VA = "0x11DE9A8")]
	public static extern int CSharp_LoadBank__SWIG_6(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C78")]
	[Address(RVA = "0x11DEB48", Offset = "0x11DEB48", VA = "0x11DEB48")]
	public static extern int CSharp_LoadBank__SWIG_7(IntPtr jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000C79")]
	[Address(RVA = "0x11DEC84", Offset = "0x11DEC84", VA = "0x11DEC84")]
	public static extern int CSharp_UnloadBank__SWIG_0(string jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C7A")]
	[Address(RVA = "0x11DEDA8", Offset = "0x11DEDA8", VA = "0x11DEDA8")]
	public static extern int CSharp_UnloadBank__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C7B")]
	[Address(RVA = "0x11DEECC", Offset = "0x11DEECC", VA = "0x11DEECC")]
	public static extern int CSharp_UnloadBank__SWIG_2(uint jarg1, IntPtr jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C7C")]
	[Address(RVA = "0x11DEFD8", Offset = "0x11DEFD8", VA = "0x11DEFD8")]
	public static extern int CSharp_UnloadBank__SWIG_3(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C7D")]
	[Address(RVA = "0x11DF140", Offset = "0x11DF140", VA = "0x11DF140")]
	public static extern int CSharp_UnloadBank__SWIG_4(string jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C7E")]
	[Address(RVA = "0x11DF2D8", Offset = "0x11DF2D8", VA = "0x11DF2D8")]
	public static extern int CSharp_UnloadBank__SWIG_5(uint jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C7F")]
	[Address(RVA = "0x11F7DA0", Offset = "0x11F7DA0", VA = "0x11F7DA0")]
	public static extern void CSharp_CancelBankCallbackCookie(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C80")]
	[Address(RVA = "0x11DF464", Offset = "0x11DF464", VA = "0x11DF464")]
	public static extern int CSharp_PrepareBank__SWIG_0(int jarg1, string jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C81")]
	[Address(RVA = "0x11DF58C", Offset = "0x11DF58C", VA = "0x11DF58C")]
	public static extern int CSharp_PrepareBank__SWIG_1(int jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C82")]
	[Address(RVA = "0x11DF6B4", Offset = "0x11DF6B4", VA = "0x11DF6B4")]
	public static extern int CSharp_PrepareBank__SWIG_2(int jarg1, uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C83")]
	[Address(RVA = "0x11DF7C0", Offset = "0x11DF7C0", VA = "0x11DF7C0")]
	public static extern int CSharp_PrepareBank__SWIG_3(int jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C84")]
	[Address(RVA = "0x11DF930", Offset = "0x11DF930", VA = "0x11DF930")]
	public static extern int CSharp_PrepareBank__SWIG_4(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C85")]
	[Address(RVA = "0x11DFAD4", Offset = "0x11DFAD4", VA = "0x11DFAD4")]
	public static extern int CSharp_PrepareBank__SWIG_5(int jarg1, string jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C86")]
	[Address(RVA = "0x11DFC78", Offset = "0x11DFC78", VA = "0x11DFC78")]
	public static extern int CSharp_PrepareBank__SWIG_6(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C87")]
	[Address(RVA = "0x11DFE00", Offset = "0x11DFE00", VA = "0x11DFE00")]
	public static extern int CSharp_PrepareBank__SWIG_7(int jarg1, uint jarg2, IntPtr jarg3, IntPtr jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C88")]
	[Address(RVA = "0x11DFF04", Offset = "0x11DFF04", VA = "0x11DFF04")]
	public static extern int CSharp_ClearPreparedEvents();

	[PreserveSig]
	[Token(Token = "0x6000C89")]
	[Address(RVA = "0x11E0220", Offset = "0x11E0220", VA = "0x11E0220")]
	public static extern int CSharp_PrepareEvent__SWIG_0(int jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C8A")]
	[Address(RVA = "0x11E0334", Offset = "0x11E0334", VA = "0x11E0334")]
	public static extern int CSharp_PrepareEvent__SWIG_1(int jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C8B")]
	[Address(RVA = "0x11E06E0", Offset = "0x11E06E0", VA = "0x11E06E0")]
	public static extern int CSharp_PrepareEvent__SWIG_2(int jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C8C")]
	[Address(RVA = "0x11E0870", Offset = "0x11E0870", VA = "0x11E0870")]
	public static extern int CSharp_PrepareEvent__SWIG_3(int jarg1, [In] uint[] jarg2, uint jarg3, IntPtr jarg4, IntPtr jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C8D")]
	[Address(RVA = "0x11E09A8", Offset = "0x11E09A8", VA = "0x11E09A8")]
	public static extern int CSharp_SetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C8E")]
	[Address(RVA = "0x11E0AB8", Offset = "0x11E0AB8", VA = "0x11E0AB8")]
	public static extern int CSharp_UnsetMedia(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C8F")]
	[Address(RVA = "0x11E0E00", Offset = "0x11E0E00", VA = "0x11E0E00")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_0(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C90")]
	[Address(RVA = "0x11E0F60", Offset = "0x11E0F60", VA = "0x11E0F60")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_1(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C91")]
	[Address(RVA = "0x11E1334", Offset = "0x11E1334", VA = "0x11E1334")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_2(int jarg1, int jarg2, string jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000C92")]
	[Address(RVA = "0x11E1510", Offset = "0x11E1510", VA = "0x11E1510")]
	public static extern int CSharp_PrepareGameSyncs__SWIG_3(int jarg1, int jarg2, uint jarg3, [In] uint[] jarg4, uint jarg5, IntPtr jarg6, IntPtr jarg7);

	[PreserveSig]
	[Token(Token = "0x6000C93")]
	[Address(RVA = "0x11E16A4", Offset = "0x11E16A4", VA = "0x11E16A4")]
	public static extern int CSharp_AddListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C94")]
	[Address(RVA = "0x11E17F8", Offset = "0x11E17F8", VA = "0x11E17F8")]
	public static extern int CSharp_RemoveListener(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C95")]
	[Address(RVA = "0x11E1924", Offset = "0x11E1924", VA = "0x11E1924")]
	public static extern int CSharp_AddDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C96")]
	[Address(RVA = "0x11E1A40", Offset = "0x11E1A40", VA = "0x11E1A40")]
	public static extern int CSharp_RemoveDefaultListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C97")]
	[Address(RVA = "0x11E1B5C", Offset = "0x11E1B5C", VA = "0x11E1B5C")]
	public static extern int CSharp_ResetListenersToDefault(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000C98")]
	[Address(RVA = "0x11E1CB4", Offset = "0x11E1CB4", VA = "0x11E1CB4")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_0(ulong jarg1, bool jarg2, IntPtr jarg3, [In] float[] jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C99")]
	[Address(RVA = "0x11E1E2C", Offset = "0x11E1E2C", VA = "0x11E1E2C")]
	public static extern int CSharp_SetListenerSpatialization__SWIG_1(ulong jarg1, bool jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C9A")]
	[Address(RVA = "0x11E1FA0", Offset = "0x11E1FA0", VA = "0x11E1FA0")]
	public static extern int CSharp_SetRTPCValue__SWIG_0(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000C9B")]
	[Address(RVA = "0x11E2134", Offset = "0x11E2134", VA = "0x11E2134")]
	public static extern int CSharp_SetRTPCValue__SWIG_1(uint jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000C9C")]
	[Address(RVA = "0x11E22B0", Offset = "0x11E22B0", VA = "0x11E22B0")]
	public static extern int CSharp_SetRTPCValue__SWIG_2(uint jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000C9D")]
	[Address(RVA = "0x11E2414", Offset = "0x11E2414", VA = "0x11E2414")]
	public static extern int CSharp_SetRTPCValue__SWIG_3(uint jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000C9E")]
	[Address(RVA = "0x11E2528", Offset = "0x11E2528", VA = "0x11E2528")]
	public static extern int CSharp_SetRTPCValue__SWIG_4(uint jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000C9F")]
	[Address(RVA = "0x11E2694", Offset = "0x11E2694", VA = "0x11E2694")]
	public static extern int CSharp_SetRTPCValue__SWIG_5(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000CA0")]
	[Address(RVA = "0x11E2840", Offset = "0x11E2840", VA = "0x11E2840")]
	public static extern int CSharp_SetRTPCValue__SWIG_6(string jarg1, float jarg2, ulong jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000CA1")]
	[Address(RVA = "0x11E29D4", Offset = "0x11E29D4", VA = "0x11E29D4")]
	public static extern int CSharp_SetRTPCValue__SWIG_7(string jarg1, float jarg2, ulong jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CA2")]
	[Address(RVA = "0x11E2B50", Offset = "0x11E2B50", VA = "0x11E2B50")]
	public static extern int CSharp_SetRTPCValue__SWIG_8(string jarg1, float jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CA3")]
	[Address(RVA = "0x11E2C7C", Offset = "0x11E2C7C", VA = "0x11E2C7C")]
	public static extern int CSharp_SetRTPCValue__SWIG_9(string jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CA4")]
	[Address(RVA = "0x11E2DC8", Offset = "0x11E2DC8", VA = "0x11E2DC8")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_0(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000CA5")]
	[Address(RVA = "0x11E2F24", Offset = "0x11E2F24", VA = "0x11E2F24")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_1(uint jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000CA6")]
	[Address(RVA = "0x11E3068", Offset = "0x11E3068", VA = "0x11E3068")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_2(uint jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CA7")]
	[Address(RVA = "0x11E3194", Offset = "0x11E3194", VA = "0x11E3194")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_3(uint jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CA8")]
	[Address(RVA = "0x11E32D8", Offset = "0x11E32D8", VA = "0x11E32D8")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_4(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000CA9")]
	[Address(RVA = "0x11E344C", Offset = "0x11E344C", VA = "0x11E344C")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_5(string jarg1, float jarg2, uint jarg3, int jarg4, int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000CAA")]
	[Address(RVA = "0x11E35A8", Offset = "0x11E35A8", VA = "0x11E35A8")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_6(string jarg1, float jarg2, uint jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CAB")]
	[Address(RVA = "0x11E36EC", Offset = "0x11E36EC", VA = "0x11E36EC")]
	public static extern int CSharp_SetRTPCValueByPlayingID__SWIG_7(string jarg1, float jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CAC")]
	[Address(RVA = "0x11E3870", Offset = "0x11E3870", VA = "0x11E3870")]
	public static extern int CSharp_ResetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6000CAD")]
	[Address(RVA = "0x11E39E4", Offset = "0x11E39E4", VA = "0x11E39E4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_1(uint jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CAE")]
	[Address(RVA = "0x11E3B40", Offset = "0x11E3B40", VA = "0x11E3B40")]
	public static extern int CSharp_ResetRTPCValue__SWIG_2(uint jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CAF")]
	[Address(RVA = "0x11E3C84", Offset = "0x11E3C84", VA = "0x11E3C84")]
	public static extern int CSharp_ResetRTPCValue__SWIG_3(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB0")]
	[Address(RVA = "0x11E3D78", Offset = "0x11E3D78", VA = "0x11E3D78")]
	public static extern int CSharp_ResetRTPCValue__SWIG_4(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CB1")]
	[Address(RVA = "0x11E3EC4", Offset = "0x11E3EC4", VA = "0x11E3EC4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_5(string jarg1, ulong jarg2, int jarg3, int jarg4, bool jarg5);

	[PreserveSig]
	[Token(Token = "0x6000CB2")]
	[Address(RVA = "0x11E4050", Offset = "0x11E4050", VA = "0x11E4050")]
	public static extern int CSharp_ResetRTPCValue__SWIG_6(string jarg1, ulong jarg2, int jarg3, int jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CB3")]
	[Address(RVA = "0x11E41C4", Offset = "0x11E41C4", VA = "0x11E41C4")]
	public static extern int CSharp_ResetRTPCValue__SWIG_7(string jarg1, ulong jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CB4")]
	[Address(RVA = "0x11E4320", Offset = "0x11E4320", VA = "0x11E4320")]
	public static extern int CSharp_ResetRTPCValue__SWIG_8(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB5")]
	[Address(RVA = "0x11E442C", Offset = "0x11E442C", VA = "0x11E442C")]
	public static extern int CSharp_ResetRTPCValue__SWIG_9(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CB6")]
	[Address(RVA = "0x11E4578", Offset = "0x11E4578", VA = "0x11E4578")]
	public static extern int CSharp_SetSwitch__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CB7")]
	[Address(RVA = "0x11E46C4", Offset = "0x11E46C4", VA = "0x11E46C4")]
	public static extern int CSharp_SetSwitch__SWIG_1(string jarg1, string jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CB8")]
	[Address(RVA = "0x11E4834", Offset = "0x11E4834", VA = "0x11E4834")]
	public static extern int CSharp_PostTrigger__SWIG_0(uint jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CB9")]
	[Address(RVA = "0x11E4970", Offset = "0x11E4970", VA = "0x11E4970")]
	public static extern int CSharp_PostTrigger__SWIG_1(string jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CBA")]
	[Address(RVA = "0x11E4A8C", Offset = "0x11E4A8C", VA = "0x11E4A8C")]
	public static extern int CSharp_SetState__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CBB")]
	[Address(RVA = "0x11E4B90", Offset = "0x11E4B90", VA = "0x11E4B90")]
	public static extern int CSharp_SetState__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CBC")]
	[Address(RVA = "0x11E4D10", Offset = "0x11E4D10", VA = "0x11E4D10")]
	public static extern int CSharp_SetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CBD")]
	[Address(RVA = "0x11E4E7C", Offset = "0x11E4E7C", VA = "0x11E4E7C")]
	public static extern int CSharp_SetGameObjectOutputBusVolume(ulong jarg1, ulong jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CBE")]
	[Address(RVA = "0x11E4F98", Offset = "0x11E4F98", VA = "0x11E4F98")]
	public static extern int CSharp_SetActorMixerEffect(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CBF")]
	[Address(RVA = "0x11E50AC", Offset = "0x11E50AC", VA = "0x11E50AC")]
	public static extern int CSharp_SetBusEffect__SWIG_0(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CC0")]
	[Address(RVA = "0x11E51C0", Offset = "0x11E51C0", VA = "0x11E51C0")]
	public static extern int CSharp_SetBusEffect__SWIG_1(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CC1")]
	[Address(RVA = "0x11E52E4", Offset = "0x11E52E4", VA = "0x11E52E4")]
	public static extern int CSharp_SetMixer__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CC2")]
	[Address(RVA = "0x11E53E8", Offset = "0x11E53E8", VA = "0x11E53E8")]
	public static extern int CSharp_SetMixer__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CC3")]
	[Address(RVA = "0x11E5518", Offset = "0x11E5518", VA = "0x11E5518")]
	public static extern int CSharp_SetBusConfig__SWIG_0(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CC4")]
	[Address(RVA = "0x11E5630", Offset = "0x11E5630", VA = "0x11E5630")]
	public static extern int CSharp_SetBusConfig__SWIG_1(string jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CC5")]
	[Address(RVA = "0x11E57B4", Offset = "0x11E57B4", VA = "0x11E57B4")]
	public static extern int CSharp_SetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, float jarg3, float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CC6")]
	[Address(RVA = "0x11E5944", Offset = "0x11E5944", VA = "0x11E5944")]
	public static extern int CSharp_SetMultipleObstructionAndOcclusion(ulong jarg1, ulong jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000CC7")]
	[Address(RVA = "0x11E5A50", Offset = "0x11E5A50", VA = "0x11E5A50")]
	public static extern int CSharp_StartOutputCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CC8")]
	[Address(RVA = "0x11E5B44", Offset = "0x11E5B44", VA = "0x11E5B44")]
	public static extern int CSharp_StopOutputCapture();

	[PreserveSig]
	[Token(Token = "0x6000CC9")]
	[Address(RVA = "0x11E5C1C", Offset = "0x11E5C1C", VA = "0x11E5C1C")]
	public static extern int CSharp_AddOutputCaptureMarker(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CCA")]
	[Address(RVA = "0x11E5D18", Offset = "0x11E5D18", VA = "0x11E5D18")]
	public static extern int CSharp_StartProfilerCapture(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CCB")]
	[Address(RVA = "0x11E5E0C", Offset = "0x11E5E0C", VA = "0x11E5E0C")]
	public static extern int CSharp_StopProfilerCapture();

	[PreserveSig]
	[Token(Token = "0x6000CCC")]
	[Address(RVA = "0x11E5EE4", Offset = "0x11E5EE4", VA = "0x11E5EE4")]
	public static extern int CSharp_RemoveOutput(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CCD")]
	[Address(RVA = "0x11E5FF4", Offset = "0x11E5FF4", VA = "0x11E5FF4")]
	public static extern int CSharp_ReplaceOutput__SWIG_0(IntPtr jarg1, ulong jarg2, out ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000CCE")]
	[Address(RVA = "0x11E6114", Offset = "0x11E6114", VA = "0x11E6114")]
	public static extern int CSharp_ReplaceOutput__SWIG_1(IntPtr jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CCF")]
	[Address(RVA = "0x11E6218", Offset = "0x11E6218", VA = "0x11E6218")]
	public static extern ulong CSharp_GetOutputID__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD0")]
	[Address(RVA = "0x11E631C", Offset = "0x11E631C", VA = "0x11E631C")]
	public static extern ulong CSharp_GetOutputID__SWIG_1(string jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD1")]
	[Address(RVA = "0x11E6438", Offset = "0x11E6438", VA = "0x11E6438")]
	public static extern int CSharp_SetBusDevice__SWIG_0(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD2")]
	[Address(RVA = "0x11E653C", Offset = "0x11E653C", VA = "0x11E653C")]
	public static extern int CSharp_SetBusDevice__SWIG_1(string jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD3")]
	[Address(RVA = "0x11E6670", Offset = "0x11E6670", VA = "0x11E6670")]
	public static extern int CSharp_SetOutputVolume(ulong jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CD4")]
	[Address(RVA = "0x11E6764", Offset = "0x11E6764", VA = "0x11E6764")]
	public static extern int CSharp_GetDeviceSpatialAudioSupport(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD5")]
	[Address(RVA = "0x11E6848", Offset = "0x11E6848", VA = "0x11E6848")]
	public static extern int CSharp_Suspend__SWIG_0(bool jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CD6")]
	[Address(RVA = "0x11E6924", Offset = "0x11E6924", VA = "0x11E6924")]
	public static extern int CSharp_Suspend__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000CD7")]
	[Address(RVA = "0x11E69F4", Offset = "0x11E69F4", VA = "0x11E69F4")]
	public static extern int CSharp_WakeupFromSuspend();

	[PreserveSig]
	[Token(Token = "0x6000CD8")]
	[Address(RVA = "0x11E6AC4", Offset = "0x11E6AC4", VA = "0x11E6AC4")]
	public static extern uint CSharp_GetBufferTick();

	[PreserveSig]
	[Token(Token = "0x6000CD9")]
	[Address(RVA = "0x11D4154", Offset = "0x11D4154", VA = "0x11D4154")]
	public static extern void CSharp_AkSegmentInfo_iCurrentPosition_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CDA")]
	[Address(RVA = "0x11D424C", Offset = "0x11D424C", VA = "0x11D424C")]
	public static extern int CSharp_AkSegmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CDB")]
	[Address(RVA = "0x11D4344", Offset = "0x11D4344", VA = "0x11D4344")]
	public static extern void CSharp_AkSegmentInfo_iPreEntryDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CDC")]
	[Address(RVA = "0x11D443C", Offset = "0x11D443C", VA = "0x11D443C")]
	public static extern int CSharp_AkSegmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CDD")]
	[Address(RVA = "0x11D4534", Offset = "0x11D4534", VA = "0x11D4534")]
	public static extern void CSharp_AkSegmentInfo_iActiveDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CDE")]
	[Address(RVA = "0x11D462C", Offset = "0x11D462C", VA = "0x11D462C")]
	public static extern int CSharp_AkSegmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CDF")]
	[Address(RVA = "0x11D4724", Offset = "0x11D4724", VA = "0x11D4724")]
	public static extern void CSharp_AkSegmentInfo_iPostExitDuration_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE0")]
	[Address(RVA = "0x11D481C", Offset = "0x11D481C", VA = "0x11D481C")]
	public static extern int CSharp_AkSegmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE1")]
	[Address(RVA = "0x11D4914", Offset = "0x11D4914", VA = "0x11D4914")]
	public static extern void CSharp_AkSegmentInfo_iRemainingLookAheadTime_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE2")]
	[Address(RVA = "0x11D4A0C", Offset = "0x11D4A0C", VA = "0x11D4A0C")]
	public static extern int CSharp_AkSegmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE3")]
	[Address(RVA = "0x11D4B04", Offset = "0x11D4B04", VA = "0x11D4B04")]
	public static extern void CSharp_AkSegmentInfo_fBeatDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE4")]
	[Address(RVA = "0x11D4BFC", Offset = "0x11D4BFC", VA = "0x11D4BFC")]
	public static extern float CSharp_AkSegmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE5")]
	[Address(RVA = "0x11D4CF4", Offset = "0x11D4CF4", VA = "0x11D4CF4")]
	public static extern void CSharp_AkSegmentInfo_fBarDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE6")]
	[Address(RVA = "0x11D4DEC", Offset = "0x11D4DEC", VA = "0x11D4DEC")]
	public static extern float CSharp_AkSegmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE7")]
	[Address(RVA = "0x11D4EE4", Offset = "0x11D4EE4", VA = "0x11D4EE4")]
	public static extern void CSharp_AkSegmentInfo_fGridDuration_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CE8")]
	[Address(RVA = "0x11D4FDC", Offset = "0x11D4FDC", VA = "0x11D4FDC")]
	public static extern float CSharp_AkSegmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CE9")]
	[Address(RVA = "0x11D50D4", Offset = "0x11D50D4", VA = "0x11D50D4")]
	public static extern void CSharp_AkSegmentInfo_fGridOffset_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CEA")]
	[Address(RVA = "0x11D51CC", Offset = "0x11D51CC", VA = "0x11D51CC")]
	public static extern float CSharp_AkSegmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CEB")]
	[Address(RVA = "0x11D52CC", Offset = "0x11D52CC", VA = "0x11D52CC")]
	public static extern IntPtr CSharp_new_AkSegmentInfo();

	[PreserveSig]
	[Token(Token = "0x6000CEC")]
	[Address(RVA = "0x11D405C", Offset = "0x11D405C", VA = "0x11D405C")]
	public static extern void CSharp_delete_AkSegmentInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CED")]
	[Address(RVA = "0x11E6B94", Offset = "0x11E6B94", VA = "0x11E6B94")]
	public static extern byte CSharp_AK_INVALID_MIDI_CHANNEL_get();

	[PreserveSig]
	[Token(Token = "0x6000CEE")]
	[Address(RVA = "0x11E6C64", Offset = "0x11E6C64", VA = "0x11E6C64")]
	public static extern byte CSharp_AK_INVALID_MIDI_NOTE_get();

	[PreserveSig]
	[Token(Token = "0x6000CEF")]
	[Address(RVA = "0x11F7E20", Offset = "0x11F7E20", VA = "0x11F7E20")]
	public static extern void CSharp_AkMIDIEvent_byChan_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF0")]
	[Address(RVA = "0x11F7EB0", Offset = "0x11F7EB0", VA = "0x11F7EB0")]
	public static extern byte CSharp_AkMIDIEvent_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF1")]
	[Address(RVA = "0x11F7F30", Offset = "0x11F7F30", VA = "0x11F7F30")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam1_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF2")]
	[Address(RVA = "0x11F7FC0", Offset = "0x11F7FC0", VA = "0x11F7FC0")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF3")]
	[Address(RVA = "0x11F8040", Offset = "0x11F8040", VA = "0x11F8040")]
	public static extern void CSharp_AkMIDIEvent_tGen_byParam2_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF4")]
	[Address(RVA = "0x11F80D0", Offset = "0x11F80D0", VA = "0x11F80D0")]
	public static extern byte CSharp_AkMIDIEvent_tGen_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF5")]
	[Address(RVA = "0x11F8150", Offset = "0x11F8150", VA = "0x11F8150")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tGen();

	[PreserveSig]
	[Token(Token = "0x6000CF6")]
	[Address(RVA = "0x11F81C4", Offset = "0x11F81C4", VA = "0x11F81C4")]
	public static extern void CSharp_delete_AkMIDIEvent_tGen(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF7")]
	[Address(RVA = "0x11F8244", Offset = "0x11F8244", VA = "0x11F8244")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CF8")]
	[Address(RVA = "0x11F82D4", Offset = "0x11F82D4", VA = "0x11F82D4")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CF9")]
	[Address(RVA = "0x11F8354", Offset = "0x11F8354", VA = "0x11F8354")]
	public static extern void CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CFA")]
	[Address(RVA = "0x11F83E4", Offset = "0x11F83E4", VA = "0x11F83E4")]
	public static extern byte CSharp_AkMIDIEvent_tNoteOnOff_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CFB")]
	[Address(RVA = "0x11F8464", Offset = "0x11F8464", VA = "0x11F8464")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteOnOff();

	[PreserveSig]
	[Token(Token = "0x6000CFC")]
	[Address(RVA = "0x11F84D8", Offset = "0x11F84D8", VA = "0x11F84D8")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteOnOff(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CFD")]
	[Address(RVA = "0x11F8558", Offset = "0x11F8558", VA = "0x11F8558")]
	public static extern void CSharp_AkMIDIEvent_tCc_byCc_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000CFE")]
	[Address(RVA = "0x11F85E8", Offset = "0x11F85E8", VA = "0x11F85E8")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000CFF")]
	[Address(RVA = "0x11F8668", Offset = "0x11F8668", VA = "0x11F8668")]
	public static extern void CSharp_AkMIDIEvent_tCc_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D00")]
	[Address(RVA = "0x11F86F8", Offset = "0x11F86F8", VA = "0x11F86F8")]
	public static extern byte CSharp_AkMIDIEvent_tCc_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D01")]
	[Address(RVA = "0x11F8778", Offset = "0x11F8778", VA = "0x11F8778")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tCc();

	[PreserveSig]
	[Token(Token = "0x6000D02")]
	[Address(RVA = "0x11F87EC", Offset = "0x11F87EC", VA = "0x11F87EC")]
	public static extern void CSharp_delete_AkMIDIEvent_tCc(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D03")]
	[Address(RVA = "0x11F886C", Offset = "0x11F886C", VA = "0x11F886C")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D04")]
	[Address(RVA = "0x11F88FC", Offset = "0x11F88FC", VA = "0x11F88FC")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D05")]
	[Address(RVA = "0x11F897C", Offset = "0x11F897C", VA = "0x11F897C")]
	public static extern void CSharp_AkMIDIEvent_tPitchBend_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D06")]
	[Address(RVA = "0x11F8A0C", Offset = "0x11F8A0C", VA = "0x11F8A0C")]
	public static extern byte CSharp_AkMIDIEvent_tPitchBend_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D07")]
	[Address(RVA = "0x11F8A8C", Offset = "0x11F8A8C", VA = "0x11F8A8C")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tPitchBend();

	[PreserveSig]
	[Token(Token = "0x6000D08")]
	[Address(RVA = "0x11F8B00", Offset = "0x11F8B00", VA = "0x11F8B00")]
	public static extern void CSharp_delete_AkMIDIEvent_tPitchBend(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D09")]
	[Address(RVA = "0x11F8B80", Offset = "0x11F8B80", VA = "0x11F8B80")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D0A")]
	[Address(RVA = "0x11F8C10", Offset = "0x11F8C10", VA = "0x11F8C10")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D0B")]
	[Address(RVA = "0x11F8C90", Offset = "0x11F8C90", VA = "0x11F8C90")]
	public static extern void CSharp_AkMIDIEvent_tNoteAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D0C")]
	[Address(RVA = "0x11F8D20", Offset = "0x11F8D20", VA = "0x11F8D20")]
	public static extern byte CSharp_AkMIDIEvent_tNoteAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D0D")]
	[Address(RVA = "0x11F8DA0", Offset = "0x11F8DA0", VA = "0x11F8DA0")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tNoteAftertouch();

	[PreserveSig]
	[Token(Token = "0x6000D0E")]
	[Address(RVA = "0x11F8E14", Offset = "0x11F8E14", VA = "0x11F8E14")]
	public static extern void CSharp_delete_AkMIDIEvent_tNoteAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D0F")]
	[Address(RVA = "0x11F8E94", Offset = "0x11F8E94", VA = "0x11F8E94")]
	public static extern void CSharp_AkMIDIEvent_tChanAftertouch_byValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D10")]
	[Address(RVA = "0x11F8F24", Offset = "0x11F8F24", VA = "0x11F8F24")]
	public static extern byte CSharp_AkMIDIEvent_tChanAftertouch_byValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D11")]
	[Address(RVA = "0x11F8FA4", Offset = "0x11F8FA4", VA = "0x11F8FA4")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tChanAftertouch();

	[PreserveSig]
	[Token(Token = "0x6000D12")]
	[Address(RVA = "0x11F9018", Offset = "0x11F9018", VA = "0x11F9018")]
	public static extern void CSharp_delete_AkMIDIEvent_tChanAftertouch(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D13")]
	[Address(RVA = "0x11F9098", Offset = "0x11F9098", VA = "0x11F9098")]
	public static extern void CSharp_AkMIDIEvent_tProgramChange_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D14")]
	[Address(RVA = "0x11F9128", Offset = "0x11F9128", VA = "0x11F9128")]
	public static extern byte CSharp_AkMIDIEvent_tProgramChange_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D15")]
	[Address(RVA = "0x11F91A8", Offset = "0x11F91A8", VA = "0x11F91A8")]
	public static extern IntPtr CSharp_new_AkMIDIEvent_tProgramChange();

	[PreserveSig]
	[Token(Token = "0x6000D16")]
	[Address(RVA = "0x11F921C", Offset = "0x11F921C", VA = "0x11F921C")]
	public static extern void CSharp_delete_AkMIDIEvent_tProgramChange(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D17")]
	[Address(RVA = "0x11F929C", Offset = "0x11F929C", VA = "0x11F929C")]
	public static extern void CSharp_AkMIDIEvent_Gen_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D18")]
	[Address(RVA = "0x11F932C", Offset = "0x11F932C", VA = "0x11F932C")]
	public static extern IntPtr CSharp_AkMIDIEvent_Gen_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D19")]
	[Address(RVA = "0x11F93AC", Offset = "0x11F93AC", VA = "0x11F93AC")]
	public static extern void CSharp_AkMIDIEvent_Cc_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D1A")]
	[Address(RVA = "0x11F943C", Offset = "0x11F943C", VA = "0x11F943C")]
	public static extern IntPtr CSharp_AkMIDIEvent_Cc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D1B")]
	[Address(RVA = "0x11F94BC", Offset = "0x11F94BC", VA = "0x11F94BC")]
	public static extern void CSharp_AkMIDIEvent_NoteOnOff_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D1C")]
	[Address(RVA = "0x11F954C", Offset = "0x11F954C", VA = "0x11F954C")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteOnOff_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D1D")]
	[Address(RVA = "0x11F95CC", Offset = "0x11F95CC", VA = "0x11F95CC")]
	public static extern void CSharp_AkMIDIEvent_PitchBend_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D1E")]
	[Address(RVA = "0x11F965C", Offset = "0x11F965C", VA = "0x11F965C")]
	public static extern IntPtr CSharp_AkMIDIEvent_PitchBend_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D1F")]
	[Address(RVA = "0x11F96DC", Offset = "0x11F96DC", VA = "0x11F96DC")]
	public static extern void CSharp_AkMIDIEvent_NoteAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D20")]
	[Address(RVA = "0x11F976C", Offset = "0x11F976C", VA = "0x11F976C")]
	public static extern IntPtr CSharp_AkMIDIEvent_NoteAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D21")]
	[Address(RVA = "0x11F97EC", Offset = "0x11F97EC", VA = "0x11F97EC")]
	public static extern void CSharp_AkMIDIEvent_ChanAftertouch_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D22")]
	[Address(RVA = "0x11F987C", Offset = "0x11F987C", VA = "0x11F987C")]
	public static extern IntPtr CSharp_AkMIDIEvent_ChanAftertouch_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D23")]
	[Address(RVA = "0x11F98FC", Offset = "0x11F98FC", VA = "0x11F98FC")]
	public static extern void CSharp_AkMIDIEvent_ProgramChange_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D24")]
	[Address(RVA = "0x11F998C", Offset = "0x11F998C", VA = "0x11F998C")]
	public static extern IntPtr CSharp_AkMIDIEvent_ProgramChange_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D25")]
	[Address(RVA = "0x11F9A0C", Offset = "0x11F9A0C", VA = "0x11F9A0C")]
	public static extern void CSharp_AkMIDIEvent_byType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D26")]
	[Address(RVA = "0x11F9A9C", Offset = "0x11F9A9C", VA = "0x11F9A9C")]
	public static extern int CSharp_AkMIDIEvent_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D27")]
	[Address(RVA = "0x11F9B1C", Offset = "0x11F9B1C", VA = "0x11F9B1C")]
	public static extern void CSharp_AkMIDIEvent_byOnOffNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D28")]
	[Address(RVA = "0x11F9BAC", Offset = "0x11F9BAC", VA = "0x11F9BAC")]
	public static extern byte CSharp_AkMIDIEvent_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D29")]
	[Address(RVA = "0x11F9C2C", Offset = "0x11F9C2C", VA = "0x11F9C2C")]
	public static extern void CSharp_AkMIDIEvent_byVelocity_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D2A")]
	[Address(RVA = "0x11F9CBC", Offset = "0x11F9CBC", VA = "0x11F9CBC")]
	public static extern byte CSharp_AkMIDIEvent_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D2B")]
	[Address(RVA = "0x11F9D3C", Offset = "0x11F9D3C", VA = "0x11F9D3C")]
	public static extern void CSharp_AkMIDIEvent_byCc_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D2C")]
	[Address(RVA = "0x11F9DCC", Offset = "0x11F9DCC", VA = "0x11F9DCC")]
	public static extern int CSharp_AkMIDIEvent_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D2D")]
	[Address(RVA = "0x11F9E4C", Offset = "0x11F9E4C", VA = "0x11F9E4C")]
	public static extern void CSharp_AkMIDIEvent_byCcValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D2E")]
	[Address(RVA = "0x11F9EDC", Offset = "0x11F9EDC", VA = "0x11F9EDC")]
	public static extern byte CSharp_AkMIDIEvent_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D2F")]
	[Address(RVA = "0x11F9F5C", Offset = "0x11F9F5C", VA = "0x11F9F5C")]
	public static extern void CSharp_AkMIDIEvent_byValueLsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D30")]
	[Address(RVA = "0x11F9FEC", Offset = "0x11F9FEC", VA = "0x11F9FEC")]
	public static extern byte CSharp_AkMIDIEvent_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D31")]
	[Address(RVA = "0x11FA06C", Offset = "0x11FA06C", VA = "0x11FA06C")]
	public static extern void CSharp_AkMIDIEvent_byValueMsb_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D32")]
	[Address(RVA = "0x11FA0FC", Offset = "0x11FA0FC", VA = "0x11FA0FC")]
	public static extern byte CSharp_AkMIDIEvent_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D33")]
	[Address(RVA = "0x11FA17C", Offset = "0x11FA17C", VA = "0x11FA17C")]
	public static extern void CSharp_AkMIDIEvent_byAftertouchNote_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D34")]
	[Address(RVA = "0x11FA20C", Offset = "0x11FA20C", VA = "0x11FA20C")]
	public static extern byte CSharp_AkMIDIEvent_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D35")]
	[Address(RVA = "0x11FA28C", Offset = "0x11FA28C", VA = "0x11FA28C")]
	public static extern void CSharp_AkMIDIEvent_byNoteAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D36")]
	[Address(RVA = "0x11FA31C", Offset = "0x11FA31C", VA = "0x11FA31C")]
	public static extern byte CSharp_AkMIDIEvent_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D37")]
	[Address(RVA = "0x11FA39C", Offset = "0x11FA39C", VA = "0x11FA39C")]
	public static extern void CSharp_AkMIDIEvent_byChanAftertouchValue_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D38")]
	[Address(RVA = "0x11FA42C", Offset = "0x11FA42C", VA = "0x11FA42C")]
	public static extern byte CSharp_AkMIDIEvent_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D39")]
	[Address(RVA = "0x11FA4AC", Offset = "0x11FA4AC", VA = "0x11FA4AC")]
	public static extern void CSharp_AkMIDIEvent_byProgramNum_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D3A")]
	[Address(RVA = "0x11FA53C", Offset = "0x11FA53C", VA = "0x11FA53C")]
	public static extern byte CSharp_AkMIDIEvent_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D3B")]
	[Address(RVA = "0x11FA5BC", Offset = "0x11FA5BC", VA = "0x11FA5BC")]
	public static extern IntPtr CSharp_new_AkMIDIEvent();

	[PreserveSig]
	[Token(Token = "0x6000D3C")]
	[Address(RVA = "0x11FA630", Offset = "0x11FA630", VA = "0x11FA630")]
	public static extern void CSharp_delete_AkMIDIEvent(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D3D")]
	[Address(RVA = "0x11FA6B0", Offset = "0x11FA6B0", VA = "0x11FA6B0")]
	public static extern void CSharp_AkMIDIPost_uOffset_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D3E")]
	[Address(RVA = "0x11FA740", Offset = "0x11FA740", VA = "0x11FA740")]
	public static extern uint CSharp_AkMIDIPost_uOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D3F")]
	[Address(RVA = "0x11FA7C0", Offset = "0x11FA7C0", VA = "0x11FA7C0")]
	public static extern int CSharp_AkMIDIPost_PostOnEvent(IntPtr jarg1, uint jarg2, ulong jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000D40")]
	[Address(RVA = "0x11FA868", Offset = "0x11FA868", VA = "0x11FA868")]
	public static extern void CSharp_AkMIDIPost_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D41")]
	[Address(RVA = "0x11FA8F8", Offset = "0x11FA8F8", VA = "0x11FA8F8")]
	public static extern int CSharp_AkMIDIPost_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000D42")]
	[Address(RVA = "0x11FA96C", Offset = "0x11FA96C", VA = "0x11FA96C")]
	public static extern IntPtr CSharp_new_AkMIDIPost();

	[PreserveSig]
	[Token(Token = "0x6000D43")]
	[Address(RVA = "0x11FA9E0", Offset = "0x11FA9E0", VA = "0x11FA9E0")]
	public static extern void CSharp_delete_AkMIDIPost(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D44")]
	[Address(RVA = "0x11FAA60", Offset = "0x11FAA60", VA = "0x11FAA60")]
	public static extern IntPtr CSharp_new_AkMemSettings();

	[PreserveSig]
	[Token(Token = "0x6000D45")]
	[Address(RVA = "0x11FAAD4", Offset = "0x11FAAD4", VA = "0x11FAAD4")]
	public static extern void CSharp_AkMemSettings_uMaxNumPools_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D46")]
	[Address(RVA = "0x11FAB64", Offset = "0x11FAB64", VA = "0x11FAB64")]
	public static extern uint CSharp_AkMemSettings_uMaxNumPools_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D47")]
	[Address(RVA = "0x11FABE4", Offset = "0x11FABE4", VA = "0x11FABE4")]
	public static extern void CSharp_AkMemSettings_uDebugFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D48")]
	[Address(RVA = "0x11FAC74", Offset = "0x11FAC74", VA = "0x11FAC74")]
	public static extern uint CSharp_AkMemSettings_uDebugFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D49")]
	[Address(RVA = "0x11FACF4", Offset = "0x11FACF4", VA = "0x11FACF4")]
	public static extern void CSharp_delete_AkMemSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D4A")]
	[Address(RVA = "0x11FAD74", Offset = "0x11FAD74", VA = "0x11FAD74")]
	public static extern void CSharp_AkMusicSettings_fStreamingLookAheadRatio_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D4B")]
	[Address(RVA = "0x11FAE04", Offset = "0x11FAE04", VA = "0x11FAE04")]
	public static extern float CSharp_AkMusicSettings_fStreamingLookAheadRatio_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D4C")]
	[Address(RVA = "0x11FAE84", Offset = "0x11FAE84", VA = "0x11FAE84")]
	public static extern IntPtr CSharp_new_AkMusicSettings();

	[PreserveSig]
	[Token(Token = "0x6000D4D")]
	[Address(RVA = "0x11FAEF8", Offset = "0x11FAEF8", VA = "0x11FAEF8")]
	public static extern void CSharp_delete_AkMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D4E")]
	[Address(RVA = "0x11E6D80", Offset = "0x11E6D80", VA = "0x11E6D80")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_0(uint jarg1, IntPtr jarg2, bool jarg3);

	[PreserveSig]
	[Token(Token = "0x6000D4F")]
	[Address(RVA = "0x11E6EB8", Offset = "0x11E6EB8", VA = "0x11E6EB8")]
	public static extern int CSharp_GetPlayingSegmentInfo__SWIG_1(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000D50")]
	[Address(RVA = "0x11D5694", Offset = "0x11D5694", VA = "0x11D5694")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pPackage_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D51")]
	[Address(RVA = "0x11D57C0", Offset = "0x11D57C0", VA = "0x11D57C0")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_pNext_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D52")]
	[Address(RVA = "0x11D58A8", Offset = "0x11D58A8", VA = "0x11D58A8")]
	public static extern int CSharp_AkSerializedCallbackHeader_eType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D53")]
	[Address(RVA = "0x11D5990", Offset = "0x11D5990", VA = "0x11D5990")]
	public static extern IntPtr CSharp_AkSerializedCallbackHeader_GetData(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D54")]
	[Address(RVA = "0x11D5A90", Offset = "0x11D5A90", VA = "0x11D5A90")]
	public static extern IntPtr CSharp_new_AkSerializedCallbackHeader();

	[PreserveSig]
	[Token(Token = "0x6000D55")]
	[Address(RVA = "0x11D55AC", Offset = "0x11D55AC", VA = "0x11D55AC")]
	public static extern void CSharp_delete_AkSerializedCallbackHeader(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D56")]
	[Address(RVA = "0x11FAF78", Offset = "0x11FAF78", VA = "0x11FAF78")]
	public static extern IntPtr CSharp_AkCallbackInfo_pCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D57")]
	[Address(RVA = "0x11FAFF8", Offset = "0x11FAFF8", VA = "0x11FAFF8")]
	public static extern ulong CSharp_AkCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D58")]
	[Address(RVA = "0x11FB078", Offset = "0x11FB078", VA = "0x11FB078")]
	public static extern IntPtr CSharp_new_AkCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000D59")]
	[Address(RVA = "0x11FB0EC", Offset = "0x11FB0EC", VA = "0x11FB0EC")]
	public static extern void CSharp_delete_AkCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D5A")]
	[Address(RVA = "0x11FB16C", Offset = "0x11FB16C", VA = "0x11FB16C")]
	public static extern uint CSharp_AkEventCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D5B")]
	[Address(RVA = "0x11FB1EC", Offset = "0x11FB1EC", VA = "0x11FB1EC")]
	public static extern uint CSharp_AkEventCallbackInfo_eventID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D5C")]
	[Address(RVA = "0x11FB26C", Offset = "0x11FB26C", VA = "0x11FB26C")]
	public static extern IntPtr CSharp_new_AkEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000D5D")]
	[Address(RVA = "0x11FB2E0", Offset = "0x11FB2E0", VA = "0x11FB2E0")]
	public static extern void CSharp_delete_AkEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D5E")]
	[Address(RVA = "0x11FB360", Offset = "0x11FB360", VA = "0x11FB360")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChan_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D5F")]
	[Address(RVA = "0x11FB3E0", Offset = "0x11FB3E0", VA = "0x11FB3E0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D60")]
	[Address(RVA = "0x11FB460", Offset = "0x11FB460", VA = "0x11FB460")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byParam2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D61")]
	[Address(RVA = "0x11FB4E0", Offset = "0x11FB4E0", VA = "0x11FB4E0")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D62")]
	[Address(RVA = "0x11FB560", Offset = "0x11FB560", VA = "0x11FB560")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byOnOffNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D63")]
	[Address(RVA = "0x11FB5E0", Offset = "0x11FB5E0", VA = "0x11FB5E0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byVelocity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D64")]
	[Address(RVA = "0x11FB660", Offset = "0x11FB660", VA = "0x11FB660")]
	public static extern int CSharp_AkMIDIEventCallbackInfo_byCc_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D65")]
	[Address(RVA = "0x11FB6E0", Offset = "0x11FB6E0", VA = "0x11FB6E0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byCcValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D66")]
	[Address(RVA = "0x11FB760", Offset = "0x11FB760", VA = "0x11FB760")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueLsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D67")]
	[Address(RVA = "0x11FB7E0", Offset = "0x11FB7E0", VA = "0x11FB7E0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byValueMsb_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D68")]
	[Address(RVA = "0x11FB860", Offset = "0x11FB860", VA = "0x11FB860")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byAftertouchNote_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D69")]
	[Address(RVA = "0x11FB8E0", Offset = "0x11FB8E0", VA = "0x11FB8E0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byNoteAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D6A")]
	[Address(RVA = "0x11FB960", Offset = "0x11FB960", VA = "0x11FB960")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byChanAftertouchValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D6B")]
	[Address(RVA = "0x11FB9E0", Offset = "0x11FB9E0", VA = "0x11FB9E0")]
	public static extern byte CSharp_AkMIDIEventCallbackInfo_byProgramNum_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D6C")]
	[Address(RVA = "0x11FBA60", Offset = "0x11FBA60", VA = "0x11FBA60")]
	public static extern IntPtr CSharp_new_AkMIDIEventCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000D6D")]
	[Address(RVA = "0x11FBAD4", Offset = "0x11FBAD4", VA = "0x11FBAD4")]
	public static extern void CSharp_delete_AkMIDIEventCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D6E")]
	[Address(RVA = "0x11FBB54", Offset = "0x11FBB54", VA = "0x11FBB54")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uIdentifier_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D6F")]
	[Address(RVA = "0x11FBBD4", Offset = "0x11FBBD4", VA = "0x11FBBD4")]
	public static extern uint CSharp_AkMarkerCallbackInfo_uPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D70")]
	[Address(RVA = "0x11FBC54", Offset = "0x11FBC54", VA = "0x11FBC54")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_strLabel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D71")]
	[Address(RVA = "0x11FBCD4", Offset = "0x11FBCD4", VA = "0x11FBCD4")]
	public static extern IntPtr CSharp_new_AkMarkerCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000D72")]
	[Address(RVA = "0x11FBD48", Offset = "0x11FBD48", VA = "0x11FBD48")]
	public static extern void CSharp_delete_AkMarkerCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D73")]
	[Address(RVA = "0x11FBDC8", Offset = "0x11FBDC8", VA = "0x11FBDC8")]
	public static extern float CSharp_AkDurationCallbackInfo_fDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D74")]
	[Address(RVA = "0x11FBE48", Offset = "0x11FBE48", VA = "0x11FBE48")]
	public static extern float CSharp_AkDurationCallbackInfo_fEstimatedDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D75")]
	[Address(RVA = "0x11FBEC8", Offset = "0x11FBEC8", VA = "0x11FBEC8")]
	public static extern uint CSharp_AkDurationCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D76")]
	[Address(RVA = "0x11FBF48", Offset = "0x11FBF48", VA = "0x11FBF48")]
	public static extern uint CSharp_AkDurationCallbackInfo_mediaID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D77")]
	[Address(RVA = "0x11FBFC8", Offset = "0x11FBFC8", VA = "0x11FBFC8")]
	public static extern bool CSharp_AkDurationCallbackInfo_bStreaming_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D78")]
	[Address(RVA = "0x11FC050", Offset = "0x11FC050", VA = "0x11FC050")]
	public static extern IntPtr CSharp_new_AkDurationCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000D79")]
	[Address(RVA = "0x11FC0C4", Offset = "0x11FC0C4", VA = "0x11FC0C4")]
	public static extern void CSharp_delete_AkDurationCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D7A")]
	[Address(RVA = "0x11FC144", Offset = "0x11FC144", VA = "0x11FC144")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D7B")]
	[Address(RVA = "0x11FC1C4", Offset = "0x11FC1C4", VA = "0x11FC1C4")]
	public static extern uint CSharp_AkDynamicSequenceItemCallbackInfo_audioNodeID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D7C")]
	[Address(RVA = "0x11FC244", Offset = "0x11FC244", VA = "0x11FC244")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_pCustomInfo_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D7D")]
	[Address(RVA = "0x11FC2C4", Offset = "0x11FC2C4", VA = "0x11FC2C4")]
	public static extern IntPtr CSharp_new_AkDynamicSequenceItemCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000D7E")]
	[Address(RVA = "0x11FC338", Offset = "0x11FC338", VA = "0x11FC338")]
	public static extern void CSharp_delete_AkDynamicSequenceItemCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D7F")]
	[Address(RVA = "0x11FC3B8", Offset = "0x11FC3B8", VA = "0x11FC3B8")]
	public static extern uint CSharp_AkMusicSyncCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D80")]
	[Address(RVA = "0x11FC438", Offset = "0x11FC438", VA = "0x11FC438")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iCurrentPosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D81")]
	[Address(RVA = "0x11FC4B8", Offset = "0x11FC4B8", VA = "0x11FC4B8")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPreEntryDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D82")]
	[Address(RVA = "0x11FC538", Offset = "0x11FC538", VA = "0x11FC538")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iActiveDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D83")]
	[Address(RVA = "0x11FC5B8", Offset = "0x11FC5B8", VA = "0x11FC5B8")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iPostExitDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D84")]
	[Address(RVA = "0x11FC638", Offset = "0x11FC638", VA = "0x11FC638")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_segmentInfo_iRemainingLookAheadTime_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D85")]
	[Address(RVA = "0x11FC6B8", Offset = "0x11FC6B8", VA = "0x11FC6B8")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBeatDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D86")]
	[Address(RVA = "0x11FC738", Offset = "0x11FC738", VA = "0x11FC738")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fBarDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D87")]
	[Address(RVA = "0x11FC7B8", Offset = "0x11FC7B8", VA = "0x11FC7B8")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridDuration_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D88")]
	[Address(RVA = "0x11FC838", Offset = "0x11FC838", VA = "0x11FC838")]
	public static extern float CSharp_AkMusicSyncCallbackInfo_segmentInfo_fGridOffset_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D89")]
	[Address(RVA = "0x11FC8B8", Offset = "0x11FC8B8", VA = "0x11FC8B8")]
	public static extern int CSharp_AkMusicSyncCallbackInfo_musicSyncType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D8A")]
	[Address(RVA = "0x11FC938", Offset = "0x11FC938", VA = "0x11FC938")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_userCueName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D8B")]
	[Address(RVA = "0x11FC9B8", Offset = "0x11FC9B8", VA = "0x11FC9B8")]
	public static extern IntPtr CSharp_new_AkMusicSyncCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000D8C")]
	[Address(RVA = "0x11FCA2C", Offset = "0x11FCA2C", VA = "0x11FCA2C")]
	public static extern void CSharp_delete_AkMusicSyncCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D8D")]
	[Address(RVA = "0x11FCAAC", Offset = "0x11FCAAC", VA = "0x11FCAAC")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_playlistID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D8E")]
	[Address(RVA = "0x11FCB2C", Offset = "0x11FCB2C", VA = "0x11FCB2C")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uNumPlaylistItems_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D8F")]
	[Address(RVA = "0x11FCBAC", Offset = "0x11FCBAC", VA = "0x11FCBAC")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistSelection_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D90")]
	[Address(RVA = "0x11FCC2C", Offset = "0x11FCC2C", VA = "0x11FCC2C")]
	public static extern uint CSharp_AkMusicPlaylistCallbackInfo_uPlaylistItemDone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D91")]
	[Address(RVA = "0x11FCCAC", Offset = "0x11FCCAC", VA = "0x11FCCAC")]
	public static extern IntPtr CSharp_new_AkMusicPlaylistCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000D92")]
	[Address(RVA = "0x11FCD20", Offset = "0x11FCD20", VA = "0x11FCD20")]
	public static extern void CSharp_delete_AkMusicPlaylistCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D93")]
	[Address(RVA = "0x11FCDA0", Offset = "0x11FCDA0", VA = "0x11FCDA0")]
	public static extern uint CSharp_AkBankCallbackInfo_bankID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D94")]
	[Address(RVA = "0x11FCE20", Offset = "0x11FCE20", VA = "0x11FCE20")]
	public static extern IntPtr CSharp_AkBankCallbackInfo_inMemoryBankPtr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D95")]
	[Address(RVA = "0x11FCEA0", Offset = "0x11FCEA0", VA = "0x11FCEA0")]
	public static extern int CSharp_AkBankCallbackInfo_loadResult_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D96")]
	[Address(RVA = "0x11FCF20", Offset = "0x11FCF20", VA = "0x11FCF20")]
	public static extern int CSharp_AkBankCallbackInfo_memPoolId_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D97")]
	[Address(RVA = "0x11FCFA0", Offset = "0x11FCFA0", VA = "0x11FCFA0")]
	public static extern IntPtr CSharp_new_AkBankCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000D98")]
	[Address(RVA = "0x11FD014", Offset = "0x11FD014", VA = "0x11FD014")]
	public static extern void CSharp_delete_AkBankCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D99")]
	[Address(RVA = "0x11FD094", Offset = "0x11FD094", VA = "0x11FD094")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorCode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D9A")]
	[Address(RVA = "0x11FD114", Offset = "0x11FD114", VA = "0x11FD114")]
	public static extern int CSharp_AkMonitoringCallbackInfo_errorLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D9B")]
	[Address(RVA = "0x11FD194", Offset = "0x11FD194", VA = "0x11FD194")]
	public static extern uint CSharp_AkMonitoringCallbackInfo_playingID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D9C")]
	[Address(RVA = "0x11FD214", Offset = "0x11FD214", VA = "0x11FD214")]
	public static extern ulong CSharp_AkMonitoringCallbackInfo_gameObjID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D9D")]
	[Address(RVA = "0x11FD294", Offset = "0x11FD294", VA = "0x11FD294")]
	public static extern IntPtr CSharp_AkMonitoringCallbackInfo_message_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000D9E")]
	[Address(RVA = "0x11FD314", Offset = "0x11FD314", VA = "0x11FD314")]
	public static extern IntPtr CSharp_new_AkMonitoringCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000D9F")]
	[Address(RVA = "0x11FD388", Offset = "0x11FD388", VA = "0x11FD388")]
	public static extern void CSharp_delete_AkMonitoringCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DA0")]
	[Address(RVA = "0x11FD408", Offset = "0x11FD408", VA = "0x11FD408")]
	public static extern bool CSharp_AkAudioInterruptionCallbackInfo_bEnterInterruption_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DA1")]
	[Address(RVA = "0x11FD490", Offset = "0x11FD490", VA = "0x11FD490")]
	public static extern IntPtr CSharp_new_AkAudioInterruptionCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000DA2")]
	[Address(RVA = "0x11FD504", Offset = "0x11FD504", VA = "0x11FD504")]
	public static extern void CSharp_delete_AkAudioInterruptionCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DA3")]
	[Address(RVA = "0x11FD584", Offset = "0x11FD584", VA = "0x11FD584")]
	public static extern bool CSharp_AkAudioSourceChangeCallbackInfo_bOtherAudioPlaying_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DA4")]
	[Address(RVA = "0x11FD60C", Offset = "0x11FD60C", VA = "0x11FD60C")]
	public static extern IntPtr CSharp_new_AkAudioSourceChangeCallbackInfo();

	[PreserveSig]
	[Token(Token = "0x6000DA5")]
	[Address(RVA = "0x11FD680", Offset = "0x11FD680", VA = "0x11FD680")]
	public static extern void CSharp_delete_AkAudioSourceChangeCallbackInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DA6")]
	[Address(RVA = "0x11FD700", Offset = "0x11FD700", VA = "0x11FD700")]
	public static extern int CSharp_AkCallbackSerializer_Init(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DA7")]
	[Address(RVA = "0x11FD790", Offset = "0x11FD790", VA = "0x11FD790")]
	public static extern void CSharp_AkCallbackSerializer_Term();

	[PreserveSig]
	[Token(Token = "0x6000DA8")]
	[Address(RVA = "0x11FD800", Offset = "0x11FD800", VA = "0x11FD800")]
	public static extern IntPtr CSharp_AkCallbackSerializer_Lock();

	[PreserveSig]
	[Token(Token = "0x6000DA9")]
	[Address(RVA = "0x11FD874", Offset = "0x11FD874", VA = "0x11FD874")]
	public static extern void CSharp_AkCallbackSerializer_SetLocalOutput(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DAA")]
	[Address(RVA = "0x11FD8F4", Offset = "0x11FD8F4", VA = "0x11FD8F4")]
	public static extern void CSharp_AkCallbackSerializer_Unlock();

	[PreserveSig]
	[Token(Token = "0x6000DAB")]
	[Address(RVA = "0x11FD964", Offset = "0x11FD964", VA = "0x11FD964")]
	public static extern int CSharp_AkCallbackSerializer_AudioSourceChangeCallbackFunc(bool jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DAC")]
	[Address(RVA = "0x11FD9F4", Offset = "0x11FD9F4", VA = "0x11FD9F4")]
	public static extern IntPtr CSharp_new_AkCallbackSerializer();

	[PreserveSig]
	[Token(Token = "0x6000DAD")]
	[Address(RVA = "0x11FDA68", Offset = "0x11FDA68", VA = "0x11FDA68")]
	public static extern void CSharp_delete_AkCallbackSerializer(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DAE")]
	[Address(RVA = "0x11E7024", Offset = "0x11E7024", VA = "0x11E7024")]
	public static extern int CSharp_PostCode__SWIG_0(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000DAF")]
	[Address(RVA = "0x11E71B0", Offset = "0x11E71B0", VA = "0x11E71B0")]
	public static extern int CSharp_PostCode__SWIG_1(int jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000DB0")]
	[Address(RVA = "0x11E7324", Offset = "0x11E7324", VA = "0x11E7324")]
	public static extern int CSharp_PostCode__SWIG_2(int jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DB1")]
	[Address(RVA = "0x11E7448", Offset = "0x11E7448", VA = "0x11E7448")]
	public static extern int CSharp_PostCode__SWIG_3(int jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DB2")]
	[Address(RVA = "0x11E7554", Offset = "0x11E7554", VA = "0x11E7554")]
	public static extern int CSharp_PostCode__SWIG_4(int jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB3")]
	[Address(RVA = "0x11E76C0", Offset = "0x11E76C0", VA = "0x11E76C0")]
	public static extern int CSharp_PostString__SWIG_0(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000DB4")]
	[Address(RVA = "0x11E7864", Offset = "0x11E7864", VA = "0x11E7864")]
	public static extern int CSharp_PostString__SWIG_1(string jarg1, int jarg2, uint jarg3, ulong jarg4, uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000DB5")]
	[Address(RVA = "0x11E79F0", Offset = "0x11E79F0", VA = "0x11E79F0")]
	public static extern int CSharp_PostString__SWIG_2(string jarg1, int jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DB6")]
	[Address(RVA = "0x11E7B2C", Offset = "0x11E7B2C", VA = "0x11E7B2C")]
	public static extern int CSharp_PostString__SWIG_3(string jarg1, int jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DB7")]
	[Address(RVA = "0x11E7C50", Offset = "0x11E7C50", VA = "0x11E7C50")]
	public static extern int CSharp_PostString__SWIG_4(string jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DB8")]
	[Address(RVA = "0x11E7D54", Offset = "0x11E7D54", VA = "0x11E7D54")]
	public static extern int CSharp_GetTimeStamp();

	[PreserveSig]
	[Token(Token = "0x6000DB9")]
	[Address(RVA = "0x11E7E2C", Offset = "0x11E7E2C", VA = "0x11E7E2C")]
	public static extern uint CSharp_GetNumNonZeroBits(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DBA")]
	[Address(RVA = "0x11E7F24", Offset = "0x11E7F24", VA = "0x11E7F24")]
	public static extern void CSharp_AkGetDefaultHighPriorityThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DBB")]
	[Address(RVA = "0x11E8030", Offset = "0x11E8030", VA = "0x11E8030")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_0(uint jarg1, [In] uint[] jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DBC")]
	[Address(RVA = "0x11E815C", Offset = "0x11E815C", VA = "0x11E815C")]
	public static extern uint CSharp_ResolveDialogueEvent__SWIG_1(uint jarg1, [In] uint[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DBD")]
	[Address(RVA = "0x11E8278", Offset = "0x11E8278", VA = "0x11E8278")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DBE")]
	[Address(RVA = "0x11E838C", Offset = "0x11E838C", VA = "0x11E838C")]
	public static extern int CSharp_GetDialogueEventCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DBF")]
	[Address(RVA = "0x11FDAE8", Offset = "0x11FDAE8", VA = "0x11FDAE8")]
	public static extern void CSharp_AkPositioningInfo_fCenterPct_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC0")]
	[Address(RVA = "0x11FDB78", Offset = "0x11FDB78", VA = "0x11FDB78")]
	public static extern float CSharp_AkPositioningInfo_fCenterPct_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC1")]
	[Address(RVA = "0x11FDBF8", Offset = "0x11FDBF8", VA = "0x11FDBF8")]
	public static extern void CSharp_AkPositioningInfo_pannerType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC2")]
	[Address(RVA = "0x11FDC88", Offset = "0x11FDC88", VA = "0x11FDC88")]
	public static extern int CSharp_AkPositioningInfo_pannerType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC3")]
	[Address(RVA = "0x11FDD08", Offset = "0x11FDD08", VA = "0x11FDD08")]
	public static extern void CSharp_AkPositioningInfo_e3dPositioningType_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC4")]
	[Address(RVA = "0x11FDD98", Offset = "0x11FDD98", VA = "0x11FDD98")]
	public static extern int CSharp_AkPositioningInfo_e3dPositioningType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC5")]
	[Address(RVA = "0x11FDE18", Offset = "0x11FDE18", VA = "0x11FDE18")]
	public static extern void CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC6")]
	[Address(RVA = "0x11FDEA8", Offset = "0x11FDEA8", VA = "0x11FDEA8")]
	public static extern bool CSharp_AkPositioningInfo_bHoldEmitterPosAndOrient_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC7")]
	[Address(RVA = "0x11FDF30", Offset = "0x11FDF30", VA = "0x11FDF30")]
	public static extern void CSharp_AkPositioningInfo_e3DSpatializationMode_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DC8")]
	[Address(RVA = "0x11FDFC0", Offset = "0x11FDFC0", VA = "0x11FDFC0")]
	public static extern int CSharp_AkPositioningInfo_e3DSpatializationMode_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DC9")]
	[Address(RVA = "0x11FE040", Offset = "0x11FE040", VA = "0x11FE040")]
	public static extern void CSharp_AkPositioningInfo_bEnableAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DCA")]
	[Address(RVA = "0x11FE0D0", Offset = "0x11FE0D0", VA = "0x11FE0D0")]
	public static extern bool CSharp_AkPositioningInfo_bEnableAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DCB")]
	[Address(RVA = "0x11FE158", Offset = "0x11FE158", VA = "0x11FE158")]
	public static extern void CSharp_AkPositioningInfo_bUseConeAttenuation_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DCC")]
	[Address(RVA = "0x11FE1E8", Offset = "0x11FE1E8", VA = "0x11FE1E8")]
	public static extern bool CSharp_AkPositioningInfo_bUseConeAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DCD")]
	[Address(RVA = "0x11FE270", Offset = "0x11FE270", VA = "0x11FE270")]
	public static extern void CSharp_AkPositioningInfo_fInnerAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DCE")]
	[Address(RVA = "0x11FE300", Offset = "0x11FE300", VA = "0x11FE300")]
	public static extern float CSharp_AkPositioningInfo_fInnerAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DCF")]
	[Address(RVA = "0x11FE380", Offset = "0x11FE380", VA = "0x11FE380")]
	public static extern void CSharp_AkPositioningInfo_fOuterAngle_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD0")]
	[Address(RVA = "0x11FE410", Offset = "0x11FE410", VA = "0x11FE410")]
	public static extern float CSharp_AkPositioningInfo_fOuterAngle_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD1")]
	[Address(RVA = "0x11FE490", Offset = "0x11FE490", VA = "0x11FE490")]
	public static extern void CSharp_AkPositioningInfo_fConeMaxAttenuation_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD2")]
	[Address(RVA = "0x11FE520", Offset = "0x11FE520", VA = "0x11FE520")]
	public static extern float CSharp_AkPositioningInfo_fConeMaxAttenuation_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD3")]
	[Address(RVA = "0x11FE5A0", Offset = "0x11FE5A0", VA = "0x11FE5A0")]
	public static extern void CSharp_AkPositioningInfo_LPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD4")]
	[Address(RVA = "0x11FE630", Offset = "0x11FE630", VA = "0x11FE630")]
	public static extern float CSharp_AkPositioningInfo_LPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD5")]
	[Address(RVA = "0x11FE6B0", Offset = "0x11FE6B0", VA = "0x11FE6B0")]
	public static extern void CSharp_AkPositioningInfo_HPFCone_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD6")]
	[Address(RVA = "0x11FE740", Offset = "0x11FE740", VA = "0x11FE740")]
	public static extern float CSharp_AkPositioningInfo_HPFCone_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD7")]
	[Address(RVA = "0x11FE7C0", Offset = "0x11FE7C0", VA = "0x11FE7C0")]
	public static extern void CSharp_AkPositioningInfo_fMaxDistance_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DD8")]
	[Address(RVA = "0x11FE850", Offset = "0x11FE850", VA = "0x11FE850")]
	public static extern float CSharp_AkPositioningInfo_fMaxDistance_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DD9")]
	[Address(RVA = "0x11FE8D0", Offset = "0x11FE8D0", VA = "0x11FE8D0")]
	public static extern void CSharp_AkPositioningInfo_fVolDryAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DDA")]
	[Address(RVA = "0x11FE960", Offset = "0x11FE960", VA = "0x11FE960")]
	public static extern float CSharp_AkPositioningInfo_fVolDryAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DDB")]
	[Address(RVA = "0x11FE9E0", Offset = "0x11FE9E0", VA = "0x11FE9E0")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DDC")]
	[Address(RVA = "0x11FEA70", Offset = "0x11FEA70", VA = "0x11FEA70")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxGameDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DDD")]
	[Address(RVA = "0x11FEAF0", Offset = "0x11FEAF0", VA = "0x11FEAF0")]
	public static extern void CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DDE")]
	[Address(RVA = "0x11FEB80", Offset = "0x11FEB80", VA = "0x11FEB80")]
	public static extern float CSharp_AkPositioningInfo_fVolAuxUserDefAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DDF")]
	[Address(RVA = "0x11FEC00", Offset = "0x11FEC00", VA = "0x11FEC00")]
	public static extern void CSharp_AkPositioningInfo_LPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DE0")]
	[Address(RVA = "0x11FEC90", Offset = "0x11FEC90", VA = "0x11FEC90")]
	public static extern float CSharp_AkPositioningInfo_LPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE1")]
	[Address(RVA = "0x11FED10", Offset = "0x11FED10", VA = "0x11FED10")]
	public static extern void CSharp_AkPositioningInfo_HPFValueAtMaxDist_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DE2")]
	[Address(RVA = "0x11FEDA0", Offset = "0x11FEDA0", VA = "0x11FEDA0")]
	public static extern float CSharp_AkPositioningInfo_HPFValueAtMaxDist_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE3")]
	[Address(RVA = "0x11FEE20", Offset = "0x11FEE20", VA = "0x11FEE20")]
	public static extern IntPtr CSharp_new_AkPositioningInfo();

	[PreserveSig]
	[Token(Token = "0x6000DE4")]
	[Address(RVA = "0x11FEE94", Offset = "0x11FEE94", VA = "0x11FEE94")]
	public static extern void CSharp_delete_AkPositioningInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE5")]
	[Address(RVA = "0x11FEF14", Offset = "0x11FEF14", VA = "0x11FEF14")]
	public static extern void CSharp_AkObjectInfo_objID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DE6")]
	[Address(RVA = "0x11FEFA4", Offset = "0x11FEFA4", VA = "0x11FEFA4")]
	public static extern uint CSharp_AkObjectInfo_objID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE7")]
	[Address(RVA = "0x11FF024", Offset = "0x11FF024", VA = "0x11FF024")]
	public static extern void CSharp_AkObjectInfo_parentID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DE8")]
	[Address(RVA = "0x11FF0B4", Offset = "0x11FF0B4", VA = "0x11FF0B4")]
	public static extern uint CSharp_AkObjectInfo_parentID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DE9")]
	[Address(RVA = "0x11FF134", Offset = "0x11FF134", VA = "0x11FF134")]
	public static extern void CSharp_AkObjectInfo_iDepth_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DEA")]
	[Address(RVA = "0x11FF1C4", Offset = "0x11FF1C4", VA = "0x11FF1C4")]
	public static extern int CSharp_AkObjectInfo_iDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DEB")]
	[Address(RVA = "0x11FF244", Offset = "0x11FF244", VA = "0x11FF244")]
	public static extern void CSharp_AkObjectInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DEC")]
	[Address(RVA = "0x11FF2C4", Offset = "0x11FF2C4", VA = "0x11FF2C4")]
	public static extern int CSharp_AkObjectInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000DED")]
	[Address(RVA = "0x11FF338", Offset = "0x11FF338", VA = "0x11FF338")]
	public static extern void CSharp_AkObjectInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DEE")]
	[Address(RVA = "0x11FF3C8", Offset = "0x11FF3C8", VA = "0x11FF3C8")]
	public static extern IntPtr CSharp_new_AkObjectInfo();

	[PreserveSig]
	[Token(Token = "0x6000DEF")]
	[Address(RVA = "0x11FF43C", Offset = "0x11FF43C", VA = "0x11FF43C")]
	public static extern void CSharp_delete_AkObjectInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DF0")]
	[Address(RVA = "0x11E84D8", Offset = "0x11E84D8", VA = "0x11E84D8")]
	public static extern int CSharp_GetPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF1")]
	[Address(RVA = "0x11E8628", Offset = "0x11E8628", VA = "0x11E8628")]
	public static extern int CSharp_GetListenerPosition(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF2")]
	[Address(RVA = "0x11E8784", Offset = "0x11E8784", VA = "0x11E8784")]
	public static extern int CSharp_GetRTPCValue__SWIG_0(uint jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000DF3")]
	[Address(RVA = "0x11E8900", Offset = "0x11E8900", VA = "0x11E8900")]
	public static extern int CSharp_GetRTPCValue__SWIG_1(string jarg1, ulong jarg2, uint jarg3, out float jarg4, ref int jarg5);

	[PreserveSig]
	[Token(Token = "0x6000DF4")]
	[Address(RVA = "0x11E8A7C", Offset = "0x11E8A7C", VA = "0x11E8A7C")]
	public static extern int CSharp_GetSwitch__SWIG_0(uint jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DF5")]
	[Address(RVA = "0x11E8BC0", Offset = "0x11E8BC0", VA = "0x11E8BC0")]
	public static extern int CSharp_GetSwitch__SWIG_1(string jarg1, ulong jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DF6")]
	[Address(RVA = "0x11E8CE0", Offset = "0x11E8CE0", VA = "0x11E8CE0")]
	public static extern int CSharp_GetState__SWIG_0(uint jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF7")]
	[Address(RVA = "0x11E8DE4", Offset = "0x11E8DE4", VA = "0x11E8DE4")]
	public static extern int CSharp_GetState__SWIG_1(string jarg1, out uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DF8")]
	[Address(RVA = "0x11E8F4C", Offset = "0x11E8F4C", VA = "0x11E8F4C")]
	public static extern int CSharp_GetGameObjectAuxSendValues(ulong jarg1, IntPtr jarg2, ref uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DF9")]
	[Address(RVA = "0x11E90B0", Offset = "0x11E90B0", VA = "0x11E90B0")]
	public static extern int CSharp_GetGameObjectDryLevelValue(ulong jarg1, ulong jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DFA")]
	[Address(RVA = "0x11E9224", Offset = "0x11E9224", VA = "0x11E9224")]
	public static extern int CSharp_GetObjectObstructionAndOcclusion(ulong jarg1, ulong jarg2, out float jarg3, out float jarg4);

	[PreserveSig]
	[Token(Token = "0x6000DFB")]
	[Address(RVA = "0x11E9354", Offset = "0x11E9354", VA = "0x11E9354")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_0(uint jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DFC")]
	[Address(RVA = "0x11E9474", Offset = "0x11E9474", VA = "0x11E9474")]
	public static extern int CSharp_QueryAudioObjectIDs__SWIG_1(string jarg1, ref uint jarg2, IntPtr jarg3);

	[PreserveSig]
	[Token(Token = "0x6000DFD")]
	[Address(RVA = "0x11E95AC", Offset = "0x11E95AC", VA = "0x11E95AC")]
	public static extern int CSharp_GetPositioningInfo(uint jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000DFE")]
	[Address(RVA = "0x11E96D8", Offset = "0x11E96D8", VA = "0x11E96D8")]
	public static extern bool CSharp_GetIsGameObjectActive(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000DFF")]
	[Address(RVA = "0x11E97FC", Offset = "0x11E97FC", VA = "0x11E97FC")]
	public static extern float CSharp_GetMaxRadius(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E00")]
	[Address(RVA = "0x11E98E0", Offset = "0x11E98E0", VA = "0x11E98E0")]
	public static extern uint CSharp_GetEventIDFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E01")]
	[Address(RVA = "0x11E99C4", Offset = "0x11E99C4", VA = "0x11E99C4")]
	public static extern ulong CSharp_GetGameObjectFromPlayingID(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E02")]
	[Address(RVA = "0x11E9AF8", Offset = "0x11E9AF8", VA = "0x11E9AF8")]
	public static extern int CSharp_GetPlayingIDsFromGameObject(ulong jarg1, ref uint jarg2, [Out] uint[] jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E03")]
	[Address(RVA = "0x11E9C9C", Offset = "0x11E9C9C", VA = "0x11E9C9C")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_0(uint jarg1, uint jarg2, out int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E04")]
	[Address(RVA = "0x11E9DB0", Offset = "0x11E9DB0", VA = "0x11E9DB0")]
	public static extern int CSharp_GetCustomPropertyValue__SWIG_1(uint jarg1, uint jarg2, out float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E05")]
	[Address(RVA = "0x11E9EAC", Offset = "0x11E9EAC", VA = "0x11E9EAC")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E06")]
	[Address(RVA = "0x11E9F90", Offset = "0x11E9F90", VA = "0x11E9F90")]
	public static extern void CSharp_AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E07")]
	[Address(RVA = "0x11EA074", Offset = "0x11EA074", VA = "0x11EA074")]
	public static extern void CSharp_AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E08")]
	[Address(RVA = "0x11EA158", Offset = "0x11EA158", VA = "0x11EA158")]
	public static extern byte CSharp_ChannelMaskToNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E09")]
	[Address(RVA = "0x11EA23C", Offset = "0x11EA23C", VA = "0x11EA23C")]
	public static extern uint CSharp_ChannelMaskFromNumChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0A")]
	[Address(RVA = "0x11EA330", Offset = "0x11EA330", VA = "0x11EA330")]
	public static extern byte CSharp_ChannelBitToIndex(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E0B")]
	[Address(RVA = "0x11EA424", Offset = "0x11EA424", VA = "0x11EA424")]
	public static extern bool CSharp_HasSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0C")]
	[Address(RVA = "0x11EA510", Offset = "0x11EA510", VA = "0x11EA510")]
	public static extern bool CSharp_HasStrictlyOnePairOfSurroundChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0D")]
	[Address(RVA = "0x11EA5FC", Offset = "0x11EA5FC", VA = "0x11EA5FC")]
	public static extern bool CSharp_HasSideAndRearChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0E")]
	[Address(RVA = "0x11EA6E8", Offset = "0x11EA6E8", VA = "0x11EA6E8")]
	public static extern bool CSharp_HasHeightChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E0F")]
	[Address(RVA = "0x11EA7D4", Offset = "0x11EA7D4", VA = "0x11EA7D4")]
	public static extern uint CSharp_BackToSideChannels(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E10")]
	[Address(RVA = "0x11EA8D0", Offset = "0x11EA8D0", VA = "0x11EA8D0")]
	public static extern uint CSharp_StdChannelIndexToDisplayIndex(int jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E11")]
	[Address(RVA = "0x11FF4BC", Offset = "0x11FF4BC", VA = "0x11FF4BC")]
	public static extern void CSharp_AkChannelConfig_uNumChannels_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E12")]
	[Address(RVA = "0x11FF54C", Offset = "0x11FF54C", VA = "0x11FF54C")]
	public static extern uint CSharp_AkChannelConfig_uNumChannels_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E13")]
	[Address(RVA = "0x11FF5CC", Offset = "0x11FF5CC", VA = "0x11FF5CC")]
	public static extern void CSharp_AkChannelConfig_eConfigType_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E14")]
	[Address(RVA = "0x11FF65C", Offset = "0x11FF65C", VA = "0x11FF65C")]
	public static extern uint CSharp_AkChannelConfig_eConfigType_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E15")]
	[Address(RVA = "0x11FF6DC", Offset = "0x11FF6DC", VA = "0x11FF6DC")]
	public static extern void CSharp_AkChannelConfig_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E16")]
	[Address(RVA = "0x11FF76C", Offset = "0x11FF76C", VA = "0x11FF76C")]
	public static extern uint CSharp_AkChannelConfig_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E17")]
	[Address(RVA = "0x11FF7EC", Offset = "0x11FF7EC", VA = "0x11FF7EC")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000E18")]
	[Address(RVA = "0x11FF860", Offset = "0x11FF860", VA = "0x11FF860")]
	public static extern IntPtr CSharp_new_AkChannelConfig__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E19")]
	[Address(RVA = "0x11FF8F0", Offset = "0x11FF8F0", VA = "0x11FF8F0")]
	public static extern void CSharp_AkChannelConfig_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E1A")]
	[Address(RVA = "0x11FF970", Offset = "0x11FF970", VA = "0x11FF970")]
	public static extern void CSharp_AkChannelConfig_SetStandard(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E1B")]
	[Address(RVA = "0x11FFA00", Offset = "0x11FFA00", VA = "0x11FFA00")]
	public static extern void CSharp_AkChannelConfig_SetStandardOrAnonymous(IntPtr jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E1C")]
	[Address(RVA = "0x11FFA98", Offset = "0x11FFA98", VA = "0x11FFA98")]
	public static extern void CSharp_AkChannelConfig_SetAnonymous(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E1D")]
	[Address(RVA = "0x11FFB28", Offset = "0x11FFB28", VA = "0x11FFB28")]
	public static extern void CSharp_AkChannelConfig_SetAmbisonic(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E1E")]
	[Address(RVA = "0x11FFBB8", Offset = "0x11FFBB8", VA = "0x11FFBB8")]
	public static extern bool CSharp_AkChannelConfig_IsValid(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E1F")]
	[Address(RVA = "0x11FFC40", Offset = "0x11FFC40", VA = "0x11FFC40")]
	public static extern uint CSharp_AkChannelConfig_Serialize(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E20")]
	[Address(RVA = "0x11FFCC0", Offset = "0x11FFCC0", VA = "0x11FFCC0")]
	public static extern void CSharp_AkChannelConfig_Deserialize(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E21")]
	[Address(RVA = "0x11FFD50", Offset = "0x11FFD50", VA = "0x11FFD50")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveLFE(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E22")]
	[Address(RVA = "0x11FFDD0", Offset = "0x11FFDD0", VA = "0x11FFDD0")]
	public static extern IntPtr CSharp_AkChannelConfig_RemoveCenter(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E23")]
	[Address(RVA = "0x11FFE50", Offset = "0x11FFE50", VA = "0x11FFE50")]
	public static extern bool CSharp_AkChannelConfig_IsChannelConfigSupported(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E24")]
	[Address(RVA = "0x11FFED8", Offset = "0x11FFED8", VA = "0x11FFED8")]
	public static extern void CSharp_delete_AkChannelConfig(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E25")]
	[Address(RVA = "0x11FFF58", Offset = "0x11FFF58", VA = "0x11FFF58")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000E26")]
	[Address(RVA = "0x11FFFCC", Offset = "0x11FFFCC", VA = "0x11FFFCC")]
	public static extern IntPtr CSharp_new_AkImageSourceParams__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E27")]
	[Address(RVA = "0x1200064", Offset = "0x1200064", VA = "0x1200064")]
	public static extern void CSharp_AkImageSourceParams_sourcePosition_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E28")]
	[Address(RVA = "0x12000F4", Offset = "0x12000F4", VA = "0x12000F4")]
	public static extern IntPtr CSharp_AkImageSourceParams_sourcePosition_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E29")]
	[Address(RVA = "0x1200174", Offset = "0x1200174", VA = "0x1200174")]
	public static extern void CSharp_AkImageSourceParams_fDistanceScalingFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E2A")]
	[Address(RVA = "0x1200204", Offset = "0x1200204", VA = "0x1200204")]
	public static extern float CSharp_AkImageSourceParams_fDistanceScalingFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E2B")]
	[Address(RVA = "0x1200284", Offset = "0x1200284", VA = "0x1200284")]
	public static extern void CSharp_AkImageSourceParams_fLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E2C")]
	[Address(RVA = "0x1200314", Offset = "0x1200314", VA = "0x1200314")]
	public static extern float CSharp_AkImageSourceParams_fLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E2D")]
	[Address(RVA = "0x1200394", Offset = "0x1200394", VA = "0x1200394")]
	public static extern void CSharp_AkImageSourceParams_fDiffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E2E")]
	[Address(RVA = "0x1200424", Offset = "0x1200424", VA = "0x1200424")]
	public static extern float CSharp_AkImageSourceParams_fDiffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E2F")]
	[Address(RVA = "0x12004A4", Offset = "0x12004A4", VA = "0x12004A4")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionEmitterSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E30")]
	[Address(RVA = "0x1200534", Offset = "0x1200534", VA = "0x1200534")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionEmitterSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E31")]
	[Address(RVA = "0x12005B4", Offset = "0x12005B4", VA = "0x12005B4")]
	public static extern void CSharp_AkImageSourceParams_uDiffractionListenerSide_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E32")]
	[Address(RVA = "0x1200644", Offset = "0x1200644", VA = "0x1200644")]
	public static extern byte CSharp_AkImageSourceParams_uDiffractionListenerSide_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E33")]
	[Address(RVA = "0x12006C4", Offset = "0x12006C4", VA = "0x12006C4")]
	public static extern void CSharp_delete_AkImageSourceParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E34")]
	[Address(RVA = "0x11EA9C4", Offset = "0x11EA9C4", VA = "0x11EA9C4")]
	public static extern float CSharp_kDefaultMaxPathLength_get();

	[PreserveSig]
	[Token(Token = "0x6000E35")]
	[Address(RVA = "0x11EAA90", Offset = "0x11EAA90", VA = "0x11EAA90")]
	public static extern uint CSharp_kDefaultDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x6000E36")]
	[Address(RVA = "0x11EAB60", Offset = "0x11EAB60", VA = "0x11EAB60")]
	public static extern uint CSharp_kDefaultDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6000E37")]
	[Address(RVA = "0x11EAC30", Offset = "0x11EAC30", VA = "0x11EAC30")]
	public static extern float CSharp_kMaxDiffraction_get();

	[PreserveSig]
	[Token(Token = "0x6000E38")]
	[Address(RVA = "0x11EACFC", Offset = "0x11EACFC", VA = "0x11EACFC")]
	public static extern uint CSharp_kListenerDiffractionMaxEdges_get();

	[PreserveSig]
	[Token(Token = "0x6000E39")]
	[Address(RVA = "0x11EADCC", Offset = "0x11EADCC", VA = "0x11EADCC")]
	public static extern uint CSharp_kListenerDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6000E3A")]
	[Address(RVA = "0x11EAE9C", Offset = "0x11EAE9C", VA = "0x11EAE9C")]
	public static extern uint CSharp_kPortalToPortalDiffractionMaxPaths_get();

	[PreserveSig]
	[Token(Token = "0x6000E3B")]
	[Address(RVA = "0x11EAF74", Offset = "0x11EAF74", VA = "0x11EAF74")]
	public static extern void CSharp_g_SpatialAudioPoolId_set(int jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E3C")]
	[Address(RVA = "0x11EB050", Offset = "0x11EB050", VA = "0x11EB050")]
	public static extern int CSharp_g_SpatialAudioPoolId_get();

	[PreserveSig]
	[Token(Token = "0x6000E3D")]
	[Address(RVA = "0x1200744", Offset = "0x1200744", VA = "0x1200744")]
	public static extern int CSharp__ArrayPoolSpatialAudio_Get();

	[PreserveSig]
	[Token(Token = "0x6000E3E")]
	[Address(RVA = "0x12007B8", Offset = "0x12007B8", VA = "0x12007B8")]
	public static extern IntPtr CSharp_new__ArrayPoolSpatialAudio();

	[PreserveSig]
	[Token(Token = "0x6000E3F")]
	[Address(RVA = "0x120082C", Offset = "0x120082C", VA = "0x120082C")]
	public static extern void CSharp_delete__ArrayPoolSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E40")]
	[Address(RVA = "0x12008AC", Offset = "0x12008AC", VA = "0x12008AC")]
	public static extern IntPtr CSharp_new_AkSpatialAudioInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000E41")]
	[Address(RVA = "0x1200920", Offset = "0x1200920", VA = "0x1200920")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolID_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E42")]
	[Address(RVA = "0x12009B0", Offset = "0x12009B0", VA = "0x12009B0")]
	public static extern int CSharp_AkSpatialAudioInitSettings_uPoolID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E43")]
	[Address(RVA = "0x1200A30", Offset = "0x1200A30", VA = "0x1200A30")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E44")]
	[Address(RVA = "0x1200AC0", Offset = "0x1200AC0", VA = "0x1200AC0")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E45")]
	[Address(RVA = "0x1200B40", Offset = "0x1200B40", VA = "0x1200B40")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E46")]
	[Address(RVA = "0x1200BD0", Offset = "0x1200BD0", VA = "0x1200BD0")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uMaxSoundPropagationDepth_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E47")]
	[Address(RVA = "0x1200C50", Offset = "0x1200C50", VA = "0x1200C50")]
	public static extern void CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E48")]
	[Address(RVA = "0x1200CE0", Offset = "0x1200CE0", VA = "0x1200CE0")]
	public static extern uint CSharp_AkSpatialAudioInitSettings_uDiffractionFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E49")]
	[Address(RVA = "0x1200D60", Offset = "0x1200D60", VA = "0x1200D60")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E4A")]
	[Address(RVA = "0x1200DF0", Offset = "0x1200DF0", VA = "0x1200DF0")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowAttenFactor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4B")]
	[Address(RVA = "0x1200E70", Offset = "0x1200E70", VA = "0x1200E70")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E4C")]
	[Address(RVA = "0x1200F00", Offset = "0x1200F00", VA = "0x1200F00")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fDiffractionShadowDegrees_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4D")]
	[Address(RVA = "0x1200F80", Offset = "0x1200F80", VA = "0x1200F80")]
	public static extern void CSharp_AkSpatialAudioInitSettings_fMovementThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E4E")]
	[Address(RVA = "0x1201010", Offset = "0x1201010", VA = "0x1201010")]
	public static extern float CSharp_AkSpatialAudioInitSettings_fMovementThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E4F")]
	[Address(RVA = "0x1201090", Offset = "0x1201090", VA = "0x1201090")]
	public static extern void CSharp_delete_AkSpatialAudioInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E50")]
	[Address(RVA = "0x1201110", Offset = "0x1201110", VA = "0x1201110")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000E51")]
	[Address(RVA = "0x1201184", Offset = "0x1201184", VA = "0x1201184")]
	public static extern IntPtr CSharp_new_AkImageSourceSettings__SWIG_1(IntPtr jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E52")]
	[Address(RVA = "0x120121C", Offset = "0x120121C", VA = "0x120121C")]
	public static extern void CSharp_delete_AkImageSourceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E53")]
	[Address(RVA = "0x120129C", Offset = "0x120129C", VA = "0x120129C")]
	public static extern void CSharp_AkImageSourceSettings_SetOneTexture(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E54")]
	[Address(RVA = "0x120132C", Offset = "0x120132C", VA = "0x120132C")]
	public static extern void CSharp_AkImageSourceSettings_SetName(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E55")]
	[Address(RVA = "0x12013D0", Offset = "0x12013D0", VA = "0x12013D0")]
	public static extern void CSharp_AkImageSourceSettings_params__set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E56")]
	[Address(RVA = "0x1201460", Offset = "0x1201460", VA = "0x1201460")]
	public static extern IntPtr CSharp_AkImageSourceSettings_params__get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E57")]
	[Address(RVA = "0x12014E0", Offset = "0x12014E0", VA = "0x12014E0")]
	public static extern IntPtr CSharp_new_AkEmitterSettings();

	[PreserveSig]
	[Token(Token = "0x6000E58")]
	[Address(RVA = "0x1201554", Offset = "0x1201554", VA = "0x1201554")]
	public static extern void CSharp_AkEmitterSettings_reflectAuxBusID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E59")]
	[Address(RVA = "0x12015E4", Offset = "0x12015E4", VA = "0x12015E4")]
	public static extern uint CSharp_AkEmitterSettings_reflectAuxBusID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5A")]
	[Address(RVA = "0x1201664", Offset = "0x1201664", VA = "0x1201664")]
	public static extern void CSharp_AkEmitterSettings_reflectionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E5B")]
	[Address(RVA = "0x12016F4", Offset = "0x12016F4", VA = "0x12016F4")]
	public static extern float CSharp_AkEmitterSettings_reflectionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5C")]
	[Address(RVA = "0x1201774", Offset = "0x1201774", VA = "0x1201774")]
	public static extern void CSharp_AkEmitterSettings_reflectionsAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E5D")]
	[Address(RVA = "0x1201804", Offset = "0x1201804", VA = "0x1201804")]
	public static extern float CSharp_AkEmitterSettings_reflectionsAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E5E")]
	[Address(RVA = "0x1201884", Offset = "0x1201884", VA = "0x1201884")]
	public static extern void CSharp_AkEmitterSettings_reflectionsOrder_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E5F")]
	[Address(RVA = "0x1201914", Offset = "0x1201914", VA = "0x1201914")]
	public static extern uint CSharp_AkEmitterSettings_reflectionsOrder_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E60")]
	[Address(RVA = "0x1201994", Offset = "0x1201994", VA = "0x1201994")]
	public static extern void CSharp_AkEmitterSettings_reflectorFilterMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E61")]
	[Address(RVA = "0x1201A24", Offset = "0x1201A24", VA = "0x1201A24")]
	public static extern uint CSharp_AkEmitterSettings_reflectorFilterMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E62")]
	[Address(RVA = "0x1201AA4", Offset = "0x1201AA4", VA = "0x1201AA4")]
	public static extern void CSharp_AkEmitterSettings_roomReverbAuxBusGain_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E63")]
	[Address(RVA = "0x1201B34", Offset = "0x1201B34", VA = "0x1201B34")]
	public static extern float CSharp_AkEmitterSettings_roomReverbAuxBusGain_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E64")]
	[Address(RVA = "0x1201BB4", Offset = "0x1201BB4", VA = "0x1201BB4")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxEdges_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E65")]
	[Address(RVA = "0x1201C44", Offset = "0x1201C44", VA = "0x1201C44")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxEdges_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E66")]
	[Address(RVA = "0x1201CC4", Offset = "0x1201CC4", VA = "0x1201CC4")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E67")]
	[Address(RVA = "0x1201D54", Offset = "0x1201D54", VA = "0x1201D54")]
	public static extern uint CSharp_AkEmitterSettings_diffractionMaxPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E68")]
	[Address(RVA = "0x1201DD4", Offset = "0x1201DD4", VA = "0x1201DD4")]
	public static extern void CSharp_AkEmitterSettings_diffractionMaxPathLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E69")]
	[Address(RVA = "0x1201E64", Offset = "0x1201E64", VA = "0x1201E64")]
	public static extern float CSharp_AkEmitterSettings_diffractionMaxPathLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6A")]
	[Address(RVA = "0x1201EE4", Offset = "0x1201EE4", VA = "0x1201EE4")]
	public static extern void CSharp_AkEmitterSettings_useImageSources_set(IntPtr jarg1, byte jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E6B")]
	[Address(RVA = "0x1201F74", Offset = "0x1201F74", VA = "0x1201F74")]
	public static extern byte CSharp_AkEmitterSettings_useImageSources_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6C")]
	[Address(RVA = "0x1201FF4", Offset = "0x1201FF4", VA = "0x1201FF4")]
	public static extern void CSharp_delete_AkEmitterSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E6D")]
	[Address(RVA = "0x1202074", Offset = "0x1202074", VA = "0x1202074")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000E6E")]
	[Address(RVA = "0x12020E8", Offset = "0x12020E8", VA = "0x12020E8")]
	public static extern IntPtr CSharp_new_AkVertex__SWIG_1(float jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000E6F")]
	[Address(RVA = "0x1202188", Offset = "0x1202188", VA = "0x1202188")]
	public static extern void CSharp_AkVertex_X_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E70")]
	[Address(RVA = "0x1202218", Offset = "0x1202218", VA = "0x1202218")]
	public static extern float CSharp_AkVertex_X_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E71")]
	[Address(RVA = "0x1202298", Offset = "0x1202298", VA = "0x1202298")]
	public static extern void CSharp_AkVertex_Y_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E72")]
	[Address(RVA = "0x1202328", Offset = "0x1202328", VA = "0x1202328")]
	public static extern float CSharp_AkVertex_Y_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E73")]
	[Address(RVA = "0x12023A8", Offset = "0x12023A8", VA = "0x12023A8")]
	public static extern void CSharp_AkVertex_Z_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E74")]
	[Address(RVA = "0x1202438", Offset = "0x1202438", VA = "0x1202438")]
	public static extern float CSharp_AkVertex_Z_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E75")]
	[Address(RVA = "0x12024B8", Offset = "0x12024B8", VA = "0x12024B8")]
	public static extern void CSharp_AkVertex_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E76")]
	[Address(RVA = "0x1202538", Offset = "0x1202538", VA = "0x1202538")]
	public static extern int CSharp_AkVertex_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000E77")]
	[Address(RVA = "0x12025AC", Offset = "0x12025AC", VA = "0x12025AC")]
	public static extern void CSharp_AkVertex_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E78")]
	[Address(RVA = "0x120263C", Offset = "0x120263C", VA = "0x120263C")]
	public static extern void CSharp_delete_AkVertex(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E79")]
	[Address(RVA = "0x12026BC", Offset = "0x12026BC", VA = "0x12026BC")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000E7A")]
	[Address(RVA = "0x1202730", Offset = "0x1202730", VA = "0x1202730")]
	public static extern IntPtr CSharp_new_AkTriangle__SWIG_1(ushort jarg1, ushort jarg2, ushort jarg3, ushort jarg4);

	[PreserveSig]
	[Token(Token = "0x6000E7B")]
	[Address(RVA = "0x12027D8", Offset = "0x12027D8", VA = "0x12027D8")]
	public static extern void CSharp_AkTriangle_point0_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E7C")]
	[Address(RVA = "0x1202868", Offset = "0x1202868", VA = "0x1202868")]
	public static extern ushort CSharp_AkTriangle_point0_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7D")]
	[Address(RVA = "0x12028E8", Offset = "0x12028E8", VA = "0x12028E8")]
	public static extern void CSharp_AkTriangle_point1_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E7E")]
	[Address(RVA = "0x1202978", Offset = "0x1202978", VA = "0x1202978")]
	public static extern ushort CSharp_AkTriangle_point1_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E7F")]
	[Address(RVA = "0x12029F8", Offset = "0x12029F8", VA = "0x12029F8")]
	public static extern void CSharp_AkTriangle_point2_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E80")]
	[Address(RVA = "0x1202A88", Offset = "0x1202A88", VA = "0x1202A88")]
	public static extern ushort CSharp_AkTriangle_point2_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E81")]
	[Address(RVA = "0x1202B08", Offset = "0x1202B08", VA = "0x1202B08")]
	public static extern void CSharp_AkTriangle_surface_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E82")]
	[Address(RVA = "0x1202B98", Offset = "0x1202B98", VA = "0x1202B98")]
	public static extern ushort CSharp_AkTriangle_surface_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E83")]
	[Address(RVA = "0x1202C18", Offset = "0x1202C18", VA = "0x1202C18")]
	public static extern void CSharp_AkTriangle_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E84")]
	[Address(RVA = "0x1202C98", Offset = "0x1202C98", VA = "0x1202C98")]
	public static extern int CSharp_AkTriangle_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000E85")]
	[Address(RVA = "0x1202D0C", Offset = "0x1202D0C", VA = "0x1202D0C")]
	public static extern void CSharp_AkTriangle_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E86")]
	[Address(RVA = "0x1202D9C", Offset = "0x1202D9C", VA = "0x1202D9C")]
	public static extern void CSharp_delete_AkTriangle(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E87")]
	[Address(RVA = "0x1202E1C", Offset = "0x1202E1C", VA = "0x1202E1C")]
	public static extern IntPtr CSharp_new_AkAcousticSurface();

	[PreserveSig]
	[Token(Token = "0x6000E88")]
	[Address(RVA = "0x1202E90", Offset = "0x1202E90", VA = "0x1202E90")]
	public static extern void CSharp_AkAcousticSurface_textureID_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E89")]
	[Address(RVA = "0x1202F20", Offset = "0x1202F20", VA = "0x1202F20")]
	public static extern uint CSharp_AkAcousticSurface_textureID_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8A")]
	[Address(RVA = "0x1202FA0", Offset = "0x1202FA0", VA = "0x1202FA0")]
	public static extern void CSharp_AkAcousticSurface_reflectorChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E8B")]
	[Address(RVA = "0x1203030", Offset = "0x1203030", VA = "0x1203030")]
	public static extern uint CSharp_AkAcousticSurface_reflectorChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8C")]
	[Address(RVA = "0x12030B0", Offset = "0x12030B0", VA = "0x12030B0")]
	public static extern void CSharp_AkAcousticSurface_strName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E8D")]
	[Address(RVA = "0x1203154", Offset = "0x1203154", VA = "0x1203154")]
	public static extern IntPtr CSharp_AkAcousticSurface_strName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8E")]
	[Address(RVA = "0x12031D4", Offset = "0x12031D4", VA = "0x12031D4")]
	public static extern void CSharp_AkAcousticSurface_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E8F")]
	[Address(RVA = "0x1203254", Offset = "0x1203254", VA = "0x1203254")]
	public static extern void CSharp_AkAcousticSurface_DeleteName(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E90")]
	[Address(RVA = "0x12032D4", Offset = "0x12032D4", VA = "0x12032D4")]
	public static extern int CSharp_AkAcousticSurface_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000E91")]
	[Address(RVA = "0x1203348", Offset = "0x1203348", VA = "0x1203348")]
	public static extern void CSharp_AkAcousticSurface_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E92")]
	[Address(RVA = "0x12033D8", Offset = "0x12033D8", VA = "0x12033D8")]
	public static extern void CSharp_delete_AkAcousticSurface(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E93")]
	[Address(RVA = "0x1203458", Offset = "0x1203458", VA = "0x1203458")]
	public static extern void CSharp_AkReflectionPathInfo_imageSource_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E94")]
	[Address(RVA = "0x12034E8", Offset = "0x12034E8", VA = "0x12034E8")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_imageSource_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E95")]
	[Address(RVA = "0x1203568", Offset = "0x1203568", VA = "0x1203568")]
	public static extern void CSharp_AkReflectionPathInfo_numPathPoints_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E96")]
	[Address(RVA = "0x12035F8", Offset = "0x12035F8", VA = "0x12035F8")]
	public static extern uint CSharp_AkReflectionPathInfo_numPathPoints_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E97")]
	[Address(RVA = "0x1203678", Offset = "0x1203678", VA = "0x1203678")]
	public static extern void CSharp_AkReflectionPathInfo_numReflections_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E98")]
	[Address(RVA = "0x1203708", Offset = "0x1203708", VA = "0x1203708")]
	public static extern uint CSharp_AkReflectionPathInfo_numReflections_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E99")]
	[Address(RVA = "0x1203788", Offset = "0x1203788", VA = "0x1203788")]
	public static extern void CSharp_AkReflectionPathInfo_level_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E9A")]
	[Address(RVA = "0x1203818", Offset = "0x1203818", VA = "0x1203818")]
	public static extern float CSharp_AkReflectionPathInfo_level_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E9B")]
	[Address(RVA = "0x1203898", Offset = "0x1203898", VA = "0x1203898")]
	public static extern void CSharp_AkReflectionPathInfo_isOccluded_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E9C")]
	[Address(RVA = "0x1203928", Offset = "0x1203928", VA = "0x1203928")]
	public static extern bool CSharp_AkReflectionPathInfo_isOccluded_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000E9D")]
	[Address(RVA = "0x12039B0", Offset = "0x12039B0", VA = "0x12039B0")]
	public static extern int CSharp_AkReflectionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000E9E")]
	[Address(RVA = "0x1203A24", Offset = "0x1203A24", VA = "0x1203A24")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetPathPoint(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000E9F")]
	[Address(RVA = "0x1203AB4", Offset = "0x1203AB4", VA = "0x1203AB4")]
	public static extern IntPtr CSharp_AkReflectionPathInfo_GetAcousticSurface(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EA0")]
	[Address(RVA = "0x1203B44", Offset = "0x1203B44", VA = "0x1203B44")]
	public static extern float CSharp_AkReflectionPathInfo_GetDiffraction(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EA1")]
	[Address(RVA = "0x1203BD4", Offset = "0x1203BD4", VA = "0x1203BD4")]
	public static extern void CSharp_AkReflectionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EA2")]
	[Address(RVA = "0x1203C64", Offset = "0x1203C64", VA = "0x1203C64")]
	public static extern IntPtr CSharp_new_AkReflectionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6000EA3")]
	[Address(RVA = "0x1203CD8", Offset = "0x1203CD8", VA = "0x1203CD8")]
	public static extern void CSharp_delete_AkReflectionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EA4")]
	[Address(RVA = "0x1203D58", Offset = "0x1203D58", VA = "0x1203D58")]
	public static extern void CSharp_AkDiffractionPathInfo_virtualPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EA5")]
	[Address(RVA = "0x1203DE8", Offset = "0x1203DE8", VA = "0x1203DE8")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_virtualPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EA6")]
	[Address(RVA = "0x1203E68", Offset = "0x1203E68", VA = "0x1203E68")]
	public static extern void CSharp_AkDiffractionPathInfo_nodeCount_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EA7")]
	[Address(RVA = "0x1203EF8", Offset = "0x1203EF8", VA = "0x1203EF8")]
	public static extern uint CSharp_AkDiffractionPathInfo_nodeCount_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EA8")]
	[Address(RVA = "0x1203F78", Offset = "0x1203F78", VA = "0x1203F78")]
	public static extern void CSharp_AkDiffractionPathInfo_diffraction_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EA9")]
	[Address(RVA = "0x1204008", Offset = "0x1204008", VA = "0x1204008")]
	public static extern float CSharp_AkDiffractionPathInfo_diffraction_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EAA")]
	[Address(RVA = "0x1204088", Offset = "0x1204088", VA = "0x1204088")]
	public static extern void CSharp_AkDiffractionPathInfo_totLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EAB")]
	[Address(RVA = "0x1204118", Offset = "0x1204118", VA = "0x1204118")]
	public static extern float CSharp_AkDiffractionPathInfo_totLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EAC")]
	[Address(RVA = "0x1204198", Offset = "0x1204198", VA = "0x1204198")]
	public static extern void CSharp_AkDiffractionPathInfo_obstructionValue_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EAD")]
	[Address(RVA = "0x1204228", Offset = "0x1204228", VA = "0x1204228")]
	public static extern float CSharp_AkDiffractionPathInfo_obstructionValue_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EAE")]
	[Address(RVA = "0x12042A8", Offset = "0x12042A8", VA = "0x12042A8")]
	public static extern int CSharp_AkDiffractionPathInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000EAF")]
	[Address(RVA = "0x120431C", Offset = "0x120431C", VA = "0x120431C")]
	public static extern IntPtr CSharp_AkDiffractionPathInfo_GetNodes(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB0")]
	[Address(RVA = "0x12043AC", Offset = "0x12043AC", VA = "0x12043AC")]
	public static extern float CSharp_AkDiffractionPathInfo_GetAngles(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB1")]
	[Address(RVA = "0x120443C", Offset = "0x120443C", VA = "0x120443C")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetPortals(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB2")]
	[Address(RVA = "0x12044CC", Offset = "0x12044CC", VA = "0x12044CC")]
	public static extern ulong CSharp_AkDiffractionPathInfo_GetRooms(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB3")]
	[Address(RVA = "0x120455C", Offset = "0x120455C", VA = "0x120455C")]
	public static extern void CSharp_AkDiffractionPathInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB4")]
	[Address(RVA = "0x12045EC", Offset = "0x12045EC", VA = "0x12045EC")]
	public static extern IntPtr CSharp_new_AkDiffractionPathInfo();

	[PreserveSig]
	[Token(Token = "0x6000EB5")]
	[Address(RVA = "0x1204660", Offset = "0x1204660", VA = "0x1204660")]
	public static extern void CSharp_delete_AkDiffractionPathInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EB6")]
	[Address(RVA = "0x12046E0", Offset = "0x12046E0", VA = "0x12046E0")]
	public static extern IntPtr CSharp_new_AkRoomParams();

	[PreserveSig]
	[Token(Token = "0x6000EB7")]
	[Address(RVA = "0x1204754", Offset = "0x1204754", VA = "0x1204754")]
	public static extern void CSharp_AkRoomParams_Up_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EB8")]
	[Address(RVA = "0x12047E4", Offset = "0x12047E4", VA = "0x12047E4")]
	public static extern IntPtr CSharp_AkRoomParams_Up_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EB9")]
	[Address(RVA = "0x1204864", Offset = "0x1204864", VA = "0x1204864")]
	public static extern void CSharp_AkRoomParams_Front_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EBA")]
	[Address(RVA = "0x12048F4", Offset = "0x12048F4", VA = "0x12048F4")]
	public static extern IntPtr CSharp_AkRoomParams_Front_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EBB")]
	[Address(RVA = "0x1204974", Offset = "0x1204974", VA = "0x1204974")]
	public static extern void CSharp_AkRoomParams_ReverbAuxBus_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EBC")]
	[Address(RVA = "0x1204A04", Offset = "0x1204A04", VA = "0x1204A04")]
	public static extern uint CSharp_AkRoomParams_ReverbAuxBus_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EBD")]
	[Address(RVA = "0x1204A84", Offset = "0x1204A84", VA = "0x1204A84")]
	public static extern void CSharp_AkRoomParams_ReverbLevel_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EBE")]
	[Address(RVA = "0x1204B14", Offset = "0x1204B14", VA = "0x1204B14")]
	public static extern float CSharp_AkRoomParams_ReverbLevel_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EBF")]
	[Address(RVA = "0x1204B94", Offset = "0x1204B94", VA = "0x1204B94")]
	public static extern void CSharp_AkRoomParams_WallOcclusion_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC0")]
	[Address(RVA = "0x1204C24", Offset = "0x1204C24", VA = "0x1204C24")]
	public static extern float CSharp_AkRoomParams_WallOcclusion_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC1")]
	[Address(RVA = "0x1204CA4", Offset = "0x1204CA4", VA = "0x1204CA4")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC2")]
	[Address(RVA = "0x1204D34", Offset = "0x1204D34", VA = "0x1204D34")]
	public static extern float CSharp_AkRoomParams_RoomGameObj_AuxSendLevelToSelf_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC3")]
	[Address(RVA = "0x1204DB4", Offset = "0x1204DB4", VA = "0x1204DB4")]
	public static extern void CSharp_AkRoomParams_RoomGameObj_KeepRegistered_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC4")]
	[Address(RVA = "0x1204E44", Offset = "0x1204E44", VA = "0x1204E44")]
	public static extern bool CSharp_AkRoomParams_RoomGameObj_KeepRegistered_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC5")]
	[Address(RVA = "0x1204ECC", Offset = "0x1204ECC", VA = "0x1204ECC")]
	public static extern void CSharp_delete_AkRoomParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC6")]
	[Address(RVA = "0x11EB120", Offset = "0x11EB120", VA = "0x11EB120")]
	public static extern int CSharp_GetPoolID();

	[PreserveSig]
	[Token(Token = "0x6000EC7")]
	[Address(RVA = "0x11EB254", Offset = "0x11EB254", VA = "0x11EB254")]
	public static extern int CSharp_RegisterEmitter(ulong jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EC8")]
	[Address(RVA = "0x11EB380", Offset = "0x11EB380", VA = "0x11EB380")]
	public static extern int CSharp_UnregisterEmitter(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EC9")]
	[Address(RVA = "0x11EB4C0", Offset = "0x11EB4C0", VA = "0x11EB4C0")]
	public static extern int CSharp_SetEmitterAuxSendValues(ulong jarg1, IntPtr jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000ECA")]
	[Address(RVA = "0x11EB638", Offset = "0x11EB638", VA = "0x11EB638")]
	public static extern int CSharp_SetImageSource__SWIG_0(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4, ulong jarg5);

	[PreserveSig]
	[Token(Token = "0x6000ECB")]
	[Address(RVA = "0x11EB788", Offset = "0x11EB788", VA = "0x11EB788")]
	public static extern int CSharp_SetImageSource__SWIG_1(uint jarg1, IntPtr jarg2, uint jarg3, ulong jarg4);

	[PreserveSig]
	[Token(Token = "0x6000ECC")]
	[Address(RVA = "0x11EB8E4", Offset = "0x11EB8E4", VA = "0x11EB8E4")]
	public static extern int CSharp_RemoveImageSource__SWIG_0(uint jarg1, uint jarg2, ulong jarg3);

	[PreserveSig]
	[Token(Token = "0x6000ECD")]
	[Address(RVA = "0x11EB9F0", Offset = "0x11EB9F0", VA = "0x11EB9F0")]
	public static extern int CSharp_RemoveImageSource__SWIG_1(uint jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ECE")]
	[Address(RVA = "0x11EBAE4", Offset = "0x11EBAE4", VA = "0x11EBAE4")]
	public static extern int CSharp_RemoveGeometry(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ECF")]
	[Address(RVA = "0x11EBC5C", Offset = "0x11EBC5C", VA = "0x11EBC5C")]
	public static extern int CSharp_QueryReflectionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, IntPtr jarg4, out uint jarg5);

	[PreserveSig]
	[Token(Token = "0x6000ED0")]
	[Address(RVA = "0x11EBD70", Offset = "0x11EBD70", VA = "0x11EBD70")]
	public static extern int CSharp_RemoveRoom(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED1")]
	[Address(RVA = "0x11EBE54", Offset = "0x11EBE54", VA = "0x11EBE54")]
	public static extern int CSharp_RemovePortal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED2")]
	[Address(RVA = "0x11EBF80", Offset = "0x11EBF80", VA = "0x11EBF80")]
	public static extern int CSharp_SetGameObjectInRoom(ulong jarg1, ulong jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED3")]
	[Address(RVA = "0x11EC0C4", Offset = "0x11EC0C4", VA = "0x11EC0C4")]
	public static extern int CSharp_SetEmitterObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000ED4")]
	[Address(RVA = "0x11EC15C", Offset = "0x11EC15C", VA = "0x11EC15C")]
	public static extern int CSharp_SetPortalObstructionAndOcclusion(ulong jarg1, float jarg2, float jarg3);

	[PreserveSig]
	[Token(Token = "0x6000ED5")]
	[Address(RVA = "0x11EC268", Offset = "0x11EC268", VA = "0x11EC268")]
	public static extern int CSharp_QueryWetDiffraction(ulong jarg1, out float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED6")]
	[Address(RVA = "0x1204F4C", Offset = "0x1204F4C", VA = "0x1204F4C")]
	public static extern void CSharp_AkPlatformInitSettings_threadLEngine_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED7")]
	[Address(RVA = "0x1204FDC", Offset = "0x1204FDC", VA = "0x1204FDC")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadLEngine_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000ED8")]
	[Address(RVA = "0x120505C", Offset = "0x120505C", VA = "0x120505C")]
	public static extern void CSharp_AkPlatformInitSettings_threadOutputMgr_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000ED9")]
	[Address(RVA = "0x12050EC", Offset = "0x12050EC", VA = "0x12050EC")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadOutputMgr_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EDA")]
	[Address(RVA = "0x120516C", Offset = "0x120516C", VA = "0x120516C")]
	public static extern void CSharp_AkPlatformInitSettings_threadBankManager_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EDB")]
	[Address(RVA = "0x12051FC", Offset = "0x12051FC", VA = "0x12051FC")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadBankManager_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EDC")]
	[Address(RVA = "0x120527C", Offset = "0x120527C", VA = "0x120527C")]
	public static extern void CSharp_AkPlatformInitSettings_threadMonitor_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EDD")]
	[Address(RVA = "0x120530C", Offset = "0x120530C", VA = "0x120530C")]
	public static extern IntPtr CSharp_AkPlatformInitSettings_threadMonitor_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EDE")]
	[Address(RVA = "0x120538C", Offset = "0x120538C", VA = "0x120538C")]
	public static extern void CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EDF")]
	[Address(RVA = "0x120541C", Offset = "0x120541C", VA = "0x120541C")]
	public static extern float CSharp_AkPlatformInitSettings_fLEngineDefaultPoolRatioThreshold_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE0")]
	[Address(RVA = "0x120549C", Offset = "0x120549C", VA = "0x120549C")]
	public static extern void CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE1")]
	[Address(RVA = "0x120552C", Offset = "0x120552C", VA = "0x120552C")]
	public static extern uint CSharp_AkPlatformInitSettings_uLEngineDefaultPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE2")]
	[Address(RVA = "0x12055AC", Offset = "0x12055AC", VA = "0x12055AC")]
	public static extern void CSharp_AkPlatformInitSettings_uSampleRate_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE3")]
	[Address(RVA = "0x120563C", Offset = "0x120563C", VA = "0x120563C")]
	public static extern uint CSharp_AkPlatformInitSettings_uSampleRate_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE4")]
	[Address(RVA = "0x12056BC", Offset = "0x12056BC", VA = "0x12056BC")]
	public static extern void CSharp_AkPlatformInitSettings_uNumRefillsInVoice_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE5")]
	[Address(RVA = "0x120574C", Offset = "0x120574C", VA = "0x120574C")]
	public static extern ushort CSharp_AkPlatformInitSettings_uNumRefillsInVoice_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE6")]
	[Address(RVA = "0x12057CC", Offset = "0x12057CC", VA = "0x12057CC")]
	public static extern void CSharp_AkPlatformInitSettings_uChannelMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE7")]
	[Address(RVA = "0x120585C", Offset = "0x120585C", VA = "0x120585C")]
	public static extern uint CSharp_AkPlatformInitSettings_uChannelMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EE8")]
	[Address(RVA = "0x12058DC", Offset = "0x12058DC", VA = "0x12058DC")]
	public static extern void CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EE9")]
	[Address(RVA = "0x120596C", Offset = "0x120596C", VA = "0x120596C")]
	public static extern bool CSharp_AkPlatformInitSettings_bRoundFrameSizeToHWSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EEA")]
	[Address(RVA = "0x12059F4", Offset = "0x12059F4", VA = "0x12059F4")]
	public static extern IntPtr CSharp_new_AkPlatformInitSettings();

	[PreserveSig]
	[Token(Token = "0x6000EEB")]
	[Address(RVA = "0x1205A68", Offset = "0x1205A68", VA = "0x1205A68")]
	public static extern void CSharp_delete_AkPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EEC")]
	[Address(RVA = "0x11EC390", Offset = "0x11EC390", VA = "0x11EC390")]
	public static extern int CSharp_GetFastPathSettings(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EED")]
	[Address(RVA = "0x1205AE8", Offset = "0x1205AE8", VA = "0x1205AE8")]
	public static extern void CSharp_AkStreamMgrSettings_uMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EEE")]
	[Address(RVA = "0x1205B78", Offset = "0x1205B78", VA = "0x1205B78")]
	public static extern uint CSharp_AkStreamMgrSettings_uMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EEF")]
	[Address(RVA = "0x1205BF8", Offset = "0x1205BF8", VA = "0x1205BF8")]
	public static extern IntPtr CSharp_new_AkStreamMgrSettings();

	[PreserveSig]
	[Token(Token = "0x6000EF0")]
	[Address(RVA = "0x1205C6C", Offset = "0x1205C6C", VA = "0x1205C6C")]
	public static extern void CSharp_delete_AkStreamMgrSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF1")]
	[Address(RVA = "0x1205CEC", Offset = "0x1205CEC", VA = "0x1205CEC")]
	public static extern void CSharp_AkDeviceSettings_pIOMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EF2")]
	[Address(RVA = "0x1205D7C", Offset = "0x1205D7C", VA = "0x1205D7C")]
	public static extern IntPtr CSharp_AkDeviceSettings_pIOMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF3")]
	[Address(RVA = "0x1205DFC", Offset = "0x1205DFC", VA = "0x1205DFC")]
	public static extern void CSharp_AkDeviceSettings_uIOMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EF4")]
	[Address(RVA = "0x1205E8C", Offset = "0x1205E8C", VA = "0x1205E8C")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF5")]
	[Address(RVA = "0x1205F0C", Offset = "0x1205F0C", VA = "0x1205F0C")]
	public static extern void CSharp_AkDeviceSettings_uIOMemoryAlignment_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EF6")]
	[Address(RVA = "0x1205F9C", Offset = "0x1205F9C", VA = "0x1205F9C")]
	public static extern uint CSharp_AkDeviceSettings_uIOMemoryAlignment_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF7")]
	[Address(RVA = "0x120601C", Offset = "0x120601C", VA = "0x120601C")]
	public static extern void CSharp_AkDeviceSettings_ePoolAttributes_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EF8")]
	[Address(RVA = "0x12060AC", Offset = "0x12060AC", VA = "0x12060AC")]
	public static extern int CSharp_AkDeviceSettings_ePoolAttributes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EF9")]
	[Address(RVA = "0x120612C", Offset = "0x120612C", VA = "0x120612C")]
	public static extern void CSharp_AkDeviceSettings_uGranularity_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EFA")]
	[Address(RVA = "0x12061BC", Offset = "0x12061BC", VA = "0x12061BC")]
	public static extern uint CSharp_AkDeviceSettings_uGranularity_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EFB")]
	[Address(RVA = "0x120623C", Offset = "0x120623C", VA = "0x120623C")]
	public static extern void CSharp_AkDeviceSettings_uSchedulerTypeFlags_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EFC")]
	[Address(RVA = "0x12062CC", Offset = "0x12062CC", VA = "0x12062CC")]
	public static extern uint CSharp_AkDeviceSettings_uSchedulerTypeFlags_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EFD")]
	[Address(RVA = "0x120634C", Offset = "0x120634C", VA = "0x120634C")]
	public static extern void CSharp_AkDeviceSettings_threadProperties_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000EFE")]
	[Address(RVA = "0x12063DC", Offset = "0x12063DC", VA = "0x12063DC")]
	public static extern IntPtr CSharp_AkDeviceSettings_threadProperties_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000EFF")]
	[Address(RVA = "0x120645C", Offset = "0x120645C", VA = "0x120645C")]
	public static extern void CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_set(IntPtr jarg1, float jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F00")]
	[Address(RVA = "0x12064EC", Offset = "0x12064EC", VA = "0x12064EC")]
	public static extern float CSharp_AkDeviceSettings_fTargetAutoStmBufferLength_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F01")]
	[Address(RVA = "0x120656C", Offset = "0x120656C", VA = "0x120656C")]
	public static extern void CSharp_AkDeviceSettings_uMaxConcurrentIO_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F02")]
	[Address(RVA = "0x12065FC", Offset = "0x12065FC", VA = "0x12065FC")]
	public static extern uint CSharp_AkDeviceSettings_uMaxConcurrentIO_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F03")]
	[Address(RVA = "0x120667C", Offset = "0x120667C", VA = "0x120667C")]
	public static extern void CSharp_AkDeviceSettings_bUseStreamCache_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F04")]
	[Address(RVA = "0x120670C", Offset = "0x120670C", VA = "0x120670C")]
	public static extern bool CSharp_AkDeviceSettings_bUseStreamCache_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F05")]
	[Address(RVA = "0x1206794", Offset = "0x1206794", VA = "0x1206794")]
	public static extern void CSharp_AkDeviceSettings_uMaxCachePinnedBytes_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F06")]
	[Address(RVA = "0x1206824", Offset = "0x1206824", VA = "0x1206824")]
	public static extern uint CSharp_AkDeviceSettings_uMaxCachePinnedBytes_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F07")]
	[Address(RVA = "0x12068A4", Offset = "0x12068A4", VA = "0x12068A4")]
	public static extern IntPtr CSharp_new_AkDeviceSettings();

	[PreserveSig]
	[Token(Token = "0x6000F08")]
	[Address(RVA = "0x1206918", Offset = "0x1206918", VA = "0x1206918")]
	public static extern void CSharp_delete_AkDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F09")]
	[Address(RVA = "0x1206998", Offset = "0x1206998", VA = "0x1206998")]
	public static extern void CSharp_AkThreadProperties_nPriority_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F0A")]
	[Address(RVA = "0x1206A28", Offset = "0x1206A28", VA = "0x1206A28")]
	public static extern int CSharp_AkThreadProperties_nPriority_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0B")]
	[Address(RVA = "0x1206AA8", Offset = "0x1206AA8", VA = "0x1206AA8")]
	public static extern void CSharp_AkThreadProperties_uStackSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F0C")]
	[Address(RVA = "0x1206B38", Offset = "0x1206B38", VA = "0x1206B38")]
	public static extern uint CSharp_AkThreadProperties_uStackSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0D")]
	[Address(RVA = "0x1206BB8", Offset = "0x1206BB8", VA = "0x1206BB8")]
	public static extern void CSharp_AkThreadProperties_uSchedPolicy_set(IntPtr jarg1, int jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F0E")]
	[Address(RVA = "0x1206C48", Offset = "0x1206C48", VA = "0x1206C48")]
	public static extern int CSharp_AkThreadProperties_uSchedPolicy_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F0F")]
	[Address(RVA = "0x1206CC8", Offset = "0x1206CC8", VA = "0x1206CC8")]
	public static extern void CSharp_AkThreadProperties_dwAffinityMask_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F10")]
	[Address(RVA = "0x1206D58", Offset = "0x1206D58", VA = "0x1206D58")]
	public static extern uint CSharp_AkThreadProperties_dwAffinityMask_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F11")]
	[Address(RVA = "0x1206DD8", Offset = "0x1206DD8", VA = "0x1206DD8")]
	public static extern IntPtr CSharp_new_AkThreadProperties();

	[PreserveSig]
	[Token(Token = "0x6000F12")]
	[Address(RVA = "0x1206E4C", Offset = "0x1206E4C", VA = "0x1206E4C")]
	public static extern void CSharp_delete_AkThreadProperties(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F13")]
	[Address(RVA = "0x11EC484", Offset = "0x11EC484", VA = "0x11EC484")]
	public static extern void CSharp_SetErrorLogger__SWIG_0(AkLogger.ErrorLoggerInteropDelegate jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F14")]
	[Address(RVA = "0x11EC564", Offset = "0x11EC564", VA = "0x11EC564")]
	public static extern void CSharp_SetErrorLogger__SWIG_1();

	[PreserveSig]
	[Token(Token = "0x6000F15")]
	[Address(RVA = "0x11EC648", Offset = "0x11EC648", VA = "0x11EC648")]
	public static extern void CSharp_SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate jarg1, AkAudioInputManager.AudioFormatInteropDelegate jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F16")]
	[Address(RVA = "0x1206ECC", Offset = "0x1206ECC", VA = "0x1206ECC")]
	public static extern void CSharp_AkPathParams_listenerPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F17")]
	[Address(RVA = "0x1206F5C", Offset = "0x1206F5C", VA = "0x1206F5C")]
	public static extern IntPtr CSharp_AkPathParams_listenerPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F18")]
	[Address(RVA = "0x1206FDC", Offset = "0x1206FDC", VA = "0x1206FDC")]
	public static extern void CSharp_AkPathParams_emitterPos_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F19")]
	[Address(RVA = "0x120706C", Offset = "0x120706C", VA = "0x120706C")]
	public static extern IntPtr CSharp_AkPathParams_emitterPos_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F1A")]
	[Address(RVA = "0x12070EC", Offset = "0x12070EC", VA = "0x12070EC")]
	public static extern void CSharp_AkPathParams_numValidPaths_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F1B")]
	[Address(RVA = "0x120717C", Offset = "0x120717C", VA = "0x120717C")]
	public static extern uint CSharp_AkPathParams_numValidPaths_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F1C")]
	[Address(RVA = "0x12071FC", Offset = "0x12071FC", VA = "0x12071FC")]
	public static extern IntPtr CSharp_new_AkPathParams();

	[PreserveSig]
	[Token(Token = "0x6000F1D")]
	[Address(RVA = "0x1207270", Offset = "0x1207270", VA = "0x1207270")]
	public static extern void CSharp_delete_AkPathParams(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F1E")]
	[Address(RVA = "0x12072F0", Offset = "0x12072F0", VA = "0x12072F0")]
	public static extern IntPtr CSharp_new_AkUnityPlatformSpecificSettings();

	[PreserveSig]
	[Token(Token = "0x6000F1F")]
	[Address(RVA = "0x1207364", Offset = "0x1207364", VA = "0x1207364")]
	public static extern void CSharp_delete_AkUnityPlatformSpecificSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F20")]
	[Address(RVA = "0x12073E4", Offset = "0x12073E4", VA = "0x12073E4")]
	public static extern IntPtr CSharp_new_AkCommunicationSettings();

	[PreserveSig]
	[Token(Token = "0x6000F21")]
	[Address(RVA = "0x1207458", Offset = "0x1207458", VA = "0x1207458")]
	public static extern void CSharp_AkCommunicationSettings_uPoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F22")]
	[Address(RVA = "0x12074E8", Offset = "0x12074E8", VA = "0x12074E8")]
	public static extern uint CSharp_AkCommunicationSettings_uPoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F23")]
	[Address(RVA = "0x1207568", Offset = "0x1207568", VA = "0x1207568")]
	public static extern void CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F24")]
	[Address(RVA = "0x12075F8", Offset = "0x12075F8", VA = "0x12075F8")]
	public static extern ushort CSharp_AkCommunicationSettings_uDiscoveryBroadcastPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F25")]
	[Address(RVA = "0x1207678", Offset = "0x1207678", VA = "0x1207678")]
	public static extern void CSharp_AkCommunicationSettings_uCommandPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F26")]
	[Address(RVA = "0x1207708", Offset = "0x1207708", VA = "0x1207708")]
	public static extern ushort CSharp_AkCommunicationSettings_uCommandPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F27")]
	[Address(RVA = "0x1207788", Offset = "0x1207788", VA = "0x1207788")]
	public static extern void CSharp_AkCommunicationSettings_uNotificationPort_set(IntPtr jarg1, ushort jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F28")]
	[Address(RVA = "0x1207818", Offset = "0x1207818", VA = "0x1207818")]
	public static extern ushort CSharp_AkCommunicationSettings_uNotificationPort_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F29")]
	[Address(RVA = "0x1207898", Offset = "0x1207898", VA = "0x1207898")]
	public static extern void CSharp_AkCommunicationSettings_bInitSystemLib_set(IntPtr jarg1, bool jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F2A")]
	[Address(RVA = "0x1207928", Offset = "0x1207928", VA = "0x1207928")]
	public static extern bool CSharp_AkCommunicationSettings_bInitSystemLib_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2B")]
	[Address(RVA = "0x12079B0", Offset = "0x12079B0", VA = "0x12079B0")]
	public static extern void CSharp_AkCommunicationSettings_szAppNetworkName_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F2C")]
	[Address(RVA = "0x1207A54", Offset = "0x1207A54", VA = "0x1207A54")]
	public static extern IntPtr CSharp_AkCommunicationSettings_szAppNetworkName_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2D")]
	[Address(RVA = "0x1207AD4", Offset = "0x1207AD4", VA = "0x1207AD4")]
	public static extern void CSharp_delete_AkCommunicationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F2E")]
	[Address(RVA = "0x1207B54", Offset = "0x1207B54", VA = "0x1207B54")]
	public static extern IntPtr CSharp_new_AkInitializationSettings();

	[PreserveSig]
	[Token(Token = "0x6000F2F")]
	[Address(RVA = "0x1207BC8", Offset = "0x1207BC8", VA = "0x1207BC8")]
	public static extern void CSharp_delete_AkInitializationSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F30")]
	[Address(RVA = "0x1207C48", Offset = "0x1207C48", VA = "0x1207C48")]
	public static extern void CSharp_AkInitializationSettings_memSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F31")]
	[Address(RVA = "0x1207CD8", Offset = "0x1207CD8", VA = "0x1207CD8")]
	public static extern IntPtr CSharp_AkInitializationSettings_memSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F32")]
	[Address(RVA = "0x1207D58", Offset = "0x1207D58", VA = "0x1207D58")]
	public static extern void CSharp_AkInitializationSettings_streamMgrSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F33")]
	[Address(RVA = "0x1207DE8", Offset = "0x1207DE8", VA = "0x1207DE8")]
	public static extern IntPtr CSharp_AkInitializationSettings_streamMgrSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F34")]
	[Address(RVA = "0x1207E68", Offset = "0x1207E68", VA = "0x1207E68")]
	public static extern void CSharp_AkInitializationSettings_deviceSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F35")]
	[Address(RVA = "0x1207EF8", Offset = "0x1207EF8", VA = "0x1207EF8")]
	public static extern IntPtr CSharp_AkInitializationSettings_deviceSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F36")]
	[Address(RVA = "0x1207F78", Offset = "0x1207F78", VA = "0x1207F78")]
	public static extern void CSharp_AkInitializationSettings_initSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F37")]
	[Address(RVA = "0x1208008", Offset = "0x1208008", VA = "0x1208008")]
	public static extern IntPtr CSharp_AkInitializationSettings_initSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F38")]
	[Address(RVA = "0x1208088", Offset = "0x1208088", VA = "0x1208088")]
	public static extern void CSharp_AkInitializationSettings_platformSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F39")]
	[Address(RVA = "0x1208118", Offset = "0x1208118", VA = "0x1208118")]
	public static extern IntPtr CSharp_AkInitializationSettings_platformSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3A")]
	[Address(RVA = "0x1208198", Offset = "0x1208198", VA = "0x1208198")]
	public static extern void CSharp_AkInitializationSettings_musicSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F3B")]
	[Address(RVA = "0x1208228", Offset = "0x1208228", VA = "0x1208228")]
	public static extern IntPtr CSharp_AkInitializationSettings_musicSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3C")]
	[Address(RVA = "0x12082A8", Offset = "0x12082A8", VA = "0x12082A8")]
	public static extern void CSharp_AkInitializationSettings_preparePoolSize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F3D")]
	[Address(RVA = "0x1208338", Offset = "0x1208338", VA = "0x1208338")]
	public static extern uint CSharp_AkInitializationSettings_preparePoolSize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F3E")]
	[Address(RVA = "0x12083B8", Offset = "0x12083B8", VA = "0x12083B8")]
	public static extern void CSharp_AkInitializationSettings_unityPlatformSpecificSettings_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F3F")]
	[Address(RVA = "0x1208448", Offset = "0x1208448", VA = "0x1208448")]
	public static extern IntPtr CSharp_AkInitializationSettings_unityPlatformSpecificSettings_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F40")]
	[Address(RVA = "0x12084C8", Offset = "0x12084C8", VA = "0x12084C8")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_0();

	[PreserveSig]
	[Token(Token = "0x6000F41")]
	[Address(RVA = "0x120853C", Offset = "0x120853C", VA = "0x120853C")]
	public static extern void CSharp_delete_AkExternalSourceInfo(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F42")]
	[Address(RVA = "0x12085BC", Offset = "0x12085BC", VA = "0x12085BC")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_1(IntPtr jarg1, uint jarg2, uint jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000F43")]
	[Address(RVA = "0x1208664", Offset = "0x1208664", VA = "0x1208664")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_2(string jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F44")]
	[Address(RVA = "0x1208714", Offset = "0x1208714", VA = "0x1208714")]
	public static extern IntPtr CSharp_new_AkExternalSourceInfo__SWIG_3(uint jarg1, uint jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F45")]
	[Address(RVA = "0x12087AC", Offset = "0x12087AC", VA = "0x12087AC")]
	public static extern void CSharp_AkExternalSourceInfo_Clear(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F46")]
	[Address(RVA = "0x120882C", Offset = "0x120882C", VA = "0x120882C")]
	public static extern void CSharp_AkExternalSourceInfo_Clone(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F47")]
	[Address(RVA = "0x12088BC", Offset = "0x12088BC", VA = "0x12088BC")]
	public static extern int CSharp_AkExternalSourceInfo_GetSizeOf();

	[PreserveSig]
	[Token(Token = "0x6000F48")]
	[Address(RVA = "0x1208930", Offset = "0x1208930", VA = "0x1208930")]
	public static extern void CSharp_AkExternalSourceInfo_iExternalSrcCookie_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F49")]
	[Address(RVA = "0x12089C0", Offset = "0x12089C0", VA = "0x12089C0")]
	public static extern uint CSharp_AkExternalSourceInfo_iExternalSrcCookie_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F4A")]
	[Address(RVA = "0x1208A40", Offset = "0x1208A40", VA = "0x1208A40")]
	public static extern void CSharp_AkExternalSourceInfo_idCodec_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F4B")]
	[Address(RVA = "0x1208AD0", Offset = "0x1208AD0", VA = "0x1208AD0")]
	public static extern uint CSharp_AkExternalSourceInfo_idCodec_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F4C")]
	[Address(RVA = "0x1208B50", Offset = "0x1208B50", VA = "0x1208B50")]
	public static extern void CSharp_AkExternalSourceInfo_szFile_set(IntPtr jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F4D")]
	[Address(RVA = "0x1208BF4", Offset = "0x1208BF4", VA = "0x1208BF4")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_szFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F4E")]
	[Address(RVA = "0x1208C74", Offset = "0x1208C74", VA = "0x1208C74")]
	public static extern void CSharp_AkExternalSourceInfo_pInMemory_set(IntPtr jarg1, IntPtr jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F4F")]
	[Address(RVA = "0x1208D04", Offset = "0x1208D04", VA = "0x1208D04")]
	public static extern IntPtr CSharp_AkExternalSourceInfo_pInMemory_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F50")]
	[Address(RVA = "0x1208D84", Offset = "0x1208D84", VA = "0x1208D84")]
	public static extern void CSharp_AkExternalSourceInfo_uiMemorySize_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F51")]
	[Address(RVA = "0x1208E14", Offset = "0x1208E14", VA = "0x1208E14")]
	public static extern uint CSharp_AkExternalSourceInfo_uiMemorySize_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F52")]
	[Address(RVA = "0x1208E94", Offset = "0x1208E94", VA = "0x1208E94")]
	public static extern void CSharp_AkExternalSourceInfo_idFile_set(IntPtr jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F53")]
	[Address(RVA = "0x1208F24", Offset = "0x1208F24", VA = "0x1208F24")]
	public static extern uint CSharp_AkExternalSourceInfo_idFile_get(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F54")]
	[Address(RVA = "0x11EC764", Offset = "0x11EC764", VA = "0x11EC764")]
	public static extern int CSharp_Init(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F55")]
	[Address(RVA = "0x11EC85C", Offset = "0x11EC85C", VA = "0x11EC85C")]
	public static extern int CSharp_InitSpatialAudio(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F56")]
	[Address(RVA = "0x11EC954", Offset = "0x11EC954", VA = "0x11EC954")]
	public static extern int CSharp_InitCommunication(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F57")]
	[Address(RVA = "0x11ECA30", Offset = "0x11ECA30", VA = "0x11ECA30")]
	public static extern void CSharp_Term();

	[PreserveSig]
	[Token(Token = "0x6000F58")]
	[Address(RVA = "0x11ECB34", Offset = "0x11ECB34", VA = "0x11ECB34")]
	public static extern int CSharp_RegisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F59")]
	[Address(RVA = "0x11ECC48", Offset = "0x11ECC48", VA = "0x11ECC48")]
	public static extern int CSharp_UnregisterGameObjInternal(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F5A")]
	[Address(RVA = "0x11ECD6C", Offset = "0x11ECD6C", VA = "0x11ECD6C")]
	public static extern int CSharp_RegisterGameObjInternal_WithName(ulong jarg1, string jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F5B")]
	[Address(RVA = "0x11ECE7C", Offset = "0x11ECE7C", VA = "0x11ECE7C")]
	public static extern int CSharp_SetBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F5C")]
	[Address(RVA = "0x11ECF78", Offset = "0x11ECF78", VA = "0x11ECF78")]
	public static extern int CSharp_SetCurrentLanguage(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F5D")]
	[Address(RVA = "0x11ED08C", Offset = "0x11ED08C", VA = "0x11ED08C")]
	public static extern int CSharp_LoadFilePackage(string jarg1, out uint jarg2, int jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F5E")]
	[Address(RVA = "0x11ED1A0", Offset = "0x11ED1A0", VA = "0x11ED1A0")]
	public static extern int CSharp_AddBasePath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F5F")]
	[Address(RVA = "0x11ED29C", Offset = "0x11ED29C", VA = "0x11ED29C")]
	public static extern int CSharp_SetGameName(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F60")]
	[Address(RVA = "0x11ED398", Offset = "0x11ED398", VA = "0x11ED398")]
	public static extern int CSharp_SetDecodedBankPath(string jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F61")]
	[Address(RVA = "0x11ED4AC", Offset = "0x11ED4AC", VA = "0x11ED4AC")]
	public static extern int CSharp_LoadAndDecodeBank(string jarg1, bool jarg2, out uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F62")]
	[Address(RVA = "0x11ED600", Offset = "0x11ED600", VA = "0x11ED600")]
	public static extern int CSharp_LoadAndDecodeBankFromMemory(IntPtr jarg1, uint jarg2, bool jarg3, string jarg4, bool jarg5, out uint jarg6);

	[PreserveSig]
	[Token(Token = "0x6000F63")]
	[Address(RVA = "0x11ED768", Offset = "0x11ED768", VA = "0x11ED768")]
	public static extern IntPtr CSharp_GetCurrentLanguage();

	[PreserveSig]
	[Token(Token = "0x6000F64")]
	[Address(RVA = "0x11ED8A4", Offset = "0x11ED8A4", VA = "0x11ED8A4")]
	public static extern int CSharp_UnloadFilePackage(uint jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F65")]
	[Address(RVA = "0x11ED980", Offset = "0x11ED980", VA = "0x11ED980")]
	public static extern int CSharp_UnloadAllFilePackages();

	[PreserveSig]
	[Token(Token = "0x6000F66")]
	[Address(RVA = "0x11EDAF8", Offset = "0x11EDAF8", VA = "0x11EDAF8")]
	public static extern int CSharp_SetObjectPosition(ulong jarg1, float jarg2, float jarg3, float jarg4, float jarg5, float jarg6, float jarg7, float jarg8, float jarg9, float jarg10);

	[PreserveSig]
	[Token(Token = "0x6000F67")]
	[Address(RVA = "0x11EDC84", Offset = "0x11EDC84", VA = "0x11EDC84")]
	public static extern int CSharp_GetSourceMultiplePlayPositions(uint jarg1, [Out] uint[] jarg2, [Out] uint[] jarg3, [Out] int[] jarg4, ref uint jarg5, bool jarg6);

	[PreserveSig]
	[Token(Token = "0x6000F68")]
	[Address(RVA = "0x11EDF48", Offset = "0x11EDF48", VA = "0x11EDF48")]
	public static extern int CSharp_SetListeners(ulong jarg1, ulong[] jarg2, uint jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F69")]
	[Address(RVA = "0x11EE05C", Offset = "0x11EE05C", VA = "0x11EE05C")]
	public static extern int CSharp_SetDefaultListeners(ulong[] jarg1, uint jarg2);

	[PreserveSig]
	[Token(Token = "0x6000F6A")]
	[Address(RVA = "0x11EE194", Offset = "0x11EE194", VA = "0x11EE194")]
	public static extern int CSharp_AddOutput(IntPtr jarg1, out ulong jarg2, ulong[] jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000F6B")]
	[Address(RVA = "0x11EE2BC", Offset = "0x11EE2BC", VA = "0x11EE2BC")]
	public static extern void CSharp_GetDefaultStreamSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6C")]
	[Address(RVA = "0x11EE3B4", Offset = "0x11EE3B4", VA = "0x11EE3B4")]
	public static extern void CSharp_GetDefaultDeviceSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6D")]
	[Address(RVA = "0x11EE4AC", Offset = "0x11EE4AC", VA = "0x11EE4AC")]
	public static extern void CSharp_GetDefaultMusicSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6E")]
	[Address(RVA = "0x11EE5A4", Offset = "0x11EE5A4", VA = "0x11EE5A4")]
	public static extern void CSharp_GetDefaultInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F6F")]
	[Address(RVA = "0x11EE69C", Offset = "0x11EE69C", VA = "0x11EE69C")]
	public static extern void CSharp_GetDefaultPlatformInitSettings(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F70")]
	[Address(RVA = "0x11EE778", Offset = "0x11EE778", VA = "0x11EE778")]
	public static extern uint CSharp_GetMajorMinorVersion();

	[PreserveSig]
	[Token(Token = "0x6000F71")]
	[Address(RVA = "0x11EE848", Offset = "0x11EE848", VA = "0x11EE848")]
	public static extern uint CSharp_GetSubminorBuildVersion();

	[PreserveSig]
	[Token(Token = "0x6000F72")]
	[Address(RVA = "0x11EE99C", Offset = "0x11EE99C", VA = "0x11EE99C")]
	public static extern int CSharp_QueryIndirectPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000F73")]
	[Address(RVA = "0x11EEB24", Offset = "0x11EEB24", VA = "0x11EEB24")]
	public static extern int CSharp_QueryDiffractionPaths(ulong jarg1, IntPtr jarg2, IntPtr jarg3, uint jarg4);

	[PreserveSig]
	[Token(Token = "0x6000F74")]
	[Address(RVA = "0x11EEBC8", Offset = "0x11EEBC8", VA = "0x11EEBC8")]
	public static extern int CSharp_SetRoomPortal(ulong jarg1, IntPtr jarg2, IntPtr jarg3, bool jarg4, ulong jarg5, ulong jarg6);

	[PreserveSig]
	[Token(Token = "0x6000F75")]
	[Address(RVA = "0x11EED18", Offset = "0x11EED18", VA = "0x11EED18")]
	public static extern int CSharp_SetRoom(ulong jarg1, IntPtr jarg2, string jarg3);

	[PreserveSig]
	[Token(Token = "0x6000F76")]
	[Address(RVA = "0x11EEE68", Offset = "0x11EEE68", VA = "0x11EEE68")]
	public static extern int CSharp_RegisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F77")]
	[Address(RVA = "0x11EEF84", Offset = "0x11EEF84", VA = "0x11EEF84")]
	public static extern int CSharp_UnregisterSpatialAudioListener(ulong jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F78")]
	[Address(RVA = "0x11EF134", Offset = "0x11EF134", VA = "0x11EF134")]
	public static extern int CSharp_SetGeometry(ulong jarg1, IntPtr jarg2, uint jarg3, IntPtr jarg4, uint jarg5, IntPtr jarg6, uint jarg7, ulong jarg8, bool jarg9, bool jarg10);

	[PreserveSig]
	[Token(Token = "0x6000F79")]
	[Address(RVA = "0x1208FA4", Offset = "0x1208FA4", VA = "0x1208FA4")]
	public static extern IntPtr CSharp_AkPlaylist_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7A")]
	[Address(RVA = "0x1209024", Offset = "0x1209024", VA = "0x1209024")]
	public static extern IntPtr CSharp_AkMIDIPost_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7B")]
	[Address(RVA = "0x12090A4", Offset = "0x12090A4", VA = "0x12090A4")]
	public static extern IntPtr CSharp_AkEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7C")]
	[Address(RVA = "0x1209124", Offset = "0x1209124", VA = "0x1209124")]
	public static extern IntPtr CSharp_AkMIDIEventCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7D")]
	[Address(RVA = "0x12091A4", Offset = "0x12091A4", VA = "0x12091A4")]
	public static extern IntPtr CSharp_AkMarkerCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7E")]
	[Address(RVA = "0x1209224", Offset = "0x1209224", VA = "0x1209224")]
	public static extern IntPtr CSharp_AkDurationCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F7F")]
	[Address(RVA = "0x12092A4", Offset = "0x12092A4", VA = "0x12092A4")]
	public static extern IntPtr CSharp_AkDynamicSequenceItemCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F80")]
	[Address(RVA = "0x1209324", Offset = "0x1209324", VA = "0x1209324")]
	public static extern IntPtr CSharp_AkMusicSyncCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[PreserveSig]
	[Token(Token = "0x6000F81")]
	[Address(RVA = "0x12093A4", Offset = "0x12093A4", VA = "0x12093A4")]
	public static extern IntPtr CSharp_AkMusicPlaylistCallbackInfo_SWIGUpcast(IntPtr jarg1);

	[Token(Token = "0x6000F82")]
	[Address(RVA = "0x1209424", Offset = "0x1209424", VA = "0x1209424")]
	public AkSoundEnginePINVOKE()
	{
	}
}
[Token(Token = "0x200028C")]
public class AkSoundEngine
{
	[Token(Token = "0x200060B")]
	public delegate ulong GameObjectHashFunction(GameObject gameObject);

	[Token(Token = "0x200060C")]
	private class AutoObject
	{
		[Token(Token = "0x4001D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameObject gameObject;

		[Token(Token = "0x60022AB")]
		[Address(RVA = "0x11F05C8", Offset = "0x11F05C8", VA = "0x11F05C8")]
		public AutoObject(GameObject go)
		{
		}

		[Token(Token = "0x60022AC")]
		[Address(RVA = "0x11F0808", Offset = "0x11F0808", VA = "0x11F0808", Slot = "1")]
		~AutoObject()
		{
		}
	}

	[Token(Token = "0x4000F60")]
	public const int AK_SIMD_ALIGNMENT = 16;

	[Token(Token = "0x4000F61")]
	public const int AK_BUFFER_ALIGNMENT = 16;

	[Token(Token = "0x4000F62")]
	public const int AK_MAX_PATH = 260;

	[Token(Token = "0x4000F63")]
	public const int AK_BANK_PLATFORM_DATA_ALIGNMENT = 16;

	[Token(Token = "0x4000F64")]
	public const uint AK_INVALID_PLUGINID = uint.MaxValue;

	[Token(Token = "0x4000F65")]
	public const ulong AK_INVALID_GAME_OBJECT = ulong.MaxValue;

	[Token(Token = "0x4000F66")]
	public const uint AK_INVALID_UNIQUE_ID = 0u;

	[Token(Token = "0x4000F67")]
	public const uint AK_INVALID_RTPC_ID = 0u;

	[Token(Token = "0x4000F68")]
	public const uint AK_INVALID_LISTENER_INDEX = uint.MaxValue;

	[Token(Token = "0x4000F69")]
	public const uint AK_INVALID_PLAYING_ID = 0u;

	[Token(Token = "0x4000F6A")]
	public const uint AK_DEFAULT_SWITCH_STATE = 0u;

	[Token(Token = "0x4000F6B")]
	public const int AK_INVALID_POOL_ID = -1;

	[Token(Token = "0x4000F6C")]
	public const int AK_DEFAULT_POOL_ID = -1;

	[Token(Token = "0x4000F6D")]
	public const uint AK_INVALID_AUX_ID = 0u;

	[Token(Token = "0x4000F6E")]
	public const uint AK_INVALID_FILE_ID = uint.MaxValue;

	[Token(Token = "0x4000F6F")]
	public const uint AK_INVALID_DEVICE_ID = uint.MaxValue;

	[Token(Token = "0x4000F70")]
	public const uint AK_INVALID_BANK_ID = 0u;

	[Token(Token = "0x4000F71")]
	public const uint AK_FALLBACK_ARGUMENTVALUE_ID = 0u;

	[Token(Token = "0x4000F72")]
	public const uint AK_INVALID_CHANNELMASK = 0u;

	[Token(Token = "0x4000F73")]
	public const uint AK_INVALID_OUTPUT_DEVICE_ID = 0u;

	[Token(Token = "0x4000F74")]
	public const uint AK_MIXER_FX_SLOT = uint.MaxValue;

	[Token(Token = "0x4000F75")]
	public const ulong AK_DEFAULT_LISTENER_OBJ = 0uL;

	[Token(Token = "0x4000F76")]
	public const uint AK_DEFAULT_PRIORITY = 50u;

	[Token(Token = "0x4000F77")]
	public const uint AK_MIN_PRIORITY = 0u;

	[Token(Token = "0x4000F78")]
	public const uint AK_MAX_PRIORITY = 100u;

	[Token(Token = "0x4000F79")]
	public const uint AK_DEFAULT_BANK_IO_PRIORITY = 50u;

	[Token(Token = "0x4000F7A")]
	public const double AK_DEFAULT_BANK_THROUGHPUT = 1048.576;

	[Token(Token = "0x4000F7B")]
	public const uint AKCOMPANYID_AUDIOKINETIC = 0u;

	[Token(Token = "0x4000F7C")]
	public const uint AK_LISTENERS_MASK_ALL = uint.MaxValue;

	[Token(Token = "0x4000F7D")]
	public const int NULL = 0;

	[Token(Token = "0x4000F7E")]
	public const int AKCURVEINTERPOLATION_NUM_STORAGE_BIT = 5;

	[Token(Token = "0x4000F7F")]
	public const int AK_MAX_LANGUAGE_NAME_SIZE = 32;

	[Token(Token = "0x4000F80")]
	public const int AKCOMPANYID_PLUGINDEV_MIN = 64;

	[Token(Token = "0x4000F81")]
	public const int AKCOMPANYID_PLUGINDEV_MAX = 255;

	[Token(Token = "0x4000F82")]
	public const int AKCOMPANYID_AUDIOKINETIC_EXTERNAL = 1;

	[Token(Token = "0x4000F83")]
	public const int AKCOMPANYID_MCDSP = 256;

	[Token(Token = "0x4000F84")]
	public const int AKCOMPANYID_WAVEARTS = 257;

	[Token(Token = "0x4000F85")]
	public const int AKCOMPANYID_PHONETICARTS = 258;

	[Token(Token = "0x4000F86")]
	public const int AKCOMPANYID_IZOTOPE = 259;

	[Token(Token = "0x4000F87")]
	public const int AKCOMPANYID_CRANKCASEAUDIO = 261;

	[Token(Token = "0x4000F88")]
	public const int AKCOMPANYID_IOSONO = 262;

	[Token(Token = "0x4000F89")]
	public const int AKCOMPANYID_AUROTECHNOLOGIES = 263;

	[Token(Token = "0x4000F8A")]
	public const int AKCOMPANYID_DOLBY = 264;

	[Token(Token = "0x4000F8B")]
	public const int AKCOMPANYID_TWOBIGEARS = 265;

	[Token(Token = "0x4000F8C")]
	public const int AKCOMPANYID_OCULUS = 266;

	[Token(Token = "0x4000F8D")]
	public const int AKCOMPANYID_BLUERIPPLESOUND = 267;

	[Token(Token = "0x4000F8E")]
	public const int AKCOMPANYID_ENZIEN = 268;

	[Token(Token = "0x4000F8F")]
	public const int AKCOMPANYID_KROTOS = 269;

	[Token(Token = "0x4000F90")]
	public const int AKCOMPANYID_NURULIZE = 270;

	[Token(Token = "0x4000F91")]
	public const int AKCOMPANYID_SUPERPOWERED = 271;

	[Token(Token = "0x4000F92")]
	public const int AKCOMPANYID_GOOGLE = 272;

	[Token(Token = "0x4000F93")]
	public const int AKCOMPANYID_VISISONICS = 277;

	[Token(Token = "0x4000F94")]
	public const int AKCODECID_BANK = 0;

	[Token(Token = "0x4000F95")]
	public const int AKCODECID_PCM = 1;

	[Token(Token = "0x4000F96")]
	public const int AKCODECID_ADPCM = 2;

	[Token(Token = "0x4000F97")]
	public const int AKCODECID_XMA = 3;

	[Token(Token = "0x4000F98")]
	public const int AKCODECID_VORBIS = 4;

	[Token(Token = "0x4000F99")]
	public const int AKCODECID_WIIADPCM = 5;

	[Token(Token = "0x4000F9A")]
	public const int AKCODECID_PCMEX = 7;

	[Token(Token = "0x4000F9B")]
	public const int AKCODECID_EXTERNAL_SOURCE = 8;

	[Token(Token = "0x4000F9C")]
	public const int AKCODECID_XWMA = 9;

	[Token(Token = "0x4000F9D")]
	public const int AKCODECID_AAC = 10;

	[Token(Token = "0x4000F9E")]
	public const int AKCODECID_FILE_PACKAGE = 11;

	[Token(Token = "0x4000F9F")]
	public const int AKCODECID_ATRAC9 = 12;

	[Token(Token = "0x4000FA0")]
	public const int AKCODECID_VAG = 13;

	[Token(Token = "0x4000FA1")]
	public const int AKCODECID_PROFILERCAPTURE = 14;

	[Token(Token = "0x4000FA2")]
	public const int AKCODECID_ANALYSISFILE = 15;

	[Token(Token = "0x4000FA3")]
	public const int AKCODECID_MIDI = 16;

	[Token(Token = "0x4000FA4")]
	public const int AKCODECID_OPUSNX = 17;

	[Token(Token = "0x4000FA5")]
	public const int AKCODECID_CAF = 18;

	[Token(Token = "0x4000FA6")]
	public const int AKCODECID_AKOPUS = 19;

	[Token(Token = "0x4000FA7")]
	public const int AKPLUGINID_METER = 129;

	[Token(Token = "0x4000FA8")]
	public const int AKPLUGINID_RECORDER = 132;

	[Token(Token = "0x4000FA9")]
	public const int AKEXTENSIONID_SPATIALAUDIO = 800;

	[Token(Token = "0x4000FAA")]
	public const int AKEXTENSIONID_INTERACTIVEMUSIC = 801;

	[Token(Token = "0x4000FAB")]
	public const int AKEXTENSIONID_EVENTMGRTHREAD = 900;

	[Token(Token = "0x4000FAC")]
	public const int AK_WAVE_FORMAT_VAG = 65531;

	[Token(Token = "0x4000FAD")]
	public const int AK_WAVE_FORMAT_AT9 = 65532;

	[Token(Token = "0x4000FAE")]
	public const int AK_WAVE_FORMAT_VORBIS = 65535;

	[Token(Token = "0x4000FAF")]
	public const int AK_WAVE_FORMAT_AAC = 43712;

	[Token(Token = "0x4000FB0")]
	public const int AK_WAVE_FORMAT_OPUSNX = 12345;

	[Token(Token = "0x4000FB1")]
	public const int AK_WAVE_FORMAT_OPUS = 12352;

	[Token(Token = "0x4000FB2")]
	public const int WAVE_FORMAT_XMA2 = 358;

	[Token(Token = "0x4000FB3")]
	public const int AK_PANNER_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000FB4")]
	public const int AK_POSSOURCE_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000FB5")]
	public const int AK_SPAT_NUM_STORAGE_BITS = 3;

	[Token(Token = "0x4000FB6")]
	public const int AK_MAX_BITS_METERING_FLAGS = 5;

	[Token(Token = "0x4000FB7")]
	public const int AK_OS_STRUCT_ALIGN = 4;

	[Token(Token = "0x4000FB8")]
	public const int AK_64B_OS_STRUCT_ALIGN = 8;

	[Token(Token = "0x4000FB9")]
	public const bool AK_ASYNC_OPEN_DEFAULT = false;

	[Token(Token = "0x4000FBA")]
	public const int AK_COMM_DEFAULT_DISCOVERY_PORT = 24024;

	[Token(Token = "0x4000FBB")]
	public const int AK_MIDI_EVENT_TYPE_INVALID = 0;

	[Token(Token = "0x4000FBC")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_OFF = 128;

	[Token(Token = "0x4000FBD")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_ON = 144;

	[Token(Token = "0x4000FBE")]
	public const int AK_MIDI_EVENT_TYPE_NOTE_AFTERTOUCH = 160;

	[Token(Token = "0x4000FBF")]
	public const int AK_MIDI_EVENT_TYPE_CONTROLLER = 176;

	[Token(Token = "0x4000FC0")]
	public const int AK_MIDI_EVENT_TYPE_PROGRAM_CHANGE = 192;

	[Token(Token = "0x4000FC1")]
	public const int AK_MIDI_EVENT_TYPE_CHANNEL_AFTERTOUCH = 208;

	[Token(Token = "0x4000FC2")]
	public const int AK_MIDI_EVENT_TYPE_PITCH_BEND = 224;

	[Token(Token = "0x4000FC3")]
	public const int AK_MIDI_EVENT_TYPE_SYSEX = 240;

	[Token(Token = "0x4000FC4")]
	public const int AK_MIDI_EVENT_TYPE_ESCAPE = 247;

	[Token(Token = "0x4000FC5")]
	public const int AK_MIDI_EVENT_TYPE_META = 255;

	[Token(Token = "0x4000FC6")]
	public const int AK_MIDI_CC_BANK_SELECT_COARSE = 0;

	[Token(Token = "0x4000FC7")]
	public const int AK_MIDI_CC_MOD_WHEEL_COARSE = 1;

	[Token(Token = "0x4000FC8")]
	public const int AK_MIDI_CC_BREATH_CTRL_COARSE = 2;

	[Token(Token = "0x4000FC9")]
	public const int AK_MIDI_CC_CTRL_3_COARSE = 3;

	[Token(Token = "0x4000FCA")]
	public const int AK_MIDI_CC_FOOT_PEDAL_COARSE = 4;

	[Token(Token = "0x4000FCB")]
	public const int AK_MIDI_CC_PORTAMENTO_COARSE = 5;

	[Token(Token = "0x4000FCC")]
	public const int AK_MIDI_CC_DATA_ENTRY_COARSE = 6;

	[Token(Token = "0x4000FCD")]
	public const int AK_MIDI_CC_VOLUME_COARSE = 7;

	[Token(Token = "0x4000FCE")]
	public const int AK_MIDI_CC_BALANCE_COARSE = 8;

	[Token(Token = "0x4000FCF")]
	public const int AK_MIDI_CC_CTRL_9_COARSE = 9;

	[Token(Token = "0x4000FD0")]
	public const int AK_MIDI_CC_PAN_POSITION_COARSE = 10;

	[Token(Token = "0x4000FD1")]
	public const int AK_MIDI_CC_EXPRESSION_COARSE = 11;

	[Token(Token = "0x4000FD2")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_COARSE = 12;

	[Token(Token = "0x4000FD3")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_COARSE = 13;

	[Token(Token = "0x4000FD4")]
	public const int AK_MIDI_CC_CTRL_14_COARSE = 14;

	[Token(Token = "0x4000FD5")]
	public const int AK_MIDI_CC_CTRL_15_COARSE = 15;

	[Token(Token = "0x4000FD6")]
	public const int AK_MIDI_CC_GEN_SLIDER_1 = 16;

	[Token(Token = "0x4000FD7")]
	public const int AK_MIDI_CC_GEN_SLIDER_2 = 17;

	[Token(Token = "0x4000FD8")]
	public const int AK_MIDI_CC_GEN_SLIDER_3 = 18;

	[Token(Token = "0x4000FD9")]
	public const int AK_MIDI_CC_GEN_SLIDER_4 = 19;

	[Token(Token = "0x4000FDA")]
	public const int AK_MIDI_CC_CTRL_20_COARSE = 20;

	[Token(Token = "0x4000FDB")]
	public const int AK_MIDI_CC_CTRL_21_COARSE = 21;

	[Token(Token = "0x4000FDC")]
	public const int AK_MIDI_CC_CTRL_22_COARSE = 22;

	[Token(Token = "0x4000FDD")]
	public const int AK_MIDI_CC_CTRL_23_COARSE = 23;

	[Token(Token = "0x4000FDE")]
	public const int AK_MIDI_CC_CTRL_24_COARSE = 24;

	[Token(Token = "0x4000FDF")]
	public const int AK_MIDI_CC_CTRL_25_COARSE = 25;

	[Token(Token = "0x4000FE0")]
	public const int AK_MIDI_CC_CTRL_26_COARSE = 26;

	[Token(Token = "0x4000FE1")]
	public const int AK_MIDI_CC_CTRL_27_COARSE = 27;

	[Token(Token = "0x4000FE2")]
	public const int AK_MIDI_CC_CTRL_28_COARSE = 28;

	[Token(Token = "0x4000FE3")]
	public const int AK_MIDI_CC_CTRL_29_COARSE = 29;

	[Token(Token = "0x4000FE4")]
	public const int AK_MIDI_CC_CTRL_30_COARSE = 30;

	[Token(Token = "0x4000FE5")]
	public const int AK_MIDI_CC_CTRL_31_COARSE = 31;

	[Token(Token = "0x4000FE6")]
	public const int AK_MIDI_CC_BANK_SELECT_FINE = 32;

	[Token(Token = "0x4000FE7")]
	public const int AK_MIDI_CC_MOD_WHEEL_FINE = 33;

	[Token(Token = "0x4000FE8")]
	public const int AK_MIDI_CC_BREATH_CTRL_FINE = 34;

	[Token(Token = "0x4000FE9")]
	public const int AK_MIDI_CC_CTRL_3_FINE = 35;

	[Token(Token = "0x4000FEA")]
	public const int AK_MIDI_CC_FOOT_PEDAL_FINE = 36;

	[Token(Token = "0x4000FEB")]
	public const int AK_MIDI_CC_PORTAMENTO_FINE = 37;

	[Token(Token = "0x4000FEC")]
	public const int AK_MIDI_CC_DATA_ENTRY_FINE = 38;

	[Token(Token = "0x4000FED")]
	public const int AK_MIDI_CC_VOLUME_FINE = 39;

	[Token(Token = "0x4000FEE")]
	public const int AK_MIDI_CC_BALANCE_FINE = 40;

	[Token(Token = "0x4000FEF")]
	public const int AK_MIDI_CC_CTRL_9_FINE = 41;

	[Token(Token = "0x4000FF0")]
	public const int AK_MIDI_CC_PAN_POSITION_FINE = 42;

	[Token(Token = "0x4000FF1")]
	public const int AK_MIDI_CC_EXPRESSION_FINE = 43;

	[Token(Token = "0x4000FF2")]
	public const int AK_MIDI_CC_EFFECT_CTRL_1_FINE = 44;

	[Token(Token = "0x4000FF3")]
	public const int AK_MIDI_CC_EFFECT_CTRL_2_FINE = 45;

	[Token(Token = "0x4000FF4")]
	public const int AK_MIDI_CC_CTRL_14_FINE = 46;

	[Token(Token = "0x4000FF5")]
	public const int AK_MIDI_CC_CTRL_15_FINE = 47;

	[Token(Token = "0x4000FF6")]
	public const int AK_MIDI_CC_CTRL_20_FINE = 52;

	[Token(Token = "0x4000FF7")]
	public const int AK_MIDI_CC_CTRL_21_FINE = 53;

	[Token(Token = "0x4000FF8")]
	public const int AK_MIDI_CC_CTRL_22_FINE = 54;

	[Token(Token = "0x4000FF9")]
	public const int AK_MIDI_CC_CTRL_23_FINE = 55;

	[Token(Token = "0x4000FFA")]
	public const int AK_MIDI_CC_CTRL_24_FINE = 56;

	[Token(Token = "0x4000FFB")]
	public const int AK_MIDI_CC_CTRL_25_FINE = 57;

	[Token(Token = "0x4000FFC")]
	public const int AK_MIDI_CC_CTRL_26_FINE = 58;

	[Token(Token = "0x4000FFD")]
	public const int AK_MIDI_CC_CTRL_27_FINE = 59;

	[Token(Token = "0x4000FFE")]
	public const int AK_MIDI_CC_CTRL_28_FINE = 60;

	[Token(Token = "0x4000FFF")]
	public const int AK_MIDI_CC_CTRL_29_FINE = 61;

	[Token(Token = "0x4001000")]
	public const int AK_MIDI_CC_CTRL_30_FINE = 62;

	[Token(Token = "0x4001001")]
	public const int AK_MIDI_CC_CTRL_31_FINE = 63;

	[Token(Token = "0x4001002")]
	public const int AK_MIDI_CC_HOLD_PEDAL = 64;

	[Token(Token = "0x4001003")]
	public const int AK_MIDI_CC_PORTAMENTO_ON_OFF = 65;

	[Token(Token = "0x4001004")]
	public const int AK_MIDI_CC_SUSTENUTO_PEDAL = 66;

	[Token(Token = "0x4001005")]
	public const int AK_MIDI_CC_SOFT_PEDAL = 67;

	[Token(Token = "0x4001006")]
	public const int AK_MIDI_CC_LEGATO_PEDAL = 68;

	[Token(Token = "0x4001007")]
	public const int AK_MIDI_CC_HOLD_PEDAL_2 = 69;

	[Token(Token = "0x4001008")]
	public const int AK_MIDI_CC_SOUND_VARIATION = 70;

	[Token(Token = "0x4001009")]
	public const int AK_MIDI_CC_SOUND_TIMBRE = 71;

	[Token(Token = "0x400100A")]
	public const int AK_MIDI_CC_SOUND_RELEASE_TIME = 72;

	[Token(Token = "0x400100B")]
	public const int AK_MIDI_CC_SOUND_ATTACK_TIME = 73;

	[Token(Token = "0x400100C")]
	public const int AK_MIDI_CC_SOUND_BRIGHTNESS = 74;

	[Token(Token = "0x400100D")]
	public const int AK_MIDI_CC_SOUND_CTRL_6 = 75;

	[Token(Token = "0x400100E")]
	public const int AK_MIDI_CC_SOUND_CTRL_7 = 76;

	[Token(Token = "0x400100F")]
	public const int AK_MIDI_CC_SOUND_CTRL_8 = 77;

	[Token(Token = "0x4001010")]
	public const int AK_MIDI_CC_SOUND_CTRL_9 = 78;

	[Token(Token = "0x4001011")]
	public const int AK_MIDI_CC_SOUND_CTRL_10 = 79;

	[Token(Token = "0x4001012")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_1 = 80;

	[Token(Token = "0x4001013")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_2 = 81;

	[Token(Token = "0x4001014")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_3 = 82;

	[Token(Token = "0x4001015")]
	public const int AK_MIDI_CC_GENERAL_BUTTON_4 = 83;

	[Token(Token = "0x4001016")]
	public const int AK_MIDI_CC_REVERB_LEVEL = 91;

	[Token(Token = "0x4001017")]
	public const int AK_MIDI_CC_TREMOLO_LEVEL = 92;

	[Token(Token = "0x4001018")]
	public const int AK_MIDI_CC_CHORUS_LEVEL = 93;

	[Token(Token = "0x4001019")]
	public const int AK_MIDI_CC_CELESTE_LEVEL = 94;

	[Token(Token = "0x400101A")]
	public const int AK_MIDI_CC_PHASER_LEVEL = 95;

	[Token(Token = "0x400101B")]
	public const int AK_MIDI_CC_DATA_BUTTON_P1 = 96;

	[Token(Token = "0x400101C")]
	public const int AK_MIDI_CC_DATA_BUTTON_M1 = 97;

	[Token(Token = "0x400101D")]
	public const int AK_MIDI_CC_NON_REGISTER_COARSE = 98;

	[Token(Token = "0x400101E")]
	public const int AK_MIDI_CC_NON_REGISTER_FINE = 99;

	[Token(Token = "0x400101F")]
	public const int AK_MIDI_CC_ALL_SOUND_OFF = 120;

	[Token(Token = "0x4001020")]
	public const int AK_MIDI_CC_ALL_CONTROLLERS_OFF = 121;

	[Token(Token = "0x4001021")]
	public const int AK_MIDI_CC_LOCAL_KEYBOARD = 122;

	[Token(Token = "0x4001022")]
	public const int AK_MIDI_CC_ALL_NOTES_OFF = 123;

	[Token(Token = "0x4001023")]
	public const int AK_MIDI_CC_OMNI_MODE_OFF = 124;

	[Token(Token = "0x4001024")]
	public const int AK_MIDI_CC_OMNI_MODE_ON = 125;

	[Token(Token = "0x4001025")]
	public const int AK_MIDI_CC_OMNI_MONOPHONIC_ON = 126;

	[Token(Token = "0x4001026")]
	public const int AK_MIDI_CC_OMNI_POLYPHONIC_ON = 127;

	[Token(Token = "0x4001027")]
	public const int AK_SPEAKER_FRONT_LEFT = 1;

	[Token(Token = "0x4001028")]
	public const int AK_SPEAKER_FRONT_RIGHT = 2;

	[Token(Token = "0x4001029")]
	public const int AK_SPEAKER_FRONT_CENTER = 4;

	[Token(Token = "0x400102A")]
	public const int AK_SPEAKER_LOW_FREQUENCY = 8;

	[Token(Token = "0x400102B")]
	public const int AK_SPEAKER_BACK_LEFT = 16;

	[Token(Token = "0x400102C")]
	public const int AK_SPEAKER_BACK_RIGHT = 32;

	[Token(Token = "0x400102D")]
	public const int AK_SPEAKER_BACK_CENTER = 256;

	[Token(Token = "0x400102E")]
	public const int AK_SPEAKER_SIDE_LEFT = 512;

	[Token(Token = "0x400102F")]
	public const int AK_SPEAKER_SIDE_RIGHT = 1024;

	[Token(Token = "0x4001030")]
	public const int AK_SPEAKER_TOP = 2048;

	[Token(Token = "0x4001031")]
	public const int AK_SPEAKER_HEIGHT_FRONT_LEFT = 4096;

	[Token(Token = "0x4001032")]
	public const int AK_SPEAKER_HEIGHT_FRONT_CENTER = 8192;

	[Token(Token = "0x4001033")]
	public const int AK_SPEAKER_HEIGHT_FRONT_RIGHT = 16384;

	[Token(Token = "0x4001034")]
	public const int AK_SPEAKER_HEIGHT_BACK_LEFT = 32768;

	[Token(Token = "0x4001035")]
	public const int AK_SPEAKER_HEIGHT_BACK_CENTER = 65536;

	[Token(Token = "0x4001036")]
	public const int AK_SPEAKER_HEIGHT_BACK_RIGHT = 131072;

	[Token(Token = "0x4001037")]
	public const int AK_SPEAKER_SETUP_MONO = 4;

	[Token(Token = "0x4001038")]
	public const int AK_SPEAKER_SETUP_0POINT1 = 8;

	[Token(Token = "0x4001039")]
	public const int AK_SPEAKER_SETUP_1POINT1 = 12;

	[Token(Token = "0x400103A")]
	public const int AK_SPEAKER_SETUP_STEREO = 3;

	[Token(Token = "0x400103B")]
	public const int AK_SPEAKER_SETUP_2POINT1 = 11;

	[Token(Token = "0x400103C")]
	public const int AK_SPEAKER_SETUP_3STEREO = 7;

	[Token(Token = "0x400103D")]
	public const int AK_SPEAKER_SETUP_3POINT1 = 15;

	[Token(Token = "0x400103E")]
	public const int AK_SPEAKER_SETUP_4 = 1539;

	[Token(Token = "0x400103F")]
	public const int AK_SPEAKER_SETUP_4POINT1 = 1547;

	[Token(Token = "0x4001040")]
	public const int AK_SPEAKER_SETUP_5 = 1543;

	[Token(Token = "0x4001041")]
	public const int AK_SPEAKER_SETUP_5POINT1 = 1551;

	[Token(Token = "0x4001042")]
	public const int AK_SPEAKER_SETUP_6 = 1587;

	[Token(Token = "0x4001043")]
	public const int AK_SPEAKER_SETUP_6POINT1 = 1595;

	[Token(Token = "0x4001044")]
	public const int AK_SPEAKER_SETUP_7 = 1591;

	[Token(Token = "0x4001045")]
	public const int AK_SPEAKER_SETUP_7POINT1 = 1599;

	[Token(Token = "0x4001046")]
	public const int AK_SPEAKER_SETUP_SURROUND = 259;

	[Token(Token = "0x4001047")]
	public const int AK_SPEAKER_SETUP_DPL2 = 1539;

	[Token(Token = "0x4001048")]
	public const int AK_SPEAKER_SETUP_HEIGHT_4 = 184320;

	[Token(Token = "0x4001049")]
	public const int AK_SPEAKER_SETUP_HEIGHT_5 = 192512;

	[Token(Token = "0x400104A")]
	public const int AK_SPEAKER_SETUP_HEIGHT_ALL = 258048;

	[Token(Token = "0x400104B")]
	public const int AK_SPEAKER_SETUP_AURO_222 = 22019;

	[Token(Token = "0x400104C")]
	public const int AK_SPEAKER_SETUP_AURO_8 = 185859;

	[Token(Token = "0x400104D")]
	public const int AK_SPEAKER_SETUP_AURO_9 = 185863;

	[Token(Token = "0x400104E")]
	public const int AK_SPEAKER_SETUP_AURO_9POINT1 = 185871;

	[Token(Token = "0x400104F")]
	public const int AK_SPEAKER_SETUP_AURO_10 = 187911;

	[Token(Token = "0x4001050")]
	public const int AK_SPEAKER_SETUP_AURO_10POINT1 = 187919;

	[Token(Token = "0x4001051")]
	public const int AK_SPEAKER_SETUP_AURO_11 = 196103;

	[Token(Token = "0x4001052")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1 = 196111;

	[Token(Token = "0x4001053")]
	public const int AK_SPEAKER_SETUP_AURO_11_740 = 185911;

	[Token(Token = "0x4001054")]
	public const int AK_SPEAKER_SETUP_AURO_11POINT1_740 = 185919;

	[Token(Token = "0x4001055")]
	public const int AK_SPEAKER_SETUP_AURO_13_751 = 196151;

	[Token(Token = "0x4001056")]
	public const int AK_SPEAKER_SETUP_AURO_13POINT1_751 = 196159;

	[Token(Token = "0x4001057")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_0_2 = 22023;

	[Token(Token = "0x4001058")]
	public const int AK_SPEAKER_SETUP_DOLBY_5_1_2 = 22031;

	[Token(Token = "0x4001059")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_2 = 22067;

	[Token(Token = "0x400105A")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_2 = 22075;

	[Token(Token = "0x400105B")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_0_4 = 185907;

	[Token(Token = "0x400105C")]
	public const int AK_SPEAKER_SETUP_DOLBY_6_1_4 = 185915;

	[Token(Token = "0x400105D")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_2 = 22071;

	[Token(Token = "0x400105E")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_2 = 22079;

	[Token(Token = "0x400105F")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_0_4 = 185911;

	[Token(Token = "0x4001060")]
	public const int AK_SPEAKER_SETUP_DOLBY_7_1_4 = 185919;

	[Token(Token = "0x4001061")]
	public const int AK_SPEAKER_SETUP_ALL_SPEAKERS = 261951;

	[Token(Token = "0x4001062")]
	public const int AK_IDX_SETUP_FRONT_LEFT = 0;

	[Token(Token = "0x4001063")]
	public const int AK_IDX_SETUP_FRONT_RIGHT = 1;

	[Token(Token = "0x4001064")]
	public const int AK_IDX_SETUP_CENTER = 2;

	[Token(Token = "0x4001065")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_LEFT = 2;

	[Token(Token = "0x4001066")]
	public const int AK_IDX_SETUP_NOCENTER_BACK_RIGHT = 3;

	[Token(Token = "0x4001067")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_LEFT = 4;

	[Token(Token = "0x4001068")]
	public const int AK_IDX_SETUP_NOCENTER_SIDE_RIGHT = 5;

	[Token(Token = "0x4001069")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_LEFT = 3;

	[Token(Token = "0x400106A")]
	public const int AK_IDX_SETUP_WITHCENTER_BACK_RIGHT = 4;

	[Token(Token = "0x400106B")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_LEFT = 5;

	[Token(Token = "0x400106C")]
	public const int AK_IDX_SETUP_WITHCENTER_SIDE_RIGHT = 6;

	[Token(Token = "0x400106D")]
	public const int AK_IDX_SETUP_0_LFE = 0;

	[Token(Token = "0x400106E")]
	public const int AK_IDX_SETUP_1_CENTER = 0;

	[Token(Token = "0x400106F")]
	public const int AK_IDX_SETUP_1_LFE = 1;

	[Token(Token = "0x4001070")]
	public const int AK_IDX_SETUP_2_LEFT = 0;

	[Token(Token = "0x4001071")]
	public const int AK_IDX_SETUP_2_RIGHT = 1;

	[Token(Token = "0x4001072")]
	public const int AK_IDX_SETUP_2_LFE = 2;

	[Token(Token = "0x4001073")]
	public const int AK_IDX_SETUP_3_LEFT = 0;

	[Token(Token = "0x4001074")]
	public const int AK_IDX_SETUP_3_RIGHT = 1;

	[Token(Token = "0x4001075")]
	public const int AK_IDX_SETUP_3_CENTER = 2;

	[Token(Token = "0x4001076")]
	public const int AK_IDX_SETUP_3_LFE = 3;

	[Token(Token = "0x4001077")]
	public const int AK_IDX_SETUP_4_FRONTLEFT = 0;

	[Token(Token = "0x4001078")]
	public const int AK_IDX_SETUP_4_FRONTRIGHT = 1;

	[Token(Token = "0x4001079")]
	public const int AK_IDX_SETUP_4_REARLEFT = 2;

	[Token(Token = "0x400107A")]
	public const int AK_IDX_SETUP_4_REARRIGHT = 3;

	[Token(Token = "0x400107B")]
	public const int AK_IDX_SETUP_4_LFE = 4;

	[Token(Token = "0x400107C")]
	public const int AK_IDX_SETUP_5_FRONTLEFT = 0;

	[Token(Token = "0x400107D")]
	public const int AK_IDX_SETUP_5_FRONTRIGHT = 1;

	[Token(Token = "0x400107E")]
	public const int AK_IDX_SETUP_5_CENTER = 2;

	[Token(Token = "0x400107F")]
	public const int AK_IDX_SETUP_5_REARLEFT = 3;

	[Token(Token = "0x4001080")]
	public const int AK_IDX_SETUP_5_REARRIGHT = 4;

	[Token(Token = "0x4001081")]
	public const int AK_IDX_SETUP_5_LFE = 5;

	[Token(Token = "0x4001082")]
	public const int AK_IDX_SETUP_6_FRONTLEFT = 0;

	[Token(Token = "0x4001083")]
	public const int AK_IDX_SETUP_6_FRONTRIGHT = 1;

	[Token(Token = "0x4001084")]
	public const int AK_IDX_SETUP_6_REARLEFT = 2;

	[Token(Token = "0x4001085")]
	public const int AK_IDX_SETUP_6_REARRIGHT = 3;

	[Token(Token = "0x4001086")]
	public const int AK_IDX_SETUP_6_SIDELEFT = 4;

	[Token(Token = "0x4001087")]
	public const int AK_IDX_SETUP_6_SIDERIGHT = 5;

	[Token(Token = "0x4001088")]
	public const int AK_IDX_SETUP_6_LFE = 6;

	[Token(Token = "0x4001089")]
	public const int AK_IDX_SETUP_7_FRONTLEFT = 0;

	[Token(Token = "0x400108A")]
	public const int AK_IDX_SETUP_7_FRONTRIGHT = 1;

	[Token(Token = "0x400108B")]
	public const int AK_IDX_SETUP_7_CENTER = 2;

	[Token(Token = "0x400108C")]
	public const int AK_IDX_SETUP_7_REARLEFT = 3;

	[Token(Token = "0x400108D")]
	public const int AK_IDX_SETUP_7_REARRIGHT = 4;

	[Token(Token = "0x400108E")]
	public const int AK_IDX_SETUP_7_SIDELEFT = 5;

	[Token(Token = "0x400108F")]
	public const int AK_IDX_SETUP_7_SIDERIGHT = 6;

	[Token(Token = "0x4001090")]
	public const int AK_IDX_SETUP_7_LFE = 7;

	[Token(Token = "0x4001091")]
	public const int AK_SPEAKER_SETUP_0_1 = 8;

	[Token(Token = "0x4001092")]
	public const int AK_SPEAKER_SETUP_1_0_CENTER = 4;

	[Token(Token = "0x4001093")]
	public const int AK_SPEAKER_SETUP_1_1_CENTER = 12;

	[Token(Token = "0x4001094")]
	public const int AK_SPEAKER_SETUP_2_0 = 3;

	[Token(Token = "0x4001095")]
	public const int AK_SPEAKER_SETUP_2_1 = 11;

	[Token(Token = "0x4001096")]
	public const int AK_SPEAKER_SETUP_3_0 = 7;

	[Token(Token = "0x4001097")]
	public const int AK_SPEAKER_SETUP_3_1 = 15;

	[Token(Token = "0x4001098")]
	public const int AK_SPEAKER_SETUP_FRONT = 7;

	[Token(Token = "0x4001099")]
	public const int AK_SPEAKER_SETUP_4_0 = 1539;

	[Token(Token = "0x400109A")]
	public const int AK_SPEAKER_SETUP_4_1 = 1547;

	[Token(Token = "0x400109B")]
	public const int AK_SPEAKER_SETUP_5_0 = 1543;

	[Token(Token = "0x400109C")]
	public const int AK_SPEAKER_SETUP_5_1 = 1551;

	[Token(Token = "0x400109D")]
	public const int AK_SPEAKER_SETUP_6_0 = 1587;

	[Token(Token = "0x400109E")]
	public const int AK_SPEAKER_SETUP_6_1 = 1595;

	[Token(Token = "0x400109F")]
	public const int AK_SPEAKER_SETUP_7_0 = 1591;

	[Token(Token = "0x40010A0")]
	public const int AK_SPEAKER_SETUP_7_1 = 1599;

	[Token(Token = "0x40010A1")]
	public const int AK_SPEAKER_SETUP_DEFAULT_PLANE = 1599;

	[Token(Token = "0x40010A2")]
	public const int AK_SUPPORTED_STANDARD_CHANNEL_MASK = 261951;

	[Token(Token = "0x40010A3")]
	public const int AK_STANDARD_MAX_NUM_CHANNELS = 8;

	[Token(Token = "0x40010A4")]
	public const int AK_NUM_SAMPLED_SPHERE_POINTS = 32;

	[Token(Token = "0x40010A5")]
	public const int AK_MAX_NUM_TEXTURE = 4;

	[Token(Token = "0x40010A6")]
	public const int AK_MAX_REFLECT_ORDER = 4;

	[Token(Token = "0x40010A7")]
	public const int AK_MAX_REFLECTION_PATH_LENGTH = 6;

	[Token(Token = "0x40010A8")]
	public const int AK_MAX_SOUND_PROPAGATION_DEPTH = 8;

	[Token(Token = "0x40010A9")]
	public const double AK_DEFAULT_DIFFR_SHADOW_DEGREES = 30.0;

	[Token(Token = "0x40010AA")]
	public const double AK_DEFAULT_DIFFR_SHADOW_ATTEN = 2.0;

	[Token(Token = "0x40010AB")]
	public const double AK_DEFAULT_MOVEMENT_THRESHOLD = 1.0;

	[Token(Token = "0x40010AC")]
	public const double AK_SA_EPSILON = 0.001;

	[Token(Token = "0x40010AD")]
	public const double AK_SA_DIFFRACTION_EPSILON = 0.1;

	[Token(Token = "0x40010AE")]
	public const double AK_SA_PLANE_THICKNESS_RATIO = 0.005;

	[Token(Token = "0x40010AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static GameObjectHashFunction gameObjectHash;

	[Token(Token = "0x40010B0")]
	public const string Deprecation_2018_1_2 = "This functionality is deprecated as of Wwise v2018.1.2 and will be removed in a future release.";

	[Token(Token = "0x40010B1")]
	public const string Deprecation_2018_1_6 = "This functionality is deprecated as of Wwise v2018.1.6 and will be removed in a future release.";

	[Token(Token = "0x40010B2")]
	public const string Deprecation_2019_1_1 = "This functionality is deprecated as of Wwise v2019.1.1 and will be removed in a future release.";

	[Token(Token = "0x40010B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly HashSet<ulong> RegisteredGameObjects;

	[Token(Token = "0x17000068")]
	public static uint AK_SOUNDBANK_VERSION
	{
		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x11D5B18", Offset = "0x11D5B18", VA = "0x11D5B18")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000069")]
	public static ushort AK_INT
	{
		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x11D5BE8", Offset = "0x11D5BE8", VA = "0x11D5BE8")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x1700006A")]
	public static ushort AK_FLOAT
	{
		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x11D5CB8", Offset = "0x11D5CB8", VA = "0x11D5CB8")]
		get
		{
			return default(ushort);
		}
	}

	[Token(Token = "0x1700006B")]
	public static byte AK_INTERLEAVED
	{
		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x11D5D88", Offset = "0x11D5D88", VA = "0x11D5D88")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700006C")]
	public static byte AK_NONINTERLEAVED
	{
		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x11D5E58", Offset = "0x11D5E58", VA = "0x11D5E58")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x1700006D")]
	public static uint AK_LE_NATIVE_BITSPERSAMPLE
	{
		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x11D5F28", Offset = "0x11D5F28", VA = "0x11D5F28")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700006E")]
	public static uint AK_LE_NATIVE_SAMPLETYPE
	{
		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x11D5FF8", Offset = "0x11D5FF8", VA = "0x11D5FF8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700006F")]
	public static uint AK_LE_NATIVE_INTERLEAVE
	{
		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x11D60C8", Offset = "0x11D60C8", VA = "0x11D60C8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000070")]
	public static byte AK_INVALID_MIDI_CHANNEL
	{
		[Token(Token = "0x600105B")]
		[Address(RVA = "0x11E6B38", Offset = "0x11E6B38", VA = "0x11E6B38")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000071")]
	public static byte AK_INVALID_MIDI_NOTE
	{
		[Token(Token = "0x600105C")]
		[Address(RVA = "0x11E6C08", Offset = "0x11E6C08", VA = "0x11E6C08")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000072")]
	public static float kDefaultMaxPathLength
	{
		[Token(Token = "0x6001091")]
		[Address(RVA = "0x11EA968", Offset = "0x11EA968", VA = "0x11EA968")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000073")]
	public static uint kDefaultDiffractionMaxEdges
	{
		[Token(Token = "0x6001092")]
		[Address(RVA = "0x11EAA34", Offset = "0x11EAA34", VA = "0x11EAA34")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000074")]
	public static uint kDefaultDiffractionMaxPaths
	{
		[Token(Token = "0x6001093")]
		[Address(RVA = "0x11EAB04", Offset = "0x11EAB04", VA = "0x11EAB04")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000075")]
	public static float kMaxDiffraction
	{
		[Token(Token = "0x6001094")]
		[Address(RVA = "0x11EABD4", Offset = "0x11EABD4", VA = "0x11EABD4")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000076")]
	public static uint kListenerDiffractionMaxEdges
	{
		[Token(Token = "0x6001095")]
		[Address(RVA = "0x11EACA0", Offset = "0x11EACA0", VA = "0x11EACA0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000077")]
	public static uint kListenerDiffractionMaxPaths
	{
		[Token(Token = "0x6001096")]
		[Address(RVA = "0x11EAD70", Offset = "0x11EAD70", VA = "0x11EAD70")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000078")]
	public static uint kPortalToPortalDiffractionMaxPaths
	{
		[Token(Token = "0x6001097")]
		[Address(RVA = "0x11EAE40", Offset = "0x11EAE40", VA = "0x11EAE40")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000079")]
	public static int g_SpatialAudioPoolId
	{
		[Token(Token = "0x6001099")]
		[Address(RVA = "0x11EAFF4", Offset = "0x11EAFF4", VA = "0x11EAFF4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001098")]
		[Address(RVA = "0x11EAF10", Offset = "0x11EAF10", VA = "0x11EAF10")]
		set
		{
		}
	}

	[Token(Token = "0x1700007A")]
	public static GameObjectHashFunction GameObjectHash
	{
		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x11EF38C", Offset = "0x11EF38C", VA = "0x11EF38C")]
		set
		{
		}
	}

	[Token(Token = "0x6000F8B")]
	[Address(RVA = "0x11D6198", Offset = "0x11D6198", VA = "0x11D6198")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, AkDynamicSequenceType in_eDynamicSequenceType)
	{
		return default(uint);
	}

	[Token(Token = "0x6000F8C")]
	[Address(RVA = "0x11D6498", Offset = "0x11D6498", VA = "0x11D6498")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000F8D")]
	[Address(RVA = "0x11D669C", Offset = "0x11D669C", VA = "0x11D669C")]
	public static uint DynamicSequenceOpen(GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000F8E")]
	[Address(RVA = "0x11D67F4", Offset = "0x11D67F4", VA = "0x11D67F4")]
	public static AKRESULT DynamicSequenceClose(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F8F")]
	[Address(RVA = "0x11D68D8", Offset = "0x11D68D8", VA = "0x11D68D8")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F90")]
	[Address(RVA = "0x11D69EC", Offset = "0x11D69EC", VA = "0x11D69EC")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F91")]
	[Address(RVA = "0x11D6AF0", Offset = "0x11D6AF0", VA = "0x11D6AF0")]
	public static AKRESULT DynamicSequencePlay(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F92")]
	[Address(RVA = "0x11D6BD4", Offset = "0x11D6BD4", VA = "0x11D6BD4")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F93")]
	[Address(RVA = "0x11D6CE8", Offset = "0x11D6CE8", VA = "0x11D6CE8")]
	public static AKRESULT DynamicSequencePause(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F94")]
	[Address(RVA = "0x11D6DEC", Offset = "0x11D6DEC", VA = "0x11D6DEC")]
	public static AKRESULT DynamicSequencePause(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F95")]
	[Address(RVA = "0x11D6ED0", Offset = "0x11D6ED0", VA = "0x11D6ED0")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F96")]
	[Address(RVA = "0x11D6FE4", Offset = "0x11D6FE4", VA = "0x11D6FE4")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F97")]
	[Address(RVA = "0x11D70E8", Offset = "0x11D70E8", VA = "0x11D70E8")]
	public static AKRESULT DynamicSequenceResume(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F98")]
	[Address(RVA = "0x11D71CC", Offset = "0x11D71CC", VA = "0x11D71CC")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F99")]
	[Address(RVA = "0x11D72E0", Offset = "0x11D72E0", VA = "0x11D72E0")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F9A")]
	[Address(RVA = "0x11D73E4", Offset = "0x11D73E4", VA = "0x11D73E4")]
	public static AKRESULT DynamicSequenceStop(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F9B")]
	[Address(RVA = "0x11D74C8", Offset = "0x11D74C8", VA = "0x11D74C8")]
	public static AKRESULT DynamicSequenceBreak(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F9C")]
	[Address(RVA = "0x11D75AC", Offset = "0x11D75AC", VA = "0x11D75AC")]
	public static AKRESULT DynamicSequenceGetPauseTimes(uint in_playingID, out uint out_uTime, out uint out_uDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F9D")]
	[Address(RVA = "0x11D76C0", Offset = "0x11D76C0", VA = "0x11D76C0")]
	public static AkPlaylist DynamicSequenceLockPlaylist(uint in_playingID)
	{
		return null;
	}

	[Token(Token = "0x6000F9E")]
	[Address(RVA = "0x11D77E8", Offset = "0x11D77E8", VA = "0x11D77E8")]
	public static AKRESULT DynamicSequenceUnlockPlaylist(uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000F9F")]
	[Address(RVA = "0x11D78CC", Offset = "0x11D78CC", VA = "0x11D78CC")]
	public static bool IsInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FA0")]
	[Address(RVA = "0x11D79A4", Offset = "0x11D79A4", VA = "0x11D79A4")]
	public static AKRESULT GetAudioSettings(AkAudioSettings out_audioSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FA1")]
	[Address(RVA = "0x11D7A9C", Offset = "0x11D7A9C", VA = "0x11D7A9C")]
	public static AkChannelConfig GetSpeakerConfiguration(ulong in_idOutput)
	{
		return null;
	}

	[Token(Token = "0x6000FA2")]
	[Address(RVA = "0x11D7BB4", Offset = "0x11D7BB4", VA = "0x11D7BB4")]
	public static AkChannelConfig GetSpeakerConfiguration()
	{
		return null;
	}

	[Token(Token = "0x6000FA3")]
	[Address(RVA = "0x11D7CB8", Offset = "0x11D7CB8", VA = "0x11D7CB8")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FA4")]
	[Address(RVA = "0x11D7DBC", Offset = "0x11D7DBC", VA = "0x11D7DBC")]
	public static AKRESULT GetPanningRule(out int out_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FA5")]
	[Address(RVA = "0x11D7EA0", Offset = "0x11D7EA0", VA = "0x11D7EA0")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FA6")]
	[Address(RVA = "0x11D7FA4", Offset = "0x11D7FA4", VA = "0x11D7FA4")]
	public static AKRESULT SetPanningRule(AkPanningRule in_ePanningRule)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FA7")]
	[Address(RVA = "0x11D8088", Offset = "0x11D8088", VA = "0x11D8088")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FA8")]
	[Address(RVA = "0x11D81C4", Offset = "0x11D81C4", VA = "0x11D81C4")]
	public static AKRESULT GetSpeakerAngles(float[] io_pfSpeakerAngles, ref uint io_uNumAngles, out float out_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FA9")]
	[Address(RVA = "0x11D82E0", Offset = "0x11D82E0", VA = "0x11D82E0")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle, ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FAA")]
	[Address(RVA = "0x11D841C", Offset = "0x11D841C", VA = "0x11D841C")]
	public static AKRESULT SetSpeakerAngles(float[] in_pfSpeakerAngles, uint in_uNumAngles, float in_fHeightAngle)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FAB")]
	[Address(RVA = "0x11D8548", Offset = "0x11D8548", VA = "0x11D8548")]
	public static AKRESULT SetVolumeThreshold(float in_fVolumeThresholdDB)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FAC")]
	[Address(RVA = "0x11D863C", Offset = "0x11D863C", VA = "0x11D863C")]
	public static AKRESULT SetMaxNumVoicesLimit(ushort in_maxNumberVoices)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FAD")]
	[Address(RVA = "0x11D8720", Offset = "0x11D8720", VA = "0x11D8720")]
	public static AKRESULT RenderAudio(bool in_bAllowSyncRender)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FAE")]
	[Address(RVA = "0x11D8804", Offset = "0x11D8804", VA = "0x11D8804")]
	public static AKRESULT RenderAudio()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FAF")]
	[Address(RVA = "0x11D88D4", Offset = "0x11D88D4", VA = "0x11D88D4")]
	public static AKRESULT RegisterPluginDLL(string in_DllName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FB0")]
	[Address(RVA = "0x11D89D0", Offset = "0x11D89D0", VA = "0x11D89D0")]
	public static uint GetIDFromString(string in_pszString)
	{
		return default(uint);
	}

	[Token(Token = "0x6000FB1")]
	[Address(RVA = "0x11D8ACC", Offset = "0x11D8ACC", VA = "0x11D8ACC")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000FB2")]
	[Address(RVA = "0x11D8D3C", Offset = "0x11D8D3C", VA = "0x11D8D3C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000FB3")]
	[Address(RVA = "0x11D8F8C", Offset = "0x11D8F8C", VA = "0x11D8F8C")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000FB4")]
	[Address(RVA = "0x11D91A0", Offset = "0x11D91A0", VA = "0x11D91A0")]
	public static uint PostEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000FB5")]
	[Address(RVA = "0x11D9318", Offset = "0x11D9318", VA = "0x11D9318")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources, uint in_PlayingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000FB6")]
	[Address(RVA = "0x11D95A0", Offset = "0x11D95A0", VA = "0x11D95A0")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x6000FB7")]
	[Address(RVA = "0x11D9808", Offset = "0x11D9808", VA = "0x11D9808")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID, uint in_uFlags, AkCallbackManager.EventCallback in_pfnCallback, object in_pCookie)
	{
		return default(uint);
	}

	[Token(Token = "0x6000FB8")]
	[Address(RVA = "0x11D9A34", Offset = "0x11D9A34", VA = "0x11D9A34")]
	public static uint PostEvent(string in_pszEventName, GameObject in_gameObjectID)
	{
		return default(uint);
	}

	[Token(Token = "0x6000FB9")]
	[Address(RVA = "0x11D9BC4", Offset = "0x11D9BC4", VA = "0x11D9BC4")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FBA")]
	[Address(RVA = "0x11D9D60", Offset = "0x11D9D60", VA = "0x11D9D60")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FBB")]
	[Address(RVA = "0x11D9EDC", Offset = "0x11D9EDC", VA = "0x11D9EDC")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FBC")]
	[Address(RVA = "0x11DA048", Offset = "0x11DA048", VA = "0x11DA048")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FBD")]
	[Address(RVA = "0x11DA194", Offset = "0x11DA194", VA = "0x11DA194")]
	public static AKRESULT ExecuteActionOnEvent(uint in_eventID, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FBE")]
	[Address(RVA = "0x11DA298", Offset = "0x11DA298", VA = "0x11DA298")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FBF")]
	[Address(RVA = "0x11DA44C", Offset = "0x11DA44C", VA = "0x11DA44C")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FC0")]
	[Address(RVA = "0x11DA5E0", Offset = "0x11DA5E0", VA = "0x11DA5E0")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID, int in_uTransitionDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FC1")]
	[Address(RVA = "0x11DA764", Offset = "0x11DA764", VA = "0x11DA764")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FC2")]
	[Address(RVA = "0x11DA8C8", Offset = "0x11DA8C8", VA = "0x11DA8C8")]
	public static AKRESULT ExecuteActionOnEvent(string in_pszEventName, AkActionOnEventType in_ActionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FC3")]
	[Address(RVA = "0x11DA9E4", Offset = "0x11DA9E4", VA = "0x11DA9E4")]
	public static AKRESULT PostMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID, AkMIDIPostArray in_pPosts, ushort in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FC4")]
	[Address(RVA = "0x11DAB5C", Offset = "0x11DAB5C", VA = "0x11DAB5C")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FC5")]
	[Address(RVA = "0x11DAC98", Offset = "0x11DAC98", VA = "0x11DAC98")]
	public static AKRESULT StopMIDIOnEvent(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FC6")]
	[Address(RVA = "0x11DAD7C", Offset = "0x11DAD7C", VA = "0x11DAD7C")]
	public static AKRESULT StopMIDIOnEvent()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FC7")]
	[Address(RVA = "0x11DAE4C", Offset = "0x11DAE4C", VA = "0x11DAE4C")]
	public static AKRESULT PinEventInStreamCache(uint in_eventID, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FC8")]
	[Address(RVA = "0x11DAF60", Offset = "0x11DAF60", VA = "0x11DAF60")]
	public static AKRESULT PinEventInStreamCache(string in_pszEventName, sbyte in_uActivePriority, sbyte in_uInactivePriority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FC9")]
	[Address(RVA = "0x11DB08C", Offset = "0x11DB08C", VA = "0x11DB08C")]
	public static AKRESULT UnpinEventInStreamCache(uint in_eventID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FCA")]
	[Address(RVA = "0x11DB170", Offset = "0x11DB170", VA = "0x11DB170")]
	public static AKRESULT UnpinEventInStreamCache(string in_pszEventName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FCB")]
	[Address(RVA = "0x11DB26C", Offset = "0x11DB26C", VA = "0x11DB26C")]
	public static AKRESULT GetBufferStatusForPinnedEvent(uint in_eventID, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FCC")]
	[Address(RVA = "0x11DB380", Offset = "0x11DB380", VA = "0x11DB380")]
	public static AKRESULT GetBufferStatusForPinnedEvent(string in_pszEventName, out float out_fPercentBuffered, out int out_bCachePinnedMemoryFull)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FCD")]
	[Address(RVA = "0x11DB4AC", Offset = "0x11DB4AC", VA = "0x11DB4AC")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FCE")]
	[Address(RVA = "0x11DB628", Offset = "0x11DB628", VA = "0x11DB628")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FCF")]
	[Address(RVA = "0x11DB794", Offset = "0x11DB794", VA = "0x11DB794")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FD0")]
	[Address(RVA = "0x11DB8E0", Offset = "0x11DB8E0", VA = "0x11DB8E0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FD1")]
	[Address(RVA = "0x11DBA74", Offset = "0x11DBA74", VA = "0x11DBA74")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FD2")]
	[Address(RVA = "0x11DBBF8", Offset = "0x11DBBF8", VA = "0x11DBBF8")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, int in_iPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FD3")]
	[Address(RVA = "0x11DBD5C", Offset = "0x11DBD5C", VA = "0x11DBD5C")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FD4")]
	[Address(RVA = "0x11DBEE8", Offset = "0x11DBEE8", VA = "0x11DBEE8")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FD5")]
	[Address(RVA = "0x11DC054", Offset = "0x11DC054", VA = "0x11DC054")]
	public static AKRESULT SeekOnEvent(uint in_eventID, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FD6")]
	[Address(RVA = "0x11DC1B0", Offset = "0x11DC1B0", VA = "0x11DC1B0")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker, uint in_PlayingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FD7")]
	[Address(RVA = "0x11DC354", Offset = "0x11DC354", VA = "0x11DC354")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent, bool in_bSeekToNearestMarker)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FD8")]
	[Address(RVA = "0x11DC4D8", Offset = "0x11DC4D8", VA = "0x11DC4D8")]
	public static AKRESULT SeekOnEvent(string in_pszEventName, GameObject in_gameObjectID, float in_fPercent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FD9")]
	[Address(RVA = "0x11DC64C", Offset = "0x11DC64C", VA = "0x11DC64C")]
	public static void CancelEventCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6000FDA")]
	[Address(RVA = "0x11DC6B4", Offset = "0x11DC6B4", VA = "0x11DC6B4")]
	public static void CancelEventCallbackGameObject(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6000FDB")]
	[Address(RVA = "0x11DC7D0", Offset = "0x11DC7D0", VA = "0x11DC7D0")]
	public static void CancelEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x6000FDC")]
	[Address(RVA = "0x11DC838", Offset = "0x11DC838", VA = "0x11DC838")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FDD")]
	[Address(RVA = "0x11DC94C", Offset = "0x11DC94C", VA = "0x11DC94C")]
	public static AKRESULT GetSourcePlayPosition(uint in_PlayingID, out int out_puPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FDE")]
	[Address(RVA = "0x11DCA50", Offset = "0x11DCA50", VA = "0x11DCA50")]
	public static AKRESULT GetSourceStreamBuffering(uint in_PlayingID, out int out_buffering, out int out_bIsBuffering)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FDF")]
	[Address(RVA = "0x11DCB64", Offset = "0x11DCB64", VA = "0x11DCB64")]
	public static void StopAll(GameObject in_gameObjectID)
	{
	}

	[Token(Token = "0x6000FE0")]
	[Address(RVA = "0x11DCC80", Offset = "0x11DCC80", VA = "0x11DCC80")]
	public static void StopAll()
	{
	}

	[Token(Token = "0x6000FE1")]
	[Address(RVA = "0x11DCD4C", Offset = "0x11DCD4C", VA = "0x11DCD4C")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6000FE2")]
	[Address(RVA = "0x11DCE60", Offset = "0x11DCE60", VA = "0x11DCE60")]
	public static void StopPlayingID(uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6000FE3")]
	[Address(RVA = "0x11DCF64", Offset = "0x11DCF64", VA = "0x11DCF64")]
	public static void StopPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x6000FE4")]
	[Address(RVA = "0x11DD048", Offset = "0x11DD048", VA = "0x11DD048")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration, AkCurveInterpolation in_eFadeCurve)
	{
	}

	[Token(Token = "0x6000FE5")]
	[Address(RVA = "0x11DD17C", Offset = "0x11DD17C", VA = "0x11DD17C")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID, int in_uTransitionDuration)
	{
	}

	[Token(Token = "0x6000FE6")]
	[Address(RVA = "0x11DD290", Offset = "0x11DD290", VA = "0x11DD290")]
	public static void ExecuteActionOnPlayingID(AkActionOnEventType in_ActionType, uint in_playingID)
	{
	}

	[Token(Token = "0x6000FE7")]
	[Address(RVA = "0x11DD394", Offset = "0x11DD394", VA = "0x11DD394")]
	public static void SetRandomSeed(uint in_uSeed)
	{
	}

	[Token(Token = "0x6000FE8")]
	[Address(RVA = "0x11DD478", Offset = "0x11DD478", VA = "0x11DD478")]
	public static void MuteBackgroundMusic(bool in_bMute)
	{
	}

	[Token(Token = "0x6000FE9")]
	[Address(RVA = "0x11DD55C", Offset = "0x11DD55C", VA = "0x11DD55C")]
	public static bool GetBackgroundMusicMute()
	{
		return default(bool);
	}

	[Token(Token = "0x6000FEA")]
	[Address(RVA = "0x11DD634", Offset = "0x11DD634", VA = "0x11DD634")]
	public static AKRESULT SendPluginCustomGameData(uint in_busID, GameObject in_busObjectID, AkPluginType in_eType, uint in_uCompanyID, uint in_uPluginID, IntPtr in_pData, uint in_uSizeInBytes)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FEB")]
	[Address(RVA = "0x11DD7E0", Offset = "0x11DD7E0", VA = "0x11DD7E0")]
	public static AKRESULT UnregisterAllGameObj()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FEC")]
	[Address(RVA = "0x11DD8B0", Offset = "0x11DD8B0", VA = "0x11DD8B0")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FED")]
	[Address(RVA = "0x11DDA1C", Offset = "0x11DDA1C", VA = "0x11DDA1C")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkPositionArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FEE")]
	[Address(RVA = "0x11DDB68", Offset = "0x11DDB68", VA = "0x11DDB68")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions, AkMultiPositionType in_eMultiPositionType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FEF")]
	[Address(RVA = "0x11DDCD4", Offset = "0x11DDCD4", VA = "0x11DDCD4")]
	public static AKRESULT SetMultiplePositions(GameObject in_GameObjectID, AkChannelEmitterArray in_pPositions, ushort in_NumPositions)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FF0")]
	[Address(RVA = "0x11DDE20", Offset = "0x11DDE20", VA = "0x11DDE20")]
	public static AKRESULT SetScalingFactor(GameObject in_GameObjectID, float in_fAttenuationScalingFactor)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FF1")]
	[Address(RVA = "0x11DDF54", Offset = "0x11DDF54", VA = "0x11DDF54")]
	public static AKRESULT ClearBanks()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FF2")]
	[Address(RVA = "0x11DE024", Offset = "0x11DE024", VA = "0x11DE024")]
	public static AKRESULT SetBankLoadIOSettings(float in_fThroughput, sbyte in_priority)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FF3")]
	[Address(RVA = "0x11DE128", Offset = "0x11DE128", VA = "0x11DE128")]
	public static AKRESULT LoadBank(string in_pszString, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FF4")]
	[Address(RVA = "0x11DE254", Offset = "0x11DE254", VA = "0x11DE254")]
	public static AKRESULT LoadBank(uint in_bankID, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FF5")]
	[Address(RVA = "0x11DE358", Offset = "0x11DE358", VA = "0x11DE358")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FF6")]
	[Address(RVA = "0x11DE46C", Offset = "0x11DE46C", VA = "0x11DE46C")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FF7")]
	[Address(RVA = "0x11DE5A0", Offset = "0x11DE5A0", VA = "0x11DE5A0")]
	public static AKRESULT LoadBank(string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FF8")]
	[Address(RVA = "0x11DE748", Offset = "0x11DE748", VA = "0x11DE748")]
	public static AKRESULT LoadBank(uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_memPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FF9")]
	[Address(RVA = "0x11DE8C8", Offset = "0x11DE8C8", VA = "0x11DE8C8")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FFA")]
	[Address(RVA = "0x11DEA58", Offset = "0x11DEA58", VA = "0x11DEA58")]
	public static AKRESULT LoadBank(IntPtr in_pInMemoryBankPtr, uint in_uInMemoryBankSize, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, int in_uPoolForBankMedia, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FFB")]
	[Address(RVA = "0x11DEC08", Offset = "0x11DEC08", VA = "0x11DEC08")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FFC")]
	[Address(RVA = "0x11DED34", Offset = "0x11DED34", VA = "0x11DED34")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FFD")]
	[Address(RVA = "0x11DEE50", Offset = "0x11DEE50", VA = "0x11DEE50")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, out int out_pMemPoolId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FFE")]
	[Address(RVA = "0x11DEF64", Offset = "0x11DEF64", VA = "0x11DEF64")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6000FFF")]
	[Address(RVA = "0x11DF068", Offset = "0x11DF068", VA = "0x11DF068")]
	public static AKRESULT UnloadBank(string in_pszString, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001000")]
	[Address(RVA = "0x11DF200", Offset = "0x11DF200", VA = "0x11DF200")]
	public static AKRESULT UnloadBank(uint in_bankID, IntPtr in_pInMemoryBankPtr, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001001")]
	[Address(RVA = "0x11DF380", Offset = "0x11DF380", VA = "0x11DF380")]
	public static void CancelBankCallbackCookie(object in_pCookie)
	{
	}

	[Token(Token = "0x6001002")]
	[Address(RVA = "0x11DF3E8", Offset = "0x11DF3E8", VA = "0x11DF3E8")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001003")]
	[Address(RVA = "0x11DF518", Offset = "0x11DF518", VA = "0x11DF518")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001004")]
	[Address(RVA = "0x11DF638", Offset = "0x11DF638", VA = "0x11DF638")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001005")]
	[Address(RVA = "0x11DF74C", Offset = "0x11DF74C", VA = "0x11DF74C")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001006")]
	[Address(RVA = "0x11DF850", Offset = "0x11DF850", VA = "0x11DF850")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001007")]
	[Address(RVA = "0x11DF9FC", Offset = "0x11DF9FC", VA = "0x11DF9FC")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, string in_pszString, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001008")]
	[Address(RVA = "0x11DFB98", Offset = "0x11DFB98", VA = "0x11DFB98")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie, AkBankContent in_uFlags)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001009")]
	[Address(RVA = "0x11DFD28", Offset = "0x11DFD28", VA = "0x11DFD28")]
	public static AKRESULT PrepareBank(AkPreparationType in_PreparationType, uint in_bankID, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600100A")]
	[Address(RVA = "0x11DFEA8", Offset = "0x11DFEA8", VA = "0x11DFEA8")]
	public static AKRESULT ClearPreparedEvents()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600100B")]
	[Address(RVA = "0x11DFF78", Offset = "0x11DFF78", VA = "0x11DFF78")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600100C")]
	[Address(RVA = "0x11E02B8", Offset = "0x11E02B8", VA = "0x11E02B8")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600100D")]
	[Address(RVA = "0x11E03D4", Offset = "0x11E03D4", VA = "0x11E03D4")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, string[] in_ppszString, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600100E")]
	[Address(RVA = "0x11E0790", Offset = "0x11E0790", VA = "0x11E0790")]
	public static AKRESULT PrepareEvent(AkPreparationType in_PreparationType, uint[] in_pEventID, uint in_uNumEvent, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600100F")]
	[Address(RVA = "0x11E0928", Offset = "0x11E0928", VA = "0x11E0928")]
	public static AKRESULT SetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001010")]
	[Address(RVA = "0x11E0A38", Offset = "0x11E0A38", VA = "0x11E0A38")]
	public static AKRESULT UnsetMedia(AkSourceSettingsArray in_pSourceSettings, uint in_uNumSourceSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001011")]
	[Address(RVA = "0x11E0B48", Offset = "0x11E0B48", VA = "0x11E0B48")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001012")]
	[Address(RVA = "0x11E0ECC", Offset = "0x11E0ECC", VA = "0x11E0ECC")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001013")]
	[Address(RVA = "0x11E1018", Offset = "0x11E1018", VA = "0x11E1018")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, string in_pszGroupName, string[] in_ppszGameSyncName, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001014")]
	[Address(RVA = "0x11E1418", Offset = "0x11E1418", VA = "0x11E1418")]
	public static AKRESULT PrepareGameSyncs(AkPreparationType in_PreparationType, AkGroupType in_eGameSyncType, uint in_GroupID, uint[] in_paGameSyncID, uint in_uNumGameSyncs, AkCallbackManager.BankCallback in_pfnBankCallback, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001015")]
	[Address(RVA = "0x11E15E0", Offset = "0x11E15E0", VA = "0x11E15E0")]
	public static AKRESULT AddListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001016")]
	[Address(RVA = "0x11E1734", Offset = "0x11E1734", VA = "0x11E1734")]
	public static AKRESULT RemoveListener(GameObject in_emitterGameObj, GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001017")]
	[Address(RVA = "0x11E1888", Offset = "0x11E1888", VA = "0x11E1888")]
	public static AKRESULT AddDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001018")]
	[Address(RVA = "0x11E19A4", Offset = "0x11E19A4", VA = "0x11E19A4")]
	public static AKRESULT RemoveDefaultListener(GameObject in_listenerGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001019")]
	[Address(RVA = "0x11E1AC0", Offset = "0x11E1AC0", VA = "0x11E1AC0")]
	public static AKRESULT ResetListenersToDefault(GameObject in_emitterGameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600101A")]
	[Address(RVA = "0x11E1BDC", Offset = "0x11E1BDC", VA = "0x11E1BDC")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig, float[] in_pVolumeOffsets)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600101B")]
	[Address(RVA = "0x11E1D64", Offset = "0x11E1D64", VA = "0x11E1D64")]
	public static AKRESULT SetListenerSpatialization(GameObject in_uListenerID, bool in_bSpatialized, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600101C")]
	[Address(RVA = "0x11E1EC4", Offset = "0x11E1EC4", VA = "0x11E1EC4")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600101D")]
	[Address(RVA = "0x11E2060", Offset = "0x11E2060", VA = "0x11E2060")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600101E")]
	[Address(RVA = "0x11E21EC", Offset = "0x11E21EC", VA = "0x11E21EC")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600101F")]
	[Address(RVA = "0x11E2358", Offset = "0x11E2358", VA = "0x11E2358")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001020")]
	[Address(RVA = "0x11E24B4", Offset = "0x11E24B4", VA = "0x11E24B4")]
	public static AKRESULT SetRTPCValue(uint in_rtpcID, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001021")]
	[Address(RVA = "0x11E25B8", Offset = "0x11E25B8", VA = "0x11E25B8")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001022")]
	[Address(RVA = "0x11E276C", Offset = "0x11E276C", VA = "0x11E276C")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001023")]
	[Address(RVA = "0x11E2910", Offset = "0x11E2910", VA = "0x11E2910")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001024")]
	[Address(RVA = "0x11E2A94", Offset = "0x11E2A94", VA = "0x11E2A94")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001025")]
	[Address(RVA = "0x11E2C08", Offset = "0x11E2C08", VA = "0x11E2C08")]
	public static AKRESULT SetRTPCValue(string in_pszRtpcName, float in_value)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001026")]
	[Address(RVA = "0x11E2D24", Offset = "0x11E2D24", VA = "0x11E2D24")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001027")]
	[Address(RVA = "0x11E2E88", Offset = "0x11E2E88", VA = "0x11E2E88")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001028")]
	[Address(RVA = "0x11E2FDC", Offset = "0x11E2FDC", VA = "0x11E2FDC")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001029")]
	[Address(RVA = "0x11E3110", Offset = "0x11E3110", VA = "0x11E3110")]
	public static AKRESULT SetRTPCValueByPlayingID(uint in_rtpcID, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600102A")]
	[Address(RVA = "0x11E3234", Offset = "0x11E3234", VA = "0x11E3234")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600102B")]
	[Address(RVA = "0x11E33B0", Offset = "0x11E33B0", VA = "0x11E33B0")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600102C")]
	[Address(RVA = "0x11E351C", Offset = "0x11E351C", VA = "0x11E351C")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600102D")]
	[Address(RVA = "0x11E3668", Offset = "0x11E3668", VA = "0x11E3668")]
	public static AKRESULT SetRTPCValueByPlayingID(string in_pszRtpcName, float in_value, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600102E")]
	[Address(RVA = "0x11E37A4", Offset = "0x11E37A4", VA = "0x11E37A4")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600102F")]
	[Address(RVA = "0x11E3920", Offset = "0x11E3920", VA = "0x11E3920")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001030")]
	[Address(RVA = "0x11E3A8C", Offset = "0x11E3A8C", VA = "0x11E3A8C")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001031")]
	[Address(RVA = "0x11E3BD8", Offset = "0x11E3BD8", VA = "0x11E3BD8")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001032")]
	[Address(RVA = "0x11E3D14", Offset = "0x11E3D14", VA = "0x11E3D14")]
	public static AKRESULT ResetRTPCValue(uint in_rtpcID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001033")]
	[Address(RVA = "0x11E3DF8", Offset = "0x11E3DF8", VA = "0x11E3DF8")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve, bool in_bBypassInternalValueInterpolation)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001034")]
	[Address(RVA = "0x11E3F8C", Offset = "0x11E3F8C", VA = "0x11E3F8C")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration, AkCurveInterpolation in_eFadeCurve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001035")]
	[Address(RVA = "0x11E4110", Offset = "0x11E4110", VA = "0x11E4110")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, int in_uValueChangeDuration)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001036")]
	[Address(RVA = "0x11E4274", Offset = "0x11E4274", VA = "0x11E4274")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001037")]
	[Address(RVA = "0x11E43C8", Offset = "0x11E43C8", VA = "0x11E43C8")]
	public static AKRESULT ResetRTPCValue(string in_pszRtpcName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001038")]
	[Address(RVA = "0x11E44C4", Offset = "0x11E44C4", VA = "0x11E44C4")]
	public static AKRESULT SetSwitch(uint in_switchGroup, uint in_switchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001039")]
	[Address(RVA = "0x11E4610", Offset = "0x11E4610", VA = "0x11E4610")]
	public static AKRESULT SetSwitch(string in_pszSwitchGroup, string in_pszSwitchState, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600103A")]
	[Address(RVA = "0x11E4788", Offset = "0x11E4788", VA = "0x11E4788")]
	public static AKRESULT PostTrigger(uint in_triggerID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600103B")]
	[Address(RVA = "0x11E48C4", Offset = "0x11E48C4", VA = "0x11E48C4")]
	public static AKRESULT PostTrigger(string in_pszTrigger, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600103C")]
	[Address(RVA = "0x11E4A18", Offset = "0x11E4A18", VA = "0x11E4A18")]
	public static AKRESULT SetState(uint in_stateGroup, uint in_state)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600103D")]
	[Address(RVA = "0x11E4B1C", Offset = "0x11E4B1C", VA = "0x11E4B1C")]
	public static AKRESULT SetState(string in_pszStateGroup, string in_pszState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600103E")]
	[Address(RVA = "0x11E4C50", Offset = "0x11E4C50", VA = "0x11E4C50")]
	public static AKRESULT SetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_aAuxSendValues, uint in_uNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600103F")]
	[Address(RVA = "0x11E4DA8", Offset = "0x11E4DA8", VA = "0x11E4DA8")]
	public static AKRESULT SetGameObjectOutputBusVolume(GameObject in_emitterObjID, GameObject in_listenerObjID, float in_fControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001040")]
	[Address(RVA = "0x11E4F1C", Offset = "0x11E4F1C", VA = "0x11E4F1C")]
	public static AKRESULT SetActorMixerEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001041")]
	[Address(RVA = "0x11E5030", Offset = "0x11E5030", VA = "0x11E5030")]
	public static AKRESULT SetBusEffect(uint in_audioNodeID, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001042")]
	[Address(RVA = "0x11E5144", Offset = "0x11E5144", VA = "0x11E5144")]
	public static AKRESULT SetBusEffect(string in_pszBusName, uint in_uFXIndex, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001043")]
	[Address(RVA = "0x11E5270", Offset = "0x11E5270", VA = "0x11E5270")]
	public static AKRESULT SetMixer(uint in_audioNodeID, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001044")]
	[Address(RVA = "0x11E5374", Offset = "0x11E5374", VA = "0x11E5374")]
	public static AKRESULT SetMixer(string in_pszBusName, uint in_shareSetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001045")]
	[Address(RVA = "0x11E5490", Offset = "0x11E5490", VA = "0x11E5490")]
	public static AKRESULT SetBusConfig(uint in_audioNodeID, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001046")]
	[Address(RVA = "0x11E55A8", Offset = "0x11E55A8", VA = "0x11E55A8")]
	public static AKRESULT SetBusConfig(string in_pszBusName, AkChannelConfig in_channelConfig)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001047")]
	[Address(RVA = "0x11E56D8", Offset = "0x11E56D8", VA = "0x11E56D8")]
	public static AKRESULT SetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, float in_fObstructionLevel, float in_fOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001048")]
	[Address(RVA = "0x11E585C", Offset = "0x11E585C", VA = "0x11E585C")]
	public static AKRESULT SetMultipleObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_uListenerID, AkObstructionOcclusionValuesArray in_fObstructionOcclusionValues, uint in_uNumOcclusionObstruction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001049")]
	[Address(RVA = "0x11E59EC", Offset = "0x11E59EC", VA = "0x11E59EC")]
	public static AKRESULT StartOutputCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600104A")]
	[Address(RVA = "0x11E5AE8", Offset = "0x11E5AE8", VA = "0x11E5AE8")]
	public static AKRESULT StopOutputCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600104B")]
	[Address(RVA = "0x11E5BB8", Offset = "0x11E5BB8", VA = "0x11E5BB8")]
	public static AKRESULT AddOutputCaptureMarker(string in_MarkerText)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600104C")]
	[Address(RVA = "0x11E5CB4", Offset = "0x11E5CB4", VA = "0x11E5CB4")]
	public static AKRESULT StartProfilerCapture(string in_CaptureFileName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600104D")]
	[Address(RVA = "0x11E5DB0", Offset = "0x11E5DB0", VA = "0x11E5DB0")]
	public static AKRESULT StopProfilerCapture()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600104E")]
	[Address(RVA = "0x11E5E80", Offset = "0x11E5E80", VA = "0x11E5E80")]
	public static AKRESULT RemoveOutput(ulong in_idOutput)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600104F")]
	[Address(RVA = "0x11E5F64", Offset = "0x11E5F64", VA = "0x11E5F64")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId, out ulong out_pOutputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001050")]
	[Address(RVA = "0x11E608C", Offset = "0x11E608C", VA = "0x11E608C")]
	public static AKRESULT ReplaceOutput(AkOutputSettings in_Settings, ulong in_outputDeviceId)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001051")]
	[Address(RVA = "0x11E61A4", Offset = "0x11E61A4", VA = "0x11E61A4")]
	public static ulong GetOutputID(uint in_idShareset, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001052")]
	[Address(RVA = "0x11E62A8", Offset = "0x11E62A8", VA = "0x11E62A8")]
	public static ulong GetOutputID(string in_szShareSet, uint in_idDevice)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001053")]
	[Address(RVA = "0x11E63C4", Offset = "0x11E63C4", VA = "0x11E63C4")]
	public static AKRESULT SetBusDevice(uint in_idBus, uint in_idNewDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001054")]
	[Address(RVA = "0x11E64C8", Offset = "0x11E64C8", VA = "0x11E64C8")]
	public static AKRESULT SetBusDevice(string in_BusName, string in_DeviceName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001055")]
	[Address(RVA = "0x11E65FC", Offset = "0x11E65FC", VA = "0x11E65FC")]
	public static AKRESULT SetOutputVolume(ulong in_idOutput, float in_fVolume)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001056")]
	[Address(RVA = "0x11E6700", Offset = "0x11E6700", VA = "0x11E6700")]
	public static AKRESULT GetDeviceSpatialAudioSupport(uint in_idDevice)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001057")]
	[Address(RVA = "0x11E67E4", Offset = "0x11E67E4", VA = "0x11E67E4")]
	public static AKRESULT Suspend(bool in_bRenderAnyway)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001058")]
	[Address(RVA = "0x11E68C8", Offset = "0x11E68C8", VA = "0x11E68C8")]
	public static AKRESULT Suspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001059")]
	[Address(RVA = "0x11E6998", Offset = "0x11E6998", VA = "0x11E6998")]
	public static AKRESULT WakeupFromSuspend()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600105A")]
	[Address(RVA = "0x11E6A68", Offset = "0x11E6A68", VA = "0x11E6A68")]
	public static uint GetBufferTick()
	{
		return default(uint);
	}

	[Token(Token = "0x600105D")]
	[Address(RVA = "0x11E6CD8", Offset = "0x11E6CD8", VA = "0x11E6CD8")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600105E")]
	[Address(RVA = "0x11E6E18", Offset = "0x11E6E18", VA = "0x11E6E18")]
	public static AKRESULT GetPlayingSegmentInfo(uint in_PlayingID, AkSegmentInfo out_segmentInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600105F")]
	[Address(RVA = "0x11E6F48", Offset = "0x11E6F48", VA = "0x11E6F48")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001060")]
	[Address(RVA = "0x11E70E4", Offset = "0x11E70E4", VA = "0x11E70E4")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001061")]
	[Address(RVA = "0x11E7260", Offset = "0x11E7260", VA = "0x11E7260")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001062")]
	[Address(RVA = "0x11E73CC", Offset = "0x11E73CC", VA = "0x11E73CC")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001063")]
	[Address(RVA = "0x11E74E0", Offset = "0x11E74E0", VA = "0x11E74E0")]
	public static AKRESULT PostCode(AkMonitorErrorCode in_eError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001064")]
	[Address(RVA = "0x11E75E4", Offset = "0x11E75E4", VA = "0x11E75E4")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID, bool in_bIsBus)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001065")]
	[Address(RVA = "0x11E7798", Offset = "0x11E7798", VA = "0x11E7798")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID, uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001066")]
	[Address(RVA = "0x11E792C", Offset = "0x11E792C", VA = "0x11E792C")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID, GameObject in_gameObjID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001067")]
	[Address(RVA = "0x11E7AB0", Offset = "0x11E7AB0", VA = "0x11E7AB0")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel, uint in_playingID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001068")]
	[Address(RVA = "0x11E7BDC", Offset = "0x11E7BDC", VA = "0x11E7BDC")]
	public static AKRESULT PostString(string in_pszError, AkMonitorErrorLevel in_eErrorLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001069")]
	[Address(RVA = "0x11E7CF8", Offset = "0x11E7CF8", VA = "0x11E7CF8")]
	public static int GetTimeStamp()
	{
		return default(int);
	}

	[Token(Token = "0x600106A")]
	[Address(RVA = "0x11E7DC8", Offset = "0x11E7DC8", VA = "0x11E7DC8")]
	public static uint GetNumNonZeroBits(uint in_uWord)
	{
		return default(uint);
	}

	[Token(Token = "0x600106B")]
	[Address(RVA = "0x11E7EAC", Offset = "0x11E7EAC", VA = "0x11E7EAC")]
	public static void AkGetDefaultHighPriorityThreadProperties(AkThreadProperties out_threadProperties)
	{
	}

	[Token(Token = "0x600106C")]
	[Address(RVA = "0x11E7FA4", Offset = "0x11E7FA4", VA = "0x11E7FA4")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments, uint in_idSequence)
	{
		return default(uint);
	}

	[Token(Token = "0x600106D")]
	[Address(RVA = "0x11E80E0", Offset = "0x11E80E0", VA = "0x11E80E0")]
	public static uint ResolveDialogueEvent(uint in_eventID, uint[] in_aArgumentValues, uint in_uNumArguments)
	{
		return default(uint);
	}

	[Token(Token = "0x600106E")]
	[Address(RVA = "0x11E81FC", Offset = "0x11E81FC", VA = "0x11E81FC")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600106F")]
	[Address(RVA = "0x11E8310", Offset = "0x11E8310", VA = "0x11E8310")]
	public static AKRESULT GetDialogueEventCustomPropertyValue(uint in_eventID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001070")]
	[Address(RVA = "0x11E8424", Offset = "0x11E8424", VA = "0x11E8424")]
	public static AKRESULT GetPosition(GameObject in_GameObjectID, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001071")]
	[Address(RVA = "0x11E8568", Offset = "0x11E8568", VA = "0x11E8568")]
	public static AKRESULT GetListenerPosition(GameObject in_uIndex, AkTransform out_rPosition)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001072")]
	[Address(RVA = "0x11E86B8", Offset = "0x11E86B8", VA = "0x11E86B8")]
	public static AKRESULT GetRTPCValue(uint in_rtpcID, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001073")]
	[Address(RVA = "0x11E8834", Offset = "0x11E8834", VA = "0x11E8834")]
	public static AKRESULT GetRTPCValue(string in_pszRtpcName, GameObject in_gameObjectID, uint in_playingID, out float out_rValue, ref int io_rValueType)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001074")]
	[Address(RVA = "0x11E89C8", Offset = "0x11E89C8", VA = "0x11E89C8")]
	public static AKRESULT GetSwitch(uint in_switchGroup, GameObject in_gameObjectID, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001075")]
	[Address(RVA = "0x11E8B14", Offset = "0x11E8B14", VA = "0x11E8B14")]
	public static AKRESULT GetSwitch(string in_pstrSwitchGroupName, GameObject in_GameObj, out uint out_rSwitchState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001076")]
	[Address(RVA = "0x11E8C6C", Offset = "0x11E8C6C", VA = "0x11E8C6C")]
	public static AKRESULT GetState(uint in_stateGroup, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001077")]
	[Address(RVA = "0x11E8D70", Offset = "0x11E8D70", VA = "0x11E8D70")]
	public static AKRESULT GetState(string in_pstrStateGroupName, out uint out_rState)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001078")]
	[Address(RVA = "0x11E8E8C", Offset = "0x11E8E8C", VA = "0x11E8E8C")]
	public static AKRESULT GetGameObjectAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray out_paAuxSendValues, ref uint io_ruNumSendValues)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001079")]
	[Address(RVA = "0x11E8FE4", Offset = "0x11E8FE4", VA = "0x11E8FE4")]
	public static AKRESULT GetGameObjectDryLevelValue(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfControlValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600107A")]
	[Address(RVA = "0x11E9148", Offset = "0x11E9148", VA = "0x11E9148")]
	public static AKRESULT GetObjectObstructionAndOcclusion(GameObject in_EmitterID, GameObject in_ListenerID, out float out_rfObstructionLevel, out float out_rfOcclusionLevel)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600107B")]
	[Address(RVA = "0x11E92CC", Offset = "0x11E92CC", VA = "0x11E92CC")]
	public static AKRESULT QueryAudioObjectIDs(uint in_eventID, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600107C")]
	[Address(RVA = "0x11E93EC", Offset = "0x11E93EC", VA = "0x11E93EC")]
	public static AKRESULT QueryAudioObjectIDs(string in_pszEventName, ref uint io_ruNumItems, AkObjectInfoArray out_aObjectInfos)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600107D")]
	[Address(RVA = "0x11E9524", Offset = "0x11E9524", VA = "0x11E9524")]
	public static AKRESULT GetPositioningInfo(uint in_ObjectID, AkPositioningInfo out_rPositioningInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600107E")]
	[Address(RVA = "0x11E963C", Offset = "0x11E963C", VA = "0x11E963C")]
	public static bool GetIsGameObjectActive(GameObject in_GameObjId)
	{
		return default(bool);
	}

	[Token(Token = "0x600107F")]
	[Address(RVA = "0x11E9760", Offset = "0x11E9760", VA = "0x11E9760")]
	public static float GetMaxRadius(GameObject in_GameObjId)
	{
		return default(float);
	}

	[Token(Token = "0x6001080")]
	[Address(RVA = "0x11E987C", Offset = "0x11E987C", VA = "0x11E987C")]
	public static uint GetEventIDFromPlayingID(uint in_playingID)
	{
		return default(uint);
	}

	[Token(Token = "0x6001081")]
	[Address(RVA = "0x11E9960", Offset = "0x11E9960", VA = "0x11E9960")]
	public static ulong GetGameObjectFromPlayingID(uint in_playingID)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001082")]
	[Address(RVA = "0x11E9A44", Offset = "0x11E9A44", VA = "0x11E9A44")]
	public static AKRESULT GetPlayingIDsFromGameObject(GameObject in_GameObjId, ref uint io_ruNumIDs, uint[] out_aPlayingIDs)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001083")]
	[Address(RVA = "0x11E9C20", Offset = "0x11E9C20", VA = "0x11E9C20")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out int out_iValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001084")]
	[Address(RVA = "0x11E9D34", Offset = "0x11E9D34", VA = "0x11E9D34")]
	public static AKRESULT GetCustomPropertyValue(uint in_ObjectID, uint in_uPropID, out float out_fValue)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001085")]
	[Address(RVA = "0x11E9E48", Offset = "0x11E9E48", VA = "0x11E9E48")]
	public static void AK_SPEAKER_SETUP_FIX_LEFT_TO_CENTER(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x6001086")]
	[Address(RVA = "0x11E9F2C", Offset = "0x11E9F2C", VA = "0x11E9F2C")]
	public static void AK_SPEAKER_SETUP_FIX_REAR_TO_SIDE(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x6001087")]
	[Address(RVA = "0x11EA010", Offset = "0x11EA010", VA = "0x11EA010")]
	public static void AK_SPEAKER_SETUP_CONVERT_TO_SUPPORTED(ref uint io_uChannelMask)
	{
	}

	[Token(Token = "0x6001088")]
	[Address(RVA = "0x11EA0F4", Offset = "0x11EA0F4", VA = "0x11EA0F4")]
	public static byte ChannelMaskToNumChannels(uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x6001089")]
	[Address(RVA = "0x11EA1D8", Offset = "0x11EA1D8", VA = "0x11EA1D8")]
	public static uint ChannelMaskFromNumChannels(uint in_uNumChannels)
	{
		return default(uint);
	}

	[Token(Token = "0x600108A")]
	[Address(RVA = "0x11EA2BC", Offset = "0x11EA2BC", VA = "0x11EA2BC")]
	public static byte ChannelBitToIndex(uint in_uChannelBit, uint in_uChannelMask)
	{
		return default(byte);
	}

	[Token(Token = "0x600108B")]
	[Address(RVA = "0x11EA3C0", Offset = "0x11EA3C0", VA = "0x11EA3C0")]
	public static bool HasSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x600108C")]
	[Address(RVA = "0x11EA4AC", Offset = "0x11EA4AC", VA = "0x11EA4AC")]
	public static bool HasStrictlyOnePairOfSurroundChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x600108D")]
	[Address(RVA = "0x11EA598", Offset = "0x11EA598", VA = "0x11EA598")]
	public static bool HasSideAndRearChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x600108E")]
	[Address(RVA = "0x11EA684", Offset = "0x11EA684", VA = "0x11EA684")]
	public static bool HasHeightChannels(uint in_uChannelMask)
	{
		return default(bool);
	}

	[Token(Token = "0x600108F")]
	[Address(RVA = "0x11EA770", Offset = "0x11EA770", VA = "0x11EA770")]
	public static uint BackToSideChannels(uint in_uChannelMask)
	{
		return default(uint);
	}

	[Token(Token = "0x6001090")]
	[Address(RVA = "0x11EA854", Offset = "0x11EA854", VA = "0x11EA854")]
	public static uint StdChannelIndexToDisplayIndex(AkChannelOrdering in_eOrdering, uint in_uChannelMask, uint in_uChannelIdx)
	{
		return default(uint);
	}

	[Token(Token = "0x600109A")]
	[Address(RVA = "0x11EB0C4", Offset = "0x11EB0C4", VA = "0x11EB0C4")]
	public static int GetPoolID()
	{
		return default(int);
	}

	[Token(Token = "0x600109B")]
	[Address(RVA = "0x11EB194", Offset = "0x11EB194", VA = "0x11EB194")]
	public static AKRESULT RegisterEmitter(GameObject in_gameObjectID, AkEmitterSettings in_settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600109C")]
	[Address(RVA = "0x11EB2E4", Offset = "0x11EB2E4", VA = "0x11EB2E4")]
	public static AKRESULT UnregisterEmitter(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600109D")]
	[Address(RVA = "0x11EB400", Offset = "0x11EB400", VA = "0x11EB400")]
	public static AKRESULT SetEmitterAuxSendValues(GameObject in_gameObjectID, AkAuxSendArray in_pAuxSends, uint in_uNumAux)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600109E")]
	[Address(RVA = "0x11EB558", Offset = "0x11EB558", VA = "0x11EB558")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600109F")]
	[Address(RVA = "0x11EB6E8", Offset = "0x11EB6E8", VA = "0x11EB6E8")]
	public static AKRESULT SetImageSource(uint in_srcID, AkImageSourceSettings in_info, uint in_AuxBusID, ulong in_roomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010A0")]
	[Address(RVA = "0x11EB830", Offset = "0x11EB830", VA = "0x11EB830")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID, GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010A1")]
	[Address(RVA = "0x11EB97C", Offset = "0x11EB97C", VA = "0x11EB97C")]
	public static AKRESULT RemoveImageSource(uint in_srcID, uint in_AuxBusID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010A2")]
	[Address(RVA = "0x11EBA80", Offset = "0x11EBA80", VA = "0x11EBA80")]
	public static AKRESULT RemoveGeometry(ulong in_SetID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010A3")]
	[Address(RVA = "0x11EBB64", Offset = "0x11EBB64", VA = "0x11EBB64")]
	public static AKRESULT QueryReflectionPaths(GameObject in_gameObjectID, AkVector out_listenerPos, AkVector out_emitterPos, AkReflectionPathInfoArray out_aPaths, out uint io_uArraySize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010A4")]
	[Address(RVA = "0x11EBD0C", Offset = "0x11EBD0C", VA = "0x11EBD0C")]
	public static AKRESULT RemoveRoom(ulong in_RoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010A5")]
	[Address(RVA = "0x11EBDF0", Offset = "0x11EBDF0", VA = "0x11EBDF0")]
	public static AKRESULT RemovePortal(ulong in_PortalID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010A6")]
	[Address(RVA = "0x11EBED4", Offset = "0x11EBED4", VA = "0x11EBED4")]
	public static AKRESULT SetGameObjectInRoom(GameObject in_gameObjectID, ulong in_CurrentRoomID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010A7")]
	[Address(RVA = "0x11EC010", Offset = "0x11EC010", VA = "0x11EC010")]
	public static AKRESULT SetEmitterObstructionAndOcclusion(GameObject in_gameObjectID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010A8")]
	[Address(RVA = "0x11D3D6C", Offset = "0x11D3D6C", VA = "0x11D3D6C")]
	public static AKRESULT SetPortalObstructionAndOcclusion(ulong in_PortalID, float in_fObstruction, float in_fOcclusion)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010A9")]
	[Address(RVA = "0x11EC1F4", Offset = "0x11EC1F4", VA = "0x11EC1F4")]
	public static AKRESULT QueryWetDiffraction(ulong in_portal, out float out_wetDiffraction)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010AA")]
	[Address(RVA = "0x11EC2F8", Offset = "0x11EC2F8", VA = "0x11EC2F8")]
	public static AKRESULT GetFastPathSettings(AkInitSettings in_settings, AkPlatformInitSettings in_pfSettings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010AB")]
	[Address(RVA = "0x11EC420", Offset = "0x11EC420", VA = "0x11EC420")]
	public static void SetErrorLogger(AkLogger.ErrorLoggerInteropDelegate logger)
	{
	}

	[Token(Token = "0x60010AC")]
	[Address(RVA = "0x11EC508", Offset = "0x11EC508", VA = "0x11EC508")]
	public static void SetErrorLogger()
	{
	}

	[Token(Token = "0x60010AD")]
	[Address(RVA = "0x11EC5D4", Offset = "0x11EC5D4", VA = "0x11EC5D4")]
	public static void SetAudioInputCallbacks(AkAudioInputManager.AudioSamplesInteropDelegate getAudioSamples, AkAudioInputManager.AudioFormatInteropDelegate getAudioFormat)
	{
	}

	[Token(Token = "0x60010AE")]
	[Address(RVA = "0x11EC6EC", Offset = "0x11EC6EC", VA = "0x11EC6EC")]
	public static AKRESULT Init(AkInitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010AF")]
	[Address(RVA = "0x11EC7E4", Offset = "0x11EC7E4", VA = "0x11EC7E4")]
	public static AKRESULT InitSpatialAudio(AkSpatialAudioInitSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010B0")]
	[Address(RVA = "0x11EC8DC", Offset = "0x11EC8DC", VA = "0x11EC8DC")]
	public static AKRESULT InitCommunication(AkCommunicationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010B1")]
	[Address(RVA = "0x11EC9D4", Offset = "0x11EC9D4", VA = "0x11EC9D4")]
	public static void Term()
	{
	}

	[Token(Token = "0x60010B2")]
	[Address(RVA = "0x11ECAA0", Offset = "0x11ECAA0", VA = "0x11ECAA0")]
	public static AKRESULT RegisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010B3")]
	[Address(RVA = "0x11ECBB4", Offset = "0x11ECBB4", VA = "0x11ECBB4")]
	public static AKRESULT UnregisterGameObjInternal(GameObject in_GameObj)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010B4")]
	[Address(RVA = "0x11ECCC8", Offset = "0x11ECCC8", VA = "0x11ECCC8")]
	public static AKRESULT RegisterGameObjInternal_WithName(GameObject in_GameObj, string in_pszObjName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010B5")]
	[Address(RVA = "0x11ECE18", Offset = "0x11ECE18", VA = "0x11ECE18")]
	public static AKRESULT SetBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010B6")]
	[Address(RVA = "0x11ECF14", Offset = "0x11ECF14", VA = "0x11ECF14")]
	public static AKRESULT SetCurrentLanguage(string in_pszAudioSrcPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010B7")]
	[Address(RVA = "0x11ED010", Offset = "0x11ED010", VA = "0x11ED010")]
	public static AKRESULT LoadFilePackage(string in_pszFilePackageName, out uint out_uPackageID, int in_memPoolID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010B8")]
	[Address(RVA = "0x11ED13C", Offset = "0x11ED13C", VA = "0x11ED13C")]
	public static AKRESULT AddBasePath(string in_pszBasePath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010B9")]
	[Address(RVA = "0x11ED238", Offset = "0x11ED238", VA = "0x11ED238")]
	public static AKRESULT SetGameName(string in_GameName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010BA")]
	[Address(RVA = "0x11ED334", Offset = "0x11ED334", VA = "0x11ED334")]
	public static AKRESULT SetDecodedBankPath(string in_DecodedPath)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010BB")]
	[Address(RVA = "0x11ED430", Offset = "0x11ED430", VA = "0x11ED430")]
	public static AKRESULT LoadAndDecodeBank(string in_pszString, bool in_bSaveDecodedBank, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010BC")]
	[Address(RVA = "0x11ED55C", Offset = "0x11ED55C", VA = "0x11ED55C")]
	public static AKRESULT LoadAndDecodeBankFromMemory(IntPtr in_BankData, uint in_BankDataSize, bool in_bSaveDecodedBank, string in_DecodedBankName, bool in_bIsLanguageSpecific, out uint out_bankID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010BD")]
	[Address(RVA = "0x11ED6DC", Offset = "0x11ED6DC", VA = "0x11ED6DC")]
	public static string GetCurrentLanguage()
	{
		return null;
	}

	[Token(Token = "0x60010BE")]
	[Address(RVA = "0x11ED840", Offset = "0x11ED840", VA = "0x11ED840")]
	public static AKRESULT UnloadFilePackage(uint in_uPackageID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010BF")]
	[Address(RVA = "0x11ED924", Offset = "0x11ED924", VA = "0x11ED924")]
	public static AKRESULT UnloadAllFilePackages()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010C0")]
	[Address(RVA = "0x11ED9F4", Offset = "0x11ED9F4", VA = "0x11ED9F4")]
	public static AKRESULT SetObjectPosition(GameObject in_GameObjectID, float PosX, float PosY, float PosZ, float FrontX, float FrontY, float FrontZ, float TopX, float TopY, float TopZ)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010C1")]
	[Address(RVA = "0x11EDBE0", Offset = "0x11EDBE0", VA = "0x11EDBE0")]
	public static AKRESULT GetSourceMultiplePlayPositions(uint in_PlayingID, uint[] out_audioNodeID, uint[] out_mediaID, int[] out_msTime, ref uint io_pcPositions, bool in_bExtrapolate)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010C2")]
	[Address(RVA = "0x11EDE94", Offset = "0x11EDE94", VA = "0x11EDE94")]
	public static AKRESULT SetListeners(GameObject in_emitterGameObj, ulong[] in_pListenerGameObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010C3")]
	[Address(RVA = "0x11EDFE8", Offset = "0x11EDFE8", VA = "0x11EDFE8")]
	public static AKRESULT SetDefaultListeners(ulong[] in_pListenerObjs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010C4")]
	[Address(RVA = "0x11EE0F4", Offset = "0x11EE0F4", VA = "0x11EE0F4")]
	public static AKRESULT AddOutput(AkOutputSettings in_Settings, out ulong out_pDeviceID, ulong[] in_pListenerIDs, uint in_uNumListeners)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010C5")]
	[Address(RVA = "0x11EE244", Offset = "0x11EE244", VA = "0x11EE244")]
	public static void GetDefaultStreamSettings(AkStreamMgrSettings out_settings)
	{
	}

	[Token(Token = "0x60010C6")]
	[Address(RVA = "0x11EE33C", Offset = "0x11EE33C", VA = "0x11EE33C")]
	public static void GetDefaultDeviceSettings(AkDeviceSettings out_settings)
	{
	}

	[Token(Token = "0x60010C7")]
	[Address(RVA = "0x11EE434", Offset = "0x11EE434", VA = "0x11EE434")]
	public static void GetDefaultMusicSettings(AkMusicSettings out_settings)
	{
	}

	[Token(Token = "0x60010C8")]
	[Address(RVA = "0x11EE52C", Offset = "0x11EE52C", VA = "0x11EE52C")]
	public static void GetDefaultInitSettings(AkInitSettings out_settings)
	{
	}

	[Token(Token = "0x60010C9")]
	[Address(RVA = "0x11EE624", Offset = "0x11EE624", VA = "0x11EE624")]
	public static void GetDefaultPlatformInitSettings(AkPlatformInitSettings out_settings)
	{
	}

	[Token(Token = "0x60010CA")]
	[Address(RVA = "0x11EE71C", Offset = "0x11EE71C", VA = "0x11EE71C")]
	public static uint GetMajorMinorVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x60010CB")]
	[Address(RVA = "0x11EE7EC", Offset = "0x11EE7EC", VA = "0x11EE7EC")]
	public static uint GetSubminorBuildVersion()
	{
		return default(uint);
	}

	[Token(Token = "0x60010CC")]
	[Address(RVA = "0x11EE8BC", Offset = "0x11EE8BC", VA = "0x11EE8BC")]
	public static AKRESULT QueryIndirectPaths(GameObject in_gameObjectID, AkPathParams arg1, AkReflectionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010CD")]
	[Address(RVA = "0x11EEA44", Offset = "0x11EEA44", VA = "0x11EEA44")]
	public static AKRESULT QueryDiffractionPaths(GameObject in_gameObjectID, AkPathParams arg1, AkDiffractionPathInfoArray paths, uint numPaths)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010CE")]
	[Address(RVA = "0x11D27BC", Offset = "0x11D27BC", VA = "0x11D27BC")]
	public static AKRESULT SetRoomPortal(ulong in_PortalID, AkTransform Transform, AkVector Extent, bool bEnabled, ulong FrontRoom, ulong BackRoom)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010CF")]
	[Address(RVA = "0x11EEC88", Offset = "0x11EEC88", VA = "0x11EEC88")]
	public static AKRESULT SetRoom(ulong in_RoomID, AkRoomParams in_roomParams, string in_pName)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010D0")]
	[Address(RVA = "0x11EEDCC", Offset = "0x11EEDCC", VA = "0x11EEDCC")]
	public static AKRESULT RegisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010D1")]
	[Address(RVA = "0x11EEEE8", Offset = "0x11EEEE8", VA = "0x11EEEE8")]
	public static AKRESULT UnregisterSpatialAudioListener(GameObject in_gameObjectID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010D2")]
	[Address(RVA = "0x11EF004", Offset = "0x11EF004", VA = "0x11EF004")]
	public static AKRESULT SetGeometry(ulong in_GeomSetID, AkTriangleArray Triangles, uint NumTriangles, AkVertexArray Vertices, uint NumVertices, AkAcousticSurfaceArray Surfaces, uint NumSurfaces, ulong RoomID, bool EnableDiffraction, bool EnableDiffractionOnBoundaryEdges)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010D3")]
	[Address(RVA = "0x11EF228", Offset = "0x11EF228", VA = "0x11EF228")]
	public static string StringFromIntPtrString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x60010D4")]
	[Address(RVA = "0x11EF290", Offset = "0x11EF290", VA = "0x11EF290")]
	public static string StringFromIntPtrWString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x60010D5")]
	[Address(RVA = "0x11ED7DC", Offset = "0x11ED7DC", VA = "0x11ED7DC")]
	public static string StringFromIntPtrOSString(IntPtr ptr)
	{
		return null;
	}

	[Token(Token = "0x60010D6")]
	[Address(RVA = "0x11EF2F8", Offset = "0x11EF2F8", VA = "0x11EF2F8")]
	private static ulong InternalGameObjectHash(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x60010D8")]
	[Address(RVA = "0x11D62FC", Offset = "0x11D62FC", VA = "0x11D62FC")]
	public static ulong GetAkGameObjectID(GameObject gameObject)
	{
		return default(ulong);
	}

	[Token(Token = "0x60010D9")]
	[Address(RVA = "0x11EF80C", Offset = "0x11EF80C", VA = "0x11EF80C")]
	public static AKRESULT RegisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010DA")]
	[Address(RVA = "0x11EF95C", Offset = "0x11EF95C", VA = "0x11EF95C")]
	public static AKRESULT RegisterGameObj(GameObject gameObject, string name)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010DB")]
	[Address(RVA = "0x11EFA14", Offset = "0x11EFA14", VA = "0x11EFA14")]
	public static AKRESULT UnregisterGameObj(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010DC")]
	[Address(RVA = "0x11EFB64", Offset = "0x11EFB64", VA = "0x11EFB64")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Transform transform)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010DD")]
	[Address(RVA = "0x11EFCE8", Offset = "0x11EFCE8", VA = "0x11EFCE8")]
	public static AKRESULT SetObjectPosition(GameObject gameObject, Vector3 position, Vector3 forward, Vector3 up)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60010DE")]
	[Address(RVA = "0x11EFDE8", Offset = "0x11EFDE8", VA = "0x11EFDE8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD1C98", Offset = "0xCD1C98")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x60010DF")]
	[Address(RVA = "0x11EFF2C", Offset = "0x11EFF2C", VA = "0x11EFF2C")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD1CD0", Offset = "0xCD1CD0")]
	public static uint PostEvent(uint eventId, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60010E0")]
	[Address(RVA = "0x11F00AC", Offset = "0x11F00AC", VA = "0x11F00AC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD1D08", Offset = "0xCD1D08")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources, uint playingId)
	{
		return default(uint);
	}

	[Token(Token = "0x60010E1")]
	[Address(RVA = "0x11F01F0", Offset = "0x11F01F0", VA = "0x11F01F0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD1D40", Offset = "0xCD1D40")]
	public static uint PostEvent(string eventName, GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, object cookie, uint numSources, AkExternalSourceInfo externalSources)
	{
		return default(uint);
	}

	[Token(Token = "0x60010E2")]
	[Address(RVA = "0x11D6374", Offset = "0x11D6374", VA = "0x11D6374")]
	public static void PreGameObjectAPICall(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60010E3")]
	[Address(RVA = "0x11F0370", Offset = "0x11F0370", VA = "0x11F0370")]
	private static void PreGameObjectAPICallUserHook(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60010E4")]
	[Address(RVA = "0x11EF8B4", Offset = "0x11EF8B4", VA = "0x11EF8B4")]
	private static void PostRegisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60010E5")]
	[Address(RVA = "0x11EFABC", Offset = "0x11EFABC", VA = "0x11EFABC")]
	private static void PostUnregisterGameObjUserHook(AKRESULT result, GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60010E6")]
	[Address(RVA = "0x11F04B8", Offset = "0x11F04B8", VA = "0x11F04B8")]
	private static void AutoRegister(GameObject gameObject, ulong id)
	{
	}

	[Token(Token = "0x60010E7")]
	[Address(RVA = "0x11F0434", Offset = "0x11F0434", VA = "0x11F0434")]
	private static bool IsInRegisteredList(ulong id)
	{
		return default(bool);
	}

	[Token(Token = "0x60010E8")]
	[Address(RVA = "0x11F06D4", Offset = "0x11F06D4", VA = "0x11F06D4")]
	public static bool IsGameObjectRegistered(GameObject in_gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60010E9")]
	[Address(RVA = "0x11F073C", Offset = "0x11F073C", VA = "0x11F073C")]
	public AkSoundEngine()
	{
	}
}
[Token(Token = "0x200028D")]
public class AkThreadProperties : IDisposable
{
	[Token(Token = "0x40010B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40010B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700007B")]
	public int nPriority
	{
		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x120D6CC", Offset = "0x120D6CC", VA = "0x120D6CC")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x120D650", Offset = "0x120D650", VA = "0x120D650")]
		set
		{
		}
	}

	[Token(Token = "0x1700007C")]
	public uint uStackSize
	{
		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x120D7B4", Offset = "0x120D7B4", VA = "0x120D7B4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x120D738", Offset = "0x120D738", VA = "0x120D738")]
		set
		{
		}
	}

	[Token(Token = "0x1700007D")]
	public int uSchedPolicy
	{
		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x120D89C", Offset = "0x120D89C", VA = "0x120D89C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x120D820", Offset = "0x120D820", VA = "0x120D820")]
		set
		{
		}
	}

	[Token(Token = "0x1700007E")]
	public uint dwAffinityMask
	{
		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x120D984", Offset = "0x120D984", VA = "0x120D984")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x120D908", Offset = "0x120D908", VA = "0x120D908")]
		set
		{
		}
	}

	[Token(Token = "0x60010EB")]
	[Address(RVA = "0x120D3E0", Offset = "0x120D3E0", VA = "0x120D3E0")]
	internal AkThreadProperties(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010EC")]
	[Address(RVA = "0x120D420", Offset = "0x120D420", VA = "0x120D420")]
	internal static IntPtr getCPtr(AkThreadProperties obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010ED")]
	[Address(RVA = "0x120D470", Offset = "0x120D470", VA = "0x120D470", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010EE")]
	[Address(RVA = "0x120D4A4", Offset = "0x120D4A4", VA = "0x120D4A4", Slot = "1")]
	~AkThreadProperties()
	{
	}

	[Token(Token = "0x60010EF")]
	[Address(RVA = "0x120D514", Offset = "0x120D514", VA = "0x120D514", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60010F8")]
	[Address(RVA = "0x120D9F0", Offset = "0x120D9F0", VA = "0x120D9F0")]
	public AkThreadProperties()
	{
	}
}
[Token(Token = "0x200028E")]
public class AkUnityPlatformSpecificSettings : IDisposable
{
	[Token(Token = "0x40010B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40010B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x60010F9")]
	[Address(RVA = "0x1210654", Offset = "0x1210654", VA = "0x1210654")]
	internal AkUnityPlatformSpecificSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60010FA")]
	[Address(RVA = "0x1210694", Offset = "0x1210694", VA = "0x1210694")]
	internal static IntPtr getCPtr(AkUnityPlatformSpecificSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60010FB")]
	[Address(RVA = "0x12106E4", Offset = "0x12106E4", VA = "0x12106E4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60010FC")]
	[Address(RVA = "0x1210718", Offset = "0x1210718", VA = "0x1210718", Slot = "1")]
	~AkUnityPlatformSpecificSettings()
	{
	}

	[Token(Token = "0x60010FD")]
	[Address(RVA = "0x1210788", Offset = "0x1210788", VA = "0x1210788", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60010FE")]
	[Address(RVA = "0x12108C4", Offset = "0x12108C4", VA = "0x12108C4")]
	public AkUnityPlatformSpecificSettings()
	{
	}
}
[Token(Token = "0x200028F")]
public enum AKRESULT
{
	[Token(Token = "0x40010B9")]
	AK_NotImplemented = 0,
	[Token(Token = "0x40010BA")]
	AK_Success = 1,
	[Token(Token = "0x40010BB")]
	AK_Fail = 2,
	[Token(Token = "0x40010BC")]
	AK_PartialSuccess = 3,
	[Token(Token = "0x40010BD")]
	AK_NotCompatible = 4,
	[Token(Token = "0x40010BE")]
	AK_AlreadyConnected = 5,
	[Token(Token = "0x40010BF")]
	AK_InvalidFile = 7,
	[Token(Token = "0x40010C0")]
	AK_AudioFileHeaderTooLarge = 8,
	[Token(Token = "0x40010C1")]
	AK_MaxReached = 9,
	[Token(Token = "0x40010C2")]
	AK_InvalidID = 14,
	[Token(Token = "0x40010C3")]
	AK_IDNotFound = 15,
	[Token(Token = "0x40010C4")]
	AK_InvalidInstanceID = 16,
	[Token(Token = "0x40010C5")]
	AK_NoMoreData = 17,
	[Token(Token = "0x40010C6")]
	AK_InvalidStateGroup = 20,
	[Token(Token = "0x40010C7")]
	AK_ChildAlreadyHasAParent = 21,
	[Token(Token = "0x40010C8")]
	AK_InvalidLanguage = 22,
	[Token(Token = "0x40010C9")]
	AK_CannotAddItseflAsAChild = 23,
	[Token(Token = "0x40010CA")]
	AK_InvalidParameter = 31,
	[Token(Token = "0x40010CB")]
	AK_ElementAlreadyInList = 35,
	[Token(Token = "0x40010CC")]
	AK_PathNotFound = 36,
	[Token(Token = "0x40010CD")]
	AK_PathNoVertices = 37,
	[Token(Token = "0x40010CE")]
	AK_PathNotRunning = 38,
	[Token(Token = "0x40010CF")]
	AK_PathNotPaused = 39,
	[Token(Token = "0x40010D0")]
	AK_PathNodeAlreadyInList = 40,
	[Token(Token = "0x40010D1")]
	AK_PathNodeNotInList = 41,
	[Token(Token = "0x40010D2")]
	AK_DataNeeded = 43,
	[Token(Token = "0x40010D3")]
	AK_NoDataNeeded = 44,
	[Token(Token = "0x40010D4")]
	AK_DataReady = 45,
	[Token(Token = "0x40010D5")]
	AK_NoDataReady = 46,
	[Token(Token = "0x40010D6")]
	AK_InsufficientMemory = 52,
	[Token(Token = "0x40010D7")]
	AK_Cancelled = 53,
	[Token(Token = "0x40010D8")]
	AK_UnknownBankID = 54,
	[Token(Token = "0x40010D9")]
	AK_BankReadError = 56,
	[Token(Token = "0x40010DA")]
	AK_InvalidSwitchType = 57,
	[Token(Token = "0x40010DB")]
	AK_FormatNotReady = 63,
	[Token(Token = "0x40010DC")]
	AK_WrongBankVersion = 64,
	[Token(Token = "0x40010DD")]
	AK_FileNotFound = 66,
	[Token(Token = "0x40010DE")]
	AK_DeviceNotReady = 67,
	[Token(Token = "0x40010DF")]
	AK_BankAlreadyLoaded = 69,
	[Token(Token = "0x40010E0")]
	AK_RenderedFX = 71,
	[Token(Token = "0x40010E1")]
	AK_ProcessNeeded = 72,
	[Token(Token = "0x40010E2")]
	AK_ProcessDone = 73,
	[Token(Token = "0x40010E3")]
	AK_MemManagerNotInitialized = 74,
	[Token(Token = "0x40010E4")]
	AK_StreamMgrNotInitialized = 75,
	[Token(Token = "0x40010E5")]
	AK_SSEInstructionsNotSupported = 76,
	[Token(Token = "0x40010E6")]
	AK_Busy = 77,
	[Token(Token = "0x40010E7")]
	AK_UnsupportedChannelConfig = 78,
	[Token(Token = "0x40010E8")]
	AK_PluginMediaNotAvailable = 79,
	[Token(Token = "0x40010E9")]
	AK_MustBeVirtualized = 80,
	[Token(Token = "0x40010EA")]
	AK_CommandTooLarge = 81,
	[Token(Token = "0x40010EB")]
	AK_RejectedByFilter = 82,
	[Token(Token = "0x40010EC")]
	AK_InvalidCustomPlatformName = 83,
	[Token(Token = "0x40010ED")]
	AK_DLLCannotLoad = 84,
	[Token(Token = "0x40010EE")]
	AK_DLLPathNotFound = 85,
	[Token(Token = "0x40010EF")]
	AK_NoJavaVM = 86,
	[Token(Token = "0x40010F0")]
	AK_OpenSLError = 87,
	[Token(Token = "0x40010F1")]
	AK_PluginNotRegistered = 88,
	[Token(Token = "0x40010F2")]
	AK_DataAlignmentError = 89,
	[Token(Token = "0x40010F3")]
	AK_DeviceNotCompatible = 90,
	[Token(Token = "0x40010F4")]
	AK_DuplicateUniqueID = 91,
	[Token(Token = "0x40010F5")]
	AK_InitBankNotLoaded = 92,
	[Token(Token = "0x40010F6")]
	AK_DeviceNotFound = 93
}
[Token(Token = "0x2000290")]
public enum Ak3DPositionType
{
	[Token(Token = "0x40010F8")]
	AK_3DPositionType_Emitter,
	[Token(Token = "0x40010F9")]
	AK_3DPositionType_EmitterWithAutomation,
	[Token(Token = "0x40010FA")]
	AK_3DPositionType_ListenerWithAutomation
}
[Token(Token = "0x2000291")]
public enum Ak3DSpatializationMode
{
	[Token(Token = "0x40010FC")]
	AK_SpatializationMode_None,
	[Token(Token = "0x40010FD")]
	AK_SpatializationMode_PositionOnly,
	[Token(Token = "0x40010FE")]
	AK_SpatializationMode_PositionAndOrientation
}
[Token(Token = "0x2000292")]
public class AkAcousticSurface : IDisposable
{
	[Token(Token = "0x40010FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700007F")]
	public uint textureID
	{
		[Token(Token = "0x6001106")]
		[Address(RVA = "0x16A89A4", Offset = "0x16A89A4", VA = "0x16A89A4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001105")]
		[Address(RVA = "0x16A8928", Offset = "0x16A8928", VA = "0x16A8928")]
		set
		{
		}
	}

	[Token(Token = "0x17000080")]
	public uint reflectorChannelMask
	{
		[Token(Token = "0x6001108")]
		[Address(RVA = "0x16A8A8C", Offset = "0x16A8A8C", VA = "0x16A8A8C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001107")]
		[Address(RVA = "0x16A8A10", Offset = "0x16A8A10", VA = "0x16A8A10")]
		set
		{
		}
	}

	[Token(Token = "0x17000081")]
	public string strName
	{
		[Token(Token = "0x600110A")]
		[Address(RVA = "0x16A8B74", Offset = "0x16A8B74", VA = "0x16A8B74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001109")]
		[Address(RVA = "0x16A8AF8", Offset = "0x16A8AF8", VA = "0x16A8AF8")]
		set
		{
		}
	}

	[Token(Token = "0x60010FF")]
	[Address(RVA = "0x16A8634", Offset = "0x16A8634", VA = "0x16A8634")]
	internal AkAcousticSurface(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001100")]
	[Address(RVA = "0x16A8674", Offset = "0x16A8674", VA = "0x16A8674")]
	internal static IntPtr getCPtr(AkAcousticSurface obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001101")]
	[Address(RVA = "0x16A86C4", Offset = "0x16A86C4", VA = "0x16A86C4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001102")]
	[Address(RVA = "0x16A86F8", Offset = "0x16A86F8", VA = "0x16A86F8", Slot = "1")]
	~AkAcousticSurface()
	{
	}

	[Token(Token = "0x6001103")]
	[Address(RVA = "0x16A8768", Offset = "0x16A8768", VA = "0x16A8768", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001104")]
	[Address(RVA = "0x16A88A4", Offset = "0x16A88A4", VA = "0x16A88A4")]
	public AkAcousticSurface()
	{
	}

	[Token(Token = "0x600110B")]
	[Address(RVA = "0x16A8C14", Offset = "0x16A8C14", VA = "0x16A8C14")]
	public void Clear()
	{
	}

	[Token(Token = "0x600110C")]
	[Address(RVA = "0x16A8C80", Offset = "0x16A8C80", VA = "0x16A8C80")]
	public void DeleteName()
	{
	}

	[Token(Token = "0x600110D")]
	[Address(RVA = "0x16A8CEC", Offset = "0x16A8CEC", VA = "0x16A8CEC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600110E")]
	[Address(RVA = "0x16A8D4C", Offset = "0x16A8D4C", VA = "0x16A8D4C")]
	public void Clone(AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x2000293")]
public enum AkActionOnEventType
{
	[Token(Token = "0x4001102")]
	AkActionOnEventType_Stop,
	[Token(Token = "0x4001103")]
	AkActionOnEventType_Pause,
	[Token(Token = "0x4001104")]
	AkActionOnEventType_Resume,
	[Token(Token = "0x4001105")]
	AkActionOnEventType_Break,
	[Token(Token = "0x4001106")]
	AkActionOnEventType_ReleaseEnvelope
}
[Token(Token = "0x2000294")]
public enum AkAudioDeviceState
{
	[Token(Token = "0x4001108")]
	AkDeviceState_Active = 1,
	[Token(Token = "0x4001109")]
	AkDeviceState_Disabled = 2,
	[Token(Token = "0x400110A")]
	AkDeviceState_NotPresent = 4,
	[Token(Token = "0x400110B")]
	AkDeviceState_Unplugged = 8,
	[Token(Token = "0x400110C")]
	AkDeviceState_All = 15
}
[Token(Token = "0x2000295")]
public class AkAudioFormat : IDisposable
{
	[Token(Token = "0x400110D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400110E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000082")]
	public uint uSampleRate
	{
		[Token(Token = "0x6001115")]
		[Address(RVA = "0x16AA7FC", Offset = "0x16AA7FC", VA = "0x16AA7FC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001114")]
		[Address(RVA = "0x16AA780", Offset = "0x16AA780", VA = "0x16AA780")]
		set
		{
		}
	}

	[Token(Token = "0x17000083")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x6001117")]
		[Address(RVA = "0x16AA960", Offset = "0x16AA960", VA = "0x16AA960")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001116")]
		[Address(RVA = "0x16AA868", Offset = "0x16AA868", VA = "0x16AA868")]
		set
		{
		}
	}

	[Token(Token = "0x17000084")]
	public uint uBitsPerSample
	{
		[Token(Token = "0x6001119")]
		[Address(RVA = "0x16AAACC", Offset = "0x16AAACC", VA = "0x16AAACC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001118")]
		[Address(RVA = "0x16AAA50", Offset = "0x16AAA50", VA = "0x16AAA50")]
		set
		{
		}
	}

	[Token(Token = "0x17000085")]
	public uint uBlockAlign
	{
		[Token(Token = "0x600111B")]
		[Address(RVA = "0x16AABB4", Offset = "0x16AABB4", VA = "0x16AABB4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600111A")]
		[Address(RVA = "0x16AAB38", Offset = "0x16AAB38", VA = "0x16AAB38")]
		set
		{
		}
	}

	[Token(Token = "0x17000086")]
	public uint uTypeID
	{
		[Token(Token = "0x600111D")]
		[Address(RVA = "0x16AAC9C", Offset = "0x16AAC9C", VA = "0x16AAC9C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600111C")]
		[Address(RVA = "0x16AAC20", Offset = "0x16AAC20", VA = "0x16AAC20")]
		set
		{
		}
	}

	[Token(Token = "0x17000087")]
	public uint uInterleaveID
	{
		[Token(Token = "0x600111F")]
		[Address(RVA = "0x16AAD84", Offset = "0x16AAD84", VA = "0x16AAD84")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600111E")]
		[Address(RVA = "0x16AAD08", Offset = "0x16AAD08", VA = "0x16AAD08")]
		set
		{
		}
	}

	[Token(Token = "0x600110F")]
	[Address(RVA = "0x16AA510", Offset = "0x16AA510", VA = "0x16AA510")]
	internal AkAudioFormat(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001110")]
	[Address(RVA = "0x16AA550", Offset = "0x16AA550", VA = "0x16AA550")]
	internal static IntPtr getCPtr(AkAudioFormat obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001111")]
	[Address(RVA = "0x16AA5A0", Offset = "0x16AA5A0", VA = "0x16AA5A0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001112")]
	[Address(RVA = "0x16AA5D4", Offset = "0x16AA5D4", VA = "0x16AA5D4", Slot = "1")]
	~AkAudioFormat()
	{
	}

	[Token(Token = "0x6001113")]
	[Address(RVA = "0x16AA644", Offset = "0x16AA644", VA = "0x16AA644", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001120")]
	[Address(RVA = "0x16AADF0", Offset = "0x16AADF0", VA = "0x16AADF0")]
	public uint GetNumChannels()
	{
		return default(uint);
	}

	[Token(Token = "0x6001121")]
	[Address(RVA = "0x16AAE5C", Offset = "0x16AAE5C", VA = "0x16AAE5C")]
	public uint GetBitsPerSample()
	{
		return default(uint);
	}

	[Token(Token = "0x6001122")]
	[Address(RVA = "0x16AAEC8", Offset = "0x16AAEC8", VA = "0x16AAEC8")]
	public uint GetBlockAlign()
	{
		return default(uint);
	}

	[Token(Token = "0x6001123")]
	[Address(RVA = "0x16AAF34", Offset = "0x16AAF34", VA = "0x16AAF34")]
	public uint GetTypeID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001124")]
	[Address(RVA = "0x16AAFA0", Offset = "0x16AAFA0", VA = "0x16AAFA0")]
	public uint GetInterleaveID()
	{
		return default(uint);
	}

	[Token(Token = "0x6001125")]
	[Address(RVA = "0x16AB00C", Offset = "0x16AB00C", VA = "0x16AB00C")]
	public void SetAll(uint in_uSampleRate, AkChannelConfig in_channelConfig, uint in_uBitsPerSample, uint in_uBlockAlign, uint in_uTypeID, uint in_uInterleaveID)
	{
	}

	[Token(Token = "0x6001126")]
	[Address(RVA = "0x16AB0EC", Offset = "0x16AB0EC", VA = "0x16AB0EC")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}

	[Token(Token = "0x6001127")]
	[Address(RVA = "0x16AB158", Offset = "0x16AB158", VA = "0x16AB158")]
	public AkAudioFormat()
	{
	}
}
[Token(Token = "0x2000296")]
public class AkAudioInterruptionCallbackInfo : IDisposable
{
	[Token(Token = "0x400110F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000088")]
	public bool bEnterInterruption
	{
		[Token(Token = "0x600112D")]
		[Address(RVA = "0x16ACC2C", Offset = "0x16ACC2C", VA = "0x16ACC2C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001128")]
	[Address(RVA = "0x16AC9BC", Offset = "0x16AC9BC", VA = "0x16AC9BC")]
	internal AkAudioInterruptionCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001129")]
	[Address(RVA = "0x16AC9FC", Offset = "0x16AC9FC", VA = "0x16AC9FC")]
	internal static IntPtr getCPtr(AkAudioInterruptionCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600112A")]
	[Address(RVA = "0x16ACA4C", Offset = "0x16ACA4C", VA = "0x16ACA4C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600112B")]
	[Address(RVA = "0x16ACA80", Offset = "0x16ACA80", VA = "0x16ACA80", Slot = "1")]
	~AkAudioInterruptionCallbackInfo()
	{
	}

	[Token(Token = "0x600112C")]
	[Address(RVA = "0x16ACAF0", Offset = "0x16ACAF0", VA = "0x16ACAF0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600112E")]
	[Address(RVA = "0x16ACC98", Offset = "0x16ACC98", VA = "0x16ACC98")]
	public AkAudioInterruptionCallbackInfo()
	{
	}
}
[Token(Token = "0x2000297")]
public class AkAudioSettings : IDisposable
{
	[Token(Token = "0x4001111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000089")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x6001135")]
		[Address(RVA = "0x16ADD0C", Offset = "0x16ADD0C", VA = "0x16ADD0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001134")]
		[Address(RVA = "0x16ADC90", Offset = "0x16ADC90", VA = "0x16ADC90")]
		set
		{
		}
	}

	[Token(Token = "0x1700008A")]
	public uint uNumSamplesPerSecond
	{
		[Token(Token = "0x6001137")]
		[Address(RVA = "0x16ADDF4", Offset = "0x16ADDF4", VA = "0x16ADDF4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001136")]
		[Address(RVA = "0x16ADD78", Offset = "0x16ADD78", VA = "0x16ADD78")]
		set
		{
		}
	}

	[Token(Token = "0x600112F")]
	[Address(RVA = "0x16ADA20", Offset = "0x16ADA20", VA = "0x16ADA20")]
	internal AkAudioSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001130")]
	[Address(RVA = "0x16ADA60", Offset = "0x16ADA60", VA = "0x16ADA60")]
	internal static IntPtr getCPtr(AkAudioSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001131")]
	[Address(RVA = "0x16ADAB0", Offset = "0x16ADAB0", VA = "0x16ADAB0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001132")]
	[Address(RVA = "0x16ADAE4", Offset = "0x16ADAE4", VA = "0x16ADAE4", Slot = "1")]
	~AkAudioSettings()
	{
	}

	[Token(Token = "0x6001133")]
	[Address(RVA = "0x16ADB54", Offset = "0x16ADB54", VA = "0x16ADB54", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001138")]
	[Address(RVA = "0x16ADE60", Offset = "0x16ADE60", VA = "0x16ADE60")]
	public AkAudioSettings()
	{
	}
}
[Token(Token = "0x2000298")]
public class AkAudioSourceChangeCallbackInfo : IDisposable
{
	[Token(Token = "0x4001113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700008B")]
	public bool bOtherAudioPlaying
	{
		[Token(Token = "0x600113E")]
		[Address(RVA = "0x16AE154", Offset = "0x16AE154", VA = "0x16AE154")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6001139")]
	[Address(RVA = "0x16ADEE4", Offset = "0x16ADEE4", VA = "0x16ADEE4")]
	internal AkAudioSourceChangeCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600113A")]
	[Address(RVA = "0x16ADF24", Offset = "0x16ADF24", VA = "0x16ADF24")]
	internal static IntPtr getCPtr(AkAudioSourceChangeCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600113B")]
	[Address(RVA = "0x16ADF74", Offset = "0x16ADF74", VA = "0x16ADF74", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600113C")]
	[Address(RVA = "0x16ADFA8", Offset = "0x16ADFA8", VA = "0x16ADFA8", Slot = "1")]
	~AkAudioSourceChangeCallbackInfo()
	{
	}

	[Token(Token = "0x600113D")]
	[Address(RVA = "0x16AE018", Offset = "0x16AE018", VA = "0x16AE018", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600113F")]
	[Address(RVA = "0x16AE1C0", Offset = "0x16AE1C0", VA = "0x16AE1C0")]
	public AkAudioSourceChangeCallbackInfo()
	{
	}
}
[Token(Token = "0x2000299")]
public class AkAuxSendValue : IDisposable
{
	[Token(Token = "0x4001115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700008C")]
	public ulong listenerID
	{
		[Token(Token = "0x6001146")]
		[Address(RVA = "0x16AEE24", Offset = "0x16AEE24", VA = "0x16AEE24")]
		get
		{
			return default(ulong);
		}
		[Token(Token = "0x6001145")]
		[Address(RVA = "0x16AEDA8", Offset = "0x16AEDA8", VA = "0x16AEDA8")]
		set
		{
		}
	}

	[Token(Token = "0x1700008D")]
	public uint auxBusID
	{
		[Token(Token = "0x6001148")]
		[Address(RVA = "0x16AEF0C", Offset = "0x16AEF0C", VA = "0x16AEF0C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001147")]
		[Address(RVA = "0x16AEE90", Offset = "0x16AEE90", VA = "0x16AEE90")]
		set
		{
		}
	}

	[Token(Token = "0x1700008E")]
	public float fControlValue
	{
		[Token(Token = "0x600114A")]
		[Address(RVA = "0x16AEFF4", Offset = "0x16AEFF4", VA = "0x16AEFF4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001149")]
		[Address(RVA = "0x16AEF78", Offset = "0x16AEF78", VA = "0x16AEF78")]
		set
		{
		}
	}

	[Token(Token = "0x6001140")]
	[Address(RVA = "0x16AE414", Offset = "0x16AE414", VA = "0x16AE414")]
	internal AkAuxSendValue(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001141")]
	[Address(RVA = "0x16AEB78", Offset = "0x16AEB78", VA = "0x16AEB78")]
	internal static IntPtr getCPtr(AkAuxSendValue obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001142")]
	[Address(RVA = "0x16AEBC8", Offset = "0x16AEBC8", VA = "0x16AEBC8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001143")]
	[Address(RVA = "0x16AEBFC", Offset = "0x16AEBFC", VA = "0x16AEBFC", Slot = "1")]
	~AkAuxSendValue()
	{
	}

	[Token(Token = "0x6001144")]
	[Address(RVA = "0x16AEC6C", Offset = "0x16AEC6C", VA = "0x16AEC6C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600114B")]
	[Address(RVA = "0x16AF060", Offset = "0x16AF060", VA = "0x16AF060")]
	public void Set(GameObject listener, uint id, float value)
	{
	}

	[Token(Token = "0x600114C")]
	[Address(RVA = "0x16AF134", Offset = "0x16AF134", VA = "0x16AF134")]
	public bool IsSame(GameObject listener, uint id)
	{
		return default(bool);
	}

	[Token(Token = "0x600114D")]
	[Address(RVA = "0x16AF1F8", Offset = "0x16AF1F8", VA = "0x16AF1F8")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x200029A")]
public class AkBankCallbackInfo : IDisposable
{
	[Token(Token = "0x4001117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700008F")]
	public uint bankID
	{
		[Token(Token = "0x6001153")]
		[Address(RVA = "0x16AF978", Offset = "0x16AF978", VA = "0x16AF978")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000090")]
	public IntPtr inMemoryBankPtr
	{
		[Token(Token = "0x6001154")]
		[Address(RVA = "0x16AF9E4", Offset = "0x16AF9E4", VA = "0x16AF9E4")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000091")]
	public AKRESULT loadResult
	{
		[Token(Token = "0x6001155")]
		[Address(RVA = "0x16AFA50", Offset = "0x16AFA50", VA = "0x16AFA50")]
		get
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x17000092")]
	public int memPoolId
	{
		[Token(Token = "0x6001156")]
		[Address(RVA = "0x16AFABC", Offset = "0x16AFABC", VA = "0x16AFABC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600114E")]
	[Address(RVA = "0x16AF708", Offset = "0x16AF708", VA = "0x16AF708")]
	internal AkBankCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600114F")]
	[Address(RVA = "0x16AF748", Offset = "0x16AF748", VA = "0x16AF748")]
	internal static IntPtr getCPtr(AkBankCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001150")]
	[Address(RVA = "0x16AF798", Offset = "0x16AF798", VA = "0x16AF798", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001151")]
	[Address(RVA = "0x16AF7CC", Offset = "0x16AF7CC", VA = "0x16AF7CC", Slot = "1")]
	~AkBankCallbackInfo()
	{
	}

	[Token(Token = "0x6001152")]
	[Address(RVA = "0x16AF83C", Offset = "0x16AF83C", VA = "0x16AF83C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001157")]
	[Address(RVA = "0x16AFB28", Offset = "0x16AFB28", VA = "0x16AFB28")]
	public AkBankCallbackInfo()
	{
	}
}
[Token(Token = "0x200029B")]
public enum AkBankContent
{
	[Token(Token = "0x400111A")]
	AkBankContent_StructureOnly,
	[Token(Token = "0x400111B")]
	AkBankContent_All
}
[Token(Token = "0x200029C")]
public enum AkBusHierarchyFlags
{
	[Token(Token = "0x400111D")]
	AkBusHierarchy_Primary = 1,
	[Token(Token = "0x400111E")]
	AkBusHierarchy_Secondary = 2,
	[Token(Token = "0x400111F")]
	AkBusHierarchy_IsMaster = 0x80
}
[Token(Token = "0x200029D")]
public class AkCallbackInfo : IDisposable
{
	[Token(Token = "0x4001120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000093")]
	public IntPtr pCookie
	{
		[Token(Token = "0x600115D")]
		[Address(RVA = "0x16B1ACC", Offset = "0x16B1ACC", VA = "0x16B1ACC")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000094")]
	public ulong gameObjID
	{
		[Token(Token = "0x600115E")]
		[Address(RVA = "0x16B1B38", Offset = "0x16B1B38", VA = "0x16B1B38")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x6001158")]
	[Address(RVA = "0x16B185C", Offset = "0x16B185C", VA = "0x16B185C")]
	internal AkCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001159")]
	[Address(RVA = "0x16B189C", Offset = "0x16B189C", VA = "0x16B189C")]
	internal static IntPtr getCPtr(AkCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600115A")]
	[Address(RVA = "0x16B18EC", Offset = "0x16B18EC", VA = "0x16B18EC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600115B")]
	[Address(RVA = "0x16B1920", Offset = "0x16B1920", VA = "0x16B1920", Slot = "1")]
	~AkCallbackInfo()
	{
	}

	[Token(Token = "0x600115C")]
	[Address(RVA = "0x16B1990", Offset = "0x16B1990", VA = "0x16B1990", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600115F")]
	[Address(RVA = "0x16B1BA4", Offset = "0x16B1BA4", VA = "0x16B1BA4")]
	public AkCallbackInfo()
	{
	}
}
[Token(Token = "0x200029E")]
public class AkCallbackSerializer : IDisposable
{
	[Token(Token = "0x4001122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001123")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001160")]
	[Address(RVA = "0x16B4B44", Offset = "0x16B4B44", VA = "0x16B4B44")]
	internal AkCallbackSerializer(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001161")]
	[Address(RVA = "0x16B4B84", Offset = "0x16B4B84", VA = "0x16B4B84")]
	internal static IntPtr getCPtr(AkCallbackSerializer obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001162")]
	[Address(RVA = "0x16B4BD4", Offset = "0x16B4BD4", VA = "0x16B4BD4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001163")]
	[Address(RVA = "0x16B4C08", Offset = "0x16B4C08", VA = "0x16B4C08", Slot = "1")]
	~AkCallbackSerializer()
	{
	}

	[Token(Token = "0x6001164")]
	[Address(RVA = "0x16B4C78", Offset = "0x16B4C78", VA = "0x16B4C78", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001165")]
	[Address(RVA = "0x16B25F4", Offset = "0x16B25F4", VA = "0x16B25F4")]
	public static AKRESULT Init(IntPtr in_pMemory, uint in_uSize)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001166")]
	[Address(RVA = "0x16B2748", Offset = "0x16B2748", VA = "0x16B2748")]
	public static void Term()
	{
	}

	[Token(Token = "0x6001167")]
	[Address(RVA = "0x16B3544", Offset = "0x16B3544", VA = "0x16B3544")]
	public static IntPtr Lock()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001168")]
	[Address(RVA = "0x16B2830", Offset = "0x16B2830", VA = "0x16B2830")]
	public static void SetLocalOutput(uint in_uErrorLevel)
	{
	}

	[Token(Token = "0x6001169")]
	[Address(RVA = "0x16B3F70", Offset = "0x16B3F70", VA = "0x16B3F70")]
	public static void Unlock()
	{
	}

	[Token(Token = "0x600116A")]
	[Address(RVA = "0x16B4DB4", Offset = "0x16B4DB4", VA = "0x16B4DB4")]
	public static AKRESULT AudioSourceChangeCallbackFunc(bool in_bOtherAudioPlaying, object in_pCookie)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600116B")]
	[Address(RVA = "0x16B4E4C", Offset = "0x16B4E4C", VA = "0x16B4E4C")]
	public AkCallbackSerializer()
	{
	}
}
[Token(Token = "0x200029F")]
public enum AkCallbackType
{
	[Token(Token = "0x4001125")]
	AK_EndOfEvent = 1,
	[Token(Token = "0x4001126")]
	AK_EndOfDynamicSequenceItem = 2,
	[Token(Token = "0x4001127")]
	AK_Marker = 4,
	[Token(Token = "0x4001128")]
	AK_Duration = 8,
	[Token(Token = "0x4001129")]
	AK_SpeakerVolumeMatrix = 16,
	[Token(Token = "0x400112A")]
	AK_Starvation = 32,
	[Token(Token = "0x400112B")]
	AK_MusicPlaylistSelect = 64,
	[Token(Token = "0x400112C")]
	AK_MusicPlayStarted = 128,
	[Token(Token = "0x400112D")]
	AK_MusicSyncBeat = 256,
	[Token(Token = "0x400112E")]
	AK_MusicSyncBar = 512,
	[Token(Token = "0x400112F")]
	AK_MusicSyncEntry = 1024,
	[Token(Token = "0x4001130")]
	AK_MusicSyncExit = 2048,
	[Token(Token = "0x4001131")]
	AK_MusicSyncGrid = 4096,
	[Token(Token = "0x4001132")]
	AK_MusicSyncUserCue = 8192,
	[Token(Token = "0x4001133")]
	AK_MusicSyncPoint = 16384,
	[Token(Token = "0x4001134")]
	AK_MusicSyncAll = 32512,
	[Token(Token = "0x4001135")]
	AK_MIDIEvent = 65536,
	[Token(Token = "0x4001136")]
	AK_CallbackBits = 1048575,
	[Token(Token = "0x4001137")]
	AK_EnableGetSourcePlayPosition = 1048576,
	[Token(Token = "0x4001138")]
	AK_EnableGetMusicPlayPosition = 2097152,
	[Token(Token = "0x4001139")]
	AK_EnableGetSourceStreamBuffering = 4194304,
	[Token(Token = "0x400113A")]
	AK_Monitoring = 536870912,
	[Token(Token = "0x400113B")]
	AK_AudioSourceChange = 587202560,
	[Token(Token = "0x400113C")]
	AK_Bank = 1073741824,
	[Token(Token = "0x400113D")]
	AK_AudioInterruption = 570425344
}
[Token(Token = "0x20002A0")]
public class AkChannelConfig : IDisposable
{
	[Token(Token = "0x400113E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400113F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000095")]
	public uint uNumChannels
	{
		[Token(Token = "0x6001172")]
		[Address(RVA = "0x16B512C", Offset = "0x16B512C", VA = "0x16B512C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001171")]
		[Address(RVA = "0x16B50B0", Offset = "0x16B50B0", VA = "0x16B50B0")]
		set
		{
		}
	}

	[Token(Token = "0x17000096")]
	public uint eConfigType
	{
		[Token(Token = "0x6001174")]
		[Address(RVA = "0x16B5214", Offset = "0x16B5214", VA = "0x16B5214")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001173")]
		[Address(RVA = "0x16B5198", Offset = "0x16B5198", VA = "0x16B5198")]
		set
		{
		}
	}

	[Token(Token = "0x17000097")]
	public uint uChannelMask
	{
		[Token(Token = "0x6001176")]
		[Address(RVA = "0x16B52FC", Offset = "0x16B52FC", VA = "0x16B52FC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001175")]
		[Address(RVA = "0x16B5280", Offset = "0x16B5280", VA = "0x16B5280")]
		set
		{
		}
	}

	[Token(Token = "0x600116C")]
	[Address(RVA = "0x16AAA10", Offset = "0x16AAA10", VA = "0x16AAA10")]
	internal AkChannelConfig(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600116D")]
	[Address(RVA = "0x16AA910", Offset = "0x16AA910", VA = "0x16AA910")]
	internal static IntPtr getCPtr(AkChannelConfig obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600116E")]
	[Address(RVA = "0x16B4ED0", Offset = "0x16B4ED0", VA = "0x16B4ED0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600116F")]
	[Address(RVA = "0x16B4F04", Offset = "0x16B4F04", VA = "0x16B4F04", Slot = "1")]
	~AkChannelConfig()
	{
	}

	[Token(Token = "0x6001170")]
	[Address(RVA = "0x16B4F74", Offset = "0x16B4F74", VA = "0x16B4F74", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001177")]
	[Address(RVA = "0x16B5368", Offset = "0x16B5368", VA = "0x16B5368")]
	public AkChannelConfig()
	{
	}

	[Token(Token = "0x6001178")]
	[Address(RVA = "0x16B53EC", Offset = "0x16B53EC", VA = "0x16B53EC")]
	public AkChannelConfig(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x6001179")]
	[Address(RVA = "0x16B5488", Offset = "0x16B5488", VA = "0x16B5488")]
	public void Clear()
	{
	}

	[Token(Token = "0x600117A")]
	[Address(RVA = "0x16B54F4", Offset = "0x16B54F4", VA = "0x16B54F4")]
	public void SetStandard(uint in_uChannelMask)
	{
	}

	[Token(Token = "0x600117B")]
	[Address(RVA = "0x16B5570", Offset = "0x16B5570", VA = "0x16B5570")]
	public void SetStandardOrAnonymous(uint in_uNumChannels, uint in_uChannelMask)
	{
	}

	[Token(Token = "0x600117C")]
	[Address(RVA = "0x16B55F4", Offset = "0x16B55F4", VA = "0x16B55F4")]
	public void SetAnonymous(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x600117D")]
	[Address(RVA = "0x16B5670", Offset = "0x16B5670", VA = "0x16B5670")]
	public void SetAmbisonic(uint in_uNumChannels)
	{
	}

	[Token(Token = "0x600117E")]
	[Address(RVA = "0x16B56EC", Offset = "0x16B56EC", VA = "0x16B56EC")]
	public bool IsValid()
	{
		return default(bool);
	}

	[Token(Token = "0x600117F")]
	[Address(RVA = "0x16B5758", Offset = "0x16B5758", VA = "0x16B5758")]
	public uint Serialize()
	{
		return default(uint);
	}

	[Token(Token = "0x6001180")]
	[Address(RVA = "0x16B57C4", Offset = "0x16B57C4", VA = "0x16B57C4")]
	public void Deserialize(uint in_uChannelConfig)
	{
	}

	[Token(Token = "0x6001181")]
	[Address(RVA = "0x16B5840", Offset = "0x16B5840", VA = "0x16B5840")]
	public AkChannelConfig RemoveLFE()
	{
		return null;
	}

	[Token(Token = "0x6001182")]
	[Address(RVA = "0x16B58E4", Offset = "0x16B58E4", VA = "0x16B58E4")]
	public AkChannelConfig RemoveCenter()
	{
		return null;
	}

	[Token(Token = "0x6001183")]
	[Address(RVA = "0x16B5988", Offset = "0x16B5988", VA = "0x16B5988")]
	public bool IsChannelConfigSupported()
	{
		return default(bool);
	}
}
[Token(Token = "0x20002A1")]
public enum AkChannelConfigType
{
	[Token(Token = "0x4001141")]
	AK_ChannelConfigType_Anonymous,
	[Token(Token = "0x4001142")]
	AK_ChannelConfigType_Standard,
	[Token(Token = "0x4001143")]
	AK_ChannelConfigType_Ambisonic
}
[Token(Token = "0x20002A2")]
public class AkChannelEmitter : IDisposable
{
	[Token(Token = "0x4001144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000098")]
	public AkTransform position
	{
		[Token(Token = "0x600118A")]
		[Address(RVA = "0x16B5CF4", Offset = "0x16B5CF4", VA = "0x16B5CF4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001189")]
		[Address(RVA = "0x16B5C64", Offset = "0x16B5C64", VA = "0x16B5C64")]
		set
		{
		}
	}

	[Token(Token = "0x17000099")]
	public uint uInputChannels
	{
		[Token(Token = "0x600118C")]
		[Address(RVA = "0x16B5E20", Offset = "0x16B5E20", VA = "0x16B5E20")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600118B")]
		[Address(RVA = "0x16B5DA4", Offset = "0x16B5DA4", VA = "0x16B5DA4")]
		set
		{
		}
	}

	[Token(Token = "0x6001184")]
	[Address(RVA = "0x16B59F4", Offset = "0x16B59F4", VA = "0x16B59F4")]
	internal AkChannelEmitter(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001185")]
	[Address(RVA = "0x16B5A34", Offset = "0x16B5A34", VA = "0x16B5A34")]
	internal static IntPtr getCPtr(AkChannelEmitter obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001186")]
	[Address(RVA = "0x16B5A84", Offset = "0x16B5A84", VA = "0x16B5A84", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001187")]
	[Address(RVA = "0x16B5AB8", Offset = "0x16B5AB8", VA = "0x16B5AB8", Slot = "1")]
	~AkChannelEmitter()
	{
	}

	[Token(Token = "0x6001188")]
	[Address(RVA = "0x16B5B28", Offset = "0x16B5B28", VA = "0x16B5B28", Slot = "6")]
	public virtual void Dispose()
	{
	}
}
[Token(Token = "0x20002A3")]
public enum AkChannelOrdering
{
	[Token(Token = "0x4001147")]
	ChannelOrdering_Standard,
	[Token(Token = "0x4001148")]
	ChannelOrdering_RunTime
}
[Token(Token = "0x20002A4")]
public enum AkConnectionType
{
	[Token(Token = "0x400114A")]
	ConnectionType_Direct,
	[Token(Token = "0x400114B")]
	ConnectionType_GameDefSend,
	[Token(Token = "0x400114C")]
	ConnectionType_UserDefSend
}
[Token(Token = "0x20002A5")]
public enum AkCurveInterpolation
{
	[Token(Token = "0x400114E")]
	AkCurveInterpolation_Log3 = 0,
	[Token(Token = "0x400114F")]
	AkCurveInterpolation_Sine = 1,
	[Token(Token = "0x4001150")]
	AkCurveInterpolation_Log1 = 2,
	[Token(Token = "0x4001151")]
	AkCurveInterpolation_InvSCurve = 3,
	[Token(Token = "0x4001152")]
	AkCurveInterpolation_Linear = 4,
	[Token(Token = "0x4001153")]
	AkCurveInterpolation_SCurve = 5,
	[Token(Token = "0x4001154")]
	AkCurveInterpolation_Exp1 = 6,
	[Token(Token = "0x4001155")]
	AkCurveInterpolation_SineRecip = 7,
	[Token(Token = "0x4001156")]
	AkCurveInterpolation_Exp3 = 8,
	[Token(Token = "0x4001157")]
	AkCurveInterpolation_LastFadeCurve = 8,
	[Token(Token = "0x4001158")]
	AkCurveInterpolation_Constant = 9
}
[Token(Token = "0x20002A6")]
public class AkDeviceSettings : IDisposable
{
	[Token(Token = "0x4001159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400115A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700009A")]
	public IntPtr pIOMemory
	{
		[Token(Token = "0x6001193")]
		[Address(RVA = "0x16B7BF4", Offset = "0x16B7BF4", VA = "0x16B7BF4")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001192")]
		[Address(RVA = "0x16B7B78", Offset = "0x16B7B78", VA = "0x16B7B78")]
		set
		{
		}
	}

	[Token(Token = "0x1700009B")]
	public uint uIOMemorySize
	{
		[Token(Token = "0x6001195")]
		[Address(RVA = "0x16B7C60", Offset = "0x16B7C60", VA = "0x16B7C60")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001194")]
		[Address(RVA = "0x16B646C", Offset = "0x16B646C", VA = "0x16B646C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009C")]
	public uint uIOMemoryAlignment
	{
		[Token(Token = "0x6001197")]
		[Address(RVA = "0x16B7D48", Offset = "0x16B7D48", VA = "0x16B7D48")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001196")]
		[Address(RVA = "0x16B7CCC", Offset = "0x16B7CCC", VA = "0x16B7CCC")]
		set
		{
		}
	}

	[Token(Token = "0x1700009D")]
	public int ePoolAttributes
	{
		[Token(Token = "0x6001199")]
		[Address(RVA = "0x16B7E30", Offset = "0x16B7E30", VA = "0x16B7E30")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001198")]
		[Address(RVA = "0x16B7DB4", Offset = "0x16B7DB4", VA = "0x16B7DB4")]
		set
		{
		}
	}

	[Token(Token = "0x1700009E")]
	public uint uGranularity
	{
		[Token(Token = "0x600119B")]
		[Address(RVA = "0x16B7F18", Offset = "0x16B7F18", VA = "0x16B7F18")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600119A")]
		[Address(RVA = "0x16B7E9C", Offset = "0x16B7E9C", VA = "0x16B7E9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700009F")]
	public uint uSchedulerTypeFlags
	{
		[Token(Token = "0x600119D")]
		[Address(RVA = "0x16B8000", Offset = "0x16B8000", VA = "0x16B8000")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600119C")]
		[Address(RVA = "0x16B7F84", Offset = "0x16B7F84", VA = "0x16B7F84")]
		set
		{
		}
	}

	[Token(Token = "0x170000A0")]
	public AkThreadProperties threadProperties
	{
		[Token(Token = "0x600119F")]
		[Address(RVA = "0x16B80FC", Offset = "0x16B80FC", VA = "0x16B80FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600119E")]
		[Address(RVA = "0x16B806C", Offset = "0x16B806C", VA = "0x16B806C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A1")]
	public float fTargetAutoStmBufferLength
	{
		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x16B81AC", Offset = "0x16B81AC", VA = "0x16B81AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x16B64E8", Offset = "0x16B64E8", VA = "0x16B64E8")]
		set
		{
		}
	}

	[Token(Token = "0x170000A2")]
	public uint uMaxConcurrentIO
	{
		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x16B8294", Offset = "0x16B8294", VA = "0x16B8294")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x16B8218", Offset = "0x16B8218", VA = "0x16B8218")]
		set
		{
		}
	}

	[Token(Token = "0x170000A3")]
	public bool bUseStreamCache
	{
		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x16B8300", Offset = "0x16B8300", VA = "0x16B8300")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x16B6564", Offset = "0x16B6564", VA = "0x16B6564")]
		set
		{
		}
	}

	[Token(Token = "0x170000A4")]
	public uint uMaxCachePinnedBytes
	{
		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x16B836C", Offset = "0x16B836C", VA = "0x16B836C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x16B65E0", Offset = "0x16B65E0", VA = "0x16B65E0")]
		set
		{
		}
	}

	[Token(Token = "0x600118D")]
	[Address(RVA = "0x16B7908", Offset = "0x16B7908", VA = "0x16B7908")]
	internal AkDeviceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600118E")]
	[Address(RVA = "0x16B7948", Offset = "0x16B7948", VA = "0x16B7948")]
	internal static IntPtr getCPtr(AkDeviceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600118F")]
	[Address(RVA = "0x16B7998", Offset = "0x16B7998", VA = "0x16B7998", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001190")]
	[Address(RVA = "0x16B79CC", Offset = "0x16B79CC", VA = "0x16B79CC", Slot = "1")]
	~AkDeviceSettings()
	{
	}

	[Token(Token = "0x6001191")]
	[Address(RVA = "0x16B7A3C", Offset = "0x16B7A3C", VA = "0x16B7A3C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60011A8")]
	[Address(RVA = "0x16B83D8", Offset = "0x16B83D8", VA = "0x16B83D8")]
	public AkDeviceSettings()
	{
	}
}
[Token(Token = "0x20002A7")]
public enum AkDiffractionFlags
{
	[Token(Token = "0x400115C")]
	DiffractionFlags_UseBuiltInParam = 1,
	[Token(Token = "0x400115D")]
	DiffractionFlags_UseObstruction = 2,
	[Token(Token = "0x400115E")]
	DiffractionFlags_CalcEmitterVirtualPosition = 8,
	[Token(Token = "0x400115F")]
	DefaultDiffractionFlags = 11
}
[Token(Token = "0x20002A8")]
public class AkDiffractionPathInfo : IDisposable
{
	[Token(Token = "0x4001160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x4001162")]
	public const uint kMaxNodes = 8u;

	[Token(Token = "0x170000A5")]
	public AkTransform virtualPos
	{
		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x16B875C", Offset = "0x16B875C", VA = "0x16B875C")]
		get
		{
			return null;
		}
		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x16B86CC", Offset = "0x16B86CC", VA = "0x16B86CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A6")]
	public uint nodeCount
	{
		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x16B8888", Offset = "0x16B8888", VA = "0x16B8888")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x16B880C", Offset = "0x16B880C", VA = "0x16B880C")]
		set
		{
		}
	}

	[Token(Token = "0x170000A7")]
	public float diffraction
	{
		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x16B8970", Offset = "0x16B8970", VA = "0x16B8970")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x16B88F4", Offset = "0x16B88F4", VA = "0x16B88F4")]
		set
		{
		}
	}

	[Token(Token = "0x170000A8")]
	public float totLength
	{
		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x16B8A58", Offset = "0x16B8A58", VA = "0x16B8A58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x16B89DC", Offset = "0x16B89DC", VA = "0x16B89DC")]
		set
		{
		}
	}

	[Token(Token = "0x170000A9")]
	public float obstructionValue
	{
		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x16B8B40", Offset = "0x16B8B40", VA = "0x16B8B40")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x16B8AC4", Offset = "0x16B8AC4", VA = "0x16B8AC4")]
		set
		{
		}
	}

	[Token(Token = "0x60011A9")]
	[Address(RVA = "0x16B845C", Offset = "0x16B845C", VA = "0x16B845C")]
	internal AkDiffractionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011AA")]
	[Address(RVA = "0x16B849C", Offset = "0x16B849C", VA = "0x16B849C")]
	internal static IntPtr getCPtr(AkDiffractionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011AB")]
	[Address(RVA = "0x16B84EC", Offset = "0x16B84EC", VA = "0x16B84EC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011AC")]
	[Address(RVA = "0x16B8520", Offset = "0x16B8520", VA = "0x16B8520", Slot = "1")]
	~AkDiffractionPathInfo()
	{
	}

	[Token(Token = "0x60011AD")]
	[Address(RVA = "0x16B8590", Offset = "0x16B8590", VA = "0x16B8590", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60011B8")]
	[Address(RVA = "0x16B8BAC", Offset = "0x16B8BAC", VA = "0x16B8BAC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60011B9")]
	[Address(RVA = "0x16B8C0C", Offset = "0x16B8C0C", VA = "0x16B8C0C")]
	public AkVector GetNodes(uint idx)
	{
		return null;
	}

	[Token(Token = "0x60011BA")]
	[Address(RVA = "0x16B8CCC", Offset = "0x16B8CCC", VA = "0x16B8CCC")]
	public float GetAngles(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x60011BB")]
	[Address(RVA = "0x16B8D48", Offset = "0x16B8D48", VA = "0x16B8D48")]
	public ulong GetPortals(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x60011BC")]
	[Address(RVA = "0x16B8DC4", Offset = "0x16B8DC4", VA = "0x16B8DC4")]
	public ulong GetRooms(uint idx)
	{
		return default(ulong);
	}

	[Token(Token = "0x60011BD")]
	[Address(RVA = "0x16B8E40", Offset = "0x16B8E40", VA = "0x16B8E40")]
	public void Clone(AkDiffractionPathInfo other)
	{
	}

	[Token(Token = "0x60011BE")]
	[Address(RVA = "0x16B8EE8", Offset = "0x16B8EE8", VA = "0x16B8EE8")]
	public AkDiffractionPathInfo()
	{
	}
}
[Token(Token = "0x20002A9")]
public class AkDurationCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x4001163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000AA")]
	public float fDuration
	{
		[Token(Token = "0x60011C4")]
		[Address(RVA = "0x16B967C", Offset = "0x16B967C", VA = "0x16B967C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AB")]
	public float fEstimatedDuration
	{
		[Token(Token = "0x60011C5")]
		[Address(RVA = "0x16B96E8", Offset = "0x16B96E8", VA = "0x16B96E8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x170000AC")]
	public uint audioNodeID
	{
		[Token(Token = "0x60011C6")]
		[Address(RVA = "0x16B9754", Offset = "0x16B9754", VA = "0x16B9754")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000AD")]
	public uint mediaID
	{
		[Token(Token = "0x60011C7")]
		[Address(RVA = "0x16B97C0", Offset = "0x16B97C0", VA = "0x16B97C0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000AE")]
	public bool bStreaming
	{
		[Token(Token = "0x60011C8")]
		[Address(RVA = "0x16B982C", Offset = "0x16B982C", VA = "0x16B982C")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60011BF")]
	[Address(RVA = "0x16B43EC", Offset = "0x16B43EC", VA = "0x16B43EC")]
	internal AkDurationCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011C0")]
	[Address(RVA = "0x16B91B8", Offset = "0x16B91B8", VA = "0x16B91B8")]
	internal static IntPtr getCPtr(AkDurationCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011C1")]
	[Address(RVA = "0x16B9208", Offset = "0x16B9208", VA = "0x16B9208", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011C2")]
	[Address(RVA = "0x16B9324", Offset = "0x16B9324", VA = "0x16B9324", Slot = "1")]
	~AkDurationCallbackInfo()
	{
	}

	[Token(Token = "0x60011C3")]
	[Address(RVA = "0x16B93F4", Offset = "0x16B93F4", VA = "0x16B93F4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60011C9")]
	[Address(RVA = "0x16B9898", Offset = "0x16B9898", VA = "0x16B9898")]
	public AkDurationCallbackInfo()
	{
	}
}
[Token(Token = "0x20002AA")]
public class AkDynamicSequenceItemCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4001164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000AF")]
	public uint playingID
	{
		[Token(Token = "0x60011CF")]
		[Address(RVA = "0x16B9B9C", Offset = "0x16B9B9C", VA = "0x16B9B9C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000B0")]
	public uint audioNodeID
	{
		[Token(Token = "0x60011D0")]
		[Address(RVA = "0x16B9C08", Offset = "0x16B9C08", VA = "0x16B9C08")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000B1")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x60011D1")]
		[Address(RVA = "0x16B9C74", Offset = "0x16B9C74", VA = "0x16B9C74")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x60011CA")]
	[Address(RVA = "0x16B4350", Offset = "0x16B4350", VA = "0x16B4350")]
	internal AkDynamicSequenceItemCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011CB")]
	[Address(RVA = "0x16B990C", Offset = "0x16B990C", VA = "0x16B990C")]
	internal static IntPtr getCPtr(AkDynamicSequenceItemCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011CC")]
	[Address(RVA = "0x16B995C", Offset = "0x16B995C", VA = "0x16B995C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011CD")]
	[Address(RVA = "0x16B99F0", Offset = "0x16B99F0", VA = "0x16B99F0", Slot = "1")]
	~AkDynamicSequenceItemCallbackInfo()
	{
	}

	[Token(Token = "0x60011CE")]
	[Address(RVA = "0x16B9A58", Offset = "0x16B9A58", VA = "0x16B9A58", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60011D2")]
	[Address(RVA = "0x16B9CE0", Offset = "0x16B9CE0", VA = "0x16B9CE0")]
	public AkDynamicSequenceItemCallbackInfo()
	{
	}
}
[Token(Token = "0x20002AB")]
public enum AkDynamicSequenceType
{
	[Token(Token = "0x4001166")]
	DynamicSequenceType_SampleAccurate,
	[Token(Token = "0x4001167")]
	DynamicSequenceType_NormalTransition
}
[Token(Token = "0x20002AC")]
public class AkEmitterSettings : IDisposable
{
	[Token(Token = "0x4001168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000B2")]
	public uint reflectAuxBusID
	{
		[Token(Token = "0x60011DA")]
		[Address(RVA = "0x16BA3D8", Offset = "0x16BA3D8", VA = "0x16BA3D8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011D9")]
		[Address(RVA = "0x16BA35C", Offset = "0x16BA35C", VA = "0x16BA35C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B3")]
	public float reflectionMaxPathLength
	{
		[Token(Token = "0x60011DC")]
		[Address(RVA = "0x16BA4C0", Offset = "0x16BA4C0", VA = "0x16BA4C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011DB")]
		[Address(RVA = "0x16BA444", Offset = "0x16BA444", VA = "0x16BA444")]
		set
		{
		}
	}

	[Token(Token = "0x170000B4")]
	public float reflectionsAuxBusGain
	{
		[Token(Token = "0x60011DE")]
		[Address(RVA = "0x16BA5A8", Offset = "0x16BA5A8", VA = "0x16BA5A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011DD")]
		[Address(RVA = "0x16BA52C", Offset = "0x16BA52C", VA = "0x16BA52C")]
		set
		{
		}
	}

	[Token(Token = "0x170000B5")]
	public uint reflectionsOrder
	{
		[Token(Token = "0x60011E0")]
		[Address(RVA = "0x16BA690", Offset = "0x16BA690", VA = "0x16BA690")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011DF")]
		[Address(RVA = "0x16BA614", Offset = "0x16BA614", VA = "0x16BA614")]
		set
		{
		}
	}

	[Token(Token = "0x170000B6")]
	public uint reflectorFilterMask
	{
		[Token(Token = "0x60011E2")]
		[Address(RVA = "0x16BA778", Offset = "0x16BA778", VA = "0x16BA778")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011E1")]
		[Address(RVA = "0x16BA6FC", Offset = "0x16BA6FC", VA = "0x16BA6FC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B7")]
	public float roomReverbAuxBusGain
	{
		[Token(Token = "0x60011E4")]
		[Address(RVA = "0x16BA860", Offset = "0x16BA860", VA = "0x16BA860")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011E3")]
		[Address(RVA = "0x16BA7E4", Offset = "0x16BA7E4", VA = "0x16BA7E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000B8")]
	public uint diffractionMaxEdges
	{
		[Token(Token = "0x60011E6")]
		[Address(RVA = "0x16BA948", Offset = "0x16BA948", VA = "0x16BA948")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011E5")]
		[Address(RVA = "0x16BA8CC", Offset = "0x16BA8CC", VA = "0x16BA8CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000B9")]
	public uint diffractionMaxPaths
	{
		[Token(Token = "0x60011E8")]
		[Address(RVA = "0x16BAA30", Offset = "0x16BAA30", VA = "0x16BAA30")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60011E7")]
		[Address(RVA = "0x16BA9B4", Offset = "0x16BA9B4", VA = "0x16BA9B4")]
		set
		{
		}
	}

	[Token(Token = "0x170000BA")]
	public float diffractionMaxPathLength
	{
		[Token(Token = "0x60011EA")]
		[Address(RVA = "0x16BAB18", Offset = "0x16BAB18", VA = "0x16BAB18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60011E9")]
		[Address(RVA = "0x16BAA9C", Offset = "0x16BAA9C", VA = "0x16BAA9C")]
		set
		{
		}
	}

	[Token(Token = "0x170000BB")]
	public byte useImageSources
	{
		[Token(Token = "0x60011EC")]
		[Address(RVA = "0x16BAC00", Offset = "0x16BAC00", VA = "0x16BAC00")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x60011EB")]
		[Address(RVA = "0x16BAB84", Offset = "0x16BAB84", VA = "0x16BAB84")]
		set
		{
		}
	}

	[Token(Token = "0x60011D3")]
	[Address(RVA = "0x16BA068", Offset = "0x16BA068", VA = "0x16BA068")]
	internal AkEmitterSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011D4")]
	[Address(RVA = "0x16BA0A8", Offset = "0x16BA0A8", VA = "0x16BA0A8")]
	internal static IntPtr getCPtr(AkEmitterSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011D5")]
	[Address(RVA = "0x16BA0F8", Offset = "0x16BA0F8", VA = "0x16BA0F8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011D6")]
	[Address(RVA = "0x16BA12C", Offset = "0x16BA12C", VA = "0x16BA12C", Slot = "1")]
	~AkEmitterSettings()
	{
	}

	[Token(Token = "0x60011D7")]
	[Address(RVA = "0x16BA19C", Offset = "0x16BA19C", VA = "0x16BA19C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60011D8")]
	[Address(RVA = "0x16BA2D8", Offset = "0x16BA2D8", VA = "0x16BA2D8")]
	public AkEmitterSettings()
	{
	}
}
[Token(Token = "0x20002AD")]
public class AkEventCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x400116A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000BC")]
	public uint playingID
	{
		[Token(Token = "0x60011F2")]
		[Address(RVA = "0x16ABF10", Offset = "0x16ABF10", VA = "0x16ABF10")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x170000BD")]
	public uint eventID
	{
		[Token(Token = "0x60011F3")]
		[Address(RVA = "0x16BB718", Offset = "0x16BB718", VA = "0x16BB718")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x60011ED")]
	[Address(RVA = "0x16B42B4", Offset = "0x16B42B4", VA = "0x16B42B4")]
	internal AkEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011EE")]
	[Address(RVA = "0x16BB6C8", Offset = "0x16BB6C8", VA = "0x16BB6C8")]
	internal static IntPtr getCPtr(AkEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011EF")]
	[Address(RVA = "0x16B9290", Offset = "0x16B9290", VA = "0x16B9290", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011F0")]
	[Address(RVA = "0x16B938C", Offset = "0x16B938C", VA = "0x16B938C", Slot = "1")]
	~AkEventCallbackInfo()
	{
	}

	[Token(Token = "0x60011F1")]
	[Address(RVA = "0x16B9538", Offset = "0x16B9538", VA = "0x16B9538", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60011F4")]
	[Address(RVA = "0x16BB784", Offset = "0x16BB784", VA = "0x16BB784")]
	public AkEventCallbackInfo()
	{
	}
}
[Token(Token = "0x20002AE")]
public class AkExternalSourceInfo : IDisposable
{
	[Token(Token = "0x400116B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400116C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000BE")]
	public uint iExternalSrcCookie
	{
		[Token(Token = "0x6001202")]
		[Address(RVA = "0x1C7C218", Offset = "0x1C7C218", VA = "0x1C7C218")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001201")]
		[Address(RVA = "0x1C7C19C", Offset = "0x1C7C19C", VA = "0x1C7C19C")]
		set
		{
		}
	}

	[Token(Token = "0x170000BF")]
	public uint idCodec
	{
		[Token(Token = "0x6001204")]
		[Address(RVA = "0x1C7C300", Offset = "0x1C7C300", VA = "0x1C7C300")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001203")]
		[Address(RVA = "0x1C7C284", Offset = "0x1C7C284", VA = "0x1C7C284")]
		set
		{
		}
	}

	[Token(Token = "0x170000C0")]
	public string szFile
	{
		[Token(Token = "0x6001206")]
		[Address(RVA = "0x1C7C3E8", Offset = "0x1C7C3E8", VA = "0x1C7C3E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001205")]
		[Address(RVA = "0x1C7C36C", Offset = "0x1C7C36C", VA = "0x1C7C36C")]
		set
		{
		}
	}

	[Token(Token = "0x170000C1")]
	public IntPtr pInMemory
	{
		[Token(Token = "0x6001208")]
		[Address(RVA = "0x1C7C504", Offset = "0x1C7C504", VA = "0x1C7C504")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001207")]
		[Address(RVA = "0x1C7C488", Offset = "0x1C7C488", VA = "0x1C7C488")]
		set
		{
		}
	}

	[Token(Token = "0x170000C2")]
	public uint uiMemorySize
	{
		[Token(Token = "0x600120A")]
		[Address(RVA = "0x1C7C5EC", Offset = "0x1C7C5EC", VA = "0x1C7C5EC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001209")]
		[Address(RVA = "0x1C7C570", Offset = "0x1C7C570", VA = "0x1C7C570")]
		set
		{
		}
	}

	[Token(Token = "0x170000C3")]
	public uint idFile
	{
		[Token(Token = "0x600120C")]
		[Address(RVA = "0x1C7C6D4", Offset = "0x1C7C6D4", VA = "0x1C7C6D4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600120B")]
		[Address(RVA = "0x1C7C658", Offset = "0x1C7C658", VA = "0x1C7C658")]
		set
		{
		}
	}

	[Token(Token = "0x60011F5")]
	[Address(RVA = "0x1C7BB28", Offset = "0x1C7BB28", VA = "0x1C7BB28")]
	internal AkExternalSourceInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60011F6")]
	[Address(RVA = "0x1C7BB68", Offset = "0x1C7BB68", VA = "0x1C7BB68")]
	internal static IntPtr getCPtr(AkExternalSourceInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60011F7")]
	[Address(RVA = "0x1C7BBB8", Offset = "0x1C7BBB8", VA = "0x1C7BBB8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60011F8")]
	[Address(RVA = "0x1C7BBEC", Offset = "0x1C7BBEC", VA = "0x1C7BBEC", Slot = "1")]
	~AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x60011F9")]
	[Address(RVA = "0x1C7BC5C", Offset = "0x1C7BC5C", VA = "0x1C7BC5C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60011FA")]
	[Address(RVA = "0x1C7BD98", Offset = "0x1C7BD98", VA = "0x1C7BD98")]
	public AkExternalSourceInfo()
	{
	}

	[Token(Token = "0x60011FB")]
	[Address(RVA = "0x1C7BE1C", Offset = "0x1C7BE1C", VA = "0x1C7BE1C")]
	public AkExternalSourceInfo(IntPtr in_pInMemory, uint in_uiMemorySize, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x60011FC")]
	[Address(RVA = "0x1C7BED0", Offset = "0x1C7BED0", VA = "0x1C7BED0")]
	public AkExternalSourceInfo(string in_pszFileName, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x60011FD")]
	[Address(RVA = "0x1C7BF7C", Offset = "0x1C7BF7C", VA = "0x1C7BF7C")]
	public AkExternalSourceInfo(uint in_idFile, uint in_iExternalSrcCookie, uint in_idCodec)
	{
	}

	[Token(Token = "0x60011FE")]
	[Address(RVA = "0x1C7C028", Offset = "0x1C7C028", VA = "0x1C7C028")]
	public void Clear()
	{
	}

	[Token(Token = "0x60011FF")]
	[Address(RVA = "0x1C7C094", Offset = "0x1C7C094", VA = "0x1C7C094")]
	public void Clone(AkExternalSourceInfo other)
	{
	}

	[Token(Token = "0x6001200")]
	[Address(RVA = "0x1C7C13C", Offset = "0x1C7C13C", VA = "0x1C7C13C")]
	public static int GetSizeOf()
	{
		return default(int);
	}
}
[Token(Token = "0x20002AF")]
public enum AkFloorPlane
{
	[Token(Token = "0x400116E")]
	AkFloorPlane_XZ = 0,
	[Token(Token = "0x400116F")]
	AkFloorPlane_XY = 1,
	[Token(Token = "0x4001170")]
	AkFloorPlane_YZ = 2,
	[Token(Token = "0x4001171")]
	AkFloorPlane_Default = 0
}
[Token(Token = "0x20002B0")]
public enum AkGlobalCallbackLocation
{
	[Token(Token = "0x4001173")]
	AkGlobalCallbackLocation_Register = 1,
	[Token(Token = "0x4001174")]
	AkGlobalCallbackLocation_Begin = 2,
	[Token(Token = "0x4001175")]
	AkGlobalCallbackLocation_PreProcessMessageQueueForRender = 4,
	[Token(Token = "0x4001176")]
	AkGlobalCallbackLocation_PostMessagesProcessed = 8,
	[Token(Token = "0x4001177")]
	AkGlobalCallbackLocation_BeginRender = 16,
	[Token(Token = "0x4001178")]
	AkGlobalCallbackLocation_EndRender = 32,
	[Token(Token = "0x4001179")]
	AkGlobalCallbackLocation_End = 64,
	[Token(Token = "0x400117A")]
	AkGlobalCallbackLocation_Term = 128,
	[Token(Token = "0x400117B")]
	AkGlobalCallbackLocation_Monitor = 256,
	[Token(Token = "0x400117C")]
	AkGlobalCallbackLocation_MonitorRecap = 512,
	[Token(Token = "0x400117D")]
	AkGlobalCallbackLocation_Num = 10
}
[Token(Token = "0x20002B1")]
public enum AkGroupType
{
	[Token(Token = "0x400117F")]
	AkGroupType_Switch,
	[Token(Token = "0x4001180")]
	AkGroupType_State
}
[Token(Token = "0x20002B2")]
public class AkImageSourceParams : IDisposable
{
	[Token(Token = "0x4001181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000C4")]
	public AkVector sourcePosition
	{
		[Token(Token = "0x6001215")]
		[Address(RVA = "0x1C7EA70", Offset = "0x1C7EA70", VA = "0x1C7EA70")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001214")]
		[Address(RVA = "0x1C7E9E0", Offset = "0x1C7E9E0", VA = "0x1C7E9E0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C5")]
	public float fDistanceScalingFactor
	{
		[Token(Token = "0x6001217")]
		[Address(RVA = "0x1C7EB9C", Offset = "0x1C7EB9C", VA = "0x1C7EB9C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001216")]
		[Address(RVA = "0x1C7EB20", Offset = "0x1C7EB20", VA = "0x1C7EB20")]
		set
		{
		}
	}

	[Token(Token = "0x170000C6")]
	public float fLevel
	{
		[Token(Token = "0x6001219")]
		[Address(RVA = "0x1C7EC84", Offset = "0x1C7EC84", VA = "0x1C7EC84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001218")]
		[Address(RVA = "0x1C7EC08", Offset = "0x1C7EC08", VA = "0x1C7EC08")]
		set
		{
		}
	}

	[Token(Token = "0x170000C7")]
	public float fDiffraction
	{
		[Token(Token = "0x600121B")]
		[Address(RVA = "0x1C7ED6C", Offset = "0x1C7ED6C", VA = "0x1C7ED6C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600121A")]
		[Address(RVA = "0x1C7ECF0", Offset = "0x1C7ECF0", VA = "0x1C7ECF0")]
		set
		{
		}
	}

	[Token(Token = "0x170000C8")]
	public byte uDiffractionEmitterSide
	{
		[Token(Token = "0x600121D")]
		[Address(RVA = "0x1C7EE54", Offset = "0x1C7EE54", VA = "0x1C7EE54")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600121C")]
		[Address(RVA = "0x1C7EDD8", Offset = "0x1C7EDD8", VA = "0x1C7EDD8")]
		set
		{
		}
	}

	[Token(Token = "0x170000C9")]
	public byte uDiffractionListenerSide
	{
		[Token(Token = "0x600121F")]
		[Address(RVA = "0x1C7EF3C", Offset = "0x1C7EF3C", VA = "0x1C7EF3C")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600121E")]
		[Address(RVA = "0x1C7EEC0", Offset = "0x1C7EEC0", VA = "0x1C7EEC0")]
		set
		{
		}
	}

	[Token(Token = "0x600120D")]
	[Address(RVA = "0x1C7E62C", Offset = "0x1C7E62C", VA = "0x1C7E62C")]
	internal AkImageSourceParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600120E")]
	[Address(RVA = "0x1C7E66C", Offset = "0x1C7E66C", VA = "0x1C7E66C")]
	internal static IntPtr getCPtr(AkImageSourceParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600120F")]
	[Address(RVA = "0x1C7E6BC", Offset = "0x1C7E6BC", VA = "0x1C7E6BC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001210")]
	[Address(RVA = "0x1C7E6F0", Offset = "0x1C7E6F0", VA = "0x1C7E6F0", Slot = "1")]
	~AkImageSourceParams()
	{
	}

	[Token(Token = "0x6001211")]
	[Address(RVA = "0x1C7E760", Offset = "0x1C7E760", VA = "0x1C7E760", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001212")]
	[Address(RVA = "0x1C7E89C", Offset = "0x1C7E89C", VA = "0x1C7E89C")]
	public AkImageSourceParams()
	{
	}

	[Token(Token = "0x6001213")]
	[Address(RVA = "0x1C7E920", Offset = "0x1C7E920", VA = "0x1C7E920")]
	public AkImageSourceParams(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}
}
[Token(Token = "0x20002B3")]
public class AkImageSourceSettings : IDisposable
{
	[Token(Token = "0x4001183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000CA")]
	public AkImageSourceParams params_
	{
		[Token(Token = "0x600122A")]
		[Address(RVA = "0x1C7F4FC", Offset = "0x1C7F4FC", VA = "0x1C7F4FC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001229")]
		[Address(RVA = "0x1C7F454", Offset = "0x1C7F454", VA = "0x1C7F454")]
		set
		{
		}
	}

	[Token(Token = "0x6001220")]
	[Address(RVA = "0x1C7EFA8", Offset = "0x1C7EFA8", VA = "0x1C7EFA8")]
	internal AkImageSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001221")]
	[Address(RVA = "0x1C7EFE8", Offset = "0x1C7EFE8", VA = "0x1C7EFE8")]
	internal static IntPtr getCPtr(AkImageSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001222")]
	[Address(RVA = "0x1C7F038", Offset = "0x1C7F038", VA = "0x1C7F038", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001223")]
	[Address(RVA = "0x1C7F06C", Offset = "0x1C7F06C", VA = "0x1C7F06C", Slot = "1")]
	~AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6001224")]
	[Address(RVA = "0x1C7F0DC", Offset = "0x1C7F0DC", VA = "0x1C7F0DC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001225")]
	[Address(RVA = "0x1C7F218", Offset = "0x1C7F218", VA = "0x1C7F218")]
	public AkImageSourceSettings()
	{
	}

	[Token(Token = "0x6001226")]
	[Address(RVA = "0x1C7F29C", Offset = "0x1C7F29C", VA = "0x1C7F29C")]
	public AkImageSourceSettings(AkVector in_sourcePosition, float in_fDistanceScalingFactor, float in_fLevel)
	{
	}

	[Token(Token = "0x6001227")]
	[Address(RVA = "0x1C7F35C", Offset = "0x1C7F35C", VA = "0x1C7F35C")]
	public void SetOneTexture(uint in_texture)
	{
	}

	[Token(Token = "0x6001228")]
	[Address(RVA = "0x1C7F3D8", Offset = "0x1C7F3D8", VA = "0x1C7F3D8")]
	public void SetName(string in_pName)
	{
	}
}
[Token(Token = "0x20002B4")]
public class AkInitSettings : IDisposable
{
	[Token(Token = "0x4001185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000CB")]
	public uint uMaxNumPaths
	{
		[Token(Token = "0x6001231")]
		[Address(RVA = "0x1C7F898", Offset = "0x1C7F898", VA = "0x1C7F898")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001230")]
		[Address(RVA = "0x1C7F81C", Offset = "0x1C7F81C", VA = "0x1C7F81C")]
		set
		{
		}
	}

	[Token(Token = "0x170000CC")]
	public uint uDefaultPoolSize
	{
		[Token(Token = "0x6001233")]
		[Address(RVA = "0x1C7F980", Offset = "0x1C7F980", VA = "0x1C7F980")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001232")]
		[Address(RVA = "0x1C7F904", Offset = "0x1C7F904", VA = "0x1C7F904")]
		set
		{
		}
	}

	[Token(Token = "0x170000CD")]
	public float fDefaultPoolRatioThreshold
	{
		[Token(Token = "0x6001235")]
		[Address(RVA = "0x1C7FA68", Offset = "0x1C7FA68", VA = "0x1C7FA68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001234")]
		[Address(RVA = "0x1C7F9EC", Offset = "0x1C7F9EC", VA = "0x1C7F9EC")]
		set
		{
		}
	}

	[Token(Token = "0x170000CE")]
	public uint uCommandQueueSize
	{
		[Token(Token = "0x6001237")]
		[Address(RVA = "0x1C7FB50", Offset = "0x1C7FB50", VA = "0x1C7FB50")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001236")]
		[Address(RVA = "0x1C7FAD4", Offset = "0x1C7FAD4", VA = "0x1C7FAD4")]
		set
		{
		}
	}

	[Token(Token = "0x170000CF")]
	public int uPrepareEventMemoryPoolID
	{
		[Token(Token = "0x6001239")]
		[Address(RVA = "0x1C7FC38", Offset = "0x1C7FC38", VA = "0x1C7FC38")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001238")]
		[Address(RVA = "0x1C7FBBC", Offset = "0x1C7FBBC", VA = "0x1C7FBBC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D0")]
	public bool bEnableGameSyncPreparation
	{
		[Token(Token = "0x600123B")]
		[Address(RVA = "0x1C7FD20", Offset = "0x1C7FD20", VA = "0x1C7FD20")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600123A")]
		[Address(RVA = "0x1C7FCA4", Offset = "0x1C7FCA4", VA = "0x1C7FCA4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D1")]
	public uint uContinuousPlaybackLookAhead
	{
		[Token(Token = "0x600123D")]
		[Address(RVA = "0x1C7FE08", Offset = "0x1C7FE08", VA = "0x1C7FE08")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600123C")]
		[Address(RVA = "0x1C7FD8C", Offset = "0x1C7FD8C", VA = "0x1C7FD8C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D2")]
	public uint uNumSamplesPerFrame
	{
		[Token(Token = "0x600123F")]
		[Address(RVA = "0x1C7FEF0", Offset = "0x1C7FEF0", VA = "0x1C7FEF0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600123E")]
		[Address(RVA = "0x1C7FE74", Offset = "0x1C7FE74", VA = "0x1C7FE74")]
		set
		{
		}
	}

	[Token(Token = "0x170000D3")]
	public uint uMonitorPoolSize
	{
		[Token(Token = "0x6001241")]
		[Address(RVA = "0x1C7FFD8", Offset = "0x1C7FFD8", VA = "0x1C7FFD8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001240")]
		[Address(RVA = "0x1C7FF5C", Offset = "0x1C7FF5C", VA = "0x1C7FF5C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D4")]
	public uint uMonitorQueuePoolSize
	{
		[Token(Token = "0x6001243")]
		[Address(RVA = "0x1C800C0", Offset = "0x1C800C0", VA = "0x1C800C0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001242")]
		[Address(RVA = "0x1C80044", Offset = "0x1C80044", VA = "0x1C80044")]
		set
		{
		}
	}

	[Token(Token = "0x170000D5")]
	public AkOutputSettings settingsMainOutput
	{
		[Token(Token = "0x6001245")]
		[Address(RVA = "0x1C80224", Offset = "0x1C80224", VA = "0x1C80224")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001244")]
		[Address(RVA = "0x1C8012C", Offset = "0x1C8012C", VA = "0x1C8012C")]
		set
		{
		}
	}

	[Token(Token = "0x170000D6")]
	public uint uMaxHardwareTimeoutMs
	{
		[Token(Token = "0x6001247")]
		[Address(RVA = "0x1C80390", Offset = "0x1C80390", VA = "0x1C80390")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001246")]
		[Address(RVA = "0x1C80314", Offset = "0x1C80314", VA = "0x1C80314")]
		set
		{
		}
	}

	[Token(Token = "0x170000D7")]
	public bool bUseSoundBankMgrThread
	{
		[Token(Token = "0x6001249")]
		[Address(RVA = "0x1C80478", Offset = "0x1C80478", VA = "0x1C80478")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001248")]
		[Address(RVA = "0x1C803FC", Offset = "0x1C803FC", VA = "0x1C803FC")]
		set
		{
		}
	}

	[Token(Token = "0x170000D8")]
	public bool bUseLEngineThread
	{
		[Token(Token = "0x600124B")]
		[Address(RVA = "0x1C80560", Offset = "0x1C80560", VA = "0x1C80560")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600124A")]
		[Address(RVA = "0x1C804E4", Offset = "0x1C804E4", VA = "0x1C804E4")]
		set
		{
		}
	}

	[Token(Token = "0x170000D9")]
	public string szPluginDLLPath
	{
		[Token(Token = "0x600124D")]
		[Address(RVA = "0x1C80648", Offset = "0x1C80648", VA = "0x1C80648")]
		get
		{
			return null;
		}
		[Token(Token = "0x600124C")]
		[Address(RVA = "0x1C805CC", Offset = "0x1C805CC", VA = "0x1C805CC")]
		set
		{
		}
	}

	[Token(Token = "0x170000DA")]
	public AkFloorPlane eFloorPlane
	{
		[Token(Token = "0x600124F")]
		[Address(RVA = "0x1C80764", Offset = "0x1C80764", VA = "0x1C80764")]
		get
		{
			return default(AkFloorPlane);
		}
		[Token(Token = "0x600124E")]
		[Address(RVA = "0x1C806E8", Offset = "0x1C806E8", VA = "0x1C806E8")]
		set
		{
		}
	}

	[Token(Token = "0x600122B")]
	[Address(RVA = "0x1C7F5AC", Offset = "0x1C7F5AC", VA = "0x1C7F5AC")]
	internal AkInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600122C")]
	[Address(RVA = "0x1C7F5EC", Offset = "0x1C7F5EC", VA = "0x1C7F5EC")]
	internal static IntPtr getCPtr(AkInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600122D")]
	[Address(RVA = "0x1C7F63C", Offset = "0x1C7F63C", VA = "0x1C7F63C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600122E")]
	[Address(RVA = "0x1C7F670", Offset = "0x1C7F670", VA = "0x1C7F670", Slot = "1")]
	~AkInitSettings()
	{
	}

	[Token(Token = "0x600122F")]
	[Address(RVA = "0x1C7F6E0", Offset = "0x1C7F6E0", VA = "0x1C7F6E0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001250")]
	[Address(RVA = "0x1C807D0", Offset = "0x1C807D0", VA = "0x1C807D0")]
	public AkInitSettings()
	{
	}
}
[Token(Token = "0x20002B5")]
public class AkInitializationSettings : IDisposable
{
	[Token(Token = "0x4001187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000DB")]
	public AkMemSettings memSettings
	{
		[Token(Token = "0x6001258")]
		[Address(RVA = "0x1C80C40", Offset = "0x1C80C40", VA = "0x1C80C40")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001257")]
		[Address(RVA = "0x1C80B48", Offset = "0x1C80B48", VA = "0x1C80B48")]
		set
		{
		}
	}

	[Token(Token = "0x170000DC")]
	public AkStreamMgrSettings streamMgrSettings
	{
		[Token(Token = "0x600125A")]
		[Address(RVA = "0x1C80DC0", Offset = "0x1C80DC0", VA = "0x1C80DC0")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001259")]
		[Address(RVA = "0x1C80D30", Offset = "0x1C80D30", VA = "0x1C80D30")]
		set
		{
		}
	}

	[Token(Token = "0x170000DD")]
	public AkDeviceSettings deviceSettings
	{
		[Token(Token = "0x600125C")]
		[Address(RVA = "0x1C80F00", Offset = "0x1C80F00", VA = "0x1C80F00")]
		get
		{
			return null;
		}
		[Token(Token = "0x600125B")]
		[Address(RVA = "0x1C80E70", Offset = "0x1C80E70", VA = "0x1C80E70")]
		set
		{
		}
	}

	[Token(Token = "0x170000DE")]
	public AkInitSettings initSettings
	{
		[Token(Token = "0x600125E")]
		[Address(RVA = "0x1C81058", Offset = "0x1C81058", VA = "0x1C81058")]
		get
		{
			return null;
		}
		[Token(Token = "0x600125D")]
		[Address(RVA = "0x1C80FB0", Offset = "0x1C80FB0", VA = "0x1C80FB0")]
		set
		{
		}
	}

	[Token(Token = "0x170000DF")]
	public AkPlatformInitSettings platformSettings
	{
		[Token(Token = "0x6001260")]
		[Address(RVA = "0x1C81200", Offset = "0x1C81200", VA = "0x1C81200")]
		get
		{
			return null;
		}
		[Token(Token = "0x600125F")]
		[Address(RVA = "0x1C81108", Offset = "0x1C81108", VA = "0x1C81108")]
		set
		{
		}
	}

	[Token(Token = "0x170000E0")]
	public AkMusicSettings musicSettings
	{
		[Token(Token = "0x6001262")]
		[Address(RVA = "0x1C813E8", Offset = "0x1C813E8", VA = "0x1C813E8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001261")]
		[Address(RVA = "0x1C812F0", Offset = "0x1C812F0", VA = "0x1C812F0")]
		set
		{
		}
	}

	[Token(Token = "0x170000E1")]
	public uint preparePoolSize
	{
		[Token(Token = "0x6001264")]
		[Address(RVA = "0x1C81554", Offset = "0x1C81554", VA = "0x1C81554")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001263")]
		[Address(RVA = "0x1C814D8", Offset = "0x1C814D8", VA = "0x1C814D8")]
		set
		{
		}
	}

	[Token(Token = "0x170000E2")]
	public AkUnityPlatformSpecificSettings unityPlatformSpecificSettings
	{
		[Token(Token = "0x6001266")]
		[Address(RVA = "0x1C81650", Offset = "0x1C81650", VA = "0x1C81650")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001265")]
		[Address(RVA = "0x1C815C0", Offset = "0x1C815C0", VA = "0x1C815C0")]
		set
		{
		}
	}

	[Token(Token = "0x6001251")]
	[Address(RVA = "0x1C80854", Offset = "0x1C80854", VA = "0x1C80854")]
	internal AkInitializationSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001252")]
	[Address(RVA = "0x1C80894", Offset = "0x1C80894", VA = "0x1C80894")]
	internal static IntPtr getCPtr(AkInitializationSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001253")]
	[Address(RVA = "0x1C808E4", Offset = "0x1C808E4", VA = "0x1C808E4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001254")]
	[Address(RVA = "0x1C80918", Offset = "0x1C80918", VA = "0x1C80918", Slot = "1")]
	~AkInitializationSettings()
	{
	}

	[Token(Token = "0x6001255")]
	[Address(RVA = "0x1C80988", Offset = "0x1C80988", VA = "0x1C80988", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001256")]
	[Address(RVA = "0x1C80AC4", Offset = "0x1C80AC4", VA = "0x1C80AC4")]
	public AkInitializationSettings()
	{
	}
}
[Token(Token = "0x20002B6")]
public class AkIterator : IDisposable
{
	[Token(Token = "0x4001189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400118A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000E3")]
	public AkPlaylistItem pItem
	{
		[Token(Token = "0x600126D")]
		[Address(RVA = "0x1C82064", Offset = "0x1C82064", VA = "0x1C82064")]
		get
		{
			return null;
		}
		[Token(Token = "0x600126C")]
		[Address(RVA = "0x1C81F6C", Offset = "0x1C81F6C", VA = "0x1C81F6C")]
		set
		{
		}
	}

	[Token(Token = "0x6001267")]
	[Address(RVA = "0x1C81CFC", Offset = "0x1C81CFC", VA = "0x1C81CFC")]
	internal AkIterator(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001268")]
	[Address(RVA = "0x1C81D3C", Offset = "0x1C81D3C", VA = "0x1C81D3C")]
	internal static IntPtr getCPtr(AkIterator obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001269")]
	[Address(RVA = "0x1C81D8C", Offset = "0x1C81D8C", VA = "0x1C81D8C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600126A")]
	[Address(RVA = "0x1C81DC0", Offset = "0x1C81DC0", VA = "0x1C81DC0", Slot = "1")]
	~AkIterator()
	{
	}

	[Token(Token = "0x600126B")]
	[Address(RVA = "0x1C81E30", Offset = "0x1C81E30", VA = "0x1C81E30", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600126E")]
	[Address(RVA = "0x1C82154", Offset = "0x1C82154", VA = "0x1C82154")]
	public AkIterator NextIter()
	{
		return null;
	}

	[Token(Token = "0x600126F")]
	[Address(RVA = "0x1C821F4", Offset = "0x1C821F4", VA = "0x1C821F4")]
	public AkIterator PrevIter()
	{
		return null;
	}

	[Token(Token = "0x6001270")]
	[Address(RVA = "0x1C82294", Offset = "0x1C82294", VA = "0x1C82294")]
	public AkPlaylistItem GetItem()
	{
		return null;
	}

	[Token(Token = "0x6001271")]
	[Address(RVA = "0x1C82334", Offset = "0x1C82334", VA = "0x1C82334")]
	public bool IsEqualTo(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6001272")]
	[Address(RVA = "0x1C823DC", Offset = "0x1C823DC", VA = "0x1C823DC")]
	public bool IsDifferentFrom(AkIterator in_rOp)
	{
		return default(bool);
	}

	[Token(Token = "0x6001273")]
	[Address(RVA = "0x1C82484", Offset = "0x1C82484", VA = "0x1C82484")]
	public AkIterator()
	{
	}
}
[Token(Token = "0x20002B7")]
public enum AkMIDICcTypes
{
	[Token(Token = "0x400118C")]
	BANK_SELECT_COARSE = 0,
	[Token(Token = "0x400118D")]
	MOD_WHEEL_COARSE = 1,
	[Token(Token = "0x400118E")]
	BREATH_CTRL_COARSE = 2,
	[Token(Token = "0x400118F")]
	CTRL_3_COARSE = 3,
	[Token(Token = "0x4001190")]
	FOOT_PEDAL_COARSE = 4,
	[Token(Token = "0x4001191")]
	PORTAMENTO_COARSE = 5,
	[Token(Token = "0x4001192")]
	DATA_ENTRY_COARSE = 6,
	[Token(Token = "0x4001193")]
	VOLUME_COARSE = 7,
	[Token(Token = "0x4001194")]
	BALANCE_COARSE = 8,
	[Token(Token = "0x4001195")]
	CTRL_9_COARSE = 9,
	[Token(Token = "0x4001196")]
	PAN_POSITION_COARSE = 10,
	[Token(Token = "0x4001197")]
	EXPRESSION_COARSE = 11,
	[Token(Token = "0x4001198")]
	EFFECT_CTRL_1_COARSE = 12,
	[Token(Token = "0x4001199")]
	EFFECT_CTRL_2_COARSE = 13,
	[Token(Token = "0x400119A")]
	CTRL_14_COARSE = 14,
	[Token(Token = "0x400119B")]
	CTRL_15_COARSE = 15,
	[Token(Token = "0x400119C")]
	GEN_SLIDER_1 = 16,
	[Token(Token = "0x400119D")]
	GEN_SLIDER_2 = 17,
	[Token(Token = "0x400119E")]
	GEN_SLIDER_3 = 18,
	[Token(Token = "0x400119F")]
	GEN_SLIDER_4 = 19,
	[Token(Token = "0x40011A0")]
	CTRL_20_COARSE = 20,
	[Token(Token = "0x40011A1")]
	CTRL_21_COARSE = 21,
	[Token(Token = "0x40011A2")]
	CTRL_22_COARSE = 22,
	[Token(Token = "0x40011A3")]
	CTRL_23_COARSE = 23,
	[Token(Token = "0x40011A4")]
	CTRL_24_COARSE = 24,
	[Token(Token = "0x40011A5")]
	CTRL_25_COARSE = 25,
	[Token(Token = "0x40011A6")]
	CTRL_26_COARSE = 26,
	[Token(Token = "0x40011A7")]
	CTRL_27_COARSE = 27,
	[Token(Token = "0x40011A8")]
	CTRL_28_COARSE = 28,
	[Token(Token = "0x40011A9")]
	CTRL_29_COARSE = 29,
	[Token(Token = "0x40011AA")]
	CTRL_30_COARSE = 30,
	[Token(Token = "0x40011AB")]
	CTRL_31_COARSE = 31,
	[Token(Token = "0x40011AC")]
	BANK_SELECT_FINE = 32,
	[Token(Token = "0x40011AD")]
	MOD_WHEEL_FINE = 33,
	[Token(Token = "0x40011AE")]
	BREATH_CTRL_FINE = 34,
	[Token(Token = "0x40011AF")]
	CTRL_3_FINE = 35,
	[Token(Token = "0x40011B0")]
	FOOT_PEDAL_FINE = 36,
	[Token(Token = "0x40011B1")]
	PORTAMENTO_FINE = 37,
	[Token(Token = "0x40011B2")]
	DATA_ENTRY_FINE = 38,
	[Token(Token = "0x40011B3")]
	VOLUME_FINE = 39,
	[Token(Token = "0x40011B4")]
	BALANCE_FINE = 40,
	[Token(Token = "0x40011B5")]
	CTRL_9_FINE = 41,
	[Token(Token = "0x40011B6")]
	PAN_POSITION_FINE = 42,
	[Token(Token = "0x40011B7")]
	EXPRESSION_FINE = 43,
	[Token(Token = "0x40011B8")]
	EFFECT_CTRL_1_FINE = 44,
	[Token(Token = "0x40011B9")]
	EFFECT_CTRL_2_FINE = 45,
	[Token(Token = "0x40011BA")]
	CTRL_14_FINE = 46,
	[Token(Token = "0x40011BB")]
	CTRL_15_FINE = 47,
	[Token(Token = "0x40011BC")]
	CTRL_20_FINE = 52,
	[Token(Token = "0x40011BD")]
	CTRL_21_FINE = 53,
	[Token(Token = "0x40011BE")]
	CTRL_22_FINE = 54,
	[Token(Token = "0x40011BF")]
	CTRL_23_FINE = 55,
	[Token(Token = "0x40011C0")]
	CTRL_24_FINE = 56,
	[Token(Token = "0x40011C1")]
	CTRL_25_FINE = 57,
	[Token(Token = "0x40011C2")]
	CTRL_26_FINE = 58,
	[Token(Token = "0x40011C3")]
	CTRL_27_FINE = 59,
	[Token(Token = "0x40011C4")]
	CTRL_28_FINE = 60,
	[Token(Token = "0x40011C5")]
	CTRL_29_FINE = 61,
	[Token(Token = "0x40011C6")]
	CTRL_30_FINE = 62,
	[Token(Token = "0x40011C7")]
	CTRL_31_FINE = 63,
	[Token(Token = "0x40011C8")]
	HOLD_PEDAL = 64,
	[Token(Token = "0x40011C9")]
	PORTAMENTO_ON_OFF = 65,
	[Token(Token = "0x40011CA")]
	SUSTENUTO_PEDAL = 66,
	[Token(Token = "0x40011CB")]
	SOFT_PEDAL = 67,
	[Token(Token = "0x40011CC")]
	LEGATO_PEDAL = 68,
	[Token(Token = "0x40011CD")]
	HOLD_PEDAL_2 = 69,
	[Token(Token = "0x40011CE")]
	SOUND_VARIATION = 70,
	[Token(Token = "0x40011CF")]
	SOUND_TIMBRE = 71,
	[Token(Token = "0x40011D0")]
	SOUND_RELEASE_TIME = 72,
	[Token(Token = "0x40011D1")]
	SOUND_ATTACK_TIME = 73,
	[Token(Token = "0x40011D2")]
	SOUND_BRIGHTNESS = 74,
	[Token(Token = "0x40011D3")]
	SOUND_CTRL_6 = 75,
	[Token(Token = "0x40011D4")]
	SOUND_CTRL_7 = 76,
	[Token(Token = "0x40011D5")]
	SOUND_CTRL_8 = 77,
	[Token(Token = "0x40011D6")]
	SOUND_CTRL_9 = 78,
	[Token(Token = "0x40011D7")]
	SOUND_CTRL_10 = 79,
	[Token(Token = "0x40011D8")]
	GENERAL_BUTTON_1 = 80,
	[Token(Token = "0x40011D9")]
	GENERAL_BUTTON_2 = 81,
	[Token(Token = "0x40011DA")]
	GENERAL_BUTTON_3 = 82,
	[Token(Token = "0x40011DB")]
	GENERAL_BUTTON_4 = 83,
	[Token(Token = "0x40011DC")]
	REVERB_LEVEL = 91,
	[Token(Token = "0x40011DD")]
	TREMOLO_LEVEL = 92,
	[Token(Token = "0x40011DE")]
	CHORUS_LEVEL = 93,
	[Token(Token = "0x40011DF")]
	CELESTE_LEVEL = 94,
	[Token(Token = "0x40011E0")]
	PHASER_LEVEL = 95,
	[Token(Token = "0x40011E1")]
	DATA_BUTTON_P1 = 96,
	[Token(Token = "0x40011E2")]
	DATA_BUTTON_M1 = 97,
	[Token(Token = "0x40011E3")]
	NON_REGISTER_COARSE = 98,
	[Token(Token = "0x40011E4")]
	NON_REGISTER_FINE = 99,
	[Token(Token = "0x40011E5")]
	ALL_SOUND_OFF = 120,
	[Token(Token = "0x40011E6")]
	ALL_CONTROLLERS_OFF = 121,
	[Token(Token = "0x40011E7")]
	LOCAL_KEYBOARD = 122,
	[Token(Token = "0x40011E8")]
	ALL_NOTES_OFF = 123,
	[Token(Token = "0x40011E9")]
	OMNI_MODE_OFF = 124,
	[Token(Token = "0x40011EA")]
	OMNI_MODE_ON = 125,
	[Token(Token = "0x40011EB")]
	OMNI_MONOPHONIC_ON = 126,
	[Token(Token = "0x40011EC")]
	OMNI_POLYPHONIC_ON = 127
}
[Token(Token = "0x20002B8")]
public class AkMIDIEvent : IDisposable
{
	[Token(Token = "0x200060D")]
	public class tGen : IDisposable
	{
		[Token(Token = "0x4001D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003A1")]
		public byte byParam1
		{
			[Token(Token = "0x60022B3")]
			[Address(RVA = "0x1C85344", Offset = "0x1C85344", VA = "0x1C85344")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022B2")]
			[Address(RVA = "0x1C852C8", Offset = "0x1C852C8", VA = "0x1C852C8")]
			set
			{
			}
		}

		[Token(Token = "0x170003A2")]
		public byte byParam2
		{
			[Token(Token = "0x60022B5")]
			[Address(RVA = "0x1C8542C", Offset = "0x1C8542C", VA = "0x1C8542C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022B4")]
			[Address(RVA = "0x1C853B0", Offset = "0x1C853B0", VA = "0x1C853B0")]
			set
			{
			}
		}

		[Token(Token = "0x60022AD")]
		[Address(RVA = "0x1C8333C", Offset = "0x1C8333C", VA = "0x1C8333C")]
		internal tGen(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60022AE")]
		[Address(RVA = "0x1C8323C", Offset = "0x1C8323C", VA = "0x1C8323C")]
		internal static IntPtr getCPtr(tGen obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60022AF")]
		[Address(RVA = "0x1C850E8", Offset = "0x1C850E8", VA = "0x1C850E8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60022B0")]
		[Address(RVA = "0x1C8511C", Offset = "0x1C8511C", VA = "0x1C8511C", Slot = "1")]
		~tGen()
		{
		}

		[Token(Token = "0x60022B1")]
		[Address(RVA = "0x1C8518C", Offset = "0x1C8518C", VA = "0x1C8518C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60022B6")]
		[Address(RVA = "0x1C85498", Offset = "0x1C85498", VA = "0x1C85498")]
		public tGen()
		{
		}
	}

	[Token(Token = "0x200060E")]
	public class tNoteOnOff : IDisposable
	{
		[Token(Token = "0x4001D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003A3")]
		public byte byNote
		{
			[Token(Token = "0x60022BD")]
			[Address(RVA = "0x1C85BAC", Offset = "0x1C85BAC", VA = "0x1C85BAC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022BC")]
			[Address(RVA = "0x1C85B30", Offset = "0x1C85B30", VA = "0x1C85B30")]
			set
			{
			}
		}

		[Token(Token = "0x170003A4")]
		public byte byVelocity
		{
			[Token(Token = "0x60022BF")]
			[Address(RVA = "0x1C85C94", Offset = "0x1C85C94", VA = "0x1C85C94")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022BE")]
			[Address(RVA = "0x1C85C18", Offset = "0x1C85C18", VA = "0x1C85C18")]
			set
			{
			}
		}

		[Token(Token = "0x60022B7")]
		[Address(RVA = "0x1C8370C", Offset = "0x1C8370C", VA = "0x1C8370C")]
		internal tNoteOnOff(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60022B8")]
		[Address(RVA = "0x1C8360C", Offset = "0x1C8360C", VA = "0x1C8360C")]
		internal static IntPtr getCPtr(tNoteOnOff obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60022B9")]
		[Address(RVA = "0x1C85950", Offset = "0x1C85950", VA = "0x1C85950", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60022BA")]
		[Address(RVA = "0x1C85984", Offset = "0x1C85984", VA = "0x1C85984", Slot = "1")]
		~tNoteOnOff()
		{
		}

		[Token(Token = "0x60022BB")]
		[Address(RVA = "0x1C859F4", Offset = "0x1C859F4", VA = "0x1C859F4", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60022C0")]
		[Address(RVA = "0x1C85D00", Offset = "0x1C85D00", VA = "0x1C85D00")]
		public tNoteOnOff()
		{
		}
	}

	[Token(Token = "0x200060F")]
	public class tCc : IDisposable
	{
		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003A5")]
		public byte byCc
		{
			[Token(Token = "0x60022C7")]
			[Address(RVA = "0x1C84BC4", Offset = "0x1C84BC4", VA = "0x1C84BC4")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022C6")]
			[Address(RVA = "0x1C84B48", Offset = "0x1C84B48", VA = "0x1C84B48")]
			set
			{
			}
		}

		[Token(Token = "0x170003A6")]
		public byte byValue
		{
			[Token(Token = "0x60022C9")]
			[Address(RVA = "0x1C84CAC", Offset = "0x1C84CAC", VA = "0x1C84CAC")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022C8")]
			[Address(RVA = "0x1C84C30", Offset = "0x1C84C30", VA = "0x1C84C30")]
			set
			{
			}
		}

		[Token(Token = "0x60022C1")]
		[Address(RVA = "0x1C83524", Offset = "0x1C83524", VA = "0x1C83524")]
		internal tCc(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60022C2")]
		[Address(RVA = "0x1C83424", Offset = "0x1C83424", VA = "0x1C83424")]
		internal static IntPtr getCPtr(tCc obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60022C3")]
		[Address(RVA = "0x1C84968", Offset = "0x1C84968", VA = "0x1C84968", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60022C4")]
		[Address(RVA = "0x1C8499C", Offset = "0x1C8499C", VA = "0x1C8499C", Slot = "1")]
		~tCc()
		{
		}

		[Token(Token = "0x60022C5")]
		[Address(RVA = "0x1C84A0C", Offset = "0x1C84A0C", VA = "0x1C84A0C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60022CA")]
		[Address(RVA = "0x1C84D18", Offset = "0x1C84D18", VA = "0x1C84D18")]
		public tCc()
		{
		}
	}

	[Token(Token = "0x2000610")]
	public class tPitchBend : IDisposable
	{
		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003A7")]
		public byte byValueLsb
		{
			[Token(Token = "0x60022D1")]
			[Address(RVA = "0x1C85FE0", Offset = "0x1C85FE0", VA = "0x1C85FE0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022D0")]
			[Address(RVA = "0x1C85F64", Offset = "0x1C85F64", VA = "0x1C85F64")]
			set
			{
			}
		}

		[Token(Token = "0x170003A8")]
		public byte byValueMsb
		{
			[Token(Token = "0x60022D3")]
			[Address(RVA = "0x1C860C8", Offset = "0x1C860C8", VA = "0x1C860C8")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022D2")]
			[Address(RVA = "0x1C8604C", Offset = "0x1C8604C", VA = "0x1C8604C")]
			set
			{
			}
		}

		[Token(Token = "0x60022CB")]
		[Address(RVA = "0x1C838F4", Offset = "0x1C838F4", VA = "0x1C838F4")]
		internal tPitchBend(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60022CC")]
		[Address(RVA = "0x1C837F4", Offset = "0x1C837F4", VA = "0x1C837F4")]
		internal static IntPtr getCPtr(tPitchBend obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60022CD")]
		[Address(RVA = "0x1C85D84", Offset = "0x1C85D84", VA = "0x1C85D84", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60022CE")]
		[Address(RVA = "0x1C85DB8", Offset = "0x1C85DB8", VA = "0x1C85DB8", Slot = "1")]
		~tPitchBend()
		{
		}

		[Token(Token = "0x60022CF")]
		[Address(RVA = "0x1C85E28", Offset = "0x1C85E28", VA = "0x1C85E28", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60022D4")]
		[Address(RVA = "0x1C86134", Offset = "0x1C86134", VA = "0x1C86134")]
		public tPitchBend()
		{
		}
	}

	[Token(Token = "0x2000611")]
	public class tNoteAftertouch : IDisposable
	{
		[Token(Token = "0x4001D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003A9")]
		public byte byNote
		{
			[Token(Token = "0x60022DB")]
			[Address(RVA = "0x1C85778", Offset = "0x1C85778", VA = "0x1C85778")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022DA")]
			[Address(RVA = "0x1C856FC", Offset = "0x1C856FC", VA = "0x1C856FC")]
			set
			{
			}
		}

		[Token(Token = "0x170003AA")]
		public byte byValue
		{
			[Token(Token = "0x60022DD")]
			[Address(RVA = "0x1C85860", Offset = "0x1C85860", VA = "0x1C85860")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022DC")]
			[Address(RVA = "0x1C857E4", Offset = "0x1C857E4", VA = "0x1C857E4")]
			set
			{
			}
		}

		[Token(Token = "0x60022D5")]
		[Address(RVA = "0x1C83ADC", Offset = "0x1C83ADC", VA = "0x1C83ADC")]
		internal tNoteAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60022D6")]
		[Address(RVA = "0x1C839DC", Offset = "0x1C839DC", VA = "0x1C839DC")]
		internal static IntPtr getCPtr(tNoteAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60022D7")]
		[Address(RVA = "0x1C8551C", Offset = "0x1C8551C", VA = "0x1C8551C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60022D8")]
		[Address(RVA = "0x1C85550", Offset = "0x1C85550", VA = "0x1C85550", Slot = "1")]
		~tNoteAftertouch()
		{
		}

		[Token(Token = "0x60022D9")]
		[Address(RVA = "0x1C855C0", Offset = "0x1C855C0", VA = "0x1C855C0", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60022DE")]
		[Address(RVA = "0x1C858CC", Offset = "0x1C858CC", VA = "0x1C858CC")]
		public tNoteAftertouch()
		{
		}
	}

	[Token(Token = "0x2000612")]
	public class tChanAftertouch : IDisposable
	{
		[Token(Token = "0x4001D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003AB")]
		public byte byValue
		{
			[Token(Token = "0x60022E5")]
			[Address(RVA = "0x1C84FF8", Offset = "0x1C84FF8", VA = "0x1C84FF8")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022E4")]
			[Address(RVA = "0x1C84F7C", Offset = "0x1C84F7C", VA = "0x1C84F7C")]
			set
			{
			}
		}

		[Token(Token = "0x60022DF")]
		[Address(RVA = "0x1C83CC4", Offset = "0x1C83CC4", VA = "0x1C83CC4")]
		internal tChanAftertouch(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60022E0")]
		[Address(RVA = "0x1C83BC4", Offset = "0x1C83BC4", VA = "0x1C83BC4")]
		internal static IntPtr getCPtr(tChanAftertouch obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60022E1")]
		[Address(RVA = "0x1C84D9C", Offset = "0x1C84D9C", VA = "0x1C84D9C", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60022E2")]
		[Address(RVA = "0x1C84DD0", Offset = "0x1C84DD0", VA = "0x1C84DD0", Slot = "1")]
		~tChanAftertouch()
		{
		}

		[Token(Token = "0x60022E3")]
		[Address(RVA = "0x1C84E40", Offset = "0x1C84E40", VA = "0x1C84E40", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60022E6")]
		[Address(RVA = "0x1C85064", Offset = "0x1C85064", VA = "0x1C85064")]
		public tChanAftertouch()
		{
		}
	}

	[Token(Token = "0x2000613")]
	public class tProgramChange : IDisposable
	{
		[Token(Token = "0x4001D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr swigCPtr;

		[Token(Token = "0x4001D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected bool swigCMemOwn;

		[Token(Token = "0x170003AC")]
		public byte byProgramNum
		{
			[Token(Token = "0x60022ED")]
			[Address(RVA = "0x1C86414", Offset = "0x1C86414", VA = "0x1C86414")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x60022EC")]
			[Address(RVA = "0x1C86398", Offset = "0x1C86398", VA = "0x1C86398")]
			set
			{
			}
		}

		[Token(Token = "0x60022E7")]
		[Address(RVA = "0x1C83EAC", Offset = "0x1C83EAC", VA = "0x1C83EAC")]
		internal tProgramChange(IntPtr cPtr, bool cMemoryOwn)
		{
		}

		[Token(Token = "0x60022E8")]
		[Address(RVA = "0x1C83DAC", Offset = "0x1C83DAC", VA = "0x1C83DAC")]
		internal static IntPtr getCPtr(tProgramChange obj)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x60022E9")]
		[Address(RVA = "0x1C861B8", Offset = "0x1C861B8", VA = "0x1C861B8", Slot = "5")]
		internal virtual void setCPtr(IntPtr cPtr)
		{
		}

		[Token(Token = "0x60022EA")]
		[Address(RVA = "0x1C861EC", Offset = "0x1C861EC", VA = "0x1C861EC", Slot = "1")]
		~tProgramChange()
		{
		}

		[Token(Token = "0x60022EB")]
		[Address(RVA = "0x1C8625C", Offset = "0x1C8625C", VA = "0x1C8625C", Slot = "6")]
		public virtual void Dispose()
		{
		}

		[Token(Token = "0x60022EE")]
		[Address(RVA = "0x1C86480", Offset = "0x1C86480", VA = "0x1C86480")]
		public tProgramChange()
		{
		}
	}

	[Token(Token = "0x40011ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40011EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x170000E4")]
	public byte byChan
	{
		[Token(Token = "0x600127A")]
		[Address(RVA = "0x1C83128", Offset = "0x1C83128", VA = "0x1C83128")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001279")]
		[Address(RVA = "0x1C830AC", Offset = "0x1C830AC", VA = "0x1C830AC")]
		set
		{
		}
	}

	[Token(Token = "0x170000E5")]
	public tGen Gen
	{
		[Token(Token = "0x600127C")]
		[Address(RVA = "0x1C8328C", Offset = "0x1C8328C", VA = "0x1C8328C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600127B")]
		[Address(RVA = "0x1C83194", Offset = "0x1C83194", VA = "0x1C83194")]
		set
		{
		}
	}

	[Token(Token = "0x170000E6")]
	public tCc Cc
	{
		[Token(Token = "0x600127E")]
		[Address(RVA = "0x1C83474", Offset = "0x1C83474", VA = "0x1C83474")]
		get
		{
			return null;
		}
		[Token(Token = "0x600127D")]
		[Address(RVA = "0x1C8337C", Offset = "0x1C8337C", VA = "0x1C8337C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E7")]
	public tNoteOnOff NoteOnOff
	{
		[Token(Token = "0x6001280")]
		[Address(RVA = "0x1C8365C", Offset = "0x1C8365C", VA = "0x1C8365C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600127F")]
		[Address(RVA = "0x1C83564", Offset = "0x1C83564", VA = "0x1C83564")]
		set
		{
		}
	}

	[Token(Token = "0x170000E8")]
	public tPitchBend PitchBend
	{
		[Token(Token = "0x6001282")]
		[Address(RVA = "0x1C83844", Offset = "0x1C83844", VA = "0x1C83844")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001281")]
		[Address(RVA = "0x1C8374C", Offset = "0x1C8374C", VA = "0x1C8374C")]
		set
		{
		}
	}

	[Token(Token = "0x170000E9")]
	public tNoteAftertouch NoteAftertouch
	{
		[Token(Token = "0x6001284")]
		[Address(RVA = "0x1C83A2C", Offset = "0x1C83A2C", VA = "0x1C83A2C")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001283")]
		[Address(RVA = "0x1C83934", Offset = "0x1C83934", VA = "0x1C83934")]
		set
		{
		}
	}

	[Token(Token = "0x170000EA")]
	public tChanAftertouch ChanAftertouch
	{
		[Token(Token = "0x6001286")]
		[Address(RVA = "0x1C83C14", Offset = "0x1C83C14", VA = "0x1C83C14")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001285")]
		[Address(RVA = "0x1C83B1C", Offset = "0x1C83B1C", VA = "0x1C83B1C")]
		set
		{
		}
	}

	[Token(Token = "0x170000EB")]
	public tProgramChange ProgramChange
	{
		[Token(Token = "0x6001288")]
		[Address(RVA = "0x1C83DFC", Offset = "0x1C83DFC", VA = "0x1C83DFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001287")]
		[Address(RVA = "0x1C83D04", Offset = "0x1C83D04", VA = "0x1C83D04")]
		set
		{
		}
	}

	[Token(Token = "0x170000EC")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x600128A")]
		[Address(RVA = "0x1C83F68", Offset = "0x1C83F68", VA = "0x1C83F68")]
		get
		{
			return default(AkMIDIEventTypes);
		}
		[Token(Token = "0x6001289")]
		[Address(RVA = "0x1C83EEC", Offset = "0x1C83EEC", VA = "0x1C83EEC")]
		set
		{
		}
	}

	[Token(Token = "0x170000ED")]
	public byte byOnOffNote
	{
		[Token(Token = "0x600128C")]
		[Address(RVA = "0x1C84050", Offset = "0x1C84050", VA = "0x1C84050")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600128B")]
		[Address(RVA = "0x1C83FD4", Offset = "0x1C83FD4", VA = "0x1C83FD4")]
		set
		{
		}
	}

	[Token(Token = "0x170000EE")]
	public byte byVelocity
	{
		[Token(Token = "0x600128E")]
		[Address(RVA = "0x1C84138", Offset = "0x1C84138", VA = "0x1C84138")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600128D")]
		[Address(RVA = "0x1C840BC", Offset = "0x1C840BC", VA = "0x1C840BC")]
		set
		{
		}
	}

	[Token(Token = "0x170000EF")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x6001290")]
		[Address(RVA = "0x1C84220", Offset = "0x1C84220", VA = "0x1C84220")]
		get
		{
			return default(AkMIDICcTypes);
		}
		[Token(Token = "0x600128F")]
		[Address(RVA = "0x1C841A4", Offset = "0x1C841A4", VA = "0x1C841A4")]
		set
		{
		}
	}

	[Token(Token = "0x170000F0")]
	public byte byCcValue
	{
		[Token(Token = "0x6001292")]
		[Address(RVA = "0x1C84308", Offset = "0x1C84308", VA = "0x1C84308")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001291")]
		[Address(RVA = "0x1C8428C", Offset = "0x1C8428C", VA = "0x1C8428C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F1")]
	public byte byValueLsb
	{
		[Token(Token = "0x6001294")]
		[Address(RVA = "0x1C843F0", Offset = "0x1C843F0", VA = "0x1C843F0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001293")]
		[Address(RVA = "0x1C84374", Offset = "0x1C84374", VA = "0x1C84374")]
		set
		{
		}
	}

	[Token(Token = "0x170000F2")]
	public byte byValueMsb
	{
		[Token(Token = "0x6001296")]
		[Address(RVA = "0x1C844D8", Offset = "0x1C844D8", VA = "0x1C844D8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001295")]
		[Address(RVA = "0x1C8445C", Offset = "0x1C8445C", VA = "0x1C8445C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F3")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x6001298")]
		[Address(RVA = "0x1C845C0", Offset = "0x1C845C0", VA = "0x1C845C0")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001297")]
		[Address(RVA = "0x1C84544", Offset = "0x1C84544", VA = "0x1C84544")]
		set
		{
		}
	}

	[Token(Token = "0x170000F4")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x600129A")]
		[Address(RVA = "0x1C846A8", Offset = "0x1C846A8", VA = "0x1C846A8")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x6001299")]
		[Address(RVA = "0x1C8462C", Offset = "0x1C8462C", VA = "0x1C8462C")]
		set
		{
		}
	}

	[Token(Token = "0x170000F5")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x600129C")]
		[Address(RVA = "0x1C84790", Offset = "0x1C84790", VA = "0x1C84790")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600129B")]
		[Address(RVA = "0x1C84714", Offset = "0x1C84714", VA = "0x1C84714")]
		set
		{
		}
	}

	[Token(Token = "0x170000F6")]
	public byte byProgramNum
	{
		[Token(Token = "0x600129E")]
		[Address(RVA = "0x1C84878", Offset = "0x1C84878", VA = "0x1C84878")]
		get
		{
			return default(byte);
		}
		[Token(Token = "0x600129D")]
		[Address(RVA = "0x1C847FC", Offset = "0x1C847FC", VA = "0x1C847FC")]
		set
		{
		}
	}

	[Token(Token = "0x6001274")]
	[Address(RVA = "0x1C82E3C", Offset = "0x1C82E3C", VA = "0x1C82E3C")]
	internal AkMIDIEvent(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001275")]
	[Address(RVA = "0x1C82E7C", Offset = "0x1C82E7C", VA = "0x1C82E7C")]
	internal static IntPtr getCPtr(AkMIDIEvent obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001276")]
	[Address(RVA = "0x1C82ECC", Offset = "0x1C82ECC", VA = "0x1C82ECC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001277")]
	[Address(RVA = "0x1C82F00", Offset = "0x1C82F00", VA = "0x1C82F00", Slot = "1")]
	~AkMIDIEvent()
	{
	}

	[Token(Token = "0x6001278")]
	[Address(RVA = "0x1C82F70", Offset = "0x1C82F70", VA = "0x1C82F70", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600129F")]
	[Address(RVA = "0x1C848E4", Offset = "0x1C848E4", VA = "0x1C848E4")]
	public AkMIDIEvent()
	{
	}
}
[Token(Token = "0x20002B9")]
public class AkMIDIEventCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40011EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x170000F7")]
	public byte byChan
	{
		[Token(Token = "0x60012A5")]
		[Address(RVA = "0x1C8682C", Offset = "0x1C8682C", VA = "0x1C8682C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F8")]
	public byte byParam1
	{
		[Token(Token = "0x60012A6")]
		[Address(RVA = "0x1C86898", Offset = "0x1C86898", VA = "0x1C86898")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000F9")]
	public byte byParam2
	{
		[Token(Token = "0x60012A7")]
		[Address(RVA = "0x1C86904", Offset = "0x1C86904", VA = "0x1C86904")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000FA")]
	public AkMIDIEventTypes byType
	{
		[Token(Token = "0x60012A8")]
		[Address(RVA = "0x1C86970", Offset = "0x1C86970", VA = "0x1C86970")]
		get
		{
			return default(AkMIDIEventTypes);
		}
	}

	[Token(Token = "0x170000FB")]
	public byte byOnOffNote
	{
		[Token(Token = "0x60012A9")]
		[Address(RVA = "0x1C869DC", Offset = "0x1C869DC", VA = "0x1C869DC")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000FC")]
	public byte byVelocity
	{
		[Token(Token = "0x60012AA")]
		[Address(RVA = "0x1C86A48", Offset = "0x1C86A48", VA = "0x1C86A48")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000FD")]
	public AkMIDICcTypes byCc
	{
		[Token(Token = "0x60012AB")]
		[Address(RVA = "0x1C86AB4", Offset = "0x1C86AB4", VA = "0x1C86AB4")]
		get
		{
			return default(AkMIDICcTypes);
		}
	}

	[Token(Token = "0x170000FE")]
	public byte byCcValue
	{
		[Token(Token = "0x60012AC")]
		[Address(RVA = "0x1C86B20", Offset = "0x1C86B20", VA = "0x1C86B20")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x170000FF")]
	public byte byValueLsb
	{
		[Token(Token = "0x60012AD")]
		[Address(RVA = "0x1C86B8C", Offset = "0x1C86B8C", VA = "0x1C86B8C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000100")]
	public byte byValueMsb
	{
		[Token(Token = "0x60012AE")]
		[Address(RVA = "0x1C86BF8", Offset = "0x1C86BF8", VA = "0x1C86BF8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000101")]
	public byte byAftertouchNote
	{
		[Token(Token = "0x60012AF")]
		[Address(RVA = "0x1C86C64", Offset = "0x1C86C64", VA = "0x1C86C64")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000102")]
	public byte byNoteAftertouchValue
	{
		[Token(Token = "0x60012B0")]
		[Address(RVA = "0x1C86CD0", Offset = "0x1C86CD0", VA = "0x1C86CD0")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000103")]
	public byte byChanAftertouchValue
	{
		[Token(Token = "0x60012B1")]
		[Address(RVA = "0x1C86D3C", Offset = "0x1C86D3C", VA = "0x1C86D3C")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x17000104")]
	public byte byProgramNum
	{
		[Token(Token = "0x60012B2")]
		[Address(RVA = "0x1C86DA8", Offset = "0x1C86DA8", VA = "0x1C86DA8")]
		get
		{
			return default(byte);
		}
	}

	[Token(Token = "0x60012A0")]
	[Address(RVA = "0x1C86504", Offset = "0x1C86504", VA = "0x1C86504")]
	internal AkMIDIEventCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012A1")]
	[Address(RVA = "0x1C86598", Offset = "0x1C86598", VA = "0x1C86598")]
	internal static IntPtr getCPtr(AkMIDIEventCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012A2")]
	[Address(RVA = "0x1C865E8", Offset = "0x1C865E8", VA = "0x1C865E8", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012A3")]
	[Address(RVA = "0x1C86674", Offset = "0x1C86674", VA = "0x1C86674", Slot = "1")]
	~AkMIDIEventCallbackInfo()
	{
	}

	[Token(Token = "0x60012A4")]
	[Address(RVA = "0x1C866E4", Offset = "0x1C866E4", VA = "0x1C866E4", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60012B3")]
	[Address(RVA = "0x1C86E14", Offset = "0x1C86E14", VA = "0x1C86E14")]
	public AkMIDIEventCallbackInfo()
	{
	}
}
[Token(Token = "0x20002BA")]
public enum AkMIDIEventTypes
{
	[Token(Token = "0x40011F1")]
	NOTE_OFF = 128,
	[Token(Token = "0x40011F2")]
	NOTE_ON = 144,
	[Token(Token = "0x40011F3")]
	NOTE_AFTERTOUCH = 160,
	[Token(Token = "0x40011F4")]
	CONTROLLER = 176,
	[Token(Token = "0x40011F5")]
	PROGRAM_CHANGE = 192,
	[Token(Token = "0x40011F6")]
	CHANNEL_AFTERTOUCH = 208,
	[Token(Token = "0x40011F7")]
	PITCH_BEND = 224,
	[Token(Token = "0x40011F8")]
	SYSEX = 240,
	[Token(Token = "0x40011F9")]
	ESCAPE = 247,
	[Token(Token = "0x40011FA")]
	META = 255
}
[Token(Token = "0x20002BB")]
public class AkMIDIPost : AkMIDIEvent
{
	[Token(Token = "0x40011FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000105")]
	public uint uOffset
	{
		[Token(Token = "0x60012BA")]
		[Address(RVA = "0x1C87230", Offset = "0x1C87230", VA = "0x1C87230")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012B9")]
		[Address(RVA = "0x1C871B4", Offset = "0x1C871B4", VA = "0x1C871B4")]
		set
		{
		}
	}

	[Token(Token = "0x60012B4")]
	[Address(RVA = "0x1C86E88", Offset = "0x1C86E88", VA = "0x1C86E88")]
	internal AkMIDIPost(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012B5")]
	[Address(RVA = "0x1C86F24", Offset = "0x1C86F24", VA = "0x1C86F24")]
	internal static IntPtr getCPtr(AkMIDIPost obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012B6")]
	[Address(RVA = "0x1C86F74", Offset = "0x1C86F74", VA = "0x1C86F74", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012B7")]
	[Address(RVA = "0x1C87008", Offset = "0x1C87008", VA = "0x1C87008", Slot = "1")]
	~AkMIDIPost()
	{
	}

	[Token(Token = "0x60012B8")]
	[Address(RVA = "0x1C87070", Offset = "0x1C87070", VA = "0x1C87070", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60012BB")]
	[Address(RVA = "0x1C8729C", Offset = "0x1C8729C", VA = "0x1C8729C")]
	public AKRESULT PostOnEvent(uint in_eventID, GameObject in_gameObjectID, uint in_uNumPosts)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60012BC")]
	[Address(RVA = "0x1C87370", Offset = "0x1C87370", VA = "0x1C87370")]
	public void Clone(AkMIDIPost other)
	{
	}

	[Token(Token = "0x60012BD")]
	[Address(RVA = "0x1C87418", Offset = "0x1C87418", VA = "0x1C87418")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60012BE")]
	[Address(RVA = "0x1C87478", Offset = "0x1C87478", VA = "0x1C87478")]
	public AkMIDIPost()
	{
	}
}
[Token(Token = "0x20002BC")]
public class AkMarkerCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x40011FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000106")]
	public uint uIdentifier
	{
		[Token(Token = "0x60012C4")]
		[Address(RVA = "0x1C87DC0", Offset = "0x1C87DC0", VA = "0x1C87DC0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000107")]
	public uint uPosition
	{
		[Token(Token = "0x60012C5")]
		[Address(RVA = "0x1C87E2C", Offset = "0x1C87E2C", VA = "0x1C87E2C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000108")]
	public string strLabel
	{
		[Token(Token = "0x60012C6")]
		[Address(RVA = "0x1C87E98", Offset = "0x1C87E98", VA = "0x1C87E98")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012BF")]
	[Address(RVA = "0x1C87A98", Offset = "0x1C87A98", VA = "0x1C87A98")]
	internal AkMarkerCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012C0")]
	[Address(RVA = "0x1C87B2C", Offset = "0x1C87B2C", VA = "0x1C87B2C")]
	internal static IntPtr getCPtr(AkMarkerCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012C1")]
	[Address(RVA = "0x1C87B7C", Offset = "0x1C87B7C", VA = "0x1C87B7C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012C2")]
	[Address(RVA = "0x1C87C08", Offset = "0x1C87C08", VA = "0x1C87C08", Slot = "1")]
	~AkMarkerCallbackInfo()
	{
	}

	[Token(Token = "0x60012C3")]
	[Address(RVA = "0x1C87C78", Offset = "0x1C87C78", VA = "0x1C87C78", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60012C7")]
	[Address(RVA = "0x1C87F38", Offset = "0x1C87F38", VA = "0x1C87F38")]
	public AkMarkerCallbackInfo()
	{
	}
}
[Token(Token = "0x20002BD")]
public class AkMemSettings : IDisposable
{
	[Token(Token = "0x40011FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40011FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000109")]
	public uint uMaxNumPools
	{
		[Token(Token = "0x60012CF")]
		[Address(RVA = "0x1C88AB4", Offset = "0x1C88AB4", VA = "0x1C88AB4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012CE")]
		[Address(RVA = "0x1C88A38", Offset = "0x1C88A38", VA = "0x1C88A38")]
		set
		{
		}
	}

	[Token(Token = "0x1700010A")]
	public uint uDebugFlags
	{
		[Token(Token = "0x60012D1")]
		[Address(RVA = "0x1C88B9C", Offset = "0x1C88B9C", VA = "0x1C88B9C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60012D0")]
		[Address(RVA = "0x1C88B20", Offset = "0x1C88B20", VA = "0x1C88B20")]
		set
		{
		}
	}

	[Token(Token = "0x60012C8")]
	[Address(RVA = "0x1C80CF0", Offset = "0x1C80CF0", VA = "0x1C80CF0")]
	internal AkMemSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012C9")]
	[Address(RVA = "0x1C80BF0", Offset = "0x1C80BF0", VA = "0x1C80BF0")]
	internal static IntPtr getCPtr(AkMemSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012CA")]
	[Address(RVA = "0x1C887D4", Offset = "0x1C887D4", VA = "0x1C887D4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012CB")]
	[Address(RVA = "0x1C88808", Offset = "0x1C88808", VA = "0x1C88808", Slot = "1")]
	~AkMemSettings()
	{
	}

	[Token(Token = "0x60012CC")]
	[Address(RVA = "0x1C88878", Offset = "0x1C88878", VA = "0x1C88878", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60012CD")]
	[Address(RVA = "0x1C889B4", Offset = "0x1C889B4", VA = "0x1C889B4")]
	public AkMemSettings()
	{
	}
}
[Token(Token = "0x20002BE")]
public enum AkMeteringFlags
{
	[Token(Token = "0x4001200")]
	AK_NoMetering = 0,
	[Token(Token = "0x4001201")]
	AK_EnableBusMeter_Peak = 1,
	[Token(Token = "0x4001202")]
	AK_EnableBusMeter_TruePeak = 2,
	[Token(Token = "0x4001203")]
	AK_EnableBusMeter_RMS = 4,
	[Token(Token = "0x4001204")]
	AK_EnableBusMeter_KPower = 0x10,
	[Token(Token = "0x4001205")]
	AK_EnableBusMeter_3DMeter = 0x20
}
[Token(Token = "0x20002BF")]
public enum AkMonitorErrorCode
{
	[Token(Token = "0x4001207")]
	ErrorCode_NoError,
	[Token(Token = "0x4001208")]
	ErrorCode_FileNotFound,
	[Token(Token = "0x4001209")]
	ErrorCode_CannotOpenFile,
	[Token(Token = "0x400120A")]
	ErrorCode_CannotStartStreamNoMemory,
	[Token(Token = "0x400120B")]
	ErrorCode_IODevice,
	[Token(Token = "0x400120C")]
	ErrorCode_IncompatibleIOSettings,
	[Token(Token = "0x400120D")]
	ErrorCode_PluginUnsupportedChannelConfiguration,
	[Token(Token = "0x400120E")]
	ErrorCode_PluginMediaUnavailable,
	[Token(Token = "0x400120F")]
	ErrorCode_PluginInitialisationFailed,
	[Token(Token = "0x4001210")]
	ErrorCode_PluginProcessingFailed,
	[Token(Token = "0x4001211")]
	ErrorCode_PluginExecutionInvalid,
	[Token(Token = "0x4001212")]
	ErrorCode_PluginAllocationFailed,
	[Token(Token = "0x4001213")]
	ErrorCode_VorbisRequireSeekTable,
	[Token(Token = "0x4001214")]
	ErrorCode_VorbisDecodeError,
	[Token(Token = "0x4001215")]
	ErrorCode_AACDecodeError,
	[Token(Token = "0x4001216")]
	ErrorCode_xWMACreateDecoderFailed,
	[Token(Token = "0x4001217")]
	ErrorCode_ATRAC9CreateDecoderFailed,
	[Token(Token = "0x4001218")]
	ErrorCode_ATRAC9CreateDecoderFailedChShortage,
	[Token(Token = "0x4001219")]
	ErrorCode_ATRAC9DecodeFailed,
	[Token(Token = "0x400121A")]
	ErrorCode_ATRAC9ClearContextFailed,
	[Token(Token = "0x400121B")]
	ErrorCode_ATRAC9LoopSectionTooSmall,
	[Token(Token = "0x400121C")]
	ErrorCode_InvalidAudioFileHeader,
	[Token(Token = "0x400121D")]
	ErrorCode_AudioFileHeaderTooLarge,
	[Token(Token = "0x400121E")]
	ErrorCode_FileTooSmall,
	[Token(Token = "0x400121F")]
	ErrorCode_TransitionNotAccurateChannel,
	[Token(Token = "0x4001220")]
	ErrorCode_TransitionNotAccurateStarvation,
	[Token(Token = "0x4001221")]
	ErrorCode_NothingToPlay,
	[Token(Token = "0x4001222")]
	ErrorCode_PlayFailed,
	[Token(Token = "0x4001223")]
	ErrorCode_StingerCouldNotBeScheduled,
	[Token(Token = "0x4001224")]
	ErrorCode_TooLongSegmentLookAhead,
	[Token(Token = "0x4001225")]
	ErrorCode_CannotScheduleMusicSwitch,
	[Token(Token = "0x4001226")]
	ErrorCode_TooManySimultaneousMusicSegments,
	[Token(Token = "0x4001227")]
	ErrorCode_PlaylistStoppedForEditing,
	[Token(Token = "0x4001228")]
	ErrorCode_MusicClipsRescheduledAfterTrackEdit,
	[Token(Token = "0x4001229")]
	ErrorCode_CannotPlaySource_Create,
	[Token(Token = "0x400122A")]
	ErrorCode_CannotPlaySource_VirtualOff,
	[Token(Token = "0x400122B")]
	ErrorCode_CannotPlaySource_TimeSkip,
	[Token(Token = "0x400122C")]
	ErrorCode_CannotPlaySource_InconsistentState,
	[Token(Token = "0x400122D")]
	ErrorCode_MediaNotLoaded,
	[Token(Token = "0x400122E")]
	ErrorCode_VoiceStarving,
	[Token(Token = "0x400122F")]
	ErrorCode_StreamingSourceStarving,
	[Token(Token = "0x4001230")]
	ErrorCode_XMADecoderSourceStarving,
	[Token(Token = "0x4001231")]
	ErrorCode_XMADecodingError,
	[Token(Token = "0x4001232")]
	ErrorCode_InvalidXMAData,
	[Token(Token = "0x4001233")]
	ErrorCode_PluginNotRegistered,
	[Token(Token = "0x4001234")]
	ErrorCode_CodecNotRegistered,
	[Token(Token = "0x4001235")]
	ErrorCode_PluginVersionMismatch,
	[Token(Token = "0x4001236")]
	ErrorCode_EventIDNotFound,
	[Token(Token = "0x4001237")]
	ErrorCode_InvalidGroupID,
	[Token(Token = "0x4001238")]
	ErrorCode_SelectedChildNotAvailable,
	[Token(Token = "0x4001239")]
	ErrorCode_SelectedNodeNotAvailable,
	[Token(Token = "0x400123A")]
	ErrorCode_SelectedMediaNotAvailable,
	[Token(Token = "0x400123B")]
	ErrorCode_NoValidSwitch,
	[Token(Token = "0x400123C")]
	ErrorCode_SelectedNodeNotAvailablePlay,
	[Token(Token = "0x400123D")]
	ErrorCode_FeedbackVoiceStarving,
	[Token(Token = "0x400123E")]
	ErrorCode_BankLoadFailed,
	[Token(Token = "0x400123F")]
	ErrorCode_BankUnloadFailed,
	[Token(Token = "0x4001240")]
	ErrorCode_ErrorWhileLoadingBank,
	[Token(Token = "0x4001241")]
	ErrorCode_InsufficientSpaceToLoadBank,
	[Token(Token = "0x4001242")]
	ErrorCode_LowerEngineCommandListFull,
	[Token(Token = "0x4001243")]
	ErrorCode_SeekNoMarker,
	[Token(Token = "0x4001244")]
	ErrorCode_CannotSeekContinuous,
	[Token(Token = "0x4001245")]
	ErrorCode_SeekAfterEof,
	[Token(Token = "0x4001246")]
	ErrorCode_UnknownGameObject,
	[Token(Token = "0x4001247")]
	ErrorCode_UnknownEmitter,
	[Token(Token = "0x4001248")]
	ErrorCode_UnknownListener,
	[Token(Token = "0x4001249")]
	ErrorCode_GameObjectIsNotListener,
	[Token(Token = "0x400124A")]
	ErrorCode_GameObjectIsNotEmitter,
	[Token(Token = "0x400124B")]
	ErrorCode_UnknownGameObjectEvent,
	[Token(Token = "0x400124C")]
	ErrorCode_GameObjectIsNotEmitterEvent,
	[Token(Token = "0x400124D")]
	ErrorCode_ExternalSourceNotResolved,
	[Token(Token = "0x400124E")]
	ErrorCode_FileFormatMismatch,
	[Token(Token = "0x400124F")]
	ErrorCode_CommandQueueFull,
	[Token(Token = "0x4001250")]
	ErrorCode_CommandTooLarge,
	[Token(Token = "0x4001251")]
	ErrorCode_XMACreateDecoderLimitReached,
	[Token(Token = "0x4001252")]
	ErrorCode_XMAStreamBufferTooSmall,
	[Token(Token = "0x4001253")]
	ErrorCode_ModulatorScopeError_Inst,
	[Token(Token = "0x4001254")]
	ErrorCode_ModulatorScopeError_Obj,
	[Token(Token = "0x4001255")]
	ErrorCode_SeekAfterEndOfPlaylist,
	[Token(Token = "0x4001256")]
	ErrorCode_OpusRequireSeekTable,
	[Token(Token = "0x4001257")]
	ErrorCode_OpusDecodeError,
	[Token(Token = "0x4001258")]
	ErrorCode_OpusCreateDecoderFailed,
	[Token(Token = "0x4001259")]
	ErrorCode_SourcePluginNotFound,
	[Token(Token = "0x400125A")]
	ErrorCode_VirtualVoiceLimit,
	[Token(Token = "0x400125B")]
	ErrorCode_AudioDeviceShareSetNotFound,
	[Token(Token = "0x400125C")]
	ErrorCode_NotEnoughMemoryToStart,
	[Token(Token = "0x400125D")]
	ErrorCode_UnkownOpusError,
	[Token(Token = "0x400125E")]
	ErrorCode_AudioDeviceInitFailure,
	[Token(Token = "0x400125F")]
	ErrorCode_AudioDeviceRemoveFailure,
	[Token(Token = "0x4001260")]
	ErrorCode_AudioDeviceNotFound,
	[Token(Token = "0x4001261")]
	ErrorCode_AudioDeviceNotValid,
	[Token(Token = "0x4001262")]
	Num_ErrorCodes
}
[Token(Token = "0x20002C0")]
public enum AkMonitorErrorLevel
{
	[Token(Token = "0x4001264")]
	ErrorLevel_Message = 1,
	[Token(Token = "0x4001265")]
	ErrorLevel_Error,
	[Token(Token = "0x4001266")]
	ErrorLevel_All
}
[Token(Token = "0x20002C1")]
public class AkMonitoringCallbackInfo : IDisposable
{
	[Token(Token = "0x4001267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700010B")]
	public AkMonitorErrorCode errorCode
	{
		[Token(Token = "0x60012D7")]
		[Address(RVA = "0x1C88E78", Offset = "0x1C88E78", VA = "0x1C88E78")]
		get
		{
			return default(AkMonitorErrorCode);
		}
	}

	[Token(Token = "0x1700010C")]
	public AkMonitorErrorLevel errorLevel
	{
		[Token(Token = "0x60012D8")]
		[Address(RVA = "0x1C88EE4", Offset = "0x1C88EE4", VA = "0x1C88EE4")]
		get
		{
			return default(AkMonitorErrorLevel);
		}
	}

	[Token(Token = "0x1700010D")]
	public uint playingID
	{
		[Token(Token = "0x60012D9")]
		[Address(RVA = "0x1C88F50", Offset = "0x1C88F50", VA = "0x1C88F50")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700010E")]
	public ulong gameObjID
	{
		[Token(Token = "0x60012DA")]
		[Address(RVA = "0x1C88FBC", Offset = "0x1C88FBC", VA = "0x1C88FBC")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x1700010F")]
	public string message
	{
		[Token(Token = "0x60012DB")]
		[Address(RVA = "0x1C89028", Offset = "0x1C89028", VA = "0x1C89028")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012D2")]
	[Address(RVA = "0x1C88C08", Offset = "0x1C88C08", VA = "0x1C88C08")]
	internal AkMonitoringCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012D3")]
	[Address(RVA = "0x1C88C48", Offset = "0x1C88C48", VA = "0x1C88C48")]
	internal static IntPtr getCPtr(AkMonitoringCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012D4")]
	[Address(RVA = "0x1C88C98", Offset = "0x1C88C98", VA = "0x1C88C98", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012D5")]
	[Address(RVA = "0x1C88CCC", Offset = "0x1C88CCC", VA = "0x1C88CCC", Slot = "1")]
	~AkMonitoringCallbackInfo()
	{
	}

	[Token(Token = "0x60012D6")]
	[Address(RVA = "0x1C88D3C", Offset = "0x1C88D3C", VA = "0x1C88D3C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60012DC")]
	[Address(RVA = "0x1C890C8", Offset = "0x1C890C8", VA = "0x1C890C8")]
	public AkMonitoringCallbackInfo()
	{
	}
}
[Token(Token = "0x20002C2")]
public enum AkMultiPositionType
{
	[Token(Token = "0x400126A")]
	MultiPositionType_SingleSource,
	[Token(Token = "0x400126B")]
	MultiPositionType_MultiSources,
	[Token(Token = "0x400126C")]
	MultiPositionType_MultiDirections
}
[Token(Token = "0x20002C3")]
public class AkMusicPlaylistCallbackInfo : AkEventCallbackInfo
{
	[Token(Token = "0x400126D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000110")]
	public uint playlistID
	{
		[Token(Token = "0x60012E2")]
		[Address(RVA = "0x1C894F8", Offset = "0x1C894F8", VA = "0x1C894F8")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000111")]
	public uint uNumPlaylistItems
	{
		[Token(Token = "0x60012E3")]
		[Address(RVA = "0x1C89564", Offset = "0x1C89564", VA = "0x1C89564")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000112")]
	public uint uPlaylistSelection
	{
		[Token(Token = "0x60012E4")]
		[Address(RVA = "0x1C895D0", Offset = "0x1C895D0", VA = "0x1C895D0")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000113")]
	public uint uPlaylistItemDone
	{
		[Token(Token = "0x60012E5")]
		[Address(RVA = "0x1C8963C", Offset = "0x1C8963C", VA = "0x1C8963C")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x60012DD")]
	[Address(RVA = "0x1C891D0", Offset = "0x1C891D0", VA = "0x1C891D0")]
	internal AkMusicPlaylistCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012DE")]
	[Address(RVA = "0x1C89264", Offset = "0x1C89264", VA = "0x1C89264")]
	internal static IntPtr getCPtr(AkMusicPlaylistCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012DF")]
	[Address(RVA = "0x1C892B4", Offset = "0x1C892B4", VA = "0x1C892B4", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012E0")]
	[Address(RVA = "0x1C89340", Offset = "0x1C89340", VA = "0x1C89340", Slot = "1")]
	~AkMusicPlaylistCallbackInfo()
	{
	}

	[Token(Token = "0x60012E1")]
	[Address(RVA = "0x1C893B0", Offset = "0x1C893B0", VA = "0x1C893B0", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x60012E6")]
	[Address(RVA = "0x1C896A8", Offset = "0x1C896A8", VA = "0x1C896A8")]
	public AkMusicPlaylistCallbackInfo()
	{
	}
}
[Token(Token = "0x20002C4")]
public class AkMusicSettings : IDisposable
{
	[Token(Token = "0x400126E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400126F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000114")]
	public float fStreamingLookAheadRatio
	{
		[Token(Token = "0x60012ED")]
		[Address(RVA = "0x1C89978", Offset = "0x1C89978", VA = "0x1C89978")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60012EC")]
		[Address(RVA = "0x1C898FC", Offset = "0x1C898FC", VA = "0x1C898FC")]
		set
		{
		}
	}

	[Token(Token = "0x60012E7")]
	[Address(RVA = "0x1C81498", Offset = "0x1C81498", VA = "0x1C81498")]
	internal AkMusicSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012E8")]
	[Address(RVA = "0x1C81398", Offset = "0x1C81398", VA = "0x1C81398")]
	internal static IntPtr getCPtr(AkMusicSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012E9")]
	[Address(RVA = "0x1C8971C", Offset = "0x1C8971C", VA = "0x1C8971C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012EA")]
	[Address(RVA = "0x1C89750", Offset = "0x1C89750", VA = "0x1C89750", Slot = "1")]
	~AkMusicSettings()
	{
	}

	[Token(Token = "0x60012EB")]
	[Address(RVA = "0x1C897C0", Offset = "0x1C897C0", VA = "0x1C897C0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60012EE")]
	[Address(RVA = "0x1C899E4", Offset = "0x1C899E4", VA = "0x1C899E4")]
	public AkMusicSettings()
	{
	}
}
[Token(Token = "0x20002C5")]
public class AkMusicSyncCallbackInfo : AkCallbackInfo
{
	[Token(Token = "0x4001270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x17000115")]
	public uint playingID
	{
		[Token(Token = "0x60012F4")]
		[Address(RVA = "0x1C89D90", Offset = "0x1C89D90", VA = "0x1C89D90")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x17000116")]
	public int segmentInfo_iCurrentPosition
	{
		[Token(Token = "0x60012F5")]
		[Address(RVA = "0x1C89DFC", Offset = "0x1C89DFC", VA = "0x1C89DFC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000117")]
	public int segmentInfo_iPreEntryDuration
	{
		[Token(Token = "0x60012F6")]
		[Address(RVA = "0x1C89E68", Offset = "0x1C89E68", VA = "0x1C89E68")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000118")]
	public int segmentInfo_iActiveDuration
	{
		[Token(Token = "0x60012F7")]
		[Address(RVA = "0x1C89ED4", Offset = "0x1C89ED4", VA = "0x1C89ED4")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000119")]
	public int segmentInfo_iPostExitDuration
	{
		[Token(Token = "0x60012F8")]
		[Address(RVA = "0x1C89F40", Offset = "0x1C89F40", VA = "0x1C89F40")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011A")]
	public int segmentInfo_iRemainingLookAheadTime
	{
		[Token(Token = "0x60012F9")]
		[Address(RVA = "0x1C89FAC", Offset = "0x1C89FAC", VA = "0x1C89FAC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x1700011B")]
	public float segmentInfo_fBeatDuration
	{
		[Token(Token = "0x60012FA")]
		[Address(RVA = "0x1C8A018", Offset = "0x1C8A018", VA = "0x1C8A018")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700011C")]
	public float segmentInfo_fBarDuration
	{
		[Token(Token = "0x60012FB")]
		[Address(RVA = "0x1C8A084", Offset = "0x1C8A084", VA = "0x1C8A084")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700011D")]
	public float segmentInfo_fGridDuration
	{
		[Token(Token = "0x60012FC")]
		[Address(RVA = "0x1C8A0F0", Offset = "0x1C8A0F0", VA = "0x1C8A0F0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700011E")]
	public float segmentInfo_fGridOffset
	{
		[Token(Token = "0x60012FD")]
		[Address(RVA = "0x1C8A15C", Offset = "0x1C8A15C", VA = "0x1C8A15C")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700011F")]
	public AkCallbackType musicSyncType
	{
		[Token(Token = "0x60012FE")]
		[Address(RVA = "0x1C8A1C8", Offset = "0x1C8A1C8", VA = "0x1C8A1C8")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x17000120")]
	public string userCueName
	{
		[Token(Token = "0x60012FF")]
		[Address(RVA = "0x1C8A234", Offset = "0x1C8A234", VA = "0x1C8A234")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60012EF")]
	[Address(RVA = "0x1C89A68", Offset = "0x1C89A68", VA = "0x1C89A68")]
	internal AkMusicSyncCallbackInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60012F0")]
	[Address(RVA = "0x1C89AFC", Offset = "0x1C89AFC", VA = "0x1C89AFC")]
	internal static IntPtr getCPtr(AkMusicSyncCallbackInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60012F1")]
	[Address(RVA = "0x1C89B4C", Offset = "0x1C89B4C", VA = "0x1C89B4C", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60012F2")]
	[Address(RVA = "0x1C89BD8", Offset = "0x1C89BD8", VA = "0x1C89BD8", Slot = "1")]
	~AkMusicSyncCallbackInfo()
	{
	}

	[Token(Token = "0x60012F3")]
	[Address(RVA = "0x1C89C48", Offset = "0x1C89C48", VA = "0x1C89C48", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001300")]
	[Address(RVA = "0x1C8A2D4", Offset = "0x1C8A2D4", VA = "0x1C8A2D4")]
	public AkMusicSyncCallbackInfo()
	{
	}
}
[Token(Token = "0x20002C6")]
public class AkObjectInfo : IDisposable
{
	[Token(Token = "0x4001271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000121")]
	public uint objID
	{
		[Token(Token = "0x6001307")]
		[Address(RVA = "0x1C8A634", Offset = "0x1C8A634", VA = "0x1C8A634")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001306")]
		[Address(RVA = "0x1C8A5B8", Offset = "0x1C8A5B8", VA = "0x1C8A5B8")]
		set
		{
		}
	}

	[Token(Token = "0x17000122")]
	public uint parentID
	{
		[Token(Token = "0x6001309")]
		[Address(RVA = "0x1C8A71C", Offset = "0x1C8A71C", VA = "0x1C8A71C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001308")]
		[Address(RVA = "0x1C8A6A0", Offset = "0x1C8A6A0", VA = "0x1C8A6A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000123")]
	public int iDepth
	{
		[Token(Token = "0x600130B")]
		[Address(RVA = "0x1C8A804", Offset = "0x1C8A804", VA = "0x1C8A804")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600130A")]
		[Address(RVA = "0x1C8A788", Offset = "0x1C8A788", VA = "0x1C8A788")]
		set
		{
		}
	}

	[Token(Token = "0x6001301")]
	[Address(RVA = "0x1C8A348", Offset = "0x1C8A348", VA = "0x1C8A348")]
	internal AkObjectInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001302")]
	[Address(RVA = "0x1C8A388", Offset = "0x1C8A388", VA = "0x1C8A388")]
	internal static IntPtr getCPtr(AkObjectInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001303")]
	[Address(RVA = "0x1C8A3D8", Offset = "0x1C8A3D8", VA = "0x1C8A3D8", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001304")]
	[Address(RVA = "0x1C8A40C", Offset = "0x1C8A40C", VA = "0x1C8A40C", Slot = "1")]
	~AkObjectInfo()
	{
	}

	[Token(Token = "0x6001305")]
	[Address(RVA = "0x1C8A47C", Offset = "0x1C8A47C", VA = "0x1C8A47C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600130C")]
	[Address(RVA = "0x1C8A870", Offset = "0x1C8A870", VA = "0x1C8A870")]
	public void Clear()
	{
	}

	[Token(Token = "0x600130D")]
	[Address(RVA = "0x1C8A8DC", Offset = "0x1C8A8DC", VA = "0x1C8A8DC")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600130E")]
	[Address(RVA = "0x1C8A93C", Offset = "0x1C8A93C", VA = "0x1C8A93C")]
	public void Clone(AkObjectInfo other)
	{
	}

	[Token(Token = "0x600130F")]
	[Address(RVA = "0x1C8A9E4", Offset = "0x1C8A9E4", VA = "0x1C8A9E4")]
	public AkObjectInfo()
	{
	}
}
[Token(Token = "0x20002C7")]
public class AkObstructionOcclusionValues : IDisposable
{
	[Token(Token = "0x4001273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000124")]
	public float occlusion
	{
		[Token(Token = "0x6001316")]
		[Address(RVA = "0x1C8BAE0", Offset = "0x1C8BAE0", VA = "0x1C8BAE0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001315")]
		[Address(RVA = "0x1C8BA64", Offset = "0x1C8BA64", VA = "0x1C8BA64")]
		set
		{
		}
	}

	[Token(Token = "0x17000125")]
	public float obstruction
	{
		[Token(Token = "0x6001318")]
		[Address(RVA = "0x1C8BBC8", Offset = "0x1C8BBC8", VA = "0x1C8BBC8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001317")]
		[Address(RVA = "0x1C8BB4C", Offset = "0x1C8BB4C", VA = "0x1C8BB4C")]
		set
		{
		}
	}

	[Token(Token = "0x6001310")]
	[Address(RVA = "0x1C8B7F4", Offset = "0x1C8B7F4", VA = "0x1C8B7F4")]
	internal AkObstructionOcclusionValues(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001311")]
	[Address(RVA = "0x1C8B834", Offset = "0x1C8B834", VA = "0x1C8B834")]
	internal static IntPtr getCPtr(AkObstructionOcclusionValues obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001312")]
	[Address(RVA = "0x1C8B884", Offset = "0x1C8B884", VA = "0x1C8B884", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001313")]
	[Address(RVA = "0x1C8B8B8", Offset = "0x1C8B8B8", VA = "0x1C8B8B8", Slot = "1")]
	~AkObstructionOcclusionValues()
	{
	}

	[Token(Token = "0x6001314")]
	[Address(RVA = "0x1C8B928", Offset = "0x1C8B928", VA = "0x1C8B928", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001319")]
	[Address(RVA = "0x1C8BC34", Offset = "0x1C8BC34", VA = "0x1C8BC34")]
	public void Clear()
	{
	}

	[Token(Token = "0x600131A")]
	[Address(RVA = "0x1C8BCA0", Offset = "0x1C8BCA0", VA = "0x1C8BCA0")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600131B")]
	[Address(RVA = "0x1C8BD00", Offset = "0x1C8BD00", VA = "0x1C8BD00")]
	public void Clone(AkObstructionOcclusionValues other)
	{
	}

	[Token(Token = "0x600131C")]
	[Address(RVA = "0x1C8BDA8", Offset = "0x1C8BDA8", VA = "0x1C8BDA8")]
	public AkObstructionOcclusionValues()
	{
	}
}
[Token(Token = "0x20002C8")]
public class AkOutputSettings : IDisposable
{
	[Token(Token = "0x4001275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000126")]
	public uint audioDeviceShareset
	{
		[Token(Token = "0x6001328")]
		[Address(RVA = "0x1C8C5F8", Offset = "0x1C8C5F8", VA = "0x1C8C5F8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001327")]
		[Address(RVA = "0x1C8C57C", Offset = "0x1C8C57C", VA = "0x1C8C57C")]
		set
		{
		}
	}

	[Token(Token = "0x17000127")]
	public uint idDevice
	{
		[Token(Token = "0x600132A")]
		[Address(RVA = "0x1C8C6E0", Offset = "0x1C8C6E0", VA = "0x1C8C6E0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001329")]
		[Address(RVA = "0x1C8C664", Offset = "0x1C8C664", VA = "0x1C8C664")]
		set
		{
		}
	}

	[Token(Token = "0x17000128")]
	public AkPanningRule ePanningRule
	{
		[Token(Token = "0x600132C")]
		[Address(RVA = "0x1C8C7C8", Offset = "0x1C8C7C8", VA = "0x1C8C7C8")]
		get
		{
			return default(AkPanningRule);
		}
		[Token(Token = "0x600132B")]
		[Address(RVA = "0x1C8C74C", Offset = "0x1C8C74C", VA = "0x1C8C74C")]
		set
		{
		}
	}

	[Token(Token = "0x17000129")]
	public AkChannelConfig channelConfig
	{
		[Token(Token = "0x600132E")]
		[Address(RVA = "0x1C8C8C4", Offset = "0x1C8C8C4", VA = "0x1C8C8C4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600132D")]
		[Address(RVA = "0x1C8C834", Offset = "0x1C8C834", VA = "0x1C8C834")]
		set
		{
		}
	}

	[Token(Token = "0x600131D")]
	[Address(RVA = "0x1C802D4", Offset = "0x1C802D4", VA = "0x1C802D4")]
	internal AkOutputSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600131E")]
	[Address(RVA = "0x1C801D4", Offset = "0x1C801D4", VA = "0x1C801D4")]
	internal static IntPtr getCPtr(AkOutputSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600131F")]
	[Address(RVA = "0x1C8C060", Offset = "0x1C8C060", VA = "0x1C8C060", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001320")]
	[Address(RVA = "0x1C8C094", Offset = "0x1C8C094", VA = "0x1C8C094", Slot = "1")]
	~AkOutputSettings()
	{
	}

	[Token(Token = "0x6001321")]
	[Address(RVA = "0x1C8C104", Offset = "0x1C8C104", VA = "0x1C8C104", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001322")]
	[Address(RVA = "0x1C8C240", Offset = "0x1C8C240", VA = "0x1C8C240")]
	public AkOutputSettings()
	{
	}

	[Token(Token = "0x6001323")]
	[Address(RVA = "0x1C8C2C4", Offset = "0x1C8C2C4", VA = "0x1C8C2C4")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig, AkPanningRule in_ePanning)
	{
	}

	[Token(Token = "0x6001324")]
	[Address(RVA = "0x1C8C38C", Offset = "0x1C8C38C", VA = "0x1C8C38C")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice, AkChannelConfig in_channelConfig)
	{
	}

	[Token(Token = "0x6001325")]
	[Address(RVA = "0x1C8C44C", Offset = "0x1C8C44C", VA = "0x1C8C44C")]
	public AkOutputSettings(string in_szDeviceShareSet, uint in_idDevice)
	{
	}

	[Token(Token = "0x6001326")]
	[Address(RVA = "0x1C8C4E8", Offset = "0x1C8C4E8", VA = "0x1C8C4E8")]
	public AkOutputSettings(string in_szDeviceShareSet)
	{
	}
}
[Token(Token = "0x20002C9")]
public enum AkPanningRule
{
	[Token(Token = "0x4001278")]
	AkPanningRule_Speakers,
	[Token(Token = "0x4001279")]
	AkPanningRule_Headphones
}
[Token(Token = "0x20002CA")]
public class AkPathParams : IDisposable
{
	[Token(Token = "0x400127A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400127B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700012A")]
	public AkVector listenerPos
	{
		[Token(Token = "0x6001335")]
		[Address(RVA = "0x1C8CC74", Offset = "0x1C8CC74", VA = "0x1C8CC74")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001334")]
		[Address(RVA = "0x1C8CBE4", Offset = "0x1C8CBE4", VA = "0x1C8CBE4")]
		set
		{
		}
	}

	[Token(Token = "0x1700012B")]
	public AkVector emitterPos
	{
		[Token(Token = "0x6001337")]
		[Address(RVA = "0x1C8CDB4", Offset = "0x1C8CDB4", VA = "0x1C8CDB4")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001336")]
		[Address(RVA = "0x1C8CD24", Offset = "0x1C8CD24", VA = "0x1C8CD24")]
		set
		{
		}
	}

	[Token(Token = "0x1700012C")]
	public uint numValidPaths
	{
		[Token(Token = "0x6001339")]
		[Address(RVA = "0x1C8CEE0", Offset = "0x1C8CEE0", VA = "0x1C8CEE0")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001338")]
		[Address(RVA = "0x1C8CE64", Offset = "0x1C8CE64", VA = "0x1C8CE64")]
		set
		{
		}
	}

	[Token(Token = "0x600132F")]
	[Address(RVA = "0x1C8C974", Offset = "0x1C8C974", VA = "0x1C8C974")]
	internal AkPathParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001330")]
	[Address(RVA = "0x1C8C9B4", Offset = "0x1C8C9B4", VA = "0x1C8C9B4")]
	internal static IntPtr getCPtr(AkPathParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001331")]
	[Address(RVA = "0x1C8CA04", Offset = "0x1C8CA04", VA = "0x1C8CA04", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001332")]
	[Address(RVA = "0x1C8CA38", Offset = "0x1C8CA38", VA = "0x1C8CA38", Slot = "1")]
	~AkPathParams()
	{
	}

	[Token(Token = "0x6001333")]
	[Address(RVA = "0x1C8CAA8", Offset = "0x1C8CAA8", VA = "0x1C8CAA8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600133A")]
	[Address(RVA = "0x1C8CF4C", Offset = "0x1C8CF4C", VA = "0x1C8CF4C")]
	public AkPathParams()
	{
	}
}
[Token(Token = "0x20002CB")]
public class AkPlaylist : AkPlaylistArray
{
	[Token(Token = "0x400127C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private IntPtr swigCPtr;

	[Token(Token = "0x600133B")]
	[Address(RVA = "0x1C8DCA4", Offset = "0x1C8DCA4", VA = "0x1C8DCA4")]
	internal AkPlaylist(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600133C")]
	[Address(RVA = "0x1C8DD80", Offset = "0x1C8DD80", VA = "0x1C8DD80")]
	internal static IntPtr getCPtr(AkPlaylist obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600133D")]
	[Address(RVA = "0x1C8DDD0", Offset = "0x1C8DDD0", VA = "0x1C8DDD0", Slot = "5")]
	internal override void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600133E")]
	[Address(RVA = "0x1C8DE98", Offset = "0x1C8DE98", VA = "0x1C8DE98", Slot = "1")]
	~AkPlaylist()
	{
	}

	[Token(Token = "0x600133F")]
	[Address(RVA = "0x1C8DF70", Offset = "0x1C8DF70", VA = "0x1C8DF70", Slot = "6")]
	public override void Dispose()
	{
	}

	[Token(Token = "0x6001340")]
	[Address(RVA = "0x1C8E1F0", Offset = "0x1C8E1F0", VA = "0x1C8E1F0")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals, AkExternalSourceInfoArray in_pExternalSources)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001341")]
	[Address(RVA = "0x1C8E2A8", Offset = "0x1C8E2A8", VA = "0x1C8E2A8")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo, uint in_cExternals)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001342")]
	[Address(RVA = "0x1C8E344", Offset = "0x1C8E344", VA = "0x1C8E344")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay, IntPtr in_pCustomInfo)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001343")]
	[Address(RVA = "0x1C8E3D8", Offset = "0x1C8E3D8", VA = "0x1C8E3D8")]
	public AKRESULT Enqueue(uint in_audioNodeID, int in_msDelay)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001344")]
	[Address(RVA = "0x1C8E45C", Offset = "0x1C8E45C", VA = "0x1C8E45C")]
	public AKRESULT Enqueue(uint in_audioNodeID)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001345")]
	[Address(RVA = "0x1C8E4D8", Offset = "0x1C8E4D8", VA = "0x1C8E4D8")]
	public AkPlaylist()
	{
	}
}
[Token(Token = "0x20002CC")]
public class AkPlaylistArray : IDisposable
{
	[Token(Token = "0x400127D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400127E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001346")]
	[Address(RVA = "0x1C8DD40", Offset = "0x1C8DD40", VA = "0x1C8DD40")]
	internal AkPlaylistArray(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001347")]
	[Address(RVA = "0x1C8E54C", Offset = "0x1C8E54C", VA = "0x1C8E54C")]
	internal static IntPtr getCPtr(AkPlaylistArray obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001348")]
	[Address(RVA = "0x1C8DE64", Offset = "0x1C8DE64", VA = "0x1C8DE64", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001349")]
	[Address(RVA = "0x1C8DF00", Offset = "0x1C8DF00", VA = "0x1C8DF00", Slot = "1")]
	~AkPlaylistArray()
	{
	}

	[Token(Token = "0x600134A")]
	[Address(RVA = "0x1C8E0B4", Offset = "0x1C8E0B4", VA = "0x1C8E0B4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600134B")]
	[Address(RVA = "0x1C8E59C", Offset = "0x1C8E59C", VA = "0x1C8E59C")]
	public AkPlaylistArray()
	{
	}

	[Token(Token = "0x600134C")]
	[Address(RVA = "0x1C8E620", Offset = "0x1C8E620", VA = "0x1C8E620")]
	public AkIterator Begin()
	{
		return null;
	}

	[Token(Token = "0x600134D")]
	[Address(RVA = "0x1C8E6C4", Offset = "0x1C8E6C4", VA = "0x1C8E6C4")]
	public AkIterator End()
	{
		return null;
	}

	[Token(Token = "0x600134E")]
	[Address(RVA = "0x1C8E768", Offset = "0x1C8E768", VA = "0x1C8E768")]
	public AkIterator FindEx(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x600134F")]
	[Address(RVA = "0x1C8E848", Offset = "0x1C8E848", VA = "0x1C8E848")]
	public AkIterator Erase(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6001350")]
	[Address(RVA = "0x1C8E928", Offset = "0x1C8E928", VA = "0x1C8E928")]
	public void Erase(uint in_uIndex)
	{
	}

	[Token(Token = "0x6001351")]
	[Address(RVA = "0x1C8E9A4", Offset = "0x1C8E9A4", VA = "0x1C8E9A4")]
	public AkIterator EraseSwap(AkIterator in_rIter)
	{
		return null;
	}

	[Token(Token = "0x6001352")]
	[Address(RVA = "0x1C8EA84", Offset = "0x1C8EA84", VA = "0x1C8EA84")]
	public AKRESULT Reserve(uint in_ulReserve)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001353")]
	[Address(RVA = "0x1C8EB00", Offset = "0x1C8EB00", VA = "0x1C8EB00")]
	public uint Reserved()
	{
		return default(uint);
	}

	[Token(Token = "0x6001354")]
	[Address(RVA = "0x1C8EB6C", Offset = "0x1C8EB6C", VA = "0x1C8EB6C")]
	public void Term()
	{
	}

	[Token(Token = "0x6001355")]
	[Address(RVA = "0x1C8EBD8", Offset = "0x1C8EBD8", VA = "0x1C8EBD8")]
	public uint Length()
	{
		return default(uint);
	}

	[Token(Token = "0x6001356")]
	[Address(RVA = "0x1C8EC44", Offset = "0x1C8EC44", VA = "0x1C8EC44")]
	public AkPlaylistItem Data()
	{
		return null;
	}

	[Token(Token = "0x6001357")]
	[Address(RVA = "0x1C8ECF4", Offset = "0x1C8ECF4", VA = "0x1C8ECF4")]
	public bool IsEmpty()
	{
		return default(bool);
	}

	[Token(Token = "0x6001358")]
	[Address(RVA = "0x1C8ED60", Offset = "0x1C8ED60", VA = "0x1C8ED60")]
	public AkPlaylistItem Exists(AkPlaylistItem in_Item)
	{
		return null;
	}

	[Token(Token = "0x6001359")]
	[Address(RVA = "0x1C8EE4C", Offset = "0x1C8EE4C", VA = "0x1C8EE4C")]
	public AkPlaylistItem AddLast()
	{
		return null;
	}

	[Token(Token = "0x600135A")]
	[Address(RVA = "0x1C8EEFC", Offset = "0x1C8EEFC", VA = "0x1C8EEFC")]
	public AkPlaylistItem AddLast(AkPlaylistItem in_rItem)
	{
		return null;
	}

	[Token(Token = "0x600135B")]
	[Address(RVA = "0x1C8EFE8", Offset = "0x1C8EFE8", VA = "0x1C8EFE8")]
	public AkPlaylistItem Last()
	{
		return null;
	}

	[Token(Token = "0x600135C")]
	[Address(RVA = "0x1C8F088", Offset = "0x1C8F088", VA = "0x1C8F088")]
	public void RemoveLast()
	{
	}

	[Token(Token = "0x600135D")]
	[Address(RVA = "0x1C8F0F4", Offset = "0x1C8F0F4", VA = "0x1C8F0F4")]
	public AKRESULT Remove(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600135E")]
	[Address(RVA = "0x1C8F19C", Offset = "0x1C8F19C", VA = "0x1C8F19C")]
	public AKRESULT RemoveSwap(AkPlaylistItem in_rItem)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x600135F")]
	[Address(RVA = "0x1C8F244", Offset = "0x1C8F244", VA = "0x1C8F244")]
	public void RemoveAll()
	{
	}

	[Token(Token = "0x6001360")]
	[Address(RVA = "0x1C8F2B0", Offset = "0x1C8F2B0", VA = "0x1C8F2B0")]
	public AkPlaylistItem ItemAtIndex(uint uiIndex)
	{
		return null;
	}

	[Token(Token = "0x6001361")]
	[Address(RVA = "0x1C8F360", Offset = "0x1C8F360", VA = "0x1C8F360")]
	public AkPlaylistItem Insert(uint in_uIndex)
	{
		return null;
	}

	[Token(Token = "0x6001362")]
	[Address(RVA = "0x1C8F420", Offset = "0x1C8F420", VA = "0x1C8F420")]
	public bool GrowArray(uint in_uGrowBy)
	{
		return default(bool);
	}

	[Token(Token = "0x6001363")]
	[Address(RVA = "0x1C8F49C", Offset = "0x1C8F49C", VA = "0x1C8F49C")]
	public bool GrowArray()
	{
		return default(bool);
	}

	[Token(Token = "0x6001364")]
	[Address(RVA = "0x1C8F508", Offset = "0x1C8F508", VA = "0x1C8F508")]
	public bool Resize(uint in_uiSize)
	{
		return default(bool);
	}

	[Token(Token = "0x6001365")]
	[Address(RVA = "0x1C8F584", Offset = "0x1C8F584", VA = "0x1C8F584")]
	public void Transfer(AkPlaylistArray in_rSource)
	{
	}

	[Token(Token = "0x6001366")]
	[Address(RVA = "0x1C8F62C", Offset = "0x1C8F62C", VA = "0x1C8F62C")]
	public AKRESULT Copy(AkPlaylistArray in_rSource)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x20002CD")]
public class AkPlaylistItem : IDisposable
{
	[Token(Token = "0x400127F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700012D")]
	public uint audioNodeID
	{
		[Token(Token = "0x6001372")]
		[Address(RVA = "0x1C8FC88", Offset = "0x1C8FC88", VA = "0x1C8FC88")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001371")]
		[Address(RVA = "0x1C8FC0C", Offset = "0x1C8FC0C", VA = "0x1C8FC0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700012E")]
	public int msDelay
	{
		[Token(Token = "0x6001374")]
		[Address(RVA = "0x1C8FD70", Offset = "0x1C8FD70", VA = "0x1C8FD70")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6001373")]
		[Address(RVA = "0x1C8FCF4", Offset = "0x1C8FCF4", VA = "0x1C8FCF4")]
		set
		{
		}
	}

	[Token(Token = "0x1700012F")]
	public IntPtr pCustomInfo
	{
		[Token(Token = "0x6001376")]
		[Address(RVA = "0x1C8FE58", Offset = "0x1C8FE58", VA = "0x1C8FE58")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x6001375")]
		[Address(RVA = "0x1C8FDDC", Offset = "0x1C8FDDC", VA = "0x1C8FDDC")]
		set
		{
		}
	}

	[Token(Token = "0x6001367")]
	[Address(RVA = "0x1C82114", Offset = "0x1C82114", VA = "0x1C82114")]
	internal AkPlaylistItem(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001368")]
	[Address(RVA = "0x1C82014", Offset = "0x1C82014", VA = "0x1C82014")]
	internal static IntPtr getCPtr(AkPlaylistItem obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001369")]
	[Address(RVA = "0x1C8F6D4", Offset = "0x1C8F6D4", VA = "0x1C8F6D4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600136A")]
	[Address(RVA = "0x1C8F708", Offset = "0x1C8F708", VA = "0x1C8F708", Slot = "1")]
	~AkPlaylistItem()
	{
	}

	[Token(Token = "0x600136B")]
	[Address(RVA = "0x1C8F778", Offset = "0x1C8F778", VA = "0x1C8F778", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600136C")]
	[Address(RVA = "0x1C8F8B4", Offset = "0x1C8F8B4", VA = "0x1C8F8B4")]
	public AkPlaylistItem()
	{
	}

	[Token(Token = "0x600136D")]
	[Address(RVA = "0x1C8F938", Offset = "0x1C8F938", VA = "0x1C8F938")]
	public AkPlaylistItem(AkPlaylistItem in_rCopy)
	{
	}

	[Token(Token = "0x600136E")]
	[Address(RVA = "0x1C8F9F8", Offset = "0x1C8F9F8", VA = "0x1C8F9F8")]
	public AkPlaylistItem Assign(AkPlaylistItem in_rCopy)
	{
		return null;
	}

	[Token(Token = "0x600136F")]
	[Address(RVA = "0x1C8FAD4", Offset = "0x1C8FAD4", VA = "0x1C8FAD4")]
	public bool IsEqualTo(AkPlaylistItem in_rCopy)
	{
		return default(bool);
	}

	[Token(Token = "0x6001370")]
	[Address(RVA = "0x1C8FB7C", Offset = "0x1C8FB7C", VA = "0x1C8FB7C")]
	public AKRESULT SetExternalSources(uint in_nExternalSrc, AkExternalSourceInfoArray in_pExternalSrc)
	{
		return default(AKRESULT);
	}
}
[Token(Token = "0x20002CE")]
public enum AkPluginType
{
	[Token(Token = "0x4001282")]
	AkPluginTypeNone = 0,
	[Token(Token = "0x4001283")]
	AkPluginTypeCodec = 1,
	[Token(Token = "0x4001284")]
	AkPluginTypeSource = 2,
	[Token(Token = "0x4001285")]
	AkPluginTypeEffect = 3,
	[Token(Token = "0x4001286")]
	AkPluginTypeMixer = 6,
	[Token(Token = "0x4001287")]
	AkPluginTypeSink = 7,
	[Token(Token = "0x4001288")]
	AkPluginTypeGlobalExtension = 8,
	[Token(Token = "0x4001289")]
	AkPluginTypeMask = 15
}
[Token(Token = "0x20002CF")]
public class AkPositioningInfo : IDisposable
{
	[Token(Token = "0x400128A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400128B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000130")]
	public float fCenterPct
	{
		[Token(Token = "0x600137D")]
		[Address(RVA = "0x1C90710", Offset = "0x1C90710", VA = "0x1C90710")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600137C")]
		[Address(RVA = "0x1C90694", Offset = "0x1C90694", VA = "0x1C90694")]
		set
		{
		}
	}

	[Token(Token = "0x17000131")]
	public AkSpeakerPanningType pannerType
	{
		[Token(Token = "0x600137F")]
		[Address(RVA = "0x1C907F8", Offset = "0x1C907F8", VA = "0x1C907F8")]
		get
		{
			return default(AkSpeakerPanningType);
		}
		[Token(Token = "0x600137E")]
		[Address(RVA = "0x1C9077C", Offset = "0x1C9077C", VA = "0x1C9077C")]
		set
		{
		}
	}

	[Token(Token = "0x17000132")]
	public Ak3DPositionType e3dPositioningType
	{
		[Token(Token = "0x6001381")]
		[Address(RVA = "0x1C908E0", Offset = "0x1C908E0", VA = "0x1C908E0")]
		get
		{
			return default(Ak3DPositionType);
		}
		[Token(Token = "0x6001380")]
		[Address(RVA = "0x1C90864", Offset = "0x1C90864", VA = "0x1C90864")]
		set
		{
		}
	}

	[Token(Token = "0x17000133")]
	public bool bHoldEmitterPosAndOrient
	{
		[Token(Token = "0x6001383")]
		[Address(RVA = "0x1C909C8", Offset = "0x1C909C8", VA = "0x1C909C8")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001382")]
		[Address(RVA = "0x1C9094C", Offset = "0x1C9094C", VA = "0x1C9094C")]
		set
		{
		}
	}

	[Token(Token = "0x17000134")]
	public Ak3DSpatializationMode e3DSpatializationMode
	{
		[Token(Token = "0x6001385")]
		[Address(RVA = "0x1C90AB0", Offset = "0x1C90AB0", VA = "0x1C90AB0")]
		get
		{
			return default(Ak3DSpatializationMode);
		}
		[Token(Token = "0x6001384")]
		[Address(RVA = "0x1C90A34", Offset = "0x1C90A34", VA = "0x1C90A34")]
		set
		{
		}
	}

	[Token(Token = "0x17000135")]
	public bool bEnableAttenuation
	{
		[Token(Token = "0x6001387")]
		[Address(RVA = "0x1C90B98", Offset = "0x1C90B98", VA = "0x1C90B98")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001386")]
		[Address(RVA = "0x1C90B1C", Offset = "0x1C90B1C", VA = "0x1C90B1C")]
		set
		{
		}
	}

	[Token(Token = "0x17000136")]
	public bool bUseConeAttenuation
	{
		[Token(Token = "0x6001389")]
		[Address(RVA = "0x1C90C80", Offset = "0x1C90C80", VA = "0x1C90C80")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001388")]
		[Address(RVA = "0x1C90C04", Offset = "0x1C90C04", VA = "0x1C90C04")]
		set
		{
		}
	}

	[Token(Token = "0x17000137")]
	public float fInnerAngle
	{
		[Token(Token = "0x600138B")]
		[Address(RVA = "0x1C90D68", Offset = "0x1C90D68", VA = "0x1C90D68")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600138A")]
		[Address(RVA = "0x1C90CEC", Offset = "0x1C90CEC", VA = "0x1C90CEC")]
		set
		{
		}
	}

	[Token(Token = "0x17000138")]
	public float fOuterAngle
	{
		[Token(Token = "0x600138D")]
		[Address(RVA = "0x1C90E50", Offset = "0x1C90E50", VA = "0x1C90E50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600138C")]
		[Address(RVA = "0x1C90DD4", Offset = "0x1C90DD4", VA = "0x1C90DD4")]
		set
		{
		}
	}

	[Token(Token = "0x17000139")]
	public float fConeMaxAttenuation
	{
		[Token(Token = "0x600138F")]
		[Address(RVA = "0x1C90F38", Offset = "0x1C90F38", VA = "0x1C90F38")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600138E")]
		[Address(RVA = "0x1C90EBC", Offset = "0x1C90EBC", VA = "0x1C90EBC")]
		set
		{
		}
	}

	[Token(Token = "0x1700013A")]
	public float LPFCone
	{
		[Token(Token = "0x6001391")]
		[Address(RVA = "0x1C91020", Offset = "0x1C91020", VA = "0x1C91020")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001390")]
		[Address(RVA = "0x1C90FA4", Offset = "0x1C90FA4", VA = "0x1C90FA4")]
		set
		{
		}
	}

	[Token(Token = "0x1700013B")]
	public float HPFCone
	{
		[Token(Token = "0x6001393")]
		[Address(RVA = "0x1C91108", Offset = "0x1C91108", VA = "0x1C91108")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001392")]
		[Address(RVA = "0x1C9108C", Offset = "0x1C9108C", VA = "0x1C9108C")]
		set
		{
		}
	}

	[Token(Token = "0x1700013C")]
	public float fMaxDistance
	{
		[Token(Token = "0x6001395")]
		[Address(RVA = "0x1C911F0", Offset = "0x1C911F0", VA = "0x1C911F0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001394")]
		[Address(RVA = "0x1C91174", Offset = "0x1C91174", VA = "0x1C91174")]
		set
		{
		}
	}

	[Token(Token = "0x1700013D")]
	public float fVolDryAtMaxDist
	{
		[Token(Token = "0x6001397")]
		[Address(RVA = "0x1C912D8", Offset = "0x1C912D8", VA = "0x1C912D8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001396")]
		[Address(RVA = "0x1C9125C", Offset = "0x1C9125C", VA = "0x1C9125C")]
		set
		{
		}
	}

	[Token(Token = "0x1700013E")]
	public float fVolAuxGameDefAtMaxDist
	{
		[Token(Token = "0x6001399")]
		[Address(RVA = "0x1C913C0", Offset = "0x1C913C0", VA = "0x1C913C0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001398")]
		[Address(RVA = "0x1C91344", Offset = "0x1C91344", VA = "0x1C91344")]
		set
		{
		}
	}

	[Token(Token = "0x1700013F")]
	public float fVolAuxUserDefAtMaxDist
	{
		[Token(Token = "0x600139B")]
		[Address(RVA = "0x1C914A8", Offset = "0x1C914A8", VA = "0x1C914A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600139A")]
		[Address(RVA = "0x1C9142C", Offset = "0x1C9142C", VA = "0x1C9142C")]
		set
		{
		}
	}

	[Token(Token = "0x17000140")]
	public float LPFValueAtMaxDist
	{
		[Token(Token = "0x600139D")]
		[Address(RVA = "0x1C91590", Offset = "0x1C91590", VA = "0x1C91590")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600139C")]
		[Address(RVA = "0x1C91514", Offset = "0x1C91514", VA = "0x1C91514")]
		set
		{
		}
	}

	[Token(Token = "0x17000141")]
	public float HPFValueAtMaxDist
	{
		[Token(Token = "0x600139F")]
		[Address(RVA = "0x1C91678", Offset = "0x1C91678", VA = "0x1C91678")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600139E")]
		[Address(RVA = "0x1C915FC", Offset = "0x1C915FC", VA = "0x1C915FC")]
		set
		{
		}
	}

	[Token(Token = "0x6001377")]
	[Address(RVA = "0x1C90424", Offset = "0x1C90424", VA = "0x1C90424")]
	internal AkPositioningInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001378")]
	[Address(RVA = "0x1C90464", Offset = "0x1C90464", VA = "0x1C90464")]
	internal static IntPtr getCPtr(AkPositioningInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001379")]
	[Address(RVA = "0x1C904B4", Offset = "0x1C904B4", VA = "0x1C904B4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600137A")]
	[Address(RVA = "0x1C904E8", Offset = "0x1C904E8", VA = "0x1C904E8", Slot = "1")]
	~AkPositioningInfo()
	{
	}

	[Token(Token = "0x600137B")]
	[Address(RVA = "0x1C90558", Offset = "0x1C90558", VA = "0x1C90558", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60013A0")]
	[Address(RVA = "0x1C916E4", Offset = "0x1C916E4", VA = "0x1C916E4")]
	public AkPositioningInfo()
	{
	}
}
[Token(Token = "0x20002D0")]
public enum AkPreparationType
{
	[Token(Token = "0x400128D")]
	Preparation_Load,
	[Token(Token = "0x400128E")]
	Preparation_Unload,
	[Token(Token = "0x400128F")]
	Preparation_LoadAndDecode
}
[Token(Token = "0x20002D1")]
public enum AkQueryRTPCValue
{
	[Token(Token = "0x4001291")]
	RTPCValue_Default,
	[Token(Token = "0x4001292")]
	RTPCValue_Global,
	[Token(Token = "0x4001293")]
	RTPCValue_GameObject,
	[Token(Token = "0x4001294")]
	RTPCValue_PlayingID,
	[Token(Token = "0x4001295")]
	RTPCValue_Unavailable
}
[Token(Token = "0x20002D2")]
public class AkRamp : IDisposable
{
	[Token(Token = "0x4001296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000142")]
	public float fPrev
	{
		[Token(Token = "0x60013A9")]
		[Address(RVA = "0x1C926AC", Offset = "0x1C926AC", VA = "0x1C926AC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013A8")]
		[Address(RVA = "0x1C92630", Offset = "0x1C92630", VA = "0x1C92630")]
		set
		{
		}
	}

	[Token(Token = "0x17000143")]
	public float fNext
	{
		[Token(Token = "0x60013AB")]
		[Address(RVA = "0x1C92794", Offset = "0x1C92794", VA = "0x1C92794")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013AA")]
		[Address(RVA = "0x1C92718", Offset = "0x1C92718", VA = "0x1C92718")]
		set
		{
		}
	}

	[Token(Token = "0x60013A1")]
	[Address(RVA = "0x1C922A0", Offset = "0x1C922A0", VA = "0x1C922A0")]
	internal AkRamp(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013A2")]
	[Address(RVA = "0x1C922E0", Offset = "0x1C922E0", VA = "0x1C922E0")]
	internal static IntPtr getCPtr(AkRamp obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013A3")]
	[Address(RVA = "0x1C92330", Offset = "0x1C92330", VA = "0x1C92330", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013A4")]
	[Address(RVA = "0x1C92364", Offset = "0x1C92364", VA = "0x1C92364", Slot = "1")]
	~AkRamp()
	{
	}

	[Token(Token = "0x60013A5")]
	[Address(RVA = "0x1C923D4", Offset = "0x1C923D4", VA = "0x1C923D4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60013A6")]
	[Address(RVA = "0x1C92510", Offset = "0x1C92510", VA = "0x1C92510")]
	public AkRamp()
	{
	}

	[Token(Token = "0x60013A7")]
	[Address(RVA = "0x1C92594", Offset = "0x1C92594", VA = "0x1C92594")]
	public AkRamp(float in_fPrev, float in_fNext)
	{
	}
}
[Token(Token = "0x20002D3")]
public class AkReflectionPathInfo : IDisposable
{
	[Token(Token = "0x4001298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x4001299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000144")]
	public AkVector imageSource
	{
		[Token(Token = "0x60013B2")]
		[Address(RVA = "0x1C92B00", Offset = "0x1C92B00", VA = "0x1C92B00")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013B1")]
		[Address(RVA = "0x1C92A70", Offset = "0x1C92A70", VA = "0x1C92A70")]
		set
		{
		}
	}

	[Token(Token = "0x17000145")]
	public uint numPathPoints
	{
		[Token(Token = "0x60013B4")]
		[Address(RVA = "0x1C92C2C", Offset = "0x1C92C2C", VA = "0x1C92C2C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013B3")]
		[Address(RVA = "0x1C92BB0", Offset = "0x1C92BB0", VA = "0x1C92BB0")]
		set
		{
		}
	}

	[Token(Token = "0x17000146")]
	public uint numReflections
	{
		[Token(Token = "0x60013B6")]
		[Address(RVA = "0x1C92D14", Offset = "0x1C92D14", VA = "0x1C92D14")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013B5")]
		[Address(RVA = "0x1C92C98", Offset = "0x1C92C98", VA = "0x1C92C98")]
		set
		{
		}
	}

	[Token(Token = "0x17000147")]
	public float level
	{
		[Token(Token = "0x60013B8")]
		[Address(RVA = "0x1C92DFC", Offset = "0x1C92DFC", VA = "0x1C92DFC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013B7")]
		[Address(RVA = "0x1C92D80", Offset = "0x1C92D80", VA = "0x1C92D80")]
		set
		{
		}
	}

	[Token(Token = "0x17000148")]
	public bool isOccluded
	{
		[Token(Token = "0x60013BA")]
		[Address(RVA = "0x1C92EE4", Offset = "0x1C92EE4", VA = "0x1C92EE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013B9")]
		[Address(RVA = "0x1C92E68", Offset = "0x1C92E68", VA = "0x1C92E68")]
		set
		{
		}
	}

	[Token(Token = "0x60013AC")]
	[Address(RVA = "0x1C92800", Offset = "0x1C92800", VA = "0x1C92800")]
	internal AkReflectionPathInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013AD")]
	[Address(RVA = "0x1C92840", Offset = "0x1C92840", VA = "0x1C92840")]
	internal static IntPtr getCPtr(AkReflectionPathInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013AE")]
	[Address(RVA = "0x1C92890", Offset = "0x1C92890", VA = "0x1C92890", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013AF")]
	[Address(RVA = "0x1C928C4", Offset = "0x1C928C4", VA = "0x1C928C4", Slot = "1")]
	~AkReflectionPathInfo()
	{
	}

	[Token(Token = "0x60013B0")]
	[Address(RVA = "0x1C92934", Offset = "0x1C92934", VA = "0x1C92934", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60013BB")]
	[Address(RVA = "0x1C92F50", Offset = "0x1C92F50", VA = "0x1C92F50")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x60013BC")]
	[Address(RVA = "0x1C92FB0", Offset = "0x1C92FB0", VA = "0x1C92FB0")]
	public AkVector GetPathPoint(uint idx)
	{
		return null;
	}

	[Token(Token = "0x60013BD")]
	[Address(RVA = "0x1C93070", Offset = "0x1C93070", VA = "0x1C93070")]
	public AkAcousticSurface GetAcousticSurface(uint idx)
	{
		return null;
	}

	[Token(Token = "0x60013BE")]
	[Address(RVA = "0x1C93120", Offset = "0x1C93120", VA = "0x1C93120")]
	public float GetDiffraction(uint idx)
	{
		return default(float);
	}

	[Token(Token = "0x60013BF")]
	[Address(RVA = "0x1C9319C", Offset = "0x1C9319C", VA = "0x1C9319C")]
	public void Clone(AkReflectionPathInfo other)
	{
	}

	[Token(Token = "0x60013C0")]
	[Address(RVA = "0x1C93244", Offset = "0x1C93244", VA = "0x1C93244")]
	public AkReflectionPathInfo()
	{
	}
}
[Token(Token = "0x20002D4")]
public class AkRoomParams : IDisposable
{
	[Token(Token = "0x400129A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400129B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000149")]
	public AkVector Up
	{
		[Token(Token = "0x60013C8")]
		[Address(RVA = "0x1C93930", Offset = "0x1C93930", VA = "0x1C93930")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013C7")]
		[Address(RVA = "0x1C9481C", Offset = "0x1C9481C", VA = "0x1C9481C")]
		set
		{
		}
	}

	[Token(Token = "0x1700014A")]
	public AkVector Front
	{
		[Token(Token = "0x60013CA")]
		[Address(RVA = "0x1C939E0", Offset = "0x1C939E0", VA = "0x1C939E0")]
		get
		{
			return null;
		}
		[Token(Token = "0x60013C9")]
		[Address(RVA = "0x1C948AC", Offset = "0x1C948AC", VA = "0x1C948AC")]
		set
		{
		}
	}

	[Token(Token = "0x1700014B")]
	public uint ReverbAuxBus
	{
		[Token(Token = "0x60013CC")]
		[Address(RVA = "0x1C9493C", Offset = "0x1C9493C", VA = "0x1C9493C")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013CB")]
		[Address(RVA = "0x1C93A90", Offset = "0x1C93A90", VA = "0x1C93A90")]
		set
		{
		}
	}

	[Token(Token = "0x1700014C")]
	public float ReverbLevel
	{
		[Token(Token = "0x60013CE")]
		[Address(RVA = "0x1C949A8", Offset = "0x1C949A8", VA = "0x1C949A8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013CD")]
		[Address(RVA = "0x1C93B0C", Offset = "0x1C93B0C", VA = "0x1C93B0C")]
		set
		{
		}
	}

	[Token(Token = "0x1700014D")]
	public float WallOcclusion
	{
		[Token(Token = "0x60013D0")]
		[Address(RVA = "0x1C94A14", Offset = "0x1C94A14", VA = "0x1C94A14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013CF")]
		[Address(RVA = "0x1C93B88", Offset = "0x1C93B88", VA = "0x1C93B88")]
		set
		{
		}
	}

	[Token(Token = "0x1700014E")]
	public float RoomGameObj_AuxSendLevelToSelf
	{
		[Token(Token = "0x60013D2")]
		[Address(RVA = "0x1C94A80", Offset = "0x1C94A80", VA = "0x1C94A80")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013D1")]
		[Address(RVA = "0x1C93C04", Offset = "0x1C93C04", VA = "0x1C93C04")]
		set
		{
		}
	}

	[Token(Token = "0x1700014F")]
	public bool RoomGameObj_KeepRegistered
	{
		[Token(Token = "0x60013D4")]
		[Address(RVA = "0x1C94AEC", Offset = "0x1C94AEC", VA = "0x1C94AEC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60013D3")]
		[Address(RVA = "0x1C93C80", Offset = "0x1C93C80", VA = "0x1C93C80")]
		set
		{
		}
	}

	[Token(Token = "0x60013C1")]
	[Address(RVA = "0x1C945AC", Offset = "0x1C945AC", VA = "0x1C945AC")]
	internal AkRoomParams(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013C2")]
	[Address(RVA = "0x1C945EC", Offset = "0x1C945EC", VA = "0x1C945EC")]
	internal static IntPtr getCPtr(AkRoomParams obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013C3")]
	[Address(RVA = "0x1C9463C", Offset = "0x1C9463C", VA = "0x1C9463C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013C4")]
	[Address(RVA = "0x1C94670", Offset = "0x1C94670", VA = "0x1C94670", Slot = "1")]
	~AkRoomParams()
	{
	}

	[Token(Token = "0x60013C5")]
	[Address(RVA = "0x1C946E0", Offset = "0x1C946E0", VA = "0x1C946E0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60013C6")]
	[Address(RVA = "0x1C938AC", Offset = "0x1C938AC", VA = "0x1C938AC")]
	public AkRoomParams()
	{
	}
}
[Token(Token = "0x20002D5")]
public class AkSegmentInfo : IDisposable
{
	[Token(Token = "0x400129C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400129D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000150")]
	public int iCurrentPosition
	{
		[Token(Token = "0x60013DB")]
		[Address(RVA = "0x11D41E4", Offset = "0x11D41E4", VA = "0x11D41E4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013DA")]
		[Address(RVA = "0x11D40DC", Offset = "0x11D40DC", VA = "0x11D40DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000151")]
	public int iPreEntryDuration
	{
		[Token(Token = "0x60013DD")]
		[Address(RVA = "0x11D43D4", Offset = "0x11D43D4", VA = "0x11D43D4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013DC")]
		[Address(RVA = "0x11D42CC", Offset = "0x11D42CC", VA = "0x11D42CC")]
		set
		{
		}
	}

	[Token(Token = "0x17000152")]
	public int iActiveDuration
	{
		[Token(Token = "0x60013DF")]
		[Address(RVA = "0x11D45C4", Offset = "0x11D45C4", VA = "0x11D45C4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013DE")]
		[Address(RVA = "0x11D44BC", Offset = "0x11D44BC", VA = "0x11D44BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000153")]
	public int iPostExitDuration
	{
		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x11D47B4", Offset = "0x11D47B4", VA = "0x11D47B4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013E0")]
		[Address(RVA = "0x11D46AC", Offset = "0x11D46AC", VA = "0x11D46AC")]
		set
		{
		}
	}

	[Token(Token = "0x17000154")]
	public int iRemainingLookAheadTime
	{
		[Token(Token = "0x60013E3")]
		[Address(RVA = "0x11D49A4", Offset = "0x11D49A4", VA = "0x11D49A4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x11D489C", Offset = "0x11D489C", VA = "0x11D489C")]
		set
		{
		}
	}

	[Token(Token = "0x17000155")]
	public float fBeatDuration
	{
		[Token(Token = "0x60013E5")]
		[Address(RVA = "0x11D4B94", Offset = "0x11D4B94", VA = "0x11D4B94")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013E4")]
		[Address(RVA = "0x11D4A8C", Offset = "0x11D4A8C", VA = "0x11D4A8C")]
		set
		{
		}
	}

	[Token(Token = "0x17000156")]
	public float fBarDuration
	{
		[Token(Token = "0x60013E7")]
		[Address(RVA = "0x11D4D84", Offset = "0x11D4D84", VA = "0x11D4D84")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013E6")]
		[Address(RVA = "0x11D4C7C", Offset = "0x11D4C7C", VA = "0x11D4C7C")]
		set
		{
		}
	}

	[Token(Token = "0x17000157")]
	public float fGridDuration
	{
		[Token(Token = "0x60013E9")]
		[Address(RVA = "0x11D4F74", Offset = "0x11D4F74", VA = "0x11D4F74")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013E8")]
		[Address(RVA = "0x11D4E6C", Offset = "0x11D4E6C", VA = "0x11D4E6C")]
		set
		{
		}
	}

	[Token(Token = "0x17000158")]
	public float fGridOffset
	{
		[Token(Token = "0x60013EB")]
		[Address(RVA = "0x11D5164", Offset = "0x11D5164", VA = "0x11D5164")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60013EA")]
		[Address(RVA = "0x11D505C", Offset = "0x11D505C", VA = "0x11D505C")]
		set
		{
		}
	}

	[Token(Token = "0x60013D5")]
	[Address(RVA = "0x11D3DF0", Offset = "0x11D3DF0", VA = "0x11D3DF0")]
	internal AkSegmentInfo(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013D6")]
	[Address(RVA = "0x11D3E30", Offset = "0x11D3E30", VA = "0x11D3E30")]
	internal static IntPtr getCPtr(AkSegmentInfo obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013D7")]
	[Address(RVA = "0x11D3E80", Offset = "0x11D3E80", VA = "0x11D3E80", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013D8")]
	[Address(RVA = "0x11D3EB4", Offset = "0x11D3EB4", VA = "0x11D3EB4", Slot = "1")]
	~AkSegmentInfo()
	{
	}

	[Token(Token = "0x60013D9")]
	[Address(RVA = "0x11D3F24", Offset = "0x11D3F24", VA = "0x11D3F24", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60013EC")]
	[Address(RVA = "0x11D524C", Offset = "0x11D524C", VA = "0x11D524C")]
	public AkSegmentInfo()
	{
	}
}
[Token(Token = "0x20002D6")]
public class AkSerializedCallbackHeader : IDisposable
{
	[Token(Token = "0x400129E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x400129F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000159")]
	public IntPtr pPackage
	{
		[Token(Token = "0x60013F2")]
		[Address(RVA = "0x11D562C", Offset = "0x11D562C", VA = "0x11D562C")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x1700015A")]
	public AkSerializedCallbackHeader pNext
	{
		[Token(Token = "0x60013F3")]
		[Address(RVA = "0x11D5714", Offset = "0x11D5714", VA = "0x11D5714")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700015B")]
	public AkCallbackType eType
	{
		[Token(Token = "0x60013F4")]
		[Address(RVA = "0x11D5840", Offset = "0x11D5840", VA = "0x11D5840")]
		get
		{
			return default(AkCallbackType);
		}
	}

	[Token(Token = "0x60013ED")]
	[Address(RVA = "0x11D5340", Offset = "0x11D5340", VA = "0x11D5340")]
	internal AkSerializedCallbackHeader(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013EE")]
	[Address(RVA = "0x11D5380", Offset = "0x11D5380", VA = "0x11D5380")]
	internal static IntPtr getCPtr(AkSerializedCallbackHeader obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013EF")]
	[Address(RVA = "0x11D53D0", Offset = "0x11D53D0", VA = "0x11D53D0", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013F0")]
	[Address(RVA = "0x11D5404", Offset = "0x11D5404", VA = "0x11D5404", Slot = "1")]
	~AkSerializedCallbackHeader()
	{
	}

	[Token(Token = "0x60013F1")]
	[Address(RVA = "0x11D5474", Offset = "0x11D5474", VA = "0x11D5474", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x60013F5")]
	[Address(RVA = "0x11D5928", Offset = "0x11D5928", VA = "0x11D5928")]
	public IntPtr GetData()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013F6")]
	[Address(RVA = "0x11D5A10", Offset = "0x11D5A10", VA = "0x11D5A10")]
	public AkSerializedCallbackHeader()
	{
	}
}
[Token(Token = "0x20002D7")]
public enum AkSourceChannelOrdering
{
	[Token(Token = "0x40012A1")]
	SourceChannelOrdering_Standard,
	[Token(Token = "0x40012A2")]
	SourceChannelOrdering_Film,
	[Token(Token = "0x40012A3")]
	SourceChannelOrdering_FuMa
}
[Token(Token = "0x20002D8")]
public class AkSourceSettings : IDisposable
{
	[Token(Token = "0x40012A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700015C")]
	public uint sourceID
	{
		[Token(Token = "0x60013FD")]
		[Address(RVA = "0x1209718", Offset = "0x1209718", VA = "0x1209718")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x60013FC")]
		[Address(RVA = "0x120969C", Offset = "0x120969C", VA = "0x120969C")]
		set
		{
		}
	}

	[Token(Token = "0x1700015D")]
	public IntPtr pMediaMemory
	{
		[Token(Token = "0x60013FF")]
		[Address(RVA = "0x1209800", Offset = "0x1209800", VA = "0x1209800")]
		get
		{
			return default(IntPtr);
		}
		[Token(Token = "0x60013FE")]
		[Address(RVA = "0x1209784", Offset = "0x1209784", VA = "0x1209784")]
		set
		{
		}
	}

	[Token(Token = "0x1700015E")]
	public uint uMediaSize
	{
		[Token(Token = "0x6001401")]
		[Address(RVA = "0x12098E8", Offset = "0x12098E8", VA = "0x12098E8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001400")]
		[Address(RVA = "0x120986C", Offset = "0x120986C", VA = "0x120986C")]
		set
		{
		}
	}

	[Token(Token = "0x60013F7")]
	[Address(RVA = "0x120942C", Offset = "0x120942C", VA = "0x120942C")]
	internal AkSourceSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x60013F8")]
	[Address(RVA = "0x120946C", Offset = "0x120946C", VA = "0x120946C")]
	internal static IntPtr getCPtr(AkSourceSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x60013F9")]
	[Address(RVA = "0x12094BC", Offset = "0x12094BC", VA = "0x12094BC", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x60013FA")]
	[Address(RVA = "0x12094F0", Offset = "0x12094F0", VA = "0x12094F0", Slot = "1")]
	~AkSourceSettings()
	{
	}

	[Token(Token = "0x60013FB")]
	[Address(RVA = "0x1209560", Offset = "0x1209560", VA = "0x1209560", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001402")]
	[Address(RVA = "0x1209954", Offset = "0x1209954", VA = "0x1209954")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001403")]
	[Address(RVA = "0x12099C0", Offset = "0x12099C0", VA = "0x12099C0")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001404")]
	[Address(RVA = "0x1209A20", Offset = "0x1209A20", VA = "0x1209A20")]
	public void Clone(AkSourceSettings other)
	{
	}

	[Token(Token = "0x6001405")]
	[Address(RVA = "0x1209AC8", Offset = "0x1209AC8", VA = "0x1209AC8")]
	public AkSourceSettings()
	{
	}
}
[Token(Token = "0x20002D9")]
public class AkSpatialAudioInitSettings : IDisposable
{
	[Token(Token = "0x40012A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700015F")]
	public int uPoolID
	{
		[Token(Token = "0x600140D")]
		[Address(RVA = "0x120A61C", Offset = "0x120A61C", VA = "0x120A61C")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600140C")]
		[Address(RVA = "0x120A5A0", Offset = "0x120A5A0", VA = "0x120A5A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000160")]
	public uint uPoolSize
	{
		[Token(Token = "0x600140F")]
		[Address(RVA = "0x120A704", Offset = "0x120A704", VA = "0x120A704")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600140E")]
		[Address(RVA = "0x120A688", Offset = "0x120A688", VA = "0x120A688")]
		set
		{
		}
	}

	[Token(Token = "0x17000161")]
	public uint uMaxSoundPropagationDepth
	{
		[Token(Token = "0x6001411")]
		[Address(RVA = "0x120A7EC", Offset = "0x120A7EC", VA = "0x120A7EC")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001410")]
		[Address(RVA = "0x120A770", Offset = "0x120A770", VA = "0x120A770")]
		set
		{
		}
	}

	[Token(Token = "0x17000162")]
	public uint uDiffractionFlags
	{
		[Token(Token = "0x6001413")]
		[Address(RVA = "0x120A8D4", Offset = "0x120A8D4", VA = "0x120A8D4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001412")]
		[Address(RVA = "0x120A858", Offset = "0x120A858", VA = "0x120A858")]
		set
		{
		}
	}

	[Token(Token = "0x17000163")]
	public float fDiffractionShadowAttenFactor
	{
		[Token(Token = "0x6001415")]
		[Address(RVA = "0x120A9BC", Offset = "0x120A9BC", VA = "0x120A9BC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001414")]
		[Address(RVA = "0x120A940", Offset = "0x120A940", VA = "0x120A940")]
		set
		{
		}
	}

	[Token(Token = "0x17000164")]
	public float fDiffractionShadowDegrees
	{
		[Token(Token = "0x6001417")]
		[Address(RVA = "0x120AAA4", Offset = "0x120AAA4", VA = "0x120AAA4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001416")]
		[Address(RVA = "0x120AA28", Offset = "0x120AA28", VA = "0x120AA28")]
		set
		{
		}
	}

	[Token(Token = "0x17000165")]
	public float fMovementThreshold
	{
		[Token(Token = "0x6001419")]
		[Address(RVA = "0x120AB8C", Offset = "0x120AB8C", VA = "0x120AB8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001418")]
		[Address(RVA = "0x120AB10", Offset = "0x120AB10", VA = "0x120AB10")]
		set
		{
		}
	}

	[Token(Token = "0x6001406")]
	[Address(RVA = "0x120A2AC", Offset = "0x120A2AC", VA = "0x120A2AC")]
	internal AkSpatialAudioInitSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001407")]
	[Address(RVA = "0x120A2EC", Offset = "0x120A2EC", VA = "0x120A2EC")]
	internal static IntPtr getCPtr(AkSpatialAudioInitSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001408")]
	[Address(RVA = "0x120A33C", Offset = "0x120A33C", VA = "0x120A33C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001409")]
	[Address(RVA = "0x120A370", Offset = "0x120A370", VA = "0x120A370", Slot = "1")]
	~AkSpatialAudioInitSettings()
	{
	}

	[Token(Token = "0x600140A")]
	[Address(RVA = "0x120A3E0", Offset = "0x120A3E0", VA = "0x120A3E0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600140B")]
	[Address(RVA = "0x120A51C", Offset = "0x120A51C", VA = "0x120A51C")]
	public AkSpatialAudioInitSettings()
	{
	}
}
[Token(Token = "0x20002DA")]
public enum AkSpeakerPanningType
{
	[Token(Token = "0x40012A9")]
	AK_DirectSpeakerAssignment,
	[Token(Token = "0x40012AA")]
	AK_BalanceFadeHeight
}
[Token(Token = "0x20002DB")]
public class AkStreamMgrSettings : IDisposable
{
	[Token(Token = "0x40012AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000166")]
	public uint uMemorySize
	{
		[Token(Token = "0x6001420")]
		[Address(RVA = "0x120B940", Offset = "0x120B940", VA = "0x120B940")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600141F")]
		[Address(RVA = "0x120B8C4", Offset = "0x120B8C4", VA = "0x120B8C4")]
		set
		{
		}
	}

	[Token(Token = "0x600141A")]
	[Address(RVA = "0x120B654", Offset = "0x120B654", VA = "0x120B654")]
	internal AkStreamMgrSettings(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600141B")]
	[Address(RVA = "0x120B694", Offset = "0x120B694", VA = "0x120B694")]
	internal static IntPtr getCPtr(AkStreamMgrSettings obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600141C")]
	[Address(RVA = "0x120B6E4", Offset = "0x120B6E4", VA = "0x120B6E4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600141D")]
	[Address(RVA = "0x120B718", Offset = "0x120B718", VA = "0x120B718", Slot = "1")]
	~AkStreamMgrSettings()
	{
	}

	[Token(Token = "0x600141E")]
	[Address(RVA = "0x120B788", Offset = "0x120B788", VA = "0x120B788", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001421")]
	[Address(RVA = "0x120B9AC", Offset = "0x120B9AC", VA = "0x120B9AC")]
	public AkStreamMgrSettings()
	{
	}
}
[Token(Token = "0x20002DC")]
public class AkTaskContext : IDisposable
{
	[Token(Token = "0x40012AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000167")]
	public uint uIdxThread
	{
		[Token(Token = "0x6001428")]
		[Address(RVA = "0x120D2E8", Offset = "0x120D2E8", VA = "0x120D2E8")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001427")]
		[Address(RVA = "0x120D26C", Offset = "0x120D26C", VA = "0x120D26C")]
		set
		{
		}
	}

	[Token(Token = "0x6001422")]
	[Address(RVA = "0x120CFFC", Offset = "0x120CFFC", VA = "0x120CFFC")]
	internal AkTaskContext(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001423")]
	[Address(RVA = "0x120D03C", Offset = "0x120D03C", VA = "0x120D03C")]
	internal static IntPtr getCPtr(AkTaskContext obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001424")]
	[Address(RVA = "0x120D08C", Offset = "0x120D08C", VA = "0x120D08C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001425")]
	[Address(RVA = "0x120D0C0", Offset = "0x120D0C0", VA = "0x120D0C0", Slot = "1")]
	~AkTaskContext()
	{
	}

	[Token(Token = "0x6001426")]
	[Address(RVA = "0x120D130", Offset = "0x120D130", VA = "0x120D130", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001429")]
	[Address(RVA = "0x120D354", Offset = "0x120D354", VA = "0x120D354")]
	public AkTaskContext()
	{
	}
}
[Token(Token = "0x20002DD")]
public class AkTransform : IDisposable
{
	[Token(Token = "0x40012AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600142A")]
	[Address(RVA = "0x120DA74", Offset = "0x120DA74", VA = "0x120DA74")]
	internal AkTransform(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600142B")]
	[Address(RVA = "0x120DAB4", Offset = "0x120DAB4", VA = "0x120DAB4")]
	internal static IntPtr getCPtr(AkTransform obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600142C")]
	[Address(RVA = "0x120DB04", Offset = "0x120DB04", VA = "0x120DB04", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600142D")]
	[Address(RVA = "0x120DB38", Offset = "0x120DB38", VA = "0x120DB38", Slot = "1")]
	~AkTransform()
	{
	}

	[Token(Token = "0x600142E")]
	[Address(RVA = "0x120DBA8", Offset = "0x120DBA8", VA = "0x120DBA8", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600142F")]
	[Address(RVA = "0x120DCE4", Offset = "0x120DCE4", VA = "0x120DCE4")]
	public AkVector Position()
	{
		return null;
	}

	[Token(Token = "0x6001430")]
	[Address(RVA = "0x120DDC4", Offset = "0x120DDC4", VA = "0x120DDC4")]
	public AkVector OrientationFront()
	{
		return null;
	}

	[Token(Token = "0x6001431")]
	[Address(RVA = "0x120DE64", Offset = "0x120DE64", VA = "0x120DE64")]
	public AkVector OrientationTop()
	{
		return null;
	}

	[Token(Token = "0x6001432")]
	[Address(RVA = "0x120DF04", Offset = "0x120DF04", VA = "0x120DF04")]
	public void Set(AkVector in_position, AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6001433")]
	[Address(RVA = "0x120E024", Offset = "0x120E024", VA = "0x120E024")]
	public void Set(float in_positionX, float in_positionY, float in_positionZ, float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6001434")]
	[Address(RVA = "0x120E150", Offset = "0x120E150", VA = "0x120E150")]
	public void SetPosition(AkVector in_position)
	{
	}

	[Token(Token = "0x6001435")]
	[Address(RVA = "0x120E1F8", Offset = "0x120E1F8", VA = "0x120E1F8")]
	public void SetPosition(float in_x, float in_y, float in_z)
	{
	}

	[Token(Token = "0x6001436")]
	[Address(RVA = "0x120E28C", Offset = "0x120E28C", VA = "0x120E28C")]
	public void SetOrientation(AkVector in_orientationFront, AkVector in_orientationTop)
	{
	}

	[Token(Token = "0x6001437")]
	[Address(RVA = "0x120E344", Offset = "0x120E344", VA = "0x120E344")]
	public void SetOrientation(float in_orientFrontX, float in_orientFrontY, float in_orientFrontZ, float in_orientTopX, float in_orientTopY, float in_orientTopZ)
	{
	}

	[Token(Token = "0x6001438")]
	[Address(RVA = "0x120E3F8", Offset = "0x120E3F8", VA = "0x120E3F8")]
	public AkTransform()
	{
	}
}
[Token(Token = "0x20002DE")]
public class AkTriangle : IDisposable
{
	[Token(Token = "0x40012B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x17000168")]
	public ushort point0
	{
		[Token(Token = "0x6001441")]
		[Address(RVA = "0x120E824", Offset = "0x120E824", VA = "0x120E824")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001440")]
		[Address(RVA = "0x120C8BC", Offset = "0x120C8BC", VA = "0x120C8BC")]
		set
		{
		}
	}

	[Token(Token = "0x17000169")]
	public ushort point1
	{
		[Token(Token = "0x6001443")]
		[Address(RVA = "0x120E890", Offset = "0x120E890", VA = "0x120E890")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001442")]
		[Address(RVA = "0x120C938", Offset = "0x120C938", VA = "0x120C938")]
		set
		{
		}
	}

	[Token(Token = "0x1700016A")]
	public ushort point2
	{
		[Token(Token = "0x6001445")]
		[Address(RVA = "0x120E8FC", Offset = "0x120E8FC", VA = "0x120E8FC")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001444")]
		[Address(RVA = "0x120C9B4", Offset = "0x120C9B4", VA = "0x120C9B4")]
		set
		{
		}
	}

	[Token(Token = "0x1700016B")]
	public ushort surface
	{
		[Token(Token = "0x6001447")]
		[Address(RVA = "0x120E968", Offset = "0x120E968", VA = "0x120E968")]
		get
		{
			return default(ushort);
		}
		[Token(Token = "0x6001446")]
		[Address(RVA = "0x120CA30", Offset = "0x120CA30", VA = "0x120CA30")]
		set
		{
		}
	}

	[Token(Token = "0x6001439")]
	[Address(RVA = "0x120E47C", Offset = "0x120E47C", VA = "0x120E47C")]
	internal AkTriangle(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600143A")]
	[Address(RVA = "0x120E4BC", Offset = "0x120E4BC", VA = "0x120E4BC")]
	internal static IntPtr getCPtr(AkTriangle obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600143B")]
	[Address(RVA = "0x120E50C", Offset = "0x120E50C", VA = "0x120E50C", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600143C")]
	[Address(RVA = "0x120E540", Offset = "0x120E540", VA = "0x120E540", Slot = "1")]
	~AkTriangle()
	{
	}

	[Token(Token = "0x600143D")]
	[Address(RVA = "0x120E5B0", Offset = "0x120E5B0", VA = "0x120E5B0", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600143E")]
	[Address(RVA = "0x120E6EC", Offset = "0x120E6EC", VA = "0x120E6EC")]
	public AkTriangle()
	{
	}

	[Token(Token = "0x600143F")]
	[Address(RVA = "0x120E770", Offset = "0x120E770", VA = "0x120E770")]
	public AkTriangle(ushort in_pt0, ushort in_pt1, ushort in_pt2, ushort in_surfaceInfo)
	{
	}

	[Token(Token = "0x6001448")]
	[Address(RVA = "0x120E9D4", Offset = "0x120E9D4", VA = "0x120E9D4")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001449")]
	[Address(RVA = "0x120EA40", Offset = "0x120EA40", VA = "0x120EA40")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x600144A")]
	[Address(RVA = "0x120EAA0", Offset = "0x120EAA0", VA = "0x120EAA0")]
	public void Clone(AkTriangle other)
	{
	}
}
[Token(Token = "0x20002DF")]
public class AkVector : IDisposable
{
	[Token(Token = "0x40012B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700016C")]
	public float X
	{
		[Token(Token = "0x6001452")]
		[Address(RVA = "0x1210D18", Offset = "0x1210D18", VA = "0x1210D18")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001451")]
		[Address(RVA = "0x1210C9C", Offset = "0x1210C9C", VA = "0x1210C9C")]
		set
		{
		}
	}

	[Token(Token = "0x1700016D")]
	public float Y
	{
		[Token(Token = "0x6001454")]
		[Address(RVA = "0x1210E00", Offset = "0x1210E00", VA = "0x1210E00")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001453")]
		[Address(RVA = "0x1210D84", Offset = "0x1210D84", VA = "0x1210D84")]
		set
		{
		}
	}

	[Token(Token = "0x1700016E")]
	public float Z
	{
		[Token(Token = "0x6001456")]
		[Address(RVA = "0x1210EE8", Offset = "0x1210EE8", VA = "0x1210EE8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001455")]
		[Address(RVA = "0x1210E6C", Offset = "0x1210E6C", VA = "0x1210E6C")]
		set
		{
		}
	}

	[Token(Token = "0x600144B")]
	[Address(RVA = "0x120DD84", Offset = "0x120DD84", VA = "0x120DD84")]
	internal AkVector(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x600144C")]
	[Address(RVA = "0x120DFD4", Offset = "0x120DFD4", VA = "0x120DFD4")]
	internal static IntPtr getCPtr(AkVector obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600144D")]
	[Address(RVA = "0x1210A50", Offset = "0x1210A50", VA = "0x1210A50", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600144E")]
	[Address(RVA = "0x1210A84", Offset = "0x1210A84", VA = "0x1210A84", Slot = "1")]
	~AkVector()
	{
	}

	[Token(Token = "0x600144F")]
	[Address(RVA = "0x1210AF4", Offset = "0x1210AF4", VA = "0x1210AF4", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001450")]
	[Address(RVA = "0x1210C30", Offset = "0x1210C30", VA = "0x1210C30")]
	public void Zero()
	{
	}

	[Token(Token = "0x6001457")]
	[Address(RVA = "0x1210F54", Offset = "0x1210F54", VA = "0x1210F54")]
	public AkVector()
	{
	}
}
[Token(Token = "0x20002E0")]
public class AkVertex : IDisposable
{
	[Token(Token = "0x40012B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x1700016F")]
	public float X
	{
		[Token(Token = "0x6001460")]
		[Address(RVA = "0x1211378", Offset = "0x1211378", VA = "0x1211378")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600145F")]
		[Address(RVA = "0x120C6E8", Offset = "0x120C6E8", VA = "0x120C6E8")]
		set
		{
		}
	}

	[Token(Token = "0x17000170")]
	public float Y
	{
		[Token(Token = "0x6001462")]
		[Address(RVA = "0x12113E4", Offset = "0x12113E4", VA = "0x12113E4")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001461")]
		[Address(RVA = "0x120C764", Offset = "0x120C764", VA = "0x120C764")]
		set
		{
		}
	}

	[Token(Token = "0x17000171")]
	public float Z
	{
		[Token(Token = "0x6001464")]
		[Address(RVA = "0x1211450", Offset = "0x1211450", VA = "0x1211450")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6001463")]
		[Address(RVA = "0x120C7E0", Offset = "0x120C7E0", VA = "0x120C7E0")]
		set
		{
		}
	}

	[Token(Token = "0x6001458")]
	[Address(RVA = "0x1210FD8", Offset = "0x1210FD8", VA = "0x1210FD8")]
	internal AkVertex(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001459")]
	[Address(RVA = "0x1211018", Offset = "0x1211018", VA = "0x1211018")]
	internal static IntPtr getCPtr(AkVertex obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600145A")]
	[Address(RVA = "0x1211068", Offset = "0x1211068", VA = "0x1211068", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600145B")]
	[Address(RVA = "0x121109C", Offset = "0x121109C", VA = "0x121109C", Slot = "1")]
	~AkVertex()
	{
	}

	[Token(Token = "0x600145C")]
	[Address(RVA = "0x121110C", Offset = "0x121110C", VA = "0x121110C", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600145D")]
	[Address(RVA = "0x1211248", Offset = "0x1211248", VA = "0x1211248")]
	public AkVertex()
	{
	}

	[Token(Token = "0x600145E")]
	[Address(RVA = "0x12112CC", Offset = "0x12112CC", VA = "0x12112CC")]
	public AkVertex(float in_X, float in_Y, float in_Z)
	{
	}

	[Token(Token = "0x6001465")]
	[Address(RVA = "0x12114BC", Offset = "0x12114BC", VA = "0x12114BC")]
	public void Clear()
	{
	}

	[Token(Token = "0x6001466")]
	[Address(RVA = "0x1211528", Offset = "0x1211528", VA = "0x1211528")]
	public static int GetSizeOf()
	{
		return default(int);
	}

	[Token(Token = "0x6001467")]
	[Address(RVA = "0x1211588", Offset = "0x1211588", VA = "0x1211588")]
	public void Clone(AkVertex other)
	{
	}
}
[Token(Token = "0x20002E1")]
public class _ArrayPoolDefault : IDisposable
{
	[Token(Token = "0x40012B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001468")]
	[Address(RVA = "0x110CAF0", Offset = "0x110CAF0", VA = "0x110CAF0")]
	internal _ArrayPoolDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001469")]
	[Address(RVA = "0x110CB30", Offset = "0x110CB30", VA = "0x110CB30")]
	internal static IntPtr getCPtr(_ArrayPoolDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600146A")]
	[Address(RVA = "0x110CB80", Offset = "0x110CB80", VA = "0x110CB80", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x600146B")]
	[Address(RVA = "0x110CBB4", Offset = "0x110CBB4", VA = "0x110CBB4", Slot = "1")]
	~_ArrayPoolDefault()
	{
	}

	[Token(Token = "0x600146C")]
	[Address(RVA = "0x110CC24", Offset = "0x110CC24", VA = "0x110CC24", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600146D")]
	[Address(RVA = "0x110CD60", Offset = "0x110CD60", VA = "0x110CD60")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x600146E")]
	[Address(RVA = "0x110CDC0", Offset = "0x110CDC0", VA = "0x110CDC0")]
	public _ArrayPoolDefault()
	{
	}
}
[Token(Token = "0x20002E2")]
public class _ArrayPoolLEngineDefault : IDisposable
{
	[Token(Token = "0x40012B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x600146F")]
	[Address(RVA = "0x110CE44", Offset = "0x110CE44", VA = "0x110CE44")]
	internal _ArrayPoolLEngineDefault(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001470")]
	[Address(RVA = "0x110CE84", Offset = "0x110CE84", VA = "0x110CE84")]
	internal static IntPtr getCPtr(_ArrayPoolLEngineDefault obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001471")]
	[Address(RVA = "0x110CED4", Offset = "0x110CED4", VA = "0x110CED4", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001472")]
	[Address(RVA = "0x110CF08", Offset = "0x110CF08", VA = "0x110CF08", Slot = "1")]
	~_ArrayPoolLEngineDefault()
	{
	}

	[Token(Token = "0x6001473")]
	[Address(RVA = "0x110CF78", Offset = "0x110CF78", VA = "0x110CF78", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x6001474")]
	[Address(RVA = "0x110D0B4", Offset = "0x110D0B4", VA = "0x110D0B4")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x6001475")]
	[Address(RVA = "0x110D114", Offset = "0x110D114", VA = "0x110D114")]
	public _ArrayPoolLEngineDefault()
	{
	}
}
[Token(Token = "0x20002E3")]
public class _ArrayPoolSpatialAudio : IDisposable
{
	[Token(Token = "0x40012BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private IntPtr swigCPtr;

	[Token(Token = "0x40012BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	protected bool swigCMemOwn;

	[Token(Token = "0x6001476")]
	[Address(RVA = "0x110D198", Offset = "0x110D198", VA = "0x110D198")]
	internal _ArrayPoolSpatialAudio(IntPtr cPtr, bool cMemoryOwn)
	{
	}

	[Token(Token = "0x6001477")]
	[Address(RVA = "0x110D1D8", Offset = "0x110D1D8", VA = "0x110D1D8")]
	internal static IntPtr getCPtr(_ArrayPoolSpatialAudio obj)
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001478")]
	[Address(RVA = "0x110D228", Offset = "0x110D228", VA = "0x110D228", Slot = "5")]
	internal virtual void setCPtr(IntPtr cPtr)
	{
	}

	[Token(Token = "0x6001479")]
	[Address(RVA = "0x110D25C", Offset = "0x110D25C", VA = "0x110D25C", Slot = "1")]
	~_ArrayPoolSpatialAudio()
	{
	}

	[Token(Token = "0x600147A")]
	[Address(RVA = "0x110D2CC", Offset = "0x110D2CC", VA = "0x110D2CC", Slot = "6")]
	public virtual void Dispose()
	{
	}

	[Token(Token = "0x600147B")]
	[Address(RVA = "0x110D408", Offset = "0x110D408", VA = "0x110D408")]
	public static int Get()
	{
		return default(int);
	}

	[Token(Token = "0x600147C")]
	[Address(RVA = "0x110D468", Offset = "0x110D468", VA = "0x110D468")]
	public _ArrayPoolSpatialAudio()
	{
	}
}
[Token(Token = "0x20002E4")]
public class AkAndroidSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x2000614")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x4001D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE5B8", Offset = "0xCCE5B8")]
		public bool m_RoundFrameSizeToHardwareSize;

		[Token(Token = "0x60022EF")]
		[Address(RVA = "0x16AA494", Offset = "0x16AA494", VA = "0x16AA494", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x60022F0")]
		[Address(RVA = "0x16AA4B8", Offset = "0x16AA4B8", VA = "0x16AA4B8")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x40012BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x40012BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x40012BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x600147D")]
	[Address(RVA = "0x16AA180", Offset = "0x16AA180", VA = "0x16AA180")]
	public AkAndroidSettings()
	{
	}

	[Token(Token = "0x600147E")]
	[Address(RVA = "0x16AA47C", Offset = "0x16AA47C", VA = "0x16AA47C", Slot = "11")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x600147F")]
	[Address(RVA = "0x16AA484", Offset = "0x16AA484", VA = "0x16AA484", Slot = "12")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001480")]
	[Address(RVA = "0x16AA48C", Offset = "0x16AA48C", VA = "0x16AA48C", Slot = "13")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}
}
[Token(Token = "0x20002E5")]
public static class AkAudioInputManager
{
	[Token(Token = "0x2000615")]
	public delegate void AudioFormatDelegate(uint playingID, AkAudioFormat format);

	[Token(Token = "0x2000616")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCBF670", Offset = "0xCBF670")]
	public delegate void AudioFormatInteropDelegate(uint playingID, IntPtr format);

	[Token(Token = "0x2000617")]
	public delegate bool AudioSamplesDelegate(uint playingID, uint channelIndex, float[] samples);

	[Token(Token = "0x2000618")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCBF684", Offset = "0xCBF684")]
	public delegate bool AudioSamplesInteropDelegate(uint playingID, [In][Out] float[] samples, uint channelIndex, uint frames);

	[Token(Token = "0x40012C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool initialized;

	[Token(Token = "0x40012C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly Dictionary<uint, AudioSamplesDelegate> audioSamplesDelegates;

	[Token(Token = "0x40012C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Dictionary<uint, AudioFormatDelegate> audioFormatDelegates;

	[Token(Token = "0x40012C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkAudioFormat audioFormat;

	[Token(Token = "0x40012C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AudioSamplesInteropDelegate audioSamplesDelegate;

	[Token(Token = "0x40012C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AudioFormatInteropDelegate audioFormatDelegate;

	[Token(Token = "0x6001481")]
	[Address(RVA = "0x16AB3F0", Offset = "0x16AB3F0", VA = "0x16AB3F0")]
	public static uint PostAudioInputEvent(Event akEvent, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001482")]
	[Address(RVA = "0x16AB6A4", Offset = "0x16AB6A4", VA = "0x16AB6A4")]
	public static uint PostAudioInputEvent(uint akEventID, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001483")]
	[Address(RVA = "0x16AB7AC", Offset = "0x16AB7AC", VA = "0x16AB7AC")]
	public static uint PostAudioInputEvent(string akEventName, GameObject gameObject, AudioSamplesDelegate sampleDelegate, [Optional] AudioFormatDelegate formatDelegate)
	{
		return default(uint);
	}

	[Token(Token = "0x6001484")]
	[Address(RVA = "0x16AB1DC", Offset = "0x16AB1DC", VA = "0x16AB1DC")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCD1D78", Offset = "0xCD1D78")]
	private static bool InternalAudioSamplesDelegate(uint playingID, float[] samples, uint channelIndex, uint frames)
	{
		return default(bool);
	}

	[Token(Token = "0x6001485")]
	[Address(RVA = "0x16AB2D8", Offset = "0x16AB2D8", VA = "0x16AB2D8")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCD1DDC", Offset = "0xCD1DDC")]
	private static void InternalAudioFormatDelegate(uint playingID, IntPtr format)
	{
	}

	[Token(Token = "0x6001486")]
	[Address(RVA = "0x16AB4DC", Offset = "0x16AB4DC", VA = "0x16AB4DC")]
	private static void TryInitialize()
	{
	}

	[Token(Token = "0x6001487")]
	[Address(RVA = "0x16AB5B0", Offset = "0x16AB5B0", VA = "0x16AB5B0")]
	private static void AddPlayingID(uint playingID, AudioSamplesDelegate sampleDelegate, AudioFormatDelegate formatDelegate)
	{
	}

	[Token(Token = "0x6001488")]
	[Address(RVA = "0x16ABDEC", Offset = "0x16ABDEC", VA = "0x16ABDEC")]
	private static void EventCallback(object cookie, AkCallbackType type, AkCallbackInfo callbackInfo)
	{
	}
}
[Token(Token = "0x20002E6")]
public static class AkBankManager
{
	[Token(Token = "0x2000619")]
	private class BankHandle
	{
		[Token(Token = "0x4001D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly string bankName;

		[Token(Token = "0x4001D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected uint m_BankID;

		[Token(Token = "0x4001D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCE5F0", Offset = "0xCCE5F0")]
		private int <RefCount>k__BackingField;

		[Token(Token = "0x170003AD")]
		public int RefCount
		{
			[Token(Token = "0x6002302")]
			[Address(RVA = "0x16B0C7C", Offset = "0x16B0C7C", VA = "0x16B0C7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD5144", Offset = "0xCD5144")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6002303")]
			[Address(RVA = "0x16B0C84", Offset = "0x16B0C84", VA = "0x16B0C84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD5154", Offset = "0xCD5154")]
			private set
			{
			}
		}

		[Token(Token = "0x6002301")]
		[Address(RVA = "0x16AFF00", Offset = "0x16AFF00", VA = "0x16AFF00")]
		public BankHandle(string name)
		{
		}

		[Token(Token = "0x6002304")]
		[Address(RVA = "0x16B0C8C", Offset = "0x16B0C8C", VA = "0x16B0C8C", Slot = "4")]
		public virtual AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x6002305")]
		[Address(RVA = "0x16B0200", Offset = "0x16B0200", VA = "0x16B0200")]
		public void LoadBank()
		{
		}

		[Token(Token = "0x6002306")]
		[Address(RVA = "0x16B0D04", Offset = "0x16B0D04", VA = "0x16B0D04", Slot = "5")]
		public virtual void UnloadBank()
		{
		}

		[Token(Token = "0x6002307")]
		[Address(RVA = "0x16B02FC", Offset = "0x16B02FC", VA = "0x16B02FC")]
		public void IncRef()
		{
		}

		[Token(Token = "0x6002308")]
		[Address(RVA = "0x16B035C", Offset = "0x16B035C", VA = "0x16B035C")]
		public void DecRef()
		{
		}

		[Token(Token = "0x6002309")]
		[Address(RVA = "0x16B067C", Offset = "0x16B067C", VA = "0x16B067C")]
		protected void LogLoadResult(AKRESULT result)
		{
		}
	}

	[Token(Token = "0x200061A")]
	private class AsyncBankHandle : BankHandle
	{
		[Token(Token = "0x4001D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly AkCallbackManager.BankCallback bankCallback;

		[Token(Token = "0x600230A")]
		[Address(RVA = "0x16B030C", Offset = "0x16B030C", VA = "0x16B030C")]
		public AsyncBankHandle(string name, AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x600230B")]
		[Address(RVA = "0x16B04DC", Offset = "0x16B04DC", VA = "0x16B04DC")]
		private static void GlobalBankCallback(uint in_bankID, IntPtr in_pInMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie)
		{
		}

		[Token(Token = "0x600230C")]
		[Address(RVA = "0x16B0BA8", Offset = "0x16B0BA8", VA = "0x16B0BA8", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}
	}

	[Token(Token = "0x200061B")]
	private class DecodableBankHandle : BankHandle
	{
		[Token(Token = "0x4001D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly bool decodeBank;

		[Token(Token = "0x4001D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly string decodedBankPath;

		[Token(Token = "0x4001D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly bool saveDecodedBank;

		[Token(Token = "0x600230D")]
		[Address(RVA = "0x16AFF34", Offset = "0x16AFF34", VA = "0x16AFF34")]
		public DecodableBankHandle(string name, bool save)
		{
		}

		[Token(Token = "0x600230E")]
		[Address(RVA = "0x16B0E64", Offset = "0x16B0E64", VA = "0x16B0E64", Slot = "4")]
		public override AKRESULT DoLoadBank()
		{
			return default(AKRESULT);
		}

		[Token(Token = "0x600230F")]
		[Address(RVA = "0x16B0FF8", Offset = "0x16B0FF8", VA = "0x16B0FF8", Slot = "5")]
		public override void UnloadBank()
		{
		}
	}

	[Token(Token = "0x40012C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Dictionary<string, BankHandle> m_BankHandles;

	[Token(Token = "0x40012C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<BankHandle> BanksToUnload;

	[Token(Token = "0x40012C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly Mutex m_Mutex;

	[Token(Token = "0x600148A")]
	[Address(RVA = "0x16AFBAC", Offset = "0x16AFBAC", VA = "0x16AFBAC")]
	internal static void DoUnloadBanks()
	{
	}

	[Token(Token = "0x600148B")]
	[Address(RVA = "0x16AFCD0", Offset = "0x16AFCD0", VA = "0x16AFCD0")]
	internal static void Reset()
	{
	}

	[Token(Token = "0x600148C")]
	[Address(RVA = "0x16AFD6C", Offset = "0x16AFD6C", VA = "0x16AFD6C")]
	public static void LoadInitBank(bool doReset = true)
	{
	}

	[Token(Token = "0x600148D")]
	[Address(RVA = "0x16AFE90", Offset = "0x16AFE90", VA = "0x16AFE90")]
	public static void UnloadInitBank()
	{
	}

	[Token(Token = "0x600148E")]
	[Address(RVA = "0x16A5584", Offset = "0x16A5584", VA = "0x16A5584")]
	public static void LoadBank(string name, bool decodeBank, bool saveDecodedBank)
	{
	}

	[Token(Token = "0x600148F")]
	[Address(RVA = "0x16A5804", Offset = "0x16A5804", VA = "0x16A5804")]
	public static void LoadBankAsync(string name, [Optional] AkCallbackManager.BankCallback callback)
	{
	}

	[Token(Token = "0x6001490")]
	[Address(RVA = "0x16A5A34", Offset = "0x16A5A34", VA = "0x16A5A34")]
	public static void UnloadBank(string name)
	{
	}
}
[Token(Token = "0x20002E7")]
public class AkBasePathGetter
{
	[Token(Token = "0x40012C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string DefaultBasePath;

	[Token(Token = "0x6001492")]
	[Address(RVA = "0x16B1088", Offset = "0x16B1088", VA = "0x16B1088")]
	public static string GetPlatformName()
	{
		return null;
	}

	[Token(Token = "0x6001493")]
	[Address(RVA = "0x16B10F8", Offset = "0x16B10F8", VA = "0x16B10F8")]
	public static string GetPlatformBasePath()
	{
		return null;
	}

	[Token(Token = "0x6001494")]
	[Address(RVA = "0x16B11B4", Offset = "0x16B11B4", VA = "0x16B11B4")]
	public static string GetFullSoundBankPath()
	{
		return null;
	}

	[Token(Token = "0x6001495")]
	[Address(RVA = "0x16B1338", Offset = "0x16B1338", VA = "0x16B1338")]
	public static void FixSlashes(ref string path, char separatorChar, char badChar, bool addTrailingSlash)
	{
	}

	[Token(Token = "0x6001496")]
	[Address(RVA = "0x16B1284", Offset = "0x16B1284", VA = "0x16B1284")]
	public static void FixSlashes(ref string path)
	{
	}

	[Token(Token = "0x6001497")]
	[Address(RVA = "0x16B0D7C", Offset = "0x16B0D7C", VA = "0x16B0D7C")]
	public static string GetSoundbankBasePath()
	{
		return null;
	}

	[Token(Token = "0x6001498")]
	[Address(RVA = "0x16B148C", Offset = "0x16B148C", VA = "0x16B148C")]
	public AkBasePathGetter()
	{
	}
}
[Token(Token = "0x20002E8")]
public static class AkCallbackManager
{
	[Token(Token = "0x200061C")]
	public delegate void EventCallback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info);

	[Token(Token = "0x200061D")]
	public delegate void MonitoringCallback(AkMonitorErrorCode in_errorCode, AkMonitorErrorLevel in_errorLevel, uint in_playingID, ulong in_gameObjID, string in_msg);

	[Token(Token = "0x200061E")]
	public delegate void BankCallback(uint in_bankID, IntPtr in_InMemoryBankPtr, AKRESULT in_eLoadResult, uint in_memPoolId, object in_Cookie);

	[Token(Token = "0x200061F")]
	public class EventCallbackPackage
	{
		[Token(Token = "0x4001D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool m_bNotifyEndOfEvent;

		[Token(Token = "0x4001D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EventCallback m_Callback;

		[Token(Token = "0x4001D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public object m_Cookie;

		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_playingID;

		[Token(Token = "0x600231C")]
		[Address(RVA = "0x16B47D0", Offset = "0x16B47D0", VA = "0x16B47D0")]
		public static EventCallbackPackage Create(EventCallback in_cb, object in_cookie, ref uint io_Flags)
		{
			return null;
		}

		[Token(Token = "0x600231D")]
		[Address(RVA = "0x16B4914", Offset = "0x16B4914", VA = "0x16B4914", Slot = "1")]
		~EventCallbackPackage()
		{
		}

		[Token(Token = "0x600231E")]
		[Address(RVA = "0x16B490C", Offset = "0x16B490C", VA = "0x16B490C")]
		public EventCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000620")]
	public class BankCallbackPackage
	{
		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BankCallback m_Callback;

		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x600231F")]
		[Address(RVA = "0x16B464C", Offset = "0x16B464C", VA = "0x16B464C")]
		public BankCallbackPackage(BankCallback in_cb, object in_cookie)
		{
		}
	}

	[Token(Token = "0x2000621")]
	public delegate AKRESULT BGMCallback(bool in_bOtherAudioPlaying, object in_Cookie);

	[Token(Token = "0x2000622")]
	public class BGMCallbackPackage
	{
		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BGMCallback m_Callback;

		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public object m_Cookie;

		[Token(Token = "0x6002324")]
		[Address(RVA = "0x16B2958", Offset = "0x16B2958", VA = "0x16B2958")]
		public BGMCallbackPackage()
		{
		}
	}

	[Token(Token = "0x2000623")]
	public class InitializationSettings
	{
		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static int DefaultBufferSize;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static bool DefaultIsLoggingEnabled;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int BufferSize;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool IsLoggingEnabled;

		[Token(Token = "0x6002325")]
		[Address(RVA = "0x16B163C", Offset = "0x16B163C", VA = "0x16B163C")]
		public InitializationSettings()
		{
		}
	}

	[Token(Token = "0x40012CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC8C74", Offset = "0xCC8C74")]
	private static bool <IsLoggingEnabled>k__BackingField;

	[Token(Token = "0x40012CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly AkEventCallbackInfo AkEventCallbackInfo;

	[Token(Token = "0x40012CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly AkDynamicSequenceItemCallbackInfo AkDynamicSequenceItemCallbackInfo;

	[Token(Token = "0x40012CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static readonly AkMIDIEventCallbackInfo AkMIDIEventCallbackInfo;

	[Token(Token = "0x40012CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly AkMarkerCallbackInfo AkMarkerCallbackInfo;

	[Token(Token = "0x40012CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly AkDurationCallbackInfo AkDurationCallbackInfo;

	[Token(Token = "0x40012D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly AkMusicSyncCallbackInfo AkMusicSyncCallbackInfo;

	[Token(Token = "0x40012D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static readonly AkMusicPlaylistCallbackInfo AkMusicPlaylistCallbackInfo;

	[Token(Token = "0x40012D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static readonly AkAudioSourceChangeCallbackInfo AkAudioSourceChangeCallbackInfo;

	[Token(Token = "0x40012D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static readonly AkMonitoringCallbackInfo AkMonitoringCallbackInfo;

	[Token(Token = "0x40012D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static readonly AkBankCallbackInfo AkBankCallbackInfo;

	[Token(Token = "0x40012D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static readonly Dictionary<int, EventCallbackPackage> m_mapEventCallbacks;

	[Token(Token = "0x40012D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static readonly Dictionary<int, BankCallbackPackage> m_mapBankCallbacks;

	[Token(Token = "0x40012D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static EventCallbackPackage m_LastAddedEventPackage;

	[Token(Token = "0x40012D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr m_pNotifMem;

	[Token(Token = "0x40012D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static MonitoringCallback m_MonitoringCB;

	[Token(Token = "0x40012DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static BGMCallbackPackage ms_sourceChangeCallbackPkg;

	[Token(Token = "0x17000172")]
	private static bool IsLoggingEnabled
	{
		[Token(Token = "0x600149A")]
		[Address(RVA = "0x16B1C28", Offset = "0x16B1C28", VA = "0x16B1C28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1E40", Offset = "0xCD1E40")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600149B")]
		[Address(RVA = "0x16B1C90", Offset = "0x16B1C90", VA = "0x16B1C90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1E50", Offset = "0xCD1E50")]
		set
		{
		}
	}

	[Token(Token = "0x600149C")]
	[Address(RVA = "0x16B1D00", Offset = "0x16B1D00", VA = "0x16B1D00")]
	public static void RemoveEventCallback(uint in_playingID)
	{
	}

	[Token(Token = "0x600149D")]
	[Address(RVA = "0x16B1F3C", Offset = "0x16B1F3C", VA = "0x16B1F3C")]
	public static void RemoveEventCallbackCookie(object in_cookie)
	{
	}

	[Token(Token = "0x600149E")]
	[Address(RVA = "0x16B219C", Offset = "0x16B219C", VA = "0x16B219C")]
	public static void RemoveBankCallback(object in_cookie)
	{
	}

	[Token(Token = "0x600149F")]
	[Address(RVA = "0x16B23FC", Offset = "0x16B23FC", VA = "0x16B23FC")]
	public static void SetLastAddedPlayingID(uint in_playingID)
	{
	}

	[Token(Token = "0x60014A0")]
	[Address(RVA = "0x16B24C4", Offset = "0x16B24C4", VA = "0x16B24C4")]
	public static AKRESULT Init(InitializationSettings settings)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60014A1")]
	[Address(RVA = "0x16B266C", Offset = "0x16B266C", VA = "0x16B266C")]
	public static void Term()
	{
	}

	[Token(Token = "0x60014A2")]
	[Address(RVA = "0x16B27A8", Offset = "0x16B27A8", VA = "0x16B27A8")]
	public static void SetMonitoringCallback(AkMonitorErrorLevel in_Level, MonitoringCallback in_CB)
	{
	}

	[Token(Token = "0x60014A3")]
	[Address(RVA = "0x16B2898", Offset = "0x16B2898", VA = "0x16B2898")]
	public static void SetBGMCallback(BGMCallback in_CB, object in_cookie)
	{
	}

	[Token(Token = "0x60014A4")]
	[Address(RVA = "0x16B2960", Offset = "0x16B2960", VA = "0x16B2960")]
	public static int PostCallbacks()
	{
		return default(int);
	}
}
[Token(Token = "0x20002E9")]
public class AkBasePlatformSettings : ScriptableObject
{
	[Token(Token = "0x17000173")]
	public virtual AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x60014A6")]
		[Address(RVA = "0x16B152C", Offset = "0x16B152C", VA = "0x16B152C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000174")]
	public virtual AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x60014A7")]
		[Address(RVA = "0x16B1588", Offset = "0x16B1588", VA = "0x16B1588", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000175")]
	public virtual AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x60014A8")]
		[Address(RVA = "0x16B15E4", Offset = "0x16B15E4", VA = "0x16B15E4", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000176")]
	public virtual string InitialLanguage
	{
		[Token(Token = "0x60014A9")]
		[Address(RVA = "0x16B16C0", Offset = "0x16B16C0", VA = "0x16B16C0", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000177")]
	public virtual bool RenderDuringFocusLoss
	{
		[Token(Token = "0x60014AA")]
		[Address(RVA = "0x16B1708", Offset = "0x16B1708", VA = "0x16B1708", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000178")]
	public virtual string SoundbankPath
	{
		[Token(Token = "0x60014AB")]
		[Address(RVA = "0x16B1710", Offset = "0x16B1710", VA = "0x16B1710", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000179")]
	public virtual AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x60014AC")]
		[Address(RVA = "0x16B1778", Offset = "0x16B1778", VA = "0x16B1778", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014AD")]
	[Address(RVA = "0x16B1854", Offset = "0x16B1854", VA = "0x16B1854")]
	public AkBasePlatformSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EA")]
public class AkCommonOutputSettings
{
	[Token(Token = "0x2000624")]
	public enum PanningRule
	{
		[Token(Token = "0x4001D9B")]
		Speakers,
		[Token(Token = "0x4001D9C")]
		Headphones
	}

	[Serializable]
	[Token(Token = "0x2000625")]
	public class ChannelConfiguration
	{
		[Token(Token = "0x20006AC")]
		public enum ChannelConfigType
		{
			[Token(Token = "0x4001F91")]
			Anonymous,
			[Token(Token = "0x4001F92")]
			Standard,
			[Token(Token = "0x4001F93")]
			Ambisonic
		}

		[Token(Token = "0x20006AD")]
		public enum ChannelMask
		{
			[Token(Token = "0x4001F95")]
			NONE = 0,
			[Token(Token = "0x4001F96")]
			FRONT_LEFT = 1,
			[Token(Token = "0x4001F97")]
			FRONT_RIGHT = 2,
			[Token(Token = "0x4001F98")]
			FRONT_CENTER = 4,
			[Token(Token = "0x4001F99")]
			LOW_FREQUENCY = 8,
			[Token(Token = "0x4001F9A")]
			BACK_LEFT = 16,
			[Token(Token = "0x4001F9B")]
			BACK_RIGHT = 32,
			[Token(Token = "0x4001F9C")]
			BACK_CENTER = 256,
			[Token(Token = "0x4001F9D")]
			SIDE_LEFT = 512,
			[Token(Token = "0x4001F9E")]
			SIDE_RIGHT = 1024,
			[Token(Token = "0x4001F9F")]
			TOP = 2048,
			[Token(Token = "0x4001FA0")]
			HEIGHT_FRONT_LEFT = 4096,
			[Token(Token = "0x4001FA1")]
			HEIGHT_FRONT_CENTER = 8192,
			[Token(Token = "0x4001FA2")]
			HEIGHT_FRONT_RIGHT = 16384,
			[Token(Token = "0x4001FA3")]
			HEIGHT_BACK_LEFT = 32768,
			[Token(Token = "0x4001FA4")]
			HEIGHT_BACK_CENTER = 65536,
			[Token(Token = "0x4001FA5")]
			HEIGHT_BACK_RIGHT = 131072,
			[Token(Token = "0x4001FA6")]
			SETUP_MONO = 4,
			[Token(Token = "0x4001FA7")]
			SETUP_0POINT1 = 8,
			[Token(Token = "0x4001FA8")]
			SETUP_1POINT1 = 12,
			[Token(Token = "0x4001FA9")]
			SETUP_STEREO = 3,
			[Token(Token = "0x4001FAA")]
			SETUP_2POINT1 = 11,
			[Token(Token = "0x4001FAB")]
			SETUP_3STEREO = 7,
			[Token(Token = "0x4001FAC")]
			SETUP_3POINT1 = 15,
			[Token(Token = "0x4001FAD")]
			SETUP_4 = 1539,
			[Token(Token = "0x4001FAE")]
			SETUP_4POINT1 = 1547,
			[Token(Token = "0x4001FAF")]
			SETUP_5 = 1543,
			[Token(Token = "0x4001FB0")]
			SETUP_5POINT1 = 1551,
			[Token(Token = "0x4001FB1")]
			SETUP_6 = 1587,
			[Token(Token = "0x4001FB2")]
			SETUP_6POINT1 = 1595,
			[Token(Token = "0x4001FB3")]
			SETUP_7 = 1591,
			[Token(Token = "0x4001FB4")]
			SETUP_7POINT1 = 1599,
			[Token(Token = "0x4001FB5")]
			SETUP_SURROUND = 259,
			[Token(Token = "0x4001FB6")]
			SETUP_DPL2 = 1539,
			[Token(Token = "0x4001FB7")]
			SETUP_HEIGHT_4 = 184320,
			[Token(Token = "0x4001FB8")]
			SETUP_HEIGHT_5 = 192512,
			[Token(Token = "0x4001FB9")]
			SETUP_HEIGHT_ALL = 258048,
			[Token(Token = "0x4001FBA")]
			SETUP_AURO_222 = 22019,
			[Token(Token = "0x4001FBB")]
			SETUP_AURO_8 = 185859,
			[Token(Token = "0x4001FBC")]
			SETUP_AURO_9 = 185863,
			[Token(Token = "0x4001FBD")]
			SETUP_AURO_9POINT1 = 185871,
			[Token(Token = "0x4001FBE")]
			SETUP_AURO_10 = 187911,
			[Token(Token = "0x4001FBF")]
			SETUP_AURO_10POINT1 = 187919,
			[Token(Token = "0x4001FC0")]
			SETUP_AURO_11 = 196103,
			[Token(Token = "0x4001FC1")]
			SETUP_AURO_11POINT1 = 196111,
			[Token(Token = "0x4001FC2")]
			SETUP_AURO_11_740 = 185911,
			[Token(Token = "0x4001FC3")]
			SETUP_AURO_11POINT1_740 = 185919,
			[Token(Token = "0x4001FC4")]
			SETUP_AURO_13_751 = 196151,
			[Token(Token = "0x4001FC5")]
			SETUP_AURO_13POINT1_751 = 196159,
			[Token(Token = "0x4001FC6")]
			SETUP_DOLBY_5_0_2 = 22023,
			[Token(Token = "0x4001FC7")]
			SETUP_DOLBY_5_1_2 = 22031,
			[Token(Token = "0x4001FC8")]
			SETUP_DOLBY_6_0_2 = 22067,
			[Token(Token = "0x4001FC9")]
			SETUP_DOLBY_6_1_2 = 22075,
			[Token(Token = "0x4001FCA")]
			SETUP_DOLBY_6_0_4 = 185907,
			[Token(Token = "0x4001FCB")]
			SETUP_DOLBY_6_1_4 = 185915,
			[Token(Token = "0x4001FCC")]
			SETUP_DOLBY_7_0_2 = 22071,
			[Token(Token = "0x4001FCD")]
			SETUP_DOLBY_7_1_2 = 22079,
			[Token(Token = "0x4001FCE")]
			SETUP_DOLBY_7_0_4 = 185911,
			[Token(Token = "0x4001FCF")]
			SETUP_DOLBY_7_1_4 = 185919,
			[Token(Token = "0x4001FD0")]
			SETUP_ALL_SPEAKERS = 261951
		}

		[Token(Token = "0x4001D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE600", Offset = "0xCCE600")]
		public ChannelConfigType m_ChannelConfigType;

		[Token(Token = "0x4001D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE638", Offset = "0xCCE638")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xCCE638", Offset = "0xCCE638")]
		public ChannelMask m_ChannelMask;

		[Token(Token = "0x4001D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE6C0", Offset = "0xCCE6C0")]
		public uint m_NumberOfChannels;

		[Token(Token = "0x6002327")]
		[Address(RVA = "0x16B6D80", Offset = "0x16B6D80", VA = "0x16B6D80")]
		public void CopyTo(AkChannelConfig config)
		{
		}

		[Token(Token = "0x6002328")]
		[Address(RVA = "0x16AA474", Offset = "0x16AA474", VA = "0x16AA474")]
		public ChannelConfiguration()
		{
		}
	}

	[Token(Token = "0x40012DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8C84", Offset = "0xCC8C84")]
	public string m_AudioDeviceShareset;

	[Token(Token = "0x40012DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8CBC", Offset = "0xCC8CBC")]
	public uint m_DeviceID;

	[Token(Token = "0x40012DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8CF4", Offset = "0xCC8CF4")]
	public PanningRule m_PanningRule;

	[Token(Token = "0x40012DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8D2C", Offset = "0xCC8D2C")]
	public ChannelConfiguration m_ChannelConfig;

	[Token(Token = "0x60014AE")]
	[Address(RVA = "0x16B6C94", Offset = "0x16B6C94", VA = "0x16B6C94")]
	public void CopyTo(AkOutputSettings settings)
	{
	}

	[Token(Token = "0x60014AF")]
	[Address(RVA = "0x16AA3E0", Offset = "0x16AA3E0", VA = "0x16AA3E0")]
	public AkCommonOutputSettings()
	{
	}
}
[Token(Token = "0x20002EB")]
public class AkSettingsValidationHandler
{
	[Token(Token = "0x60014B0")]
	[Address(RVA = "0x11D5B04", Offset = "0x11D5B04", VA = "0x11D5B04", Slot = "4")]
	public virtual void Validate()
	{
	}

	[Token(Token = "0x60014B1")]
	[Address(RVA = "0x11D5B08", Offset = "0x11D5B08", VA = "0x11D5B08")]
	public AkSettingsValidationHandler()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EC")]
public class AkCommonUserSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x2000626")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x20006AE")]
		public enum DiffractionFlags
		{
			[Token(Token = "0x4001FD2")]
			UseBuiltInParam = 1,
			[Token(Token = "0x4001FD3")]
			UseObstruction = 2,
			[Token(Token = "0x4001FD4")]
			CalcEmitterVirtualPosition = 8
		}

		[Token(Token = "0x4001DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE6F8", Offset = "0xCCE6F8")]
		public uint m_PoolSize;

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE730", Offset = "0xCCE730")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCE730", Offset = "0xCCE730")]
		public uint m_MaxSoundPropagationDepth;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE784", Offset = "0xCCE784")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xCCE784", Offset = "0xCCE784")]
		public DiffractionFlags m_DiffractionFlags;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE80C", Offset = "0xCCE80C")]
		public float m_MovementThreshold;

		[Token(Token = "0x6002329")]
		[Address(RVA = "0x16B73BC", Offset = "0x16B73BC", VA = "0x16B73BC")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x40012DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8D64", Offset = "0xCC8D64")]
	public string m_BasePath;

	[Token(Token = "0x40012E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8D9C", Offset = "0xCC8D9C")]
	public string m_StartupLanguage;

	[Token(Token = "0x40012E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8DD4", Offset = "0xCC8DD4")]
	public uint m_PreparePoolSize;

	[Token(Token = "0x40012E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8E0C", Offset = "0xCC8E0C")]
	public int m_CallbackManagerBufferSize;

	[Token(Token = "0x40012E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8E44", Offset = "0xCC8E44")]
	public bool m_EngineLogging;

	[Token(Token = "0x40012E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8E7C", Offset = "0xCC8E7C")]
	public uint m_MaximumNumberOfMemoryPools;

	[Token(Token = "0x40012E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8EB4", Offset = "0xCC8EB4")]
	public uint m_MaximumNumberOfPositioningPaths;

	[Token(Token = "0x40012E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8EEC", Offset = "0xCC8EEC")]
	public uint m_DefaultPoolSize;

	[Token(Token = "0x40012E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8F24", Offset = "0xCC8F24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC8F24", Offset = "0xCC8F24")]
	public float m_MemoryCutoffThreshold;

	[Token(Token = "0x40012E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8F78", Offset = "0xCC8F78")]
	public uint m_CommandQueueSize;

	[Token(Token = "0x40012E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8FB0", Offset = "0xCC8FB0")]
	public uint m_SamplesPerFrame;

	[Token(Token = "0x40012EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC8FE8", Offset = "0xCC8FE8")]
	public AkCommonOutputSettings m_MainOutputSettings;

	[Token(Token = "0x40012EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9020", Offset = "0xCC9020")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC9020", Offset = "0xCC9020")]
	public float m_StreamingLookAheadRatio;

	[Token(Token = "0x40012EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9074", Offset = "0xCC9074")]
	public uint m_StreamManagerPoolSize;

	[Token(Token = "0x40012ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC90AC", Offset = "0xCC90AC")]
	public uint m_SampleRate;

	[Token(Token = "0x40012EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC90E4", Offset = "0xCC90E4")]
	public uint m_LowerEnginePoolSize;

	[Token(Token = "0x40012EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC911C", Offset = "0xCC911C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC911C", Offset = "0xCC911C")]
	public float m_LowerEngineMemoryCutoffThreshold;

	[Token(Token = "0x40012F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9170", Offset = "0xCC9170")]
	public ushort m_NumberOfRefillsInVoice;

	[Token(Token = "0x40012F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC91A8", Offset = "0xCC91A8")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x60014B2")]
	[Address(RVA = "0x16B6FC0", Offset = "0x16B6FC0", VA = "0x16B6FC0")]
	public void CopyTo(AkMemSettings settings)
	{
	}

	[Token(Token = "0x60014B3")]
	[Address(RVA = "0x16B7200", Offset = "0x16B7200", VA = "0x16B7200")]
	protected static string GetPluginPath()
	{
		return null;
	}

	[Token(Token = "0x60014B4")]
	[Address(RVA = "0x16B7208", Offset = "0x16B7208", VA = "0x16B7208", Slot = "5")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x60014B5")]
	[Address(RVA = "0x16B7008", Offset = "0x16B7008", VA = "0x16B7008")]
	public void CopyTo(AkMusicSettings settings)
	{
	}

	[Token(Token = "0x60014B6")]
	[Address(RVA = "0x16B6FE4", Offset = "0x16B6FE4", VA = "0x16B6FE4")]
	public void CopyTo(AkStreamMgrSettings settings)
	{
	}

	[Token(Token = "0x60014B7")]
	[Address(RVA = "0x16B72AC", Offset = "0x16B72AC", VA = "0x16B72AC", Slot = "6")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x60014B8")]
	[Address(RVA = "0x16B72B0", Offset = "0x16B72B0", VA = "0x16B72B0", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x60014B9")]
	[Address(RVA = "0x16B7314", Offset = "0x16B7314", VA = "0x16B7314", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x60014BA")]
	[Address(RVA = "0x16B7398", Offset = "0x16B7398", VA = "0x16B7398", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x60014BB")]
	[Address(RVA = "0x16B739C", Offset = "0x16B739C", VA = "0x16B739C", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x60014BC")]
	[Address(RVA = "0x16AA2C4", Offset = "0x16AA2C4", VA = "0x16AA2C4")]
	public AkCommonUserSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20002ED")]
public class AkCommonAdvancedSettings : AkSettingsValidationHandler
{
	[Serializable]
	[Token(Token = "0x2000627")]
	public class SpatialAudioSettings
	{
		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE844", Offset = "0xCCE844")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCE844", Offset = "0xCCE844")]
		public float m_DiffractionShadowAttenuationFactor;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE898", Offset = "0xCCE898")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCE898", Offset = "0xCCE898")]
		public float m_DiffractionShadowDegrees;

		[Token(Token = "0x600232A")]
		[Address(RVA = "0x16B6830", Offset = "0x16B6830", VA = "0x16B6830")]
		public SpatialAudioSettings()
		{
		}
	}

	[Token(Token = "0x40012F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC91E0", Offset = "0xCC91E0")]
	public uint m_IOMemorySize;

	[Token(Token = "0x40012F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9218", Offset = "0xCC9218")]
	public float m_TargetAutoStreamBufferLengthMs;

	[Token(Token = "0x40012F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9250", Offset = "0xCC9250")]
	public bool m_UseStreamCache;

	[Token(Token = "0x40012F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9288", Offset = "0xCC9288")]
	public uint m_MaximumPinnedBytesInCache;

	[Token(Token = "0x40012F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC92C0", Offset = "0xCC92C0")]
	public int m_PrepareEventMemoryPoolID;

	[Token(Token = "0x40012F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC92F8", Offset = "0xCC92F8")]
	public bool m_EnableGameSyncPreparation;

	[Token(Token = "0x40012F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9330", Offset = "0xCC9330")]
	public uint m_ContinuousPlaybackLookAhead;

	[Token(Token = "0x40012F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9368", Offset = "0xCC9368")]
	public uint m_MonitorPoolSize;

	[Token(Token = "0x40012FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC93A0", Offset = "0xCC93A0")]
	public uint m_MonitorQueuePoolSize;

	[Token(Token = "0x40012FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC93D8", Offset = "0xCC93D8")]
	public uint m_MaximumHardwareTimeoutMs;

	[Token(Token = "0x40012FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9410", Offset = "0xCC9410")]
	public SpatialAudioSettings m_SpatialAudioSettings;

	[Token(Token = "0x40012FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9448", Offset = "0xCC9448")]
	public bool m_RenderDuringFocusLoss;

	[Token(Token = "0x60014BD")]
	[Address(RVA = "0x16B6418", Offset = "0x16B6418", VA = "0x16B6418", Slot = "5")]
	public virtual void CopyTo(AkDeviceSettings settings)
	{
	}

	[Token(Token = "0x60014BE")]
	[Address(RVA = "0x16B665C", Offset = "0x16B665C", VA = "0x16B665C", Slot = "6")]
	public virtual void CopyTo(AkInitSettings settings)
	{
	}

	[Token(Token = "0x60014BF")]
	[Address(RVA = "0x16B66E0", Offset = "0x16B66E0", VA = "0x16B66E0", Slot = "7")]
	public virtual void CopyTo(AkPlatformInitSettings settings)
	{
	}

	[Token(Token = "0x60014C0")]
	[Address(RVA = "0x16B66E4", Offset = "0x16B66E4", VA = "0x16B66E4", Slot = "8")]
	public virtual void CopyTo(AkSpatialAudioInitSettings settings)
	{
	}

	[Token(Token = "0x60014C1")]
	[Address(RVA = "0x16B6738", Offset = "0x16B6738", VA = "0x16B6738", Slot = "9")]
	public virtual void CopyTo(AkUnityPlatformSpecificSettings settings)
	{
	}

	[Token(Token = "0x60014C2")]
	[Address(RVA = "0x16B673C", Offset = "0x16B673C", VA = "0x16B673C", Slot = "4")]
	public override void Validate()
	{
	}

	[Token(Token = "0x60014C3")]
	[Address(RVA = "0x16AA4E8", Offset = "0x16AA4E8", VA = "0x16AA4E8")]
	public AkCommonAdvancedSettings()
	{
	}
}
[Serializable]
[Token(Token = "0x20002EE")]
public class AkCommonCommSettings : AkSettingsValidationHandler
{
	[Token(Token = "0x40012FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9480", Offset = "0xCC9480")]
	public uint m_PoolSize;

	[Token(Token = "0x40012FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ushort DefaultDiscoveryBroadcastPort;

	[Token(Token = "0x4001300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC94B8", Offset = "0xCC94B8")]
	public ushort m_DiscoveryBroadcastPort;

	[Token(Token = "0x4001301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC94F0", Offset = "0xCC94F0")]
	public ushort m_CommandPort;

	[Token(Token = "0x4001302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9528", Offset = "0xCC9528")]
	public ushort m_NotificationPort;

	[Token(Token = "0x4001303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9560", Offset = "0xCC9560")]
	public bool m_InitializeSystemComms;

	[Token(Token = "0x4001304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9598", Offset = "0xCC9598")]
	public string m_NetworkName;

	[Token(Token = "0x60014C4")]
	[Address(RVA = "0x16B6844", Offset = "0x16B6844", VA = "0x16B6844", Slot = "5")]
	public virtual void CopyTo(AkCommunicationSettings settings)
	{
	}

	[Token(Token = "0x60014C5")]
	[Address(RVA = "0x16B6BB8", Offset = "0x16B6BB8", VA = "0x16B6BB8")]
	public AkCommonCommSettings()
	{
	}
}
[Token(Token = "0x20002EF")]
public abstract class AkCommonPlatformSettings : AkBasePlatformSettings
{
	[Token(Token = "0x1700017A")]
	public override AkInitializationSettings AkInitializationSettings
	{
		[Token(Token = "0x60014CA")]
		[Address(RVA = "0x16B6DF4", Offset = "0x16B6DF4", VA = "0x16B6DF4", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017B")]
	public override AkSpatialAudioInitSettings AkSpatialAudioInitSettings
	{
		[Token(Token = "0x60014CB")]
		[Address(RVA = "0x16B7028", Offset = "0x16B7028", VA = "0x16B7028", Slot = "5")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017C")]
	public override AkCallbackManager.InitializationSettings CallbackManagerInitializationSettings
	{
		[Token(Token = "0x60014CC")]
		[Address(RVA = "0x16B709C", Offset = "0x16B709C", VA = "0x16B709C", Slot = "6")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017D")]
	public override string InitialLanguage
	{
		[Token(Token = "0x60014CD")]
		[Address(RVA = "0x16B712C", Offset = "0x16B712C", VA = "0x16B712C", Slot = "7")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700017E")]
	public override bool RenderDuringFocusLoss
	{
		[Token(Token = "0x60014CE")]
		[Address(RVA = "0x16B7154", Offset = "0x16B7154", VA = "0x16B7154", Slot = "8")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700017F")]
	public override string SoundbankPath
	{
		[Token(Token = "0x60014CF")]
		[Address(RVA = "0x16B717C", Offset = "0x16B717C", VA = "0x16B717C", Slot = "9")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000180")]
	public override AkCommunicationSettings AkCommunicationSettings
	{
		[Token(Token = "0x60014D0")]
		[Address(RVA = "0x16B71A4", Offset = "0x16B71A4", VA = "0x16B71A4", Slot = "10")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014C7")]
	protected abstract AkCommonUserSettings GetUserSettings();

	[Token(Token = "0x60014C8")]
	protected abstract AkCommonAdvancedSettings GetAdvancedSettings();

	[Token(Token = "0x60014C9")]
	protected abstract AkCommonCommSettings GetCommsSettings();

	[Token(Token = "0x60014D1")]
	[Address(RVA = "0x16B71F8", Offset = "0x16B71F8", VA = "0x16B71F8")]
	protected AkCommonPlatformSettings()
	{
	}
}
[Token(Token = "0x20002F0")]
[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0xCB9BE0", Offset = "0xCB9BE0")]
public class AkEnumFlagAttribute : PropertyAttribute
{
	[Token(Token = "0x4001305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Type Type;

	[Token(Token = "0x60014D2")]
	[Address(RVA = "0x16BAC6C", Offset = "0x16BAC6C", VA = "0x16BAC6C")]
	public AkEnumFlagAttribute(Type type)
	{
	}
}
[Token(Token = "0x20002F1")]
public class AkLogger
{
	[Token(Token = "0x2000628")]
	[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0xCBF698", Offset = "0xCBF698")]
	public delegate void ErrorLoggerInteropDelegate(string message);

	[Token(Token = "0x4001306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkLogger ms_Instance;

	[Token(Token = "0x4001307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private ErrorLoggerInteropDelegate errorLoggerDelegate;

	[Token(Token = "0x17000181")]
	public static AkLogger Instance
	{
		[Token(Token = "0x60014D4")]
		[Address(RVA = "0x1C826CC", Offset = "0x1C826CC", VA = "0x1C826CC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014D3")]
	[Address(RVA = "0x1C82590", Offset = "0x1C82590", VA = "0x1C82590")]
	private AkLogger()
	{
	}

	[Token(Token = "0x60014D5")]
	[Address(RVA = "0x1C82734", Offset = "0x1C82734", VA = "0x1C82734", Slot = "1")]
	~AkLogger()
	{
	}

	[Token(Token = "0x60014D6")]
	[Address(RVA = "0x1C82854", Offset = "0x1C82854", VA = "0x1C82854")]
	public void Init()
	{
	}

	[Token(Token = "0x60014D7")]
	[Address(RVA = "0x1C82508", Offset = "0x1C82508", VA = "0x1C82508")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCD1E60", Offset = "0xCD1E60")]
	public static void WwiseInternalLogError(string message)
	{
	}

	[Token(Token = "0x60014D8")]
	[Address(RVA = "0x1C82858", Offset = "0x1C82858", VA = "0x1C82858")]
	public static void Message(string message)
	{
	}

	[Token(Token = "0x60014D9")]
	[Address(RVA = "0x1C828E0", Offset = "0x1C828E0", VA = "0x1C828E0")]
	public static void Warning(string message)
	{
	}

	[Token(Token = "0x60014DA")]
	[Address(RVA = "0x1C82968", Offset = "0x1C82968", VA = "0x1C82968")]
	public static void Error(string message)
	{
	}
}
[Token(Token = "0x20002F2")]
public static class AkRoomPortalManager
{
	[Token(Token = "0x4001308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly List<AkRoom> m_UpdatedRooms;

	[Token(Token = "0x4001309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly List<AkRoomPortal> m_Portals;

	[Token(Token = "0x400130A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly List<AkRoomPortal> m_PortalsToUpdate;

	[Token(Token = "0x60014DC")]
	[Address(RVA = "0x11D2E5C", Offset = "0x11D2E5C", VA = "0x11D2E5C")]
	public static void RegisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x60014DD")]
	[Address(RVA = "0x11D30C4", Offset = "0x11D30C4", VA = "0x11D30C4")]
	public static void UnregisterPortal(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x60014DE")]
	[Address(RVA = "0x11D21C4", Offset = "0x11D21C4", VA = "0x11D21C4")]
	public static void RegisterPortalUpdate(AkRoomPortal portal)
	{
	}

	[Token(Token = "0x60014DF")]
	[Address(RVA = "0x11D36DC", Offset = "0x11D36DC", VA = "0x11D36DC")]
	public static void RegisterRoomUpdate(AkRoom room)
	{
	}

	[Token(Token = "0x60014E0")]
	[Address(RVA = "0x11D3960", Offset = "0x11D3960", VA = "0x11D3960")]
	public static void UpdatePortals()
	{
	}
}
[Token(Token = "0x20002F3")]
public class AkShowOnlyAttribute : PropertyAttribute
{
	[Token(Token = "0x60014E2")]
	[Address(RVA = "0x11D5B10", Offset = "0x11D5B10", VA = "0x11D5B10")]
	public AkShowOnlyAttribute()
	{
	}
}
[Token(Token = "0x20002F4")]
public class AkUtilities
{
	[Token(Token = "0x2000629")]
	public class ShortIDGenerator
	{
		[Token(Token = "0x4001DA6")]
		private const uint s_prime32 = 16777619u;

		[Token(Token = "0x4001DA7")]
		private const uint s_offsetBasis32 = 2166136261u;

		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static byte s_hashSize;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static uint s_mask;

		[Token(Token = "0x170003AE")]
		public static byte HashSize
		{
			[Token(Token = "0x6002330")]
			[Address(RVA = "0x12109E0", Offset = "0x12109E0", VA = "0x12109E0")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6002331")]
			[Address(RVA = "0x1210958", Offset = "0x1210958", VA = "0x1210958")]
			set
			{
			}
		}

		[Token(Token = "0x600232F")]
		[Address(RVA = "0x1210950", Offset = "0x1210950", VA = "0x1210950")]
		static ShortIDGenerator()
		{
		}

		[Token(Token = "0x6002332")]
		[Address(RVA = "0x120EFF8", Offset = "0x120EFF8", VA = "0x120EFF8")]
		public static uint Compute(string in_name)
		{
			return default(uint);
		}

		[Token(Token = "0x6002333")]
		[Address(RVA = "0x1210A48", Offset = "0x1210A48", VA = "0x1210A48")]
		public ShortIDGenerator()
		{
		}
	}

	[Token(Token = "0x60014E3")]
	[Address(RVA = "0x1210948", Offset = "0x1210948", VA = "0x1210948")]
	public AkUtilities()
	{
	}
}
[Token(Token = "0x20002F5")]
public class AkWwiseInitializationSettings : AkCommonPlatformSettings
{
	[Token(Token = "0x200062A")]
	public abstract class PlatformSettings : AkCommonPlatformSettings
	{
		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private List<string> IgnorePropertyNameList;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		private List<string> GlobalPropertyNameList;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<string> _GlobalPropertyHashSet;

		[Token(Token = "0x170003AF")]
		public HashSet<string> GlobalPropertyHashSet
		{
			[Token(Token = "0x600233A")]
			[Address(RVA = "0x1213B54", Offset = "0x1213B54", VA = "0x1213B54")]
			get
			{
				return null;
			}
			[Token(Token = "0x600233B")]
			[Address(RVA = "0x1213BE8", Offset = "0x1213BE8", VA = "0x1213BE8")]
			set
			{
			}
		}

		[Token(Token = "0x6002334")]
		[Address(RVA = "0x1213668", Offset = "0x1213668", VA = "0x1213668")]
		public void IgnorePropertyValue(string propertyPath)
		{
		}

		[Token(Token = "0x6002335")]
		[Address(RVA = "0x1213700", Offset = "0x1213700", VA = "0x1213700")]
		public bool IsPropertyIgnored(string propertyPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6002336")]
		[Address(RVA = "0x1211820", Offset = "0x1211820", VA = "0x1211820")]
		protected PlatformSettings()
		{
		}

		[Token(Token = "0x6002337")]
		[Address(RVA = "0x1213768", Offset = "0x1213768", VA = "0x1213768")]
		public void SetUseGlobalPropertyValue(string propertyPath, bool use)
		{
		}

		[Token(Token = "0x6002338")]
		[Address(RVA = "0x1213824", Offset = "0x1213824", VA = "0x1213824")]
		public void SetGlobalPropertyValues(IEnumerable enumerable)
		{
		}

		[Token(Token = "0x6002339")]
		[Address(RVA = "0x1213AEC", Offset = "0x1213AEC", VA = "0x1213AEC")]
		private bool IsUsingGlobalPropertyValue(string propertyPath)
		{
			return default(bool);
		}
	}

	[Token(Token = "0x200062B")]
	public class CommonPlatformSettings : PlatformSettings
	{
		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public AkCommonUserSettings UserSettings;

		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public AkCommonAdvancedSettings AdvancedSettings;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public AkCommonCommSettings CommsSettings;

		[Token(Token = "0x600233C")]
		[Address(RVA = "0x121364C", Offset = "0x121364C", VA = "0x121364C", Slot = "11")]
		protected override AkCommonUserSettings GetUserSettings()
		{
			return null;
		}

		[Token(Token = "0x600233D")]
		[Address(RVA = "0x1213654", Offset = "0x1213654", VA = "0x1213654", Slot = "12")]
		protected override AkCommonAdvancedSettings GetAdvancedSettings()
		{
			return null;
		}

		[Token(Token = "0x600233E")]
		[Address(RVA = "0x121365C", Offset = "0x121365C", VA = "0x121365C", Slot = "13")]
		protected override AkCommonCommSettings GetCommsSettings()
		{
			return null;
		}

		[Token(Token = "0x600233F")]
		[Address(RVA = "0x1213664", Offset = "0x1213664", VA = "0x1213664")]
		public CommonPlatformSettings()
		{
		}
	}

	[Token(Token = "0x400130B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<string> PlatformSettingsNameList;

	[Token(Token = "0x400130C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<PlatformSettings> PlatformSettingsList;

	[Token(Token = "0x400130D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public List<string> InvalidReferencePlatforms;

	[Token(Token = "0x400130E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x400130F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public AkCommonAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x4001311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string[] AllGlobalValues;

	[Token(Token = "0x4001312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static AkWwiseInitializationSettings m_Instance;

	[Token(Token = "0x4001313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static AkBasePlatformSettings m_ActivePlatformSettings;

	[Token(Token = "0x17000182")]
	public bool IsValid
	{
		[Token(Token = "0x60014E4")]
		[Address(RVA = "0x1211918", Offset = "0x1211918", VA = "0x1211918")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000183")]
	public int Count
	{
		[Token(Token = "0x60014E5")]
		[Address(RVA = "0x121197C", Offset = "0x121197C", VA = "0x121197C")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000184")]
	public static AkWwiseInitializationSettings Instance
	{
		[Token(Token = "0x60014E9")]
		[Address(RVA = "0x12119E4", Offset = "0x12119E4", VA = "0x12119E4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000185")]
	public static AkBasePlatformSettings ActivePlatformSettings
	{
		[Token(Token = "0x60014EB")]
		[Address(RVA = "0x1211CD0", Offset = "0x1211CD0", VA = "0x1211CD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60014E6")]
	[Address(RVA = "0x12119CC", Offset = "0x12119CC", VA = "0x12119CC", Slot = "11")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x60014E7")]
	[Address(RVA = "0x12119D4", Offset = "0x12119D4", VA = "0x12119D4", Slot = "12")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x60014E8")]
	[Address(RVA = "0x12119DC", Offset = "0x12119DC", VA = "0x12119DC", Slot = "13")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x60014EA")]
	[Address(RVA = "0x1211B20", Offset = "0x1211B20", VA = "0x1211B20")]
	private static AkBasePlatformSettings GetPlatformSettings(string platformName)
	{
		return null;
	}

	[Token(Token = "0x60014EC")]
	[Address(RVA = "0x1211DFC", Offset = "0x1211DFC", VA = "0x1211DFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60014ED")]
	[Address(RVA = "0x1211F70", Offset = "0x1211F70", VA = "0x1211F70")]
	public static bool InitializeSoundEngine()
	{
		return default(bool);
	}

	[Token(Token = "0x60014EE")]
	[Address(RVA = "0x1212454", Offset = "0x1212454", VA = "0x1212454")]
	public static bool ResetSoundEngine(bool isPlaying)
	{
		return default(bool);
	}

	[Token(Token = "0x60014EF")]
	[Address(RVA = "0x121255C", Offset = "0x121255C", VA = "0x121255C")]
	public static void TerminateSoundEngine()
	{
	}

	[Token(Token = "0x60014F0")]
	[Address(RVA = "0x1212710", Offset = "0x1212710", VA = "0x1212710")]
	private static void SleepForMilliseconds(double milliseconds)
	{
	}

	[Token(Token = "0x60014F1")]
	[Address(RVA = "0x121287C", Offset = "0x121287C", VA = "0x121287C")]
	public AkWwiseInitializationSettings()
	{
	}
}
[Token(Token = "0x20002F6")]
public class AkAcousticSurfaceArray : AkBaseArray<AkAcousticSurface>
{
	[Token(Token = "0x17000186")]
	protected override int StructureSize
	{
		[Token(Token = "0x60014F4")]
		[Address(RVA = "0x16A8E54", Offset = "0x16A8E54", VA = "0x16A8E54", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60014F3")]
	[Address(RVA = "0x16A8DF4", Offset = "0x16A8DF4", VA = "0x16A8DF4")]
	public AkAcousticSurfaceArray(int count)
	{
	}

	[Token(Token = "0x60014F5")]
	[Address(RVA = "0x16A8EB4", Offset = "0x16A8EB4", VA = "0x16A8EB4", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x60014F6")]
	[Address(RVA = "0x16A8F1C", Offset = "0x16A8F1C", VA = "0x16A8F1C", Slot = "9")]
	protected override AkAcousticSurface CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x60014F7")]
	[Address(RVA = "0x16A8F84", Offset = "0x16A8F84", VA = "0x16A8F84", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkAcousticSurface other)
	{
	}
}
[Token(Token = "0x20002F7")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCB9C18", Offset = "0xCB9C18")]
public class AkAuxSendArray : IDisposable
{
	[Token(Token = "0x4001314")]
	private const int MAX_COUNT = 4;

	[Token(Token = "0x4001315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int SIZE_OF_AKAUXSENDVALUE;

	[Token(Token = "0x4001316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x4001317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_Count;

	[Token(Token = "0x17000187")]
	public AkAuxSendValue Item
	{
		[Token(Token = "0x60014F9")]
		[Address(RVA = "0x16AE2F4", Offset = "0x16AE2F4", VA = "0x16AE2F4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000188")]
	public bool isFull
	{
		[Token(Token = "0x60014FA")]
		[Address(RVA = "0x16AE454", Offset = "0x16AE454", VA = "0x16AE454")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x60014F8")]
	[Address(RVA = "0x16AE244", Offset = "0x16AE244", VA = "0x16AE244")]
	public AkAuxSendArray()
	{
	}

	[Token(Token = "0x60014FB")]
	[Address(RVA = "0x16AE4BC", Offset = "0x16AE4BC", VA = "0x16AE4BC", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60014FC")]
	[Address(RVA = "0x16AE548", Offset = "0x16AE548", VA = "0x16AE548", Slot = "1")]
	~AkAuxSendArray()
	{
	}

	[Token(Token = "0x60014FD")]
	[Address(RVA = "0x16AE5B0", Offset = "0x16AE5B0", VA = "0x16AE5B0")]
	public void Reset()
	{
	}

	[Token(Token = "0x60014FE")]
	[Address(RVA = "0x16AE5B8", Offset = "0x16AE5B8", VA = "0x16AE5B8")]
	public bool Add(GameObject in_listenerGameObj, uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x60014FF")]
	[Address(RVA = "0x16AE6D0", Offset = "0x16AE6D0", VA = "0x16AE6D0")]
	public bool Add(uint in_AuxBusID, float in_fValue)
	{
		return default(bool);
	}

	[Token(Token = "0x6001500")]
	[Address(RVA = "0x16AE7B0", Offset = "0x16AE7B0", VA = "0x16AE7B0")]
	public bool Contains(GameObject in_listenerGameObj, uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001501")]
	[Address(RVA = "0x16AE8F0", Offset = "0x16AE8F0", VA = "0x16AE8F0")]
	public bool Contains(uint in_AuxBusID)
	{
		return default(bool);
	}

	[Token(Token = "0x6001502")]
	[Address(RVA = "0x16AE9E8", Offset = "0x16AE9E8", VA = "0x16AE9E8")]
	public AKRESULT SetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001503")]
	[Address(RVA = "0x16AEAA0", Offset = "0x16AEAA0", VA = "0x16AEAA0")]
	public AKRESULT GetValues(GameObject gameObject)
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x6001504")]
	[Address(RVA = "0x16AEB68", Offset = "0x16AEB68", VA = "0x16AEB68")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001505")]
	[Address(RVA = "0x16AEB70", Offset = "0x16AEB70", VA = "0x16AEB70")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x6001506")]
	[Address(RVA = "0x16AE3D8", Offset = "0x16AE3D8", VA = "0x16AE3D8")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20002F8")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCB9C50", Offset = "0xCB9C50")]
public abstract class AkBaseArray<T> : IDisposable
{
	[Token(Token = "0x4001318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC9630", Offset = "0xCC9630")]
	private int <Capacity>k__BackingField;

	[Token(Token = "0x4001319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private IntPtr m_Buffer;

	[Token(Token = "0x17000189")]
	public int Capacity
	{
		[Token(Token = "0x600150A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1EC4", Offset = "0xCD1EC4")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x600150B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1ED4", Offset = "0xCD1ED4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700018A")]
	protected abstract int StructureSize
	{
		[Token(Token = "0x600150D")]
		get;
	}

	[Token(Token = "0x1700018B")]
	public T Item
	{
		[Token(Token = "0x6001512")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x6001513")]
		set
		{
		}
	}

	[Token(Token = "0x6001507")]
	public AkBaseArray(int capacity)
	{
	}

	[Token(Token = "0x6001508")]
	public void Dispose()
	{
	}

	[Token(Token = "0x6001509")]
	~AkBaseArray()
	{
	}

	[Token(Token = "0x600150C")]
	public virtual int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600150E")]
	protected virtual void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x600150F")]
	protected virtual void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001510")]
	protected abstract T CreateNewReferenceFromIntPtr(IntPtr address);

	[Token(Token = "0x6001511")]
	protected abstract void CloneIntoReferenceFromIntPtr(IntPtr address, T other);

	[Token(Token = "0x6001514")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x6001515")]
	protected IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20002F9")]
public class AkChannelEmitterArray : IDisposable
{
	[Token(Token = "0x400131A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x400131B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x400131C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x400131D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC9640", Offset = "0xCC9640")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x1700018C")]
	public uint Count
	{
		[Token(Token = "0x6001517")]
		[Address(RVA = "0x16B5F1C", Offset = "0x16B5F1C", VA = "0x16B5F1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1EE4", Offset = "0xCD1EE4")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x6001518")]
		[Address(RVA = "0x16B5F24", Offset = "0x16B5F24", VA = "0x16B5F24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1EF4", Offset = "0xCD1EF4")]
		private set
		{
		}
	}

	[Token(Token = "0x6001516")]
	[Address(RVA = "0x16B5E8C", Offset = "0x16B5E8C", VA = "0x16B5E8C")]
	public AkChannelEmitterArray(uint in_Count)
	{
	}

	[Token(Token = "0x6001519")]
	[Address(RVA = "0x16B5F2C", Offset = "0x16B5F2C", VA = "0x16B5F2C", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600151A")]
	[Address(RVA = "0x16B5FB8", Offset = "0x16B5FB8", VA = "0x16B5FB8", Slot = "1")]
	~AkChannelEmitterArray()
	{
	}

	[Token(Token = "0x600151B")]
	[Address(RVA = "0x16B6020", Offset = "0x16B6020", VA = "0x16B6020")]
	public void Reset()
	{
	}

	[Token(Token = "0x600151C")]
	[Address(RVA = "0x16B6030", Offset = "0x16B6030", VA = "0x16B6030")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top, uint in_ChannelMask)
	{
	}
}
[Token(Token = "0x20002FA")]
public class AkDiffractionPathInfoArray : AkBaseArray<AkDiffractionPathInfo>
{
	[Token(Token = "0x1700018D")]
	protected override int StructureSize
	{
		[Token(Token = "0x600151E")]
		[Address(RVA = "0x16B8FCC", Offset = "0x16B8FCC", VA = "0x16B8FCC", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600151D")]
	[Address(RVA = "0x16B8F6C", Offset = "0x16B8F6C", VA = "0x16B8F6C")]
	public AkDiffractionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x600151F")]
	[Address(RVA = "0x16B902C", Offset = "0x16B902C", VA = "0x16B902C", Slot = "9")]
	protected override AkDiffractionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001520")]
	[Address(RVA = "0x16B9094", Offset = "0x16B9094", VA = "0x16B9094", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkDiffractionPathInfo other)
	{
	}
}
[Token(Token = "0x20002FB")]
public class AkExternalSourceInfoArray : AkBaseArray<AkExternalSourceInfo>
{
	[Token(Token = "0x1700018E")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001522")]
		[Address(RVA = "0x1C7C7A0", Offset = "0x1C7C7A0", VA = "0x1C7C7A0", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001521")]
	[Address(RVA = "0x1C7C740", Offset = "0x1C7C740", VA = "0x1C7C740")]
	public AkExternalSourceInfoArray(int count)
	{
	}

	[Token(Token = "0x6001523")]
	[Address(RVA = "0x1C7C800", Offset = "0x1C7C800", VA = "0x1C7C800", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001524")]
	[Address(RVA = "0x1C7C868", Offset = "0x1C7C868", VA = "0x1C7C868", Slot = "8")]
	protected override void ReleaseAllocatedMemoryFromReferenceAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001525")]
	[Address(RVA = "0x1C7C8D4", Offset = "0x1C7C8D4", VA = "0x1C7C8D4", Slot = "9")]
	protected override AkExternalSourceInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001526")]
	[Address(RVA = "0x1C7C93C", Offset = "0x1C7C93C", VA = "0x1C7C93C", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkExternalSourceInfo other)
	{
	}
}
[Token(Token = "0x20002FC")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCB9C88", Offset = "0xCB9C88")]
public class AkMIDIPostArray
{
	[Token(Token = "0x400131E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly int m_Count;

	[Token(Token = "0x400131F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private readonly int SIZE_OF;

	[Token(Token = "0x4001320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Buffer;

	[Token(Token = "0x1700018F")]
	public AkMIDIPost Item
	{
		[Token(Token = "0x6001528")]
		[Address(RVA = "0x1C875AC", Offset = "0x1C875AC", VA = "0x1C875AC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001529")]
		[Address(RVA = "0x1C876C8", Offset = "0x1C876C8", VA = "0x1C876C8")]
		set
		{
		}
	}

	[Token(Token = "0x6001527")]
	[Address(RVA = "0x1C874EC", Offset = "0x1C874EC", VA = "0x1C874EC")]
	public AkMIDIPostArray(int size)
	{
	}

	[Token(Token = "0x600152A")]
	[Address(RVA = "0x1C877DC", Offset = "0x1C877DC", VA = "0x1C877DC", Slot = "1")]
	~AkMIDIPostArray()
	{
	}

	[Token(Token = "0x600152B")]
	[Address(RVA = "0x1C87898", Offset = "0x1C87898", VA = "0x1C87898")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject)
	{
	}

	[Token(Token = "0x600152C")]
	[Address(RVA = "0x1C87964", Offset = "0x1C87964", VA = "0x1C87964")]
	public void PostOnEvent(uint in_eventID, GameObject gameObject, int count)
	{
	}

	[Token(Token = "0x600152D")]
	[Address(RVA = "0x1C87A80", Offset = "0x1C87A80", VA = "0x1C87A80")]
	public IntPtr GetBuffer()
	{
		return default(IntPtr);
	}

	[Token(Token = "0x600152E")]
	[Address(RVA = "0x1C87A88", Offset = "0x1C87A88", VA = "0x1C87A88")]
	public int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600152F")]
	[Address(RVA = "0x1C8768C", Offset = "0x1C8768C", VA = "0x1C8768C")]
	private IntPtr GetObjectPtr(int index)
	{
		return default(IntPtr);
	}
}
[Token(Token = "0x20002FD")]
public class AkObjectInfoArray : AkBaseArray<AkObjectInfo>
{
	[Token(Token = "0x17000190")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001531")]
		[Address(RVA = "0x1C8AAC8", Offset = "0x1C8AAC8", VA = "0x1C8AAC8", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001530")]
	[Address(RVA = "0x1C8AA68", Offset = "0x1C8AA68", VA = "0x1C8AA68")]
	public AkObjectInfoArray(int count)
	{
	}

	[Token(Token = "0x6001532")]
	[Address(RVA = "0x1C8AB28", Offset = "0x1C8AB28", VA = "0x1C8AB28", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001533")]
	[Address(RVA = "0x1C8AB90", Offset = "0x1C8AB90", VA = "0x1C8AB90", Slot = "9")]
	protected override AkObjectInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001534")]
	[Address(RVA = "0x1C8ABF8", Offset = "0x1C8ABF8", VA = "0x1C8ABF8", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObjectInfo other)
	{
	}
}
[Token(Token = "0x20002FE")]
public class AkObstructionOcclusionValuesArray : AkBaseArray<AkObstructionOcclusionValues>
{
	[Token(Token = "0x17000191")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001536")]
		[Address(RVA = "0x1C8BE8C", Offset = "0x1C8BE8C", VA = "0x1C8BE8C", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001535")]
	[Address(RVA = "0x1C8BE2C", Offset = "0x1C8BE2C", VA = "0x1C8BE2C")]
	public AkObstructionOcclusionValuesArray(int count)
	{
	}

	[Token(Token = "0x6001537")]
	[Address(RVA = "0x1C8BEEC", Offset = "0x1C8BEEC", VA = "0x1C8BEEC", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001538")]
	[Address(RVA = "0x1C8BF54", Offset = "0x1C8BF54", VA = "0x1C8BF54", Slot = "9")]
	protected override AkObstructionOcclusionValues CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001539")]
	[Address(RVA = "0x1C8BFBC", Offset = "0x1C8BFBC", VA = "0x1C8BFBC", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkObstructionOcclusionValues other)
	{
	}
}
[Token(Token = "0x20002FF")]
public class AkPositionArray : IDisposable
{
	[Token(Token = "0x4001321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public IntPtr m_Buffer;

	[Token(Token = "0x4001322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private IntPtr m_Current;

	[Token(Token = "0x4001323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private uint m_MaxCount;

	[Token(Token = "0x4001324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC9650", Offset = "0xCC9650")]
	private uint <Count>k__BackingField;

	[Token(Token = "0x17000192")]
	public uint Count
	{
		[Token(Token = "0x600153B")]
		[Address(RVA = "0x1C8FF54", Offset = "0x1C8FF54", VA = "0x1C8FF54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1F04", Offset = "0xCD1F04")]
		get
		{
			return default(uint);
		}
		[Token(Token = "0x600153C")]
		[Address(RVA = "0x1C8FF5C", Offset = "0x1C8FF5C", VA = "0x1C8FF5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1F14", Offset = "0xCD1F14")]
		private set
		{
		}
	}

	[Token(Token = "0x600153A")]
	[Address(RVA = "0x1C8FEC4", Offset = "0x1C8FEC4", VA = "0x1C8FEC4")]
	public AkPositionArray(uint in_Count)
	{
	}

	[Token(Token = "0x600153D")]
	[Address(RVA = "0x1C8FF64", Offset = "0x1C8FF64", VA = "0x1C8FF64", Slot = "4")]
	public void Dispose()
	{
	}

	[Token(Token = "0x600153E")]
	[Address(RVA = "0x1C8FFF0", Offset = "0x1C8FFF0", VA = "0x1C8FFF0", Slot = "1")]
	~AkPositionArray()
	{
	}

	[Token(Token = "0x600153F")]
	[Address(RVA = "0x1C90058", Offset = "0x1C90058", VA = "0x1C90058")]
	public void Reset()
	{
	}

	[Token(Token = "0x6001540")]
	[Address(RVA = "0x1C90068", Offset = "0x1C90068", VA = "0x1C90068")]
	public void Add(Vector3 in_Pos, Vector3 in_Forward, Vector3 in_Top)
	{
	}
}
[Token(Token = "0x2000300")]
public class AkReflectionPathInfoArray : AkBaseArray<AkReflectionPathInfo>
{
	[Token(Token = "0x17000193")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001542")]
		[Address(RVA = "0x1C93328", Offset = "0x1C93328", VA = "0x1C93328", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001541")]
	[Address(RVA = "0x1C932C8", Offset = "0x1C932C8", VA = "0x1C932C8")]
	public AkReflectionPathInfoArray(int count)
	{
	}

	[Token(Token = "0x6001543")]
	[Address(RVA = "0x1C93388", Offset = "0x1C93388", VA = "0x1C93388", Slot = "9")]
	protected override AkReflectionPathInfo CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001544")]
	[Address(RVA = "0x1C933F0", Offset = "0x1C933F0", VA = "0x1C933F0", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkReflectionPathInfo other)
	{
	}
}
[Token(Token = "0x2000301")]
public class AkSourceSettingsArray : AkBaseArray<AkSourceSettings>
{
	[Token(Token = "0x17000194")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001546")]
		[Address(RVA = "0x1209BAC", Offset = "0x1209BAC", VA = "0x1209BAC", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x6001545")]
	[Address(RVA = "0x1209B4C", Offset = "0x1209B4C", VA = "0x1209B4C")]
	public AkSourceSettingsArray(int count)
	{
	}

	[Token(Token = "0x6001547")]
	[Address(RVA = "0x1209C0C", Offset = "0x1209C0C", VA = "0x1209C0C", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001548")]
	[Address(RVA = "0x1209C74", Offset = "0x1209C74", VA = "0x1209C74", Slot = "9")]
	protected override AkSourceSettings CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001549")]
	[Address(RVA = "0x1209CDC", Offset = "0x1209CDC", VA = "0x1209CDC", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkSourceSettings other)
	{
	}
}
[Token(Token = "0x2000302")]
public class AkTriangleArray : AkBaseArray<AkTriangle>
{
	[Token(Token = "0x17000195")]
	protected override int StructureSize
	{
		[Token(Token = "0x600154B")]
		[Address(RVA = "0x120EB48", Offset = "0x120EB48", VA = "0x120EB48", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600154A")]
	[Address(RVA = "0x120C85C", Offset = "0x120C85C", VA = "0x120C85C")]
	public AkTriangleArray(int count)
	{
	}

	[Token(Token = "0x600154C")]
	[Address(RVA = "0x120EBA8", Offset = "0x120EBA8", VA = "0x120EBA8", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x600154D")]
	[Address(RVA = "0x120EC10", Offset = "0x120EC10", VA = "0x120EC10", Slot = "9")]
	protected override AkTriangle CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x600154E")]
	[Address(RVA = "0x120EC78", Offset = "0x120EC78", VA = "0x120EC78", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkTriangle other)
	{
	}
}
[Token(Token = "0x2000303")]
public class AkVertexArray : AkBaseArray<AkVertex>
{
	[Token(Token = "0x17000196")]
	protected override int StructureSize
	{
		[Token(Token = "0x6001550")]
		[Address(RVA = "0x1211630", Offset = "0x1211630", VA = "0x1211630", Slot = "6")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x600154F")]
	[Address(RVA = "0x120C688", Offset = "0x120C688", VA = "0x120C688")]
	public AkVertexArray(int count)
	{
	}

	[Token(Token = "0x6001551")]
	[Address(RVA = "0x1211690", Offset = "0x1211690", VA = "0x1211690", Slot = "7")]
	protected override void DefaultConstructAtIntPtr(IntPtr address)
	{
	}

	[Token(Token = "0x6001552")]
	[Address(RVA = "0x12116F8", Offset = "0x12116F8", VA = "0x12116F8", Slot = "9")]
	protected override AkVertex CreateNewReferenceFromIntPtr(IntPtr address)
	{
		return null;
	}

	[Token(Token = "0x6001553")]
	[Address(RVA = "0x1211760", Offset = "0x1211760", VA = "0x1211760", Slot = "10")]
	protected override void CloneIntoReferenceFromIntPtr(IntPtr address, AkVertex other)
	{
	}
}
[Token(Token = "0x2000304")]
public class WwiseAcousticTextureReference : WwiseObjectReference
{
	[Token(Token = "0x4001325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000197")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001554")]
		[Address(RVA = "0x1108DF4", Offset = "0x1108DF4", VA = "0x1108DF4", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001555")]
	[Address(RVA = "0x1108E5C", Offset = "0x1108E5C", VA = "0x1108E5C")]
	public WwiseAcousticTextureReference()
	{
	}
}
[Token(Token = "0x2000305")]
public class WwiseAuxBusReference : WwiseObjectReference
{
	[Token(Token = "0x4001326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000198")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001557")]
		[Address(RVA = "0x1108EC0", Offset = "0x1108EC0", VA = "0x1108EC0", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001558")]
	[Address(RVA = "0x1108F28", Offset = "0x1108F28", VA = "0x1108F28")]
	public WwiseAuxBusReference()
	{
	}
}
[Token(Token = "0x2000306")]
public class WwiseBankReference : WwiseObjectReference
{
	[Token(Token = "0x4001327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x17000199")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600155A")]
		[Address(RVA = "0x1108F84", Offset = "0x1108F84", VA = "0x1108F84", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600155B")]
	[Address(RVA = "0x1108FEC", Offset = "0x1108FEC", VA = "0x1108FEC")]
	public WwiseBankReference()
	{
	}
}
[Token(Token = "0x2000307")]
public class WwiseEventReference : WwiseObjectReference
{
	[Token(Token = "0x4001328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x1700019A")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600155D")]
		[Address(RVA = "0x1109048", Offset = "0x1109048", VA = "0x1109048", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600155E")]
	[Address(RVA = "0x11090B0", Offset = "0x11090B0", VA = "0x11090B0")]
	public WwiseEventReference()
	{
	}
}
[Token(Token = "0x2000308")]
public abstract class WwiseObjectReference : ScriptableObject
{
	[Token(Token = "0x4001329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AkShowOnly]
	[SerializeField]
	private string objectName;

	[Token(Token = "0x400132A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AkShowOnly]
	[SerializeField]
	private uint id;

	[Token(Token = "0x400132B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AkShowOnly]
	[SerializeField]
	private string guid;

	[Token(Token = "0x1700019B")]
	public Guid Guid
	{
		[Token(Token = "0x6001560")]
		[Address(RVA = "0x11091CC", Offset = "0x11091CC", VA = "0x11091CC")]
		get
		{
			return default(Guid);
		}
	}

	[Token(Token = "0x1700019C")]
	public string ObjectName
	{
		[Token(Token = "0x6001561")]
		[Address(RVA = "0x1109270", Offset = "0x1109270", VA = "0x1109270")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019D")]
	public virtual string DisplayName
	{
		[Token(Token = "0x6001562")]
		[Address(RVA = "0x1109278", Offset = "0x1109278", VA = "0x1109278", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700019E")]
	public uint Id
	{
		[Token(Token = "0x6001563")]
		[Address(RVA = "0x1109280", Offset = "0x1109280", VA = "0x1109280")]
		get
		{
			return default(uint);
		}
	}

	[Token(Token = "0x1700019F")]
	public abstract WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001564")]
		get;
	}

	[Token(Token = "0x6001565")]
	[Address(RVA = "0x1108E64", Offset = "0x1108E64", VA = "0x1108E64")]
	protected WwiseObjectReference()
	{
	}
}
[Token(Token = "0x2000309")]
public abstract class WwiseGroupValueObjectReference : WwiseObjectReference
{
	[Token(Token = "0x170001A0")]
	public abstract WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6001566")]
		get;
		[Token(Token = "0x6001567")]
		set;
	}

	[Token(Token = "0x170001A1")]
	public abstract WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6001568")]
		get;
	}

	[Token(Token = "0x170001A2")]
	public override string DisplayName
	{
		[Token(Token = "0x6001569")]
		[Address(RVA = "0x110910C", Offset = "0x110910C", VA = "0x110910C", Slot = "4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600156A")]
	[Address(RVA = "0x11091C4", Offset = "0x11091C4", VA = "0x11091C4")]
	protected WwiseGroupValueObjectReference()
	{
	}
}
[Token(Token = "0x200030A")]
public enum WwiseObjectType
{
	[Token(Token = "0x400132D")]
	None,
	[Token(Token = "0x400132E")]
	AuxBus,
	[Token(Token = "0x400132F")]
	Bus,
	[Token(Token = "0x4001330")]
	Event,
	[Token(Token = "0x4001331")]
	Folder,
	[Token(Token = "0x4001332")]
	PhysicalFolder,
	[Token(Token = "0x4001333")]
	Project,
	[Token(Token = "0x4001334")]
	Soundbank,
	[Token(Token = "0x4001335")]
	State,
	[Token(Token = "0x4001336")]
	StateGroup,
	[Token(Token = "0x4001337")]
	Switch,
	[Token(Token = "0x4001338")]
	SwitchGroup,
	[Token(Token = "0x4001339")]
	WorkUnit,
	[Token(Token = "0x400133A")]
	GameParameter,
	[Token(Token = "0x400133B")]
	Trigger,
	[Token(Token = "0x400133C")]
	AcousticTexture
}
[Token(Token = "0x200030B")]
public class WwiseRtpcReference : WwiseObjectReference
{
	[Token(Token = "0x400133D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001A3")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600156B")]
		[Address(RVA = "0x1109288", Offset = "0x1109288", VA = "0x1109288", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600156C")]
	[Address(RVA = "0x11092F0", Offset = "0x11092F0", VA = "0x11092F0")]
	public WwiseRtpcReference()
	{
	}
}
[Token(Token = "0x200030C")]
public class WwiseStateGroupReference : WwiseObjectReference
{
	[Token(Token = "0x400133E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001A4")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600156E")]
		[Address(RVA = "0x110934C", Offset = "0x110934C", VA = "0x110934C", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600156F")]
	[Address(RVA = "0x11093B4", Offset = "0x11093B4", VA = "0x11093B4")]
	public WwiseStateGroupReference()
	{
	}
}
[Token(Token = "0x200030D")]
public class WwiseStateReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x400133F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x4001340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x4001341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseStateGroupReference WwiseStateGroupReference;

	[Token(Token = "0x170001A5")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001571")]
		[Address(RVA = "0x1109410", Offset = "0x1109410", VA = "0x1109410", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x170001A6")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x6001572")]
		[Address(RVA = "0x1109478", Offset = "0x1109478", VA = "0x1109478", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001573")]
		[Address(RVA = "0x1109480", Offset = "0x1109480", VA = "0x1109480", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x170001A7")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x6001574")]
		[Address(RVA = "0x1109514", Offset = "0x1109514", VA = "0x1109514", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001575")]
	[Address(RVA = "0x110957C", Offset = "0x110957C", VA = "0x110957C")]
	public WwiseStateReference()
	{
	}
}
[Token(Token = "0x200030E")]
public class WwiseSwitchGroupReference : WwiseObjectReference
{
	[Token(Token = "0x4001342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001A8")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001577")]
		[Address(RVA = "0x11095E8", Offset = "0x11095E8", VA = "0x11095E8", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001578")]
	[Address(RVA = "0x1109650", Offset = "0x1109650", VA = "0x1109650")]
	public WwiseSwitchGroupReference()
	{
	}
}
[Token(Token = "0x200030F")]
public class WwiseSwitchReference : WwiseGroupValueObjectReference
{
	[Token(Token = "0x4001343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x4001344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static readonly WwiseObjectType MyGroupWwiseObjectType;

	[Token(Token = "0x4001345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AkShowOnly]
	[SerializeField]
	private WwiseSwitchGroupReference WwiseSwitchGroupReference;

	[Token(Token = "0x170001A9")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x600157A")]
		[Address(RVA = "0x11096AC", Offset = "0x11096AC", VA = "0x11096AC", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x170001AA")]
	public override WwiseObjectReference GroupObjectReference
	{
		[Token(Token = "0x600157B")]
		[Address(RVA = "0x1109714", Offset = "0x1109714", VA = "0x1109714", Slot = "6")]
		get
		{
			return null;
		}
		[Token(Token = "0x600157C")]
		[Address(RVA = "0x110971C", Offset = "0x110971C", VA = "0x110971C", Slot = "7")]
		set
		{
		}
	}

	[Token(Token = "0x170001AB")]
	public override WwiseObjectType GroupWwiseObjectType
	{
		[Token(Token = "0x600157D")]
		[Address(RVA = "0x11097B0", Offset = "0x11097B0", VA = "0x11097B0", Slot = "8")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x600157E")]
	[Address(RVA = "0x1109818", Offset = "0x1109818", VA = "0x1109818")]
	public WwiseSwitchReference()
	{
	}
}
[Token(Token = "0x2000310")]
public class WwiseTriggerReference : WwiseObjectReference
{
	[Token(Token = "0x4001346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly WwiseObjectType MyWwiseObjectType;

	[Token(Token = "0x170001AC")]
	public override WwiseObjectType WwiseObjectType
	{
		[Token(Token = "0x6001580")]
		[Address(RVA = "0x1109884", Offset = "0x1109884", VA = "0x1109884", Slot = "5")]
		get
		{
			return default(WwiseObjectType);
		}
	}

	[Token(Token = "0x6001581")]
	[Address(RVA = "0x11098EC", Offset = "0x11098EC", VA = "0x11098EC")]
	public WwiseTriggerReference()
	{
	}
}
[Token(Token = "0x2000311")]
public class AkMacSettings : AkWwiseInitializationSettings.CommonPlatformSettings
{
	[Token(Token = "0x6001583")]
	[Address(RVA = "0x1C87A90", Offset = "0x1C87A90", VA = "0x1C87A90")]
	public AkMacSettings()
	{
	}
}
[Token(Token = "0x2000312")]
public class AkWindowsSettings : AkWwiseInitializationSettings.PlatformSettings
{
	[Serializable]
	[Token(Token = "0x200062C")]
	public class PlatformAdvancedSettings : AkCommonAdvancedSettings
	{
		[Token(Token = "0x20006AF")]
		public enum AudioAPI
		{
			[Token(Token = "0x4001FD6")]
			None = 0,
			[Token(Token = "0x4001FD7")]
			Wasapi = 1,
			[Token(Token = "0x4001FD8")]
			XAudio2 = 2,
			[Token(Token = "0x4001FD9")]
			DirectSound = 4,
			[Token(Token = "0x4001FDA")]
			Default = -1
		}

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCE994", Offset = "0xCCE994")]
		[AttributeAttribute(Name = "AkEnumFlagAttribute", RVA = "0xCCE994", Offset = "0xCCE994")]
		public AudioAPI m_AudioAPI;

		[Token(Token = "0x4001DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCEA1C", Offset = "0xCCEA1C")]
		public bool m_GlobalFocus;

		[Token(Token = "0x6002340")]
		[Address(RVA = "0x12118FC", Offset = "0x12118FC", VA = "0x12118FC", Slot = "7")]
		public override void CopyTo(AkPlatformInitSettings settings)
		{
		}

		[Token(Token = "0x6002341")]
		[Address(RVA = "0x1211900", Offset = "0x1211900", VA = "0x1211900")]
		public PlatformAdvancedSettings()
		{
		}
	}

	[Token(Token = "0x4001347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public AkCommonUserSettings UserSettings;

	[Token(Token = "0x4001348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public PlatformAdvancedSettings AdvancedSettings;

	[Token(Token = "0x4001349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public AkCommonCommSettings CommsSettings;

	[Token(Token = "0x6001584")]
	[Address(RVA = "0x1211804", Offset = "0x1211804", VA = "0x1211804", Slot = "11")]
	protected override AkCommonUserSettings GetUserSettings()
	{
		return null;
	}

	[Token(Token = "0x6001585")]
	[Address(RVA = "0x121180C", Offset = "0x121180C", VA = "0x121180C", Slot = "12")]
	protected override AkCommonAdvancedSettings GetAdvancedSettings()
	{
		return null;
	}

	[Token(Token = "0x6001586")]
	[Address(RVA = "0x1211814", Offset = "0x1211814", VA = "0x1211814", Slot = "13")]
	protected override AkCommonCommSettings GetCommsSettings()
	{
		return null;
	}

	[Token(Token = "0x6001587")]
	[Address(RVA = "0x121181C", Offset = "0x121181C", VA = "0x121181C")]
	public AkWindowsSettings()
	{
	}
}
[Token(Token = "0x2000313")]
public enum MultiPositionTypeLabel
{
	[Token(Token = "0x400134B")]
	Simple_Mode,
	[Token(Token = "0x400134C")]
	Large_Mode,
	[Token(Token = "0x400134D")]
	MultiPosition_Mode
}
[Token(Token = "0x2000314")]
public class AkMultiPosEvent
{
	[Token(Token = "0x400134E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool eventIsPlaying;

	[Token(Token = "0x400134F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AkAmbient> list;

	[Token(Token = "0x6001588")]
	[Address(RVA = "0x1C8914C", Offset = "0x1C8914C", VA = "0x1C8914C")]
	public void FinishedPlaying(object in_cookie, AkCallbackType in_type, object in_info)
	{
	}

	[Token(Token = "0x6001589")]
	[Address(RVA = "0x1C89154", Offset = "0x1C89154", VA = "0x1C89154")]
	public AkMultiPosEvent()
	{
	}
}
[Token(Token = "0x2000315")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCB9CC0", Offset = "0xCB9CC0")]
public class AkAmbient : AkEvent
{
	[Token(Token = "0x4001350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, AkMultiPosEvent> multiPosEventTree;

	[Token(Token = "0x4001351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AkMultiPositionType MultiPositionType;

	[Token(Token = "0x4001352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public MultiPositionTypeLabel multiPositionTypeLabel;

	[Token(Token = "0x4001353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AkAmbientLargeModePositioner[] LargeModePositions;

	[Token(Token = "0x4001354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	[SerializeField]
	public List<Vector3> multiPositionArray;

	[Token(Token = "0x600158A")]
	[Address(RVA = "0x16A9028", Offset = "0x16A9028", VA = "0x16A9028")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600158B")]
	[Address(RVA = "0x16A948C", Offset = "0x16A948C", VA = "0x16A948C", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x600158C")]
	[Address(RVA = "0x16A9954", Offset = "0x16A9954", VA = "0x16A9954")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600158D")]
	[Address(RVA = "0x16A9B1C", Offset = "0x16A9B1C", VA = "0x16A9B1C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x600158E")]
	[Address(RVA = "0x16A9F6C", Offset = "0x16A9F6C", VA = "0x16A9F6C")]
	public void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600158F")]
	[Address(RVA = "0x16A92CC", Offset = "0x16A92CC", VA = "0x16A92CC")]
	public AkPositionArray BuildMultiDirectionArray(AkMultiPosEvent eventPosList)
	{
		return null;
	}

	[Token(Token = "0x6001590")]
	[Address(RVA = "0x16A96D8", Offset = "0x16A96D8", VA = "0x16A96D8")]
	private AkPositionArray BuildAkPositionArray()
	{
		return null;
	}

	[Token(Token = "0x6001591")]
	[Address(RVA = "0x16AA048", Offset = "0x16AA048", VA = "0x16AA048")]
	public AkAmbient()
	{
	}
}
[Token(Token = "0x2000316")]
public class AkAmbientLargeModePositioner : MonoBehaviour
{
	[Token(Token = "0x170001AD")]
	public Vector3 Position
	{
		[Token(Token = "0x6001593")]
		[Address(RVA = "0x16A9FDC", Offset = "0x16A9FDC", VA = "0x16A9FDC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001AE")]
	public Vector3 Forward
	{
		[Token(Token = "0x6001594")]
		[Address(RVA = "0x16AA000", Offset = "0x16AA000", VA = "0x16AA000")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x170001AF")]
	public Vector3 Up
	{
		[Token(Token = "0x6001595")]
		[Address(RVA = "0x16AA024", Offset = "0x16AA024", VA = "0x16AA024")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6001596")]
	[Address(RVA = "0x16AA178", Offset = "0x16AA178", VA = "0x16AA178")]
	public AkAmbientLargeModePositioner()
	{
	}
}
[Token(Token = "0x2000317")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCB9CF8", Offset = "0xCB9CF8")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB9CF8", Offset = "0xCB9CF8")]
[DisallowMultipleComponent]
public class AkAudioListener : MonoBehaviour
{
	[Token(Token = "0x200062D")]
	public class BaseListenerList
	{
		[Token(Token = "0x4001DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<ulong> listenerIdList;

		[Token(Token = "0x4001DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly List<AkAudioListener> listenerList;

		[Token(Token = "0x170003B0")]
		public List<AkAudioListener> ListenerList
		{
			[Token(Token = "0x6002342")]
			[Address(RVA = "0x16AD588", Offset = "0x16AD588", VA = "0x16AD588")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002343")]
		[Address(RVA = "0x16AD590", Offset = "0x16AD590", VA = "0x16AD590", Slot = "4")]
		public virtual bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002344")]
		[Address(RVA = "0x16AD680", Offset = "0x16AD680", VA = "0x16AD680", Slot = "5")]
		public virtual bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002345")]
		[Address(RVA = "0x16AD770", Offset = "0x16AD770", VA = "0x16AD770")]
		public ulong[] GetListenerIds()
		{
			return null;
		}

		[Token(Token = "0x6002346")]
		[Address(RVA = "0x16AD7C8", Offset = "0x16AD7C8", VA = "0x16AD7C8")]
		public BaseListenerList()
		{
		}
	}

	[Token(Token = "0x200062E")]
	public class DefaultListenerList : BaseListenerList
	{
		[Token(Token = "0x6002347")]
		[Address(RVA = "0x16AD878", Offset = "0x16AD878", VA = "0x16AD878", Slot = "4")]
		public override bool Add(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002348")]
		[Address(RVA = "0x16AD94C", Offset = "0x16AD94C", VA = "0x16AD94C", Slot = "5")]
		public override bool Remove(AkAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002349")]
		[Address(RVA = "0x16AD584", Offset = "0x16AD584", VA = "0x16AD584")]
		public DefaultListenerList()
		{
		}
	}

	[Token(Token = "0x4001355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly DefaultListenerList defaultListeners;

	[Token(Token = "0x4001356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ulong akGameObjectID;

	[Token(Token = "0x4001357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<AkGameObj> EmittersToStartListeningTo;

	[Token(Token = "0x4001358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<AkGameObj> EmittersToStopListeningTo;

	[Token(Token = "0x4001359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool isDefaultListener;

	[Token(Token = "0x400135A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	public int listenerId;

	[Token(Token = "0x170001B0")]
	public static DefaultListenerList DefaultListeners
	{
		[Token(Token = "0x6001597")]
		[Address(RVA = "0x16ACD1C", Offset = "0x16ACD1C", VA = "0x16ACD1C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001598")]
	[Address(RVA = "0x16ACD84", Offset = "0x16ACD84", VA = "0x16ACD84")]
	public void StartListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x6001599")]
	[Address(RVA = "0x16ACE08", Offset = "0x16ACE08", VA = "0x16ACE08")]
	public void StopListeningToEmitter(AkGameObj emitter)
	{
	}

	[Token(Token = "0x600159A")]
	[Address(RVA = "0x16ACE8C", Offset = "0x16ACE8C", VA = "0x16ACE8C")]
	public void SetIsDefaultListener(bool isDefault)
	{
	}

	[Token(Token = "0x600159B")]
	[Address(RVA = "0x16ACFEC", Offset = "0x16ACFEC", VA = "0x16ACFEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600159C")]
	[Address(RVA = "0x16AD0D0", Offset = "0x16AD0D0", VA = "0x16AD0D0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600159D")]
	[Address(RVA = "0x16AD1AC", Offset = "0x16AD1AC", VA = "0x16AD1AC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600159E")]
	[Address(RVA = "0x16AD288", Offset = "0x16AD288", VA = "0x16AD288")]
	private void Update()
	{
	}

	[Token(Token = "0x600159F")]
	[Address(RVA = "0x16AD394", Offset = "0x16AD394", VA = "0x16AD394")]
	public ulong GetAkGameObjectID()
	{
		return default(ulong);
	}

	[Token(Token = "0x60015A0")]
	[Address(RVA = "0x16AD39C", Offset = "0x16AD39C", VA = "0x16AD39C")]
	public void Migrate14()
	{
	}

	[Token(Token = "0x60015A1")]
	[Address(RVA = "0x16AD460", Offset = "0x16AD460", VA = "0x16AD460")]
	public AkAudioListener()
	{
	}
}
[Token(Token = "0x2000318")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCB9D90", Offset = "0xCB9D90")]
[ExecuteInEditMode]
public class AkBank : AkTriggerHandler
{
	[Token(Token = "0x400135B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Bank data;

	[Token(Token = "0x400135C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool decodeBank;

	[Token(Token = "0x400135D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool loadAsynchronous;

	[Token(Token = "0x400135E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool saveDecodedBank;

	[Token(Token = "0x400135F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<int> unloadTriggerList;

	[Token(Token = "0x4001360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCC97F0", Offset = "0xCC97F0")]
	private string bankNameInternal;

	[Token(Token = "0x4001361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCC984C", Offset = "0xCC984C")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x170001B1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5B74", Offset = "0xCD5B74")]
	public string bankName
	{
		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x16AF4E8", Offset = "0x16AF4E8", VA = "0x16AF4E8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5BAC", Offset = "0xCD5BAC")]
	public byte[] valueGuid
	{
		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x16AF558", Offset = "0x16AF558", VA = "0x16AF558")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015A3")]
	[Address(RVA = "0x16AF258", Offset = "0x16AF258", VA = "0x16AF258", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x60015A4")]
	[Address(RVA = "0x16AF348", Offset = "0x16AF348", VA = "0x16AF348", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60015A5")]
	[Address(RVA = "0x16AF3D0", Offset = "0x16AF3D0", VA = "0x16AF3D0", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60015A6")]
	[Address(RVA = "0x16AF330", Offset = "0x16AF330", VA = "0x16AF330")]
	public void UnloadBank(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60015A7")]
	[Address(RVA = "0x16AF410", Offset = "0x16AF410", VA = "0x16AF410", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60015AA")]
	[Address(RVA = "0x16AF61C", Offset = "0x16AF61C", VA = "0x16AF61C")]
	public AkBank()
	{
	}
}
[Token(Token = "0x2000319")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCB9DDC", Offset = "0xCB9DDC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB9DDC", Offset = "0xCB9DDC")]
public class AkEmitterObstructionOcclusion : AkObstructionOcclusion
{
	[Token(Token = "0x4001362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AkGameObj m_gameObj;

	[Token(Token = "0x60015AB")]
	[Address(RVA = "0x16B9D54", Offset = "0x16B9D54", VA = "0x16B9D54")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015AC")]
	[Address(RVA = "0x16B9DC0", Offset = "0x16B9DC0", VA = "0x16B9DC0", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x60015AD")]
	[Address(RVA = "0x16B9F28", Offset = "0x16B9F28", VA = "0x16B9F28", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x60015AE")]
	[Address(RVA = "0x16BA060", Offset = "0x16BA060", VA = "0x16BA060")]
	public AkEmitterObstructionOcclusion()
	{
	}
}
[Token(Token = "0x200031A")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCB9E64", Offset = "0xCB9E64")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB9E64", Offset = "0xCB9E64")]
[ExecuteInEditMode]
public class AkEnvironment : MonoBehaviour
{
	[Token(Token = "0x200062F")]
	public class AkEnvironment_CompareByPriority : IComparer<AkEnvironment>
	{
		[Token(Token = "0x600234A")]
		[Address(RVA = "0x16BAF30", Offset = "0x16BAF30", VA = "0x16BAF30", Slot = "5")]
		public virtual int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x600234B")]
		[Address(RVA = "0x16BAF20", Offset = "0x16BAF20", VA = "0x16BAF20")]
		public AkEnvironment_CompareByPriority()
		{
		}
	}

	[Token(Token = "0x2000630")]
	public class AkEnvironment_CompareBySelectionAlgorithm : AkEnvironment_CompareByPriority
	{
		[Token(Token = "0x600234C")]
		[Address(RVA = "0x16BAFD0", Offset = "0x16BAFD0", VA = "0x16BAFD0", Slot = "5")]
		public override int Compare(AkEnvironment a, AkEnvironment b)
		{
			return default(int);
		}

		[Token(Token = "0x600234D")]
		[Address(RVA = "0x16BAF28", Offset = "0x16BAF28", VA = "0x16BAF28")]
		public AkEnvironment_CompareBySelectionAlgorithm()
		{
		}
	}

	[Token(Token = "0x4001363")]
	public const int MAX_NB_ENVIRONMENTS = 4;

	[Token(Token = "0x4001364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static AkEnvironment_CompareByPriority s_compareByPriority;

	[Token(Token = "0x4001365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static AkEnvironment_CompareBySelectionAlgorithm s_compareBySelectionAlgorithm;

	[Token(Token = "0x4001366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool excludeOthers;

	[Token(Token = "0x4001367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool isDefault;

	[Token(Token = "0x4001368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AuxBus data;

	[Token(Token = "0x4001369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC98A8", Offset = "0xCC98A8")]
	private Collider <Collider>k__BackingField;

	[Token(Token = "0x400136A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int priority;

	[Token(Token = "0x400136B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCC98B8", Offset = "0xCC98B8")]
	private int auxBusIdInternal;

	[Token(Token = "0x400136C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCC9914", Offset = "0xCC9914")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x170001B3")]
	public Collider Collider
	{
		[Token(Token = "0x60015AF")]
		[Address(RVA = "0x16BACA0", Offset = "0x16BACA0", VA = "0x16BACA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1F24", Offset = "0xCD1F24")]
		get
		{
			return null;
		}
		[Token(Token = "0x60015B0")]
		[Address(RVA = "0x16BACA8", Offset = "0x16BACA8", VA = "0x16BACA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD1F34", Offset = "0xCD1F34")]
		private set
		{
		}
	}

	[Token(Token = "0x170001B4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5BE4", Offset = "0xCD5BE4")]
	public int m_auxBusID
	{
		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x16BAD18", Offset = "0x16BAD18", VA = "0x16BAD18")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5C1C", Offset = "0xCD5C1C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x16BAD28", Offset = "0x16BAD28", VA = "0x16BAD28")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015B1")]
	[Address(RVA = "0x16BACB0", Offset = "0x16BACB0", VA = "0x16BACB0")]
	public float GetAuxSendValueForPosition(Vector3 in_position)
	{
		return default(float);
	}

	[Token(Token = "0x60015B2")]
	[Address(RVA = "0x16BACB8", Offset = "0x16BACB8", VA = "0x16BACB8")]
	public void Awake()
	{
	}

	[Token(Token = "0x60015B5")]
	[Address(RVA = "0x16BADEC", Offset = "0x16BADEC", VA = "0x16BADEC")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD1F44", Offset = "0xCD1F44")]
	public uint GetAuxBusID()
	{
		return default(uint);
	}

	[Token(Token = "0x60015B6")]
	[Address(RVA = "0x16BAE04", Offset = "0x16BAE04", VA = "0x16BAE04")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD1F7C", Offset = "0xCD1F7C")]
	public Collider GetCollider()
	{
		return null;
	}

	[Token(Token = "0x60015B7")]
	[Address(RVA = "0x16BAE0C", Offset = "0x16BAE0C", VA = "0x16BAE0C")]
	public AkEnvironment()
	{
	}
}
[Token(Token = "0x200031B")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCB9EFC", Offset = "0xCB9EFC")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB9EFC", Offset = "0xCB9EFC")]
[ExecuteInEditMode]
public class AkEnvironmentPortal : MonoBehaviour
{
	[Token(Token = "0x400136D")]
	public const int MAX_ENVIRONMENTS_PER_PORTAL = 2;

	[Token(Token = "0x400136E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x400136F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AkEnvironment[] environments;

	[Token(Token = "0x60015B9")]
	[Address(RVA = "0x16BB02C", Offset = "0x16BB02C", VA = "0x16BB02C")]
	public float GetAuxSendValueForPosition(Vector3 in_position, int index)
	{
		return default(float);
	}

	[Token(Token = "0x60015BA")]
	[Address(RVA = "0x16BB290", Offset = "0x16BB290", VA = "0x16BB290")]
	public AkEnvironmentPortal()
	{
	}
}
[Token(Token = "0x200031C")]
public class AkEventCallbackMsg
{
	[Token(Token = "0x4001370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public AkCallbackInfo info;

	[Token(Token = "0x4001371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sender;

	[Token(Token = "0x4001372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AkCallbackType type;

	[Token(Token = "0x60015BB")]
	[Address(RVA = "0x16BB340", Offset = "0x16BB340", VA = "0x16BB340")]
	public AkEventCallbackMsg()
	{
	}
}
[Token(Token = "0x200031D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCB9F94", Offset = "0xCB9F94")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCB9F94", Offset = "0xCB9F94")]
public class AkEvent : AkDragDropTriggerHandler
{
	[Serializable]
	[Token(Token = "0x2000631")]
	public class CallbackData
	{
		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CallbackFlags Flags;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string FunctionName;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject GameObject;

		[Token(Token = "0x600234E")]
		[Address(RVA = "0x16BB408", Offset = "0x16BB408", VA = "0x16BB408")]
		public void CallFunction(AkEventCallbackMsg eventCallbackMsg)
		{
		}

		[Token(Token = "0x600234F")]
		[Address(RVA = "0x16BB5DC", Offset = "0x16BB5DC", VA = "0x16BB5DC")]
		public CallbackData()
		{
		}
	}

	[Token(Token = "0x4001373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public AkActionOnEventType actionOnEventType;

	[Token(Token = "0x4001374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AkCurveInterpolation curveInterpolation;

	[Token(Token = "0x4001375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool enableActionOnEvent;

	[Token(Token = "0x4001376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Event data;

	[Token(Token = "0x4001377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool useCallbacks;

	[Token(Token = "0x4001378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<CallbackData> Callbacks;

	[Token(Token = "0x4001379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public uint playingId;

	[Token(Token = "0x400137A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject soundEmitterObject;

	[Token(Token = "0x400137B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public float transitionDuration;

	[Token(Token = "0x400137C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AkEventCallbackMsg EventCallbackMsg;

	[Token(Token = "0x400137D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCC9970", Offset = "0xCC9970")]
	private int eventIdInternal;

	[Token(Token = "0x400137E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCC99CC", Offset = "0xCC99CC")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x400137F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCC9A28", Offset = "0xCC9A28")]
	private AkEventCallbackData m_callbackDataInternal;

	[Token(Token = "0x170001B6")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x16BB338", Offset = "0x16BB338", VA = "0x16BB338", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5C54", Offset = "0xCD5C54")]
	public int eventID
	{
		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x16BB500", Offset = "0x16BB500", VA = "0x16BB500")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001B8")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5C8C", Offset = "0xCD5C8C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x16BB510", Offset = "0x16BB510", VA = "0x16BB510")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001B9")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5CC4", Offset = "0xCD5CC4")]
	public AkEventCallbackData m_callbackData
	{
		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x16BB5D4", Offset = "0x16BB5D4", VA = "0x16BB5D4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015BD")]
	[Address(RVA = "0x16A9638", Offset = "0x16A9638", VA = "0x16A9638", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60015BE")]
	[Address(RVA = "0x16BB348", Offset = "0x16BB348", VA = "0x16BB348")]
	private void Callback(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x60015BF")]
	[Address(RVA = "0x16A9CEC", Offset = "0x16A9CEC", VA = "0x16A9CEC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x60015C0")]
	[Address(RVA = "0x16BB4CC", Offset = "0x16BB4CC", VA = "0x16BB4CC")]
	public void Stop(int _transitionDuration)
	{
	}

	[Token(Token = "0x60015C1")]
	[Address(RVA = "0x16BB4D4", Offset = "0x16BB4D4", VA = "0x16BB4D4")]
	public void Stop(int _transitionDuration, AkCurveInterpolation _curveInterpolation)
	{
	}

	[Token(Token = "0x60015C5")]
	[Address(RVA = "0x16AA054", Offset = "0x16AA054", VA = "0x16AA054")]
	public AkEvent()
	{
	}
}
[Token(Token = "0x200031E")]
public class AkEventCallbackData : ScriptableObject
{
	[Token(Token = "0x4001380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<int> callbackFlags;

	[Token(Token = "0x4001381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> callbackFunc;

	[Token(Token = "0x4001382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> callbackGameObj;

	[Token(Token = "0x4001383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public int uFlags;

	[Token(Token = "0x60015C6")]
	[Address(RVA = "0x16BB5E4", Offset = "0x16BB5E4", VA = "0x16BB5E4")]
	public AkEventCallbackData()
	{
	}
}
[Token(Token = "0x200031F")]
public class AkEventPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x4001384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Event akEvent;

	[Token(Token = "0x4001385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private AkCurveInterpolation blendInCurve;

	[Token(Token = "0x4001386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x4001387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private ExposedReference<GameObject> emitterObjectRef;

	[Token(Token = "0x4001388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float eventDurationMax;

	[Token(Token = "0x4001389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float eventDurationMin;

	[NonSerialized]
	[Token(Token = "0x400138A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TimelineClip owningClip;

	[Token(Token = "0x400138B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private bool retriggerEvent;

	[Token(Token = "0x400138C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool UseWwiseEventDuration;

	[Token(Token = "0x400138D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	[SerializeField]
	private bool StopEventAtClipEnd;

	[Token(Token = "0x170001BA")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x16BB7F8", Offset = "0x16BB7F8", VA = "0x16BB7F8", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x60015C8")]
	[Address(RVA = "0x16BB800", Offset = "0x16BB800", VA = "0x16BB800", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject owner)
	{
		return default(Playable);
	}

	[Token(Token = "0x60015C9")]
	[Address(RVA = "0x16BBA8C", Offset = "0x16BBA8C", VA = "0x16BBA8C")]
	public AkEventPlayable()
	{
	}
}
[Token(Token = "0x2000320")]
public class AkEventPlayableBehavior : PlayableBehaviour
{
	[Token(Token = "0x2000632")]
	[Flags]
	private enum Actions
	{
		[Token(Token = "0x4001DB8")]
		None = 0,
		[Token(Token = "0x4001DB9")]
		Playback = 1,
		[Token(Token = "0x4001DBA")]
		Retrigger = 2,
		[Token(Token = "0x4001DBB")]
		DelayedStop = 8,
		[Token(Token = "0x4001DBC")]
		Seek = 0x10,
		[Token(Token = "0x4001DBD")]
		FadeIn = 0x20,
		[Token(Token = "0x4001DBE")]
		FadeOut = 0x40
	}

	[Token(Token = "0x400138E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private float currentDuration;

	[Token(Token = "0x400138F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	private float currentDurationProportion;

	[Token(Token = "0x4001390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool eventIsPlaying;

	[Token(Token = "0x4001391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool fadeinTriggered;

	[Token(Token = "0x4001392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool fadeoutTriggered;

	[Token(Token = "0x4001393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float previousEventStartTime;

	[Token(Token = "0x4001394")]
	private const uint CallbackFlags = 9u;

	[Token(Token = "0x4001395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Actions requiredActions;

	[Token(Token = "0x4001396")]
	private const int scrubPlaybackLengthMs = 100;

	[Token(Token = "0x4001397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Event akEvent;

	[Token(Token = "0x4001398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float eventDurationMax;

	[Token(Token = "0x4001399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float eventDurationMin;

	[Token(Token = "0x400139A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float blendInDuration;

	[Token(Token = "0x400139B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float blendOutDuration;

	[Token(Token = "0x400139C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float easeInDuration;

	[Token(Token = "0x400139D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float easeOutDuration;

	[Token(Token = "0x400139E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AkCurveInterpolation blendInCurve;

	[Token(Token = "0x400139F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public AkCurveInterpolation blendOutCurve;

	[Token(Token = "0x40013A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject eventObject;

	[Token(Token = "0x40013A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool retriggerEvent;

	[Token(Token = "0x40013A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool StopEventAtClipEnd;

	[Token(Token = "0x40013A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	public bool overrideTrackEmitterObject;

	[Token(Token = "0x40013A4")]
	private const float alph = 0.05f;

	[Token(Token = "0x60015CA")]
	[Address(RVA = "0x16BBB18", Offset = "0x16BBB18", VA = "0x16BBB18")]
	private void CallbackHandler(object in_cookie, AkCallbackType in_type, AkCallbackInfo in_info)
	{
	}

	[Token(Token = "0x60015CB")]
	[Address(RVA = "0x16BBBE0", Offset = "0x16BBBE0", VA = "0x16BBBE0")]
	private bool IsScrubbing(FrameData info)
	{
		return default(bool);
	}

	[Token(Token = "0x60015CC")]
	[Address(RVA = "0x16BBC04", Offset = "0x16BBC04", VA = "0x16BBC04", Slot = "19")]
	public override void PrepareFrame(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60015CD")]
	[Address(RVA = "0x16BBFC4", Offset = "0x16BBFC4", VA = "0x16BBFC4", Slot = "17")]
	public override void OnBehaviourPlay(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60015CE")]
	[Address(RVA = "0x16BC184", Offset = "0x16BC184", VA = "0x16BC184", Slot = "18")]
	public override void OnBehaviourPause(Playable playable, FrameData info)
	{
	}

	[Token(Token = "0x60015CF")]
	[Address(RVA = "0x16BC29C", Offset = "0x16BC29C", VA = "0x16BC29C", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x60015D0")]
	[Address(RVA = "0x16BBD44", Offset = "0x16BBD44", VA = "0x16BBD44")]
	private bool ShouldPlay(Playable playable)
	{
		return default(bool);
	}

	[Token(Token = "0x60015D1")]
	[Address(RVA = "0x16BBE80", Offset = "0x16BBE80", VA = "0x16BBE80")]
	private void CheckForFadeInFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x60015D2")]
	[Address(RVA = "0x16BBF20", Offset = "0x16BBF20", VA = "0x16BBF20")]
	private void CheckForFadeOut(Playable playable, double currentClipTime)
	{
	}

	[Token(Token = "0x60015D3")]
	[Address(RVA = "0x16BC624", Offset = "0x16BC624", VA = "0x16BC624")]
	private void TriggerFadeIn(Playable playable)
	{
	}

	[Token(Token = "0x60015D4")]
	[Address(RVA = "0x16BC74C", Offset = "0x16BC74C", VA = "0x16BC74C")]
	private void TriggerFadeOut(Playable playable)
	{
	}

	[Token(Token = "0x60015D5")]
	[Address(RVA = "0x16BC264", Offset = "0x16BC264", VA = "0x16BC264")]
	private void StopEvent(int transition = 0)
	{
	}

	[Token(Token = "0x60015D6")]
	[Address(RVA = "0x16BC80C", Offset = "0x16BC80C", VA = "0x16BC80C")]
	private bool PostEvent()
	{
		return default(bool);
	}

	[Token(Token = "0x60015D7")]
	[Address(RVA = "0x16BC488", Offset = "0x16BC488", VA = "0x16BC488")]
	private void PlayEvent()
	{
	}

	[Token(Token = "0x60015D8")]
	[Address(RVA = "0x16BC58C", Offset = "0x16BC58C", VA = "0x16BC58C")]
	private void RetriggerEvent(Playable playable)
	{
	}

	[Token(Token = "0x60015D9")]
	[Address(RVA = "0x16BC0A8", Offset = "0x16BC0A8", VA = "0x16BC0A8")]
	private float GetProportionalTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x60015DA")]
	[Address(RVA = "0x16BC4B8", Offset = "0x16BC4B8", VA = "0x16BC4B8")]
	private float SeekToTime(Playable playable)
	{
		return default(float);
	}

	[Token(Token = "0x60015DB")]
	[Address(RVA = "0x16BC8C4", Offset = "0x16BC8C4", VA = "0x16BC8C4")]
	public AkEventPlayableBehavior()
	{
	}
}
[Token(Token = "0x2000321")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xCBA01C", Offset = "0xCBA01C")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xCBA01C", Offset = "0xCBA01C")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xCBA01C", Offset = "0xCBA01C")]
public class AkEventTrack : TrackAsset
{
	[Token(Token = "0x60015DC")]
	[Address(RVA = "0x1C7B72C", Offset = "0x1C7B72C", VA = "0x1C7B72C", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x60015DD")]
	[Address(RVA = "0x1C7BAC0", Offset = "0x1C7BAC0", VA = "0x1C7BAC0")]
	public AkEventTrack()
	{
	}
}
[Token(Token = "0x2000322")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBA0D0", Offset = "0xCBA0D0")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkGameObj : MonoBehaviour
{
	[Token(Token = "0x40013A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AkGameObjListenerList m_listeners;

	[Token(Token = "0x40013A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isEnvironmentAware;

	[Token(Token = "0x40013A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[SerializeField]
	private bool isStaticObject;

	[Token(Token = "0x40013A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider m_Collider;

	[Token(Token = "0x40013A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkGameObjEnvironmentData m_envData;

	[Token(Token = "0x40013AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkGameObjPositionData m_posData;

	[Token(Token = "0x40013AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AkGameObjPositionOffsetData m_positionOffsetData;

	[Token(Token = "0x40013AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isRegistered;

	[Token(Token = "0x40013AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	[SerializeField]
	private AkGameObjPosOffsetData m_posOffsetData;

	[Token(Token = "0x40013AE")]
	private const int AK_NUM_LISTENERS = 8;

	[Token(Token = "0x40013AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	[SerializeField]
	private int listenerMask;

	[Token(Token = "0x170001BB")]
	public bool IsUsingDefaultListeners
	{
		[Token(Token = "0x60015DE")]
		[Address(RVA = "0x1C7C9E0", Offset = "0x1C7C9E0", VA = "0x1C7C9E0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x170001BC")]
	public List<AkAudioListener> ListenerList
	{
		[Token(Token = "0x60015DF")]
		[Address(RVA = "0x1C7C9FC", Offset = "0x1C7C9FC", VA = "0x1C7C9FC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60015E0")]
	[Address(RVA = "0x1C7CA18", Offset = "0x1C7CA18", VA = "0x1C7CA18")]
	internal void AddListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x60015E1")]
	[Address(RVA = "0x1C7CA38", Offset = "0x1C7CA38", VA = "0x1C7CA38")]
	internal void RemoveListener(AkAudioListener listener)
	{
	}

	[Token(Token = "0x60015E2")]
	[Address(RVA = "0x1C7CA58", Offset = "0x1C7CA58", VA = "0x1C7CA58")]
	public AKRESULT Register()
	{
		return default(AKRESULT);
	}

	[Token(Token = "0x60015E3")]
	[Address(RVA = "0x1C7CB18", Offset = "0x1C7CB18", VA = "0x1C7CB18")]
	private void Awake()
	{
	}

	[Token(Token = "0x60015E4")]
	[Address(RVA = "0x1C7D28C", Offset = "0x1C7D28C", VA = "0x1C7D28C")]
	private void CheckStaticStatus()
	{
	}

	[Token(Token = "0x60015E5")]
	[Address(RVA = "0x1C7D290", Offset = "0x1C7D290", VA = "0x1C7D290")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60015E6")]
	[Address(RVA = "0x1C7D2A4", Offset = "0x1C7D2A4", VA = "0x1C7D2A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60015E7")]
	[Address(RVA = "0x1C7D404", Offset = "0x1C7D404", VA = "0x1C7D404")]
	private void Update()
	{
	}

	[Token(Token = "0x60015E8")]
	[Address(RVA = "0x1C7D684", Offset = "0x1C7D684", VA = "0x1C7D684", Slot = "4")]
	public virtual Vector3 GetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015E9")]
	[Address(RVA = "0x1C7D7F4", Offset = "0x1C7D7F4", VA = "0x1C7D7F4", Slot = "5")]
	public virtual Vector3 GetForward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015EA")]
	[Address(RVA = "0x1C7D818", Offset = "0x1C7D818", VA = "0x1C7D818", Slot = "6")]
	public virtual Vector3 GetUpward()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60015EB")]
	[Address(RVA = "0x1C7D83C", Offset = "0x1C7D83C", VA = "0x1C7D83C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60015EC")]
	[Address(RVA = "0x1C7D854", Offset = "0x1C7D854", VA = "0x1C7D854")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60015ED")]
	[Address(RVA = "0x1C7DA94", Offset = "0x1C7DA94", VA = "0x1C7DA94")]
	public AkGameObj()
	{
	}
}
[Token(Token = "0x2000323")]
public class AkGameObjEnvironmentData
{
	[Token(Token = "0x40013B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private readonly List<AkEnvironment> activeEnvironments;

	[Token(Token = "0x40013B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkEnvironment> activeEnvironmentsFromPortals;

	[Token(Token = "0x40013B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly List<AkEnvironmentPortal> activePortals;

	[Token(Token = "0x40013B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly AkAuxSendArray auxSendValues;

	[Token(Token = "0x40013B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastPosition;

	[Token(Token = "0x40013B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool hasEnvironmentListChanged;

	[Token(Token = "0x40013B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool hasActivePortalListChanged;

	[Token(Token = "0x40013B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool hasSentZero;

	[Token(Token = "0x60015EE")]
	[Address(RVA = "0x1C7DB94", Offset = "0x1C7DB94", VA = "0x1C7DB94")]
	private void AddHighestPriorityEnvironmentsFromPortals(Vector3 position)
	{
	}

	[Token(Token = "0x60015EF")]
	[Address(RVA = "0x1C7DDB4", Offset = "0x1C7DDB4", VA = "0x1C7DDB4")]
	private void AddHighestPriorityEnvironments(Vector3 position)
	{
	}

	[Token(Token = "0x60015F0")]
	[Address(RVA = "0x1C7D018", Offset = "0x1C7D018", VA = "0x1C7D018")]
	public void UpdateAuxSend(GameObject gameObject, Vector3 position)
	{
	}

	[Token(Token = "0x60015F1")]
	[Address(RVA = "0x1C7DF20", Offset = "0x1C7DF20", VA = "0x1C7DF20")]
	private void TryAddEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x60015F2")]
	[Address(RVA = "0x1C7E084", Offset = "0x1C7E084", VA = "0x1C7E084")]
	private void RemoveEnvironment(AkEnvironment env)
	{
	}

	[Token(Token = "0x60015F3")]
	[Address(RVA = "0x1C7CEE0", Offset = "0x1C7CEE0", VA = "0x1C7CEE0")]
	public void AddAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x60015F4")]
	[Address(RVA = "0x1C7E10C", Offset = "0x1C7E10C", VA = "0x1C7E10C")]
	private bool AkEnvironmentBelongsToActivePortals(AkEnvironment env)
	{
		return default(bool);
	}

	[Token(Token = "0x60015F5")]
	[Address(RVA = "0x1C7D874", Offset = "0x1C7D874", VA = "0x1C7D874")]
	public void RemoveAkEnvironment(Collider environmentCollider, Collider gameObjectCollider)
	{
	}

	[Token(Token = "0x60015F6")]
	[Address(RVA = "0x1C7CD94", Offset = "0x1C7CD94", VA = "0x1C7CD94")]
	public AkGameObjEnvironmentData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000324")]
public class AkGameObjListenerList : AkAudioListener.BaseListenerList
{
	[NonSerialized]
	[Token(Token = "0x40013B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkGameObj akGameObj;

	[Token(Token = "0x40013B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<AkAudioListener> initialListenerList;

	[Token(Token = "0x40013BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	public bool useDefaultListeners;

	[Token(Token = "0x60015F7")]
	[Address(RVA = "0x1C7E23C", Offset = "0x1C7E23C", VA = "0x1C7E23C")]
	public void SetUseDefaultListeners(bool useDefault)
	{
	}

	[Token(Token = "0x60015F8")]
	[Address(RVA = "0x1C7D184", Offset = "0x1C7D184", VA = "0x1C7D184")]
	public void Init(AkGameObj akGameObj)
	{
	}

	[Token(Token = "0x60015F9")]
	[Address(RVA = "0x1C7E414", Offset = "0x1C7E414", VA = "0x1C7E414", Slot = "4")]
	public override bool Add(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x60015FA")]
	[Address(RVA = "0x1C7E504", Offset = "0x1C7E504", VA = "0x1C7E504", Slot = "5")]
	public override bool Remove(AkAudioListener listener)
	{
		return default(bool);
	}

	[Token(Token = "0x60015FB")]
	[Address(RVA = "0x1C7DB10", Offset = "0x1C7DB10", VA = "0x1C7DB10")]
	public AkGameObjListenerList()
	{
	}
}
[Token(Token = "0x2000325")]
public class AkGameObjPosOffsetData : ScriptableObject
{
	[Token(Token = "0x40013BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 positionOffset;

	[Token(Token = "0x60015FC")]
	[Address(RVA = "0x1C7E5F4", Offset = "0x1C7E5F4", VA = "0x1C7E5F4")]
	public AkGameObjPosOffsetData()
	{
	}
}
[Token(Token = "0x2000326")]
public class AkGameObjPositionData
{
	[Token(Token = "0x40013BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 forward;

	[Token(Token = "0x40013BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 position;

	[Token(Token = "0x40013BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 up;

	[Token(Token = "0x60015FD")]
	[Address(RVA = "0x1C7CD8C", Offset = "0x1C7CD8C", VA = "0x1C7CD8C")]
	public AkGameObjPositionData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000327")]
public class AkGameObjPositionOffsetData
{
	[Token(Token = "0x40013BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool KeepMe;

	[Token(Token = "0x40013C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 positionOffset;

	[Token(Token = "0x60015FE")]
	[Address(RVA = "0x1C7E5FC", Offset = "0x1C7E5FC", VA = "0x1C7E5FC")]
	public AkGameObjPositionOffsetData(bool IReallyWantToBeConstructed = false)
	{
	}
}
[Token(Token = "0x2000328")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBA12C", Offset = "0xCBA12C")]
[DisallowMultipleComponent]
[ExecuteInEditMode]
public class AkInitializer : MonoBehaviour
{
	[Token(Token = "0x40013C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkInitializer ms_Instance;

	[Token(Token = "0x40013C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AkWwiseInitializationSettings InitializationSettings;

	[Token(Token = "0x60015FF")]
	[Address(RVA = "0x1C81700", Offset = "0x1C81700", VA = "0x1C81700")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001600")]
	[Address(RVA = "0x1C817F0", Offset = "0x1C817F0", VA = "0x1C817F0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001601")]
	[Address(RVA = "0x1C818D4", Offset = "0x1C818D4", VA = "0x1C818D4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001602")]
	[Address(RVA = "0x1C8197C", Offset = "0x1C8197C", VA = "0x1C8197C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6001603")]
	[Address(RVA = "0x1C81A2C", Offset = "0x1C81A2C", VA = "0x1C81A2C")]
	private void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x6001604")]
	[Address(RVA = "0x1C81AE8", Offset = "0x1C81AE8", VA = "0x1C81AE8")]
	private void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x6001605")]
	[Address(RVA = "0x1C81BA4", Offset = "0x1C81BA4", VA = "0x1C81BA4")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6001606")]
	[Address(RVA = "0x1C81C4C", Offset = "0x1C81C4C", VA = "0x1C81C4C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6001607")]
	[Address(RVA = "0x1C81CF4", Offset = "0x1C81CF4", VA = "0x1C81CF4")]
	public AkInitializer()
	{
	}
}
[Token(Token = "0x2000329")]
public class AkMemBankLoader : MonoBehaviour
{
	[Token(Token = "0x2000633")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF6BC", Offset = "0xCBF6BC")]
	private sealed class <LoadFile>d__14 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AkMemBankLoader <>4__this;

		[Token(Token = "0x170003B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6002353")]
			[Address(RVA = "0x1C88764", Offset = "0x1C88764", VA = "0x1C88764", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170003B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6002355")]
			[Address(RVA = "0x1C887CC", Offset = "0x1C887CC", VA = "0x1C887CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002350")]
		[Address(RVA = "0x1C8847C", Offset = "0x1C8847C", VA = "0x1C8847C")]
		[DebuggerHidden]
		public <LoadFile>d__14(int <>1__state)
		{
		}

		[Token(Token = "0x6002351")]
		[Address(RVA = "0x1C885C0", Offset = "0x1C885C0", VA = "0x1C885C0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6002352")]
		[Address(RVA = "0x1C885C4", Offset = "0x1C885C4", VA = "0x1C885C4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6002354")]
		[Address(RVA = "0x1C8876C", Offset = "0x1C8876C", VA = "0x1C8876C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40013C3")]
	private const int WaitMs = 50;

	[Token(Token = "0x40013C4")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT = 16L;

	[Token(Token = "0x40013C5")]
	private const long AK_BANK_PLATFORM_DATA_ALIGNMENT_MASK = 15L;

	[Token(Token = "0x40013C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string bankName;

	[Token(Token = "0x40013C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isLocalizedBank;

	[Token(Token = "0x40013C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string m_bankPath;

	[Token(Token = "0x40013C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public uint ms_bankID;

	[Token(Token = "0x40013CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private IntPtr ms_pInMemoryBankPtr;

	[Token(Token = "0x40013CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GCHandle ms_pinnedArray;

	[Token(Token = "0x40013CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private UnityWebRequest ms_www;

	[Token(Token = "0x6001608")]
	[Address(RVA = "0x1C87FAC", Offset = "0x1C87FAC", VA = "0x1C87FAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6001609")]
	[Address(RVA = "0x1C880CC", Offset = "0x1C880CC", VA = "0x1C880CC")]
	public void LoadNonLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x600160A")]
	[Address(RVA = "0x1C87FC0", Offset = "0x1C87FC0", VA = "0x1C87FC0")]
	public void LoadLocalizedBank(string in_bankFilename)
	{
	}

	[Token(Token = "0x600160B")]
	[Address(RVA = "0x1C881D4", Offset = "0x1C881D4", VA = "0x1C881D4")]
	private uint AllocateAlignedBuffer(byte[] data)
	{
		return default(uint);
	}

	[Token(Token = "0x600160C")]
	[Address(RVA = "0x1C88400", Offset = "0x1C88400", VA = "0x1C88400")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD1FB4", Offset = "0xCD1FB4")]
	private IEnumerator LoadFile()
	{
		return null;
	}

	[Token(Token = "0x600160D")]
	[Address(RVA = "0x1C8819C", Offset = "0x1C8819C", VA = "0x1C8819C")]
	private void DoLoadBank(string in_bankPath)
	{
	}

	[Token(Token = "0x600160E")]
	[Address(RVA = "0x1C884A8", Offset = "0x1C884A8", VA = "0x1C884A8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600160F")]
	[Address(RVA = "0x1C8855C", Offset = "0x1C8855C", VA = "0x1C8855C")]
	public AkMemBankLoader()
	{
	}
}
[Token(Token = "0x200032A")]
public abstract class AkObstructionOcclusion : MonoBehaviour
{
	[Token(Token = "0x2000634")]
	protected class ObstructionOcclusionValue
	{
		[Token(Token = "0x4001DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float currentValue;

		[Token(Token = "0x4001DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float targetValue;

		[Token(Token = "0x6002356")]
		[Address(RVA = "0x1C8B630", Offset = "0x1C8B630", VA = "0x1C8B630")]
		public bool Update(float fadeRate)
		{
			return default(bool);
		}

		[Token(Token = "0x6002357")]
		[Address(RVA = "0x1C8AF54", Offset = "0x1C8AF54", VA = "0x1C8AF54")]
		public ObstructionOcclusionValue()
		{
		}
	}

	[Token(Token = "0x40013CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly List<AkAudioListener> listenersToRemove;

	[Token(Token = "0x40013CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private readonly Dictionary<AkAudioListener, ObstructionOcclusionValue> ObstructionOcclusionValues;

	[Token(Token = "0x40013CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected float fadeRate;

	[Token(Token = "0x40013D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9B94", Offset = "0xCC9B94")]
	public float fadeTime;

	[Token(Token = "0x40013D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9BCC", Offset = "0xCC9BCC")]
	public LayerMask LayerMask;

	[Token(Token = "0x40013D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9C04", Offset = "0xCC9C04")]
	public float maxDistance;

	[Token(Token = "0x40013D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9C3C", Offset = "0xCC9C3C")]
	public float refreshInterval;

	[Token(Token = "0x40013D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float refreshTime;

	[Token(Token = "0x6001610")]
	[Address(RVA = "0x1C8AC9C", Offset = "0x1C8AC9C", VA = "0x1C8AC9C")]
	protected void InitIntervalsAndFadeRates()
	{
	}

	[Token(Token = "0x6001611")]
	[Address(RVA = "0x1C8ACDC", Offset = "0x1C8ACDC", VA = "0x1C8ACDC")]
	protected void UpdateObstructionOcclusionValues(List<AkAudioListener> listenerList)
	{
	}

	[Token(Token = "0x6001612")]
	[Address(RVA = "0x1C8AF5C", Offset = "0x1C8AF5C", VA = "0x1C8AF5C")]
	protected void UpdateObstructionOcclusionValues(AkAudioListener listener)
	{
	}

	[Token(Token = "0x6001613")]
	[Address(RVA = "0x1C8B1B4", Offset = "0x1C8B1B4", VA = "0x1C8B1B4")]
	private void CastRays()
	{
	}

	[Token(Token = "0x6001614")]
	protected abstract void UpdateObstructionOcclusionValuesForListeners();

	[Token(Token = "0x6001615")]
	protected abstract void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair);

	[Token(Token = "0x6001616")]
	[Address(RVA = "0x1C8B4E8", Offset = "0x1C8B4E8", VA = "0x1C8B4E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6001617")]
	[Address(RVA = "0x1C8B720", Offset = "0x1C8B720", VA = "0x1C8B720")]
	protected AkObstructionOcclusion()
	{
	}
}
[Serializable]
[Token(Token = "0x200032B")]
public class AkRTPCPlayable : PlayableAsset, ITimelineClipAsset
{
	[Token(Token = "0x40013D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool overrideTrackObject;

	[Token(Token = "0x40013D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ExposedReference<GameObject> RTPCObject;

	[Token(Token = "0x40013D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool setRTPCGlobally;

	[Token(Token = "0x40013D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AkRTPCPlayableBehaviour template;

	[Token(Token = "0x40013D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC9C74", Offset = "0xCC9C74")]
	private RTPC <Parameter>k__BackingField;

	[Token(Token = "0x40013DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC9C84", Offset = "0xCC9C84")]
	private TimelineClip <OwningClip>k__BackingField;

	[Token(Token = "0x170001BD")]
	public RTPC Parameter
	{
		[Token(Token = "0x6001618")]
		[Address(RVA = "0x1C91768", Offset = "0x1C91768", VA = "0x1C91768")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2018", Offset = "0xCD2018")]
		get
		{
			return null;
		}
		[Token(Token = "0x6001619")]
		[Address(RVA = "0x1C91770", Offset = "0x1C91770", VA = "0x1C91770")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2028", Offset = "0xCD2028")]
		set
		{
		}
	}

	[Token(Token = "0x170001BE")]
	public TimelineClip OwningClip
	{
		[Token(Token = "0x600161A")]
		[Address(RVA = "0x1C91778", Offset = "0x1C91778", VA = "0x1C91778")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2038", Offset = "0xCD2038")]
		get
		{
			return null;
		}
		[Token(Token = "0x600161B")]
		[Address(RVA = "0x1C91780", Offset = "0x1C91780", VA = "0x1C91780")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2048", Offset = "0xCD2048")]
		set
		{
		}
	}

	[Token(Token = "0x170001BF")]
	private ClipCaps UnityEngine.Timeline.ITimelineClipAsset.clipCaps
	{
		[Token(Token = "0x600161C")]
		[Address(RVA = "0x1C91788", Offset = "0x1C91788", VA = "0x1C91788", Slot = "9")]
		get
		{
			return default(ClipCaps);
		}
	}

	[Token(Token = "0x600161D")]
	[Address(RVA = "0x1C91790", Offset = "0x1C91790", VA = "0x1C91790", Slot = "6")]
	public override Playable CreatePlayable(PlayableGraph graph, GameObject go)
	{
		return default(Playable);
	}

	[Token(Token = "0x600161E")]
	[Address(RVA = "0x1C9188C", Offset = "0x1C9188C", VA = "0x1C9188C")]
	public void InitializeBehavior(PlayableGraph graph, ref AkRTPCPlayableBehaviour b, GameObject owner)
	{
	}

	[Token(Token = "0x600161F")]
	[Address(RVA = "0x1C9196C", Offset = "0x1C9196C", VA = "0x1C9196C")]
	public AkRTPCPlayable()
	{
	}
}
[Serializable]
[Token(Token = "0x200032C")]
public class AkRTPCPlayableBehaviour : PlayableBehaviour
{
	[Token(Token = "0x40013DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	private float RTPCValue;

	[Token(Token = "0x40013DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC9CA4", Offset = "0xCC9CA4")]
	private bool <setRTPCGlobally>k__BackingField;

	[Token(Token = "0x40013DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC9CB4", Offset = "0xCC9CB4")]
	private bool <overrideTrackObject>k__BackingField;

	[Token(Token = "0x40013DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC9CC4", Offset = "0xCC9CC4")]
	private GameObject <rtpcObject>k__BackingField;

	[Token(Token = "0x40013DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCC9CD4", Offset = "0xCC9CD4")]
	private RTPC <parameter>k__BackingField;

	[Token(Token = "0x170001C0")]
	public bool setRTPCGlobally
	{
		[Token(Token = "0x6001621")]
		[Address(RVA = "0x1C919F4", Offset = "0x1C919F4", VA = "0x1C919F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2068", Offset = "0xCD2068")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6001620")]
		[Address(RVA = "0x1C919E8", Offset = "0x1C919E8", VA = "0x1C919E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2058", Offset = "0xCD2058")]
		set
		{
		}
	}

	[Token(Token = "0x170001C1")]
	public bool overrideTrackObject
	{
		[Token(Token = "0x6001623")]
		[Address(RVA = "0x1C91A08", Offset = "0x1C91A08", VA = "0x1C91A08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2088", Offset = "0xCD2088")]
		private get
		{
			return default(bool);
		}
		[Token(Token = "0x6001622")]
		[Address(RVA = "0x1C919FC", Offset = "0x1C919FC", VA = "0x1C919FC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2078", Offset = "0xCD2078")]
		set
		{
		}
	}

	[Token(Token = "0x170001C2")]
	public GameObject rtpcObject
	{
		[Token(Token = "0x6001625")]
		[Address(RVA = "0x1C91A18", Offset = "0x1C91A18", VA = "0x1C91A18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD20A8", Offset = "0xCD20A8")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6001624")]
		[Address(RVA = "0x1C91A10", Offset = "0x1C91A10", VA = "0x1C91A10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2098", Offset = "0xCD2098")]
		set
		{
		}
	}

	[Token(Token = "0x170001C3")]
	public RTPC parameter
	{
		[Token(Token = "0x6001627")]
		[Address(RVA = "0x1C91A28", Offset = "0x1C91A28", VA = "0x1C91A28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD20C8", Offset = "0xCD20C8")]
		private get
		{
			return null;
		}
		[Token(Token = "0x6001626")]
		[Address(RVA = "0x1C91A20", Offset = "0x1C91A20", VA = "0x1C91A20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD20B8", Offset = "0xCD20B8")]
		set
		{
		}
	}

	[Token(Token = "0x6001628")]
	[Address(RVA = "0x1C91A30", Offset = "0x1C91A30", VA = "0x1C91A30", Slot = "20")]
	public override void ProcessFrame(Playable playable, FrameData info, object playerData)
	{
	}

	[Token(Token = "0x6001629")]
	[Address(RVA = "0x1C919E0", Offset = "0x1C919E0", VA = "0x1C919E0")]
	public AkRTPCPlayableBehaviour()
	{
	}
}
[Token(Token = "0x200032D")]
[AttributeAttribute(Name = "TrackColorAttribute", RVA = "0xCBA188", Offset = "0xCBA188")]
[AttributeAttribute(Name = "TrackClipTypeAttribute", RVA = "0xCBA188", Offset = "0xCBA188")]
[AttributeAttribute(Name = "TrackBindingTypeAttribute", RVA = "0xCBA188", Offset = "0xCBA188")]
public class AkRTPCTrack : TrackAsset
{
	[Token(Token = "0x40013E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public RTPC Parameter;

	[Token(Token = "0x600162A")]
	[Address(RVA = "0x1C91BB0", Offset = "0x1C91BB0", VA = "0x1C91BB0", Slot = "24")]
	public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount)
	{
		return default(Playable);
	}

	[Token(Token = "0x600162B")]
	[Address(RVA = "0x1C91C6C", Offset = "0x1C91C6C", VA = "0x1C91C6C")]
	public void setPlayableProperties()
	{
	}

	[Token(Token = "0x600162C")]
	[Address(RVA = "0x1C91F68", Offset = "0x1C91F68", VA = "0x1C91F68")]
	public void OnValidate()
	{
	}

	[Token(Token = "0x600162D")]
	[Address(RVA = "0x1C92238", Offset = "0x1C92238", VA = "0x1C92238")]
	public AkRTPCTrack()
	{
	}
}
[Token(Token = "0x200032E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBA238", Offset = "0xCBA238")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBA238", Offset = "0xCBA238")]
[DisallowMultipleComponent]
public class AkRoom : AkTriggerHandler
{
	[Token(Token = "0x2000635")]
	public class PriorityList
	{
		[Token(Token = "0x20006B0")]
		private class CompareByPriority : IComparer<AkRoom>
		{
			[Token(Token = "0x600250F")]
			[Address(RVA = "0x1C944FC", Offset = "0x1C944FC", VA = "0x1C944FC", Slot = "5")]
			public virtual int Compare(AkRoom a, AkRoom b)
			{
				return default(int);
			}

			[Token(Token = "0x6002510")]
			[Address(RVA = "0x1C944F4", Offset = "0x1C944F4", VA = "0x1C944F4")]
			public CompareByPriority()
			{
			}
		}

		[Token(Token = "0x4001DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly CompareByPriority s_compareByPriority;

		[Token(Token = "0x4001DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<AkRoom> rooms;

		[Token(Token = "0x6002358")]
		[Address(RVA = "0x1C940EC", Offset = "0x1C940EC", VA = "0x1C940EC")]
		public ulong GetHighestPriorityRoomID()
		{
			return default(ulong);
		}

		[Token(Token = "0x6002359")]
		[Address(RVA = "0x1C941B4", Offset = "0x1C941B4", VA = "0x1C941B4")]
		public AkRoom GetHighestPriorityRoom()
		{
			return null;
		}

		[Token(Token = "0x600235A")]
		[Address(RVA = "0x1C94218", Offset = "0x1C94218", VA = "0x1C94218")]
		public void Add(AkRoom room)
		{
		}

		[Token(Token = "0x600235B")]
		[Address(RVA = "0x1C94384", Offset = "0x1C94384", VA = "0x1C94384")]
		public void Remove(AkRoom room)
		{
		}

		[Token(Token = "0x600235C")]
		[Address(RVA = "0x1C943EC", Offset = "0x1C943EC", VA = "0x1C943EC")]
		public bool Contains(AkRoom room)
		{
			return default(bool);
		}

		[Token(Token = "0x600235D")]
		[Address(RVA = "0x1C942A8", Offset = "0x1C942A8", VA = "0x1C942A8")]
		public int BinarySearch(AkRoom room)
		{
			return default(int);
		}

		[Token(Token = "0x600235E")]
		[Address(RVA = "0x1C94408", Offset = "0x1C94408", VA = "0x1C94408")]
		public PriorityList()
		{
		}
	}

	[Token(Token = "0x40013E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ulong INVALID_ROOM_ID;

	[Token(Token = "0x40013E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int RoomCount;

	[Token(Token = "0x40013E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9CE4", Offset = "0xCC9CE4")]
	public int priority;

	[Token(Token = "0x40013E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AuxBus reverbAuxBus;

	[Token(Token = "0x40013E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC9D1C", Offset = "0xCC9D1C")]
	public float reverbLevel;

	[Token(Token = "0x40013E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC9D34", Offset = "0xCC9D34")]
	public float wallOcclusion;

	[Token(Token = "0x40013E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Event roomToneEvent;

	[Token(Token = "0x40013E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC9D4C", Offset = "0xCC9D4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9D4C", Offset = "0xCC9D4C")]
	public float roomToneAuxSend;

	[Token(Token = "0x170001C4")]
	public static bool IsSpatialAudioEnabled
	{
		[Token(Token = "0x600162E")]
		[Address(RVA = "0x1C93494", Offset = "0x1C93494", VA = "0x1C93494")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600162F")]
	[Address(RVA = "0x1C93570", Offset = "0x1C93570", VA = "0x1C93570")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001630")]
	[Address(RVA = "0x1C935EC", Offset = "0x1C935EC", VA = "0x1C935EC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001631")]
	[Address(RVA = "0x1C93CFC", Offset = "0x1C93CFC", VA = "0x1C93CFC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001632")]
	[Address(RVA = "0x1C93D34", Offset = "0x1C93D34", VA = "0x1C93D34")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001633")]
	[Address(RVA = "0x1C93E0C", Offset = "0x1C93E0C", VA = "0x1C93E0C")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001634")]
	[Address(RVA = "0x1C93EE8", Offset = "0x1C93EE8", VA = "0x1C93EE8")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6001635")]
	[Address(RVA = "0x1C93FC4", Offset = "0x1C93FC4", VA = "0x1C93FC4")]
	public AkRoom()
	{
	}
}
[Token(Token = "0x200032F")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBA2D0", Offset = "0xCBA2D0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBA2D0", Offset = "0xCBA2D0")]
[DisallowMultipleComponent]
public class AkRoomPortal : AkTriggerHandler
{
	[Token(Token = "0x2000636")]
	public enum State
	{
		[Token(Token = "0x4001DC7")]
		Closed,
		[Token(Token = "0x4001DC8")]
		Open
	}

	[Token(Token = "0x40013E9")]
	public const int MAX_ROOMS_PER_PORTAL = 2;

	[Token(Token = "0x40013EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public State initialState;

	[Token(Token = "0x40013EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AkVector extent;

	[Token(Token = "0x40013EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AkTransform portalTransform;

	[Token(Token = "0x40013ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool active;

	[Token(Token = "0x40013EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<int> closePortalTriggerList;

	[Token(Token = "0x40013EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private AkRoom[] rooms;

	[Token(Token = "0x170001C5")]
	public bool portalActive
	{
		[Token(Token = "0x6001637")]
		[Address(RVA = "0x11D2144", Offset = "0x11D2144", VA = "0x11D2144")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6001638")]
		[Address(RVA = "0x11D214C", Offset = "0x11D214C", VA = "0x11D214C")]
		set
		{
		}
	}

	[Token(Token = "0x170001C6")]
	private ulong frontRoomID
	{
		[Token(Token = "0x6001639")]
		[Address(RVA = "0x11D2294", Offset = "0x11D2294", VA = "0x11D2294")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170001C7")]
	private ulong backRoomID
	{
		[Token(Token = "0x600163A")]
		[Address(RVA = "0x11D2400", Offset = "0x11D2400", VA = "0x11D2400")]
		get
		{
			return default(ulong);
		}
	}

	[Token(Token = "0x170001C8")]
	public AkRoom frontRoom
	{
		[Token(Token = "0x600163F")]
		[Address(RVA = "0x11D2334", Offset = "0x11D2334", VA = "0x11D2334")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001C9")]
	public AkRoom backRoom
	{
		[Token(Token = "0x6001640")]
		[Address(RVA = "0x11D24A0", Offset = "0x11D24A0", VA = "0x11D24A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CA")]
	public bool IsValid
	{
		[Token(Token = "0x6001642")]
		[Address(RVA = "0x11D2884", Offset = "0x11D2884", VA = "0x11D2884")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600163B")]
	[Address(RVA = "0x11D24D4", Offset = "0x11D24D4", VA = "0x11D24D4")]
	public void SetRoom(int in_roomIndex, AkRoom in_room)
	{
	}

	[Token(Token = "0x600163C")]
	[Address(RVA = "0x11D25E8", Offset = "0x11D25E8", VA = "0x11D25E8")]
	public void SetFrontRoom(AkRoom room)
	{
	}

	[Token(Token = "0x600163D")]
	[Address(RVA = "0x11D25F4", Offset = "0x11D25F4", VA = "0x11D25F4")]
	public void SetBackRoom(AkRoom room)
	{
	}

	[Token(Token = "0x600163E")]
	[Address(RVA = "0x11D2600", Offset = "0x11D2600", VA = "0x11D2600")]
	public AkRoom GetRoom(int index)
	{
		return null;
	}

	[Token(Token = "0x6001641")]
	[Address(RVA = "0x11D263C", Offset = "0x11D263C", VA = "0x11D263C")]
	public void UpdateSoundEngineRoomIDs()
	{
	}

	[Token(Token = "0x6001643")]
	[Address(RVA = "0x11D27A0", Offset = "0x11D27A0", VA = "0x11D27A0")]
	public ulong GetID()
	{
		return default(ulong);
	}

	[Token(Token = "0x6001644")]
	[Address(RVA = "0x11D28B8", Offset = "0x11D28B8", VA = "0x11D28B8", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x6001645")]
	[Address(RVA = "0x11D2F34", Offset = "0x11D2F34", VA = "0x11D2F34", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6001646")]
	[Address(RVA = "0x11D2FBC", Offset = "0x11D2FBC", VA = "0x11D2FBC", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001647")]
	[Address(RVA = "0x11D2F2C", Offset = "0x11D2F2C", VA = "0x11D2F2C")]
	public void ClosePortal(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001648")]
	[Address(RVA = "0x11D2FD4", Offset = "0x11D2FD4", VA = "0x11D2FD4", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x6001649")]
	[Address(RVA = "0x11D236C", Offset = "0x11D236C", VA = "0x11D236C")]
	private bool IsRoomActive(AkRoom in_room)
	{
		return default(bool);
	}

	[Token(Token = "0x600164A")]
	[Address(RVA = "0x11D2FC4", Offset = "0x11D2FC4", VA = "0x11D2FC4")]
	public void Open()
	{
	}

	[Token(Token = "0x600164B")]
	[Address(RVA = "0x11D2FCC", Offset = "0x11D2FCC", VA = "0x11D2FCC")]
	public void Close()
	{
	}

	[Token(Token = "0x600164C")]
	[Address(RVA = "0x11D3214", Offset = "0x11D3214", VA = "0x11D3214")]
	public void FindOverlappingRooms(AkRoom.PriorityList[] roomList)
	{
	}

	[Token(Token = "0x600164D")]
	[Address(RVA = "0x11D342C", Offset = "0x11D342C", VA = "0x11D342C")]
	private void FillRoomList(Vector3 center, Vector3 halfExtents, AkRoom.PriorityList list)
	{
	}

	[Token(Token = "0x600164E")]
	[Address(RVA = "0x11D2CBC", Offset = "0x11D2CBC", VA = "0x11D2CBC")]
	public void UpdateOverlappingRooms()
	{
	}

	[Token(Token = "0x600164F")]
	[Address(RVA = "0x11D3614", Offset = "0x11D3614", VA = "0x11D3614")]
	public AkRoomPortal()
	{
	}
}
[Token(Token = "0x2000330")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBA368", Offset = "0xCBA368")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBA368", Offset = "0xCBA368")]
public class AkRoomPortalObstruction : AkObstructionOcclusion
{
	[Token(Token = "0x40013F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AkRoomPortal m_portal;

	[Token(Token = "0x6001650")]
	[Address(RVA = "0x11D3BB0", Offset = "0x11D3BB0", VA = "0x11D3BB0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6001651")]
	[Address(RVA = "0x11D3C1C", Offset = "0x11D3C1C", VA = "0x11D3C1C", Slot = "4")]
	protected override void UpdateObstructionOcclusionValuesForListeners()
	{
	}

	[Token(Token = "0x6001652")]
	[Address(RVA = "0x11D3C90", Offset = "0x11D3C90", VA = "0x11D3C90", Slot = "5")]
	protected override void SetObstructionOcclusion(KeyValuePair<AkAudioListener, ObstructionOcclusionValue> ObsOccPair)
	{
	}

	[Token(Token = "0x6001653")]
	[Address(RVA = "0x11D3DE8", Offset = "0x11D3DE8", VA = "0x11D3DE8")]
	public AkRoomPortalObstruction()
	{
	}
}
[Token(Token = "0x2000331")]
public class AkSoundEngineController
{
	[Token(Token = "0x40013F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSoundEngineController ms_Instance;

	[Token(Token = "0x170001CB")]
	public static AkSoundEngineController Instance
	{
		[Token(Token = "0x6001654")]
		[Address(RVA = "0x11F090C", Offset = "0x11F090C", VA = "0x11F090C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001655")]
	[Address(RVA = "0x11F0994", Offset = "0x11F0994", VA = "0x11F0994")]
	private AkSoundEngineController()
	{
	}

	[Token(Token = "0x6001656")]
	[Address(RVA = "0x11F099C", Offset = "0x11F099C", VA = "0x11F099C", Slot = "1")]
	~AkSoundEngineController()
	{
	}

	[Token(Token = "0x6001657")]
	[Address(RVA = "0x11F0A4C", Offset = "0x11F0A4C", VA = "0x11F0A4C")]
	public static string GetDecodedBankFolder()
	{
		return null;
	}

	[Token(Token = "0x6001658")]
	[Address(RVA = "0x11F0A94", Offset = "0x11F0A94", VA = "0x11F0A94")]
	public static string GetDecodedBankFullPath()
	{
		return null;
	}

	[Token(Token = "0x6001659")]
	[Address(RVA = "0x11F0B38", Offset = "0x11F0B38", VA = "0x11F0B38")]
	public void LateUpdate()
	{
	}

	[Token(Token = "0x600165A")]
	[Address(RVA = "0x11F0C08", Offset = "0x11F0C08", VA = "0x11F0C08")]
	public void Init(AkInitializer akInitializer)
	{
	}

	[Token(Token = "0x600165B")]
	[Address(RVA = "0x11F0DBC", Offset = "0x11F0DBC", VA = "0x11F0DBC")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x600165C")]
	[Address(RVA = "0x11F0DC0", Offset = "0x11F0DC0", VA = "0x11F0DC0")]
	public void Terminate()
	{
	}

	[Token(Token = "0x600165D")]
	[Address(RVA = "0x11F0E20", Offset = "0x11F0E20", VA = "0x11F0E20")]
	public void OnApplicationPause(bool pauseStatus)
	{
	}

	[Token(Token = "0x600165E")]
	[Address(RVA = "0x11F0F08", Offset = "0x11F0F08", VA = "0x11F0F08")]
	public void OnApplicationFocus(bool focus)
	{
	}

	[Token(Token = "0x600165F")]
	[Address(RVA = "0x11F0E30", Offset = "0x11F0E30", VA = "0x11F0E30")]
	private void ActivateAudio(bool activate, bool renderAnyway = false)
	{
	}
}
[Token(Token = "0x2000332")]
public abstract class AkSpatialAudioBase : MonoBehaviour
{
	[Token(Token = "0x40013F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private readonly AkRoom.PriorityList roomPriorityList;

	[Token(Token = "0x6001660")]
	[Address(RVA = "0x1209D80", Offset = "0x1209D80", VA = "0x1209D80")]
	protected void SetGameObjectInHighestPriorityRoom()
	{
	}

	[Token(Token = "0x6001661")]
	[Address(RVA = "0x1209E18", Offset = "0x1209E18", VA = "0x1209E18")]
	public void EnteredRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001662")]
	[Address(RVA = "0x1209E4C", Offset = "0x1209E4C", VA = "0x1209E4C")]
	public void ExitedRoom(AkRoom room)
	{
	}

	[Token(Token = "0x6001663")]
	[Address(RVA = "0x1209E80", Offset = "0x1209E80", VA = "0x1209E80")]
	public void SetGameObjectInRoom()
	{
	}

	[Token(Token = "0x6001664")]
	[Address(RVA = "0x1209FB0", Offset = "0x1209FB0", VA = "0x1209FB0")]
	protected AkSpatialAudioBase()
	{
	}
}
[Token(Token = "0x2000333")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBA3F0", Offset = "0xCBA3F0")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBA3F0", Offset = "0xCBA3F0")]
public class AkSpatialAudioEmitter : AkSpatialAudioBase
{
	[Token(Token = "0x40013F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC9DB0", Offset = "0xCC9DB0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9DB0", Offset = "0xCC9DB0")]
	public AuxBus reflectAuxBus;

	[Token(Token = "0x40013F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9E10", Offset = "0xCC9E10")]
	public float reflectionMaxPathLength;

	[Token(Token = "0x40013F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC9E48", Offset = "0xCC9E48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9E48", Offset = "0xCC9E48")]
	public float reflectionsAuxBusGain;

	[Token(Token = "0x40013F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC9E9C", Offset = "0xCC9E9C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9E9C", Offset = "0xCC9E9C")]
	public uint reflectionsOrder;

	[Token(Token = "0x40013F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC9EF0", Offset = "0xCC9EF0")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCC9EF0", Offset = "0xCC9EF0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9EF0", Offset = "0xCC9EF0")]
	public float roomReverbAuxBusGain;

	[Token(Token = "0x40013F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCC9F68", Offset = "0xCC9F68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9F68", Offset = "0xCC9F68")]
	public uint diffractionMaxEdges;

	[Token(Token = "0x40013F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCC9FC8", Offset = "0xCC9FC8")]
	public uint diffractionMaxPaths;

	[Token(Token = "0x40013FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCA000", Offset = "0xCCA000")]
	public uint diffractionMaxPathLength;

	[Token(Token = "0x6001665")]
	[Address(RVA = "0x120A024", Offset = "0x120A024", VA = "0x120A024")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6001666")]
	[Address(RVA = "0x120A1A8", Offset = "0x120A1A8", VA = "0x120A1A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6001667")]
	[Address(RVA = "0x120A224", Offset = "0x120A224", VA = "0x120A224")]
	public AkSpatialAudioEmitter()
	{
	}
}
[Token(Token = "0x2000334")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBA478", Offset = "0xCBA478")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBA478", Offset = "0xCBA478")]
[DisallowMultipleComponent]
public class AkSpatialAudioListener : AkSpatialAudioBase
{
	[Token(Token = "0x2000637")]
	public class SpatialAudioListenerList
	{
		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly List<AkSpatialAudioListener> listenerList;

		[Token(Token = "0x170003B3")]
		public List<AkSpatialAudioListener> ListenerList
		{
			[Token(Token = "0x6002360")]
			[Address(RVA = "0x120B11C", Offset = "0x120B11C", VA = "0x120B11C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6002361")]
		[Address(RVA = "0x120AE10", Offset = "0x120AE10", VA = "0x120AE10")]
		public bool Add(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002362")]
		[Address(RVA = "0x120AF5C", Offset = "0x120AF5C", VA = "0x120AF5C")]
		public bool Remove(AkSpatialAudioListener listener)
		{
			return default(bool);
		}

		[Token(Token = "0x6002363")]
		[Address(RVA = "0x120B124", Offset = "0x120B124", VA = "0x120B124")]
		private void Refresh()
		{
		}

		[Token(Token = "0x6002364")]
		[Address(RVA = "0x120B0A0", Offset = "0x120B0A0", VA = "0x120B0A0")]
		public SpatialAudioListenerList()
		{
		}
	}

	[Token(Token = "0x40013FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static AkSpatialAudioListener s_SpatialAudioListener;

	[Token(Token = "0x40013FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly SpatialAudioListenerList spatialAudioListeners;

	[Token(Token = "0x40013FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AkAudioListener AkAudioListener;

	[Token(Token = "0x170001CC")]
	public static AkAudioListener TheSpatialAudioListener
	{
		[Token(Token = "0x6001668")]
		[Address(RVA = "0x120ABF8", Offset = "0x120ABF8", VA = "0x120ABF8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CD")]
	public static SpatialAudioListenerList SpatialAudioListeners
	{
		[Token(Token = "0x6001669")]
		[Address(RVA = "0x120ACD0", Offset = "0x120ACD0", VA = "0x120ACD0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600166A")]
	[Address(RVA = "0x120AD38", Offset = "0x120AD38", VA = "0x120AD38")]
	private void Awake()
	{
	}

	[Token(Token = "0x600166B")]
	[Address(RVA = "0x120AD98", Offset = "0x120AD98", VA = "0x120AD98")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600166C")]
	[Address(RVA = "0x120AEE4", Offset = "0x120AEE4", VA = "0x120AEE4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600166D")]
	[Address(RVA = "0x120B030", Offset = "0x120B030", VA = "0x120B030")]
	public AkSpatialAudioListener()
	{
	}
}
[Token(Token = "0x2000335")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBA510", Offset = "0xCBA510")]
public class AkState : AkDragDropTriggerHandler
{
	[Token(Token = "0x40013FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public State data;

	[Token(Token = "0x40013FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA038", Offset = "0xCCA038")]
	private int valueIdInternal;

	[Token(Token = "0x4001400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA094", Offset = "0xCCA094")]
	private int groupIdInternal;

	[Token(Token = "0x4001401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA0F0", Offset = "0xCCA0F0")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x4001402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA14C", Offset = "0xCCA14C")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x170001CE")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x600166F")]
		[Address(RVA = "0x120B410", Offset = "0x120B410", VA = "0x120B410", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001CF")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5CFC", Offset = "0xCD5CFC")]
	public int valueID
	{
		[Token(Token = "0x6001671")]
		[Address(RVA = "0x120B434", Offset = "0x120B434", VA = "0x120B434")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001D0")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5D34", Offset = "0xCD5D34")]
	public int groupID
	{
		[Token(Token = "0x6001672")]
		[Address(RVA = "0x120B448", Offset = "0x120B448", VA = "0x120B448")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001D1")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5D6C", Offset = "0xCD5D6C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001673")]
		[Address(RVA = "0x120B45C", Offset = "0x120B45C", VA = "0x120B45C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D2")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5DA4", Offset = "0xCD5DA4")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6001674")]
		[Address(RVA = "0x120B520", Offset = "0x120B520", VA = "0x120B520")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6001670")]
	[Address(RVA = "0x120B418", Offset = "0x120B418", VA = "0x120B418", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001675")]
	[Address(RVA = "0x120B5E0", Offset = "0x120B5E0", VA = "0x120B5E0")]
	public AkState()
	{
	}
}
[Token(Token = "0x2000336")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBA548", Offset = "0xCBA548")]
[DisallowMultipleComponent]
[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBA548", Offset = "0xCBA548")]
[ExecuteInEditMode]
public class AkSurfaceReflector : MonoBehaviour
{
	[Token(Token = "0x4001403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCA1A8", Offset = "0xCCA1A8")]
	public AcousticTexture AcousticTexture;

	[Token(Token = "0x4001404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCA1E0", Offset = "0xCCA1E0")]
	public bool EnableDiffraction;

	[Token(Token = "0x4001405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCA218", Offset = "0xCCA218")]
	public bool EnableDiffractionOnBoundaryEdges;

	[Token(Token = "0x4001406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCA250", Offset = "0xCCA250")]
	public AkRoom AssociatedRoom;

	[Token(Token = "0x4001407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private MeshFilter MeshFilter;

	[Token(Token = "0x6001676")]
	[Address(RVA = "0x120BA30", Offset = "0x120BA30", VA = "0x120BA30")]
	public static ulong GetAkGeometrySetID(MeshFilter meshFilter)
	{
		return default(ulong);
	}

	[Token(Token = "0x6001677")]
	[Address(RVA = "0x120BA54", Offset = "0x120BA54", VA = "0x120BA54")]
	public static void AddGeometrySet(AcousticTexture acousticTexture, MeshFilter meshFilter, ulong roomID, bool enableDiffraction, bool enableDiffractionOnBoundaryEdges)
	{
	}

	[Token(Token = "0x6001678")]
	[Address(RVA = "0x120CAAC", Offset = "0x120CAAC", VA = "0x120CAAC")]
	public static void RemoveGeometrySet(MeshFilter meshFilter)
	{
	}

	[Token(Token = "0x6001679")]
	[Address(RVA = "0x120CB70", Offset = "0x120CB70", VA = "0x120CB70")]
	private void Awake()
	{
	}

	[Token(Token = "0x600167A")]
	[Address(RVA = "0x120CBD0", Offset = "0x120CBD0", VA = "0x120CBD0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600167B")]
	[Address(RVA = "0x120CCA8", Offset = "0x120CCA8", VA = "0x120CCA8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600167C")]
	[Address(RVA = "0x120CCB0", Offset = "0x120CCB0", VA = "0x120CCB0")]
	public AkSurfaceReflector()
	{
	}
}
[Token(Token = "0x2000337")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBA5F0", Offset = "0xCBA5F0")]
public class AkSwitch : AkDragDropTriggerHandler
{
	[Token(Token = "0x4001408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Switch data;

	[Token(Token = "0x4001409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA288", Offset = "0xCCA288")]
	private int valueIdInternal;

	[Token(Token = "0x400140A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA2E4", Offset = "0xCCA2E4")]
	private int groupIdInternal;

	[Token(Token = "0x400140B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA340", Offset = "0xCCA340")]
	private byte[] valueGuidInternal;

	[Token(Token = "0x400140C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	[SerializeField]
	[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA39C", Offset = "0xCCA39C")]
	private byte[] groupGuidInternal;

	[Token(Token = "0x170001D3")]
	protected override BaseType WwiseType
	{
		[Token(Token = "0x600167D")]
		[Address(RVA = "0x120CD24", Offset = "0x120CD24", VA = "0x120CD24", Slot = "8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D4")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5DDC", Offset = "0xCD5DDC")]
	public int valueID
	{
		[Token(Token = "0x600167F")]
		[Address(RVA = "0x120CDDC", Offset = "0x120CDDC", VA = "0x120CDDC")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001D5")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5E14", Offset = "0xCD5E14")]
	public int groupID
	{
		[Token(Token = "0x6001680")]
		[Address(RVA = "0x120CDF0", Offset = "0x120CDF0", VA = "0x120CDF0")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x170001D6")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5E4C", Offset = "0xCD5E4C")]
	public byte[] valueGuid
	{
		[Token(Token = "0x6001681")]
		[Address(RVA = "0x120CE04", Offset = "0x120CE04", VA = "0x120CE04")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x170001D7")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5E84", Offset = "0xCD5E84")]
	public byte[] groupGuid
	{
		[Token(Token = "0x6001682")]
		[Address(RVA = "0x120CEC8", Offset = "0x120CEC8", VA = "0x120CEC8")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600167E")]
	[Address(RVA = "0x120CD2C", Offset = "0x120CD2C", VA = "0x120CD2C", Slot = "4")]
	public override void HandleEvent(GameObject in_gameObject)
	{
	}

	[Token(Token = "0x6001683")]
	[Address(RVA = "0x120CF88", Offset = "0x120CF88", VA = "0x120CF88")]
	public AkSwitch()
	{
	}
}
[Token(Token = "0x2000338")]
[DisallowMultipleComponent]
public class AkTerminator : MonoBehaviour
{
	[Token(Token = "0x6001684")]
	[Address(RVA = "0x120D3D8", Offset = "0x120D3D8", VA = "0x120D3D8")]
	public AkTerminator()
	{
	}
}
[Token(Token = "0x2000339")]
public abstract class AkTriggerBase : MonoBehaviour
{
	[Token(Token = "0x2000638")]
	public delegate void Trigger(GameObject in_gameObject);

	[Token(Token = "0x400140D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Trigger triggerDelegate;

	[Token(Token = "0x6001685")]
	[Address(RVA = "0x120ED1C", Offset = "0x120ED1C", VA = "0x120ED1C")]
	public static Dictionary<uint, string> GetAllDerivedTypes()
	{
		return null;
	}

	[Token(Token = "0x6001686")]
	[Address(RVA = "0x120F138", Offset = "0x120F138", VA = "0x120F138")]
	protected AkTriggerBase()
	{
	}
}
[Token(Token = "0x200033A")]
public class AkTriggerCollisionEnter : AkTriggerBase
{
	[Token(Token = "0x400140E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001687")]
	[Address(RVA = "0x120F53C", Offset = "0x120F53C", VA = "0x120F53C")]
	private void OnCollisionEnter(Collision in_other)
	{
	}

	[Token(Token = "0x6001688")]
	[Address(RVA = "0x120F648", Offset = "0x120F648", VA = "0x120F648")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001689")]
	[Address(RVA = "0x120F754", Offset = "0x120F754", VA = "0x120F754")]
	public AkTriggerCollisionEnter()
	{
	}
}
[Token(Token = "0x200033B")]
public class AkTriggerCollisionExit : AkTriggerBase
{
	[Token(Token = "0x400140F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x600168A")]
	[Address(RVA = "0x120F75C", Offset = "0x120F75C", VA = "0x120F75C")]
	private void OnCollisionExit(Collision in_other)
	{
	}

	[Token(Token = "0x600168B")]
	[Address(RVA = "0x120F868", Offset = "0x120F868", VA = "0x120F868")]
	public AkTriggerCollisionExit()
	{
	}
}
[Token(Token = "0x200033C")]
public class AkTriggerDisable : AkTriggerBase
{
	[Token(Token = "0x600168C")]
	[Address(RVA = "0x120F870", Offset = "0x120F870", VA = "0x120F870")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600168D")]
	[Address(RVA = "0x120F884", Offset = "0x120F884", VA = "0x120F884")]
	public AkTriggerDisable()
	{
	}
}
[Token(Token = "0x200033D")]
public class AkTriggerEnable : AkTriggerBase
{
	[Token(Token = "0x600168E")]
	[Address(RVA = "0x120F88C", Offset = "0x120F88C", VA = "0x120F88C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600168F")]
	[Address(RVA = "0x120F8A0", Offset = "0x120F8A0", VA = "0x120F8A0")]
	public AkTriggerEnable()
	{
	}
}
[Token(Token = "0x200033E")]
public class AkTriggerEnter : AkTriggerBase
{
	[Token(Token = "0x4001410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001690")]
	[Address(RVA = "0x120F8A8", Offset = "0x120F8A8", VA = "0x120F8A8")]
	private void OnTriggerEnter(Collider in_other)
	{
	}

	[Token(Token = "0x6001691")]
	[Address(RVA = "0x120F9B4", Offset = "0x120F9B4", VA = "0x120F9B4")]
	public AkTriggerEnter()
	{
	}
}
[Token(Token = "0x200033F")]
public class AkTriggerExit : AkTriggerBase
{
	[Token(Token = "0x4001411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject triggerObject;

	[Token(Token = "0x6001692")]
	[Address(RVA = "0x120F9BC", Offset = "0x120F9BC", VA = "0x120F9BC")]
	private void OnTriggerExit(Collider in_other)
	{
	}

	[Token(Token = "0x6001693")]
	[Address(RVA = "0x120FAC8", Offset = "0x120FAC8", VA = "0x120FAC8")]
	public AkTriggerExit()
	{
	}
}
[Token(Token = "0x2000340")]
public abstract class AkTriggerHandler : MonoBehaviour
{
	[Token(Token = "0x4001412")]
	public const int AWAKE_TRIGGER_ID = 1151176110;

	[Token(Token = "0x4001413")]
	public const int START_TRIGGER_ID = 1281810935;

	[Token(Token = "0x4001414")]
	public const int DESTROY_TRIGGER_ID = -358577003;

	[Token(Token = "0x4001415")]
	public const int MAX_NB_TRIGGERS = 32;

	[Token(Token = "0x4001416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Dictionary<uint, string> triggerTypes;

	[Token(Token = "0x4001417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool didDestroy;

	[Token(Token = "0x4001418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<int> triggerList;

	[Token(Token = "0x4001419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useOtherObject;

	[Token(Token = "0x6001694")]
	public abstract void HandleEvent(GameObject in_gameObject);

	[Token(Token = "0x6001695")]
	[Address(RVA = "0x120FAD0", Offset = "0x120FAD0", VA = "0x120FAD0", Slot = "5")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6001696")]
	[Address(RVA = "0x120FFB8", Offset = "0x120FFB8", VA = "0x120FFB8", Slot = "6")]
	protected virtual void Start()
	{
	}

	[Token(Token = "0x6001697")]
	[Address(RVA = "0x121003C", Offset = "0x121003C", VA = "0x121003C", Slot = "7")]
	protected virtual void OnDestroy()
	{
	}

	[Token(Token = "0x6001698")]
	[Address(RVA = "0x121004C", Offset = "0x121004C", VA = "0x121004C")]
	public void DoDestroy()
	{
	}

	[Token(Token = "0x6001699")]
	[Address(RVA = "0x120FBAC", Offset = "0x120FBAC", VA = "0x120FBAC")]
	protected void RegisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x600169A")]
	[Address(RVA = "0x1210130", Offset = "0x1210130", VA = "0x1210130")]
	protected void UnregisterTriggers(List<int> in_triggerList, AkTriggerBase.Trigger in_delegate)
	{
	}

	[Token(Token = "0x600169B")]
	[Address(RVA = "0x12104E8", Offset = "0x12104E8", VA = "0x12104E8")]
	protected AkTriggerHandler()
	{
	}
}
[Token(Token = "0x2000341")]
[ExecuteInEditMode]
public abstract class AkDragDropTriggerHandler : AkTriggerHandler
{
	[Token(Token = "0x170001D8")]
	protected abstract BaseType WwiseType
	{
		[Token(Token = "0x600169D")]
		get;
	}

	[Token(Token = "0x600169E")]
	[Address(RVA = "0x16B9138", Offset = "0x16B9138", VA = "0x16B9138", Slot = "5")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600169F")]
	[Address(RVA = "0x16B9140", Offset = "0x16B9140", VA = "0x16B9140", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x60016A0")]
	[Address(RVA = "0x16B9148", Offset = "0x16B9148", VA = "0x16B9148", Slot = "7")]
	protected override void OnDestroy()
	{
	}

	[Token(Token = "0x60016A1")]
	[Address(RVA = "0x16B9150", Offset = "0x16B9150", VA = "0x16B9150")]
	protected AkDragDropTriggerHandler()
	{
	}
}
[Token(Token = "0x2000342")]
public class AkTriggerMouseDown : AkTriggerBase
{
	[Token(Token = "0x60016A2")]
	[Address(RVA = "0x12105E4", Offset = "0x12105E4", VA = "0x12105E4")]
	private void OnMouseDown()
	{
	}

	[Token(Token = "0x60016A3")]
	[Address(RVA = "0x12105F8", Offset = "0x12105F8", VA = "0x12105F8")]
	public AkTriggerMouseDown()
	{
	}
}
[Token(Token = "0x2000343")]
public class AkTriggerMouseEnter : AkTriggerBase
{
	[Token(Token = "0x60016A4")]
	[Address(RVA = "0x1210600", Offset = "0x1210600", VA = "0x1210600")]
	private void OnMouseEnter()
	{
	}

	[Token(Token = "0x60016A5")]
	[Address(RVA = "0x1210614", Offset = "0x1210614", VA = "0x1210614")]
	public AkTriggerMouseEnter()
	{
	}
}
[Token(Token = "0x2000344")]
public class AkTriggerMouseExit : AkTriggerBase
{
	[Token(Token = "0x60016A6")]
	[Address(RVA = "0x121061C", Offset = "0x121061C", VA = "0x121061C")]
	private void OnMouseExit()
	{
	}

	[Token(Token = "0x60016A7")]
	[Address(RVA = "0x1210630", Offset = "0x1210630", VA = "0x1210630")]
	public AkTriggerMouseExit()
	{
	}
}
[Token(Token = "0x2000345")]
public class AkTriggerMouseUp : AkTriggerBase
{
	[Token(Token = "0x60016A8")]
	[Address(RVA = "0x1210638", Offset = "0x1210638", VA = "0x1210638")]
	private void OnMouseUp()
	{
	}

	[Token(Token = "0x60016A9")]
	[Address(RVA = "0x121064C", Offset = "0x121064C", VA = "0x121064C")]
	public AkTriggerMouseUp()
	{
	}
}
namespace AK.Wwise
{
	[Serializable]
	[Token(Token = "0x2000346")]
	public class AcousticTexture : BaseType
	{
		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAcousticTextureReference WwiseObjectReference;

		[Token(Token = "0x170001D9")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60016AA")]
			[Address(RVA = "0x16A52C8", Offset = "0x16A52C8", VA = "0x16A52C8", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AB")]
			[Address(RVA = "0x16A52D0", Offset = "0x16A52D0", VA = "0x16A52D0", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001DA")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60016AC")]
			[Address(RVA = "0x16A5364", Offset = "0x16A5364", VA = "0x16A5364", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0x16A536C", Offset = "0x16A536C", VA = "0x16A536C")]
		public AcousticTexture()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000347")]
	public class AuxBus : BaseType
	{
		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseAuxBusReference WwiseObjectReference;

		[Token(Token = "0x170001DB")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60016AE")]
			[Address(RVA = "0x16A537C", Offset = "0x16A537C", VA = "0x16A537C", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016AF")]
			[Address(RVA = "0x16A5384", Offset = "0x16A5384", VA = "0x16A5384", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001DC")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60016B0")]
			[Address(RVA = "0x16A5418", Offset = "0x16A5418", VA = "0x16A5418", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0x16A5420", Offset = "0x16A5420", VA = "0x16A5420")]
		public AuxBus()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000348")]
	public class Bank : BaseType
	{
		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseBankReference WwiseObjectReference;

		[Token(Token = "0x170001DD")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60016B2")]
			[Address(RVA = "0x16A5428", Offset = "0x16A5428", VA = "0x16A5428", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016B3")]
			[Address(RVA = "0x16A5430", Offset = "0x16A5430", VA = "0x16A5430", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001DE")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60016B4")]
			[Address(RVA = "0x16A54C4", Offset = "0x16A54C4", VA = "0x16A54C4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0x16A54CC", Offset = "0x16A54CC", VA = "0x16A54CC")]
		public void Load(bool decodeBank = false, bool saveDecodedBank = false)
		{
		}

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0x16A5754", Offset = "0x16A5754", VA = "0x16A5754")]
		public void LoadAsync([Optional] AkCallbackManager.BankCallback callback)
		{
		}

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0x16A5998", Offset = "0x16A5998", VA = "0x16A5998")]
		public void Unload()
		{
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0x16A5B78", Offset = "0x16A5B78", VA = "0x16A5B78")]
		public Bank()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000349")]
	public abstract class BaseGroupType : BaseType
	{
		[Token(Token = "0x400141D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA3F8", Offset = "0xCCA3F8")]
		private int groupIdInternal;

		[Token(Token = "0x400141E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA454", Offset = "0xCCA454")]
		private byte[] groupGuidInternal;

		[Token(Token = "0x170001DF")]
		public WwiseObjectReference GroupWwiseObjectReference
		{
			[Token(Token = "0x60016B9")]
			[Address(RVA = "0x16A5B80", Offset = "0x16A5B80", VA = "0x16A5B80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E0")]
		public abstract WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60016BA")]
			get;
		}

		[Token(Token = "0x170001E1")]
		public uint GroupId
		{
			[Token(Token = "0x60016BB")]
			[Address(RVA = "0x16A5C64", Offset = "0x16A5C64", VA = "0x16A5C64")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001E2")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5EBC", Offset = "0xCD5EBC")]
		public int groupID
		{
			[Token(Token = "0x60016BD")]
			[Address(RVA = "0x16A5E1C", Offset = "0x16A5E1C", VA = "0x16A5E1C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E3")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5EF4", Offset = "0xCD5EF4")]
		public byte[] groupGuid
		{
			[Token(Token = "0x60016BE")]
			[Address(RVA = "0x16A5E20", Offset = "0x16A5E20", VA = "0x16A5E20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0x16A5D00", Offset = "0x16A5D00", VA = "0x16A5D00", Slot = "8")]
		public override bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0x16A5EE0", Offset = "0x16A5EE0", VA = "0x16A5EE0")]
		protected BaseGroupType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034A")]
	public abstract class BaseType
	{
		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA4B0", Offset = "0xCCA4B0")]
		private int idInternal;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		[SerializeField]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0xCCA50C", Offset = "0xCCA50C")]
		private byte[] valueGuidInternal;

		[Token(Token = "0x170001E4")]
		public abstract WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60016C0")]
			get;
			[Token(Token = "0x60016C1")]
			set;
		}

		[Token(Token = "0x170001E5")]
		public abstract WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60016C2")]
			get;
		}

		[Token(Token = "0x170001E6")]
		public virtual string Name
		{
			[Token(Token = "0x60016C3")]
			[Address(RVA = "0x16A5EE8", Offset = "0x16A5EE8", VA = "0x16A5EE8", Slot = "7")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E7")]
		public uint Id
		{
			[Token(Token = "0x60016C4")]
			[Address(RVA = "0x16A5F7C", Offset = "0x16A5F7C", VA = "0x16A5F7C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x170001E8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5F2C", Offset = "0xCD5F2C")]
		public int ID
		{
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0x16A615C", Offset = "0x16A615C", VA = "0x16A615C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001E9")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD5F64", Offset = "0xCD5F64")]
		public byte[] valueGuid
		{
			[Token(Token = "0x60016CA")]
			[Address(RVA = "0x16A6160", Offset = "0x16A6160", VA = "0x16A6160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0x16A5D98", Offset = "0x16A5D98", VA = "0x16A5D98", Slot = "8")]
		public virtual bool IsValid()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C6")]
		[Address(RVA = "0x16A5FCC", Offset = "0x16A5FCC", VA = "0x16A5FCC")]
		public bool Validate()
		{
			return default(bool);
		}

		[Token(Token = "0x60016C7")]
		[Address(RVA = "0x16A60A8", Offset = "0x16A60A8", VA = "0x16A60A8")]
		protected void Verify(AKRESULT result)
		{
		}

		[Token(Token = "0x60016C8")]
		[Address(RVA = "0x16A60AC", Offset = "0x16A60AC", VA = "0x16A60AC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0x16A5374", Offset = "0x16A5374", VA = "0x16A5374")]
		protected BaseType()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034B")]
	public class CallbackFlags
	{
		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint value;

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0x16A6220", Offset = "0x16A6220", VA = "0x16A6220")]
		public CallbackFlags()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034C")]
	public class Event : BaseType
	{
		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseEventReference WwiseObjectReference;

		[Token(Token = "0x170001EA")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60016CD")]
			[Address(RVA = "0x16A6228", Offset = "0x16A6228", VA = "0x16A6228", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016CE")]
			[Address(RVA = "0x16A6230", Offset = "0x16A6230", VA = "0x16A6230", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001EB")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60016CF")]
			[Address(RVA = "0x16A62C4", Offset = "0x16A62C4", VA = "0x16A62C4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0x16A62CC", Offset = "0x16A62CC", VA = "0x16A62CC")]
		private void VerifyPlayingID(uint playingId)
		{
		}

		[Token(Token = "0x60016D1")]
		[Address(RVA = "0x16A62D0", Offset = "0x16A62D0", VA = "0x16A62D0")]
		public uint Post(GameObject gameObject)
		{
			return default(uint);
		}

		[Token(Token = "0x60016D2")]
		[Address(RVA = "0x16A6380", Offset = "0x16A6380", VA = "0x16A6380")]
		public uint Post(GameObject gameObject, CallbackFlags flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x60016D3")]
		[Address(RVA = "0x16A645C", Offset = "0x16A645C", VA = "0x16A645C")]
		public uint Post(GameObject gameObject, uint flags, AkCallbackManager.EventCallback callback, [Optional] object cookie)
		{
			return default(uint);
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0x16A6530", Offset = "0x16A6530", VA = "0x16A6530")]
		public void Stop(GameObject gameObject, int transitionDuration = 0, AkCurveInterpolation curveInterpolation = AkCurveInterpolation.AkCurveInterpolation_Linear)
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0x16A6540", Offset = "0x16A6540", VA = "0x16A6540")]
		public void ExecuteAction(GameObject gameObject, AkActionOnEventType actionOnEventType, int transitionDuration, AkCurveInterpolation curveInterpolation)
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0x16A6610", Offset = "0x16A6610", VA = "0x16A6610")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array)
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0x16A6680", Offset = "0x16A6680", VA = "0x16A6680")]
		public void PostMIDI(GameObject gameObject, AkMIDIPostArray array, int count)
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0x16A66F8", Offset = "0x16A66F8", VA = "0x16A66F8")]
		public void StopMIDI(GameObject gameObject)
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0x16A67A4", Offset = "0x16A67A4", VA = "0x16A67A4")]
		public void StopMIDI()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0x16A683C", Offset = "0x16A683C", VA = "0x16A683C")]
		public Event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034D")]
	public class RTPC : BaseType
	{
		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseRtpcReference WwiseObjectReference;

		[Token(Token = "0x170001EC")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60016DB")]
			[Address(RVA = "0x16A6844", Offset = "0x16A6844", VA = "0x16A6844", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016DC")]
			[Address(RVA = "0x16A684C", Offset = "0x16A684C", VA = "0x16A684C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001ED")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60016DD")]
			[Address(RVA = "0x16A68E0", Offset = "0x16A68E0", VA = "0x16A68E0", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0x16A68E8", Offset = "0x16A68E8", VA = "0x16A68E8")]
		public void SetValue(GameObject gameObject, float value)
		{
		}

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0x16A69A8", Offset = "0x16A69A8", VA = "0x16A69A8")]
		public float GetValue(GameObject gameObject)
		{
			return default(float);
		}

		[Token(Token = "0x60016E0")]
		[Address(RVA = "0x16A6A9C", Offset = "0x16A6A9C", VA = "0x16A6A9C")]
		public void SetGlobalValue(float value)
		{
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0x16A6B48", Offset = "0x16A6B48", VA = "0x16A6B48")]
		public float GetGlobalValue()
		{
			return default(float);
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0x16A6B50", Offset = "0x16A6B50", VA = "0x16A6B50")]
		public RTPC()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034E")]
	public class State : BaseGroupType
	{
		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseStateReference WwiseObjectReference;

		[Token(Token = "0x170001EE")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60016E3")]
			[Address(RVA = "0x16A6B58", Offset = "0x16A6B58", VA = "0x16A6B58", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016E4")]
			[Address(RVA = "0x16A6B60", Offset = "0x16A6B60", VA = "0x16A6B60", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001EF")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60016E5")]
			[Address(RVA = "0x16A6BF4", Offset = "0x16A6BF4", VA = "0x16A6BF4", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x170001F0")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60016E6")]
			[Address(RVA = "0x16A6BFC", Offset = "0x16A6BFC", VA = "0x16A6BFC", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0x16A6C04", Offset = "0x16A6C04", VA = "0x16A6C04")]
		public void SetValue()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0x16A6CAC", Offset = "0x16A6CAC", VA = "0x16A6CAC")]
		public State()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200034F")]
	public class Switch : BaseGroupType
	{
		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public WwiseSwitchReference WwiseObjectReference;

		[Token(Token = "0x170001F1")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60016E9")]
			[Address(RVA = "0x16A6CB4", Offset = "0x16A6CB4", VA = "0x16A6CB4", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016EA")]
			[Address(RVA = "0x16A6CBC", Offset = "0x16A6CBC", VA = "0x16A6CBC", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001F2")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60016EB")]
			[Address(RVA = "0x16A6D50", Offset = "0x16A6D50", VA = "0x16A6D50", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x170001F3")]
		public override WwiseObjectType WwiseObjectGroupType
		{
			[Token(Token = "0x60016EC")]
			[Address(RVA = "0x16A6D58", Offset = "0x16A6D58", VA = "0x16A6D58", Slot = "9")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0x16A6D60", Offset = "0x16A6D60", VA = "0x16A6D60")]
		public void SetValue(GameObject gameObject)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0x16A6E1C", Offset = "0x16A6E1C", VA = "0x16A6E1C")]
		public Switch()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000350")]
	public class Trigger : BaseType
	{
		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public WwiseTriggerReference WwiseObjectReference;

		[Token(Token = "0x170001F4")]
		public override WwiseObjectReference ObjectReference
		{
			[Token(Token = "0x60016EF")]
			[Address(RVA = "0x16A6E24", Offset = "0x16A6E24", VA = "0x16A6E24", Slot = "4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60016F0")]
			[Address(RVA = "0x16A6E2C", Offset = "0x16A6E2C", VA = "0x16A6E2C", Slot = "5")]
			set
			{
			}
		}

		[Token(Token = "0x170001F5")]
		public override WwiseObjectType WwiseObjectType
		{
			[Token(Token = "0x60016F1")]
			[Address(RVA = "0x16A6EC0", Offset = "0x16A6EC0", VA = "0x16A6EC0", Slot = "6")]
			get
			{
				return default(WwiseObjectType);
			}
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0x16A6EC8", Offset = "0x16A6EC8", VA = "0x16A6EC8")]
		public void Post(GameObject gameObject)
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0x16A6F74", Offset = "0x16A6F74", VA = "0x16A6F74")]
		public Trigger()
		{
		}
	}
}
namespace Cinemachine
{
	[Token(Token = "0x2000351")]
	public static class CinemachineBasePathExtension
	{
		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xF6C674", Offset = "0xF6C674", VA = "0xF6C674")]
		public static float3[] BakePositionsWithGranularity(this CinemachinePathBase path, float granularity)
		{
			return null;
		}
	}
}
namespace Samples.Common
{
	[Token(Token = "0x2000352")]
	[AttributeAttribute(Name = "UpdateInGroupAttribute", RVA = "0xCBA658", Offset = "0xCBA658")]
	[AttributeAttribute(Name = "UpdateAfterAttribute", RVA = "0xCBA658", Offset = "0xCBA658")]
	public class SpawnRandomInSphereSystem : ComponentSystem
	{
		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xFFB070", Offset = "0xFFB070", VA = "0xFFB070", Slot = "13")]
		protected override void OnUpdate()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xFFB13C", Offset = "0xFFB13C", VA = "0xFFB13C")]
		public SpawnRandomInSphereSystem()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xFFB144", Offset = "0xFFB144", VA = "0xFFB144")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD20E8", Offset = "0xCD20E8")]
		private void <OnUpdate>b__0_0(Entity e, SpawnRandomInSphere spawner, ref LocalToWorld localToWorld)
		{
		}
	}
}
namespace Samples.Boids
{
	[Serializable]
	[Token(Token = "0x2000353")]
	[AttributeAttribute(Name = "WriteGroupAttribute", RVA = "0xCBA6E4", Offset = "0xCBA6E4")]
	public struct Boid : ISharedComponentData
	{
		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float CellRadius;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float SeparationWeight;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float AlignmentWeight;

		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float TargetWeight;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ObstacleAversionDistance;

		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MoveSpeed;
	}
	[Token(Token = "0x2000354")]
	public struct BoidObstacle : IComponentData
	{
	}
	[Token(Token = "0x2000355")]
	[DisallowMultipleComponent]
	public class BoidObstacleProxy : ComponentDataProxy<BoidObstacle>
	{
		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xFFAFD0", Offset = "0xFFAFD0", VA = "0xFFAFD0")]
		public BoidObstacleProxy()
		{
		}
	}
	[Token(Token = "0x2000356")]
	public struct BoidTarget : IComponentData
	{
	}
	[Token(Token = "0x2000357")]
	[DisallowMultipleComponent]
	public class BoidTargetProxy : ComponentDataProxy<BoidTarget>
	{
		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xFFB020", Offset = "0xFFB020", VA = "0xFFB020")]
		public BoidTargetProxy()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000358")]
	public struct SpawnRandomInSphere : ISharedComponentData
	{
		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Entity Prefab;

		[Token(Token = "0x400142E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float Radius;

		[Token(Token = "0x400142F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int Count;
	}
}
namespace Samples.Boids.Authoring
{
	[Token(Token = "0x2000359")]
	[RequiresEntityConversion]
	public class Boid : MonoBehaviour, IConvertGameObjectToEntity
	{
		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoidData m_boidData;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float CellRadius;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float SeparationWeight;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float AlignmentWeight;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float TargetWeight;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float ObstacleAversionDistance;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float MoveSpeed;

		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xFFAE24", Offset = "0xFFAE24", VA = "0xFFAE24", Slot = "4")]
		public void Convert(Entity entity, EntityManager dstManager, GameObjectConversionSystem conversionSystem)
		{
		}

		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xFFAEC4", Offset = "0xFFAEC4", VA = "0xFFAEC4")]
		public Boid()
		{
		}
	}
	[Token(Token = "0x200035A")]
	[RequiresEntityConversion]
	public class SpawnRandomInSphere : MonoBehaviour, IDeclareReferencedPrefabs, IConvertGameObjectToEntity
	{
		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject Prefab;

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Radius;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int Count;

		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xFFAECC", Offset = "0xFFAECC", VA = "0xFFAECC", Slot = "4")]
		public void Convert(Entity entity, EntityManager dstManager, GameObjectConversionSystem conversionSystem)
		{
		}

		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xFFAF60", Offset = "0xFFAF60", VA = "0xFFAF60", Slot = "5")]
		public void DeclareReferencedPrefabs(List<GameObject> referencedPrefabs)
		{
		}

		[Token(Token = "0x60016FE")]
		[Address(RVA = "0xFFAFC8", Offset = "0xFFAFC8", VA = "0xFFAFC8")]
		public SpawnRandomInSphere()
		{
		}
	}
}
namespace Analytics
{
	[Token(Token = "0x200035B")]
	public class AnalyticsManager : CacheBehaviour
	{
		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AnalyticsSDKWrapper m_analyticsSDK;

		[Token(Token = "0x60016FF")]
		[Address(RVA = "0x1216420", Offset = "0x1216420", VA = "0x1216420")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001700")]
		[Address(RVA = "0x12164D8", Offset = "0x12164D8", VA = "0x12164D8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001701")]
		[Address(RVA = "0x12164F8", Offset = "0x12164F8", VA = "0x12164F8")]
		private void ConnectToProvider()
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0x1216518", Offset = "0x1216518", VA = "0x1216518")]
		public void SendToCloud(AnalyticsEventData analyticsEvent)
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0x1216428", Offset = "0x1216428", VA = "0x1216428")]
		private void Validate(UnityEngine.Object objectMember)
		{
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0x1216538", Offset = "0x1216538", VA = "0x1216538")]
		private void LogFailedValidationAndDisableComponent(string problematicMember)
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0x12165E0", Offset = "0x12165E0", VA = "0x12165E0")]
		public AnalyticsManager()
		{
		}
	}
	[Token(Token = "0x200035C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBA788", Offset = "0xCBA788")]
	public class AnalyticsEventData : ScriptableObject
	{
		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_name;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<AnalyticsParameterData> m_stringParameters;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<AnalyticsParameterData> m_intParameters;

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<AnalyticsParameterData> m_floatParameters;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<AnalyticsParameterData> m_boolParameters;

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x1216418", Offset = "0x1216418", VA = "0x1216418")]
		public AnalyticsEventData()
		{
		}
	}
	[Token(Token = "0x200035D")]
	public abstract class AnalyticsParameterData : ScriptableObject
	{
		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string m_name;

		[Token(Token = "0x4001441")]
		public const string m_errorMessage = "AnalyticsManager> the value is null here";

		[Token(Token = "0x6001707")]
		public abstract object GetValue();

		[Token(Token = "0x6001708")]
		[Address(RVA = "0x12165E8", Offset = "0x12165E8", VA = "0x12165E8")]
		protected AnalyticsParameterData()
		{
		}
	}
	[Token(Token = "0x200035E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBA7E8", Offset = "0xCBA7E8")]
	public class BoolAnalyticsParameterData : AnalyticsParameterData
	{
		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoolVariable m_value;

		[Token(Token = "0x6001709")]
		[Address(RVA = "0x12165F8", Offset = "0x12165F8", VA = "0x12165F8", Slot = "4")]
		public override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0x12166E4", Offset = "0x12166E4", VA = "0x12166E4")]
		public BoolAnalyticsParameterData()
		{
		}
	}
	[Token(Token = "0x200035F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBA848", Offset = "0xCBA848")]
	public class FloatVariableAnalyticsParameterData : AnalyticsParameterData
	{
		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public FloatVariable m_value;

		[Token(Token = "0x600170B")]
		[Address(RVA = "0x1216D40", Offset = "0x1216D40", VA = "0x1216D40", Slot = "4")]
		public override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0x1216E48", Offset = "0x1216E48", VA = "0x1216E48")]
		public FloatVariableAnalyticsParameterData()
		{
		}
	}
	[Token(Token = "0x2000360")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBA8A8", Offset = "0xCBA8A8")]
	public class IntAnalyticsParameterData : AnalyticsParameterData
	{
		[Token(Token = "0x4001444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntVariable m_value;

		[Token(Token = "0x600170D")]
		[Address(RVA = "0x1216E50", Offset = "0x1216E50", VA = "0x1216E50", Slot = "4")]
		public override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0x1216F84", Offset = "0x1216F84", VA = "0x1216F84")]
		public IntAnalyticsParameterData()
		{
		}
	}
	[Token(Token = "0x2000361")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBA908", Offset = "0xCBA908")]
	public class StringAnalyticsParameterData : AnalyticsParameterData
	{
		[Token(Token = "0x4001445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public StringVariable m_value;

		[Token(Token = "0x600170F")]
		[Address(RVA = "0x1216F8C", Offset = "0x1216F8C", VA = "0x1216F8C", Slot = "4")]
		public override object GetValue()
		{
			return null;
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0x1217090", Offset = "0x1217090", VA = "0x1217090")]
		public StringAnalyticsParameterData()
		{
		}
	}
	[Token(Token = "0x2000362")]
	public abstract class AnalyticsSDKWrapper : CacheBehaviour
	{
		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public AnalyticsSDKWrapper m_wrappedSDK;

		[Token(Token = "0x6001711")]
		public abstract void InitializeSDK();

		[Token(Token = "0x6001712")]
		public abstract void SendingData(AnalyticsEventData m_analyticsEvent);

		[Token(Token = "0x6001713")]
		[Address(RVA = "0x12165F0", Offset = "0x12165F0", VA = "0x12165F0")]
		protected AnalyticsSDKWrapper()
		{
		}
	}
	[Token(Token = "0x2000363")]
	public class DeltaDNASDK : AnalyticsSDKWrapper
	{
		[Token(Token = "0x6001714")]
		[Address(RVA = "0x12166EC", Offset = "0x12166EC", VA = "0x12166EC", Slot = "4")]
		public override void InitializeSDK()
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0x121677C", Offset = "0x121677C", VA = "0x121677C", Slot = "5")]
		public override void SendingData(AnalyticsEventData m_analyticsEvent)
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0x1216D38", Offset = "0x1216D38", VA = "0x1216D38")]
		public DeltaDNASDK()
		{
		}
	}
}
namespace Ikimasho.Tools.Debug
{
	[Token(Token = "0x2000364")]
	public static class DebugManager
	{
		[Token(Token = "0x6001717")]
		[Address(RVA = "0xFBA780", Offset = "0xFBA780", VA = "0xFBA780")]
		public static void Log(string message)
		{
		}

		[Token(Token = "0x6001718")]
		public static void Log<T>(string message, T val)
		{
		}

		[Token(Token = "0x6001719")]
		public static void Log<T>(string message, List<T> values)
		{
		}

		[Token(Token = "0x600171A")]
		public static void Log<T>(string message, T[] values)
		{
		}

		[Token(Token = "0x600171B")]
		public static void Log<T>(string message, Dictionary<T, T> values)
		{
		}
	}
}
namespace Ikimasho.System.Boids
{
	[Token(Token = "0x2000365")]
	public class BoidHordSpawnManager : CacheBehaviour
	{
		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[Expandable]
		public BoidHordSpawnData m_boidHordSpawnData;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int[] _distributionQuantity;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float _deltaBetweenSpawns;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float _lastSpawn;

		[Token(Token = "0x400144B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float _elapsedCurveDistance;

		[Token(Token = "0x400144C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int[] _spawnedQuantity;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private List<CinemachinePath> _spawnedPath;

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xFB9880", Offset = "0xFB9880", VA = "0xFB9880")]
		private void Awake()
		{
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xFB99D4", Offset = "0xFB99D4", VA = "0xFB99D4")]
		private void Start()
		{
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xFBA0C8", Offset = "0xFBA0C8", VA = "0xFBA0C8")]
		private void Update()
		{
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xFBA1A8", Offset = "0xFBA1A8", VA = "0xFBA1A8")]
		private void SpawnOneShot()
		{
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xFB9D30", Offset = "0xFB9D30", VA = "0xFB9D30")]
		private void SpawnSection()
		{
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xFBA480", Offset = "0xFBA480", VA = "0xFBA480")]
		private void PutObjectOnCart(GameObject target)
		{
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xFB9924", Offset = "0xFB9924", VA = "0xFB9924")]
		private void CheckParameters()
		{
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xFB9BF4", Offset = "0xFB9BF4", VA = "0xFB9BF4")]
		private int[] GetQuantityDistributionOfSpawn()
		{
			return null;
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xFBA654", Offset = "0xFBA654", VA = "0xFBA654")]
		private Vector3 GetRandomPositionOnSphereSurface()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xFBA71C", Offset = "0xFBA71C", VA = "0xFBA71C")]
		private CinemachinePath GetRandomCurve()
		{
			return null;
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xFBA778", Offset = "0xFBA778", VA = "0xFBA778")]
		public BoidHordSpawnManager()
		{
		}
	}
	[Token(Token = "0x2000366")]
	public class BoidHordSpawnData : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000639")]
		public struct BoidHordWeighted
		{
			[Token(Token = "0x4001DCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string m_name;

			[Token(Token = "0x4001DCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject m_prefab;

			[Token(Token = "0x4001DCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int m_weight;
		}

		[Token(Token = "0x200063A")]
		public enum EBoidHordSpawnShape
		{
			[Token(Token = "0x4001DCE")]
			INVALID = -1,
			[Token(Token = "0x4001DCF")]
			POINT,
			[Token(Token = "0x4001DD0")]
			SPHERE,
			[Token(Token = "0x4001DD1")]
			MAX
		}

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA578", Offset = "0xCCA578")]
		public BoidHordWeighted[] m_boidsWeighted;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCCA5B0", Offset = "0xCCA5B0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA5B0", Offset = "0xCCA5B0")]
		public int m_spawnNumber;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool m_isOneShot;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_overTime;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCCA600", Offset = "0xCCA600")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA600", Offset = "0xCCA600")]
		public bool m_destroySpawnerWhenComplete;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCCA650", Offset = "0xCCA650")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA650", Offset = "0xCCA650")]
		public EBoidHordSpawnShape m_boidHordSpawnShape;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA6A0", Offset = "0xCCA6A0")]
		public float m_sphereRadius;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA6D8", Offset = "0xCCA6D8")]
		public bool m_useCurves;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public CinemachineDollyCart m_cart;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_cartSpeed;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CinemachinePath[] m_curves;

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xFB9878", Offset = "0xFB9878", VA = "0xFB9878")]
		public BoidHordSpawnData()
		{
		}
	}
}
namespace Ikimasho.Game.Shop
{
	[Token(Token = "0x2000367")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBA968", Offset = "0xCBA968")]
	public class PerkData : ScriptableObject
	{
		[Token(Token = "0x200063B")]
		public enum Statistics
		{
			[Token(Token = "0x4001DD3")]
			None,
			[Token(Token = "0x4001DD4")]
			Size,
			[Token(Token = "0x4001DD5")]
			Charge,
			[Token(Token = "0x4001DD6")]
			Damage,
			[Token(Token = "0x4001DD7")]
			ManaCost
		}

		[Token(Token = "0x200063C")]
		public enum Wand
		{
			[Token(Token = "0x4001DD9")]
			Left,
			[Token(Token = "0x4001DDA")]
			Right
		}

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA710", Offset = "0xCCA710")]
		public GameObject m_crystal;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA748", Offset = "0xCCA748")]
		public GameObject m_purchasedPlayerPerk;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA780", Offset = "0xCCA780")]
		public StringVariable m_displayedName;

		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA7B8", Offset = "0xCCA7B8")]
		public StringVariable m_description;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA7F0", Offset = "0xCCA7F0")]
		public StringVariable m_stats;

		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA828", Offset = "0xCCA828")]
		public StringVariable m_lore;

		[Token(Token = "0x400145F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA860", Offset = "0xCCA860")]
		public StringVariable m_category;

		[Token(Token = "0x4001460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA898", Offset = "0xCCA898")]
		public Sprite m_icon;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA8D0", Offset = "0xCCA8D0")]
		public Color m_perkColor;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA908", Offset = "0xCCA908")]
		public int m_cost;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA940", Offset = "0xCCA940")]
		public int m_defaultCost;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA978", Offset = "0xCCA978")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCA978", Offset = "0xCCA978")]
		public int m_rarityStar;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCA9CC", Offset = "0xCCA9CC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCA9CC", Offset = "0xCCA9CC")]
		public int m_rarity;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAA20", Offset = "0xCCAA20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCAA20", Offset = "0xCCAA20")]
		public int m_defaultRarity;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAA74", Offset = "0xCCAA74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCAA74", Offset = "0xCCAA74")]
		public int m_rarityIncreased;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAAC8", Offset = "0xCCAAC8")]
		public int m_costIncreased;

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAB00", Offset = "0xCCAB00")]
		public int m_minimumShopTierUpgrade;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAB38", Offset = "0xCCAB38")]
		public bool[] m_solarSystemRestrictions;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAB70", Offset = "0xCCAB70")]
		public bool m_spellPerk;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x91")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCABA8", Offset = "0xCCABA8")]
		public bool m_attackPerk;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x92")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCABE0", Offset = "0xCCABE0")]
		public bool m_defensePerk;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAC18", Offset = "0xCCAC18")]
		public Statistics m_statistics;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAC50", Offset = "0xCCAC50")]
		public bool m_inPercent;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAC88", Offset = "0xCCAC88")]
		public int m_additionalStatValue;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCACC0", Offset = "0xCCACC0")]
		public GestureData.SpellType m_spellType;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCACF8", Offset = "0xCCACF8")]
		public bool m_spellModifier;

		[Token(Token = "0x4001473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAD30", Offset = "0xCCAD30")]
		public GestureData m_gestureToAdd;

		[Token(Token = "0x4001474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAD68", Offset = "0xCCAD68")]
		public GestureData m_gestureDependency;

		[Token(Token = "0x4001475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCADA0", Offset = "0xCCADA0")]
		public List<GestureData> m_gestureDependencies;

		[Token(Token = "0x4001476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCADD8", Offset = "0xCCADD8")]
		public Wand m_wandUsed;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAE10", Offset = "0xCCAE10")]
		public bool m_playerPerk;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAE48", Offset = "0xCCAE48")]
		public UnityEvent OnPlayerPerk;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAE80", Offset = "0xCCAE80")]
		public bool m_oncePurchased;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD1")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAEB8", Offset = "0xCCAEB8")]
		public bool m_limitConditions;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAEF0", Offset = "0xCCAEF0")]
		public IntVariable m_variable;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAF28", Offset = "0xCCAF28")]
		public int m_valueLimit;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public bool m_purchased;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public string m_perkId;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public int m_currentPurchaseValue;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public GestureData m_replacement;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public int m_slotNumber;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAF90", Offset = "0xCCAF90")]
		public Event m_audioEventOnPerkGranted;

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xFB97DC", Offset = "0xFB97DC", VA = "0xFB97DC")]
		public PerkData()
		{
		}
	}
	[Token(Token = "0x2000368")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBA9C8", Offset = "0xCBA9C8")]
	public class ShopData : ScriptableObject
	{
		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCAFC8", Offset = "0xCCAFC8")]
		public List<PerkData> m_perks;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB000", Offset = "0xCCB000")]
		public int m_shopLevel;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB038", Offset = "0xCCB038")]
		public int m_perkBubble;

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xFB9868", Offset = "0xFB9868", VA = "0xFB9868")]
		public ShopData()
		{
		}
	}
}
namespace Ikimasho.Game.SolarSystem
{
	[Token(Token = "0x2000369")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAA28", Offset = "0xCBAA28")]
	public class GalaxyData : ScriptableObject
	{
		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB070", Offset = "0xCCB070")]
		public GameObject m_galaxyPrefab;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB0A8", Offset = "0xCCB0A8")]
		public LevelData m_levelToLoad;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB0E0", Offset = "0xCCB0E0")]
		public Label m_galaxyPositionInSolarSystem;

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xFB9870", Offset = "0xFB9870", VA = "0xFB9870")]
		public GalaxyData()
		{
		}
	}
}
namespace Ikimasho.Game.Projectile
{
	[Token(Token = "0x200036A")]
	public class AmmoData : ScriptableObject
	{
		[Token(Token = "0x600172B")]
		[Address(RVA = "0xFB97D4", Offset = "0xFB97D4", VA = "0xFB97D4")]
		public AmmoData()
		{
		}
	}
}
namespace Ikimasho.Game.Gesture
{
	[Token(Token = "0x200036B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAA88", Offset = "0xCBAA88")]
	public class DotData : ScriptableObject
	{
		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject m_dotPrefab;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int m_hp;

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xF42FE8", Offset = "0xF42FE8", VA = "0xF42FE8")]
		public DotData()
		{
		}
	}
	[Token(Token = "0x200036C")]
	public class GestureManager : CacheBehaviour
	{
		[Serializable]
		[Token(Token = "0x200063D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF6CC", Offset = "0xCBF6CC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001DDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001DDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Transform, bool> <>9__68_0;

			[Token(Token = "0x4001DDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Transform, bool> <>9__75_2;

			[Token(Token = "0x4001DDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<Transform, bool> <>9__75_4;

			[Token(Token = "0x4001DDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<Transform, bool> <>9__75_7;

			[Token(Token = "0x4001DE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<Transform, bool> <>9__75_9;

			[Token(Token = "0x4001DE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<Transform, bool> <>9__78_1;

			[Token(Token = "0x4001DE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Func<Transform, bool> <>9__78_3;

			[Token(Token = "0x600236A")]
			[Address(RVA = "0xFB8450", Offset = "0xFB8450", VA = "0xFB8450")]
			public <>c()
			{
			}

			[Token(Token = "0x600236B")]
			[Address(RVA = "0xFB8458", Offset = "0xFB8458", VA = "0xFB8458")]
			internal bool <DeactivateCrystals>b__68_0(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x600236C")]
			[Address(RVA = "0xFB84E4", Offset = "0xFB84E4", VA = "0xFB84E4")]
			internal bool <CheckMana>b__75_2(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x600236D")]
			[Address(RVA = "0xFB8548", Offset = "0xFB8548", VA = "0xFB8548")]
			internal bool <CheckMana>b__75_4(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x600236E")]
			[Address(RVA = "0xFB85AC", Offset = "0xFB85AC", VA = "0xFB85AC")]
			internal bool <CheckMana>b__75_7(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x600236F")]
			[Address(RVA = "0xFB8610", Offset = "0xFB8610", VA = "0xFB8610")]
			internal bool <CheckMana>b__75_9(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002370")]
			[Address(RVA = "0xFB8674", Offset = "0xFB8674", VA = "0xFB8674")]
			internal bool <OnGestureOneHandFinished>b__78_1(Transform x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002371")]
			[Address(RVA = "0xFB8700", Offset = "0xFB8700", VA = "0xFB8700")]
			internal bool <OnGestureOneHandFinished>b__78_3(Transform x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF6DC", Offset = "0xCBF6DC")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001DE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x6002372")]
			[Address(RVA = "0xFB878C", Offset = "0xFB878C", VA = "0xFB878C")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x6002373")]
			[Address(RVA = "0xFB8794", Offset = "0xFB8794", VA = "0xFB8794")]
			internal bool <CheckMana>b__1(GameObject x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002374")]
			[Address(RVA = "0xFB8838", Offset = "0xFB8838", VA = "0xFB8838")]
			internal bool <CheckMana>b__3(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x200063F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF6EC", Offset = "0xCBF6EC")]
		private sealed class <>c__DisplayClass75_1
		{
			[Token(Token = "0x4001DE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GestureData gdata;

			[Token(Token = "0x6002375")]
			[Address(RVA = "0xFB88DC", Offset = "0xFB88DC", VA = "0xFB88DC")]
			public <>c__DisplayClass75_1()
			{
			}

			[Token(Token = "0x6002376")]
			[Address(RVA = "0xFB88E4", Offset = "0xFB88E4", VA = "0xFB88E4")]
			internal bool <CheckMana>b__0(FloatVariable x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000640")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF6FC", Offset = "0xCBF6FC")]
		private sealed class <>c__DisplayClass75_2
		{
			[Token(Token = "0x4001DE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GameObject go;

			[Token(Token = "0x6002377")]
			[Address(RVA = "0xFB89C0", Offset = "0xFB89C0", VA = "0xFB89C0")]
			public <>c__DisplayClass75_2()
			{
			}

			[Token(Token = "0x6002378")]
			[Address(RVA = "0xFB89C8", Offset = "0xFB89C8", VA = "0xFB89C8")]
			internal bool <CheckMana>b__6(GameObject x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002379")]
			[Address(RVA = "0xFB8A6C", Offset = "0xFB8A6C", VA = "0xFB8A6C")]
			internal bool <CheckMana>b__8(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000641")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF70C", Offset = "0xCBF70C")]
		private sealed class <>c__DisplayClass75_3
		{
			[Token(Token = "0x4001DE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GestureData gdata;

			[Token(Token = "0x600237A")]
			[Address(RVA = "0xFB8B10", Offset = "0xFB8B10", VA = "0xFB8B10")]
			public <>c__DisplayClass75_3()
			{
			}

			[Token(Token = "0x600237B")]
			[Address(RVA = "0xFB8B18", Offset = "0xFB8B18", VA = "0xFB8B18")]
			internal bool <CheckMana>b__5(FloatVariable x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x2000642")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF71C", Offset = "0xCBF71C")]
		private sealed class <OnSpellChosenRoutine>d__77 : IEnumerator<float>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001DE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001DE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <>2__current;

			[Token(Token = "0x4001DE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public GestureManager <>4__this;

			[Token(Token = "0x4001DEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GameObject arrow;

			[Token(Token = "0x4001DEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <curve>5__2;

			[Token(Token = "0x4001DEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CinemachinePath <curvePath>5__3;

			[Token(Token = "0x4001DED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__4;

			[Token(Token = "0x4001DEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private int <length>5__5;

			[Token(Token = "0x170003B4")]
			private float System.Collections.Generic.IEnumerator<System.Single>.Current
			{
				[Token(Token = "0x600237F")]
				[Address(RVA = "0xFB9708", Offset = "0xFB9708", VA = "0xFB9708", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170003B5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002381")]
				[Address(RVA = "0xFB9770", Offset = "0xFB9770", VA = "0xFB9770", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600237C")]
			[Address(RVA = "0xFB8DB4", Offset = "0xFB8DB4", VA = "0xFB8DB4")]
			[DebuggerHidden]
			public <OnSpellChosenRoutine>d__77(int <>1__state)
			{
			}

			[Token(Token = "0x600237D")]
			[Address(RVA = "0xFB8DE0", Offset = "0xFB8DE0", VA = "0xFB8DE0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600237E")]
			[Address(RVA = "0xFB8DE4", Offset = "0xFB8DE4", VA = "0xFB8DE4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002380")]
			[Address(RVA = "0xFB9710", Offset = "0xFB9710", VA = "0xFB9710", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000643")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF72C", Offset = "0xCBF72C")]
		private sealed class <>c__DisplayClass78_0
		{
			[Token(Token = "0x4001DEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public GestureData gesture;

			[Token(Token = "0x6002382")]
			[Address(RVA = "0xFB8BF4", Offset = "0xFB8BF4", VA = "0xFB8BF4")]
			public <>c__DisplayClass78_0()
			{
			}

			[Token(Token = "0x6002383")]
			[Address(RVA = "0xFB8BFC", Offset = "0xFB8BFC", VA = "0xFB8BFC")]
			internal bool <OnGestureOneHandFinished>b__0(FloatVariable x)
			{
				return default(bool);
			}

			[Token(Token = "0x6002384")]
			[Address(RVA = "0xFB8CD8", Offset = "0xFB8CD8", VA = "0xFB8CD8")]
			internal bool <OnGestureOneHandFinished>b__2(FloatVariable x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCB118", Offset = "0xCCB118")]
		[Expandable]
		public GestureGeneralData m_gestureGeneralData;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TrailRendererVariable m_currentTrailRight;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public TrailRendererVariable m_currentTrailLeft;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public CinemachinePathVariable m_currentPathRight;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public CinemachinePathVariable m_currentPathLeft;

		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CinemachineDollyCartVariable m_currentDollyCartPlayerRight;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public CinemachineDollyCartVariable m_currentDollyCartPlayerLeft;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public BoolVariable m_leftHandInChoice;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public BoolVariable m_rightHandInChoice;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public BoolVariable m_leftHandInGesture;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public BoolVariable m_rightHandInGesture;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public FloatVariable m_mana;

		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject m_handRight;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject m_handLeft;

		[Token(Token = "0x4001499")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject m_projector;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public BoolVariable m_useDotSystem;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCB164", Offset = "0xCCB164")]
		public int m_section;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public LayerMask m_layerMaskProjector;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObjectVariable m_rightHandSpellPrefabLoaded;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObjectVariable m_leftHandSpellPrefabLoaded;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SpellDataVariable m_rightHandSpellData;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public SpellDataVariable m_leftHandSpellData;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public IntVariable m_numberOfChargeLeft;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public IntVariable m_numberOfChargeRight;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public IntVariable m_numberOfAddedCharges;

		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public IntVariable m_numberOfAddedChargesInterRun;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public GameObject m_sphere;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public GameObject[] m_waypointInteractors;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public GameObject m_dot;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public GameObject m_leftHand;

		[Token(Token = "0x40014A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public GameObject m_rightHand;

		[Token(Token = "0x40014AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public WandDataVariable m_leftWand;

		[Token(Token = "0x40014AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public WandDataVariable m_rightWand;

		[Token(Token = "0x40014AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCB180", Offset = "0xCCB180")]
		public List<FloatVariable> m_cooldownsLeft;

		[Token(Token = "0x40014AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public List<FloatVariable> m_cooldownsRight;

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public IntVariable m_cooldownReduction;

		[Token(Token = "0x40014AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public IntVariable m_cooldownReductionInterRun;

		[Token(Token = "0x40014B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public GameObject m_gestureArrow;

		[Token(Token = "0x40014B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GameObject m_leftSpellHolder;

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public Transform[] m_holders;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public UnityEvent OnGestureLeftHandFinished;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public UnityEvent OnGestureRightHandFinished;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public ObjectArrayUnityEvent OnCooldownStarted;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public GameObjectUnityEvent OnWhichHandGesture;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public IntUnityEvent OnPathDotsInstantiated;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public List<GameObject> m_elements;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public GameObject m_wandHolderLeft;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public GameObject m_wandHolderRight;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public GameObject m_shooterLeft;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public GameObject m_shooterRight;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public GameObject m_spellInHandLeft;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public GameObject m_spellInHandRight;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public GameObject m_handPositionLeft;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public GameObject m_handPositionRight;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public StringUnityEvent OnGrabLeft;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public StringUnityEvent OnGrabRight;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public GameObject m_shamanSphere;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public float m_timeBetweenBubbleSpawn;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		public Vector3 m_offsetRotation;

		[Token(Token = "0x40014C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public GameObjectVariable m_headset;

		[Token(Token = "0x40014C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public string m_leftGripAxisName;

		[Token(Token = "0x40014C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public string m_rightGripAxisName;

		[Token(Token = "0x40014C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public List<GameObject> _leftHandGeneratedCurves;

		[Token(Token = "0x40014CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public List<GameObject> _rightHandGeneratedCurves;

		[Token(Token = "0x40014CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private SpellData _spellPreloaded;

		[Token(Token = "0x40014CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private float _offsetRot;

		[Token(Token = "0x40014CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private float _offsetPos;

		[Token(Token = "0x40014CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private GameObject _currentRightCurve;

		[Token(Token = "0x40014CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private GameObject _currentLeftCurve;

		[Token(Token = "0x40014D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private GestureData _currentLeftGestureData;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private GestureData _currentRightGestureData;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Color _currentRuneColor;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private GameObject _currentHand;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private GameObject _currentLeftWand;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private GameObject _currentRightWand;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private GameObject _currentFxLeft;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private GameObject _currentFxRight;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private List<GameObject> m_leftCrystals;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private List<GameObject> m_rightCrystals;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private List<GameObject> m_leftCurves;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private List<GameObject> m_rightCurves;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private MaterialPropertyBlock _overrideMaterialPropertyBlock;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		private MaterialPropertyBlock _cleanMaterialPropertyBlock;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private Vector3 _currentChosenSpellInitialPosition;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		private Quaternion _currentLeftCurveRotation;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		private Quaternion _currentRightCurveRotation;

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xF43084", Offset = "0xF43084", VA = "0xF43084")]
		private void Awake()
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xF435BC", Offset = "0xF435BC", VA = "0xF435BC")]
		public void OnInstanciedGestures(string tag)
		{
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xF44C8C", Offset = "0xF44C8C", VA = "0xF44C8C")]
		public void OnAbortGesture(GameObject hand)
		{
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xF45088", Offset = "0xF45088", VA = "0xF45088")]
		public void OnWandShamanSphereInteractedTest(object[] parameters)
		{
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xF45344", Offset = "0xF45344", VA = "0xF45344")]
		public void OnWandShamanSphereLeave(object[] parameters)
		{
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xF45674", Offset = "0xF45674", VA = "0xF45674")]
		public void DeactivateAllCrystals()
		{
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xF44DDC", Offset = "0xF44DDC", VA = "0xF44DDC")]
		public void DeactivateCrystals(List<GameObject> m_crystals)
		{
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xF4548C", Offset = "0xF4548C", VA = "0xF4548C")]
		public void DeactivateCrystalsWithException(List<GameObject> m_crystals, GameObject _currentCurve)
		{
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xF451BC", Offset = "0xF451BC", VA = "0xF451BC")]
		public void ActivateCrystals(List<GameObject> m_crystals)
		{
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xF45718", Offset = "0xF45718", VA = "0xF45718")]
		public void LoadCurrentGestureData(GameObject gesture)
		{
		}

		[Token(Token = "0x6001737")]
		private T GetComponentInChildByTag<T>(Transform parent, string tag) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xF439D0", Offset = "0xF439D0", VA = "0xF439D0")]
		private void SpawnCurvesSphereTest(List<GestureData> gestures, GameObject hand, bool firstInstance = false)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xF457C4", Offset = "0xF457C4", VA = "0xF457C4")]
		private void GenerateCurveDataTest(CinemachinePath curve, Transform spawnPoint, GestureData gestureData, [Optional] Label slot, [Optional] string tag, [Optional] TextMeshPro gestureDisplay)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xF45C90", Offset = "0xF45C90", VA = "0xF45C90")]
		public void CheckMana()
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xF46E14", Offset = "0xF46E14", VA = "0xF46E14")]
		public void OnSpellChosen(GameObject arrow)
		{
		}

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xF46E9C", Offset = "0xF46E9C", VA = "0xF46E9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD20F8", Offset = "0xCD20F8")]
		public IEnumerator<float> OnSpellChosenRoutine(GameObject arrow)
		{
			return null;
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xF46F34", Offset = "0xF46F34", VA = "0xF46F34")]
		public void OnGestureOneHandFinished(GameObject curve)
		{
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xF48DB8", Offset = "0xF48DB8", VA = "0xF48DB8")]
		public void DestroyWand(string tag)
		{
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xF46C0C", Offset = "0xF46C0C", VA = "0xF46C0C")]
		private GestureData FindGestureByCurveGameObject(GestureData[] gestures, GameObject curve)
		{
			return null;
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xF43288", Offset = "0xF43288", VA = "0xF43288")]
		private bool ValidateParameters()
		{
			return default(bool);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xF49188", Offset = "0xF49188", VA = "0xF49188")]
		public GestureManager()
		{
		}
	}
	[Token(Token = "0x200036D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAAE8", Offset = "0xCBAAE8")]
	public class GestureData : ScriptableObject
	{
		[Token(Token = "0x2000644")]
		public enum CardinalSpawn
		{
			[Token(Token = "0x4001DF1")]
			INVALID = -1,
			[Token(Token = "0x4001DF2")]
			N,
			[Token(Token = "0x4001DF3")]
			E,
			[Token(Token = "0x4001DF4")]
			S,
			[Token(Token = "0x4001DF5")]
			O,
			[Token(Token = "0x4001DF6")]
			NE,
			[Token(Token = "0x4001DF7")]
			NO,
			[Token(Token = "0x4001DF8")]
			SE,
			[Token(Token = "0x4001DF9")]
			SO,
			[Token(Token = "0x4001DFA")]
			MAX
		}

		[Token(Token = "0x2000645")]
		public enum SpellType
		{
			[Token(Token = "0x4001DFC")]
			Offensive,
			[Token(Token = "0x4001DFD")]
			Defensive,
			[Token(Token = "0x4001DFE")]
			Support,
			[Token(Token = "0x4001DFF")]
			Super,
			[Token(Token = "0x4001E00")]
			Ultime,
			[Token(Token = "0x4001E01")]
			Katana,
			[Token(Token = "0x4001E02")]
			Stun,
			[Token(Token = "0x4001E03")]
			Explosion
		}

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB1B8", Offset = "0xCCB1B8")]
		public GameObject gesturePrefab;

		[Token(Token = "0x40014E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB1F0", Offset = "0xCCB1F0")]
		public int m_damages;

		[Token(Token = "0x40014E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int m_defaultDamages;

		[Token(Token = "0x40014E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB228", Offset = "0xCCB228")]
		[Expandable]
		public SpellData m_spellToLoad;

		[Token(Token = "0x40014E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCCB274", Offset = "0xCCB274")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB274", Offset = "0xCCB274")]
		public bool m_useBranch;

		[Token(Token = "0x40014E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_distanceBeforeShowingBranch;

		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Expandable]
		public GestureData[] m_branches;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<GestureData> m_modifiers;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB2D4", Offset = "0xCCB2D4")]
		public bool m_isModifier;

		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public ModifierData m_modifier;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0xCCB30C", Offset = "0xCCB30C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB30C", Offset = "0xCCB30C")]
		public CardinalSpawn cardinalSpawnPoint;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB35C", Offset = "0xCCB35C")]
		public Label m_cardinalSpawnTransform;

		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB394", Offset = "0xCCB394")]
		public Label m_cardinalSpawnTransformRight;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB3CC", Offset = "0xCCB3CC")]
		public Color m_runeColor;

		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB404", Offset = "0xCCB404")]
		public string m_name;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB43C", Offset = "0xCCB43C")]
		public bool m_isUltimateSpell;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<string> m_moonElementTypes;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool m_ultimateSpellActivated;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB484", Offset = "0xCCB484")]
		public float m_manaCost;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float m_defaultManaCost;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB4BC", Offset = "0xCCB4BC")]
		public GameObject m_fxSpawnWand;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB4F4", Offset = "0xCCB4F4")]
		public GameObject m_fxVanishWand;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB52C", Offset = "0xCCB52C")]
		public GameObject m_wandToUse;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB564", Offset = "0xCCB564")]
		public string m_handTag;

		[Token(Token = "0x40014F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB59C", Offset = "0xCCB59C")]
		public SpellType m_spellType;

		[Token(Token = "0x40014FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB5D4", Offset = "0xCCB5D4")]
		public bool m_inOrder;

		[Token(Token = "0x40014FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<DotData> m_dotDatas;

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xF42FF0", Offset = "0xF42FF0", VA = "0xF42FF0")]
		public GestureData()
		{
		}
	}
	[Token(Token = "0x200036E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAB48", Offset = "0xCBAB48")]
	public class GestureGeneralData : ScriptableObject
	{
		[Token(Token = "0x40014FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Expandable]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB60C", Offset = "0xCCB60C")]
		public GestureData[] m_gestureDatas;

		[Token(Token = "0x40014FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Expandable]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB658", Offset = "0xCCB658")]
		public GestureData[] m_gesturesLeftHandEntryPoint;

		[Token(Token = "0x40014FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Expandable]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB6A4", Offset = "0xCCB6A4")]
		public GestureData[] m_gesturesRightHandEntryPoint;

		[Token(Token = "0x40014FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Expandable]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB6F0", Offset = "0xCCB6F0")]
		public GestureData[] m_gesturesBothHands;

		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Expandable]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB73C", Offset = "0xCCB73C")]
		public GestureData[] m_gesturesOneHandBranch;

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xF4307C", Offset = "0xF4307C", VA = "0xF4307C")]
		public GestureGeneralData()
		{
		}
	}
}
namespace Universe.LevelDesign
{
	[Token(Token = "0x200036F")]
	public class AsteroidFieldGenerator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000646")]
		public struct SpawnElement
		{
			[Token(Token = "0x4001E04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform m_objectToSpawn;

			[Token(Token = "0x4001E05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCEA54", Offset = "0xCCEA54")]
			public float m_ratioOfSpawn;

			[Token(Token = "0x4001E06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCEA6C", Offset = "0xCCEA6C")]
			public bool m_enableRandomRotation;

			[Token(Token = "0x4001E07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool m_enableRandomScale;

			[Token(Token = "0x4001E08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCEAA4", Offset = "0xCCEAA4")]
			public float m_minimumScaleX;

			[Token(Token = "0x4001E09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCEAC0", Offset = "0xCCEAC0")]
			public float m_maximumScaleX;

			[Token(Token = "0x4001E0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCEADC", Offset = "0xCCEADC")]
			public float m_minimumScaleY;

			[Token(Token = "0x4001E0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCEAF8", Offset = "0xCCEAF8")]
			public float m_maximumScaleY;

			[Token(Token = "0x4001E0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCEB14", Offset = "0xCCEB14")]
			public float m_minimumScaleZ;

			[Token(Token = "0x4001E0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCEB30", Offset = "0xCCEB30")]
			public float m_maximumScaleZ;
		}

		[StructLayout(3)]
		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF73C", Offset = "0xCBF73C")]
		private struct <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001E0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public SpawnElement? elementToSpawn;
		}

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB788", Offset = "0xCCB788")]
		public List<SpawnElement> m_elementToSpawn;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB7C0", Offset = "0xCCB7C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCB7C0", Offset = "0xCCB7C0")]
		public float m_innerDiameter;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCB818", Offset = "0xCCB818")]
		public float m_outerDiameter;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCB834", Offset = "0xCCB834")]
		public float m_heightMirrored;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCB850", Offset = "0xCCB850")]
		public Color m_validColor;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Color m_invalidColor;

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public int m_quantityToGenerate;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform _transform;

		[Token(Token = "0x6001744")]
		[Address(RVA = "0x1105510", Offset = "0x1105510", VA = "0x1105510")]
		public void Generate()
		{
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0x11058CC", Offset = "0x11058CC", VA = "0x11058CC")]
		private SpawnElement? GetCumulativeRandomizedObjectFromSpawnList()
		{
			return null;
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0x1105D00", Offset = "0x1105D00", VA = "0x1105D00")]
		private float GetSpawnRange()
		{
			return default(float);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0x1105AD0", Offset = "0x1105AD0", VA = "0x1105AD0")]
		private Vector3 GetValidRandomPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0x1105DB0", Offset = "0x1105DB0", VA = "0x1105DB0")]
		public AsteroidFieldGenerator()
		{
		}

		[Token(Token = "0x6001749")]
		[Address(RVA = "0x1105BE8", Offset = "0x1105BE8", VA = "0x1105BE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD215C", Offset = "0xCD215C")]
		internal static Vector3 <Generate>g__GetRandomScale|8_0(ref <>c__DisplayClass8_0 P_0)
		{
			return default(Vector3);
		}
	}
}
namespace ScriptableObjectArchitecture
{
	[Token(Token = "0x2000370")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBABA8", Offset = "0xCBABA8")]
	public class ConversationCollection : Collection<ConversationData>
	{
		[Token(Token = "0x2000648")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF74C", Offset = "0xCBF74C")]
		private sealed class <>c__DisplayClass2_0
		{
			[Token(Token = "0x4001E0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public System.Random rnd;

			[Token(Token = "0x6002385")]
			[Address(RVA = "0x1017E88", Offset = "0x1017E88", VA = "0x1017E88")]
			public <>c__DisplayClass2_0()
			{
			}

			[Token(Token = "0x6002386")]
			[Address(RVA = "0x1017EE0", Offset = "0x1017EE0", VA = "0x1017EE0")]
			internal int <GenerateShuffle>b__0(int item)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<int> m_history;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<int> _shuffleOrder;

		[Token(Token = "0x600174A")]
		[Address(RVA = "0x1017C90", Offset = "0x1017C90", VA = "0x1017C90")]
		public ConversationData GetRandomConversationWithoutRepetition()
		{
			return null;
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0x1017D30", Offset = "0x1017D30", VA = "0x1017D30")]
		private List<int> GenerateShuffle()
		{
			return null;
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0x1017E90", Offset = "0x1017E90", VA = "0x1017E90")]
		public ConversationCollection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000371")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAC14", Offset = "0xCBAC14")]
	public sealed class CurveHapticsDataGameEvent : GameEventBase<CurveHapticsData>
	{
		[Token(Token = "0x600174D")]
		[Address(RVA = "0x1017F00", Offset = "0x1017F00", VA = "0x1017F00")]
		public CurveHapticsDataGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000372")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAC80", Offset = "0xCBAC80")]
	public sealed class FloatVariableHapticsDataGameEvent : GameEventBase<FloatVariableHapticsData>
	{
		[Token(Token = "0x600174E")]
		[Address(RVA = "0x1018F30", Offset = "0x1018F30", VA = "0x1018F30")]
		public FloatVariableHapticsDataGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000373")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBACEC", Offset = "0xCBACEC")]
	public sealed class SimpleHapticsDataGameEvent : GameEventBase<SimpleHapticsData>
	{
		[Token(Token = "0x600174F")]
		[Address(RVA = "0x101C0B0", Offset = "0x101C0B0", VA = "0x101C0B0")]
		public SimpleHapticsDataGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000374")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAD58", Offset = "0xCBAD58")]
	public sealed class SpectrumHapticsDataGameEvent : GameEventBase<SpectrumHapticsData>
	{
		[Token(Token = "0x6001750")]
		[Address(RVA = "0x101C2F0", Offset = "0x101C2F0", VA = "0x101C2F0")]
		public SpectrumHapticsDataGameEvent()
		{
		}
	}
	[Token(Token = "0x2000375")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBADC4", Offset = "0xCBADC4")]
	public sealed class CurveHapticsDataGameEventListener : BaseGameEventListener<CurveHapticsData, CurveHapticsDataGameEvent, CurveHapticsDataUnityEvent>
	{
		[Token(Token = "0x6001751")]
		[Address(RVA = "0x1017F50", Offset = "0x1017F50", VA = "0x1017F50")]
		public CurveHapticsDataGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000376")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBADFC", Offset = "0xCBADFC")]
	public sealed class FloatVariableHapticsDataGameEventListener : BaseGameEventListener<FloatVariableHapticsData, FloatVariableHapticsDataGameEvent, FloatVariableHapticsDataUnityEvent>
	{
		[Token(Token = "0x6001752")]
		[Address(RVA = "0x1018F80", Offset = "0x1018F80", VA = "0x1018F80")]
		public FloatVariableHapticsDataGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000377")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBAE34", Offset = "0xCBAE34")]
	public sealed class SimpleHapticsDataGameEventListener : BaseGameEventListener<SimpleHapticsData, SimpleHapticsDataGameEvent, SimpleHapticsDataUnityEvent>
	{
		[Token(Token = "0x6001753")]
		[Address(RVA = "0x101C100", Offset = "0x101C100", VA = "0x101C100")]
		public SimpleHapticsDataGameEventListener()
		{
		}
	}
	[Token(Token = "0x2000378")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBAE6C", Offset = "0xCBAE6C")]
	public sealed class SpectrumHapticsDataGameEventListener : BaseGameEventListener<SpectrumHapticsData, SpectrumHapticsDataGameEvent, SpectrumHapticsDataUnityEvent>
	{
		[Token(Token = "0x6001754")]
		[Address(RVA = "0x101C340", Offset = "0x101C340", VA = "0x101C340")]
		public SpectrumHapticsDataGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000379")]
	public sealed class CurveHapticsDataUnityEvent : UnityEvent<CurveHapticsData>
	{
		[Token(Token = "0x6001755")]
		[Address(RVA = "0x1018050", Offset = "0x1018050", VA = "0x1018050")]
		public CurveHapticsDataUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037A")]
	public sealed class FloatVariableHapticsDataUnityEvent : UnityEvent<FloatVariableHapticsData>
	{
		[Token(Token = "0x6001756")]
		[Address(RVA = "0x1019080", Offset = "0x1019080", VA = "0x1019080")]
		public FloatVariableHapticsDataUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037B")]
	public sealed class SimpleHapticsDataUnityEvent : UnityEvent<SimpleHapticsData>
	{
		[Token(Token = "0x6001757")]
		[Address(RVA = "0x101C200", Offset = "0x101C200", VA = "0x101C200")]
		public SimpleHapticsDataUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037C")]
	public sealed class SpectrumHapticsDataUnityEvent : UnityEvent<SpectrumHapticsData>
	{
		[Token(Token = "0x6001758")]
		[Address(RVA = "0x101C440", Offset = "0x101C440", VA = "0x101C440")]
		public SpectrumHapticsDataUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037D")]
	public sealed class CurveHapticsDataReference : BaseReference<CurveHapticsData, CurveHapticsDataVariable>
	{
		[Token(Token = "0x6001759")]
		[Address(RVA = "0x1017FA0", Offset = "0x1017FA0", VA = "0x1017FA0")]
		public CurveHapticsDataReference()
		{
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0x1017FF0", Offset = "0x1017FF0", VA = "0x1017FF0")]
		public CurveHapticsDataReference(CurveHapticsData value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037E")]
	public sealed class FloatVariableHapticsDataReference : BaseReference<FloatVariableHapticsData, FloatVariableHapticsDataVariable>
	{
		[Token(Token = "0x600175B")]
		[Address(RVA = "0x1018FD0", Offset = "0x1018FD0", VA = "0x1018FD0")]
		public FloatVariableHapticsDataReference()
		{
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0x1019020", Offset = "0x1019020", VA = "0x1019020")]
		public FloatVariableHapticsDataReference(FloatVariableHapticsData value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037F")]
	public sealed class SimpleHapticsDataReference : BaseReference<SimpleHapticsData, SimpleHapticsDataVariable>
	{
		[Token(Token = "0x600175D")]
		[Address(RVA = "0x101C150", Offset = "0x101C150", VA = "0x101C150")]
		public SimpleHapticsDataReference()
		{
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0x101C1A0", Offset = "0x101C1A0", VA = "0x101C1A0")]
		public SimpleHapticsDataReference(SimpleHapticsData value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000380")]
	public sealed class SpectrumHapticsDataReference : BaseReference<SpectrumHapticsData, SpectrumHapticsDataVariable>
	{
		[Token(Token = "0x600175F")]
		[Address(RVA = "0x101C390", Offset = "0x101C390", VA = "0x101C390")]
		public SpectrumHapticsDataReference()
		{
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0x101C3E0", Offset = "0x101C3E0", VA = "0x101C3E0")]
		public SpectrumHapticsDataReference(SpectrumHapticsData value)
		{
		}
	}
	[Token(Token = "0x2000381")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAEA4", Offset = "0xCBAEA4")]
	public class CurveHapticsDataVariable : BaseVariable<CurveHapticsData>
	{
		[Token(Token = "0x6001761")]
		[Address(RVA = "0x10180A0", Offset = "0x10180A0", VA = "0x10180A0")]
		public CurveHapticsDataVariable()
		{
		}
	}
	[Token(Token = "0x2000382")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAF10", Offset = "0xCBAF10")]
	public class FloatVariableHapticsDataVariable : BaseVariable<FloatVariableHapticsData>
	{
		[Token(Token = "0x6001762")]
		[Address(RVA = "0x10190D0", Offset = "0x10190D0", VA = "0x10190D0")]
		public FloatVariableHapticsDataVariable()
		{
		}
	}
	[Token(Token = "0x2000383")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAF7C", Offset = "0xCBAF7C")]
	public class SimpleHapticsDataVariable : BaseVariable<SimpleHapticsData>
	{
		[Token(Token = "0x6001763")]
		[Address(RVA = "0x101C250", Offset = "0x101C250", VA = "0x101C250")]
		public SimpleHapticsDataVariable()
		{
		}
	}
	[Token(Token = "0x2000384")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBAFE8", Offset = "0xCBAFE8")]
	public class SpectrumHapticsDataVariable : BaseVariable<SpectrumHapticsData>
	{
		[Token(Token = "0x6001764")]
		[Address(RVA = "0x101C490", Offset = "0x101C490", VA = "0x101C490")]
		public SpectrumHapticsDataVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000385")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB054", Offset = "0xCBB054")]
	public sealed class IntIntGameEvent : GameEventBase<IntIntGameEventStruct>
	{
		[Token(Token = "0x6001765")]
		[Address(RVA = "0x101A2E0", Offset = "0x101A2E0", VA = "0x101A2E0")]
		public IntIntGameEvent()
		{
		}
	}
	[Token(Token = "0x2000386")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB0C0", Offset = "0xCBB0C0")]
	public sealed class IntIntGameEventListener : BaseGameEventListener<IntIntGameEventStruct, IntIntGameEvent, IntIntUnityEvent>
	{
		[Token(Token = "0x6001766")]
		[Address(RVA = "0x101A330", Offset = "0x101A330", VA = "0x101A330")]
		public IntIntGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000387")]
	public sealed class IntIntUnityEvent : UnityEvent<IntIntGameEventStruct>
	{
		[Token(Token = "0x6001767")]
		[Address(RVA = "0x101A380", Offset = "0x101A380", VA = "0x101A380")]
		public IntIntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000388")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB0F8", Offset = "0xCBB0F8")]
	public class LabelVector3GameEvent : GameEventBase<LabelVector3GameEventStruct>
	{
		[Token(Token = "0x6001768")]
		[Address(RVA = "0x101A958", Offset = "0x101A958", VA = "0x101A958")]
		public LabelVector3GameEvent()
		{
		}
	}
	[Token(Token = "0x2000389")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB164", Offset = "0xCBB164")]
	public sealed class LabelVector3GameEventListener : BaseGameEventListener<LabelVector3GameEventStruct, LabelVector3GameEvent, LabelVector3UnityEvent>
	{
		[Token(Token = "0x6001769")]
		[Address(RVA = "0x101A9A8", Offset = "0x101A9A8", VA = "0x101A9A8")]
		public LabelVector3GameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038A")]
	public class LabelVector3UnityEvent : UnityEvent<LabelVector3GameEventStruct>
	{
		[Token(Token = "0x600176A")]
		[Address(RVA = "0x101A9F8", Offset = "0x101A9F8", VA = "0x101A9F8")]
		public LabelVector3UnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB19C", Offset = "0xCBB19C")]
	public sealed class CustomActionGameEvent : GameEventBase<CustomActionGameEventStruct>
	{
		[Token(Token = "0x600176B")]
		[Address(RVA = "0x10180F0", Offset = "0x10180F0", VA = "0x10180F0")]
		public CustomActionGameEvent()
		{
		}
	}
	[Token(Token = "0x200038C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB208", Offset = "0xCBB208")]
	public sealed class CustomActionGameEventListener : BaseGameEventListener<CustomActionGameEventStruct, CustomActionGameEvent, CustomActionUnityEvent>
	{
		[Token(Token = "0x600176C")]
		[Address(RVA = "0x1018140", Offset = "0x1018140", VA = "0x1018140")]
		public CustomActionGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038D")]
	public sealed class CustomActionUnityEvent : UnityEvent<CustomActionGameEventStruct>
	{
		[Token(Token = "0x600176D")]
		[Address(RVA = "0x1018190", Offset = "0x1018190", VA = "0x1018190")]
		public CustomActionUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200038E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB240", Offset = "0xCBB240")]
	public sealed class EffectGameEvent : GameEventBase<Effect>
	{
		[Token(Token = "0x600176E")]
		[Address(RVA = "0x10187B0", Offset = "0x10187B0", VA = "0x10187B0")]
		public EffectGameEvent()
		{
		}
	}
	[Token(Token = "0x200038F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB2AC", Offset = "0xCBB2AC")]
	public sealed class EffectGameEventListener : BaseGameEventListener<Effect, EffectGameEvent, EffectUnityEvent>
	{
		[Token(Token = "0x600176F")]
		[Address(RVA = "0x1018800", Offset = "0x1018800", VA = "0x1018800")]
		public EffectGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000390")]
	public sealed class EffectUnityEvent : UnityEvent<Effect>
	{
		[Token(Token = "0x6001770")]
		[Address(RVA = "0x1018850", Offset = "0x1018850", VA = "0x1018850")]
		public EffectUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000391")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB2E4", Offset = "0xCBB2E4")]
	public class GameModeTypeVariable : BaseVariable<GameModeType>
	{
		[Token(Token = "0x6001771")]
		[Address(RVA = "0x10195D4", Offset = "0x10195D4", VA = "0x10195D4")]
		public void SetGameModeToClassic()
		{
		}

		[Token(Token = "0x6001772")]
		[Address(RVA = "0x1019688", Offset = "0x1019688", VA = "0x1019688")]
		public void SetGameModeToCheckpoint()
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0x1019740", Offset = "0x1019740", VA = "0x1019740")]
		public void SetDefaultGameModeToClassic()
		{
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0x10197F4", Offset = "0x10197F4", VA = "0x10197F4")]
		public void SetDefaultGameModeToCheckpoint()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0x10198AC", Offset = "0x10198AC", VA = "0x10198AC")]
		public void SetValueFromVariable(GameModeTypeVariable value)
		{
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0x1019AD4", Offset = "0x1019AD4", VA = "0x1019AD4")]
		public void SetDefaultValueFromVariable(GameModeTypeVariable value)
		{
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0x1019CFC", Offset = "0x1019CFC", VA = "0x1019CFC")]
		public GameModeTypeVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000392")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB350", Offset = "0xCBB350")]
	public sealed class PerkListUpgradeGameEvent : GameEventBase<PerkListWrapper>
	{
		[Token(Token = "0x6001778")]
		[Address(RVA = "0x101B30C", Offset = "0x101B30C", VA = "0x101B30C")]
		public PerkListUpgradeGameEvent()
		{
		}
	}
	[Token(Token = "0x2000393")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB3BC", Offset = "0xCBB3BC")]
	public sealed class PerkListUpgradeGameEventListener : BaseGameEventListener<PerkListWrapper, PerkListUpgradeGameEvent, PerkListUpgradeUnityEvent>
	{
		[Token(Token = "0x6001779")]
		[Address(RVA = "0x101B35C", Offset = "0x101B35C", VA = "0x101B35C")]
		public PerkListUpgradeGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000394")]
	public sealed class PerkListUpgradeUnityEvent : UnityEvent<PerkListWrapper>
	{
		[Token(Token = "0x600177A")]
		[Address(RVA = "0x101B3AC", Offset = "0x101B3AC", VA = "0x101B3AC")]
		public PerkListUpgradeUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000395")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB3F4", Offset = "0xCBB3F4")]
	public sealed class ActorDataTransformGameEvent : GameEventBase<ActorDataTransformGameEventStruct>
	{
		[Token(Token = "0x600177B")]
		[Address(RVA = "0x101697C", Offset = "0x101697C", VA = "0x101697C")]
		public ActorDataTransformGameEvent()
		{
		}
	}
	[Token(Token = "0x2000396")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB460", Offset = "0xCBB460")]
	public sealed class ActorDataTransformGameEventListener : BaseGameEventListener<ActorDataTransformGameEventStruct, ActorDataTransformGameEvent, ActorDataTransformUnityEvent>
	{
		[Token(Token = "0x600177C")]
		[Address(RVA = "0x10169CC", Offset = "0x10169CC", VA = "0x10169CC")]
		public ActorDataTransformGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000397")]
	public sealed class ActorDataTransformUnityEvent : UnityEvent<ActorDataTransformGameEventStruct>
	{
		[Token(Token = "0x600177D")]
		[Address(RVA = "0x1016A1C", Offset = "0x1016A1C", VA = "0x1016A1C")]
		public ActorDataTransformUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000398")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB498", Offset = "0xCBB498")]
	public sealed class GameObjectIntGameEvent : GameEventBase<GameObjectGameEventStruct>
	{
		[Token(Token = "0x600177E")]
		[Address(RVA = "0x1019F60", Offset = "0x1019F60", VA = "0x1019F60")]
		public GameObjectIntGameEvent()
		{
		}
	}
	[Token(Token = "0x2000399")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB504", Offset = "0xCBB504")]
	public sealed class GameObjectIntGameEventListener : BaseGameEventListener<GameObjectGameEventStruct, GameObjectIntGameEvent, GameObjectIntUnityEvent>
	{
		[Token(Token = "0x600177F")]
		[Address(RVA = "0x1019FB0", Offset = "0x1019FB0", VA = "0x1019FB0")]
		public GameObjectIntGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039A")]
	public sealed class GameObjectIntUnityEvent : UnityEvent<GameObjectGameEventStruct>
	{
		[Token(Token = "0x6001780")]
		[Address(RVA = "0x101A000", Offset = "0x101A000", VA = "0x101A000")]
		public GameObjectIntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB53C", Offset = "0xCBB53C")]
	public sealed class ObjectArrayGameEvent : GameEventBase<object[]>
	{
		[Token(Token = "0x6001781")]
		[Address(RVA = "0x101AF8C", Offset = "0x101AF8C", VA = "0x101AF8C")]
		public ObjectArrayGameEvent()
		{
		}
	}
	[Token(Token = "0x200039C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB5A8", Offset = "0xCBB5A8")]
	public sealed class ObjectArrayGameEventListener : BaseGameEventListener<object[], ObjectArrayGameEvent, ObjectArrayUnityEvent>
	{
		[Token(Token = "0x6001782")]
		[Address(RVA = "0x101AFDC", Offset = "0x101AFDC", VA = "0x101AFDC")]
		public ObjectArrayGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039D")]
	public sealed class ObjectArrayUnityEvent : UnityEvent<object[]>
	{
		[Token(Token = "0x6001783")]
		[Address(RVA = "0x101B02C", Offset = "0x101B02C", VA = "0x101B02C")]
		public ObjectArrayUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200039E")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB5E0", Offset = "0xCBB5E0")]
	public sealed class StringTextAssetListGameEvent : GameEventBase<StringTextAssetListStruct>
	{
		[Token(Token = "0x6001784")]
		[Address(RVA = "0x101CA38", Offset = "0x101CA38", VA = "0x101CA38")]
		public StringTextAssetListGameEvent()
		{
		}
	}
	[Token(Token = "0x200039F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB64C", Offset = "0xCBB64C")]
	public sealed class StringTextAssetListGameEventListener : BaseGameEventListener<StringTextAssetListStruct, StringTextAssetListGameEvent, StringTextAssetListUnityEvent>
	{
		[Token(Token = "0x6001785")]
		[Address(RVA = "0x101CA88", Offset = "0x101CA88", VA = "0x101CA88")]
		public StringTextAssetListGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A0")]
	public sealed class StringTextAssetListUnityEvent : UnityEvent<StringTextAssetListStruct>
	{
		[Token(Token = "0x6001786")]
		[Address(RVA = "0x101CAD8", Offset = "0x101CAD8", VA = "0x101CAD8")]
		public StringTextAssetListUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB684", Offset = "0xCBB684")]
	public sealed class Vector3IntGameEvent : GameEventBase<Vector3IntGameEventStruct>
	{
		[Token(Token = "0x6001787")]
		[Address(RVA = "0x101D7A0", Offset = "0x101D7A0", VA = "0x101D7A0")]
		public Vector3IntGameEvent()
		{
		}
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB6F0", Offset = "0xCBB6F0")]
	public sealed class Vector3IntGameEventListener : BaseGameEventListener<Vector3IntGameEventStruct, Vector3IntGameEvent, Vector3IntUnityEvent>
	{
		[Token(Token = "0x6001788")]
		[Address(RVA = "0x101D7F0", Offset = "0x101D7F0", VA = "0x101D7F0")]
		public Vector3IntGameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A3")]
	public sealed class Vector3IntUnityEvent : UnityEvent<Vector3IntGameEventStruct>
	{
		[Token(Token = "0x6001789")]
		[Address(RVA = "0x101D840", Offset = "0x101D840", VA = "0x101D840")]
		public Vector3IntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB728", Offset = "0xCBB728")]
	public sealed class EventDataEvent : GameEventBase<ObjectPointer.EventData>
	{
		[Token(Token = "0x600178A")]
		[Address(RVA = "0x10188A0", Offset = "0x10188A0", VA = "0x10188A0")]
		public EventDataEvent()
		{
		}
	}
	[Token(Token = "0x20003A5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBB794", Offset = "0xCBB794")]
	public sealed class EventDataEventListener : BaseGameEventListener<ObjectPointer.EventData, EventDataEvent, EventDataUnityEvent>
	{
		[Token(Token = "0x600178B")]
		[Address(RVA = "0x10188F0", Offset = "0x10188F0", VA = "0x10188F0")]
		public EventDataEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A6")]
	public sealed class EventDataUnityEvent : UnityEvent<ObjectPointer.EventData>
	{
		[Token(Token = "0x600178C")]
		[Address(RVA = "0x1018940", Offset = "0x1018940", VA = "0x1018940")]
		public EventDataUnityEvent()
		{
		}
	}
	[Token(Token = "0x20003A7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB7CC", Offset = "0xCBB7CC")]
	public class AnimationCurveCollection : Collection<AnimationCurve>
	{
		[Token(Token = "0x600178D")]
		[Address(RVA = "0x1016A6C", Offset = "0x1016A6C", VA = "0x1016A6C")]
		public AnimationCurveCollection()
		{
		}
	}
	[Token(Token = "0x20003A8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB838", Offset = "0xCBB838")]
	public class AudioClipCollection : Collection<AudioClip>
	{
		[Token(Token = "0x600178E")]
		[Address(RVA = "0x1016BBC", Offset = "0x1016BBC", VA = "0x1016BBC")]
		public AudioClipCollection()
		{
		}
	}
	[Token(Token = "0x20003A9")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCBB8A4", Offset = "0xCBB8A4")]
	public abstract class BaseCollection : SOArchitectureBaseObject, IEnumerable
	{
		[Token(Token = "0x170001F6")]
		public object Item
		{
			[Token(Token = "0x600178F")]
			[Address(RVA = "0x1016D0C", Offset = "0x1016D0C", VA = "0x1016D0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001790")]
			[Address(RVA = "0x1016DDC", Offset = "0x1016DDC", VA = "0x1016DDC")]
			set
			{
			}
		}

		[Token(Token = "0x170001F7")]
		public int Count
		{
			[Token(Token = "0x6001791")]
			[Address(RVA = "0x1016EB8", Offset = "0x1016EB8", VA = "0x1016EB8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001F8")]
		public abstract IList List
		{
			[Token(Token = "0x6001792")]
			get;
		}

		[Token(Token = "0x170001F9")]
		public abstract Type Type
		{
			[Token(Token = "0x6001793")]
			get;
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0x1016F7C", Offset = "0x1016F7C", VA = "0x1016F7C", Slot = "4")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0x101703C", Offset = "0x101703C", VA = "0x101703C")]
		public bool Contains(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0x1017110", Offset = "0x1017110", VA = "0x1017110")]
		protected BaseCollection()
		{
		}
	}
	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB8DC", Offset = "0xCBB8DC")]
	public class BoolCollection : Collection<bool>
	{
		[Token(Token = "0x6001797")]
		[Address(RVA = "0x1017270", Offset = "0x1017270", VA = "0x1017270")]
		public BoolCollection()
		{
		}
	}
	[Token(Token = "0x20003AB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB948", Offset = "0xCBB948")]
	public class ByteCollection : Collection<byte>
	{
		[Token(Token = "0x6001798")]
		[Address(RVA = "0x10174B0", Offset = "0x10174B0", VA = "0x10174B0")]
		public ByteCollection()
		{
		}
	}
	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBB9B4", Offset = "0xCBB9B4")]
	public class CharCollection : Collection<char>
	{
		[Token(Token = "0x6001799")]
		[Address(RVA = "0x1017790", Offset = "0x1017790", VA = "0x1017790")]
		public CharCollection()
		{
		}
	}
	[Token(Token = "0x20003AD")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCBBA20", Offset = "0xCBBA20")]
	public class Collection<T> : BaseCollection, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<T> _list;

		[Token(Token = "0x170001FA")]
		public new T Item
		{
			[Token(Token = "0x600179A")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x600179B")]
			set
			{
			}
		}

		[Token(Token = "0x170001FB")]
		public override IList List
		{
			[Token(Token = "0x600179C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		public override Type Type
		{
			[Token(Token = "0x600179D")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600179E")]
		public void Add(T obj)
		{
		}

		[Token(Token = "0x600179F")]
		public void Remove(T obj)
		{
		}

		[Token(Token = "0x60017A0")]
		public void Clear()
		{
		}

		[Token(Token = "0x60017A1")]
		public bool Contains(T value)
		{
			return default(bool);
		}

		[Token(Token = "0x60017A2")]
		public int IndexOf(T value)
		{
			return default(int);
		}

		[Token(Token = "0x60017A3")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x60017A4")]
		public void Insert(int index, T value)
		{
		}

		[Token(Token = "0x60017A5")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60017A6")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x60017A7")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60017A8")]
		public T[] ToArray()
		{
			return null;
		}

		[Token(Token = "0x60017A9")]
		public Collection()
		{
		}
	}
	[Token(Token = "0x20003AE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBA58", Offset = "0xCBBA58")]
	public class Color32Collection : Collection<Color32>
	{
		[Token(Token = "0x60017AA")]
		[Address(RVA = "0x10179D0", Offset = "0x10179D0", VA = "0x10179D0")]
		public Color32Collection()
		{
		}
	}
	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBAC4", Offset = "0xCBBAC4")]
	public class ColorCollection : Collection<Color>
	{
		[Token(Token = "0x60017AB")]
		[Address(RVA = "0x1017B20", Offset = "0x1017B20", VA = "0x1017B20")]
		public ColorCollection()
		{
		}
	}
	[Token(Token = "0x20003B0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBB30", Offset = "0xCBBB30")]
	public class DoubleCollection : Collection<double>
	{
		[Token(Token = "0x60017AC")]
		[Address(RVA = "0x10184D8", Offset = "0x10184D8", VA = "0x10184D8")]
		public DoubleCollection()
		{
		}
	}
	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBB9C", Offset = "0xCBBB9C")]
	public class FloatCollection : Collection<float>
	{
		[Token(Token = "0x60017AD")]
		[Address(RVA = "0x1018990", Offset = "0x1018990", VA = "0x1018990")]
		public FloatCollection()
		{
		}
	}
	[Token(Token = "0x20003B2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBC08", Offset = "0xCBBC08")]
	public class GameObjectCollection : Collection<GameObject>
	{
		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		private Dictionary<string, GameObject> _gameObjectsDico;

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0x1019D4C", Offset = "0x1019D4C", VA = "0x1019D4C")]
		public Dictionary<string, GameObject> ToDictionary()
		{
			return null;
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0x1019E70", Offset = "0x1019E70", VA = "0x1019E70")]
		public GameObjectCollection()
		{
		}
	}
	[Token(Token = "0x20003B3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBC74", Offset = "0xCBBC74")]
	public class IntCollection : Collection<int>
	{
		[Token(Token = "0x60017B0")]
		[Address(RVA = "0x101A1F0", Offset = "0x101A1F0", VA = "0x101A1F0")]
		public IntCollection()
		{
		}
	}
	[Token(Token = "0x20003B4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBCE0", Offset = "0xCBBCE0")]
	public class LongCollection : Collection<long>
	{
		[Token(Token = "0x60017B1")]
		[Address(RVA = "0x101AB38", Offset = "0x101AB38", VA = "0x101AB38")]
		public LongCollection()
		{
		}
	}
	[Token(Token = "0x20003B5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBD4C", Offset = "0xCBBD4C")]
	public class ObjectCollection : Collection<UnityEngine.Object>
	{
		[Token(Token = "0x60017B2")]
		[Address(RVA = "0x101B07C", Offset = "0x101B07C", VA = "0x101B07C")]
		public ObjectCollection()
		{
		}
	}
	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBDB8", Offset = "0xCBBDB8")]
	public class QuaternionCollection : Collection<Quaternion>
	{
		[Token(Token = "0x60017B3")]
		[Address(RVA = "0x101B44C", Offset = "0x101B44C", VA = "0x101B44C")]
		public QuaternionCollection()
		{
		}
	}
	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBE24", Offset = "0xCBBE24")]
	public class SByteCollection : Collection<sbyte>
	{
		[Token(Token = "0x60017B4")]
		[Address(RVA = "0x101B6DC", Offset = "0x101B6DC", VA = "0x101B6DC")]
		public SByteCollection()
		{
		}
	}
	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBE90", Offset = "0xCBBE90")]
	public class SceneCollection : Collection<SceneVariable>
	{
		[Token(Token = "0x60017B5")]
		[Address(RVA = "0x101BC00", Offset = "0x101BC00", VA = "0x101BC00")]
		public SceneCollection()
		{
		}
	}
	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBEFC", Offset = "0xCBBEFC")]
	public class ShortCollection : Collection<short>
	{
		[Token(Token = "0x60017B6")]
		[Address(RVA = "0x101BDD0", Offset = "0x101BDD0", VA = "0x101BDD0")]
		public ShortCollection()
		{
		}
	}
	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBF68", Offset = "0xCBBF68")]
	public class StringCollection : Collection<string>
	{
		[Token(Token = "0x60017B7")]
		[Address(RVA = "0x101C898", Offset = "0x101C898", VA = "0x101C898")]
		public StringCollection()
		{
		}
	}
	[Token(Token = "0x20003BB")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBBFD4", Offset = "0xCBBFD4")]
	public class UIntCollection : Collection<uint>
	{
		[Token(Token = "0x60017B8")]
		[Address(RVA = "0x101CBC8", Offset = "0x101CBC8", VA = "0x101CBC8")]
		public UIntCollection()
		{
		}
	}
	[Token(Token = "0x20003BC")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC040", Offset = "0xCBC040")]
	public class ULongCollection : Collection<ulong>
	{
		[Token(Token = "0x60017B9")]
		[Address(RVA = "0x101CEA8", Offset = "0x101CEA8", VA = "0x101CEA8")]
		public ULongCollection()
		{
		}
	}
	[Token(Token = "0x20003BD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC0AC", Offset = "0xCBC0AC")]
	public class UShortCollection : Collection<ushort>
	{
		[Token(Token = "0x60017BA")]
		[Address(RVA = "0x101D188", Offset = "0x101D188", VA = "0x101D188")]
		public UShortCollection()
		{
		}
	}
	[Token(Token = "0x20003BE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC118", Offset = "0xCBC118")]
	public class Vector2Collection : Collection<Vector2>
	{
		[Token(Token = "0x60017BB")]
		[Address(RVA = "0x101D468", Offset = "0x101D468", VA = "0x101D468")]
		public Vector2Collection()
		{
		}
	}
	[Token(Token = "0x20003BF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC184", Offset = "0xCBC184")]
	public class Vector3Collection : Collection<Vector3>
	{
		[Token(Token = "0x60017BC")]
		[Address(RVA = "0x101D6B0", Offset = "0x101D6B0", VA = "0x101D6B0")]
		public Vector3Collection()
		{
		}
	}
	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC1F0", Offset = "0xCBC1F0")]
	public class Vector4Collection : Collection<Vector4>
	{
		[Token(Token = "0x60017BD")]
		[Address(RVA = "0x101D9F8", Offset = "0x101D9F8", VA = "0x101D9F8")]
		public Vector4Collection()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC25C", Offset = "0xCBC25C")]
	public sealed class BoolGameEvent : GameEventBase<bool>
	{
		[Token(Token = "0x60017BE")]
		[Address(RVA = "0x10172C0", Offset = "0x10172C0", VA = "0x10172C0")]
		public BoolGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC2C8", Offset = "0xCBC2C8")]
	public sealed class ByteGameEvent : GameEventBase<byte>
	{
		[Token(Token = "0x60017BF")]
		[Address(RVA = "0x1017500", Offset = "0x1017500", VA = "0x1017500")]
		public ByteGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC334", Offset = "0xCBC334")]
	public sealed class CharGameEvent : GameEventBase<char>
	{
		[Token(Token = "0x60017C0")]
		[Address(RVA = "0x10177E0", Offset = "0x10177E0", VA = "0x10177E0")]
		public CharGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC3A0", Offset = "0xCBC3A0")]
	public sealed class DoubleGameEvent : GameEventBase<double>
	{
		[Token(Token = "0x60017C1")]
		[Address(RVA = "0x1018528", Offset = "0x1018528", VA = "0x1018528")]
		public DoubleGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC40C", Offset = "0xCBC40C")]
	public sealed class FloatGameEvent : GameEventBase<float>
	{
		[Token(Token = "0x60017C2")]
		[Address(RVA = "0x10189E0", Offset = "0x10189E0", VA = "0x10189E0")]
		public FloatGameEvent()
		{
		}
	}
	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC478", Offset = "0xCBC478")]
	public sealed class GameEvent : GameEventBase
	{
		[Token(Token = "0x60017C3")]
		[Address(RVA = "0x1019120", Offset = "0x1019120", VA = "0x1019120")]
		public GameEvent()
		{
		}
	}
	[Token(Token = "0x20003C7")]
	public abstract class GameEventBase<T> : GameEventBase, IGameEvent<T>, IStackTraceObject
	{
		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<IGameEventListener<T>> _typedListeners;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly List<Action<T>> _typedActions;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T _debugValue;

		[Token(Token = "0x60017C4")]
		[SerializeField]
		public void Raise(T value)
		{
		}

		[Token(Token = "0x60017C5")]
		public void AddListener(IGameEventListener<T> listener)
		{
		}

		[Token(Token = "0x60017C6")]
		public void RemoveListener(IGameEventListener<T> listener)
		{
		}

		[Token(Token = "0x60017C7")]
		public void AddListener(Action<T> action)
		{
		}

		[Token(Token = "0x60017C8")]
		public void RemoveListener(Action<T> action)
		{
		}

		[Token(Token = "0x60017C9")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60017CA")]
		protected GameEventBase()
		{
		}
	}
	[Token(Token = "0x20003C8")]
	public abstract class GameEventBase : SOArchitectureBaseObject, IGameEvent, IStackTraceObject
	{
		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected readonly List<IGameEventListener> _listeners;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected readonly List<System.Action> _actions;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<StackTraceEntry> _stackTraces;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool _consumed;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		public bool m_once;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		public bool m_verboseLog;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		[SerializeField]
		public bool m_analyticsEnabled;

		[Token(Token = "0x170001FD")]
		public List<StackTraceEntry> StackTraces
		{
			[Token(Token = "0x60017CB")]
			[Address(RVA = "0x1019124", Offset = "0x1019124", VA = "0x1019124", Slot = "8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0x101912C", Offset = "0x101912C", VA = "0x101912C", Slot = "9")]
		public void AddStackTrace()
		{
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0x1019130", Offset = "0x1019130", VA = "0x1019130", Slot = "10")]
		public void AddStackTrace(object value)
		{
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0x1019134", Offset = "0x1019134", VA = "0x1019134", Slot = "4")]
		public void Raise()
		{
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0x101929C", Offset = "0x101929C", VA = "0x101929C", Slot = "5")]
		public void AddListener(IGameEventListener listener)
		{
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0x1019334", Offset = "0x1019334", VA = "0x1019334", Slot = "6")]
		public void RemoveListener(IGameEventListener listener)
		{
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0x10193CC", Offset = "0x10193CC", VA = "0x10193CC")]
		public void AddListener(System.Action action)
		{
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0x1019464", Offset = "0x1019464", VA = "0x1019464")]
		public void RemoveListener(System.Action action)
		{
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0x10194FC", Offset = "0x10194FC", VA = "0x10194FC", Slot = "7")]
		public void RemoveAll()
		{
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0x1017190", Offset = "0x1017190", VA = "0x1017190")]
		protected GameEventBase()
		{
		}
	}
	[Token(Token = "0x20003C9")]
	public class StackTraceEntry : IEquatable<StackTraceEntry>
	{
		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly int _id;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private readonly int _frameCount;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string _stackTrace;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object _value;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly bool _constructedWithValue;

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0x101C4E0", Offset = "0x101C4E0", VA = "0x101C4E0")]
		private StackTraceEntry(string trace)
		{
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0x101C548", Offset = "0x101C548", VA = "0x101C548")]
		private StackTraceEntry(string trace, object value)
		{
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0x101C5D4", Offset = "0x101C5D4", VA = "0x101C5D4")]
		public static StackTraceEntry Create(object obj)
		{
			return null;
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0x101C650", Offset = "0x101C650", VA = "0x101C650")]
		public static StackTraceEntry Create()
		{
			return null;
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0x101C6BC", Offset = "0x101C6BC", VA = "0x101C6BC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0x101C758", Offset = "0x101C758", VA = "0x101C758", Slot = "4")]
		public bool Equals(StackTraceEntry other)
		{
			return default(bool);
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0x101C77C", Offset = "0x101C77C", VA = "0x101C77C", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0x101C784", Offset = "0x101C784", VA = "0x101C784", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0x101C87C", Offset = "0x101C87C", VA = "0x101C87C")]
		public static implicit operator string(StackTraceEntry trace)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20003CA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC4E4", Offset = "0xCBC4E4")]
	public sealed class GameObjectGameEvent : GameEventBase<GameObject>
	{
		[Token(Token = "0x60017DE")]
		[Address(RVA = "0x1019EC0", Offset = "0x1019EC0", VA = "0x1019EC0")]
		public GameObjectGameEvent()
		{
		}
	}
	[Token(Token = "0x20003CB")]
	public interface IGameEvent<T>
	{
		[Token(Token = "0x60017DF")]
		void Raise(T value);

		[Token(Token = "0x60017E0")]
		void AddListener(IGameEventListener<T> listener);

		[Token(Token = "0x60017E1")]
		void RemoveListener(IGameEventListener<T> listener);

		[Token(Token = "0x60017E2")]
		void RemoveAll();
	}
	[Token(Token = "0x20003CC")]
	public interface IGameEvent
	{
		[Token(Token = "0x60017E3")]
		void Raise();

		[Token(Token = "0x60017E4")]
		void AddListener(IGameEventListener listener);

		[Token(Token = "0x60017E5")]
		void RemoveListener(IGameEventListener listener);

		[Token(Token = "0x60017E6")]
		void RemoveAll();
	}
	[Serializable]
	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC550", Offset = "0xCBC550")]
	public sealed class IntGameEvent : GameEventBase<int>
	{
		[Token(Token = "0x60017E7")]
		[Address(RVA = "0x101A240", Offset = "0x101A240", VA = "0x101A240")]
		public IntGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC5BC", Offset = "0xCBC5BC")]
	public class LanguageDataEvent : GameEventBase<LanguageData>
	{
		[Token(Token = "0x60017E8")]
		[Address(RVA = "0x101AA48", Offset = "0x101AA48", VA = "0x101AA48")]
		public LanguageDataEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC628", Offset = "0xCBC628")]
	public sealed class LongGameEvent : GameEventBase<long>
	{
		[Token(Token = "0x60017E9")]
		[Address(RVA = "0x101AB88", Offset = "0x101AB88", VA = "0x101AB88")]
		public LongGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D0")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC694", Offset = "0xCBC694")]
	public class ObjectGameEvent : GameEventBase<UnityEngine.Object>
	{
		[Token(Token = "0x60017EA")]
		[Address(RVA = "0x101B0CC", Offset = "0x101B0CC", VA = "0x101B0CC")]
		public ObjectGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D1")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC700", Offset = "0xCBC700")]
	public sealed class QuaternionGameEvent : GameEventBase<Quaternion>
	{
		[Token(Token = "0x60017EB")]
		[Address(RVA = "0x101B4CC", Offset = "0x101B4CC", VA = "0x101B4CC")]
		public QuaternionGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC76C", Offset = "0xCBC76C")]
	public sealed class SByteGameEvent : GameEventBase<sbyte>
	{
		[Token(Token = "0x60017EC")]
		[Address(RVA = "0x101B72C", Offset = "0x101B72C", VA = "0x101B72C")]
		public SByteGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D3")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC7D8", Offset = "0xCBC7D8")]
	public sealed class ShortGameEvent : GameEventBase<short>
	{
		[Token(Token = "0x60017ED")]
		[Address(RVA = "0x101BE20", Offset = "0x101BE20", VA = "0x101BE20")]
		public ShortGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC844", Offset = "0xCBC844")]
	public sealed class StringGameEvent : GameEventBase<string>
	{
		[Token(Token = "0x60017EE")]
		[Address(RVA = "0x101C8E8", Offset = "0x101C8E8", VA = "0x101C8E8")]
		public StringGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC8B0", Offset = "0xCBC8B0")]
	public sealed class UIntGameEvent : GameEventBase<uint>
	{
		[Token(Token = "0x60017EF")]
		[Address(RVA = "0x101CC18", Offset = "0x101CC18", VA = "0x101CC18")]
		public UIntGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D6")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC91C", Offset = "0xCBC91C")]
	public sealed class ULongGameEvent : GameEventBase<ulong>
	{
		[Token(Token = "0x60017F0")]
		[Address(RVA = "0x101CEF8", Offset = "0x101CEF8", VA = "0x101CEF8")]
		public ULongGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC988", Offset = "0xCBC988")]
	public sealed class UShortGameEvent : GameEventBase<ushort>
	{
		[Token(Token = "0x60017F1")]
		[Address(RVA = "0x101D1D8", Offset = "0x101D1D8", VA = "0x101D1D8")]
		public UShortGameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D8")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBC9F4", Offset = "0xCBC9F4")]
	public sealed class Vector2GameEvent : GameEventBase<Vector2>
	{
		[Token(Token = "0x60017F2")]
		[Address(RVA = "0x101D4B8", Offset = "0x101D4B8", VA = "0x101D4B8")]
		public Vector2GameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBCA60", Offset = "0xCBCA60")]
	public sealed class Vector3GameEvent : GameEventBase<Vector3>
	{
		[Token(Token = "0x60017F3")]
		[Address(RVA = "0x101D700", Offset = "0x101D700", VA = "0x101D700")]
		public Vector3GameEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003DA")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBCACC", Offset = "0xCBCACC")]
	public sealed class Vector4GameEvent : GameEventBase<Vector4>
	{
		[Token(Token = "0x60017F4")]
		[Address(RVA = "0x101DA78", Offset = "0x101DA78", VA = "0x101DA78")]
		public Vector4GameEvent()
		{
		}
	}
	[Token(Token = "0x20003DB")]
	public interface IScriptableObjectArchitectureDebuggable
	{
	}
	[Token(Token = "0x20003DC")]
	public abstract class BaseGameEventListener<TType, TEvent, TResponse> : DebuggableGameEventListener, IGameEventListener<TType>, IScriptableObjectArchitectureDebuggable where TEvent : GameEventBase<TType> where TResponse : UnityEvent<TType>
	{
		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TEvent _previouslyRegisteredEvent;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TEvent _event;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TResponse _response;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TType _debugValue;

		[Token(Token = "0x170001FE")]
		protected override ScriptableObject GameEvent
		{
			[Token(Token = "0x60017F5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FF")]
		protected override UnityEventBase Response
		{
			[Token(Token = "0x60017F6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60017F7")]
		public void OnEventRaised(TType value)
		{
		}

		[Token(Token = "0x60017F8")]
		private void RaiseResponse(TType value)
		{
		}

		[Token(Token = "0x60017F9")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60017FA")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60017FB")]
		private void Register()
		{
		}

		[Token(Token = "0x60017FC")]
		protected BaseGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003DD")]
	public abstract class BaseGameEventListener<TEvent, TResponse> : DebuggableGameEventListener, IGameEventListener where TEvent : GameEventBase where TResponse : UnityEvent
	{
		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TEvent _previouslyRegisteredEvent;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TEvent _event;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private TResponse _response;

		[Token(Token = "0x17000200")]
		public ScriptableObject GameEventFile
		{
			[Token(Token = "0x60017FD")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000201")]
		protected override ScriptableObject GameEvent
		{
			[Token(Token = "0x60017FE")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000202")]
		protected override UnityEventBase Response
		{
			[Token(Token = "0x60017FF")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001800")]
		public void OnEventRaised()
		{
		}

		[Token(Token = "0x6001801")]
		protected void RaiseResponse()
		{
		}

		[Token(Token = "0x6001802")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001803")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001804")]
		private void Register()
		{
		}

		[Token(Token = "0x6001805")]
		protected BaseGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003DE")]
	public abstract class DebuggableGameEventListener : SOArchitectureBaseMonobehaviour, IStackTraceObject
	{
		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool _showDebugFields;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool _enableGizmoDebugging;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private Color _debugColor;

		[Token(Token = "0x4001526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<StackTraceEntry> _stackTraces;

		[Token(Token = "0x17000203")]
		public List<StackTraceEntry> StackTraces
		{
			[Token(Token = "0x6001806")]
			[Address(RVA = "0x10181E0", Offset = "0x10181E0", VA = "0x10181E0", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000204")]
		protected abstract ScriptableObject GameEvent
		{
			[Token(Token = "0x6001807")]
			get;
		}

		[Token(Token = "0x17000205")]
		protected abstract UnityEventBase Response
		{
			[Token(Token = "0x6001808")]
			get;
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0x10181E8", Offset = "0x10181E8", VA = "0x10181E8", Slot = "6")]
		public void AddStackTrace(object obj)
		{
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0x10181EC", Offset = "0x10181EC", VA = "0x10181EC", Slot = "5")]
		public void AddStackTrace()
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0x10181F0", Offset = "0x10181F0", VA = "0x10181F0")]
		protected void CreateDebugEntry(UnityEventBase response)
		{
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0x10181F4", Offset = "0x10181F4", VA = "0x10181F4")]
		protected DebuggableGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003DF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCB38", Offset = "0xCBCB38")]
	public sealed class BoolGameEventListener : BaseGameEventListener<bool, BoolGameEvent, BoolUnityEvent>
	{
		[Token(Token = "0x600180D")]
		[Address(RVA = "0x1017310", Offset = "0x1017310", VA = "0x1017310")]
		public BoolGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003E0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCB70", Offset = "0xCBCB70")]
	public sealed class ByteGameEventListener : BaseGameEventListener<byte, ByteGameEvent, ByteUnityEvent>
	{
		[Token(Token = "0x600180E")]
		[Address(RVA = "0x1017550", Offset = "0x1017550", VA = "0x1017550")]
		public ByteGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003E1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCBA8", Offset = "0xCBCBA8")]
	public sealed class CharGameEventListener : BaseGameEventListener<char, CharGameEvent, CharUnityEvent>
	{
		[Token(Token = "0x600180F")]
		[Address(RVA = "0x1017830", Offset = "0x1017830", VA = "0x1017830")]
		public CharGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003E2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCBE0", Offset = "0xCBCBE0")]
	public sealed class DoubleGameEventListener : BaseGameEventListener<double, DoubleGameEvent, DoubleUnityEvent>
	{
		[Token(Token = "0x6001810")]
		[Address(RVA = "0x1018578", Offset = "0x1018578", VA = "0x1018578")]
		public DoubleGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003E3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCC18", Offset = "0xCBCC18")]
	public sealed class FloatGameEventListener : BaseGameEventListener<float, FloatGameEvent, FloatUnityEvent>
	{
		[Token(Token = "0x6001811")]
		[Address(RVA = "0x1018A30", Offset = "0x1018A30", VA = "0x1018A30")]
		public FloatGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003E4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCC50", Offset = "0xCBCC50")]
	[ExecuteInEditMode]
	public sealed class GameEventListener : BaseGameEventListener<GameEventBase, UnityEvent>
	{
		[Token(Token = "0x6001812")]
		[Address(RVA = "0x1019584", Offset = "0x1019584", VA = "0x1019584")]
		public GameEventListener()
		{
		}
	}
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCC9C", Offset = "0xCBCC9C")]
	public sealed class GameObjectGameEventListener : BaseGameEventListener<GameObject, GameObjectGameEvent, GameObjectUnityEvent>
	{
		[Token(Token = "0x6001813")]
		[Address(RVA = "0x1019F10", Offset = "0x1019F10", VA = "0x1019F10")]
		public GameObjectGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003E6")]
	public interface IGameEventListener<T>
	{
		[Token(Token = "0x6001814")]
		void OnEventRaised(T value);
	}
	[Token(Token = "0x20003E7")]
	public interface IGameEventListener
	{
		[Token(Token = "0x6001815")]
		void OnEventRaised();
	}
	[Token(Token = "0x20003E8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCCD4", Offset = "0xCBCCD4")]
	public sealed class IntGameEventListener : BaseGameEventListener<int, IntGameEvent, IntUnityEvent>
	{
		[Token(Token = "0x6001816")]
		[Address(RVA = "0x101A290", Offset = "0x101A290", VA = "0x101A290")]
		public IntGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003E9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCD0C", Offset = "0xCBCD0C")]
	public class LanguageDataEventListener : BaseGameEventListener<LanguageData, LanguageDataEvent, LanguageDataUnityEvent>
	{
		[Token(Token = "0x6001817")]
		[Address(RVA = "0x101AA98", Offset = "0x101AA98", VA = "0x101AA98")]
		public LanguageDataEventListener()
		{
		}
	}
	[Token(Token = "0x20003EA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCD44", Offset = "0xCBCD44")]
	public sealed class LongGameEventListener : BaseGameEventListener<long, LongGameEvent, LongUnityEvent>
	{
		[Token(Token = "0x6001818")]
		[Address(RVA = "0x101ABD8", Offset = "0x101ABD8", VA = "0x101ABD8")]
		public LongGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003EB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCD7C", Offset = "0xCBCD7C")]
	public class ObjectGameEventListener : BaseGameEventListener<UnityEngine.Object, ObjectGameEvent, ObjectUnityEvent>
	{
		[Token(Token = "0x6001819")]
		[Address(RVA = "0x101B11C", Offset = "0x101B11C", VA = "0x101B11C")]
		public ObjectGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCDB4", Offset = "0xCBCDB4")]
	public sealed class QuaternionGameEventListener : BaseGameEventListener<Quaternion, QuaternionGameEvent, QuaternionUnityEvent>
	{
		[Token(Token = "0x600181A")]
		[Address(RVA = "0x101B51C", Offset = "0x101B51C", VA = "0x101B51C")]
		public QuaternionGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003ED")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCDEC", Offset = "0xCBCDEC")]
	public sealed class SByteGameEventListener : BaseGameEventListener<sbyte, SByteGameEvent, SByteUnityEvent>
	{
		[Token(Token = "0x600181B")]
		[Address(RVA = "0x101B77C", Offset = "0x101B77C", VA = "0x101B77C")]
		public SByteGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003EE")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCE24", Offset = "0xCBCE24")]
	public sealed class ShortGameEventListener : BaseGameEventListener<short, ShortGameEvent, ShortUnityEvent>
	{
		[Token(Token = "0x600181C")]
		[Address(RVA = "0x101BE70", Offset = "0x101BE70", VA = "0x101BE70")]
		public ShortGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003EF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCE5C", Offset = "0xCBCE5C")]
	public sealed class StringGameEventListener : BaseGameEventListener<string, StringGameEvent, StringUnityEvent>
	{
		[Token(Token = "0x600181D")]
		[Address(RVA = "0x101C938", Offset = "0x101C938", VA = "0x101C938")]
		public StringGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003F0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCE94", Offset = "0xCBCE94")]
	public sealed class UIntGameEventListener : BaseGameEventListener<uint, UIntGameEvent, UIntUnityEvent>
	{
		[Token(Token = "0x600181E")]
		[Address(RVA = "0x101CC68", Offset = "0x101CC68", VA = "0x101CC68")]
		public UIntGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003F1")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCECC", Offset = "0xCBCECC")]
	public sealed class ULongGameEventListener : BaseGameEventListener<ulong, ULongGameEvent, ULongUnityEvent>
	{
		[Token(Token = "0x600181F")]
		[Address(RVA = "0x101CF48", Offset = "0x101CF48", VA = "0x101CF48")]
		public ULongGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003F2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCF04", Offset = "0xCBCF04")]
	public sealed class UShortGameEventListener : BaseGameEventListener<ushort, UShortGameEvent, UShortUnityEvent>
	{
		[Token(Token = "0x6001820")]
		[Address(RVA = "0x101D228", Offset = "0x101D228", VA = "0x101D228")]
		public UShortGameEventListener()
		{
		}
	}
	[Token(Token = "0x20003F3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCF3C", Offset = "0xCBCF3C")]
	public sealed class Vector2GameEventListener : BaseGameEventListener<Vector2, Vector2GameEvent, Vector2UnityEvent>
	{
		[Token(Token = "0x6001821")]
		[Address(RVA = "0x101D508", Offset = "0x101D508", VA = "0x101D508")]
		public Vector2GameEventListener()
		{
		}
	}
	[Token(Token = "0x20003F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCF74", Offset = "0xCBCF74")]
	public sealed class Vector3GameEventListener : BaseGameEventListener<Vector3, Vector3GameEvent, Vector3UnityEvent>
	{
		[Token(Token = "0x6001822")]
		[Address(RVA = "0x101D750", Offset = "0x101D750", VA = "0x101D750")]
		public Vector3GameEventListener()
		{
		}
	}
	[Token(Token = "0x20003F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBCFAC", Offset = "0xCBCFAC")]
	public sealed class Vector4GameEventListener : BaseGameEventListener<Vector4, Vector4GameEvent, Vector4UnityEvent>
	{
		[Token(Token = "0x6001823")]
		[Address(RVA = "0x101DAC8", Offset = "0x101DAC8", VA = "0x101DAC8")]
		public Vector4GameEventListener()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F6")]
	public sealed class BoolUnityEvent : UnityEvent<bool>
	{
		[Token(Token = "0x6001824")]
		[Address(RVA = "0x1017410", Offset = "0x1017410", VA = "0x1017410")]
		public BoolUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F7")]
	public sealed class ByteUnityEvent : UnityEvent<byte>
	{
		[Token(Token = "0x6001825")]
		[Address(RVA = "0x1017650", Offset = "0x1017650", VA = "0x1017650")]
		public ByteUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F8")]
	public sealed class CharUnityEvent : UnityEvent<char>
	{
		[Token(Token = "0x6001826")]
		[Address(RVA = "0x1017930", Offset = "0x1017930", VA = "0x1017930")]
		public CharUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003F9")]
	public sealed class DoubleUnityEvent : UnityEvent<double>
	{
		[Token(Token = "0x6001827")]
		[Address(RVA = "0x1018678", Offset = "0x1018678", VA = "0x1018678")]
		public DoubleUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FA")]
	public sealed class FloatUnityEvent : UnityEvent<float>
	{
		[Token(Token = "0x6001828")]
		[Address(RVA = "0x1018B30", Offset = "0x1018B30", VA = "0x1018B30")]
		public FloatUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FB")]
	public sealed class GameObjectUnityEvent : UnityEvent<GameObject>
	{
		[Token(Token = "0x6001829")]
		[Address(RVA = "0x101A100", Offset = "0x101A100", VA = "0x101A100")]
		public GameObjectUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FC")]
	public sealed class IntUnityEvent : UnityEvent<int>
	{
		[Token(Token = "0x600182A")]
		[Address(RVA = "0x101A480", Offset = "0x101A480", VA = "0x101A480")]
		public IntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FD")]
	public class LanguageDataUnityEvent : UnityEvent<LanguageData>
	{
		[Token(Token = "0x600182B")]
		[Address(RVA = "0x101AAE8", Offset = "0x101AAE8", VA = "0x101AAE8")]
		public LanguageDataUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FE")]
	public sealed class LongUnityEvent : UnityEvent<long>
	{
		[Token(Token = "0x600182C")]
		[Address(RVA = "0x101ACD8", Offset = "0x101ACD8", VA = "0x101ACD8")]
		public LongUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003FF")]
	public class ObjectUnityEvent : UnityEvent<UnityEngine.Object>
	{
		[Token(Token = "0x600182D")]
		[Address(RVA = "0x101B21C", Offset = "0x101B21C", VA = "0x101B21C")]
		public ObjectUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000400")]
	public sealed class QuaternionUnityEvent : UnityEvent<Quaternion>
	{
		[Token(Token = "0x600182E")]
		[Address(RVA = "0x101B63C", Offset = "0x101B63C", VA = "0x101B63C")]
		public QuaternionUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000401")]
	public sealed class SByteUnityEvent : UnityEvent<sbyte>
	{
		[Token(Token = "0x600182F")]
		[Address(RVA = "0x101B87C", Offset = "0x101B87C", VA = "0x101B87C")]
		public SByteUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000402")]
	public sealed class ShortUnityEvent : UnityEvent<short>
	{
		[Token(Token = "0x6001830")]
		[Address(RVA = "0x101BF70", Offset = "0x101BF70", VA = "0x101BF70")]
		public ShortUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000403")]
	public sealed class StringUnityEvent : UnityEvent<string>
	{
		[Token(Token = "0x6001831")]
		[Address(RVA = "0x101CB28", Offset = "0x101CB28", VA = "0x101CB28")]
		public StringUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000404")]
	public sealed class UIntUnityEvent : UnityEvent<uint>
	{
		[Token(Token = "0x6001832")]
		[Address(RVA = "0x101CD68", Offset = "0x101CD68", VA = "0x101CD68")]
		public UIntUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000405")]
	public sealed class ULongUnityEvent : UnityEvent<ulong>
	{
		[Token(Token = "0x6001833")]
		[Address(RVA = "0x101D048", Offset = "0x101D048", VA = "0x101D048")]
		public ULongUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000406")]
	public sealed class UShortUnityEvent : UnityEvent<ushort>
	{
		[Token(Token = "0x6001834")]
		[Address(RVA = "0x101D328", Offset = "0x101D328", VA = "0x101D328")]
		public UShortUnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000407")]
	public sealed class Vector2UnityEvent : UnityEvent<Vector2>
	{
		[Token(Token = "0x6001835")]
		[Address(RVA = "0x101D610", Offset = "0x101D610", VA = "0x101D610")]
		public Vector2UnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000408")]
	public sealed class Vector3UnityEvent : UnityEvent<Vector3>
	{
		[Token(Token = "0x6001836")]
		[Address(RVA = "0x101D958", Offset = "0x101D958", VA = "0x101D958")]
		public Vector3UnityEvent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000409")]
	public sealed class Vector4UnityEvent : UnityEvent<Vector4>
	{
		[Token(Token = "0x6001837")]
		[Address(RVA = "0x101DBE8", Offset = "0x101DBE8", VA = "0x101DBE8")]
		public Vector4UnityEvent()
		{
		}
	}
	[Token(Token = "0x200040A")]
	internal static class QuaternionExtensions
	{
		[Token(Token = "0x6001838")]
		[Address(RVA = "0x101B49C", Offset = "0x101B49C", VA = "0x101B49C")]
		public static Vector4 ToVector4(this Quaternion quaternion)
		{
			return default(Vector4);
		}
	}
	[Token(Token = "0x200040B")]
	internal static class Vector4Extensions
	{
		[Token(Token = "0x6001839")]
		[Address(RVA = "0x101DA48", Offset = "0x101DA48", VA = "0x101DA48")]
		public static Quaternion ToQuaternion(this Vector4 vector4)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200040C")]
	public sealed class AnimationCurveReference : BaseReference<AnimationCurve, AnimationCurveVariable>
	{
		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1016ABC", Offset = "0x1016ABC", VA = "0x1016ABC")]
		public AnimationCurveReference()
		{
		}

		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1016B0C", Offset = "0x1016B0C", VA = "0x1016B0C")]
		public AnimationCurveReference(AnimationCurve value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040D")]
	public sealed class AudioClipReference : BaseReference<AudioClip, AudioClipVariable>
	{
		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1016C0C", Offset = "0x1016C0C", VA = "0x1016C0C")]
		public AudioClipReference()
		{
		}

		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1016C5C", Offset = "0x1016C5C", VA = "0x1016C5C")]
		public AudioClipReference(AudioClip value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200040E")]
	public class BaseReference<TBase, TVariable> : BaseReference where TVariable : BaseVariable<TBase>
	{
		[Token(Token = "0x4001527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool _useConstant;

		[Token(Token = "0x4001528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TBase _constantValue;

		[Token(Token = "0x4001529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected TVariable _variable;

		[Token(Token = "0x17000206")]
		public TBase Value
		{
			[Token(Token = "0x6001840")]
			get
			{
				return (TBase)null;
			}
			[Token(Token = "0x6001841")]
			set
			{
			}
		}

		[Token(Token = "0x17000207")]
		public bool IsValueDefined
		{
			[Token(Token = "0x6001842")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600183E")]
		public BaseReference()
		{
		}

		[Token(Token = "0x600183F")]
		public BaseReference(TBase baseValue)
		{
		}

		[Token(Token = "0x6001843")]
		public BaseReference CreateCopy()
		{
			return null;
		}

		[Token(Token = "0x6001844")]
		public void AddListener(IGameEventListener listener)
		{
		}

		[Token(Token = "0x6001845")]
		public void RemoveListener(IGameEventListener listener)
		{
		}

		[Token(Token = "0x6001846")]
		public void AddListener(System.Action action)
		{
		}

		[Token(Token = "0x6001847")]
		public void RemoveListener(System.Action action)
		{
		}

		[Token(Token = "0x6001848")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x200040F")]
	public abstract class BaseReference
	{
		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1017184", Offset = "0x1017184", VA = "0x1017184")]
		protected BaseReference()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000410")]
	public sealed class BoolReference : BaseReference<bool, BoolVariable>
	{
		[Token(Token = "0x600184A")]
		[Address(RVA = "0x1017360", Offset = "0x1017360", VA = "0x1017360")]
		public BoolReference()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x10173B0", Offset = "0x10173B0", VA = "0x10173B0")]
		public BoolReference(bool value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000411")]
	public sealed class ByteReference : BaseReference<byte, ByteVariable>
	{
		[Token(Token = "0x600184C")]
		[Address(RVA = "0x10175A0", Offset = "0x10175A0", VA = "0x10175A0")]
		public ByteReference()
		{
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x10175F0", Offset = "0x10175F0", VA = "0x10175F0")]
		public ByteReference(byte value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000412")]
	public sealed class CharReference : BaseReference<char, CharVariable>
	{
		[Token(Token = "0x600184E")]
		[Address(RVA = "0x1017880", Offset = "0x1017880", VA = "0x1017880")]
		public CharReference()
		{
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x10178D0", Offset = "0x10178D0", VA = "0x10178D0")]
		public CharReference(char value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000413")]
	public sealed class Color32Reference : BaseReference<Color32, Color32Variable>
	{
		[Token(Token = "0x6001850")]
		[Address(RVA = "0x1017A20", Offset = "0x1017A20", VA = "0x1017A20")]
		public Color32Reference()
		{
		}

		[Token(Token = "0x6001851")]
		[Address(RVA = "0x1017A70", Offset = "0x1017A70", VA = "0x1017A70")]
		public Color32Reference(Color32 value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000414")]
	public sealed class ColorReference : BaseReference<Color, ColorVariable>
	{
		[Token(Token = "0x6001852")]
		[Address(RVA = "0x1017B70", Offset = "0x1017B70", VA = "0x1017B70")]
		public ColorReference()
		{
		}

		[Token(Token = "0x6001853")]
		[Address(RVA = "0x1017BC0", Offset = "0x1017BC0", VA = "0x1017BC0")]
		public ColorReference(Color value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000415")]
	public sealed class DoubleReference : BaseReference<double, DoubleVariable>
	{
		[Token(Token = "0x6001854")]
		[Address(RVA = "0x10185C8", Offset = "0x10185C8", VA = "0x10185C8")]
		public DoubleReference()
		{
		}

		[Token(Token = "0x6001855")]
		[Address(RVA = "0x1018618", Offset = "0x1018618", VA = "0x1018618")]
		public DoubleReference(double value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000416")]
	public sealed class FloatReference : BaseReference<float, FloatVariable>
	{
		[Token(Token = "0x6001856")]
		[Address(RVA = "0x1018A80", Offset = "0x1018A80", VA = "0x1018A80")]
		public FloatReference()
		{
		}

		[Token(Token = "0x6001857")]
		[Address(RVA = "0x1018AD0", Offset = "0x1018AD0", VA = "0x1018AD0")]
		public FloatReference(float value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000417")]
	public sealed class GameObjectReference : BaseReference<GameObject, GameObjectVariable>
	{
		[Token(Token = "0x6001858")]
		[Address(RVA = "0x101A050", Offset = "0x101A050", VA = "0x101A050")]
		public GameObjectReference()
		{
		}

		[Token(Token = "0x6001859")]
		[Address(RVA = "0x101A0A0", Offset = "0x101A0A0", VA = "0x101A0A0")]
		public GameObjectReference(GameObject value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000418")]
	public sealed class IntReference : BaseReference<int, IntVariable>
	{
		[Token(Token = "0x600185A")]
		[Address(RVA = "0x101A3D0", Offset = "0x101A3D0", VA = "0x101A3D0")]
		public IntReference()
		{
		}

		[Token(Token = "0x600185B")]
		[Address(RVA = "0x101A420", Offset = "0x101A420", VA = "0x101A420")]
		public IntReference(int value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000419")]
	public sealed class LongReference : BaseReference<long, LongVariable>
	{
		[Token(Token = "0x600185C")]
		[Address(RVA = "0x101AC28", Offset = "0x101AC28", VA = "0x101AC28")]
		public LongReference()
		{
		}

		[Token(Token = "0x600185D")]
		[Address(RVA = "0x101AC78", Offset = "0x101AC78", VA = "0x101AC78")]
		public LongReference(long value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041A")]
	public class ObjectReference : BaseReference<UnityEngine.Object, ObjectVariable>
	{
		[Token(Token = "0x600185E")]
		[Address(RVA = "0x101B16C", Offset = "0x101B16C", VA = "0x101B16C")]
		public ObjectReference()
		{
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x101B1BC", Offset = "0x101B1BC", VA = "0x101B1BC")]
		public ObjectReference(UnityEngine.Object value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041B")]
	public sealed class QuaternionReference : BaseReference<Quaternion, QuaternionVariable>
	{
		[Token(Token = "0x6001860")]
		[Address(RVA = "0x101B56C", Offset = "0x101B56C", VA = "0x101B56C")]
		public QuaternionReference()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x101B5BC", Offset = "0x101B5BC", VA = "0x101B5BC")]
		public QuaternionReference(Quaternion value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041C")]
	public sealed class SByteReference : BaseReference<sbyte, SByteVariable>
	{
		[Token(Token = "0x6001862")]
		[Address(RVA = "0x101B7CC", Offset = "0x101B7CC", VA = "0x101B7CC")]
		public SByteReference()
		{
		}

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x101B81C", Offset = "0x101B81C", VA = "0x101B81C")]
		public SByteReference(sbyte value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041D")]
	public sealed class SceneReference : BaseReference<SceneInfo, SceneVariable>
	{
		[Token(Token = "0x6001864")]
		[Address(RVA = "0x101BCC0", Offset = "0x101BCC0", VA = "0x101BCC0")]
		public SceneReference()
		{
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x101BD10", Offset = "0x101BD10", VA = "0x101BD10")]
		public SceneReference(SceneInfo value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041E")]
	public sealed class ShortReference : BaseReference<short, ShortVariable>
	{
		[Token(Token = "0x6001866")]
		[Address(RVA = "0x101BEC0", Offset = "0x101BEC0", VA = "0x101BEC0")]
		public ShortReference()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x101BF10", Offset = "0x101BF10", VA = "0x101BF10")]
		public ShortReference(short value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200041F")]
	public sealed class StringReference : BaseReference<string, StringVariable>
	{
		[Token(Token = "0x6001868")]
		[Address(RVA = "0x101C988", Offset = "0x101C988", VA = "0x101C988")]
		public StringReference()
		{
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x101C9D8", Offset = "0x101C9D8", VA = "0x101C9D8")]
		public StringReference(string value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000420")]
	public sealed class UIntReference : BaseReference<uint, UIntVariable>
	{
		[Token(Token = "0x600186A")]
		[Address(RVA = "0x101CCB8", Offset = "0x101CCB8", VA = "0x101CCB8")]
		public UIntReference()
		{
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x101CD08", Offset = "0x101CD08", VA = "0x101CD08")]
		public UIntReference(uint value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000421")]
	public sealed class ULongReference : BaseReference<ulong, ULongVariable>
	{
		[Token(Token = "0x600186C")]
		[Address(RVA = "0x101CF98", Offset = "0x101CF98", VA = "0x101CF98")]
		public ULongReference()
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x101CFE8", Offset = "0x101CFE8", VA = "0x101CFE8")]
		public ULongReference(ulong value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000422")]
	public sealed class UShortReference : BaseReference<ushort, UShortVariable>
	{
		[Token(Token = "0x600186E")]
		[Address(RVA = "0x101D278", Offset = "0x101D278", VA = "0x101D278")]
		public UShortReference()
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x101D2C8", Offset = "0x101D2C8", VA = "0x101D2C8")]
		public UShortReference(ushort value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000423")]
	public sealed class Vector2Reference : BaseReference<Vector2, Vector2Variable>
	{
		[Token(Token = "0x6001870")]
		[Address(RVA = "0x101D558", Offset = "0x101D558", VA = "0x101D558")]
		public Vector2Reference()
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x101D5A8", Offset = "0x101D5A8", VA = "0x101D5A8")]
		public Vector2Reference(Vector2 value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000424")]
	public sealed class Vector3Reference : BaseReference<Vector3, Vector3Variable>
	{
		[Token(Token = "0x6001872")]
		[Address(RVA = "0x101D890", Offset = "0x101D890", VA = "0x101D890")]
		public Vector3Reference()
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x101D8E0", Offset = "0x101D8E0", VA = "0x101D8E0")]
		public Vector3Reference(Vector3 value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000425")]
	public sealed class Vector4Reference : BaseReference<Vector4, Vector4Variable>
	{
		[Token(Token = "0x6001874")]
		[Address(RVA = "0x101DB18", Offset = "0x101DB18", VA = "0x101DB18")]
		public Vector4Reference()
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x101DB68", Offset = "0x101DB68", VA = "0x101DB68")]
		public Vector4Reference(Vector4 value)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000426")]
	public class DeveloperDescription : IEquatable<DeveloperDescription>, IEquatable<string>
	{
		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _value;

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x10182F4", Offset = "0x10182F4", VA = "0x10182F4")]
		public DeveloperDescription()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x101835C", Offset = "0x101835C", VA = "0x101835C")]
		public DeveloperDescription(string value)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x10183E4", Offset = "0x10183E4", VA = "0x10183E4")]
		public static implicit operator string(DeveloperDescription description)
		{
			return null;
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x10183FC", Offset = "0x10183FC", VA = "0x10183FC")]
		public static implicit operator DeveloperDescription(string value)
		{
			return null;
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x101845C", Offset = "0x101845C", VA = "0x101845C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x101847C", Offset = "0x101847C", VA = "0x101847C", Slot = "4")]
		public bool Equals(DeveloperDescription other)
		{
			return default(bool);
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x1018498", Offset = "0x1018498", VA = "0x1018498", Slot = "5")]
		public bool Equals(string other)
		{
			return default(bool);
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x10184B0", Offset = "0x10184B0", VA = "0x10184B0", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x10184D0", Offset = "0x10184D0", VA = "0x10184D0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000427")]
	public interface IStackTraceObject
	{
		[Token(Token = "0x17000208")]
		List<StackTraceEntry> StackTraces
		{
			[Token(Token = "0x600187F")]
			get;
		}

		[Token(Token = "0x6001880")]
		void AddStackTrace();

		[Token(Token = "0x6001881")]
		void AddStackTrace(object value);
	}
	[Token(Token = "0x2000428")]
	public abstract class SOArchitectureBaseMonobehaviour : MonoBehaviour
	{
		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private DeveloperDescription DeveloperDescription;

		[Token(Token = "0x6001882")]
		[Address(RVA = "0x1018284", Offset = "0x1018284", VA = "0x1018284")]
		protected SOArchitectureBaseMonobehaviour()
		{
		}
	}
	[Token(Token = "0x2000429")]
	public abstract class SOArchitectureBaseObject : ScriptableObject
	{
		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DeveloperDescription DeveloperDescription;

		[Token(Token = "0x6001883")]
		[Address(RVA = "0x1017114", Offset = "0x1017114", VA = "0x1017114")]
		protected SOArchitectureBaseObject()
		{
		}
	}
	[Token(Token = "0x200042A")]
	public class SOArchitecture_Settings : ScriptableObject
	{
		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static SOArchitecture_Settings _instance;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool _drawEventGizmos;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _codeGenerationTargetDirectory;

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCB9F8", Offset = "0xCCB9F8")]
		private bool _codeGenerationAllowOverwrite;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int _defualtCreateAssetMenuOrder;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCBA54", Offset = "0xCCBA54")]
		private bool _enableDebug;

		[Token(Token = "0x17000209")]
		public static SOArchitecture_Settings Instance
		{
			[Token(Token = "0x6001884")]
			[Address(RVA = "0x101B9BC", Offset = "0x101B9BC", VA = "0x101B9BC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020A")]
		public bool DrawEventGizmos
		{
			[Token(Token = "0x6001887")]
			[Address(RVA = "0x101BB64", Offset = "0x101BB64", VA = "0x101BB64")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020B")]
		public string CodeGenerationTargetDirectory
		{
			[Token(Token = "0x6001888")]
			[Address(RVA = "0x101BB6C", Offset = "0x101BB6C", VA = "0x101BB6C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700020C")]
		public bool CodeGenerationAllowOverwrite
		{
			[Token(Token = "0x6001889")]
			[Address(RVA = "0x101BB74", Offset = "0x101BB74", VA = "0x101BB74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700020D")]
		public int DefaultCreateAssetMenuOrder
		{
			[Token(Token = "0x600188A")]
			[Address(RVA = "0x101BB7C", Offset = "0x101BB7C", VA = "0x101BB7C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700020E")]
		public bool EnableDebug
		{
			[Token(Token = "0x600188B")]
			[Address(RVA = "0x101BB84", Offset = "0x101BB84", VA = "0x101BB84")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x101BA68", Offset = "0x101BA68", VA = "0x101BA68")]
		private static SOArchitecture_Settings GetInstance()
		{
			return null;
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x101BB04", Offset = "0x101BB04", VA = "0x101BB04")]
		private static SOArchitecture_Settings CreateInstance()
		{
			return null;
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x101BB8C", Offset = "0x101BB8C", VA = "0x101BB8C")]
		public SOArchitecture_Settings()
		{
		}
	}
	[Token(Token = "0x200042B")]
	public static class SOArchitecture_Utility
	{
		[Token(Token = "0x4001533")]
		public const int ASSET_MENU_ORDER_VARIABLES = 121;

		[Token(Token = "0x4001534")]
		public const int ASSET_MENU_ORDER_EVENTS = 122;

		[Token(Token = "0x4001535")]
		public const int ASSET_MENU_ORDER_COLLECTIONS = 123;

		[Token(Token = "0x4001536")]
		public const string VARIABLE_SUBMENU = "Variables/";

		[Token(Token = "0x4001537")]
		public const string COLLECTION_SUBMENU = "Collections/";

		[Token(Token = "0x4001538")]
		public const string GAME_EVENT = "Game Events/";

		[Token(Token = "0x4001539")]
		public const string ADVANCED_GAME_EVENT = "Game Events/Advanced/";

		[Token(Token = "0x400153A")]
		public const string ADVANCED_VARIABLE_SUBMENU = "Variables/Advanced/";

		[Token(Token = "0x400153B")]
		public const string ADVANCED_VARIABLE_COLLECTION = "Collections/Advanced/";

		[Token(Token = "0x400153C")]
		public const string ADD_COMPONENT_ROOT_MENU = "SO Architecture/";

		[Token(Token = "0x400153D")]
		public const string EVENT_LISTENER_SUBMENU = "SO Architecture/Event Listeners/";
	}
	[Token(Token = "0x200042C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD004", Offset = "0xCBD004")]
	public class AnimationCurveVariable : BaseVariable<AnimationCurve>
	{
		[Token(Token = "0x600188D")]
		[Address(RVA = "0x1016B6C", Offset = "0x1016B6C", VA = "0x1016B6C")]
		public AnimationCurveVariable()
		{
		}
	}
	[Token(Token = "0x200042D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD070", Offset = "0xCBD070")]
	public class AudioClipVariable : BaseVariable<AudioClip>
	{
		[Token(Token = "0x600188E")]
		[Address(RVA = "0x1016CBC", Offset = "0x1016CBC", VA = "0x1016CBC")]
		public AudioClipVariable()
		{
		}
	}
	[Token(Token = "0x200042E")]
	public abstract class BaseVariable : GameEventBase
	{
		[Token(Token = "0x1700020F")]
		public abstract bool IsClamped
		{
			[Token(Token = "0x600188F")]
			get;
		}

		[Token(Token = "0x17000210")]
		public abstract bool Clampable
		{
			[Token(Token = "0x6001890")]
			get;
		}

		[Token(Token = "0x17000211")]
		public abstract bool ReadOnly
		{
			[Token(Token = "0x6001891")]
			get;
		}

		[Token(Token = "0x17000212")]
		public abstract Type Type
		{
			[Token(Token = "0x6001892")]
			get;
		}

		[Token(Token = "0x17000213")]
		public abstract object BaseValue
		{
			[Token(Token = "0x6001893")]
			get;
			[Token(Token = "0x6001894")]
			set;
		}

		[Token(Token = "0x6001895")]
		public abstract void Wash();

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x101718C", Offset = "0x101718C", VA = "0x101718C")]
		protected BaseVariable()
		{
		}
	}
	[Token(Token = "0x200042F")]
	public abstract class BaseVariable<T> : BaseVariable
	{
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public T _value;

		[Token(Token = "0x400153F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		public T _defaultValue;

		[Token(Token = "0x4001540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _readOnly;

		[Token(Token = "0x4001541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _raiseWarning;

		[Token(Token = "0x4001542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected bool _isClamped;

		[Token(Token = "0x4001543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T _minClampedValue;

		[Token(Token = "0x4001544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected T _maxClampedValue;

		[Token(Token = "0x17000214")]
		public virtual T Value
		{
			[Token(Token = "0x6001897")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001898")]
			set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public virtual T MinClampValue
		{
			[Token(Token = "0x6001899")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000216")]
		public virtual T MaxClampValue
		{
			[Token(Token = "0x600189A")]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x17000217")]
		public override bool Clampable
		{
			[Token(Token = "0x600189B")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000218")]
		public override bool ReadOnly
		{
			[Token(Token = "0x600189C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000219")]
		public override bool IsClamped
		{
			[Token(Token = "0x600189D")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700021A")]
		public override Type Type
		{
			[Token(Token = "0x600189E")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021B")]
		public override object BaseValue
		{
			[Token(Token = "0x600189F")]
			get
			{
				return null;
			}
			[Token(Token = "0x60018A0")]
			set
			{
			}
		}

		[Token(Token = "0x1700021C")]
		public T DefaultValue
		{
			[Token(Token = "0x60018A1")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x60018A2")]
			set
			{
			}
		}

		[Token(Token = "0x60018A3")]
		public override void Wash()
		{
		}

		[Token(Token = "0x60018A4")]
		public virtual T SetValue(T value)
		{
			return (T)null;
		}

		[Token(Token = "0x60018A5")]
		public virtual T SetValue(BaseVariable<T> value)
		{
			return (T)null;
		}

		[Token(Token = "0x60018A6")]
		protected virtual T ClampValue(T value)
		{
			return (T)null;
		}

		[Token(Token = "0x60018A7")]
		private void RaiseReadonlyWarning()
		{
		}

		[Token(Token = "0x60018A8")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60018A9")]
		public static implicit operator T(BaseVariable<T> variable)
		{
			return (T)null;
		}

		[Token(Token = "0x60018AA")]
		protected BaseVariable()
		{
		}
	}
	[Token(Token = "0x2000430")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD0DC", Offset = "0xCBD0DC")]
	public sealed class BoolVariable : BaseVariable<bool>
	{
		[Token(Token = "0x60018AB")]
		[Address(RVA = "0x1017460", Offset = "0x1017460", VA = "0x1017460")]
		public BoolVariable()
		{
		}
	}
	[Token(Token = "0x2000431")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD148", Offset = "0xCBD148")]
	public class ByteVariable : BaseVariable<byte>
	{
		[Token(Token = "0x1700021D")]
		public override bool Clampable
		{
			[Token(Token = "0x60018AC")]
			[Address(RVA = "0x10176A0", Offset = "0x10176A0", VA = "0x10176A0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x10176A8", Offset = "0x10176A8", VA = "0x10176A8", Slot = "24")]
		protected override byte ClampValue(byte value)
		{
			return default(byte);
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x1017740", Offset = "0x1017740", VA = "0x1017740")]
		public ByteVariable()
		{
		}
	}
	[Token(Token = "0x2000432")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD1B4", Offset = "0xCBD1B4")]
	public sealed class CharVariable : BaseVariable<char>
	{
		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x1017980", Offset = "0x1017980", VA = "0x1017980")]
		public CharVariable()
		{
		}
	}
	[Token(Token = "0x2000433")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD220", Offset = "0xCBD220")]
	public class Color32Variable : BaseVariable<Color32>
	{
		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1017AD0", Offset = "0x1017AD0", VA = "0x1017AD0")]
		public Color32Variable()
		{
		}
	}
	[Token(Token = "0x2000434")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD28C", Offset = "0xCBD28C")]
	public class ColorVariable : BaseVariable<Color>
	{
		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x1017C40", Offset = "0x1017C40", VA = "0x1017C40")]
		public ColorVariable()
		{
		}
	}
	[Token(Token = "0x2000435")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD2F8", Offset = "0xCBD2F8")]
	public class DoubleVariable : BaseVariable<double>
	{
		[Token(Token = "0x1700021E")]
		public override bool Clampable
		{
			[Token(Token = "0x60018B2")]
			[Address(RVA = "0x10186C8", Offset = "0x10186C8", VA = "0x10186C8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x10186D0", Offset = "0x10186D0", VA = "0x10186D0", Slot = "24")]
		protected override double ClampValue(double value)
		{
			return default(double);
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x1018760", Offset = "0x1018760", VA = "0x1018760")]
		public DoubleVariable()
		{
		}
	}
	[Token(Token = "0x2000436")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD364", Offset = "0xCBD364")]
	public class FloatVariable : BaseVariable<float>
	{
		[Token(Token = "0x4001545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnValueAdd;

		[Token(Token = "0x4001546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnValueSubstract;

		[Token(Token = "0x1700021F")]
		public override bool Clampable
		{
			[Token(Token = "0x60018B5")]
			[Address(RVA = "0x1018B80", Offset = "0x1018B80", VA = "0x1018B80", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1018B88", Offset = "0x1018B88", VA = "0x1018B88", Slot = "24")]
		protected override float ClampValue(float value)
		{
			return default(float);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1018C18", Offset = "0x1018C18", VA = "0x1018C18")]
		public void AddToDefaultValue(float value)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x1018C20", Offset = "0x1018C20", VA = "0x1018C20")]
		public void AddToDefaultValue(FloatVariable variable)
		{
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x1018C60", Offset = "0x1018C60", VA = "0x1018C60")]
		public void AddToValue(float value)
		{
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x1018CB0", Offset = "0x1018CB0", VA = "0x1018CB0")]
		public void AddToValue(FloatVariable value)
		{
		}

		[Token(Token = "0x60018BB")]
		[Address(RVA = "0x1018D58", Offset = "0x1018D58", VA = "0x1018D58")]
		public void SubstractToValue(float value)
		{
		}

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1018DA8", Offset = "0x1018DA8", VA = "0x1018DA8")]
		public void SubstractToValue(FloatVariable value)
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x1018E50", Offset = "0x1018E50", VA = "0x1018E50")]
		public void SetMinClamped(float value)
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1018E58", Offset = "0x1018E58", VA = "0x1018E58")]
		public void SetMaxClamped(float value)
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1018E60", Offset = "0x1018E60", VA = "0x1018E60")]
		public void SetMinClamped(FloatVariable value)
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x1018EA0", Offset = "0x1018EA0", VA = "0x1018EA0")]
		public void SetMaxClamped(FloatVariable value)
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x1018EE0", Offset = "0x1018EE0", VA = "0x1018EE0")]
		public FloatVariable()
		{
		}
	}
	[Token(Token = "0x2000437")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD3D0", Offset = "0xCBD3D0")]
	public sealed class GameObjectVariable : BaseVariable<GameObject>
	{
		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x101A150", Offset = "0x101A150", VA = "0x101A150")]
		public GameObjectVariable()
		{
		}
	}
	[Token(Token = "0x2000438")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD43C", Offset = "0xCBD43C")]
	public class IntVariable : BaseVariable<int>
	{
		[Token(Token = "0x4001547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public UnityEvent OnValueAdd;

		[Token(Token = "0x4001548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public UnityEvent OnValueSubstract;

		[Token(Token = "0x17000220")]
		public override bool Clampable
		{
			[Token(Token = "0x60018C3")]
			[Address(RVA = "0x101A4D0", Offset = "0x101A4D0", VA = "0x101A4D0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0x101A4D8", Offset = "0x101A4D8", VA = "0x101A4D8", Slot = "24")]
		protected override int ClampValue(int value)
		{
			return default(int);
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0x101A570", Offset = "0x101A570", VA = "0x101A570")]
		public void SetValue(IntVariable variable)
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0x101A5C8", Offset = "0x101A5C8", VA = "0x101A5C8")]
		public void SetDefaultValue(IntVariable variable)
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0x101A608", Offset = "0x101A608", VA = "0x101A608")]
		public void AddToValue(int value)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0x101A6C4", Offset = "0x101A6C4", VA = "0x101A6C4")]
		public void AddToValue(IntVariable value)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0x101A774", Offset = "0x101A774", VA = "0x101A774")]
		public void SubstractToValue(int value)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0x101A7C8", Offset = "0x101A7C8", VA = "0x101A7C8")]
		public void SubstractToValue(IntVariable value)
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0x101A878", Offset = "0x101A878", VA = "0x101A878")]
		public void SetMinClamped(int value)
		{
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0x101A880", Offset = "0x101A880", VA = "0x101A880")]
		public void SetMaxClamped(int value)
		{
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0x101A888", Offset = "0x101A888", VA = "0x101A888")]
		public void SetMinClamped(IntVariable value)
		{
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0x101A8C8", Offset = "0x101A8C8", VA = "0x101A8C8")]
		public void SetMaxClamped(IntVariable value)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0x101A908", Offset = "0x101A908", VA = "0x101A908")]
		public IntVariable()
		{
		}
	}
	[Token(Token = "0x2000439")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD4A8", Offset = "0xCBD4A8")]
	public class LongVariable : BaseVariable<long>
	{
		[Token(Token = "0x17000221")]
		public override bool Clampable
		{
			[Token(Token = "0x60018D0")]
			[Address(RVA = "0x101AD28", Offset = "0x101AD28", VA = "0x101AD28", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0x101AD30", Offset = "0x101AD30", VA = "0x101AD30", Slot = "24")]
		protected override long ClampValue(long value)
		{
			return default(long);
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0x101ADC8", Offset = "0x101ADC8", VA = "0x101ADC8")]
		public LongVariable()
		{
		}
	}
	[Token(Token = "0x200043A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD514", Offset = "0xCBD514")]
	public class ObjectVariable : BaseVariable<UnityEngine.Object>
	{
		[Token(Token = "0x60018D3")]
		[Address(RVA = "0x101B26C", Offset = "0x101B26C", VA = "0x101B26C")]
		public ObjectVariable()
		{
		}
	}
	[Token(Token = "0x200043B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD580", Offset = "0xCBD580")]
	public sealed class QuaternionVariable : BaseVariable<Quaternion>
	{
		[Token(Token = "0x60018D4")]
		[Address(RVA = "0x101B68C", Offset = "0x101B68C", VA = "0x101B68C")]
		public QuaternionVariable()
		{
		}
	}
	[Token(Token = "0x200043C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD5EC", Offset = "0xCBD5EC")]
	public class SByteVariable : BaseVariable<sbyte>
	{
		[Token(Token = "0x17000222")]
		public override bool Clampable
		{
			[Token(Token = "0x60018D5")]
			[Address(RVA = "0x101B8CC", Offset = "0x101B8CC", VA = "0x101B8CC", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0x101B8D4", Offset = "0x101B8D4", VA = "0x101B8D4", Slot = "24")]
		protected override sbyte ClampValue(sbyte value)
		{
			return default(sbyte);
		}

		[Token(Token = "0x60018D7")]
		[Address(RVA = "0x101B96C", Offset = "0x101B96C", VA = "0x101B96C")]
		public SByteVariable()
		{
		}
	}
	[Token(Token = "0x200043D")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD658", Offset = "0xCBD658")]
	public sealed class SceneVariable : BaseVariable<SceneInfo>
	{
		[Token(Token = "0x17000223")]
		public override SceneInfo Value
		{
			[Token(Token = "0x60018D8")]
			[Address(RVA = "0x101BD70", Offset = "0x101BD70", VA = "0x101BD70", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000224")]
		public override bool ReadOnly
		{
			[Token(Token = "0x60018D9")]
			[Address(RVA = "0x101BD78", Offset = "0x101BD78", VA = "0x101BD78", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0x101BD80", Offset = "0x101BD80", VA = "0x101BD80")]
		public SceneVariable()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200043E")]
	[MultiLine]
	public sealed class SceneInfo : ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _sceneName;

		[Token(Token = "0x400154A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _sceneIndex;

		[Token(Token = "0x400154B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool _isSceneEnabled;

		[Token(Token = "0x17000225")]
		public string SceneName
		{
			[Token(Token = "0x60018DB")]
			[Address(RVA = "0x101BC50", Offset = "0x101BC50", VA = "0x101BC50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000226")]
		public int SceneIndex
		{
			[Token(Token = "0x60018DC")]
			[Address(RVA = "0x101BC58", Offset = "0x101BC58", VA = "0x101BC58")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60018DD")]
			[Address(RVA = "0x101BC60", Offset = "0x101BC60", VA = "0x101BC60")]
			internal set
			{
			}
		}

		[Token(Token = "0x17000227")]
		public bool IsSceneInBuildSettings
		{
			[Token(Token = "0x60018DE")]
			[Address(RVA = "0x101BC68", Offset = "0x101BC68", VA = "0x101BC68")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000228")]
		public bool IsSceneEnabled
		{
			[Token(Token = "0x60018DF")]
			[Address(RVA = "0x101BC78", Offset = "0x101BC78", VA = "0x101BC78")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018E0")]
			[Address(RVA = "0x101BC80", Offset = "0x101BC80", VA = "0x101BC80")]
			internal set
			{
			}
		}

		[Token(Token = "0x60018E1")]
		[Address(RVA = "0x101BC8C", Offset = "0x101BC8C", VA = "0x101BC8C")]
		public SceneInfo()
		{
		}

		[Token(Token = "0x60018E2")]
		[Address(RVA = "0x101BCB8", Offset = "0x101BCB8", VA = "0x101BCB8", Slot = "4")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60018E3")]
		[Address(RVA = "0x101BCBC", Offset = "0x101BCBC", VA = "0x101BCBC", Slot = "5")]
		public void OnAfterDeserialize()
		{
		}
	}
	[Token(Token = "0x200043F")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD6D4", Offset = "0xCBD6D4")]
	public class ShortVariable : BaseVariable<short>
	{
		[Token(Token = "0x17000229")]
		public override bool Clampable
		{
			[Token(Token = "0x60018E4")]
			[Address(RVA = "0x101BFC0", Offset = "0x101BFC0", VA = "0x101BFC0", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018E5")]
		[Address(RVA = "0x101BFC8", Offset = "0x101BFC8", VA = "0x101BFC8", Slot = "24")]
		protected override short ClampValue(short value)
		{
			return default(short);
		}

		[Token(Token = "0x60018E6")]
		[Address(RVA = "0x101C060", Offset = "0x101C060", VA = "0x101C060")]
		public ShortVariable()
		{
		}
	}
	[Token(Token = "0x2000440")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD740", Offset = "0xCBD740")]
	public sealed class StringVariable : BaseVariable<string>
	{
		[Token(Token = "0x60018E7")]
		[Address(RVA = "0x101CB78", Offset = "0x101CB78", VA = "0x101CB78")]
		public StringVariable()
		{
		}
	}
	[Token(Token = "0x2000441")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD7AC", Offset = "0xCBD7AC")]
	public class UIntVariable : BaseVariable<uint>
	{
		[Token(Token = "0x1700022A")]
		public override bool Clampable
		{
			[Token(Token = "0x60018E8")]
			[Address(RVA = "0x101CDB8", Offset = "0x101CDB8", VA = "0x101CDB8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018E9")]
		[Address(RVA = "0x101CDC0", Offset = "0x101CDC0", VA = "0x101CDC0", Slot = "24")]
		protected override uint ClampValue(uint value)
		{
			return default(uint);
		}

		[Token(Token = "0x60018EA")]
		[Address(RVA = "0x101CE58", Offset = "0x101CE58", VA = "0x101CE58")]
		public UIntVariable()
		{
		}
	}
	[Token(Token = "0x2000442")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD818", Offset = "0xCBD818")]
	public class ULongVariable : BaseVariable<ulong>
	{
		[Token(Token = "0x1700022B")]
		public override bool Clampable
		{
			[Token(Token = "0x60018EB")]
			[Address(RVA = "0x101D098", Offset = "0x101D098", VA = "0x101D098", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018EC")]
		[Address(RVA = "0x101D0A0", Offset = "0x101D0A0", VA = "0x101D0A0", Slot = "24")]
		protected override ulong ClampValue(ulong value)
		{
			return default(ulong);
		}

		[Token(Token = "0x60018ED")]
		[Address(RVA = "0x101D138", Offset = "0x101D138", VA = "0x101D138")]
		public ULongVariable()
		{
		}
	}
	[Token(Token = "0x2000443")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD884", Offset = "0xCBD884")]
	public class UShortVariable : BaseVariable<ushort>
	{
		[Token(Token = "0x1700022C")]
		public override bool Clampable
		{
			[Token(Token = "0x60018EE")]
			[Address(RVA = "0x101D378", Offset = "0x101D378", VA = "0x101D378", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60018EF")]
		[Address(RVA = "0x101D380", Offset = "0x101D380", VA = "0x101D380", Slot = "24")]
		protected override ushort ClampValue(ushort value)
		{
			return default(ushort);
		}

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0x101D418", Offset = "0x101D418", VA = "0x101D418")]
		public UShortVariable()
		{
		}
	}
	[Token(Token = "0x2000444")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD8F0", Offset = "0xCBD8F0")]
	public sealed class Vector2Variable : BaseVariable<Vector2>
	{
		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x101D660", Offset = "0x101D660", VA = "0x101D660")]
		public Vector2Variable()
		{
		}
	}
	[Token(Token = "0x2000445")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD95C", Offset = "0xCBD95C")]
	public sealed class Vector3Variable : BaseVariable<Vector3>
	{
		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x101D9A8", Offset = "0x101D9A8", VA = "0x101D9A8")]
		public Vector3Variable()
		{
		}
	}
	[Token(Token = "0x2000446")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBD9C8", Offset = "0xCBD9C8")]
	public sealed class Vector4Variable : BaseVariable<Vector4>
	{
		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x101DC38", Offset = "0x101DC38", VA = "0x101DC38")]
		public Vector4Variable()
		{
		}
	}
	[Token(Token = "0x2000447")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBDA34", Offset = "0xCBDA34")]
	public class ActorCollection : Collection<ActorData>
	{
		[Token(Token = "0x60018F4")]
		[Address(RVA = "0x101692C", Offset = "0x101692C", VA = "0x101692C")]
		public ActorCollection()
		{
		}
	}
	[Token(Token = "0x2000448")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBDAA0", Offset = "0xCBDAA0")]
	public sealed class GestureVariable : BaseVariable<GestureData>
	{
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool m_dominant;

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0x101A1A0", Offset = "0x101A1A0", VA = "0x101A1A0")]
		public GestureVariable()
		{
		}
	}
	[Token(Token = "0x2000449")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBDB0C", Offset = "0xCBDB0C")]
	public class MoonDataCollection : Collection<MoonData>
	{
		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		private Dictionary<string, MoonData> _moonDatasDico;

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0x101AE18", Offset = "0x101AE18", VA = "0x101AE18")]
		public Dictionary<string, MoonData> ToDictionary()
		{
			return null;
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0x101AF3C", Offset = "0x101AF3C", VA = "0x101AF3C")]
		public MoonDataCollection()
		{
		}
	}
	[Token(Token = "0x200044A")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBDB78", Offset = "0xCBDB78")]
	public class PerkDataCollection : Collection<PerkData>
	{
		[Token(Token = "0x60018F8")]
		[Address(RVA = "0x101B2BC", Offset = "0x101B2BC", VA = "0x101B2BC")]
		public PerkDataCollection()
		{
		}
	}
	[Token(Token = "0x200044B")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBDBE4", Offset = "0xCBDBE4")]
	public class PlanetCollection : Collection<PlanetData>
	{
		[Token(Token = "0x60018F9")]
		[Address(RVA = "0x101B3FC", Offset = "0x101B3FC", VA = "0x101B3FC")]
		public PlanetCollection()
		{
		}
	}
	[Token(Token = "0x200044C")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBDC50", Offset = "0xCBDC50")]
	public class SolarSystemCollection : Collection<SolarSystemData>
	{
		[Token(Token = "0x60018FA")]
		[Address(RVA = "0x101C2A0", Offset = "0x101C2A0", VA = "0x101C2A0")]
		public SolarSystemCollection()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x200044D")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x1700022D")]
		public bool Highlight
		{
			[Token(Token = "0x60018FB")]
			[Address(RVA = "0x11BC834", Offset = "0x11BC834", VA = "0x11BC834")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60018FC")]
			[Address(RVA = "0x11BC83C", Offset = "0x11BC83C", VA = "0x11BC83C")]
			set
			{
			}
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0x11BC848", Offset = "0x11BC848", VA = "0x11BC848")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0x11BCA14", Offset = "0x11BCA14", VA = "0x11BCA14", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0x11BCA3C", Offset = "0x11BCA3C", VA = "0x11BCA3C", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0x11BCA64", Offset = "0x11BCA64", VA = "0x11BCA64")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0x11BC914", Offset = "0x11BC914", VA = "0x11BC914")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0x11BCCF4", Offset = "0x11BCCF4", VA = "0x11BCCF4")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x200044E")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x1700022E")]
		public bool InRange
		{
			[Token(Token = "0x6001904")]
			[Address(RVA = "0x11BD470", Offset = "0x11BD470", VA = "0x11BD470")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001905")]
			[Address(RVA = "0x11BD478", Offset = "0x11BD478", VA = "0x11BD478")]
			set
			{
			}
		}

		[Token(Token = "0x1700022F")]
		public bool Targeted
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0x11BD5F4", Offset = "0x11BD5F4", VA = "0x11BD5F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001907")]
			[Address(RVA = "0x11BD5FC", Offset = "0x11BD5FC", VA = "0x11BD5FC")]
			set
			{
			}
		}

		[Token(Token = "0x6001908")]
		[Address(RVA = "0x11BD608", Offset = "0x11BD608", VA = "0x11BD608", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6001909")]
		[Address(RVA = "0x11BD484", Offset = "0x11BD484", VA = "0x11BD484")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0x11BD7E4", Offset = "0x11BD7E4", VA = "0x11BD7E4")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x200044F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBDCBC", Offset = "0xCBDCBC")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000230")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600190B")]
			[Address(RVA = "0x11BD7EC", Offset = "0x11BD7EC", VA = "0x11BD7EC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600190C")]
			[Address(RVA = "0x11BD7F4", Offset = "0x11BD7F4", VA = "0x11BD7F4")]
			set
			{
			}
		}

		[Token(Token = "0x600190D")]
		[Address(RVA = "0x11BD810", Offset = "0x11BD810", VA = "0x11BD810", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0x11BDA28", Offset = "0x11BDA28", VA = "0x11BDA28", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x600190F")]
		[Address(RVA = "0x11BE39C", Offset = "0x11BE39C", VA = "0x11BE39C", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x6001910")]
		[Address(RVA = "0x11BE974", Offset = "0x11BE974", VA = "0x11BE974", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x11BED54", Offset = "0x11BED54", VA = "0x11BED54")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x11BDC94", Offset = "0x11BDC94", VA = "0x11BDC94")]
		protected bool FindTarget(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x11BEE30", Offset = "0x11BEE30", VA = "0x11BEE30")]
		protected bool FindTargetWithSpherecast(out DistanceGrabbable dgOut, out Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x11BF2CC", Offset = "0x11BF2CC", VA = "0x11BF2CC", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001915")]
		[Address(RVA = "0x11BF2E4", Offset = "0x11BF2E4", VA = "0x11BF2E4", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x6001916")]
		[Address(RVA = "0x11BF2EC", Offset = "0x11BF2EC", VA = "0x11BF2EC")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000450")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x6001917")]
		[Address(RVA = "0x11C0EE0", Offset = "0x11C0EE0", VA = "0x11C0EE0")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001918")]
		[Address(RVA = "0x11C0F90", Offset = "0x11C0F90", VA = "0x11C0F90")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x6001919")]
		[Address(RVA = "0x11C103C", Offset = "0x11C103C", VA = "0x11C103C")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000451")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x2000649")]
		public enum CrosshairState
		{
			[Token(Token = "0x4001E11")]
			Disabled,
			[Token(Token = "0x4001E12")]
			Enabled,
			[Token(Token = "0x4001E13")]
			Targeted
		}

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x600191A")]
		[Address(RVA = "0x11C1044", Offset = "0x11C1044", VA = "0x11C1044")]
		private void Start()
		{
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0x11BD748", Offset = "0x11BD748", VA = "0x11BD748")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0x11C10B4", Offset = "0x11C10B4", VA = "0x11C10B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0x11C10FC", Offset = "0x11C10FC", VA = "0x11C10FC")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000452")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x600191E")]
		[Address(RVA = "0x11C6174", Offset = "0x11C6174", VA = "0x11C6174")]
		private void Start()
		{
		}

		[Token(Token = "0x600191F")]
		[Address(RVA = "0x11C6240", Offset = "0x11C6240", VA = "0x11C6240")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001920")]
		[Address(RVA = "0x11C624C", Offset = "0x11C624C", VA = "0x11C624C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001921")]
		[Address(RVA = "0x11C6258", Offset = "0x11C6258", VA = "0x11C6258")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000453")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x6001922")]
		[Address(RVA = "0x11BB41C", Offset = "0x11BB41C", VA = "0x11BB41C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0x11BB474", Offset = "0x11BB474", VA = "0x11BB474")]
		private void Update()
		{
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0x11BB718", Offset = "0x11BB718", VA = "0x11BB718")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0x11BB808", Offset = "0x11BB808", VA = "0x11BB808")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6001926")]
		[Address(RVA = "0x11BB478", Offset = "0x11BB478", VA = "0x11BB478")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x6001927")]
		[Address(RVA = "0x11BB8F8", Offset = "0x11BB8F8", VA = "0x11BB8F8")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000454")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x200064A")]
		public enum ContactTest
		{
			[Token(Token = "0x4001E15")]
			PerpenTest,
			[Token(Token = "0x4001E16")]
			BackwardsPress
		}

		[Token(Token = "0x4001572")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x4001573")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000231")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0x11BB9A8", Offset = "0x11BB9A8", VA = "0x11BB9A8", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000232")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x6001929")]
			[Address(RVA = "0x11BB9B0", Offset = "0x11BB9B0", VA = "0x11BB9B0")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x600192A")]
		[Address(RVA = "0x11BB9BC", Offset = "0x11BB9BC", VA = "0x11BB9BC", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600192B")]
		[Address(RVA = "0x11BBB34", Offset = "0x11BBB34", VA = "0x11BBB34")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0x11BBD54", Offset = "0x11BBD54", VA = "0x11BBD54", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0x11BC298", Offset = "0x11BC298", VA = "0x11BC298")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0x11BC1B0", Offset = "0x11BC1B0", VA = "0x11BC1B0")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x600192F")]
		[Address(RVA = "0x11BC40C", Offset = "0x11BC40C", VA = "0x11BC40C")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001930")]
		[Address(RVA = "0x11BC500", Offset = "0x11BC500", VA = "0x11BC500")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x6001931")]
		[Address(RVA = "0x11BC62C", Offset = "0x11BC62C", VA = "0x11BC62C")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000455")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBC80", Offset = "0xCCBC80")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBC90", Offset = "0xCCBC90")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000233")]
		public Collider Collider
		{
			[Token(Token = "0x6001932")]
			[Address(RVA = "0x11BC730", Offset = "0x11BC730", VA = "0x11BC730", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD219C", Offset = "0xCD219C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001933")]
			[Address(RVA = "0x11BC738", Offset = "0x11BC738", VA = "0x11BC738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD21AC", Offset = "0xCD21AC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000234")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x6001934")]
			[Address(RVA = "0x11BC740", Offset = "0x11BC740", VA = "0x11BC740", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD21BC", Offset = "0xCD21BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001935")]
			[Address(RVA = "0x11BC748", Offset = "0x11BC748", VA = "0x11BC748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD21CC", Offset = "0xCD21CC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000235")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x6001936")]
			[Address(RVA = "0x11BC750", Offset = "0x11BC750", VA = "0x11BC750", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0x11BC7A0", Offset = "0x11BC7A0", VA = "0x11BC7A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001938")]
		[Address(RVA = "0x11BC82C", Offset = "0x11BC82C", VA = "0x11BC82C")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x2000456")]
	public interface ColliderZone
	{
		[Token(Token = "0x17000236")]
		Collider Collider
		{
			[Token(Token = "0x6001939")]
			get;
		}

		[Token(Token = "0x17000237")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x600193A")]
			get;
		}

		[Token(Token = "0x17000238")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x600193B")]
			get;
		}
	}
	[Token(Token = "0x2000457")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x600193C")]
		[Address(RVA = "0x11BBC98", Offset = "0x11BBC98", VA = "0x11BBC98")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x2000458")]
	public enum InteractionType
	{
		[Token(Token = "0x4001587")]
		Enter,
		[Token(Token = "0x4001588")]
		Stay,
		[Token(Token = "0x4001589")]
		Exit
	}
	[Token(Token = "0x2000459")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x200064B")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x4001E18")]
			Mesh,
			[Token(Token = "0x4001E19")]
			Skeleton,
			[Token(Token = "0x4001E1A")]
			Both
		}

		[Token(Token = "0x200064C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF75C", Offset = "0xCBF75C")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x170003B6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600238A")]
				[Address(RVA = "0x11C20E0", Offset = "0x11C20E0", VA = "0x11C20E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600238C")]
				[Address(RVA = "0x11C2148", Offset = "0x11C2148", VA = "0x11C2148", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002387")]
			[Address(RVA = "0x11C1B64", Offset = "0x11C1B64", VA = "0x11C1B64")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002388")]
			[Address(RVA = "0x11C1E8C", Offset = "0x11C1E8C", VA = "0x11C1E8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002389")]
			[Address(RVA = "0x11C1E90", Offset = "0x11C1E90", VA = "0x11C1E90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600238B")]
			[Address(RVA = "0x11C20E8", Offset = "0x11C20E8", VA = "0x11C20E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400158A")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBCC0", Offset = "0xCCBCC0")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x17000239")]
		public OVRHand RightHand
		{
			[Token(Token = "0x600193D")]
			[Address(RVA = "0x11BFF68", Offset = "0x11BFF68", VA = "0x11BFF68")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193E")]
			[Address(RVA = "0x11C1104", Offset = "0x11C1104", VA = "0x11C1104")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023A")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0x11C0B64", Offset = "0x11C0B64", VA = "0x11C0B64")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001940")]
			[Address(RVA = "0x11C1174", Offset = "0x11C1174", VA = "0x11C1174")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023B")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x6001941")]
			[Address(RVA = "0x11C11E4", Offset = "0x11C11E4", VA = "0x11C11E4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001942")]
			[Address(RVA = "0x11C121C", Offset = "0x11C121C", VA = "0x11C121C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023C")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0x11C128C", Offset = "0x11C128C", VA = "0x11C128C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001944")]
			[Address(RVA = "0x11C12C4", Offset = "0x11C12C4", VA = "0x11C12C4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023D")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x6001945")]
			[Address(RVA = "0x11C1334", Offset = "0x11C1334", VA = "0x11C1334")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001946")]
			[Address(RVA = "0x11C136C", Offset = "0x11C136C", VA = "0x11C136C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023E")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x6001947")]
			[Address(RVA = "0x11BFF34", Offset = "0x11BFF34", VA = "0x11BFF34")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001948")]
			[Address(RVA = "0x11C13DC", Offset = "0x11C13DC", VA = "0x11C13DC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700023F")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x6001949")]
			[Address(RVA = "0x11C0B30", Offset = "0x11C0B30", VA = "0x11C0B30")]
			get
			{
				return null;
			}
			[Token(Token = "0x600194A")]
			[Address(RVA = "0x11C1448", Offset = "0x11C1448", VA = "0x11C1448")]
			private set
			{
			}
		}

		[Token(Token = "0x17000240")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x600194B")]
			[Address(RVA = "0x11C14B4", Offset = "0x11C14B4", VA = "0x11C14B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600194C")]
			[Address(RVA = "0x11C14E8", Offset = "0x11C14E8", VA = "0x11C14E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000241")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x600194D")]
			[Address(RVA = "0x11C1554", Offset = "0x11C1554", VA = "0x11C1554")]
			get
			{
				return null;
			}
			[Token(Token = "0x600194E")]
			[Address(RVA = "0x11C1588", Offset = "0x11C1588", VA = "0x11C1588")]
			private set
			{
			}
		}

		[Token(Token = "0x17000242")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x600194F")]
			[Address(RVA = "0x11C15F4", Offset = "0x11C15F4", VA = "0x11C15F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001950")]
			[Address(RVA = "0x11C1628", Offset = "0x11C1628", VA = "0x11C1628")]
			private set
			{
			}
		}

		[Token(Token = "0x17000243")]
		public static HandsManager Instance
		{
			[Token(Token = "0x6001951")]
			[Address(RVA = "0x11C1694", Offset = "0x11C1694", VA = "0x11C1694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD21DC", Offset = "0xCD21DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001952")]
			[Address(RVA = "0x11C16E4", Offset = "0x11C16E4", VA = "0x11C16E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD21EC", Offset = "0xCD21EC")]
			private set
			{
			}
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x11C173C", Offset = "0x11C173C", VA = "0x11C173C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001954")]
		[Address(RVA = "0x11C1ADC", Offset = "0x11C1ADC", VA = "0x11C1ADC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001955")]
		[Address(RVA = "0x11C1A60", Offset = "0x11C1A60", VA = "0x11C1A60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD21FC", Offset = "0xCD21FC")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x11BD2C4", Offset = "0x11BD2C4", VA = "0x11BD2C4")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x11C1B90", Offset = "0x11C1B90", VA = "0x11C1B90")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x11C0B9C", Offset = "0x11C0B9C", VA = "0x11C0B9C")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x6001959")]
		[Address(RVA = "0x11BFDA4", Offset = "0x11BFDA4", VA = "0x11BFDA4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x600195A")]
		[Address(RVA = "0x11C1D70", Offset = "0x11C1D70", VA = "0x11C1D70")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200045A")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200064D")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x600238D")]
			[Address(RVA = "0x11C2898", Offset = "0x11C2898", VA = "0x11C2898")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000244")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x11C2150", Offset = "0x11C2150", VA = "0x11C2150")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000245")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x600195C")]
			[Address(RVA = "0x11C2158", Offset = "0x11C2158", VA = "0x11C2158")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000246")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x11C2160", Offset = "0x11C2160", VA = "0x11C2160")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000247")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x600195E")]
			[Address(RVA = "0x11C2168", Offset = "0x11C2168", VA = "0x11C2168", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0x11C2170", Offset = "0x11C2170", VA = "0x11C2170")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2260", Offset = "0xCD2260")]
			add
			{
			}
			[Token(Token = "0x6001960")]
			[Address(RVA = "0x11C2214", Offset = "0x11C2214", VA = "0x11C2214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2270", Offset = "0xCD2270")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x6001962")]
			[Address(RVA = "0x11C232C", Offset = "0x11C232C", VA = "0x11C232C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2280", Offset = "0xCD2280")]
			add
			{
			}
			[Token(Token = "0x6001963")]
			[Address(RVA = "0x11C23D0", Offset = "0x11C23D0", VA = "0x11C23D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2290", Offset = "0xCD2290")]
			remove
			{
			}
		}

		[Token(Token = "0x14000013")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x6001965")]
			[Address(RVA = "0x11C24E8", Offset = "0x11C24E8", VA = "0x11C24E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD22A0", Offset = "0xCD22A0")]
			add
			{
			}
			[Token(Token = "0x6001966")]
			[Address(RVA = "0x11C258C", Offset = "0x11C258C", VA = "0x11C258C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD22B0", Offset = "0xCD22B0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x11C22B8", Offset = "0x11C22B8", VA = "0x11C22B8", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001964")]
		[Address(RVA = "0x11C2474", Offset = "0x11C2474", VA = "0x11C2474", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001967")]
		[Address(RVA = "0x11C2630", Offset = "0x11C2630", VA = "0x11C2630", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x6001968")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x6001969")]
		[Address(RVA = "0x11BBAD0", Offset = "0x11BBAD0", VA = "0x11BBAD0", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0x11C276C", Offset = "0x11C276C", VA = "0x11C276C", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0x11BC728", Offset = "0x11BC728", VA = "0x11BC728")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200045B")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40015A2")]
		None,
		[Token(Token = "0x40015A3")]
		Proximity,
		[Token(Token = "0x40015A4")]
		Contact,
		[Token(Token = "0x40015A5")]
		Action
	}
	[Token(Token = "0x200045C")]
	public enum InteractableState
	{
		[Token(Token = "0x40015A7")]
		Default,
		[Token(Token = "0x40015A8")]
		ProximityState,
		[Token(Token = "0x40015A9")]
		ContactState,
		[Token(Token = "0x40015AA")]
		ActionState
	}
	[Token(Token = "0x200045D")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x600196C")]
		[Address(RVA = "0x11BC344", Offset = "0x11BC344", VA = "0x11BC344")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x200045E")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x17000248")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x600196D")]
			[Address(RVA = "0x11C28E8", Offset = "0x11C28E8", VA = "0x11C28E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0x11C26A4", Offset = "0x11C26A4", VA = "0x11C26A4")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0x11C27D0", Offset = "0x11C27D0", VA = "0x11C27D0")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0x11C2950", Offset = "0x11C2950", VA = "0x11C2950")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x200045F")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF76C", Offset = "0xCBF76C")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x4001E21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x4001E22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x4001E23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x4001E24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x4001E25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x4001E26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x170003B8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002392")]
				[Address(RVA = "0x11C3A10", Offset = "0x11C3A10", VA = "0x11C3A10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003B9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002394")]
				[Address(RVA = "0x11C3A78", Offset = "0x11C3A78", VA = "0x11C3A78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600238E")]
			[Address(RVA = "0x11C345C", Offset = "0x11C345C", VA = "0x11C345C")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600238F")]
			[Address(RVA = "0x11C3588", Offset = "0x11C3588", VA = "0x11C3588", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002390")]
			[Address(RVA = "0x11C35FC", Offset = "0x11C35FC", VA = "0x11C35FC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002391")]
			[Address(RVA = "0x11C35A4", Offset = "0x11C35A4", VA = "0x11C35A4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002393")]
			[Address(RVA = "0x11C3A18", Offset = "0x11C3A18", VA = "0x11C3A18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001972")]
		[Address(RVA = "0x11C333C", Offset = "0x11C333C", VA = "0x11C333C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001973")]
		[Address(RVA = "0x11C33B8", Offset = "0x11C33B8", VA = "0x11C33B8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD22C0", Offset = "0xCD22C0")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x6001974")]
		[Address(RVA = "0x11C3488", Offset = "0x11C3488", VA = "0x11C3488")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0x11C3580", Offset = "0x11C3580", VA = "0x11C3580")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000460")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x17000249")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x6001976")]
			[Address(RVA = "0x11BF7D0", Offset = "0x11BF7D0", VA = "0x11BF7D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0x11BF93C", Offset = "0x11BF93C", VA = "0x11BF93C")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0x11C3A80", Offset = "0x11C3A80", VA = "0x11C3A80")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0x11C3B2C", Offset = "0x11C3B2C", VA = "0x11C3B2C")]
		private void Update()
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0x11C3DF4", Offset = "0x11C3DF4", VA = "0x11C3DF4")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0x11C3E3C", Offset = "0x11C3E3C", VA = "0x11C3E3C")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0x11C40A8", Offset = "0x11C40A8", VA = "0x11C40A8")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0x11C41D4", Offset = "0x11C41D4", VA = "0x11C41D4")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000461")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x200064F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF77C", Offset = "0xCBF77C")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x170003BA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002398")]
				[Address(RVA = "0x11C0DAC", Offset = "0x11C0DAC", VA = "0x11C0DAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600239A")]
				[Address(RVA = "0x11C0E14", Offset = "0x11C0E14", VA = "0x11C0E14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002395")]
			[Address(RVA = "0x11BFA64", Offset = "0x11BFA64", VA = "0x11BFA64")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6002396")]
			[Address(RVA = "0x11C07A8", Offset = "0x11C07A8", VA = "0x11C07A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002397")]
			[Address(RVA = "0x11C07AC", Offset = "0x11C07AC", VA = "0x11C07AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002399")]
			[Address(RVA = "0x11C0DB4", Offset = "0x11C0DB4", VA = "0x11C0DB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40015BA")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700024A")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600197E")]
			[Address(RVA = "0x11BF69C", Offset = "0x11BF69C", VA = "0x11BF69C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700024B")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x600197F")]
			[Address(RVA = "0x11BF6A4", Offset = "0x11BF6A4", VA = "0x11BF6A4", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x1700024C")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001980")]
			[Address(RVA = "0x11BF6AC", Offset = "0x11BF6AC", VA = "0x11BF6AC", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700024D")]
		public override bool EnableState
		{
			[Token(Token = "0x6001981")]
			[Address(RVA = "0x11BF6B4", Offset = "0x11BF6B4", VA = "0x11BF6B4", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001982")]
			[Address(RVA = "0x11BF6E0", Offset = "0x11BF6E0", VA = "0x11BF6E0", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0x11BF71C", Offset = "0x11BF71C", VA = "0x11BF71C", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0x11BF9E8", Offset = "0x11BF9E8", VA = "0x11BF9E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD2324", Offset = "0xCD2324")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0x11BFA90", Offset = "0x11BFA90", VA = "0x11BFA90")]
		private void Update()
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0x11BFFA0", Offset = "0x11BFFA0", VA = "0x11BFFA0")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0x11C0218", Offset = "0x11C0218", VA = "0x11C0218")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0x11C0358", Offset = "0x11C0358", VA = "0x11C0358", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0x11C0634", Offset = "0x11C0634", VA = "0x11C0634", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0x11C0638", Offset = "0x11C0638", VA = "0x11C0638", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0x11C063C", Offset = "0x11C063C", VA = "0x11C063C")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000462")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBD50", Offset = "0xCCBD50")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBD60", Offset = "0xCCBD60")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBD70", Offset = "0xCCBD70")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x1700024E")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x600198C")]
			[Address(RVA = "0x11C0E1C", Offset = "0x11C0E1C", VA = "0x11C0E1C", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2388", Offset = "0xCD2388")]
			get
			{
				return null;
			}
			[Token(Token = "0x600198D")]
			[Address(RVA = "0x11C0E24", Offset = "0x11C0E24", VA = "0x11C0E24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2398", Offset = "0xCD2398")]
			set
			{
			}
		}

		[Token(Token = "0x1700024F")]
		public bool EnableState
		{
			[Token(Token = "0x600198E")]
			[Address(RVA = "0x11C0E2C", Offset = "0x11C0E2C", VA = "0x11C0E2C", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600198F")]
			[Address(RVA = "0x11C0E48", Offset = "0x11C0E48", VA = "0x11C0E48", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000250")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001990")]
			[Address(RVA = "0x11C0E68", Offset = "0x11C0E68", VA = "0x11C0E68", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD23A8", Offset = "0xCD23A8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001991")]
			[Address(RVA = "0x11C0E70", Offset = "0x11C0E70", VA = "0x11C0E70", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD23B8", Offset = "0xCD23B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000251")]
		public float SphereRadius
		{
			[Token(Token = "0x6001992")]
			[Address(RVA = "0x11C0E7C", Offset = "0x11C0E7C", VA = "0x11C0E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD23C8", Offset = "0xCD23C8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001993")]
			[Address(RVA = "0x11C0E84", Offset = "0x11C0E84", VA = "0x11C0E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD23D8", Offset = "0xCD23D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0x11C0E8C", Offset = "0x11C0E8C", VA = "0x11C0E8C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0x11C0ED4", Offset = "0x11C0ED4", VA = "0x11C0ED4", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001996")]
		[Address(RVA = "0x11C0ED8", Offset = "0x11C0ED8", VA = "0x11C0ED8")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000463")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40015CA")]
		None = 0,
		[Token(Token = "0x40015CB")]
		Ray = 1,
		[Token(Token = "0x40015CC")]
		Poke = 4,
		[Token(Token = "0x40015CD")]
		All = -1
	}
	[Token(Token = "0x2000464")]
	public enum ToolInputState
	{
		[Token(Token = "0x40015CF")]
		Inactive,
		[Token(Token = "0x40015D0")]
		PrimaryInputDown,
		[Token(Token = "0x40015D1")]
		PrimaryInputDownStay,
		[Token(Token = "0x40015D2")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000465")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x6001997")]
		[Address(RVA = "0x11C05DC", Offset = "0x11C05DC", VA = "0x11C05DC")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x2000466")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBD80", Offset = "0xCCBD80")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBD90", Offset = "0xCCBD90")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBDA0", Offset = "0xCCBDA0")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000252")]
		public Transform ToolTransform
		{
			[Token(Token = "0x6001998")]
			[Address(RVA = "0x11BC624", Offset = "0x11BC624", VA = "0x11BC624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000253")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x6001999")]
			[Address(RVA = "0x11C29D0", Offset = "0x11C29D0", VA = "0x11C29D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD23E8", Offset = "0xCD23E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600199A")]
			[Address(RVA = "0x11C29D8", Offset = "0x11C29D8", VA = "0x11C29D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD23F8", Offset = "0xCD23F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000254")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x600199B")]
			get;
		}

		[Token(Token = "0x17000255")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x600199C")]
			get;
		}

		[Token(Token = "0x17000256")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x600199D")]
			get;
		}

		[Token(Token = "0x17000257")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600199E")]
			[Address(RVA = "0x11C29E4", Offset = "0x11C29E4", VA = "0x11C29E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2408", Offset = "0xCD2408")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600199F")]
			[Address(RVA = "0x11C29F0", Offset = "0x11C29F0", VA = "0x11C29F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2418", Offset = "0xCD2418")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000258")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x60019A0")]
			[Address(RVA = "0x11C29FC", Offset = "0x11C29FC", VA = "0x11C29FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2428", Offset = "0xCD2428")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60019A1")]
			[Address(RVA = "0x11C2A08", Offset = "0x11C2A08", VA = "0x11C2A08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2438", Offset = "0xCD2438")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000259")]
		public abstract bool EnableState
		{
			[Token(Token = "0x60019A6")]
			get;
			[Token(Token = "0x60019A7")]
			set;
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0x11C2A14", Offset = "0x11C2A14", VA = "0x11C2A14")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60019A3")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x60019A4")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x60019A5")]
		public abstract void DeFocus();

		[Token(Token = "0x60019A8")]
		public abstract void Initialize();

		[Token(Token = "0x60019A9")]
		[Address(RVA = "0x11C2A1C", Offset = "0x11C2A1C", VA = "0x11C2A1C")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x60019AA")]
		[Address(RVA = "0x11C2A6C", Offset = "0x11C2A6C", VA = "0x11C2A6C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x60019AB")]
		[Address(RVA = "0x11C2AC4", Offset = "0x11C2AC4", VA = "0x11C2AC4", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x60019AC")]
		[Address(RVA = "0x11C2D24", Offset = "0x11C2D24", VA = "0x11C2D24", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x60019AD")]
		[Address(RVA = "0x11C0650", Offset = "0x11C0650", VA = "0x11C0650")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x2000467")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700025A")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x60019AE")]
			get;
		}

		[Token(Token = "0x1700025B")]
		bool EnableState
		{
			[Token(Token = "0x60019B0")]
			get;
			[Token(Token = "0x60019B1")]
			set;
		}

		[Token(Token = "0x1700025C")]
		bool ToolActivateState
		{
			[Token(Token = "0x60019B2")]
			get;
			[Token(Token = "0x60019B3")]
			set;
		}

		[Token(Token = "0x60019AF")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x2000468")]
	public class PinchStateModule
	{
		[Token(Token = "0x2000650")]
		private enum PinchState
		{
			[Token(Token = "0x4001E2B")]
			None,
			[Token(Token = "0x4001E2C")]
			PinchDown,
			[Token(Token = "0x4001E2D")]
			PinchStay,
			[Token(Token = "0x4001E2E")]
			PinchUp
		}

		[Token(Token = "0x40015DF")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x1700025D")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x60019B4")]
			[Address(RVA = "0x11C6260", Offset = "0x11C6260", VA = "0x11C6260")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025E")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x60019B5")]
			[Address(RVA = "0x11C62EC", Offset = "0x11C62EC", VA = "0x11C62EC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700025F")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x60019B6")]
			[Address(RVA = "0x11C6378", Offset = "0x11C6378", VA = "0x11C6378")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60019B7")]
		[Address(RVA = "0x11C6404", Offset = "0x11C6404", VA = "0x11C6404")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x60019B8")]
		[Address(RVA = "0x11C6438", Offset = "0x11C6438", VA = "0x11C6438")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x2000469")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x40015E2")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x40015E3")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x40015E4")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x40015E5")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x40015E6")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCBDC0", Offset = "0xCCBDC0")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000260")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x60019B9")]
			[Address(RVA = "0x11C6708", Offset = "0x11C6708", VA = "0x11C6708", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000261")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x60019BA")]
			[Address(RVA = "0x11C6710", Offset = "0x11C6710", VA = "0x11C6710", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000262")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x60019BB")]
			[Address(RVA = "0x11C6778", Offset = "0x11C6778", VA = "0x11C6778", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000263")]
		public override bool EnableState
		{
			[Token(Token = "0x60019BC")]
			[Address(RVA = "0x11C6780", Offset = "0x11C6780", VA = "0x11C6780", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019BD")]
			[Address(RVA = "0x11C67C4", Offset = "0x11C67C4", VA = "0x11C67C4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0x11C6838", Offset = "0x11C6838", VA = "0x11C6838", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x60019BF")]
		[Address(RVA = "0x11C6898", Offset = "0x11C6898", VA = "0x11C6898")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x11C6934", Offset = "0x11C6934", VA = "0x11C6934")]
		private void Update()
		{
		}

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0x11C6C34", Offset = "0x11C6C34", VA = "0x11C6C34")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0x11C6D30", Offset = "0x11C6D30", VA = "0x11C6D30", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0x11C70B8", Offset = "0x11C70B8", VA = "0x11C70B8")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0x11C725C", Offset = "0x11C725C", VA = "0x11C725C")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0x11C7384", Offset = "0x11C7384", VA = "0x11C7384")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0x11C76BC", Offset = "0x11C76BC", VA = "0x11C76BC")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0x11C7ACC", Offset = "0x11C7ACC", VA = "0x11C7ACC", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0x11C7BB8", Offset = "0x11C7BB8", VA = "0x11C7BB8", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0x11C7BF4", Offset = "0x11C7BF4", VA = "0x11C7BF4")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200046A")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40015F2")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x40015F3")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBE34", Offset = "0xCCBE34")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000264")]
		public bool EnableState
		{
			[Token(Token = "0x60019CA")]
			[Address(RVA = "0x11C67A8", Offset = "0x11C67A8", VA = "0x11C67A8", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019CB")]
			[Address(RVA = "0x11C67E0", Offset = "0x11C67E0", VA = "0x11C67E0", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000265")]
		public bool ToolActivateState
		{
			[Token(Token = "0x60019CC")]
			[Address(RVA = "0x11C7CE8", Offset = "0x11C7CE8", VA = "0x11C7CE8", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019CD")]
			[Address(RVA = "0x11C6BF8", Offset = "0x11C6BF8", VA = "0x11C6BF8", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x17000266")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x60019CF")]
			[Address(RVA = "0x11C7F34", Offset = "0x11C7F34", VA = "0x11C7F34", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2448", Offset = "0xCD2448")]
			get
			{
				return null;
			}
			[Token(Token = "0x60019D0")]
			[Address(RVA = "0x11C7F3C", Offset = "0x11C7F3C", VA = "0x11C7F3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2458", Offset = "0xCD2458")]
			set
			{
			}
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0x11C7CF0", Offset = "0x11C7CF0", VA = "0x11C7CF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x11C7B08", Offset = "0x11C7B08", VA = "0x11C7B08", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x11C7F44", Offset = "0x11C7F44", VA = "0x11C7F44")]
		private void Update()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x11C8270", Offset = "0x11C8270", VA = "0x11C8270")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019D4")]
		[Address(RVA = "0x11C8460", Offset = "0x11C8460", VA = "0x11C8460")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200046B")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x17000267")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60019D5")]
			[Address(RVA = "0x11BF30C", Offset = "0x11BF30C", VA = "0x11BF30C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x11BF314", Offset = "0x11BF314", VA = "0x11BF314")]
			set
			{
			}
		}

		[Token(Token = "0x17000268")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x60019D7")]
			[Address(RVA = "0x11BF39C", Offset = "0x11BF39C", VA = "0x11BF39C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60019D8")]
			[Address(RVA = "0x11BF3A4", Offset = "0x11BF3A4", VA = "0x11BF3A4")]
			set
			{
			}
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x11BF410", Offset = "0x11BF410", VA = "0x11BF410")]
		private void Start()
		{
		}

		[Token(Token = "0x60019DA")]
		[Address(RVA = "0x11BF674", Offset = "0x11BF674", VA = "0x11BF674")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x11BF684", Offset = "0x11BF684", VA = "0x11BF684")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x60019DC")]
		[Address(RVA = "0x11BF694", Offset = "0x11BF694", VA = "0x11BF694")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x200046C")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x11BCDE0", Offset = "0x11BCDE0", VA = "0x11BCDE0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x11BCDE4", Offset = "0x11BCDE4", VA = "0x11BCDE4")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x11BCE78", Offset = "0x11BCE78", VA = "0x11BCE78")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019E0")]
		[Address(RVA = "0x11BCF68", Offset = "0x11BCF68", VA = "0x11BCF68")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x11BD058", Offset = "0x11BD058", VA = "0x11BD058")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019E2")]
		[Address(RVA = "0x11BD118", Offset = "0x11BD118", VA = "0x11BD118")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x11BD208", Offset = "0x11BD208", VA = "0x11BD208")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0x11BD250", Offset = "0x11BD250", VA = "0x11BD250")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0x11BD3AC", Offset = "0x11BD3AC", VA = "0x11BD3AC")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0x11BD41C", Offset = "0x11BD41C", VA = "0x11BD41C")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x200046D")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x60019E7")]
		[Address(RVA = "0x11BD424", Offset = "0x11BD424", VA = "0x11BD424")]
		private void Start()
		{
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0x11BD428", Offset = "0x11BD428", VA = "0x11BD428")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x60019E9")]
		[Address(RVA = "0x11BD3E0", Offset = "0x11BD3E0", VA = "0x11BD3E0")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x60019EA")]
		[Address(RVA = "0x11BD468", Offset = "0x11BD468", VA = "0x11BD468")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x200046E")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x2000651")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF78C", Offset = "0xCBF78C")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x4001E32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x4001E33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x4001E34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x170003BC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600239E")]
				[Address(RVA = "0x11C6104", Offset = "0x11C6104", VA = "0x11C6104", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023A0")]
				[Address(RVA = "0x11C616C", Offset = "0x11C616C", VA = "0x11C616C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600239B")]
			[Address(RVA = "0x11C5E28", Offset = "0x11C5E28", VA = "0x11C5E28")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x600239C")]
			[Address(RVA = "0x11C5F04", Offset = "0x11C5F04", VA = "0x11C5F04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600239D")]
			[Address(RVA = "0x11C5F08", Offset = "0x11C5F08", VA = "0x11C5F08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600239F")]
			[Address(RVA = "0x11C610C", Offset = "0x11C610C", VA = "0x11C610C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001603")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x4001604")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x60019EB")]
		[Address(RVA = "0x11C5A18", Offset = "0x11C5A18", VA = "0x11C5A18")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019EC")]
		[Address(RVA = "0x11C5ABC", Offset = "0x11C5ABC", VA = "0x11C5ABC")]
		private void Update()
		{
		}

		[Token(Token = "0x60019ED")]
		[Address(RVA = "0x11C5D64", Offset = "0x11C5D64", VA = "0x11C5D64")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60019EE")]
		[Address(RVA = "0x11C5CE8", Offset = "0x11C5CE8", VA = "0x11C5CE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD2468", Offset = "0xCD2468")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x60019EF")]
		[Address(RVA = "0x11C5E54", Offset = "0x11C5E54", VA = "0x11C5E54")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x200046F")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x2000652")]
		public enum SelectionState
		{
			[Token(Token = "0x4001E36")]
			Off,
			[Token(Token = "0x4001E37")]
			Selected,
			[Token(Token = "0x4001E38")]
			Highlighted
		}

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x17000269")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x60019F0")]
			[Address(RVA = "0x11C84CC", Offset = "0x11C84CC", VA = "0x11C84CC")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x60019F1")]
			[Address(RVA = "0x11C84D4", Offset = "0x11C84D4", VA = "0x11C84D4")]
			set
			{
			}
		}

		[Token(Token = "0x60019F2")]
		[Address(RVA = "0x11C865C", Offset = "0x11C865C", VA = "0x11C865C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60019F3")]
		[Address(RVA = "0x11C8858", Offset = "0x11C8858", VA = "0x11C8858")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60019F4")]
		[Address(RVA = "0x11C855C", Offset = "0x11C855C", VA = "0x11C855C")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x60019F5")]
		[Address(RVA = "0x11C8948", Offset = "0x11C8948", VA = "0x11C8948")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x2000470")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x2000653")]
		public enum SegmentType
		{
			[Token(Token = "0x4001E3A")]
			Straight,
			[Token(Token = "0x4001E3B")]
			LeftTurn,
			[Token(Token = "0x4001E3C")]
			RightTurn,
			[Token(Token = "0x4001E3D")]
			Switch
		}

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001619")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x400161A")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCBF14", Offset = "0xCCBF14")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700026A")]
		public float StartDistance
		{
			[Token(Token = "0x60019F7")]
			[Address(RVA = "0x11C89B4", Offset = "0x11C89B4", VA = "0x11C89B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD24CC", Offset = "0xCD24CC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019F8")]
			[Address(RVA = "0x11C89BC", Offset = "0x11C89BC", VA = "0x11C89BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD24DC", Offset = "0xCD24DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700026B")]
		public float GridSize
		{
			[Token(Token = "0x60019F9")]
			[Address(RVA = "0x11C89C4", Offset = "0x11C89C4", VA = "0x11C89C4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60019FA")]
			[Address(RVA = "0x11C89CC", Offset = "0x11C89CC", VA = "0x11C89CC")]
			private set
			{
			}
		}

		[Token(Token = "0x1700026C")]
		public int SubDivCount
		{
			[Token(Token = "0x60019FB")]
			[Address(RVA = "0x11C89D4", Offset = "0x11C89D4", VA = "0x11C89D4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60019FC")]
			[Address(RVA = "0x11C89DC", Offset = "0x11C89DC", VA = "0x11C89DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700026D")]
		public SegmentType Type
		{
			[Token(Token = "0x60019FD")]
			[Address(RVA = "0x11C89E4", Offset = "0x11C89E4", VA = "0x11C89E4")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x1700026E")]
		public Pose EndPose
		{
			[Token(Token = "0x60019FE")]
			[Address(RVA = "0x11C89EC", Offset = "0x11C89EC", VA = "0x11C89EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700026F")]
		public float Radius
		{
			[Token(Token = "0x60019FF")]
			[Address(RVA = "0x11C8E80", Offset = "0x11C8E80", VA = "0x11C8E80")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000270")]
		public float SegmentLength
		{
			[Token(Token = "0x6001A01")]
			[Address(RVA = "0x11C8A54", Offset = "0x11C8A54", VA = "0x11C8A54")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A00")]
		[Address(RVA = "0x11C8E90", Offset = "0x11C8E90", VA = "0x11C8E90")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001A02")]
		[Address(RVA = "0x11C8EA8", Offset = "0x11C8EA8", VA = "0x11C8EA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A03")]
		[Address(RVA = "0x11C8A94", Offset = "0x11C8A94", VA = "0x11C8A94")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x11C8EAC", Offset = "0x11C8EAC", VA = "0x11C8EAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x11C8EB0", Offset = "0x11C8EB0", VA = "0x11C8EB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x11C8F1C", Offset = "0x11C8F1C", VA = "0x11C8F1C")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x11C9AA4", Offset = "0x11C9AA4", VA = "0x11C9AA4")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x11C9DD0", Offset = "0x11C9DD0", VA = "0x11C9DD0")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x2000471")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x2000654")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF79C", Offset = "0xCBF79C")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x4001E41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x4001E42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x170003BE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023A4")]
				[Address(RVA = "0x11CAA3C", Offset = "0x11CAA3C", VA = "0x11CAA3C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003BF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023A6")]
				[Address(RVA = "0x11CAAA4", Offset = "0x11CAAA4", VA = "0x11CAAA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A1")]
			[Address(RVA = "0x11CA7A4", Offset = "0x11CA7A4", VA = "0x11CA7A4")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x60023A2")]
			[Address(RVA = "0x11CA880", Offset = "0x11CA880", VA = "0x11CA880", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023A3")]
			[Address(RVA = "0x11CA884", Offset = "0x11CA884", VA = "0x11CA884", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023A5")]
			[Address(RVA = "0x11CAA44", Offset = "0x11CAA44", VA = "0x11CAA44", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001620")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x4001621")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x11C9E98", Offset = "0x11C9E98", VA = "0x11C9E98")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x11C9F58", Offset = "0x11C9F58", VA = "0x11C9F58")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x11CA00C", Offset = "0x11CA00C", VA = "0x11CA00C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x11CA138", Offset = "0x11CA138", VA = "0x11CA138")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x11CA2A8", Offset = "0x11CA2A8", VA = "0x11CA2A8")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x11CA444", Offset = "0x11CA444", VA = "0x11CA444")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A0F")]
		[Address(RVA = "0x11CA6D0", Offset = "0x11CA6D0", VA = "0x11CA6D0")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x6001A10")]
		[Address(RVA = "0x11CA558", Offset = "0x11CA558", VA = "0x11CA558")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x11CA56C", Offset = "0x11CA56C", VA = "0x11CA56C")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x11CA728", Offset = "0x11CA728", VA = "0x11CA728")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD24EC", Offset = "0xCD24EC")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x11CA7D0", Offset = "0x11CA7D0", VA = "0x11CA7D0")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x2000472")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000271")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x6001A14")]
			[Address(RVA = "0x11CAAAC", Offset = "0x11CAAAC", VA = "0x11CAAAC")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001A15")]
		[Address(RVA = "0x11CAABC", Offset = "0x11CAABC", VA = "0x11CAABC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x11CAAC4", Offset = "0x11CAAC4", VA = "0x11CAAC4", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001A17")]
		[Address(RVA = "0x11CAF30", Offset = "0x11CAF30", VA = "0x11CAF30")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x2000473")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x4001634")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001635")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCC014", Offset = "0xCCC014")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000272")]
		public float Distance
		{
			[Token(Token = "0x6001A18")]
			[Address(RVA = "0x11CB040", Offset = "0x11CB040", VA = "0x11CB040")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2550", Offset = "0xCD2550")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A19")]
			[Address(RVA = "0x11CB048", Offset = "0x11CB048", VA = "0x11CB048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2560", Offset = "0xCD2560")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000273")]
		public float Scale
		{
			[Token(Token = "0x6001A1A")]
			[Address(RVA = "0x11CB050", Offset = "0x11CB050", VA = "0x11CB050")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x11CB058", Offset = "0x11CB058", VA = "0x11CB058")]
			set
			{
			}
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x11CAAC0", Offset = "0x11CAAC0", VA = "0x11CAAC0", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001A1D")]
		[Address(RVA = "0x11CB060", Offset = "0x11CB060", VA = "0x11CB060")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x11CAB0C", Offset = "0x11CAB0C", VA = "0x11CAB0C")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x11CADE4", Offset = "0x11CADE4", VA = "0x11CADE4")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x6001A20")]
		public abstract void UpdatePosition();

		[Token(Token = "0x6001A21")]
		[Address(RVA = "0x11CAFA0", Offset = "0x11CAFA0", VA = "0x11CAFA0")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x2000474")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x2000655")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF7AC", Offset = "0xCBF7AC")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4001E46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4001E47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4001E48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4001E49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4001E4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4001E4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4001E4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4001E4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4001E4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x170003C0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023AA")]
				[Address(RVA = "0x11CBA58", Offset = "0x11CBA58", VA = "0x11CBA58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023AC")]
				[Address(RVA = "0x11CBAC0", Offset = "0x11CBAC0", VA = "0x11CBAC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023A7")]
			[Address(RVA = "0x11CB65C", Offset = "0x11CB65C", VA = "0x11CB65C")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60023A8")]
			[Address(RVA = "0x11CB7F4", Offset = "0x11CB7F4", VA = "0x11CB7F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023A9")]
			[Address(RVA = "0x11CB7F8", Offset = "0x11CB7F8", VA = "0x11CB7F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023AB")]
			[Address(RVA = "0x11CBA60", Offset = "0x11CBA60", VA = "0x11CBA60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001A23")]
		[Address(RVA = "0x11CB230", Offset = "0x11CB230", VA = "0x11CB230")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x11CB290", Offset = "0x11CB290", VA = "0x11CB290")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x11CB39C", Offset = "0x11CB39C", VA = "0x11CB39C")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x11CB4F4", Offset = "0x11CB4F4", VA = "0x11CB4F4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A27")]
		[Address(RVA = "0x11CB3FC", Offset = "0x11CB3FC", VA = "0x11CB3FC")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x11CB5D0", Offset = "0x11CB5D0", VA = "0x11CB5D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD2570", Offset = "0xCD2570")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x6001A29")]
		[Address(RVA = "0x11CB688", Offset = "0x11CB688", VA = "0x11CB688")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x11CB734", Offset = "0x11CB734", VA = "0x11CB734")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x11CB794", Offset = "0x11CB794", VA = "0x11CB794")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x2000475")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x2000656")]
		private enum EngineSoundState
		{
			[Token(Token = "0x4001E50")]
			Start,
			[Token(Token = "0x4001E51")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x4001E52")]
			Stop
		}

		[Token(Token = "0x2000657")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF7BC", Offset = "0xCBF7BC")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4001E56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4001E57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4001E58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4001E59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001E5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4001E5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x170003C2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023B0")]
				[Address(RVA = "0x11CC418", Offset = "0x11CC418", VA = "0x11CC418", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023B2")]
				[Address(RVA = "0x11CC480", Offset = "0x11CC480", VA = "0x11CC480", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023AD")]
			[Address(RVA = "0x11CBD98", Offset = "0x11CBD98", VA = "0x11CBD98")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x60023AE")]
			[Address(RVA = "0x11CC1DC", Offset = "0x11CC1DC", VA = "0x11CC1DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023AF")]
			[Address(RVA = "0x11CC1E0", Offset = "0x11CC1E0", VA = "0x11CC1E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B1")]
			[Address(RVA = "0x11CC420", Offset = "0x11CC420", VA = "0x11CC420", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001648")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001649")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x400164A")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x400164B")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCC074", Offset = "0xCCC074")]
		protected float _initialSpeed;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x11CBAC8", Offset = "0x11CBAC8", VA = "0x11CBAC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A2D")]
		[Address(RVA = "0x11CBC38", Offset = "0x11CBC38", VA = "0x11CBC38")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x11CBC44", Offset = "0x11CBC44", VA = "0x11CBC44", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x6001A2F")]
		[Address(RVA = "0x11BCE18", Offset = "0x11BCE18", VA = "0x11BCE18")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x11CBBA8", Offset = "0x11CBBA8", VA = "0x11CBBA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD25D4", Offset = "0xCD25D4")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x11CBDC4", Offset = "0x11CBDC4", VA = "0x11CBDC4")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x11CBD34", Offset = "0x11CBD34", VA = "0x11CBD34")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x6001A33")]
		[Address(RVA = "0x11BCEAC", Offset = "0x11BCEAC", VA = "0x11BCEAC")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x11BCF9C", Offset = "0x11BCF9C", VA = "0x11BCF9C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x6001A35")]
		[Address(RVA = "0x11CBFF8", Offset = "0x11CBFF8", VA = "0x11CBFF8")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x11CC0E8", Offset = "0x11CC0E8", VA = "0x11CC0E8")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x11BD08C", Offset = "0x11BD08C", VA = "0x11BD08C")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x11BD14C", Offset = "0x11BD14C", VA = "0x11BD14C")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A39")]
		[Address(RVA = "0x11BD240", Offset = "0x11BD240", VA = "0x11BD240")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x11CC170", Offset = "0x11CC170", VA = "0x11CC170")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x2000476")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000274")]
		public float TrackLength
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x11CC488", Offset = "0x11CC488", VA = "0x11CC488")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001A3C")]
			[Address(RVA = "0x11CC490", Offset = "0x11CC490", VA = "0x11CC490")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0x11CC498", Offset = "0x11CC498", VA = "0x11CC498")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0x11CB0E0", Offset = "0x11CB0E0", VA = "0x11CB0E0")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x6001A3F")]
		[Address(RVA = "0x11CC49C", Offset = "0x11CC49C", VA = "0x11CC49C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0x11CC6A8", Offset = "0x11CC6A8", VA = "0x11CC6A8")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x6001A41")]
		[Address(RVA = "0x11CC7C4", Offset = "0x11CC7C4", VA = "0x11CC7C4")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x2000477")]
	public class Pose
	{
		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0x11C65EC", Offset = "0x11C65EC", VA = "0x11C65EC")]
		public Pose()
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0x11C6698", Offset = "0x11C6698", VA = "0x11C6698")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x2000478")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x2000658")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF7CC", Offset = "0xCBF7CC")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001E5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x4001E60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x4001E61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x170003C4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023B6")]
				[Address(RVA = "0x11CCE10", Offset = "0x11CCE10", VA = "0x11CCE10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023B8")]
				[Address(RVA = "0x11CCE78", Offset = "0x11CCE78", VA = "0x11CCE78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B3")]
			[Address(RVA = "0x11CCA84", Offset = "0x11CCA84", VA = "0x11CCA84")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x60023B4")]
			[Address(RVA = "0x11CCC0C", Offset = "0x11CCC0C", VA = "0x11CCC0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023B5")]
			[Address(RVA = "0x11CCC10", Offset = "0x11CCC10", VA = "0x11CCC10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023B7")]
			[Address(RVA = "0x11CCE18", Offset = "0x11CCE18", VA = "0x11CCE18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000659")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF7DC", Offset = "0xCBF7DC")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4001E65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4001E66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4001E67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x170003C6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023BC")]
				[Address(RVA = "0x11CCF58", Offset = "0x11CCF58", VA = "0x11CCF58", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023BE")]
				[Address(RVA = "0x11CCFC0", Offset = "0x11CCFC0", VA = "0x11CCFC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023B9")]
			[Address(RVA = "0x11CCB6C", Offset = "0x11CCB6C", VA = "0x11CCB6C")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x60023BA")]
			[Address(RVA = "0x11CCE80", Offset = "0x11CCE80", VA = "0x11CCE80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023BB")]
			[Address(RVA = "0x11CCE84", Offset = "0x11CCE84", VA = "0x11CCE84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x11CCF60", Offset = "0x11CCF60", VA = "0x11CCF60", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400166E")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCC25C", Offset = "0xCCC25C")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000275")]
		public bool IsMoving
		{
			[Token(Token = "0x6001A44")]
			[Address(RVA = "0x11CC7E0", Offset = "0x11CC7E0", VA = "0x11CC7E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2638", Offset = "0xCD2638")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0x11CC7E8", Offset = "0x11CC7E8", VA = "0x11CC7E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2648", Offset = "0xCD2648")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0x11CC7F4", Offset = "0x11CC7F4", VA = "0x11CC7F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A47")]
		[Address(RVA = "0x11CC830", Offset = "0x11CC830", VA = "0x11CC830")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0x11CC984", Offset = "0x11CC984", VA = "0x11CC984")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0x11CC9F8", Offset = "0x11CC9F8", VA = "0x11CC9F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD2658", Offset = "0xCD2658")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0x11CCAB0", Offset = "0x11CCAB0", VA = "0x11CCAB0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD26BC", Offset = "0xCD26BC")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x6001A4B")]
		[Address(RVA = "0x11CCB98", Offset = "0x11CCB98", VA = "0x11CCB98")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0x11CCC04", Offset = "0x11CCC04", VA = "0x11CCC04")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x2000479")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x6001A4D")]
		[Address(RVA = "0x11CCFC8", Offset = "0x11CCFC8", VA = "0x11CCFC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0x11CD040", Offset = "0x11CD040", VA = "0x11CD040")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0x11CD0F8", Offset = "0x11CD0F8", VA = "0x11CD0F8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0x11CD1F8", Offset = "0x11CD1F8", VA = "0x11CD1F8")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001A51")]
		[Address(RVA = "0x11CD278", Offset = "0x11CD278", VA = "0x11CD278")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0x11CD354", Offset = "0x11CD354", VA = "0x11CD354")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x200047A")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x400167F")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x4001680")]
		EUDT_OverlayQuad,
		[Token(Token = "0x4001681")]
		EUDT_None,
		[Token(Token = "0x4001682")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x200047B")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x200065A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF7EC", Offset = "0xCBF7EC")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x170003C8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023C2")]
				[Address(RVA = "0x11C59A8", Offset = "0x11C59A8", VA = "0x11C59A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003C9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023C4")]
				[Address(RVA = "0x11C5A10", Offset = "0x11C5A10", VA = "0x11C5A10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0x11C4FFC", Offset = "0x11C4FFC", VA = "0x11C4FFC")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x11C5740", Offset = "0x11C5740", VA = "0x11C5740", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023C1")]
			[Address(RVA = "0x11C5744", Offset = "0x11C5744", VA = "0x11C5744", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0x11C59B0", Offset = "0x11C59B0", VA = "0x11C59B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x4001684")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x4001685")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x4001686")]
		private const string noneID = "NoneID";

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCC29C", Offset = "0xCCC29C")]
		public GameObject mainCamera;

		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x400168B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x400168C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x400168D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCC2D4", Offset = "0xCCC2D4")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x6001A53")]
		[Address(RVA = "0x11C42C4", Offset = "0x11C42C4", VA = "0x11C42C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0x11C4B00", Offset = "0x11C4B00", VA = "0x11C4B00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0x11C4C40", Offset = "0x11C4C40", VA = "0x11C4C40")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0x11C4D74", Offset = "0x11C4D74", VA = "0x11C4D74")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x6001A57")]
		[Address(RVA = "0x11C4EA8", Offset = "0x11C4EA8", VA = "0x11C4EA8")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0x11C4C14", Offset = "0x11C4C14", VA = "0x11C4C14")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x6001A59")]
		[Address(RVA = "0x11C4F80", Offset = "0x11C4F80", VA = "0x11C4F80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD2720", Offset = "0xCD2720")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0x11C5028", Offset = "0x11C5028", VA = "0x11C5028")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0x11C4648", Offset = "0x11C4648", VA = "0x11C4648")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0x11C5150", Offset = "0x11C5150", VA = "0x11C5150")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x6001A5D")]
		[Address(RVA = "0x11C505C", Offset = "0x11C505C", VA = "0x11C505C")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0x11C54EC", Offset = "0x11C54EC", VA = "0x11C54EC")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x6001A5F")]
		[Address(RVA = "0x11C55C8", Offset = "0x11C55C8", VA = "0x11C55C8")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x11C5650", Offset = "0x11C5650", VA = "0x11C5650")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2784", Offset = "0xCD2784")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x11C56A0", Offset = "0x11C56A0", VA = "0x11C56A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2794", Offset = "0xCD2794")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x11C56F0", Offset = "0x11C56F0", VA = "0x11C56F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD27A4", Offset = "0xCD27A4")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x200047C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBDD30", Offset = "0xCBDD30")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200065B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF7FC", Offset = "0xCBF7FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x60023C6")]
			[Address(RVA = "0x1652968", Offset = "0x1652968", VA = "0x1652968")]
			public <>c()
			{
			}

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x1652970", Offset = "0x1652970", VA = "0x1652970")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400169B")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x400169C")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x400169D")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x400169E")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x400169F")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40016A0")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40016A1")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40016A2")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40016A3")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40016A4")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40016A5")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x6001A63")]
		[Address(RVA = "0x1651B80", Offset = "0x1651B80", VA = "0x1651B80")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x1651BE0", Offset = "0x1651BE0", VA = "0x1651BE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001A65")]
		[Address(RVA = "0x1652008", Offset = "0x1652008", VA = "0x1652008")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x16520D4", Offset = "0x16520D4", VA = "0x16520D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x16521E0", Offset = "0x16521E0", VA = "0x16521E0")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x1652518", Offset = "0x1652518", VA = "0x1652518")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x1652680", Offset = "0x1652680", VA = "0x1652680")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x16527CC", Offset = "0x16527CC", VA = "0x16527CC")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001A6B")]
		[Address(RVA = "0x165227C", Offset = "0x165227C", VA = "0x165227C")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x165231C", Offset = "0x165231C", VA = "0x165231C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001A6D")]
		[Address(RVA = "0x1651E5C", Offset = "0x1651E5C", VA = "0x1651E5C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0x16528E8", Offset = "0x16528E8", VA = "0x16528E8")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x200047D")]
	public enum HandPoseId
	{
		[Token(Token = "0x40016B8")]
		Default,
		[Token(Token = "0x40016B9")]
		Generic,
		[Token(Token = "0x40016BA")]
		PingPongBall,
		[Token(Token = "0x40016BB")]
		Controller
	}
	[Token(Token = "0x200047E")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x17000276")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001A6F")]
			[Address(RVA = "0x165299C", Offset = "0x165299C", VA = "0x165299C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000277")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001A70")]
			[Address(RVA = "0x16529A4", Offset = "0x16529A4", VA = "0x16529A4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000278")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001A71")]
			[Address(RVA = "0x16529AC", Offset = "0x16529AC", VA = "0x16529AC")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x16529B4", Offset = "0x16529B4", VA = "0x16529B4")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x200047F")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001A73")]
		[Address(RVA = "0x16529BC", Offset = "0x16529BC", VA = "0x16529BC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001A74")]
		[Address(RVA = "0x1652C30", Offset = "0x1652C30", VA = "0x1652C30")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001A75")]
		[Address(RVA = "0x1652C8C", Offset = "0x1652C8C", VA = "0x1652C8C")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001A76")]
		[Address(RVA = "0x1652CD0", Offset = "0x1652CD0", VA = "0x1652CD0")]
		public TouchController()
		{
		}
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x2000480")]
	public enum FaceType : uint
	{
		[Token(Token = "0x40016C3")]
		TRIANGLES,
		[Token(Token = "0x40016C4")]
		QUADS
	}
	[Token(Token = "0x2000481")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x40016C6")]
		ABSORPTION,
		[Token(Token = "0x40016C7")]
		TRANSMISSION,
		[Token(Token = "0x40016C8")]
		SCATTERING
	}
	[Token(Token = "0x2000482")]
	public struct MeshGroup
	{
		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Oculus.Avatar
{
	[Token(Token = "0x2000483")]
	public static class AvatarLogger
	{
		[Token(Token = "0x40016CD")]
		public const string LogAvatar = "[Avatars] - ";

		[Token(Token = "0x40016CE")]
		public const string Tab = "    ";

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x1653298", Offset = "0x1653298", VA = "0x1653298")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD27B4", Offset = "0xCD27B4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD27B4", Offset = "0xCD27B4")]
		public static void Log(string logMsg)
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x1653320", Offset = "0x1653320", VA = "0x1653320")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD2814", Offset = "0xCD2814")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD2814", Offset = "0xCD2814")]
		public static void Log(string logMsg, UnityEngine.Object context)
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x16533B8", Offset = "0x16533B8", VA = "0x16533B8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD2874", Offset = "0xCD2874")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD2874", Offset = "0xCD2874")]
		public static void LogWarning(string logMsg)
		{
		}

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x1653440", Offset = "0x1653440", VA = "0x1653440")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD28D4", Offset = "0xCD28D4")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD28D4", Offset = "0xCD28D4")]
		public static void LogError(string logMsg)
		{
		}

		[Token(Token = "0x6001A7B")]
		[Address(RVA = "0x16534C8", Offset = "0x16534C8", VA = "0x16534C8")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD2934", Offset = "0xCD2934")]
		[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0xCD2934", Offset = "0xCD2934")]
		public static void LogError(string logMsg, UnityEngine.Object context)
		{
		}
	}
	[Token(Token = "0x2000484")]
	public class CAPI
	{
		[Token(Token = "0x200065C")]
		public delegate void LoggingDelegate(IntPtr str);

		[Token(Token = "0x200065D")]
		public enum Result
		{
			[Token(Token = "0x4001E6E")]
			Success = 0,
			[Token(Token = "0x4001E6F")]
			Failure = -1000,
			[Token(Token = "0x4001E70")]
			Failure_InvalidParameter = -1001,
			[Token(Token = "0x4001E71")]
			Failure_NotInitialized = -1002,
			[Token(Token = "0x4001E72")]
			Failure_InvalidOperation = -1003,
			[Token(Token = "0x4001E73")]
			Failure_Unsupported = -1004,
			[Token(Token = "0x4001E74")]
			Failure_NotYetImplemented = -1005,
			[Token(Token = "0x4001E75")]
			Failure_OperationFailed = -1006,
			[Token(Token = "0x4001E76")]
			Failure_InsufficientSize = -1007
		}

		[Token(Token = "0x200065E")]
		private static class OVRP_1_30_0
		{
			[Token(Token = "0x4001E77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly Version version;

			[PreserveSig]
			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x11BB18C", Offset = "0x11BB18C", VA = "0x11BB18C")]
			public static extern Result ovrp_SendEvent2(string name, string param, string source);
		}

		[Token(Token = "0x40016CF")]
		private const string LibFile = "ovravatarloader";

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static IntPtr nativeVisemeData;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static IntPtr nativeGazeTargetsData;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static IntPtr nativeAvatarLightsData;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static IntPtr DebugLineCountData;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static float[] scratchBufferFloat;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject debugLineGo;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string SDKRuntimePrefix;

		[Token(Token = "0x40016D7")]
		private const string ovrPluginDLL = "OVRPlugin";

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static Version ovrPluginVersion;

		[PreserveSig]
		[Token(Token = "0x6001A7C")]
		[Address(RVA = "0x16535C8", Offset = "0x16535C8", VA = "0x16535C8")]
		public static extern void ovrAvatar_InitializeAndroidUnity(string appID);

		[Token(Token = "0x6001A7D")]
		[Address(RVA = "0x1653658", Offset = "0x1653658", VA = "0x1653658")]
		public static void Initialize()
		{
		}

		[Token(Token = "0x6001A7E")]
		[Address(RVA = "0x1653820", Offset = "0x1653820", VA = "0x1653820")]
		public static void Shutdown()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A7F")]
		[Address(RVA = "0x1653904", Offset = "0x1653904", VA = "0x1653904")]
		public static extern void ovrAvatar_Shutdown();

		[PreserveSig]
		[Token(Token = "0x6001A80")]
		[Address(RVA = "0x1653974", Offset = "0x1653974", VA = "0x1653974")]
		public static extern IntPtr ovrAvatarMessage_Pop();

		[PreserveSig]
		[Token(Token = "0x6001A81")]
		[Address(RVA = "0x16539E8", Offset = "0x16539E8", VA = "0x16539E8")]
		public static extern ovrAvatarMessageType ovrAvatarMessage_GetType(IntPtr msg);

		[Token(Token = "0x6001A82")]
		[Address(RVA = "0x1653A68", Offset = "0x1653A68", VA = "0x1653A68")]
		public static ovrAvatarMessage_AvatarSpecification ovrAvatarMessage_GetAvatarSpecification(IntPtr msg)
		{
			return default(ovrAvatarMessage_AvatarSpecification);
		}

		[PreserveSig]
		[Token(Token = "0x6001A83")]
		[Address(RVA = "0x1653B80", Offset = "0x1653B80", VA = "0x1653B80")]
		private static extern IntPtr ovrAvatarMessage_GetAvatarSpecification_Native(IntPtr msg);

		[Token(Token = "0x6001A84")]
		[Address(RVA = "0x1653C00", Offset = "0x1653C00", VA = "0x1653C00")]
		public static ovrAvatarMessage_AssetLoaded ovrAvatarMessage_GetAssetLoaded(IntPtr msg)
		{
			return default(ovrAvatarMessage_AssetLoaded);
		}

		[PreserveSig]
		[Token(Token = "0x6001A85")]
		[Address(RVA = "0x1653D18", Offset = "0x1653D18", VA = "0x1653D18")]
		private static extern IntPtr ovrAvatarMessage_GetAssetLoaded_Native(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001A86")]
		[Address(RVA = "0x1653D98", Offset = "0x1653D98", VA = "0x1653D98")]
		public static extern void ovrAvatarMessage_Free(IntPtr msg);

		[PreserveSig]
		[Token(Token = "0x6001A87")]
		[Address(RVA = "0x1653E18", Offset = "0x1653E18", VA = "0x1653E18")]
		public static extern IntPtr ovrAvatarSpecificationRequest_Create(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001A88")]
		[Address(RVA = "0x1653E98", Offset = "0x1653E98", VA = "0x1653E98")]
		public static extern void ovrAvatarSpecificationRequest_Destroy(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001A89")]
		[Address(RVA = "0x1653F18", Offset = "0x1653F18", VA = "0x1653F18")]
		public static extern void ovrAvatarSpecificationRequest_SetCombineMeshes(IntPtr specificationRequest, bool useCombinedMesh);

		[PreserveSig]
		[Token(Token = "0x6001A8A")]
		[Address(RVA = "0x1653FA8", Offset = "0x1653FA8", VA = "0x1653FA8")]
		public static extern void ovrAvatarSpecificationRequest_SetLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001A8B")]
		[Address(RVA = "0x1654038", Offset = "0x1654038", VA = "0x1654038")]
		public static extern void ovrAvatarSpecificationRequest_SetLevelOfDetail(IntPtr specificationRequest, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001A8C")]
		[Address(RVA = "0x16540C8", Offset = "0x16540C8", VA = "0x16540C8")]
		public static extern void ovrAvatar_RequestAvatarSpecification(ulong userID);

		[PreserveSig]
		[Token(Token = "0x6001A8D")]
		[Address(RVA = "0x1654148", Offset = "0x1654148", VA = "0x1654148")]
		public static extern void ovrAvatar_RequestAvatarSpecificationFromSpecRequest(IntPtr specificationRequest);

		[PreserveSig]
		[Token(Token = "0x6001A8E")]
		[Address(RVA = "0x16541C8", Offset = "0x16541C8", VA = "0x16541C8")]
		public static extern void ovrAvatarSpecificationRequest_SetFallbackLookAndFeelVersion(IntPtr specificationRequest, ovrAvatarLookAndFeelVersion version);

		[PreserveSig]
		[Token(Token = "0x6001A8F")]
		[Address(RVA = "0x1654258", Offset = "0x1654258", VA = "0x1654258")]
		public static extern void ovrAvatarSpecificationRequest_SetExpressiveFlag(IntPtr specificationRequest, bool enable);

		[PreserveSig]
		[Token(Token = "0x6001A90")]
		[Address(RVA = "0x16542E8", Offset = "0x16542E8", VA = "0x16542E8")]
		public static extern IntPtr ovrAvatar_Create(IntPtr avatarSpecification, ovrAvatarCapabilities capabilities);

		[PreserveSig]
		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x1654378", Offset = "0x1654378", VA = "0x1654378")]
		public static extern void ovrAvatar_Destroy(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x16543F8", Offset = "0x16543F8", VA = "0x16543F8")]
		public static extern void ovrAvatarPose_UpdateBody(IntPtr avatar, ovrAvatarTransform headPose);

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x1654498", Offset = "0x1654498", VA = "0x1654498")]
		public static void ovrAvatarPose_UpdateVoiceVisualization(IntPtr avatar, float[] pcmData)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x1654518", Offset = "0x1654518", VA = "0x1654518")]
		private static extern void ovrAvatarPose_UpdateVoiceVisualization_Native(IntPtr avatar, uint pcmDataSize, [In] float[] pcmData);

		[PreserveSig]
		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x16545B8", Offset = "0x16545B8", VA = "0x16545B8")]
		public static extern void ovrAvatarPose_UpdateHands(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight);

		[PreserveSig]
		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x1654678", Offset = "0x1654678", VA = "0x1654678")]
		public static extern void ovrAvatarPose_UpdateHandsWithType(IntPtr avatar, ovrAvatarHandInputState inputStateLeft, ovrAvatarHandInputState inputStateRight, ovrAvatarControllerType type);

		[PreserveSig]
		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x1654748", Offset = "0x1654748", VA = "0x1654748")]
		public static extern void ovrAvatarPose_Finalize(IntPtr avatar, float elapsedSeconds);

		[PreserveSig]
		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x16547D8", Offset = "0x16547D8", VA = "0x16547D8")]
		public static extern void ovrAvatar_SetLeftControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x1654868", Offset = "0x1654868", VA = "0x1654868")]
		public static extern void ovrAvatar_SetRightControllerVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x16548F8", Offset = "0x16548F8", VA = "0x16548F8")]
		public static extern void ovrAvatar_SetLeftHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x1654988", Offset = "0x1654988", VA = "0x1654988")]
		public static extern void ovrAvatar_SetRightHandVisibility(IntPtr avatar, bool show);

		[PreserveSig]
		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x1654A18", Offset = "0x1654A18", VA = "0x1654A18")]
		public static extern uint ovrAvatarComponent_Count(IntPtr avatar);

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x1654A98", Offset = "0x1654A98", VA = "0x1654A98")]
		public static void ovrAvatarComponent_Get(IntPtr avatar, uint index, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x1654BB8", Offset = "0x1654BB8", VA = "0x1654BB8")]
		public static void ovrAvatarComponent_Get(IntPtr componentPtr, bool includeName, ref ovrAvatarComponent component)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001A9F")]
		[Address(RVA = "0x1654B28", Offset = "0x1654B28", VA = "0x1654B28")]
		public static extern IntPtr ovrAvatarComponent_Get_Native(IntPtr avatar, uint index);

		[Token(Token = "0x6001AA0")]
		[Address(RVA = "0x1654DB8", Offset = "0x1654DB8", VA = "0x1654DB8")]
		public static bool ovrAvatarPose_GetBaseComponent(IntPtr avatar, ref ovrAvatarBaseComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x1654EF0", Offset = "0x1654EF0", VA = "0x1654EF0")]
		private static extern IntPtr ovrAvatarPose_GetBaseComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AA2")]
		public static IntPtr MarshalRenderComponent<T>(IntPtr ptr) where T : struct
		{
			return default(IntPtr);
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x1654F70", Offset = "0x1654F70", VA = "0x1654F70")]
		public static bool ovrAvatarPose_GetBodyComponent(IntPtr avatar, ref ovrAvatarBodyComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x16551E0", Offset = "0x16551E0", VA = "0x16551E0")]
		private static extern IntPtr ovrAvatarPose_GetBodyComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x1655260", Offset = "0x1655260", VA = "0x1655260")]
		public static bool ovrAvatarPose_GetLeftControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x1655398", Offset = "0x1655398", VA = "0x1655398")]
		private static extern IntPtr ovrAvatarPose_GetLeftControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x1655418", Offset = "0x1655418", VA = "0x1655418")]
		public static bool ovrAvatarPose_GetRightControllerComponent(IntPtr avatar, ref ovrAvatarControllerComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x1655550", Offset = "0x1655550", VA = "0x1655550")]
		private static extern IntPtr ovrAvatarPose_GetRightControllerComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AA9")]
		[Address(RVA = "0x16555D0", Offset = "0x16555D0", VA = "0x16555D0")]
		public static bool ovrAvatarPose_GetLeftHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AAA")]
		[Address(RVA = "0x1655708", Offset = "0x1655708", VA = "0x1655708")]
		private static extern IntPtr ovrAvatarPose_GetLeftHandComponent_Native(IntPtr avatar);

		[Token(Token = "0x6001AAB")]
		[Address(RVA = "0x1655788", Offset = "0x1655788", VA = "0x1655788")]
		public static bool ovrAvatarPose_GetRightHandComponent(IntPtr avatar, ref ovrAvatarHandComponent component)
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001AAC")]
		[Address(RVA = "0x16558C0", Offset = "0x16558C0", VA = "0x16558C0")]
		private static extern IntPtr ovrAvatarPose_GetRightHandComponent_Native(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AAD")]
		[Address(RVA = "0x1655940", Offset = "0x1655940", VA = "0x1655940")]
		public static extern void ovrAvatarAsset_BeginLoading(ulong assetID);

		[PreserveSig]
		[Token(Token = "0x6001AAE")]
		[Address(RVA = "0x16559C0", Offset = "0x16559C0", VA = "0x16559C0")]
		public static extern bool ovrAvatarAsset_BeginLoadingLOD(ulong assetId, ovrAvatarAssetLevelOfDetail lod);

		[PreserveSig]
		[Token(Token = "0x6001AAF")]
		[Address(RVA = "0x1655A58", Offset = "0x1655A58", VA = "0x1655A58")]
		public static extern ovrAvatarAssetType ovrAvatarAsset_GetType(IntPtr assetHandle);

		[Token(Token = "0x6001AB0")]
		[Address(RVA = "0x1655AD8", Offset = "0x1655AD8", VA = "0x1655AD8")]
		public static ovrAvatarMeshAssetData ovrAvatarAsset_GetMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetData);
		}

		[Token(Token = "0x6001AB1")]
		[Address(RVA = "0x1655C84", Offset = "0x1655C84", VA = "0x1655C84")]
		public static ovrAvatarMeshAssetDataV2 ovrAvatarAsset_GetCombinedMeshData(IntPtr assetPtr)
		{
			return default(ovrAvatarMeshAssetDataV2);
		}

		[PreserveSig]
		[Token(Token = "0x6001AB2")]
		[Address(RVA = "0x1655DB0", Offset = "0x1655DB0", VA = "0x1655DB0")]
		private static extern IntPtr ovrAvatarAsset_GetCombinedMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x1655C04", Offset = "0x1655C04", VA = "0x1655C04")]
		private static extern IntPtr ovrAvatarAsset_GetMeshData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x1655E30", Offset = "0x1655E30", VA = "0x1655E30")]
		public static extern uint ovrAvatarAsset_GetMeshBlendShapeCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x1655EB0", Offset = "0x1655EB0", VA = "0x1655EB0")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeName(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x1655F40", Offset = "0x1655F40", VA = "0x1655F40")]
		public static extern uint ovrAvatarAsset_GetSubmeshCount(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AB7")]
		[Address(RVA = "0x1655FC0", Offset = "0x1655FC0", VA = "0x1655FC0")]
		public static extern uint ovrAvatarAsset_GetSubmeshLastIndex(IntPtr assetPtr, uint index);

		[PreserveSig]
		[Token(Token = "0x6001AB8")]
		[Address(RVA = "0x1656050", Offset = "0x1656050", VA = "0x1656050")]
		public static extern IntPtr ovrAvatarAsset_GetMeshBlendShapeVertices(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AB9")]
		[Address(RVA = "0x16560D0", Offset = "0x16560D0", VA = "0x16560D0")]
		public static extern IntPtr ovrAvatarAsset_GetAvatar(IntPtr assetHandle);

		[Token(Token = "0x6001ABA")]
		[Address(RVA = "0x1656150", Offset = "0x1656150", VA = "0x1656150")]
		public static ulong[] ovrAvatarAsset_GetCombinedMeshIDs(IntPtr assetHandle)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x165638C", Offset = "0x165638C", VA = "0x165638C")]
		public static extern IntPtr ovrAvatarAsset_GetCombinedMeshIDs_Native(IntPtr assetHandle, IntPtr count);

		[Token(Token = "0x6001ABC")]
		[Address(RVA = "0x165641C", Offset = "0x165641C", VA = "0x165641C")]
		public static void ovrAvatar_GetCombinedMeshAlphaData(IntPtr avatar, ref ulong textureID, ref Vector4 offset)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001ABD")]
		[Address(RVA = "0x1656608", Offset = "0x1656608", VA = "0x1656608")]
		public static extern IntPtr ovrAvatar_GetCombinedMeshAlphaData_Native(IntPtr avatar, IntPtr textureIDPtr, IntPtr offsetPtr);

		[Token(Token = "0x6001ABE")]
		[Address(RVA = "0x16566A0", Offset = "0x16566A0", VA = "0x16566A0")]
		public static ovrAvatarTextureAssetData ovrAvatarAsset_GetTextureData(IntPtr assetPtr)
		{
			return default(ovrAvatarTextureAssetData);
		}

		[PreserveSig]
		[Token(Token = "0x6001ABF")]
		[Address(RVA = "0x16567C4", Offset = "0x16567C4", VA = "0x16567C4")]
		private static extern IntPtr ovrAvatarAsset_GetTextureData_Native(IntPtr assetPtr);

		[PreserveSig]
		[Token(Token = "0x6001AC0")]
		[Address(RVA = "0x1656844", Offset = "0x1656844", VA = "0x1656844")]
		private static extern IntPtr ovrAvatarAsset_GetMaterialData_Native(IntPtr assetPtr);

		[Token(Token = "0x6001AC1")]
		[Address(RVA = "0x16568C4", Offset = "0x16568C4", VA = "0x16568C4")]
		public static ovrAvatarMaterialState ovrAvatarAsset_GetMaterialState(IntPtr assetPtr)
		{
			return default(ovrAvatarMaterialState);
		}

		[PreserveSig]
		[Token(Token = "0x6001AC2")]
		[Address(RVA = "0x16569EC", Offset = "0x16569EC", VA = "0x16569EC")]
		public static extern ovrAvatarRenderPartType ovrAvatarRenderPart_GetType(IntPtr renderPart);

		[Token(Token = "0x6001AC3")]
		[Address(RVA = "0x1656A6C", Offset = "0x1656A6C", VA = "0x1656A6C")]
		public static ovrAvatarRenderPart_SkinnedMeshRender ovrAvatarRenderPart_GetSkinnedMeshRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRender);
		}

		[PreserveSig]
		[Token(Token = "0x6001AC4")]
		[Address(RVA = "0x1656B94", Offset = "0x1656B94", VA = "0x1656B94")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AC5")]
		[Address(RVA = "0x1656C14", Offset = "0x1656C14", VA = "0x1656C14")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AC6")]
		[Address(RVA = "0x1656CA4", Offset = "0x1656CA4", VA = "0x1656CA4")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AC7")]
		[Address(RVA = "0x1656D34", Offset = "0x1656D34", VA = "0x1656D34")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetTransform(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AC8")]
		[Address(RVA = "0x1656DC4", Offset = "0x1656DC4", VA = "0x1656DC4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRender_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AC9")]
		[Address(RVA = "0x1656E44", Offset = "0x1656E44", VA = "0x1656E44")]
		public static extern bool ovrAvatarSkinnedMeshRender_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ACA")]
		[Address(RVA = "0x1656ECC", Offset = "0x1656ECC", VA = "0x1656ECC")]
		public static extern bool ovrAvatarSkinnedMeshRenderPBSV2_MaterialStateChanged(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ACB")]
		[Address(RVA = "0x1656F54", Offset = "0x1656F54", VA = "0x1656F54")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBS_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x1656FD4", Offset = "0x1656FD4", VA = "0x1656FD4")]
		public static extern ovrAvatarVisibilityFlags ovrAvatarSkinnedMeshRenderPBSV2_GetVisibilityMask(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x1657054", Offset = "0x1657054", VA = "0x1657054")]
		public static extern ovrAvatarMaterialState ovrAvatarSkinnedMeshRender_GetMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x1657108", Offset = "0x1657108", VA = "0x1657108")]
		public static extern ovrAvatarPBSMaterialState ovrAvatarSkinnedMeshRenderPBSV2_GetPBSMaterialState(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x1657198", Offset = "0x1657198", VA = "0x1657198")]
		public static extern ovrAvatarExpressiveParameters ovrAvatar_GetExpressiveParameters(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x1657228", Offset = "0x1657228", VA = "0x1657228")]
		public static extern ulong ovrAvatarSkinnedMeshRender_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x16572A8", Offset = "0x16572A8", VA = "0x16572A8")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x1657328", Offset = "0x1657328", VA = "0x1657328")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBSV2_GetDirtyJoints(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x16573A8", Offset = "0x16573A8", VA = "0x16573A8")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRender_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x1657440", Offset = "0x1657440", VA = "0x1657440")]
		public static extern void ovrAvatar_SetActionUnitOnsetSpeed(IntPtr avatar, float onsetSpeed);

		[PreserveSig]
		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x16574D0", Offset = "0x16574D0", VA = "0x16574D0")]
		public static extern void ovrAvatar_SetActionUnitFalloffSpeed(IntPtr avatar, float falloffSpeed);

		[PreserveSig]
		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x1657560", Offset = "0x1657560", VA = "0x1657560")]
		public static extern void ovrAvatar_SetVisemeMultiplier(IntPtr avatar, float visemeMultiplier);

		[PreserveSig]
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x16575F0", Offset = "0x16575F0", VA = "0x16575F0")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBS_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x1657688", Offset = "0x1657688", VA = "0x1657688")]
		public static extern ovrAvatarTransform ovrAvatarSkinnedMeshRenderPBSV2_GetJointTransform(IntPtr renderPart, uint jointIndex);

		[PreserveSig]
		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x1657720", Offset = "0x1657720", VA = "0x1657720")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetAlbedoTextureAssetID(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x16577A0", Offset = "0x16577A0", VA = "0x16577A0")]
		public static extern ulong ovrAvatarSkinnedMeshRenderPBS_GetSurfaceTextureAssetID(IntPtr renderPart);

		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x1657820", Offset = "0x1657820", VA = "0x1657820")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS ovrAvatarRenderPart_GetSkinnedMeshRenderPBS(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x1657948", Offset = "0x1657948", VA = "0x1657948")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBS_Native(IntPtr renderPart);

		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x16579C8", Offset = "0x16579C8", VA = "0x16579C8")]
		public static ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2 ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_SkinnedMeshRenderPBS_V2);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x1657AF0", Offset = "0x1657AF0", VA = "0x1657AF0")]
		private static extern IntPtr ovrAvatarRenderPart_GetSkinnedMeshRenderPBSV2_Native(IntPtr renderPart);

		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x1657B70", Offset = "0x1657B70", VA = "0x1657B70")]
		public static void ovrAvatarSkinnedMeshRender_GetBlendShapeParams(IntPtr renderPart, ref ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x1657C98", Offset = "0x1657C98", VA = "0x1657C98")]
		private static extern IntPtr ovrAvatarSkinnedMeshRender_GetBlendShapeParams_Native(IntPtr renderPart);

		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x1657D18", Offset = "0x1657D18", VA = "0x1657D18")]
		public static ovrAvatarRenderPart_ProjectorRender ovrAvatarRenderPart_GetProjectorRender(IntPtr renderPart)
		{
			return default(ovrAvatarRenderPart_ProjectorRender);
		}

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x1657EC0", Offset = "0x1657EC0", VA = "0x1657EC0")]
		public static ovrAvatarPBSMaterialState[] ovrAvatar_GetBodyPBSMaterialStates(IntPtr renderPart)
		{
			return null;
		}

		[PreserveSig]
		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x165815C", Offset = "0x165815C", VA = "0x165815C")]
		private static extern IntPtr ovrAvatar_GetBodyPBSMaterialStates_Native(IntPtr avatar, IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x1657E40", Offset = "0x1657E40", VA = "0x1657E40")]
		private static extern IntPtr ovrAvatarRenderPart_GetProjectorRender_Native(IntPtr renderPart);

		[PreserveSig]
		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x16581EC", Offset = "0x16581EC", VA = "0x16581EC")]
		public static extern uint ovrAvatar_GetReferencedAssetCount(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x165826C", Offset = "0x165826C", VA = "0x165826C")]
		public static extern ulong ovrAvatar_GetReferencedAsset(IntPtr avatar, uint index);

		[PreserveSig]
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x16582FC", Offset = "0x16582FC", VA = "0x16582FC")]
		public static extern void ovrAvatar_SetLeftHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x165838C", Offset = "0x165838C", VA = "0x165838C")]
		public static extern void ovrAvatar_SetRightHandGesture(IntPtr avatar, ovrAvatarHandGesture gesture);

		[PreserveSig]
		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x165841C", Offset = "0x165841C", VA = "0x165841C")]
		public static extern void ovrAvatar_SetLeftHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x16584BC", Offset = "0x16584BC", VA = "0x16584BC")]
		public static extern void ovrAvatar_SetRightHandCustomGesture(IntPtr avatar, uint jointCount, [In] ovrAvatarTransform[] customJointTransforms);

		[PreserveSig]
		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x165855C", Offset = "0x165855C", VA = "0x165855C")]
		public static extern void ovrAvatar_UpdatePoseFromPacket(IntPtr avatar, IntPtr packet, float secondsFromStart);

		[PreserveSig]
		[Token(Token = "0x6001AEC")]
		[Address(RVA = "0x16585FC", Offset = "0x16585FC", VA = "0x16585FC")]
		public static extern void ovrAvatarPacket_BeginRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x165867C", Offset = "0x165867C", VA = "0x165867C")]
		public static extern IntPtr ovrAvatarPacket_EndRecording(IntPtr avatar);

		[PreserveSig]
		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x16586FC", Offset = "0x16586FC", VA = "0x16586FC")]
		public static extern uint ovrAvatarPacket_GetSize(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x165877C", Offset = "0x165877C", VA = "0x165877C")]
		public static extern float ovrAvatarPacket_GetDurationSeconds(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x16587FC", Offset = "0x16587FC", VA = "0x16587FC")]
		public static extern void ovrAvatarPacket_Free(IntPtr packet);

		[PreserveSig]
		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x165887C", Offset = "0x165887C", VA = "0x165887C")]
		public static extern bool ovrAvatarPacket_Write(IntPtr packet, uint bufferSize, [Out] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x16589A4", Offset = "0x16589A4", VA = "0x16589A4")]
		public static extern IntPtr ovrAvatarPacket_Read(uint bufferSize, [In] byte[] buffer);

		[PreserveSig]
		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x1658A3C", Offset = "0x1658A3C", VA = "0x1658A3C")]
		private static extern void ovrAvatar_SetInternalForceASTCTextures(bool value);

		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x1658ABC", Offset = "0x1658ABC", VA = "0x1658ABC")]
		public static void ovrAvatar_SetForceASTCTextures(bool value)
		{
		}

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x1658B20", Offset = "0x1658B20", VA = "0x1658B20")]
		public static void ovrAvatar_OverrideExpressiveLogic(IntPtr avatar, ovrAvatarBlendShapeParams blendParams)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x1658C3C", Offset = "0x1658C3C", VA = "0x1658C3C")]
		private static extern void ovrAvatar_OverrideExpressiveLogic_Native(IntPtr avatar, IntPtr state);

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x1658CCC", Offset = "0x1658CCC", VA = "0x1658CCC")]
		public static void ovrAvatar_SetVisemes(IntPtr avatar, ovrAvatarVisemes visemes)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x1658E10", Offset = "0x1658E10", VA = "0x1658E10")]
		private static extern void ovrAvatar_SetVisemes_Native(IntPtr avatar, IntPtr visemes);

		[PreserveSig]
		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x1658EA0", Offset = "0x1658EA0", VA = "0x1658EA0")]
		public static extern void ovrAvatar_UpdateWorldTransform(IntPtr avatar, ovrAvatarTransform transform);

		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x1658F40", Offset = "0x1658F40", VA = "0x1658F40")]
		public static void ovrAvatar_UpdateGazeTargets(ovrAvatarGazeTargets targets)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x16592D8", Offset = "0x16592D8", VA = "0x16592D8")]
		private static extern void ovrAvatar_UpdateGazeTargets_Native(IntPtr targets);

		[PreserveSig]
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x1659358", Offset = "0x1659358", VA = "0x1659358")]
		public static extern void ovrAvatar_RemoveGazeTargets(uint targetCount, uint[] ids);

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x16593F0", Offset = "0x16593F0", VA = "0x16593F0")]
		public static void ovrAvatar_UpdateLights(ovrAvatarLights lights)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x1659BB8", Offset = "0x1659BB8", VA = "0x1659BB8")]
		private static extern void ovrAvatar_UpdateLights_Native(IntPtr lights);

		[PreserveSig]
		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x1659C38", Offset = "0x1659C38", VA = "0x1659C38")]
		public static extern void ovrAvatar_RemoveLights(uint lightCount, uint[] ids);

		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x1653560", Offset = "0x1653560", VA = "0x1653560")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0xCD2994", Offset = "0xCD2994")]
		public static void LoggingCallback(IntPtr str)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x1659CD0", Offset = "0x1659CD0", VA = "0x1659CD0")]
		public static extern void ovrAvatar_RegisterLoggingCallback(LoggingDelegate callback);

		[PreserveSig]
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x1659D54", Offset = "0x1659D54", VA = "0x1659D54")]
		public static extern void ovrAvatar_SetLoggingLevel(ovrAvatarLogLevel level);

		[PreserveSig]
		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x1659DD4", Offset = "0x1659DD4", VA = "0x1659DD4")]
		public static extern IntPtr ovrAvatar_GetDebugTransforms_Native(IntPtr count);

		[PreserveSig]
		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x1659E54", Offset = "0x1659E54", VA = "0x1659E54")]
		public static extern IntPtr ovrAvatar_GetDebugLines_Native(IntPtr count);

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x1659ED4", Offset = "0x1659ED4", VA = "0x1659ED4")]
		public static void ovrAvatar_DrawDebugLines()
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x165A8B4", Offset = "0x165A8B4", VA = "0x165A8B4")]
		public static extern void ovrAvatar_SetDebugDrawContext(uint context);

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x165A934", Offset = "0x165A934", VA = "0x165A934")]
		public static bool SendEvent(string name, string param = "", string source = "")
		{
			return default(bool);
		}

		[PreserveSig]
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x165AD3C", Offset = "0x165AD3C", VA = "0x165AD3C")]
		private static extern IntPtr _ovrp_GetVersion();

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x165ACAC", Offset = "0x165ACAC", VA = "0x165ACAC")]
		public static string ovrp_GetVersion()
		{
			return null;
		}

		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x165ADB0", Offset = "0x165ADB0", VA = "0x165ADB0")]
		public CAPI()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x2000485")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0xCCC38C", Offset = "0xCCC38C")]
		public SoundFXRef testSound1;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x1648980", Offset = "0x1648980", VA = "0x1648980")]
		private void Start()
		{
		}

		[Token(Token = "0x6001B0D")]
		[Address(RVA = "0x1648984", Offset = "0x1648984", VA = "0x1648984")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x1648A44", Offset = "0x1648A44", VA = "0x1648A44")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x2000486")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC3D8", Offset = "0xCCC3D8")]
		public bool autoRetrigger;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xCCC410", Offset = "0xCCC410")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC434", Offset = "0xCCC434")]
		public Transform[] playPositions;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x163F61C", Offset = "0x163F61C", VA = "0x163F61C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x163F7CC", Offset = "0x163F7CC", VA = "0x163F7CC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x163F9A8", Offset = "0x163F9A8", VA = "0x163F9A8")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x163F82C", Offset = "0x163F82C", VA = "0x163F82C")]
		public void Play()
		{
		}

		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x163FAE8", Offset = "0x163FAE8", VA = "0x163FAE8")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x163FC5C", Offset = "0x163FC5C", VA = "0x163FC5C")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x2000487")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40016E6")]
		Default,
		[Token(Token = "0x40016E7")]
		Preload,
		[Token(Token = "0x40016E8")]
		ManualPreload
	}
	[Token(Token = "0x2000488")]
	public enum Fade
	{
		[Token(Token = "0x40016EA")]
		In,
		[Token(Token = "0x40016EB")]
		Out
	}
	[Serializable]
	[Token(Token = "0x2000489")]
	public class SoundGroup
	{
		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCC46C", Offset = "0xCCC46C")]
		public int maxPlayingSounds;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x1648810", Offset = "0x1648810", VA = "0x1648810")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x16488C4", Offset = "0x16488C4", VA = "0x16488C4")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x16471D0", Offset = "0x16471D0", VA = "0x16471D0")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x1647310", Offset = "0x1647310", VA = "0x1647310")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x1647E2C", Offset = "0x1647E2C", VA = "0x1647E2C")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200048A")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x200065F")]
		public enum Fade
		{
			[Token(Token = "0x4001E79")]
			In,
			[Token(Token = "0x4001E7A")]
			Out
		}

		[Token(Token = "0x2000660")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF80C", Offset = "0xCBF80C")]
		private sealed class <>c__DisplayClass75_0
		{
			[Token(Token = "0x4001E7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x164400C", Offset = "0x164400C", VA = "0x164400C")]
			public <>c__DisplayClass75_0()
			{
			}

			[Token(Token = "0x60023CF")]
			[Address(RVA = "0x1646C54", Offset = "0x1646C54", VA = "0x1646C54")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000661")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF81C", Offset = "0xCBF81C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001E7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001E7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__75_1;

			[Token(Token = "0x60023D1")]
			[Address(RVA = "0x1646BBC", Offset = "0x1646BBC", VA = "0x1646BBC")]
			public <>c()
			{
			}

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x1646BC4", Offset = "0x1646BC4", VA = "0x1646BC4")]
			internal bool <FindFreeEmitter>b__75_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC498", Offset = "0xCCC498")]
		public bool makePersistent;

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC4D0", Offset = "0xCCC4D0")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC508", Offset = "0xCCC508")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC540", Offset = "0xCCC540")]
		public AudioMixer audioMixer;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC578", Offset = "0xCCC578")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC5B0", Offset = "0xCCC5B0")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC5E8", Offset = "0xCCC5E8")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC620", Offset = "0xCCC620")]
		public bool verboseLogging;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC658", Offset = "0xCCC658")]
		public int maxSoundEmitters;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC690", Offset = "0xCCC690")]
		public float volumeSoundFX;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC6C8", Offset = "0xCCC6C8")]
		public float soundFxFadeSecs;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x17000279")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x6001B1A")]
			[Address(RVA = "0x163FD34", Offset = "0x163FD34", VA = "0x163FD34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700027A")]
		public static AudioManager Instance
		{
			[Token(Token = "0x6001B1B")]
			[Address(RVA = "0x163FE14", Offset = "0x163FE14", VA = "0x163FE14")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027B")]
		public static float NearFallOff
		{
			[Token(Token = "0x6001B1C")]
			[Address(RVA = "0x163FE7C", Offset = "0x163FE7C", VA = "0x163FE7C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027C")]
		public static float FarFallOff
		{
			[Token(Token = "0x6001B1D")]
			[Address(RVA = "0x163FEF0", Offset = "0x163FEF0", VA = "0x163FEF0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700027D")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x6001B1E")]
			[Address(RVA = "0x163FF64", Offset = "0x163FF64", VA = "0x163FF64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027E")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001B1F")]
			[Address(RVA = "0x163FFD8", Offset = "0x163FFD8", VA = "0x163FFD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700027F")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001B20")]
			[Address(RVA = "0x164004C", Offset = "0x164004C", VA = "0x164004C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000280")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x6001B2B")]
			[Address(RVA = "0x1641EF0", Offset = "0x1641EF0", VA = "0x1641EF0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x16400C0", Offset = "0x16400C0", VA = "0x16400C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x16402F4", Offset = "0x16402F4", VA = "0x16402F4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x16400C4", Offset = "0x16400C4", VA = "0x16400C4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x1641014", Offset = "0x1641014", VA = "0x1641014")]
		private void Update()
		{
		}

		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x164044C", Offset = "0x164044C", VA = "0x164044C")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x164168C", Offset = "0x164168C", VA = "0x164168C")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x164180C", Offset = "0x164180C", VA = "0x164180C")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x16419A8", Offset = "0x16419A8", VA = "0x16419A8")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x1641AA8", Offset = "0x1641AA8", VA = "0x1641AA8")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x1641B38", Offset = "0x1641B38", VA = "0x1641B38")]
		public static string[] GetSoundFXNames(string currentValue, out int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x1640900", Offset = "0x1640900", VA = "0x1640900")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x1641018", Offset = "0x1641018", VA = "0x1641018")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x16421A4", Offset = "0x16421A4", VA = "0x16421A4")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x16422A8", Offset = "0x16422A8", VA = "0x16422A8")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x16423B0", Offset = "0x16423B0", VA = "0x16423B0")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001B31")]
		[Address(RVA = "0x164206C", Offset = "0x164206C", VA = "0x164206C")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x1642524", Offset = "0x1642524", VA = "0x1642524")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0x1642678", Offset = "0x1642678", VA = "0x1642678")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0x1642828", Offset = "0x1642828", VA = "0x1642828")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0x163FA38", Offset = "0x163FA38", VA = "0x163FA38")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001B36")]
		[Address(RVA = "0x163FBAC", Offset = "0x163FBAC", VA = "0x163FBAC")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0x16429D4", Offset = "0x16429D4", VA = "0x16429D4")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x6001B38")]
		[Address(RVA = "0x1642AA0", Offset = "0x1642AA0", VA = "0x1642AA0")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x1642B34", Offset = "0x1642B34", VA = "0x1642B34")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0x1642BF8", Offset = "0x1642BF8", VA = "0x1642BF8")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0x1642C9C", Offset = "0x1642C9C", VA = "0x1642C9C")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x1642D7C", Offset = "0x1642D7C", VA = "0x1642D7C")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001B3D")]
		[Address(RVA = "0x1643914", Offset = "0x1643914", VA = "0x1643914")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x1644014", Offset = "0x1644014", VA = "0x1644014")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x16441F4", Offset = "0x16441F4", VA = "0x16441F4")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x1645000", Offset = "0x1645000", VA = "0x1645000")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001B41")]
		[Address(RVA = "0x1642F84", Offset = "0x1642F84", VA = "0x1642F84")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001B42")]
		[Address(RVA = "0x1645120", Offset = "0x1645120", VA = "0x1645120")]
		public static void SetOnFinished(int emitterIdx, System.Action onFinished)
		{
		}

		[Token(Token = "0x6001B43")]
		[Address(RVA = "0x1645218", Offset = "0x1645218", VA = "0x1645218")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001B44")]
		[Address(RVA = "0x164535C", Offset = "0x164535C", VA = "0x164535C")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001B45")]
		[Address(RVA = "0x164575C", Offset = "0x164575C", VA = "0x164575C")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001B46")]
		[Address(RVA = "0x1645970", Offset = "0x1645970", VA = "0x1645970")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x6001B47")]
		[Address(RVA = "0x1645A8C", Offset = "0x1645A8C", VA = "0x1645A8C")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x6001B48")]
		[Address(RVA = "0x1645C54", Offset = "0x1645C54", VA = "0x1645C54")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x6001B49")]
		[Address(RVA = "0x1645D2C", Offset = "0x1645D2C", VA = "0x1645D2C")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x6001B4A")]
		[Address(RVA = "0x1645E74", Offset = "0x1645E74", VA = "0x1645E74")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x6001B4B")]
		[Address(RVA = "0x1646278", Offset = "0x1646278", VA = "0x1646278")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x200048B")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001713")]
		None = -1,
		[Token(Token = "0x4001714")]
		Reserved,
		[Token(Token = "0x4001715")]
		Any
	}
	[Serializable]
	[Token(Token = "0x200048C")]
	public class MixerSnapshot
	{
		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001B4D")]
		[Address(RVA = "0x1646D50", Offset = "0x1646D50", VA = "0x1646D50")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x200048D")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001B4E")]
		[Address(RVA = "0x1646CF4", Offset = "0x1646CF4", VA = "0x1646CF4")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x200048E")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x2000662")]
		public enum FadeState
		{
			[Token(Token = "0x4001E7F")]
			Null,
			[Token(Token = "0x4001E80")]
			FadingIn,
			[Token(Token = "0x4001E81")]
			FadingOut,
			[Token(Token = "0x4001E82")]
			Ducking
		}

		[Token(Token = "0x2000663")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF82C", Offset = "0xCBF82C")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001E86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4001E87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4001E88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x170003CA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023D6")]
				[Address(RVA = "0x1647814", Offset = "0x1647814", VA = "0x1647814", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023D8")]
				[Address(RVA = "0x164787C", Offset = "0x164787C", VA = "0x164787C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x16474D0", Offset = "0x16474D0", VA = "0x16474D0")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x1647718", Offset = "0x1647718", VA = "0x1647718", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023D5")]
			[Address(RVA = "0x164771C", Offset = "0x164771C", VA = "0x164771C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D7")]
			[Address(RVA = "0x164781C", Offset = "0x164781C", VA = "0x164781C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000664")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF83C", Offset = "0xCBF83C")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001E8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x4001E8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x4001E8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x4001E8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4001E90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4001E91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x170003CC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023DC")]
				[Address(RVA = "0x1647CEC", Offset = "0x1647CEC", VA = "0x1647CEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023DE")]
				[Address(RVA = "0x1647D54", Offset = "0x1647D54", VA = "0x1647D54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x16476A8", Offset = "0x16476A8", VA = "0x16476A8")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x1647B74", Offset = "0x1647B74", VA = "0x1647B74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x1647B78", Offset = "0x1647B78", VA = "0x1647B78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x1647CF4", Offset = "0x1647CF4", VA = "0x1647CF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000665")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF84C", Offset = "0xCBF84C")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E93")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001E94")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4001E95")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4001E96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4001E97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4001E98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4001E99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x4001E9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x4001E9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x4001E9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x4001E9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x170003CE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023E2")]
				[Address(RVA = "0x1647B04", Offset = "0x1647B04", VA = "0x1647B04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003CF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023E4")]
				[Address(RVA = "0x1647B6C", Offset = "0x1647B6C", VA = "0x1647B6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0x16476D4", Offset = "0x16476D4", VA = "0x16476D4")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x60023E0")]
			[Address(RVA = "0x1647884", Offset = "0x1647884", VA = "0x1647884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023E1")]
			[Address(RVA = "0x1647888", Offset = "0x1647888", VA = "0x1647888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023E3")]
			[Address(RVA = "0x1647B0C", Offset = "0x1647B0C", VA = "0x1647B0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public System.Action onFinished;

		[NonSerialized]
		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000281")]
		public float volume
		{
			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x1644FE4", Offset = "0x1644FE4", VA = "0x1644FE4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x1646DF0", Offset = "0x1646DF0", VA = "0x1646DF0")]
			set
			{
			}
		}

		[Token(Token = "0x17000282")]
		public float pitch
		{
			[Token(Token = "0x6001B51")]
			[Address(RVA = "0x1646E0C", Offset = "0x1646E0C", VA = "0x1646E0C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B52")]
			[Address(RVA = "0x1646E28", Offset = "0x1646E28", VA = "0x1646E28")]
			set
			{
			}
		}

		[Token(Token = "0x17000283")]
		public AudioClip clip
		{
			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x1646E44", Offset = "0x1646E44", VA = "0x1646E44")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B54")]
			[Address(RVA = "0x1646E60", Offset = "0x1646E60", VA = "0x1646E60")]
			set
			{
			}
		}

		[Token(Token = "0x17000284")]
		public float time
		{
			[Token(Token = "0x6001B55")]
			[Address(RVA = "0x1646E7C", Offset = "0x1646E7C", VA = "0x1646E7C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x1642D60", Offset = "0x1642D60", VA = "0x1642D60")]
			set
			{
			}
		}

		[Token(Token = "0x17000285")]
		public float length
		{
			[Token(Token = "0x6001B57")]
			[Address(RVA = "0x1646E98", Offset = "0x1646E98", VA = "0x1646E98")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000286")]
		public bool loop
		{
			[Token(Token = "0x6001B58")]
			[Address(RVA = "0x1646F50", Offset = "0x1646F50", VA = "0x1646F50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B59")]
			[Address(RVA = "0x1646F6C", Offset = "0x1646F6C", VA = "0x1646F6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000287")]
		public bool mute
		{
			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0x1646F8C", Offset = "0x1646F8C", VA = "0x1646F8C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0x1646FA8", Offset = "0x1646FA8", VA = "0x1646FA8")]
			set
			{
			}
		}

		[Token(Token = "0x17000288")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0x1646FC8", Offset = "0x1646FC8", VA = "0x1646FC8")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0x1646FE4", Offset = "0x1646FE4", VA = "0x1646FE4")]
			set
			{
			}
		}

		[Token(Token = "0x17000289")]
		public bool isPlaying
		{
			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0x1647000", Offset = "0x1647000", VA = "0x1647000")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B5F")]
		[Address(RVA = "0x164701C", Offset = "0x164701C", VA = "0x164701C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001B60")]
		[Address(RVA = "0x1644FAC", Offset = "0x1644FAC", VA = "0x1644FAC")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001B61")]
		[Address(RVA = "0x1647260", Offset = "0x1647260", VA = "0x1647260")]
		public void SetOnFinished(System.Action onFinished)
		{
		}

		[Token(Token = "0x6001B62")]
		[Address(RVA = "0x1645328", Offset = "0x1645328", VA = "0x1645328")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001B63")]
		[Address(RVA = "0x1647268", Offset = "0x1647268", VA = "0x1647268")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001B64")]
		[Address(RVA = "0x1647270", Offset = "0x1647270", VA = "0x1647270")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001B65")]
		[Address(RVA = "0x1645BAC", Offset = "0x1645BAC", VA = "0x1645BAC")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001B66")]
		[Address(RVA = "0x1642138", Offset = "0x1642138", VA = "0x1642138")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B67")]
		[Address(RVA = "0x1647278", Offset = "0x1647278", VA = "0x1647278")]
		public void Play()
		{
		}

		[Token(Token = "0x6001B68")]
		[Address(RVA = "0x16472D8", Offset = "0x16472D8", VA = "0x16472D8")]
		public void Pause()
		{
		}

		[Token(Token = "0x6001B69")]
		[Address(RVA = "0x1641F58", Offset = "0x1641F58", VA = "0x1641F58")]
		public void Stop()
		{
		}

		[Token(Token = "0x6001B6A")]
		[Address(RVA = "0x16473A0", Offset = "0x16473A0", VA = "0x16473A0")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x6001B6B")]
		[Address(RVA = "0x1645650", Offset = "0x1645650", VA = "0x1645650")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x6001B6C")]
		[Address(RVA = "0x16458A0", Offset = "0x16458A0", VA = "0x16458A0")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001B6D")]
		[Address(RVA = "0x16424DC", Offset = "0x16424DC", VA = "0x16424DC")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001B6E")]
		[Address(RVA = "0x16473F8", Offset = "0x16473F8", VA = "0x16473F8")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001B6F")]
		[Address(RVA = "0x1647424", Offset = "0x1647424", VA = "0x1647424")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD29F8", Offset = "0xCD29F8")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001B70")]
		[Address(RVA = "0x16474FC", Offset = "0x16474FC", VA = "0x16474FC")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001B71")]
		[Address(RVA = "0x16428E0", Offset = "0x16428E0", VA = "0x16428E0")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001B72")]
		[Address(RVA = "0x164295C", Offset = "0x164295C", VA = "0x164295C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001B73")]
		[Address(RVA = "0x1642790", Offset = "0x1642790", VA = "0x1642790")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001B74")]
		[Address(RVA = "0x16425DC", Offset = "0x16425DC", VA = "0x16425DC")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001B75")]
		[Address(RVA = "0x1647564", Offset = "0x1647564", VA = "0x1647564")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD2A5C", Offset = "0xCD2A5C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001B76")]
		[Address(RVA = "0x16475F4", Offset = "0x16475F4", VA = "0x16475F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD2AC0", Offset = "0xCD2AC0")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x6001B77")]
		[Address(RVA = "0x1647700", Offset = "0x1647700", VA = "0x1647700")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x200048F")]
	public enum SoundFXNext
	{
		[Token(Token = "0x400172C")]
		Random,
		[Token(Token = "0x400172D")]
		Sequential
	}
	[Token(Token = "0x2000490")]
	public enum FreqHint
	{
		[Token(Token = "0x400172F")]
		None,
		[Token(Token = "0x4001730")]
		Wide,
		[Token(Token = "0x4001731")]
		Narrow
	}
	[Token(Token = "0x2000491")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001733")]
		VeryLow = -2,
		[Token(Token = "0x4001734")]
		Low,
		[Token(Token = "0x4001735")]
		Default,
		[Token(Token = "0x4001736")]
		High,
		[Token(Token = "0x4001737")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x2000492")]
	public class OSPProps
	{
		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC7B0", Offset = "0xCCC7B0")]
		public bool enableSpatialization;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC7E8", Offset = "0xCCC7E8")]
		public bool useFastOverride;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC820", Offset = "0xCCC820")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCC820", Offset = "0xCCC820")]
		public float gain;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC874", Offset = "0xCCC874")]
		public bool enableInvSquare;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC8AC", Offset = "0xCCC8AC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCC8AC", Offset = "0xCCC8AC")]
		public float volumetric;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC904", Offset = "0xCCC904")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xCCC904", Offset = "0xCCC904")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x6001B78")]
		[Address(RVA = "0x1646D60", Offset = "0x1646D60", VA = "0x1646D60")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000493")]
	public class SoundFX
	{
		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC964", Offset = "0xCCC964")]
		public string name;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC99C", Offset = "0xCCC99C")]
		public SoundFXNext playback;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCC9D4", Offset = "0xCCC9D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCC9D4", Offset = "0xCCC9D4")]
		public float volume;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCA28", Offset = "0xCCCA28")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xCCCA28", Offset = "0xCCCA28")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCA84", Offset = "0xCCCA84")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xCCCA84", Offset = "0xCCCA84")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCAE4", Offset = "0xCCCAE4")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCB1C", Offset = "0xCCCB1C")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCB54", Offset = "0xCCCB54")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCB8C", Offset = "0xCCCB8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCCB8C", Offset = "0xCCCB8C")]
		public float spread;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCBE4", Offset = "0xCCCBE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCCBE4", Offset = "0xCCCBE4")]
		public float pctChanceToPlay;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCC38", Offset = "0xCCCC38")]
		public SoundPriority priority;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCC70", Offset = "0xCCCC70")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0xCCCC70", Offset = "0xCCCC70")]
		public Vector2 delay;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCCCC", Offset = "0xCCCCCC")]
		public bool looping;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCCD04", Offset = "0xCCCD04")]
		public AudioClip[] soundClips;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x1700028A")]
		public int Length
		{
			[Token(Token = "0x6001B7A")]
			[Address(RVA = "0x1647D5C", Offset = "0x1647D5C", VA = "0x1647D5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700028B")]
		public bool IsValid
		{
			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0x1647D78", Offset = "0x1647D78", VA = "0x1647D78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700028C")]
		public SoundGroup Group
		{
			[Token(Token = "0x6001B7C")]
			[Address(RVA = "0x1647E1C", Offset = "0x1647E1C", VA = "0x1647E1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x1647E24", Offset = "0x1647E24", VA = "0x1647E24")]
			set
			{
			}
		}

		[Token(Token = "0x1700028D")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001B7E")]
			[Address(RVA = "0x1644EB4", Offset = "0x1644EB4", VA = "0x1644EB4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700028E")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001B7F")]
			[Address(RVA = "0x1644EE8", Offset = "0x1644EE8", VA = "0x1644EE8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B79")]
		[Address(RVA = "0x16465F8", Offset = "0x16465F8", VA = "0x16465F8")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001B80")]
		[Address(RVA = "0x1644DE4", Offset = "0x1644DE4", VA = "0x1644DE4")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001B81")]
		[Address(RVA = "0x1644F0C", Offset = "0x1644F0C", VA = "0x1644F0C")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001B82")]
		[Address(RVA = "0x1644EC0", Offset = "0x1644EC0", VA = "0x1644EC0")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B83")]
		[Address(RVA = "0x1647E4C", Offset = "0x1647E4C", VA = "0x1647E4C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001B84")]
		[Address(RVA = "0x1644F00", Offset = "0x1644F00", VA = "0x1644F00")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001B85")]
		[Address(RVA = "0x1647F48", Offset = "0x1647F48", VA = "0x1647F48")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B86")]
		[Address(RVA = "0x1648024", Offset = "0x1648024", VA = "0x1648024")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B87")]
		[Address(RVA = "0x1648138", Offset = "0x1648138", VA = "0x1648138")]
		public void SetOnFinished(System.Action onFinished)
		{
		}

		[Token(Token = "0x6001B88")]
		[Address(RVA = "0x16481C4", Offset = "0x16481C4", VA = "0x16481C4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001B89")]
		[Address(RVA = "0x1648258", Offset = "0x1648258", VA = "0x1648258")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B8A")]
		[Address(RVA = "0x16482E4", Offset = "0x16482E4", VA = "0x16482E4")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001B8B")]
		[Address(RVA = "0x1648370", Offset = "0x1648370", VA = "0x1648370")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000494")]
	public class SoundFXRef
	{
		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x1700028F")]
		public SoundFX soundFX
		{
			[Token(Token = "0x6001B8C")]
			[Address(RVA = "0x16483E8", Offset = "0x16483E8", VA = "0x16483E8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000290")]
		public string name
		{
			[Token(Token = "0x6001B8D")]
			[Address(RVA = "0x16484FC", Offset = "0x16484FC", VA = "0x16484FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001B8E")]
			[Address(RVA = "0x1648504", Offset = "0x1648504", VA = "0x1648504")]
			set
			{
			}
		}

		[Token(Token = "0x17000291")]
		public int Length
		{
			[Token(Token = "0x6001B90")]
			[Address(RVA = "0x164852C", Offset = "0x164852C", VA = "0x164852C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000292")]
		public bool IsValid
		{
			[Token(Token = "0x6001B91")]
			[Address(RVA = "0x1648570", Offset = "0x1648570", VA = "0x1648570")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001B8F")]
		[Address(RVA = "0x1648418", Offset = "0x1648418", VA = "0x1648418")]
		private void Init()
		{
		}

		[Token(Token = "0x6001B92")]
		[Address(RVA = "0x16485A8", Offset = "0x16485A8", VA = "0x16485A8")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001B93")]
		[Address(RVA = "0x16485E0", Offset = "0x16485E0", VA = "0x16485E0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001B94")]
		[Address(RVA = "0x1648620", Offset = "0x1648620", VA = "0x1648620")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B95")]
		[Address(RVA = "0x163F9B8", Offset = "0x163F9B8", VA = "0x163F9B8")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001B96")]
		[Address(RVA = "0x1648668", Offset = "0x1648668", VA = "0x1648668")]
		public void SetOnFinished(System.Action onFinished)
		{
		}

		[Token(Token = "0x6001B97")]
		[Address(RVA = "0x16486A8", Offset = "0x16486A8", VA = "0x16486A8")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001B98")]
		[Address(RVA = "0x16486F8", Offset = "0x16486F8", VA = "0x16486F8")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B99")]
		[Address(RVA = "0x1648730", Offset = "0x1648730", VA = "0x1648730")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x6001B9A")]
		[Address(RVA = "0x1648770", Offset = "0x1648770", VA = "0x1648770")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001B9B")]
		[Address(RVA = "0x16487A8", Offset = "0x16487A8", VA = "0x16487A8")]
		public SoundFXRef()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x2000495")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0xCBDD94", Offset = "0xCBDD94")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x6001B9C")]
		[Address(RVA = "0xFBE438", Offset = "0xFBE438", VA = "0xFBE438")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x2000496")]
	internal static class SDKShaders
	{
		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly int LIV_COLOR_MASK;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly int LIV_TESSELLATION_PROPERTY;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly int LIV_CLIP_PLANE_HEIGHT_MAP_PROPERTY;

		[Token(Token = "0x4001757")]
		public const string LIV_MR_FOREGROUND_KEYWORD = "LIV_MR_FOREGROUND";

		[Token(Token = "0x4001758")]
		public const string LIV_MR_BACKGROUND_KEYWORD = "LIV_MR_BACKGROUND";

		[Token(Token = "0x4001759")]
		public const string LIV_MR_KEYWORD = "LIV_MR";

		[Token(Token = "0x400175A")]
		public const string LIV_CLIP_PLANE_SIMPLE_SHADER = "Hidden/LIV_ClipPlaneSimple";

		[Token(Token = "0x400175B")]
		public const string LIV_CLIP_PLANE_SIMPLE_DEBUG_SHADER = "Hidden/LIV_ClipPlaneSimpleDebug";

		[Token(Token = "0x400175C")]
		public const string LIV_CLIP_PLANE_COMPLEX_SHADER = "Hidden/LIV_ClipPlaneComplex";

		[Token(Token = "0x400175D")]
		public const string LIV_CLIP_PLANE_COMPLEX_DEBUG_SHADER = "Hidden/LIV_ClipPlaneComplexDebug";

		[Token(Token = "0x400175E")]
		public const string LIV_WRITE_OPAQUE_TO_ALPHA_SHADER = "Hidden/LIV_WriteOpaqueToAlpha";

		[Token(Token = "0x400175F")]
		public const string LIV_COMBINE_ALPHA_SHADER = "Hidden/LIV_CombineAlpha";

		[Token(Token = "0x4001760")]
		public const string LIV_WRITE_SHADER = "Hidden/LIV_Write";

		[Token(Token = "0x4001761")]
		public const string LIV_FORCE_FORWARD_RENDERING_SHADER = "Hidden/LIV_ForceForwardRendering";

		[Token(Token = "0x6001B9D")]
		[Address(RVA = "0xFC0A7C", Offset = "0xFC0A7C", VA = "0xFC0A7C")]
		public static void StartRendering()
		{
		}

		[Token(Token = "0x6001B9E")]
		[Address(RVA = "0xFC0AC8", Offset = "0xFC0AC8", VA = "0xFC0AC8")]
		public static void StopRendering()
		{
		}

		[Token(Token = "0x6001B9F")]
		[Address(RVA = "0xFC0B14", Offset = "0xFC0B14", VA = "0xFC0B14")]
		public static void StartForegroundRendering()
		{
		}

		[Token(Token = "0x6001BA0")]
		[Address(RVA = "0xFC0B60", Offset = "0xFC0B60", VA = "0xFC0B60")]
		public static void StopForegroundRendering()
		{
		}

		[Token(Token = "0x6001BA1")]
		[Address(RVA = "0xFC0BAC", Offset = "0xFC0BAC", VA = "0xFC0BAC")]
		public static void StartBackgroundRendering()
		{
		}

		[Token(Token = "0x6001BA2")]
		[Address(RVA = "0xFC0BF8", Offset = "0xFC0BF8", VA = "0xFC0BF8")]
		public static void StopBackgroundRendering()
		{
		}
	}
	[Token(Token = "0x2000497")]
	public struct SDKConstants
	{
		[Token(Token = "0x4001762")]
		public const string SDK_ID = "KWCSWUILKC0YPUVJ0AQKCISJWNOCGQ4I";

		[Token(Token = "0x4001763")]
		public const string SDK_VERSION = "1.5.3";

		[Token(Token = "0x4001764")]
		public const string ENGINE_NAME = "unity";
	}
	[Token(Token = "0x2000498")]
	public enum PRIORITY : sbyte
	{
		[Token(Token = "0x4001766")]
		NONE = 0,
		[Token(Token = "0x4001767")]
		GAME = 63
	}
	[Token(Token = "0x2000499")]
	[Flags]
	public enum FEATURES : ulong
	{
		[Token(Token = "0x4001769")]
		NONE = 0uL,
		[Token(Token = "0x400176A")]
		BACKGROUND_RENDER = 1uL,
		[Token(Token = "0x400176B")]
		FOREGROUND_RENDER = 2uL,
		[Token(Token = "0x400176C")]
		COMPLEX_CLIP_PLANE = 4uL,
		[Token(Token = "0x400176D")]
		BACKGROUND_DEPTH_RENDER = 8uL,
		[Token(Token = "0x400176E")]
		OVERRIDE_POST_PROCESSING = 0x10uL,
		[Token(Token = "0x400176F")]
		FIX_FOREGROUND_ALPHA = 0x20uL,
		[Token(Token = "0x4001770")]
		GROUND_CLIP_PLANE = 0x40uL,
		[Token(Token = "0x4001771")]
		RELEASE_CONTROL = 0x8000uL,
		[Token(Token = "0x4001772")]
		DEBUG_CLIP_PLANE = 0x1000000000000uL
	}
	[Token(Token = "0x200049A")]
	public enum TEXTURE_ID : uint
	{
		[Token(Token = "0x4001774")]
		UNDEFINED = 0u,
		[Token(Token = "0x4001775")]
		BACKGROUND_COLOR_BUFFER_ID = 10u,
		[Token(Token = "0x4001776")]
		FOREGROUND_COLOR_BUFFER_ID = 20u
	}
	[Token(Token = "0x200049B")]
	public enum TEXTURE_TYPE : uint
	{
		[Token(Token = "0x4001778")]
		UNDEFINED,
		[Token(Token = "0x4001779")]
		COLOR_BUFFER
	}
	[Token(Token = "0x200049C")]
	public enum TEXTURE_FORMAT : uint
	{
		[Token(Token = "0x400177B")]
		UNDEFINED = 0u,
		[Token(Token = "0x400177C")]
		ARGB32 = 10u
	}
	[Token(Token = "0x200049D")]
	public enum TEXTURE_DEVICE : uint
	{
		[Token(Token = "0x400177E")]
		UNDEFINED,
		[Token(Token = "0x400177F")]
		RAW,
		[Token(Token = "0x4001780")]
		DIRECTX,
		[Token(Token = "0x4001781")]
		OPENGL,
		[Token(Token = "0x4001782")]
		VULKAN,
		[Token(Token = "0x4001783")]
		METAL
	}
	[Token(Token = "0x200049E")]
	public enum TEXTURE_COLOR_SPACE : uint
	{
		[Token(Token = "0x4001785")]
		UNDEFINED,
		[Token(Token = "0x4001786")]
		LINEAR,
		[Token(Token = "0x4001787")]
		SRGB
	}
	[Token(Token = "0x200049F")]
	public enum RENDERING_PIPELINE : uint
	{
		[Token(Token = "0x4001789")]
		UNDEFINED,
		[Token(Token = "0x400178A")]
		FORWARD,
		[Token(Token = "0x400178B")]
		DEFERRED,
		[Token(Token = "0x400178C")]
		VERTEX_LIT,
		[Token(Token = "0x400178D")]
		UNIVERSAL,
		[Token(Token = "0x400178E")]
		HIGH_DEFINITION
	}
	[Token(Token = "0x20004A0")]
	public struct SDKResolution
	{
		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int width;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int height;

		[Token(Token = "0x17000293")]
		public static SDKResolution zero
		{
			[Token(Token = "0x6001BA4")]
			[Address(RVA = "0xFC09D8", Offset = "0xFC09D8", VA = "0xFC09D8")]
			get
			{
				return default(SDKResolution);
			}
		}

		[Token(Token = "0x6001BA5")]
		[Address(RVA = "0xDD3FEC", Offset = "0xDD3FEC", VA = "0xDD3FEC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A1")]
	public struct SDKVector3
	{
		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x17000294")]
		public static SDKVector3 zero
		{
			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0xFBEABC", Offset = "0xFBEABC", VA = "0xFBEABC")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000295")]
		public static SDKVector3 one
		{
			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0xFC1364", Offset = "0xFC1364", VA = "0xFC1364")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000296")]
		public static SDKVector3 forward
		{
			[Token(Token = "0x6001BA8")]
			[Address(RVA = "0xFC144C", Offset = "0xFC144C", VA = "0xFC144C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000297")]
		public static SDKVector3 up
		{
			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0xFBFF9C", Offset = "0xFBFF9C", VA = "0xFBFF9C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x17000298")]
		public static SDKVector3 right
		{
			[Token(Token = "0x6001BAA")]
			[Address(RVA = "0xFC145C", Offset = "0xFC145C", VA = "0xFC145C")]
			get
			{
				return default(SDKVector3);
			}
		}

		[Token(Token = "0x6001BAB")]
		[Address(RVA = "0xFC146C", Offset = "0xFC146C", VA = "0xFC146C")]
		public static implicit operator Vector3(SDKVector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001BAC")]
		[Address(RVA = "0xFBFF84", Offset = "0xFBFF84", VA = "0xFBFF84")]
		public static implicit operator SDKVector3(Vector3 v)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001BAD")]
		[Address(RVA = "0xFC14A0", Offset = "0xFC14A0", VA = "0xFC14A0")]
		public static SDKVector3 operator +(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001BAE")]
		[Address(RVA = "0xFC14B0", Offset = "0xFC14B0", VA = "0xFC14B0")]
		public static SDKVector3 operator -(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001BAF")]
		[Address(RVA = "0xFC14C0", Offset = "0xFC14C0", VA = "0xFC14C0")]
		public static SDKVector3 operator *(SDKVector3 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001BB0")]
		[Address(RVA = "0xFC14D0", Offset = "0xFC14D0", VA = "0xFC14D0")]
		public static SDKVector3 operator *(SDKVector3 lhs, float rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001BB1")]
		[Address(RVA = "0xDD400C", Offset = "0xDD400C", VA = "0xDD400C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A2")]
	public struct SDKQuaternion
	{
		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float z;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float w;

		[Token(Token = "0x17000299")]
		public static SDKQuaternion identity
		{
			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0xFBEACC", Offset = "0xFBEACC", VA = "0xFBEACC")]
			get
			{
				return default(SDKQuaternion);
			}
		}

		[Token(Token = "0x6001BB3")]
		[Address(RVA = "0xFC05A4", Offset = "0xFC05A4", VA = "0xFC05A4")]
		public static implicit operator Quaternion(SDKQuaternion v)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001BB4")]
		[Address(RVA = "0xFC05D4", Offset = "0xFC05D4", VA = "0xFC05D4")]
		public static implicit operator SDKQuaternion(Quaternion v)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001BB5")]
		[Address(RVA = "0xFC05D8", Offset = "0xFC05D8", VA = "0xFC05D8")]
		public static SDKQuaternion Euler(float pitch, float yaw, float roll)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001BB6")]
		[Address(RVA = "0xFC06EC", Offset = "0xFC06EC", VA = "0xFC06EC")]
		public static SDKQuaternion operator *(SDKQuaternion lhs, SDKQuaternion rhs)
		{
			return default(SDKQuaternion);
		}

		[Token(Token = "0x6001BB7")]
		[Address(RVA = "0xFC0760", Offset = "0xFC0760", VA = "0xFC0760")]
		public static SDKVector3 operator *(SDKQuaternion lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001BB8")]
		[Address(RVA = "0xDD3FE4", Offset = "0xDD3FE4", VA = "0xDD3FE4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A3")]
	public struct SDKMatrix4x4
	{
		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m00;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m01;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m02;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m03;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m10;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m11;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m12;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m13;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m20;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m21;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m22;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m23;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m30;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m31;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m32;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m33;

		[Token(Token = "0x1700029A")]
		public static SDKMatrix4x4 identity
		{
			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0xFBE858", Offset = "0xFBE858", VA = "0xFBE858")]
			get
			{
				return default(SDKMatrix4x4);
			}
		}

		[Token(Token = "0x6001BBA")]
		[Address(RVA = "0xFBF3DC", Offset = "0xFBF3DC", VA = "0xFBF3DC")]
		public static implicit operator Matrix4x4(SDKMatrix4x4 v)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x6001BBB")]
		[Address(RVA = "0xFBF420", Offset = "0xFBF420", VA = "0xFBF420")]
		public static implicit operator SDKMatrix4x4(Matrix4x4 v)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001BBC")]
		[Address(RVA = "0xFBF464", Offset = "0xFBF464", VA = "0xFBF464")]
		public static SDKMatrix4x4 Perspective(float vFov, float aspect, float zNear, float zFar)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001BBD")]
		[Address(RVA = "0xFBF56C", Offset = "0xFBF56C", VA = "0xFBF56C")]
		public static SDKMatrix4x4 operator *(SDKMatrix4x4 lhs, SDKMatrix4x4 rhs)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001BBE")]
		[Address(RVA = "0xFBF618", Offset = "0xFBF618", VA = "0xFBF618")]
		public static SDKVector3 operator *(SDKMatrix4x4 lhs, SDKVector3 rhs)
		{
			return default(SDKVector3);
		}

		[Token(Token = "0x6001BBF")]
		[Address(RVA = "0xFBF670", Offset = "0xFBF670", VA = "0xFBF670")]
		public static SDKMatrix4x4 Translate(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001BC0")]
		[Address(RVA = "0xFBF6AC", Offset = "0xFBF6AC", VA = "0xFBF6AC")]
		public static SDKMatrix4x4 Rotate(SDKQuaternion value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001BC1")]
		[Address(RVA = "0xFBF740", Offset = "0xFBF740", VA = "0xFBF740")]
		public static SDKMatrix4x4 Scale(SDKVector3 value)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001BC2")]
		[Address(RVA = "0xFBF76C", Offset = "0xFBF76C", VA = "0xFBF76C")]
		public static SDKMatrix4x4 TRS(SDKVector3 translation, SDKQuaternion rotation, SDKVector3 scale)
		{
			return default(SDKMatrix4x4);
		}

		[Token(Token = "0x6001BC3")]
		[Address(RVA = "0xDD3FBC", Offset = "0xDD3FBC", VA = "0xDD3FBC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A4")]
	public struct SDKPlane
	{
		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float distance;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKVector3 normal;

		[Token(Token = "0x1700029B")]
		public static SDKPlane empty
		{
			[Token(Token = "0x6001BC5")]
			[Address(RVA = "0xFBFF88", Offset = "0xFBFF88", VA = "0xFBFF88")]
			get
			{
				return default(SDKPlane);
			}
		}

		[Token(Token = "0x6001BC4")]
		[Address(RVA = "0xFBFF24", Offset = "0xFBFF24", VA = "0xFBFF24")]
		public static implicit operator SDKPlane(Plane v)
		{
			return default(SDKPlane);
		}

		[Token(Token = "0x6001BC6")]
		[Address(RVA = "0xDD3FCC", Offset = "0xDD3FCC", VA = "0xDD3FCC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A5")]
	public struct SDKPriority
	{
		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public sbyte pose;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public sbyte clipPlane;

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public sbyte stage;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public sbyte resolution;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public sbyte feature;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public sbyte nearFarAdjustment;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public sbyte groundPlane;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public sbyte reserved2;

		[Token(Token = "0x1700029C")]
		public static SDKPriority empty
		{
			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0xFBF054", Offset = "0xFBF054", VA = "0xFBF054")]
			get
			{
				return default(SDKPriority);
			}
		}

		[Token(Token = "0x6001BC8")]
		[Address(RVA = "0xDD3FDC", Offset = "0xDD3FDC", VA = "0xDD3FDC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A6")]
	public struct SDKApplicationOutput
	{
		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FEATURES supportedFeatures;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string engineName;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string engineVersion;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applicationName;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string applicationVersion;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string xrDeviceName;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string graphicsAPI;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string sdkID;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string sdkVersion;

		[Token(Token = "0x1700029D")]
		public static SDKApplicationOutput empty
		{
			[Token(Token = "0x6001BC9")]
			[Address(RVA = "0xFBE440", Offset = "0xFBE440", VA = "0xFBE440")]
			get
			{
				return default(SDKApplicationOutput);
			}
		}

		[Token(Token = "0x6001BCA")]
		[Address(RVA = "0xDD3F78", Offset = "0xDD3F78", VA = "0xDD3F78", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A7")]
	public struct SDKInputFrame
	{
		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKPose pose;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKClipPlane clipPlane;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public SDKTransform stageTransform;

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public FEATURES features;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public SDKClipPlane groundClipPlane;

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public ulong frameid;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public ulong referenceframe;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public SDKPriority priority;

		[Token(Token = "0x1700029E")]
		public static SDKInputFrame empty
		{
			[Token(Token = "0x6001BCB")]
			[Address(RVA = "0xFBEEB4", Offset = "0xFBEEB4", VA = "0xFBEEB4")]
			get
			{
				return default(SDKInputFrame);
			}
		}

		[Token(Token = "0x6001BCC")]
		[Address(RVA = "0xDD3F90", Offset = "0xDD3F90", VA = "0xDD3F90")]
		public void ReleaseControl()
		{
		}

		[Token(Token = "0x6001BCD")]
		[Address(RVA = "0xDD3FA0", Offset = "0xDD3FA0", VA = "0xDD3FA0")]
		public void ObtainControl()
		{
		}

		[Token(Token = "0x6001BCE")]
		[Address(RVA = "0xDD3FB4", Offset = "0xDD3FB4", VA = "0xDD3FB4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A8")]
	public struct SDKOutputFrame
	{
		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public RENDERING_PIPELINE renderingPipeline;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public SDKTrackedSpace trackedSpace;

		[Token(Token = "0x1700029F")]
		public static SDKOutputFrame empty
		{
			[Token(Token = "0x6001BCF")]
			[Address(RVA = "0xFBFDBC", Offset = "0xFBFDBC", VA = "0xFBFDBC")]
			get
			{
				return default(SDKOutputFrame);
			}
		}

		[Token(Token = "0x6001BD0")]
		[Address(RVA = "0xDD3FC4", Offset = "0xDD3FC4", VA = "0xDD3FC4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004A9")]
	public struct SDKTrackedSpace
	{
		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 trackedSpaceWorldPosition;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion trackedSpaceWorldRotation;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 trackedSpaceLocalScale;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKMatrix4x4 trackedSpaceLocalToWorldMatrix;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public SDKMatrix4x4 trackedSpaceWorldToLocalMatrix;

		[Token(Token = "0x170002A0")]
		public static SDKTrackedSpace empty
		{
			[Token(Token = "0x6001BD1")]
			[Address(RVA = "0xFBFE1C", Offset = "0xFBFE1C", VA = "0xFBFE1C")]
			get
			{
				return default(SDKTrackedSpace);
			}
		}

		[Token(Token = "0x6001BD2")]
		[Address(RVA = "0xDD3FFC", Offset = "0xDD3FFC", VA = "0xDD3FFC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004AA")]
	public struct SDKTexture
	{
		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public TEXTURE_ID id;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr texturePtr;

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr SharedHandle;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TEXTURE_DEVICE device;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int dummy;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TEXTURE_TYPE type;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public TEXTURE_FORMAT format;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TEXTURE_COLOR_SPACE colorSpace;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int width;

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int height;

		[Token(Token = "0x170002A1")]
		public static SDKTexture empty
		{
			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0xFC0CE8", Offset = "0xFC0CE8", VA = "0xFC0CE8")]
			get
			{
				return default(SDKTexture);
			}
		}

		[Token(Token = "0x6001BD4")]
		[Address(RVA = "0xDD3FF4", Offset = "0xDD3FF4", VA = "0xDD3FF4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004AB")]
	public struct SDKTransform
	{
		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 localPosition;

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 localScale;

		[Token(Token = "0x170002A2")]
		public static SDKTransform empty
		{
			[Token(Token = "0x6001BD5")]
			[Address(RVA = "0xFBF040", Offset = "0xFBF040", VA = "0xFBF040")]
			get
			{
				return default(SDKTransform);
			}
		}

		[Token(Token = "0x6001BD6")]
		[Address(RVA = "0xDD4004", Offset = "0xDD4004", VA = "0xDD4004", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004AC")]
	public struct SDKClipPlane
	{
		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 transform;

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int width;

		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int height;

		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tesselation;

		[Token(Token = "0x170002A3")]
		public static SDKClipPlane empty
		{
			[Token(Token = "0x6001BD7")]
			[Address(RVA = "0xFBE824", Offset = "0xFBE824", VA = "0xFBE824")]
			get
			{
				return default(SDKClipPlane);
			}
		}

		[Token(Token = "0x6001BD8")]
		[Address(RVA = "0xDD3F80", Offset = "0xDD3F80", VA = "0xDD3F80", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004AD")]
	public struct SDKControllerState
	{
		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKVector3 hmdposition;

		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public SDKQuaternion hmdrotation;

		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public SDKVector3 calibrationcameraposition;

		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SDKQuaternion calibrationcamerarotation;

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SDKVector3 cameraposition;

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public SDKQuaternion camerarotation;

		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public SDKVector3 leftposition;

		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public SDKQuaternion leftrotation;

		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public SDKVector3 rightposition;

		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SDKQuaternion rightrotation;

		[Token(Token = "0x170002A4")]
		public static SDKControllerState empty
		{
			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0xFBEA70", Offset = "0xFBEA70", VA = "0xFBEA70")]
			get
			{
				return default(SDKControllerState);
			}
		}

		[Token(Token = "0x6001BDA")]
		[Address(RVA = "0xDD3F88", Offset = "0xDD3F88", VA = "0xDD3F88", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004AE")]
	public struct SDKPose
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public SDKMatrix4x4 projectionMatrix;

		[Token(Token = "0x40017E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SDKVector3 localPosition;

		[Token(Token = "0x40017E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public SDKQuaternion localRotation;

		[Token(Token = "0x40017E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float verticalFieldOfView;

		[Token(Token = "0x40017E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float nearClipPlane;

		[Token(Token = "0x40017EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float farClipPlane;

		[Token(Token = "0x40017EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public int unused0;

		[Token(Token = "0x40017EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int unused1;

		[Token(Token = "0x170002A5")]
		public static SDKPose empty
		{
			[Token(Token = "0x6001BDB")]
			[Address(RVA = "0xFBEFC4", Offset = "0xFBEFC4", VA = "0xFBEFC4")]
			get
			{
				return default(SDKPose);
			}
		}

		[Token(Token = "0x6001BDC")]
		[Address(RVA = "0xDD3FD4", Offset = "0xDD3FD4", VA = "0xDD3FD4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
}
namespace ES3Types
{
	[Token(Token = "0x20004AF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBDDDC", Offset = "0xCBDDDC")]
	public class ES3UserType_BoolVariable : ES3ScriptableObjectType
	{
		[Token(Token = "0x40017ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BDD")]
		[Address(RVA = "0xF33804", Offset = "0xF33804", VA = "0xF33804")]
		public ES3UserType_BoolVariable()
		{
		}

		[Token(Token = "0x6001BDE")]
		[Address(RVA = "0xF338C8", Offset = "0xF338C8", VA = "0xF338C8", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001BDF")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004B0")]
	public class ES3UserType_BoolVariableArray : ES3ArrayType
	{
		[Token(Token = "0x40017EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BE1")]
		[Address(RVA = "0xF33A90", Offset = "0xF33A90", VA = "0xF33A90")]
		public ES3UserType_BoolVariableArray()
		{
		}
	}
	[Token(Token = "0x20004B1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBDF18", Offset = "0xCBDF18")]
	public class ES3UserType_FloatVariable : ES3ScriptableObjectType
	{
		[Token(Token = "0x40017EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BE2")]
		[Address(RVA = "0xF33B6C", Offset = "0xF33B6C", VA = "0xF33B6C")]
		public ES3UserType_FloatVariable()
		{
		}

		[Token(Token = "0x6001BE3")]
		[Address(RVA = "0xF33C30", Offset = "0xF33C30", VA = "0xF33C30", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001BE4")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004B2")]
	public class ES3UserType_FloatVariableArray : ES3ArrayType
	{
		[Token(Token = "0x40017F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BE6")]
		[Address(RVA = "0xF33FC0", Offset = "0xF33FC0", VA = "0xF33FC0")]
		public ES3UserType_FloatVariableArray()
		{
		}
	}
	[Token(Token = "0x20004B3")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBE118", Offset = "0xCBE118")]
	public class ES3UserType_GalaxyData : ES3ScriptableObjectType
	{
		[Token(Token = "0x40017F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BE7")]
		[Address(RVA = "0xF3409C", Offset = "0xF3409C", VA = "0xF3409C")]
		public ES3UserType_GalaxyData()
		{
		}

		[Token(Token = "0x6001BE8")]
		[Address(RVA = "0xF34160", Offset = "0xF34160", VA = "0xF34160", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001BE9")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004B4")]
	public class ES3UserType_GalaxyDataArray : ES3ArrayType
	{
		[Token(Token = "0x40017F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BEB")]
		[Address(RVA = "0xF3433C", Offset = "0xF3433C", VA = "0xF3433C")]
		public ES3UserType_GalaxyDataArray()
		{
		}
	}
	[Token(Token = "0x20004B5")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBE1E4", Offset = "0xCBE1E4")]
	public class ES3UserType_GameModeTypeVariable : ES3ScriptableObjectType
	{
		[Token(Token = "0x40017F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BEC")]
		[Address(RVA = "0xF34418", Offset = "0xF34418", VA = "0xF34418")]
		public ES3UserType_GameModeTypeVariable()
		{
		}

		[Token(Token = "0x6001BED")]
		[Address(RVA = "0xF344DC", Offset = "0xF344DC", VA = "0xF344DC", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001BEE")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004B6")]
	public class ES3UserType_GameModeTypeVariableArray : ES3ArrayType
	{
		[Token(Token = "0x40017F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BF0")]
		[Address(RVA = "0xF34644", Offset = "0xF34644", VA = "0xF34644")]
		public ES3UserType_GameModeTypeVariableArray()
		{
		}
	}
	[Token(Token = "0x20004B7")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBE2B0", Offset = "0xCBE2B0")]
	public class ES3UserType_GestureData : ES3ScriptableObjectType
	{
		[Token(Token = "0x40017F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BF1")]
		[Address(RVA = "0xF34720", Offset = "0xF34720", VA = "0xF34720")]
		public ES3UserType_GestureData()
		{
		}

		[Token(Token = "0x6001BF2")]
		[Address(RVA = "0xF347E4", Offset = "0xF347E4", VA = "0xF347E4", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001BF3")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004B8")]
	public class ES3UserType_GestureDataArray : ES3ArrayType
	{
		[Token(Token = "0x40017F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BF5")]
		[Address(RVA = "0xF348DC", Offset = "0xF348DC", VA = "0xF348DC")]
		public ES3UserType_GestureDataArray()
		{
		}
	}
	[Token(Token = "0x20004B9")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBE344", Offset = "0xCBE344")]
	public class ES3UserType_GestureVariable : ES3ScriptableObjectType
	{
		[Token(Token = "0x40017F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BF6")]
		[Address(RVA = "0xF349B8", Offset = "0xF349B8", VA = "0xF349B8")]
		public ES3UserType_GestureVariable()
		{
		}

		[Token(Token = "0x6001BF7")]
		[Address(RVA = "0xF34A7C", Offset = "0xF34A7C", VA = "0xF34A7C", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001BF8")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004BA")]
	public class ES3UserType_GestureVariableArray : ES3ArrayType
	{
		[Token(Token = "0x40017F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BFA")]
		[Address(RVA = "0xF34CC8", Offset = "0xF34CC8", VA = "0xF34CC8")]
		public ES3UserType_GestureVariableArray()
		{
		}
	}
	[Token(Token = "0x20004BB")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBE49C", Offset = "0xCBE49C")]
	public class ES3UserType_IntVariable : ES3ScriptableObjectType
	{
		[Token(Token = "0x40017F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BFB")]
		[Address(RVA = "0xF34DA4", Offset = "0xF34DA4", VA = "0xF34DA4")]
		public ES3UserType_IntVariable()
		{
		}

		[Token(Token = "0x6001BFC")]
		[Address(RVA = "0xF34E68", Offset = "0xF34E68", VA = "0xF34E68", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001BFD")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004BC")]
	public class ES3UserType_IntVariableArray : ES3ArrayType
	{
		[Token(Token = "0x40017FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001BFF")]
		[Address(RVA = "0xF350C4", Offset = "0xF350C4", VA = "0xF350C4")]
		public ES3UserType_IntVariableArray()
		{
		}
	}
	[Token(Token = "0x20004BD")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBE610", Offset = "0xCBE610")]
	public class ES3UserType_PlanetData : ES3ScriptableObjectType
	{
		[Token(Token = "0x40017FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001C00")]
		[Address(RVA = "0xF351A0", Offset = "0xF351A0", VA = "0xF351A0")]
		public ES3UserType_PlanetData()
		{
		}

		[Token(Token = "0x6001C01")]
		[Address(RVA = "0xF35264", Offset = "0xF35264", VA = "0xF35264", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001C02")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004BE")]
	public class ES3UserType_PlanetDataArray : ES3ArrayType
	{
		[Token(Token = "0x40017FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001C04")]
		[Address(RVA = "0xF355A4", Offset = "0xF355A4", VA = "0xF355A4")]
		public ES3UserType_PlanetDataArray()
		{
		}
	}
	[Token(Token = "0x20004BF")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBE768", Offset = "0xCBE768")]
	public class ES3UserType_RecipeData : ES3ScriptableObjectType
	{
		[Token(Token = "0x40017FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001C05")]
		[Address(RVA = "0xF35680", Offset = "0xF35680", VA = "0xF35680")]
		public ES3UserType_RecipeData()
		{
		}

		[Token(Token = "0x6001C06")]
		[Address(RVA = "0xF35744", Offset = "0xF35744", VA = "0xF35744", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001C07")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004C0")]
	public class ES3UserType_RecipeDataArray : ES3ArrayType
	{
		[Token(Token = "0x40017FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001C09")]
		[Address(RVA = "0xF35AAC", Offset = "0xF35AAC", VA = "0xF35AAC")]
		public ES3UserType_RecipeDataArray()
		{
		}
	}
	[Token(Token = "0x20004C1")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBE930", Offset = "0xCBE930")]
	public class ES3UserType_SolarSystemData : ES3ScriptableObjectType
	{
		[Token(Token = "0x40017FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001C0A")]
		[Address(RVA = "0xF35B88", Offset = "0xF35B88", VA = "0xF35B88")]
		public ES3UserType_SolarSystemData()
		{
		}

		[Token(Token = "0x6001C0B")]
		[Address(RVA = "0xF35C4C", Offset = "0xF35C4C", VA = "0xF35C4C", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001C0C")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004C2")]
	public class ES3UserType_SolarSystemDataArray : ES3ArrayType
	{
		[Token(Token = "0x4001800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001C0E")]
		[Address(RVA = "0xF361F8", Offset = "0xF361F8", VA = "0xF361F8")]
		public ES3UserType_SolarSystemDataArray()
		{
		}
	}
	[Token(Token = "0x20004C3")]
	[Preserve]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0xCBEB84", Offset = "0xCBEB84")]
	public class ES3UserType_WandData : ES3ScriptableObjectType
	{
		[Token(Token = "0x4001801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001C0F")]
		[Address(RVA = "0xF362D4", Offset = "0xF362D4", VA = "0xF362D4")]
		public ES3UserType_WandData()
		{
		}

		[Token(Token = "0x6001C10")]
		[Address(RVA = "0xF36398", Offset = "0xF36398", VA = "0xF36398", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6001C11")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20004C4")]
	public class ES3UserType_WandDataArray : ES3ArrayType
	{
		[Token(Token = "0x4001802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6001C13")]
		[Address(RVA = "0xF36524", Offset = "0xF36524", VA = "0xF36524")]
		public ES3UserType_WandDataArray()
		{
		}
	}
}
namespace DeltaDNA
{
	[Token(Token = "0x20004C5")]
	public abstract class Ad
	{
		[Token(Token = "0x4001803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected Engagement engagement;

		[Token(Token = "0x170002A6")]
		public string DecisionPoint
		{
			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xF77D94", Offset = "0xF77D94", VA = "0xF77D94")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A7")]
		public Engagement Engagement
		{
			[Token(Token = "0x6001C18")]
			[Address(RVA = "0xF77DE8", Offset = "0xF77DE8", VA = "0xF77DE8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A8")]
		public Dictionary<string, object> EngageParams
		{
			[Token(Token = "0x6001C19")]
			[Address(RVA = "0xF77DF0", Offset = "0xF77DF0", VA = "0xF77DF0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002A9")]
		public DateTime? LastShown
		{
			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xF77E9C", Offset = "0xF77E9C", VA = "0xF77E9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002AA")]
		public long AdShowWaitSecs
		{
			[Token(Token = "0x6001C1B")]
			[Address(RVA = "0xF77FA0", Offset = "0xF77FA0", VA = "0xF77FA0")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170002AB")]
		public long SessionCount
		{
			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xF78004", Offset = "0xF78004", VA = "0xF78004")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170002AC")]
		public long SessionLimit
		{
			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0xF7810C", Offset = "0xF7810C", VA = "0xF7810C")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170002AD")]
		public long DailyCount
		{
			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0xF78170", Offset = "0xF78170", VA = "0xF78170")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x170002AE")]
		public long DailyLimit
		{
			[Token(Token = "0x6001C1F")]
			[Address(RVA = "0xF78278", Offset = "0xF78278", VA = "0xF78278")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x6001C14")]
		[Address(RVA = "0xF77D60", Offset = "0xF77D60", VA = "0xF77D60")]
		protected Ad(Engagement engagement)
		{
		}

		[Token(Token = "0x6001C15")]
		public abstract bool IsReady();

		[Token(Token = "0x6001C16")]
		public abstract void Show();
	}
	[Token(Token = "0x20004C6")]
	public class InterstitialAd : Ad
	{
		[Token(Token = "0x14000014")]
		public event Action<InterstitialAd> OnInterstitialAdOpened
		{
			[Token(Token = "0x6001C20")]
			[Address(RVA = "0x1163368", Offset = "0x1163368", VA = "0x1163368")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2B24", Offset = "0xCD2B24")]
			add
			{
			}
			[Token(Token = "0x6001C21")]
			[Address(RVA = "0x116340C", Offset = "0x116340C", VA = "0x116340C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2B34", Offset = "0xCD2B34")]
			remove
			{
			}
		}

		[Token(Token = "0x14000015")]
		public event Action<InterstitialAd, string> OnInterstitialAdFailedToOpen
		{
			[Token(Token = "0x6001C22")]
			[Address(RVA = "0x11634B0", Offset = "0x11634B0", VA = "0x11634B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2B44", Offset = "0xCD2B44")]
			add
			{
			}
			[Token(Token = "0x6001C23")]
			[Address(RVA = "0x1163554", Offset = "0x1163554", VA = "0x1163554")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2B54", Offset = "0xCD2B54")]
			remove
			{
			}
		}

		[Token(Token = "0x14000016")]
		public event Action<InterstitialAd> OnInterstitialAdClosed
		{
			[Token(Token = "0x6001C24")]
			[Address(RVA = "0x11635F8", Offset = "0x11635F8", VA = "0x11635F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2B64", Offset = "0xCD2B64")]
			add
			{
			}
			[Token(Token = "0x6001C25")]
			[Address(RVA = "0x116369C", Offset = "0x116369C", VA = "0x116369C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2B74", Offset = "0xCD2B74")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C26")]
		[Address(RVA = "0x1163740", Offset = "0x1163740", VA = "0x1163740")]
		private InterstitialAd(Engagement engagement)
		{
		}

		[Token(Token = "0x6001C27")]
		[Address(RVA = "0x1163748", Offset = "0x1163748", VA = "0x1163748")]
		public static InterstitialAd Create()
		{
			return null;
		}

		[Token(Token = "0x6001C28")]
		[Address(RVA = "0x1163938", Offset = "0x1163938", VA = "0x1163938")]
		public static InterstitialAd Create(Engagement engagement)
		{
			return null;
		}

		[Token(Token = "0x6001C29")]
		[Address(RVA = "0x11638AC", Offset = "0x11638AC", VA = "0x11638AC")]
		internal static InterstitialAd CreateUnchecked(Engagement engagement)
		{
			return null;
		}

		[Token(Token = "0x6001C2A")]
		[Address(RVA = "0x11639D4", Offset = "0x11639D4", VA = "0x11639D4", Slot = "4")]
		public override bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C2B")]
		[Address(RVA = "0x1163B78", Offset = "0x1163B78", VA = "0x1163B78", Slot = "5")]
		public override void Show()
		{
		}

		[Token(Token = "0x6001C2C")]
		[Address(RVA = "0x1164298", Offset = "0x1164298", VA = "0x1164298")]
		private void OnInterstitialAdOpenedHandler()
		{
		}

		[Token(Token = "0x6001C2D")]
		[Address(RVA = "0x11643D4", Offset = "0x11643D4", VA = "0x11643D4")]
		private void OnInterstitialAdFailedToOpenHandler(string reason)
		{
		}

		[Token(Token = "0x6001C2E")]
		[Address(RVA = "0x1164568", Offset = "0x1164568", VA = "0x1164568")]
		private void OnInterstitialAdClosedHandler()
		{
		}
	}
	[Token(Token = "0x20004C7")]
	public class RewardedAd : Ad
	{
		[Token(Token = "0x2000666")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF85C", Offset = "0xCBF85C")]
		private sealed class <NotifyOnLoadedDelayable>d__27 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001E9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001E9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public RewardedAd <>4__this;

			[Token(Token = "0x4001EA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float waitFor;

			[Token(Token = "0x170003D0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023E8")]
				[Address(RVA = "0x1169C44", Offset = "0x1169C44", VA = "0x1169C44", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023EA")]
				[Address(RVA = "0x1169CAC", Offset = "0x1169CAC", VA = "0x1169CAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023E5")]
			[Address(RVA = "0x116966C", Offset = "0x116966C", VA = "0x116966C")]
			[DebuggerHidden]
			public <NotifyOnLoadedDelayable>d__27(int <>1__state)
			{
			}

			[Token(Token = "0x60023E6")]
			[Address(RVA = "0x1169B10", Offset = "0x1169B10", VA = "0x1169B10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023E7")]
			[Address(RVA = "0x1169B14", Offset = "0x1169B14", VA = "0x1169B14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023E9")]
			[Address(RVA = "0x1169C4C", Offset = "0x1169C4C", VA = "0x1169C4C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool waitingToLoad;

		[Token(Token = "0x170002AF")]
		public string RewardType
		{
			[Token(Token = "0x6001C3F")]
			[Address(RVA = "0x1169300", Offset = "0x1169300", VA = "0x1169300")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B0")]
		public long RewardAmount
		{
			[Token(Token = "0x6001C40")]
			[Address(RVA = "0x1169388", Offset = "0x1169388", VA = "0x1169388")]
			get
			{
				return default(long);
			}
		}

		[Token(Token = "0x14000017")]
		public event Action<RewardedAd> OnRewardedAdLoaded
		{
			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0x1167CF8", Offset = "0x1167CF8", VA = "0x1167CF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2B84", Offset = "0xCD2B84")]
			add
			{
			}
			[Token(Token = "0x6001C30")]
			[Address(RVA = "0x1167D9C", Offset = "0x1167D9C", VA = "0x1167D9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2B94", Offset = "0xCD2B94")]
			remove
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event Action<RewardedAd> OnRewardedAdExpired
		{
			[Token(Token = "0x6001C31")]
			[Address(RVA = "0x1167E40", Offset = "0x1167E40", VA = "0x1167E40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2BA4", Offset = "0xCD2BA4")]
			add
			{
			}
			[Token(Token = "0x6001C32")]
			[Address(RVA = "0x1167EE4", Offset = "0x1167EE4", VA = "0x1167EE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2BB4", Offset = "0xCD2BB4")]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event Action<RewardedAd> OnRewardedAdOpened
		{
			[Token(Token = "0x6001C33")]
			[Address(RVA = "0x1167F88", Offset = "0x1167F88", VA = "0x1167F88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2BC4", Offset = "0xCD2BC4")]
			add
			{
			}
			[Token(Token = "0x6001C34")]
			[Address(RVA = "0x116802C", Offset = "0x116802C", VA = "0x116802C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2BD4", Offset = "0xCD2BD4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event Action<RewardedAd, string> OnRewardedAdFailedToOpen
		{
			[Token(Token = "0x6001C35")]
			[Address(RVA = "0x11680D0", Offset = "0x11680D0", VA = "0x11680D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2BE4", Offset = "0xCD2BE4")]
			add
			{
			}
			[Token(Token = "0x6001C36")]
			[Address(RVA = "0x1168174", Offset = "0x1168174", VA = "0x1168174")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2BF4", Offset = "0xCD2BF4")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event Action<RewardedAd, bool> OnRewardedAdClosed
		{
			[Token(Token = "0x6001C37")]
			[Address(RVA = "0x1168218", Offset = "0x1168218", VA = "0x1168218")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2C04", Offset = "0xCD2C04")]
			add
			{
			}
			[Token(Token = "0x6001C38")]
			[Address(RVA = "0x11682BC", Offset = "0x11682BC", VA = "0x11682BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2C14", Offset = "0xCD2C14")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C39")]
		[Address(RVA = "0x1168360", Offset = "0x1168360", VA = "0x1168360")]
		private RewardedAd(Engagement engagement)
		{
		}

		[Token(Token = "0x6001C3A")]
		[Address(RVA = "0x11687AC", Offset = "0x11687AC", VA = "0x11687AC")]
		public static RewardedAd Create()
		{
			return null;
		}

		[Token(Token = "0x6001C3B")]
		[Address(RVA = "0x1168998", Offset = "0x1168998", VA = "0x1168998")]
		public static RewardedAd Create(Engagement engagement)
		{
			return null;
		}

		[Token(Token = "0x6001C3C")]
		[Address(RVA = "0x1168910", Offset = "0x1168910", VA = "0x1168910")]
		internal static RewardedAd CreateUnchecked(Engagement engagement)
		{
			return null;
		}

		[Token(Token = "0x6001C3D")]
		[Address(RVA = "0x1168A34", Offset = "0x1168A34", VA = "0x1168A34", Slot = "4")]
		public override bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C3E")]
		[Address(RVA = "0x1168BD8", Offset = "0x1168BD8", VA = "0x1168BD8", Slot = "5")]
		public override void Show()
		{
		}

		[Token(Token = "0x6001C41")]
		[Address(RVA = "0x11693F0", Offset = "0x11693F0", VA = "0x11693F0")]
		private void NotifyOnLoaded()
		{
		}

		[Token(Token = "0x6001C42")]
		[Address(RVA = "0x11695E0", Offset = "0x11695E0", VA = "0x11695E0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD2C24", Offset = "0xCD2C24")]
		private IEnumerator NotifyOnLoadedDelayable(float waitFor)
		{
			return null;
		}

		[Token(Token = "0x6001C43")]
		[Address(RVA = "0x1169698", Offset = "0x1169698", VA = "0x1169698")]
		private void NotifyOnOpened(string decisionPoint)
		{
		}

		[Token(Token = "0x6001C44")]
		[Address(RVA = "0x1169738", Offset = "0x1169738", VA = "0x1169738")]
		private void OnRewaredAdOpenedHandler()
		{
		}

		[Token(Token = "0x6001C45")]
		[Address(RVA = "0x1169874", Offset = "0x1169874", VA = "0x1169874")]
		private void OnRewardedAdFailedToOpenHandler(string reason)
		{
		}

		[Token(Token = "0x6001C46")]
		[Address(RVA = "0x1169A18", Offset = "0x1169A18", VA = "0x1169A18")]
		private void OnRewardedAdClosedHandler(bool reward)
		{
		}
	}
	[Token(Token = "0x20004C8")]
	public class SmartAds : Singleton<SmartAds>
	{
		[Token(Token = "0x2000667")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF86C", Offset = "0xCBF86C")]
		private sealed class <>c__DisplayClass52_0
		{
			[Token(Token = "0x4001EA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string reason;

			[Token(Token = "0x4001EA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SmartAds <>4__this;

			[Token(Token = "0x60023EB")]
			[Address(RVA = "0x116AAF0", Offset = "0x116AAF0", VA = "0x116AAF0")]
			public <>c__DisplayClass52_0()
			{
			}

			[Token(Token = "0x60023EC")]
			[Address(RVA = "0x116BB30", Offset = "0x116BB30", VA = "0x116BB30")]
			internal void <DidFailToRegisterForInterstitialAds>b__0()
			{
			}
		}

		[Token(Token = "0x2000668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF87C", Offset = "0xCBF87C")]
		private sealed class <>c__DisplayClass54_0
		{
			[Token(Token = "0x4001EA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string reason;

			[Token(Token = "0x4001EA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SmartAds <>4__this;

			[Token(Token = "0x60023ED")]
			[Address(RVA = "0x116AC54", Offset = "0x116AC54", VA = "0x116AC54")]
			public <>c__DisplayClass54_0()
			{
			}

			[Token(Token = "0x60023EE")]
			[Address(RVA = "0x116BBE8", Offset = "0x116BBE8", VA = "0x116BBE8")]
			internal void <DidFailToOpenInterstitialAd>b__0()
			{
			}
		}

		[Token(Token = "0x2000669")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF88C", Offset = "0xCBF88C")]
		private sealed class <>c__DisplayClass57_0
		{
			[Token(Token = "0x4001EA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string reason;

			[Token(Token = "0x4001EA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SmartAds <>4__this;

			[Token(Token = "0x60023EF")]
			[Address(RVA = "0x116AE40", Offset = "0x116AE40", VA = "0x116AE40")]
			public <>c__DisplayClass57_0()
			{
			}

			[Token(Token = "0x60023F0")]
			[Address(RVA = "0x116BCA0", Offset = "0x116BCA0", VA = "0x116BCA0")]
			internal void <DidFailToRegisterForRewardedAds>b__0()
			{
			}
		}

		[Token(Token = "0x200066A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF89C", Offset = "0xCBF89C")]
		private sealed class <>c__DisplayClass59_0
		{
			[Token(Token = "0x4001EA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string decisionPoint;

			[Token(Token = "0x4001EA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SmartAds <>4__this;

			[Token(Token = "0x60023F1")]
			[Address(RVA = "0x116AFB0", Offset = "0x116AFB0", VA = "0x116AFB0")]
			public <>c__DisplayClass59_0()
			{
			}

			[Token(Token = "0x60023F2")]
			[Address(RVA = "0x116BD58", Offset = "0x116BD58", VA = "0x116BD58")]
			internal void <DidOpenRewardedAd>b__0()
			{
			}
		}

		[Token(Token = "0x200066B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF8AC", Offset = "0xCBF8AC")]
		private sealed class <>c__DisplayClass60_0
		{
			[Token(Token = "0x4001EAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string reason;

			[Token(Token = "0x4001EAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SmartAds <>4__this;

			[Token(Token = "0x60023F3")]
			[Address(RVA = "0x116B08C", Offset = "0x116B08C", VA = "0x116B08C")]
			public <>c__DisplayClass60_0()
			{
			}

			[Token(Token = "0x60023F4")]
			[Address(RVA = "0x116BE28", Offset = "0x116BE28", VA = "0x116BE28")]
			internal void <DidFailToOpenRewardedAd>b__0()
			{
			}
		}

		[Token(Token = "0x200066C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF8BC", Offset = "0xCBF8BC")]
		private sealed class <>c__DisplayClass61_0
		{
			[Token(Token = "0x4001EAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string rewardJSON;

			[Token(Token = "0x4001EAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public SmartAds <>4__this;

			[Token(Token = "0x60023F5")]
			[Address(RVA = "0x116B168", Offset = "0x116B168", VA = "0x116B168")]
			public <>c__DisplayClass61_0()
			{
			}

			[Token(Token = "0x60023F6")]
			[Address(RVA = "0x116BEE0", Offset = "0x116BEE0", VA = "0x116BEE0")]
			internal void <DidCloseRewardedAd>b__0()
			{
			}
		}

		[Token(Token = "0x200066D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF8CC", Offset = "0xCBF8CC")]
		private sealed class <>c__DisplayClass62_0
		{
			[Token(Token = "0x4001EAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string message;

			[Token(Token = "0x60023F7")]
			[Address(RVA = "0x116B234", Offset = "0x116B234", VA = "0x116B234")]
			public <>c__DisplayClass62_0()
			{
			}

			[Token(Token = "0x60023F8")]
			[Address(RVA = "0x116C0E8", Offset = "0x116C0E8", VA = "0x116C0E8")]
			internal void <RecordEvent>b__0()
			{
			}
		}

		[Token(Token = "0x400180D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private ISmartAdsManager manager;

		[Token(Token = "0x400180E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ConcurrentQueue<System.Action> actions;

		[Token(Token = "0x400180F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private EngageCache engageCache;

		[Token(Token = "0x1400001C")]
		internal event Action<string> OnRewardedAdOpenedWithDecisionPoint
		{
			[Token(Token = "0x6001C47")]
			[Address(RVA = "0x1168708", Offset = "0x1168708", VA = "0x1168708")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2C88", Offset = "0xCD2C88")]
			add
			{
			}
			[Token(Token = "0x6001C48")]
			[Address(RVA = "0x1168664", Offset = "0x1168664", VA = "0x1168664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2C98", Offset = "0xCD2C98")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event System.Action OnDidRegisterForInterstitialAds
		{
			[Token(Token = "0x6001C4B")]
			[Address(RVA = "0x116A228", Offset = "0x116A228", VA = "0x116A228")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2CA8", Offset = "0xCD2CA8")]
			add
			{
			}
			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0x116A2CC", Offset = "0x116A2CC", VA = "0x116A2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2CB8", Offset = "0xCD2CB8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event Action<string> OnDidFailToRegisterForInterstitialAds
		{
			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0x116A370", Offset = "0x116A370", VA = "0x116A370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2CC8", Offset = "0xCD2CC8")]
			add
			{
			}
			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0x116A414", Offset = "0x116A414", VA = "0x116A414")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2CD8", Offset = "0xCD2CD8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event System.Action OnDidRegisterForRewardedAds
		{
			[Token(Token = "0x6001C4F")]
			[Address(RVA = "0x116A4B8", Offset = "0x116A4B8", VA = "0x116A4B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2CE8", Offset = "0xCD2CE8")]
			add
			{
			}
			[Token(Token = "0x6001C50")]
			[Address(RVA = "0x116A55C", Offset = "0x116A55C", VA = "0x116A55C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2CF8", Offset = "0xCD2CF8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<string> OnDidFailToRegisterForRewardedAds
		{
			[Token(Token = "0x6001C51")]
			[Address(RVA = "0x116A600", Offset = "0x116A600", VA = "0x116A600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2D08", Offset = "0xCD2D08")]
			add
			{
			}
			[Token(Token = "0x6001C52")]
			[Address(RVA = "0x116A6A4", Offset = "0x116A6A4", VA = "0x116A6A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2D18", Offset = "0xCD2D18")]
			remove
			{
			}
		}

		[Token(Token = "0x14000021")]
		public event System.Action OnInterstitialAdOpened
		{
			[Token(Token = "0x6001C53")]
			[Address(RVA = "0x1163EA0", Offset = "0x1163EA0", VA = "0x1163EA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2D28", Offset = "0xCD2D28")]
			add
			{
			}
			[Token(Token = "0x6001C54")]
			[Address(RVA = "0x1163DFC", Offset = "0x1163DFC", VA = "0x1163DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2D38", Offset = "0xCD2D38")]
			remove
			{
			}
		}

		[Token(Token = "0x14000022")]
		public event Action<string> OnInterstitialAdFailedToOpen
		{
			[Token(Token = "0x6001C55")]
			[Address(RVA = "0x1163FE8", Offset = "0x1163FE8", VA = "0x1163FE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2D48", Offset = "0xCD2D48")]
			add
			{
			}
			[Token(Token = "0x6001C56")]
			[Address(RVA = "0x1163F44", Offset = "0x1163F44", VA = "0x1163F44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2D58", Offset = "0xCD2D58")]
			remove
			{
			}
		}

		[Token(Token = "0x14000023")]
		public event System.Action OnInterstitialAdClosed
		{
			[Token(Token = "0x6001C57")]
			[Address(RVA = "0x1164130", Offset = "0x1164130", VA = "0x1164130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2D68", Offset = "0xCD2D68")]
			add
			{
			}
			[Token(Token = "0x6001C58")]
			[Address(RVA = "0x116408C", Offset = "0x116408C", VA = "0x116408C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2D78", Offset = "0xCD2D78")]
			remove
			{
			}
		}

		[Token(Token = "0x14000024")]
		public event System.Action OnRewardedAdLoaded
		{
			[Token(Token = "0x6001C59")]
			[Address(RVA = "0x11685C0", Offset = "0x11685C0", VA = "0x11685C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2D88", Offset = "0xCD2D88")]
			add
			{
			}
			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0x116851C", Offset = "0x116851C", VA = "0x116851C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2D98", Offset = "0xCD2D98")]
			remove
			{
			}
		}

		[Token(Token = "0x14000025")]
		public event System.Action OnRewardedAdOpened
		{
			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0x1168F08", Offset = "0x1168F08", VA = "0x1168F08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2DA8", Offset = "0xCD2DA8")]
			add
			{
			}
			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0x1168E64", Offset = "0x1168E64", VA = "0x1168E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2DB8", Offset = "0xCD2DB8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000026")]
		public event Action<string> OnRewardedAdFailedToOpen
		{
			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0x1169050", Offset = "0x1169050", VA = "0x1169050")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2DC8", Offset = "0xCD2DC8")]
			add
			{
			}
			[Token(Token = "0x6001C5E")]
			[Address(RVA = "0x1168FAC", Offset = "0x1168FAC", VA = "0x1168FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2DD8", Offset = "0xCD2DD8")]
			remove
			{
			}
		}

		[Token(Token = "0x14000027")]
		public event Action<bool> OnRewardedAdClosed
		{
			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0x1169198", Offset = "0x1169198", VA = "0x1169198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2DE8", Offset = "0xCD2DE8")]
			add
			{
			}
			[Token(Token = "0x6001C60")]
			[Address(RVA = "0x11690F4", Offset = "0x11690F4", VA = "0x11690F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2DF8", Offset = "0xCD2DF8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C49")]
		[Address(RVA = "0x116A15C", Offset = "0x116A15C", VA = "0x116A15C")]
		internal SmartAds()
		{
		}

		[Token(Token = "0x6001C4A")]
		[Address(RVA = "0x116A200", Offset = "0x116A200", VA = "0x116A200")]
		internal SmartAds Config(EngageCache engageCache)
		{
			return null;
		}

		[Token(Token = "0x6001C61")]
		[Address(RVA = "0x11637E0", Offset = "0x11637E0", VA = "0x11637E0")]
		internal bool IsInterstitialAdAllowed(Engagement engagement, bool checkTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C62")]
		[Address(RVA = "0x1168844", Offset = "0x1168844", VA = "0x1168844")]
		internal bool IsRewardedAdAllowed(Engagement engagement, bool checkTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001C63")]
		[Address(RVA = "0x116951C", Offset = "0x116951C", VA = "0x116951C")]
		internal long TimeUntilRewardedAdAllowed(Engagement engagement)
		{
			return default(long);
		}

		[Token(Token = "0x6001C64")]
		[Address(RVA = "0x1163AC4", Offset = "0x1163AC4", VA = "0x1163AC4")]
		internal bool HasLoadedInterstitialAd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C65")]
		[Address(RVA = "0x1168B24", Offset = "0x1168B24", VA = "0x1168B24")]
		internal bool HasLoadedRewardedAd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001C66")]
		[Address(RVA = "0x11641D4", Offset = "0x11641D4", VA = "0x11641D4")]
		internal void ShowInterstitialAd(Engagement engagement)
		{
		}

		[Token(Token = "0x6001C67")]
		[Address(RVA = "0x116923C", Offset = "0x116923C", VA = "0x116923C")]
		internal void ShowRewardedAd(Engagement engagement)
		{
		}

		[Token(Token = "0x6001C68")]
		[Address(RVA = "0x116A748", Offset = "0x116A748", VA = "0x116A748")]
		internal DateTime? GetLastShown(string decisionPoint)
		{
			return null;
		}

		[Token(Token = "0x6001C69")]
		[Address(RVA = "0x116A80C", Offset = "0x116A80C", VA = "0x116A80C")]
		internal long GetSessionCount(string decisionPoint)
		{
			return default(long);
		}

		[Token(Token = "0x6001C6A")]
		[Address(RVA = "0x116A8D0", Offset = "0x116A8D0", VA = "0x116A8D0")]
		internal long GetDailyCount(string decisionPoint)
		{
			return default(long);
		}

		[Token(Token = "0x6001C6B")]
		[Address(RVA = "0x116A994", Offset = "0x116A994", VA = "0x116A994")]
		internal void DidRegisterForInterstitialAds()
		{
		}

		[Token(Token = "0x6001C6C")]
		[Address(RVA = "0x116AA1C", Offset = "0x116AA1C", VA = "0x116AA1C")]
		internal void DidFailToRegisterForInterstitialAds(string reason)
		{
		}

		[Token(Token = "0x6001C6D")]
		[Address(RVA = "0x116AAF8", Offset = "0x116AAF8", VA = "0x116AAF8")]
		internal void DidOpenInterstitialAd()
		{
		}

		[Token(Token = "0x6001C6E")]
		[Address(RVA = "0x116AB80", Offset = "0x116AB80", VA = "0x116AB80")]
		internal void DidFailToOpenInterstitialAd(string reason)
		{
		}

		[Token(Token = "0x6001C6F")]
		[Address(RVA = "0x116AC5C", Offset = "0x116AC5C", VA = "0x116AC5C")]
		internal void DidCloseInterstitialAd()
		{
		}

		[Token(Token = "0x6001C70")]
		[Address(RVA = "0x116ACE4", Offset = "0x116ACE4", VA = "0x116ACE4")]
		internal void DidRegisterForRewardedAds()
		{
		}

		[Token(Token = "0x6001C71")]
		[Address(RVA = "0x116AD6C", Offset = "0x116AD6C", VA = "0x116AD6C")]
		internal void DidFailToRegisterForRewardedAds(string reason)
		{
		}

		[Token(Token = "0x6001C72")]
		[Address(RVA = "0x116AE48", Offset = "0x116AE48", VA = "0x116AE48")]
		internal void DidLoadRewardedAd()
		{
		}

		[Token(Token = "0x6001C73")]
		[Address(RVA = "0x116AEDC", Offset = "0x116AEDC", VA = "0x116AEDC")]
		internal void DidOpenRewardedAd(string decisionPoint)
		{
		}

		[Token(Token = "0x6001C74")]
		[Address(RVA = "0x116AFB8", Offset = "0x116AFB8", VA = "0x116AFB8")]
		internal void DidFailToOpenRewardedAd(string reason)
		{
		}

		[Token(Token = "0x6001C75")]
		[Address(RVA = "0x116B094", Offset = "0x116B094", VA = "0x116B094")]
		internal void DidCloseRewardedAd(string rewardJSON)
		{
		}

		[Token(Token = "0x6001C76")]
		[Address(RVA = "0x116B170", Offset = "0x116B170", VA = "0x116B170")]
		internal void RecordEvent(string message)
		{
		}

		[Token(Token = "0x6001C77")]
		[Address(RVA = "0x116B23C", Offset = "0x116B23C", VA = "0x116B23C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001C78")]
		[Address(RVA = "0x116B2D4", Offset = "0x116B2D4", VA = "0x116B2D4")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001C79")]
		[Address(RVA = "0x116B3E4", Offset = "0x116B3E4", VA = "0x116B3E4", Slot = "4")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001C7A")]
		[Address(RVA = "0x116B4A8", Offset = "0x116B4A8", VA = "0x116B4A8")]
		private void CreateManager()
		{
		}

		[Token(Token = "0x6001C7B")]
		[Address(RVA = "0x116B710", Offset = "0x116B710", VA = "0x116B710")]
		internal void RegisterForAdsInternal(Dictionary<string, object> config)
		{
		}

		[Token(Token = "0x6001C7C")]
		[Address(RVA = "0x116B888", Offset = "0x116B888", VA = "0x116B888")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2E08", Offset = "0xCD2E08")]
		private void <DidRegisterForInterstitialAds>b__51_0()
		{
		}

		[Token(Token = "0x6001C7D")]
		[Address(RVA = "0x116B910", Offset = "0x116B910", VA = "0x116B910")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2E18", Offset = "0xCD2E18")]
		private void <DidOpenInterstitialAd>b__53_0()
		{
		}

		[Token(Token = "0x6001C7E")]
		[Address(RVA = "0x116B998", Offset = "0x116B998", VA = "0x116B998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2E28", Offset = "0xCD2E28")]
		private void <DidCloseInterstitialAd>b__55_0()
		{
		}

		[Token(Token = "0x6001C7F")]
		[Address(RVA = "0x116BA20", Offset = "0x116BA20", VA = "0x116BA20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2E38", Offset = "0xCD2E38")]
		private void <DidRegisterForRewardedAds>b__56_0()
		{
		}

		[Token(Token = "0x6001C80")]
		[Address(RVA = "0x116BAA8", Offset = "0x116BAA8", VA = "0x116BAA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2E48", Offset = "0xCD2E48")]
		private void <DidLoadRewardedAd>b__58_0()
		{
		}
	}
	[Token(Token = "0x20004C9")]
	public class DDNA : Singleton<DDNA>
	{
		[Token(Token = "0x400181C")]
		internal const string PF_KEY_USER_ID = "DDSDK_USER_ID";

		[Token(Token = "0x400181D")]
		internal const string PF_KEY_FIRST_SESSION = "DDSDK_FIRST_SESSION";

		[Token(Token = "0x400181E")]
		internal const string PF_KEY_LAST_SESSION = "DDSDK_LAST_SESSION";

		[Token(Token = "0x400181F")]
		internal const string PF_KEY_CROSS_GAME_USER_ID = "DDSDK_CROSS_GAME_USER_ID";

		[Token(Token = "0x4001820")]
		internal const string PF_KEY_ADVERTISING_ID = "DDSDK_ADVERTISING_ID";

		[Token(Token = "0x4001821")]
		internal const string PF_KEY_FORGET_ME = "DDSDK_FORGET_ME";

		[Token(Token = "0x4001822")]
		internal const string PF_KEY_STOP_TRACKING_ME = "DDSKD_STOP_TRACKING_ME";

		[Token(Token = "0x4001823")]
		internal const string PF_KEY_FORGOTTEN = "DDSK_FORGOTTEN";

		[Token(Token = "0x4001824")]
		internal const string PF_KEY_ACTIONS_SALT = "DDSDK_ACTIONS_SALT";

		[Token(Token = "0x4001825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x400182B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private DDNABase delegated;

		[Token(Token = "0x400182C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string collectURL;

		[Token(Token = "0x400182D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string engageURL;

		[Token(Token = "0x400182E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCECC", Offset = "0xCCCECC")]
		private Settings <Settings>k__BackingField;

		[Token(Token = "0x400182F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCEDC", Offset = "0xCCCEDC")]
		private AndroidNotifications <AndroidNotifications>k__BackingField;

		[Token(Token = "0x4001830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCEEC", Offset = "0xCCCEEC")]
		private IosNotifications <IosNotifications>k__BackingField;

		[Token(Token = "0x4001831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCEFC", Offset = "0xCCCEFC")]
		private string <EnvironmentKey>k__BackingField;

		[Token(Token = "0x4001832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCF0C", Offset = "0xCCCF0C")]
		private string <SessionID>k__BackingField;

		[Token(Token = "0x4001833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCF1C", Offset = "0xCCCF1C")]
		private string <HashSecret>k__BackingField;

		[Token(Token = "0x4001834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCF2C", Offset = "0xCCCF2C")]
		private string <ClientVersion>k__BackingField;

		[Token(Token = "0x4001835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCF3C", Offset = "0xCCCF3C")]
		private string <Platform>k__BackingField;

		[Token(Token = "0x170002B1")]
		public Settings Settings
		{
			[Token(Token = "0x6001CA6")]
			[Address(RVA = "0x16658B4", Offset = "0x16658B4", VA = "0x16658B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2F68", Offset = "0xCD2F68")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0x16658BC", Offset = "0x16658BC", VA = "0x16658BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2F78", Offset = "0xCD2F78")]
			set
			{
			}
		}

		[Token(Token = "0x170002B2")]
		public AndroidNotifications AndroidNotifications
		{
			[Token(Token = "0x6001CA8")]
			[Address(RVA = "0x16658C4", Offset = "0x16658C4", VA = "0x16658C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2F88", Offset = "0xCD2F88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0x16658CC", Offset = "0x16658CC", VA = "0x16658CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2F98", Offset = "0xCD2F98")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B3")]
		public IosNotifications IosNotifications
		{
			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0x16658D4", Offset = "0x16658D4", VA = "0x16658D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2FA8", Offset = "0xCD2FA8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0x16658DC", Offset = "0x16658DC", VA = "0x16658DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2FB8", Offset = "0xCD2FB8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B4")]
		public EngageFactory EngageFactory
		{
			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0x165ECBC", Offset = "0x165ECBC", VA = "0x165ECBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002B5")]
		public string EnvironmentKey
		{
			[Token(Token = "0x6001CAD")]
			[Address(RVA = "0x16658E4", Offset = "0x16658E4", VA = "0x16658E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2FC8", Offset = "0xCD2FC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0x16658EC", Offset = "0x16658EC", VA = "0x16658EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2FD8", Offset = "0xCD2FD8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B6")]
		public string CollectURL
		{
			[Token(Token = "0x6001CAF")]
			[Address(RVA = "0x16658F4", Offset = "0x16658F4", VA = "0x16658F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0x1665360", Offset = "0x1665360", VA = "0x1665360")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B7")]
		public string EngageURL
		{
			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0x16658FC", Offset = "0x16658FC", VA = "0x16658FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0x1665394", Offset = "0x1665394", VA = "0x1665394")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B8")]
		public string SessionID
		{
			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0x1665904", Offset = "0x1665904", VA = "0x1665904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2FE8", Offset = "0xCD2FE8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB4")]
			[Address(RVA = "0x166590C", Offset = "0x166590C", VA = "0x166590C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2FF8", Offset = "0xCD2FF8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002B9")]
		public string UserID
		{
			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0x1665200", Offset = "0x1665200", VA = "0x1665200")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CB6")]
			[Address(RVA = "0x16652E8", Offset = "0x16652E8", VA = "0x16652E8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002BA")]
		public bool HasStarted
		{
			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0x165E020", Offset = "0x165E020", VA = "0x165E020")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BB")]
		public bool IsUploading
		{
			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0x1665914", Offset = "0x1665914", VA = "0x1665914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002BC")]
		public string HashSecret
		{
			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0x1665938", Offset = "0x1665938", VA = "0x1665938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3008", Offset = "0xCD3008")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBA")]
			[Address(RVA = "0x1665940", Offset = "0x1665940", VA = "0x1665940")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3018", Offset = "0xCD3018")]
			set
			{
			}
		}

		[Token(Token = "0x170002BD")]
		public string ClientVersion
		{
			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0x1665948", Offset = "0x1665948", VA = "0x1665948")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3028", Offset = "0xCD3028")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBC")]
			[Address(RVA = "0x1665950", Offset = "0x1665950", VA = "0x1665950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3038", Offset = "0xCD3038")]
			set
			{
			}
		}

		[Token(Token = "0x170002BE")]
		public string Platform
		{
			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0x1665958", Offset = "0x1665958", VA = "0x1665958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3048", Offset = "0xCD3048")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0x1665960", Offset = "0x1665960", VA = "0x1665960")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3058", Offset = "0xCD3058")]
			set
			{
			}
		}

		[Token(Token = "0x170002BF")]
		public string CrossGameUserID
		{
			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0x1665968", Offset = "0x1665968", VA = "0x1665968")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC0")]
			[Address(RVA = "0x166598C", Offset = "0x166598C", VA = "0x166598C")]
			set
			{
			}
		}

		[Token(Token = "0x170002C0")]
		public string AndroidRegistrationID
		{
			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0x16659B0", Offset = "0x16659B0", VA = "0x16659B0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC2")]
			[Address(RVA = "0x165CFF0", Offset = "0x165CFF0", VA = "0x165CFF0")]
			set
			{
			}
		}

		[Token(Token = "0x170002C1")]
		public string PushNotificationToken
		{
			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0x16659D4", Offset = "0x16659D4", VA = "0x16659D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0x16659F8", Offset = "0x16659F8", VA = "0x16659F8")]
			set
			{
			}
		}

		[Token(Token = "0x14000028")]
		public event System.Action OnNewSession
		{
			[Token(Token = "0x6001C81")]
			[Address(RVA = "0x1663E18", Offset = "0x1663E18", VA = "0x1663E18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2E58", Offset = "0xCD2E58")]
			add
			{
			}
			[Token(Token = "0x6001C82")]
			[Address(RVA = "0x1663EBC", Offset = "0x1663EBC", VA = "0x1663EBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2E68", Offset = "0xCD2E68")]
			remove
			{
			}
		}

		[Token(Token = "0x14000029")]
		public event Action<bool> OnSessionConfigured
		{
			[Token(Token = "0x6001C83")]
			[Address(RVA = "0x1663F60", Offset = "0x1663F60", VA = "0x1663F60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2E78", Offset = "0xCD2E78")]
			add
			{
			}
			[Token(Token = "0x6001C84")]
			[Address(RVA = "0x1664004", Offset = "0x1664004", VA = "0x1664004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2E88", Offset = "0xCD2E88")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002A")]
		public event System.Action OnSessionConfigurationFailed
		{
			[Token(Token = "0x6001C85")]
			[Address(RVA = "0x16640A8", Offset = "0x16640A8", VA = "0x16640A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2E98", Offset = "0xCD2E98")]
			add
			{
			}
			[Token(Token = "0x6001C86")]
			[Address(RVA = "0x166414C", Offset = "0x166414C", VA = "0x166414C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2EA8", Offset = "0xCD2EA8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002B")]
		public event System.Action OnImageCachePopulated
		{
			[Token(Token = "0x6001C87")]
			[Address(RVA = "0x16641F0", Offset = "0x16641F0", VA = "0x16641F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2EB8", Offset = "0xCD2EB8")]
			add
			{
			}
			[Token(Token = "0x6001C88")]
			[Address(RVA = "0x1664294", Offset = "0x1664294", VA = "0x1664294")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2EC8", Offset = "0xCD2EC8")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002C")]
		public event Action<string> OnImageCachingFailed
		{
			[Token(Token = "0x6001C89")]
			[Address(RVA = "0x1664338", Offset = "0x1664338", VA = "0x1664338")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2ED8", Offset = "0xCD2ED8")]
			add
			{
			}
			[Token(Token = "0x6001C8A")]
			[Address(RVA = "0x16643DC", Offset = "0x16643DC", VA = "0x16643DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD2EE8", Offset = "0xCD2EE8")]
			remove
			{
			}
		}

		[Token(Token = "0x6001C8B")]
		[Address(RVA = "0x1664480", Offset = "0x1664480", VA = "0x1664480")]
		protected DDNA()
		{
		}

		[Token(Token = "0x6001C8C")]
		[Address(RVA = "0x166451C", Offset = "0x166451C", VA = "0x166451C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001C8D")]
		[Address(RVA = "0x1664520", Offset = "0x1664520", VA = "0x1664520")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001C8E")]
		[Address(RVA = "0x1664524", Offset = "0x1664524", VA = "0x1664524")]
		internal void Awake()
		{
		}

		[Token(Token = "0x6001C8F")]
		[Address(RVA = "0x1664DA8", Offset = "0x1664DA8", VA = "0x1664DA8")]
		public void StartSDK()
		{
		}

		[Token(Token = "0x6001C90")]
		[Address(RVA = "0x1664DB0", Offset = "0x1664DB0", VA = "0x1664DB0")]
		public void StartSDK(string userID)
		{
		}

		[Token(Token = "0x6001C91")]
		[Address(RVA = "0x165DEFC", Offset = "0x165DEFC", VA = "0x165DEFC")]
		public void StartSDK(Configuration config)
		{
		}

		[Token(Token = "0x6001C92")]
		[Address(RVA = "0x165F43C", Offset = "0x165F43C", VA = "0x165F43C")]
		public void StartSDK(Configuration config, string userID)
		{
		}

		[Token(Token = "0x6001C93")]
		[Address(RVA = "0x16653C8", Offset = "0x16653C8", VA = "0x16653C8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD2EF8", Offset = "0xCD2EF8")]
		public void StartSDK(string envKey, string collectURL, string engageURL)
		{
		}

		[Token(Token = "0x6001C94")]
		[Address(RVA = "0x16653D0", Offset = "0x16653D0", VA = "0x16653D0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0xCD2F30", Offset = "0xCD2F30")]
		public void StartSDK(string envKey, string collectURL, string engageURL, string userID)
		{
		}

		[Token(Token = "0x6001C95")]
		[Address(RVA = "0x165FA90", Offset = "0x165FA90", VA = "0x165FA90")]
		public void NewSession()
		{
		}

		[Token(Token = "0x6001C96")]
		[Address(RVA = "0x165F920", Offset = "0x165F920", VA = "0x165F920")]
		public void StopSDK()
		{
		}

		[Token(Token = "0x6001C97")]
		public EventAction RecordEvent<T>(T gameEvent) where T : GameEvent<T>
		{
			return null;
		}

		[Token(Token = "0x6001C98")]
		[Address(RVA = "0x166547C", Offset = "0x166547C", VA = "0x166547C")]
		public EventAction RecordEvent(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001C99")]
		[Address(RVA = "0x166549C", Offset = "0x166549C", VA = "0x166549C")]
		public EventAction RecordEvent(string eventName, Dictionary<string, object> eventParams)
		{
			return null;
		}

		[Token(Token = "0x6001C9A")]
		[Address(RVA = "0x16654BC", Offset = "0x16654BC", VA = "0x16654BC")]
		public void RequestEngagement(Engagement engagement, Action<Dictionary<string, object>> callback)
		{
		}

		[Token(Token = "0x6001C9B")]
		[Address(RVA = "0x16654DC", Offset = "0x16654DC", VA = "0x16654DC")]
		public void RequestEngagement(Engagement engagement, Action<Engagement> onCompleted, Action<Exception> onError)
		{
		}

		[Token(Token = "0x6001C9C")]
		[Address(RVA = "0x165D290", Offset = "0x165D290", VA = "0x165D290")]
		public void RecordPushNotification(Dictionary<string, object> payload)
		{
		}

		[Token(Token = "0x6001C9D")]
		[Address(RVA = "0x1665458", Offset = "0x1665458", VA = "0x1665458")]
		public void RequestSessionConfiguration()
		{
		}

		[Token(Token = "0x6001C9E")]
		[Address(RVA = "0x165F1C8", Offset = "0x165F1C8", VA = "0x165F1C8")]
		public void Upload()
		{
		}

		[Token(Token = "0x6001C9F")]
		[Address(RVA = "0x16654FC", Offset = "0x16654FC", VA = "0x16654FC")]
		public void DownloadImageAssets()
		{
		}

		[Token(Token = "0x6001CA0")]
		[Address(RVA = "0x165FF34", Offset = "0x165FF34", VA = "0x165FF34")]
		public void ClearPersistentData()
		{
		}

		[Token(Token = "0x6001CA1")]
		[Address(RVA = "0x165FD00", Offset = "0x165FD00", VA = "0x165FD00")]
		public void ForgetMe()
		{
		}

		[Token(Token = "0x6001CA2")]
		[Address(RVA = "0x1665520", Offset = "0x1665520", VA = "0x1665520")]
		public void StopTrackingMe()
		{
		}

		[Token(Token = "0x6001CA3")]
		[Address(RVA = "0x16656E0", Offset = "0x16656E0", VA = "0x16656E0")]
		public void UseCollectTimestamp(bool useCollect)
		{
		}

		[Token(Token = "0x6001CA4")]
		[Address(RVA = "0x166582C", Offset = "0x166582C", VA = "0x166582C")]
		public void SetTimestampFunc(Func<DateTime?> TimestampFunc)
		{
		}

		[Token(Token = "0x6001CA5")]
		[Address(RVA = "0x165DD8C", Offset = "0x165DD8C", VA = "0x165DD8C")]
		public void SetLoggingLevel(Logger.Level level)
		{
		}

		[Token(Token = "0x6001CC5")]
		[Address(RVA = "0x1665A1C", Offset = "0x1665A1C", VA = "0x1665A1C", Slot = "4")]
		public override void OnDestroy()
		{
		}

		[Token(Token = "0x6001CC6")]
		[Address(RVA = "0x1665A8C", Offset = "0x1665A8C", VA = "0x1665A8C")]
		private void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001CC7")]
		[Address(RVA = "0x1665AD0", Offset = "0x1665AD0", VA = "0x1665AD0", Slot = "5")]
		internal virtual ImageMessageStore GetImageMessageStore()
		{
			return null;
		}

		[Token(Token = "0x6001CC8")]
		[Address(RVA = "0x1665AEC", Offset = "0x1665AEC", VA = "0x1665AEC")]
		internal string ResolveEngageURL(string httpBody)
		{
			return null;
		}

		[Token(Token = "0x6001CC9")]
		[Address(RVA = "0x1665E04", Offset = "0x1665E04", VA = "0x1665E04")]
		internal void NotifyOnSessionConfigured(bool cached)
		{
		}

		[Token(Token = "0x6001CCA")]
		[Address(RVA = "0x1665E78", Offset = "0x1665E78", VA = "0x1665E78")]
		internal void NotifyOnSessionConfigurationFailed()
		{
		}

		[Token(Token = "0x6001CCB")]
		[Address(RVA = "0x1665E8C", Offset = "0x1665E8C", VA = "0x1665E8C")]
		internal void NotifyOnImageCachePopulated()
		{
		}

		[Token(Token = "0x6001CCC")]
		[Address(RVA = "0x1665EA0", Offset = "0x1665EA0", VA = "0x1665EA0")]
		internal void NotifyOnImageCachingFailed(string cause)
		{
		}

		[Token(Token = "0x6001CCD")]
		[Address(RVA = "0x16653D8", Offset = "0x16653D8", VA = "0x16653D8")]
		private string GenerateSessionID()
		{
			return null;
		}

		[Token(Token = "0x6001CCE")]
		[Address(RVA = "0x1665268", Offset = "0x1665268", VA = "0x1665268")]
		private string GenerateUserID()
		{
			return null;
		}

		[Token(Token = "0x6001CCF")]
		[Address(RVA = "0x1665C18", Offset = "0x1665C18", VA = "0x1665C18")]
		internal static string GenerateHash(string data, string secret)
		{
			return null;
		}

		[Token(Token = "0x6001CD0")]
		[Address(RVA = "0x1665D50", Offset = "0x1665D50", VA = "0x1665D50")]
		internal static string FormatURI(string uriPattern, string apiHost, string envKey, string hash)
		{
			return null;
		}
	}
	[Token(Token = "0x20004CA")]
	internal abstract class DDNABase
	{
		[Serializable]
		[Token(Token = "0x200066E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF8DC", Offset = "0xCBF8DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<DateTime?> <>9__64_0;

			[Token(Token = "0x60023FA")]
			[Address(RVA = "0x1666464", Offset = "0x1666464", VA = "0x1666464")]
			public <>c()
			{
			}

			[Token(Token = "0x60023FB")]
			[Address(RVA = "0x166646C", Offset = "0x166646C", VA = "0x166646C")]
			internal DateTime? <UseCollectTimestamp>b__64_0()
			{
				return null;
			}
		}

		[Token(Token = "0x4001836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static Func<DateTime?> TimestampFunc;

		[Token(Token = "0x4001837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly DDNA ddna;

		[Token(Token = "0x4001838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly GameObject gameObject;

		[Token(Token = "0x4001839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCF4C", Offset = "0xCCCF4C")]
		private ImageMessageStore <ImageMessageStore>k__BackingField;

		[Token(Token = "0x400183A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCF5C", Offset = "0xCCCF5C")]
		private EngageFactory <EngageFactory>k__BackingField;

		[Token(Token = "0x170002C2")]
		internal ImageMessageStore ImageMessageStore
		{
			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0x1665FDC", Offset = "0x1665FDC", VA = "0x1665FDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3068", Offset = "0xCD3068")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CE4")]
			[Address(RVA = "0x1665FE4", Offset = "0x1665FE4", VA = "0x1665FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3078", Offset = "0xCD3078")]
			set
			{
			}
		}

		[Token(Token = "0x170002C3")]
		internal EngageFactory EngageFactory
		{
			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0x1665FEC", Offset = "0x1665FEC", VA = "0x1665FEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3088", Offset = "0xCD3088")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001CE6")]
			[Address(RVA = "0x1665FF4", Offset = "0x1665FF4", VA = "0x1665FF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3098", Offset = "0xCD3098")]
			set
			{
			}
		}

		[Token(Token = "0x170002C4")]
		protected string EnvironmentKey
		{
			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0x1665FFC", Offset = "0x1665FFC", VA = "0x1665FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C5")]
		protected string CollectURL
		{
			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0x1666018", Offset = "0x1666018", VA = "0x1666018")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C6")]
		protected string EngageURL
		{
			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0x1666034", Offset = "0x1666034", VA = "0x1666034")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C7")]
		protected string Platform
		{
			[Token(Token = "0x6001CEA")]
			[Address(RVA = "0x1666050", Offset = "0x1666050", VA = "0x1666050")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C8")]
		protected string HashSecret
		{
			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0x166606C", Offset = "0x166606C", VA = "0x166606C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002C9")]
		protected string ClientVersion
		{
			[Token(Token = "0x6001CEC")]
			[Address(RVA = "0x1666088", Offset = "0x1666088", VA = "0x1666088")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CA")]
		protected Settings Settings
		{
			[Token(Token = "0x6001CED")]
			[Address(RVA = "0x16660A4", Offset = "0x16660A4", VA = "0x16660A4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CB")]
		protected string UserID
		{
			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0x16660C0", Offset = "0x16660C0", VA = "0x16660C0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CC")]
		protected string SessionID
		{
			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0x16660D8", Offset = "0x16660D8", VA = "0x16660D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002CD")]
		internal abstract bool HasStarted
		{
			[Token(Token = "0x6001CF0")]
			get;
		}

		[Token(Token = "0x170002CE")]
		internal abstract bool IsUploading
		{
			[Token(Token = "0x6001CF1")]
			get;
		}

		[Token(Token = "0x170002CF")]
		internal abstract string CrossGameUserID
		{
			[Token(Token = "0x6001CF2")]
			get;
			[Token(Token = "0x6001CF3")]
			set;
		}

		[Token(Token = "0x170002D0")]
		internal abstract string AndroidRegistrationID
		{
			[Token(Token = "0x6001CF4")]
			get;
			[Token(Token = "0x6001CF5")]
			set;
		}

		[Token(Token = "0x170002D1")]
		internal abstract string PushNotificationToken
		{
			[Token(Token = "0x6001CF6")]
			get;
			[Token(Token = "0x6001CF7")]
			set;
		}

		[Token(Token = "0x6001CD2")]
		[Address(RVA = "0x1665F84", Offset = "0x1665F84", VA = "0x1665F84")]
		internal DDNABase(DDNA ddna)
		{
		}

		[Token(Token = "0x6001CD3")]
		internal abstract void OnApplicationPause(bool pauseStatus);

		[Token(Token = "0x6001CD4")]
		internal abstract void OnDestroy();

		[Token(Token = "0x6001CD5")]
		internal abstract void StartSDK(bool newPlayer);

		[Token(Token = "0x6001CD6")]
		internal abstract void StopSDK();

		[Token(Token = "0x6001CD7")]
		internal abstract EventAction RecordEvent<T>(T gameEvent) where T : GameEvent<T>;

		[Token(Token = "0x6001CD8")]
		internal abstract EventAction RecordEvent(string eventName);

		[Token(Token = "0x6001CD9")]
		internal abstract EventAction RecordEvent(string eventName, Dictionary<string, object> eventParams);

		[Token(Token = "0x6001CDA")]
		internal abstract void RequestEngagement(Engagement engagement, Action<Dictionary<string, object>> callback);

		[Token(Token = "0x6001CDB")]
		internal abstract void RequestEngagement(Engagement engagement, Action<Engagement> onCompleted, Action<Exception> onError);

		[Token(Token = "0x6001CDC")]
		internal abstract void RecordPushNotification(Dictionary<string, object> payload);

		[Token(Token = "0x6001CDD")]
		internal abstract void RequestSessionConfiguration();

		[Token(Token = "0x6001CDE")]
		internal abstract void Upload();

		[Token(Token = "0x6001CDF")]
		internal abstract void DownloadImageAssets();

		[Token(Token = "0x6001CE0")]
		internal abstract void ClearPersistentData();

		[Token(Token = "0x6001CE1")]
		internal abstract void ForgetMe();

		[Token(Token = "0x6001CE2")]
		internal abstract void StopTrackingMe();

		[Token(Token = "0x6001CF8")]
		[Address(RVA = "0x16660F4", Offset = "0x16660F4", VA = "0x16660F4")]
		protected Coroutine StartCoroutine(IEnumerator routine)
		{
			return null;
		}

		[Token(Token = "0x6001CF9")]
		[Address(RVA = "0x1666110", Offset = "0x1666110", VA = "0x1666110")]
		protected void InvokeRepeating(string methodName, float time, float repeatRate)
		{
		}

		[Token(Token = "0x6001CFA")]
		[Address(RVA = "0x166612C", Offset = "0x166612C", VA = "0x166612C")]
		protected bool IsInvoking(string methodName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001CFB")]
		[Address(RVA = "0x1666148", Offset = "0x1666148", VA = "0x1666148")]
		protected void CancelInvoke()
		{
		}

		[Token(Token = "0x6001CFC")]
		[Address(RVA = "0x1666164", Offset = "0x1666164", VA = "0x1666164")]
		protected void NewSession()
		{
		}

		[Token(Token = "0x6001CFD")]
		[Address(RVA = "0x16656FC", Offset = "0x16656FC", VA = "0x16656FC")]
		internal void UseCollectTimestamp(bool useCollect)
		{
		}

		[Token(Token = "0x6001CFE")]
		[Address(RVA = "0x1665844", Offset = "0x1665844", VA = "0x1665844")]
		internal void SetTimestampFunc(Func<DateTime?> TimestampFunc)
		{
		}

		[Token(Token = "0x6001CFF")]
		[Address(RVA = "0x166617C", Offset = "0x166617C", VA = "0x166617C")]
		protected static string GetCurrentTimestamp()
		{
			return null;
		}

		[Token(Token = "0x6001D00")]
		[Address(RVA = "0x16662E8", Offset = "0x16662E8", VA = "0x16662E8")]
		private static DateTime? DefaultTimestampFunc()
		{
			return null;
		}
	}
	[Token(Token = "0x20004CB")]
	internal class DDNAImpl : DDNABase
	{
		[Token(Token = "0x200066F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF8EC", Offset = "0xCBF8EC")]
		private sealed class <>c__DisplayClass25_0
		{
			[Token(Token = "0x4001EB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Engagement engagement;

			[Token(Token = "0x4001EB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Dictionary<string, object>> callback;

			[Token(Token = "0x60023FC")]
			[Address(RVA = "0x1667D9C", Offset = "0x1667D9C", VA = "0x1667D9C")]
			public <>c__DisplayClass25_0()
			{
			}

			[Token(Token = "0x60023FD")]
			[Address(RVA = "0x166BE40", Offset = "0x166BE40", VA = "0x166BE40")]
			internal void <RequestEngagement>b__0(string response, int statusCode, string error)
			{
			}
		}

		[Token(Token = "0x2000670")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF8FC", Offset = "0xCBF8FC")]
		private sealed class <>c__DisplayClass26_0
		{
			[Token(Token = "0x4001EB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Engagement engagement;

			[Token(Token = "0x4001EB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<Engagement> onCompleted;

			[Token(Token = "0x60023FE")]
			[Address(RVA = "0x1668480", Offset = "0x1668480", VA = "0x1668480")]
			public <>c__DisplayClass26_0()
			{
			}

			[Token(Token = "0x60023FF")]
			[Address(RVA = "0x166C004", Offset = "0x166C004", VA = "0x166C004")]
			internal void <RequestEngagement>b__0(string response, int statusCode, string error)
			{
			}
		}

		[Token(Token = "0x2000671")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF90C", Offset = "0xCBF90C")]
		private sealed class <UploadCoroutine>d__47 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DDNAImpl <>4__this;

			[Token(Token = "0x170003D2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002404")]
				[Address(RVA = "0x166CED0", Offset = "0x166CED0", VA = "0x166CED0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002406")]
				[Address(RVA = "0x166CF38", Offset = "0x166CF38", VA = "0x166CF38", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002400")]
			[Address(RVA = "0x1669A90", Offset = "0x1669A90", VA = "0x1669A90")]
			[DebuggerHidden]
			public <UploadCoroutine>d__47(int <>1__state)
			{
			}

			[Token(Token = "0x6002401")]
			[Address(RVA = "0x166C758", Offset = "0x166C758", VA = "0x166C758", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002402")]
			[Address(RVA = "0x166C7B4", Offset = "0x166C7B4", VA = "0x166C7B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002403")]
			[Address(RVA = "0x166C790", Offset = "0x166C790", VA = "0x166C790")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002405")]
			[Address(RVA = "0x166CED8", Offset = "0x166CED8", VA = "0x166CED8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000672")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF91C", Offset = "0xCBF91C")]
		private sealed class <>c__DisplayClass48_0
		{
			[Token(Token = "0x4001EB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool succeeded;

			[Token(Token = "0x4001EB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int status;

			[Token(Token = "0x6002407")]
			[Address(RVA = "0x166C0B8", Offset = "0x166C0B8", VA = "0x166C0B8")]
			public <>c__DisplayClass48_0()
			{
			}

			[Token(Token = "0x6002408")]
			[Address(RVA = "0x166C0C0", Offset = "0x166C0C0", VA = "0x166C0C0")]
			internal void <PostEvents>b__0(int statusCode, string data, string error)
			{
			}
		}

		[Token(Token = "0x2000673")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF92C", Offset = "0xCBF92C")]
		private sealed class <PostEvents>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001EBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001EBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001EBC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string[] events;

			[Token(Token = "0x4001EBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DDNAImpl <>4__this;

			[Token(Token = "0x4001EBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private <>c__DisplayClass48_0 <>8__1;

			[Token(Token = "0x4001EBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<bool, int> resultCallback;

			[Token(Token = "0x4001EC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <attempts>5__2;

			[Token(Token = "0x4001EC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private System.Action<int, string, string> <completionHandler>5__3;

			[Token(Token = "0x4001EC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private HttpRequest <request>5__4;

			[Token(Token = "0x170003D4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600240C")]
				[Address(RVA = "0x166C6E8", Offset = "0x166C6E8", VA = "0x166C6E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600240E")]
				[Address(RVA = "0x166C750", Offset = "0x166C750", VA = "0x166C750", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002409")]
			[Address(RVA = "0x1669B68", Offset = "0x1669B68", VA = "0x1669B68")]
			[DebuggerHidden]
			public <PostEvents>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x600240A")]
			[Address(RVA = "0x166C2D0", Offset = "0x166C2D0", VA = "0x166C2D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600240B")]
			[Address(RVA = "0x166C2D4", Offset = "0x166C2D4", VA = "0x166C2D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600240D")]
			[Address(RVA = "0x166C6F0", Offset = "0x166C6F0", VA = "0x166C6F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000674")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF93C", Offset = "0xCBF93C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<object, string> <>9__50_0;

			[Token(Token = "0x4001EC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<object, string> <>9__50_1;

			[Token(Token = "0x4001EC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<EventTrigger, string> <>9__50_3;

			[Token(Token = "0x4001EC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<IGrouping<string, EventTrigger>, string> <>9__50_4;

			[Token(Token = "0x4001EC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<IGrouping<string, EventTrigger>, ReadOnlyCollection<EventTrigger>> <>9__50_5;

			[Token(Token = "0x4001EC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<object, string> <>9__50_6;

			[Token(Token = "0x6002410")]
			[Address(RVA = "0x166BBAC", Offset = "0x166BBAC", VA = "0x166BBAC")]
			public <>c()
			{
			}

			[Token(Token = "0x6002411")]
			[Address(RVA = "0x166BBB4", Offset = "0x166BBB4", VA = "0x166BBB4")]
			internal string <HandleSessionConfigurationCallback>b__50_0(object e)
			{
				return null;
			}

			[Token(Token = "0x6002412")]
			[Address(RVA = "0x166BC18", Offset = "0x166BC18", VA = "0x166BC18")]
			internal string <HandleSessionConfigurationCallback>b__50_1(object e)
			{
				return null;
			}

			[Token(Token = "0x6002413")]
			[Address(RVA = "0x166BC7C", Offset = "0x166BC7C", VA = "0x166BC7C")]
			internal string <HandleSessionConfigurationCallback>b__50_3(EventTrigger e)
			{
				return null;
			}

			[Token(Token = "0x6002414")]
			[Address(RVA = "0x166BC94", Offset = "0x166BC94", VA = "0x166BC94")]
			internal string <HandleSessionConfigurationCallback>b__50_4(IGrouping<string, EventTrigger> e)
			{
				return null;
			}

			[Token(Token = "0x6002415")]
			[Address(RVA = "0x166BD40", Offset = "0x166BD40", VA = "0x166BD40")]
			internal ReadOnlyCollection<EventTrigger> <HandleSessionConfigurationCallback>b__50_5(IGrouping<string, EventTrigger> e)
			{
				return null;
			}

			[Token(Token = "0x6002416")]
			[Address(RVA = "0x166BDDC", Offset = "0x166BDDC", VA = "0x166BDDC")]
			internal string <HandleSessionConfigurationCallback>b__50_6(object e)
			{
				return null;
			}
		}

		[Token(Token = "0x2000675")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF94C", Offset = "0xCBF94C")]
		private sealed class <DoSessionConfigurationRetry>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ECA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ECB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ECC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int delay;

			[Token(Token = "0x4001ECD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DDNAImpl <>4__this;

			[Token(Token = "0x170003D6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600241A")]
				[Address(RVA = "0x166C260", Offset = "0x166C260", VA = "0x166C260", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600241C")]
				[Address(RVA = "0x166C2C8", Offset = "0x166C2C8", VA = "0x166C2C8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002417")]
			[Address(RVA = "0x166B170", Offset = "0x166B170", VA = "0x166B170")]
			[DebuggerHidden]
			public <DoSessionConfigurationRetry>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6002418")]
			[Address(RVA = "0x166C194", Offset = "0x166C194", VA = "0x166C194", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002419")]
			[Address(RVA = "0x166C198", Offset = "0x166C198", VA = "0x166C198", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x600241B")]
			[Address(RVA = "0x166C268", Offset = "0x166C268", VA = "0x166C268", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400183B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly EventStore eventStore;

		[Token(Token = "0x400183C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly EngageCache engageCache;

		[Token(Token = "0x400183D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ActionStore actionStore;

		[Token(Token = "0x400183E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly ExecutionCountManager executionCountManager;

		[Token(Token = "0x400183F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool started;

		[Token(Token = "0x4001840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		private bool uploading;

		[Token(Token = "0x4001841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private DateTime lastActive;

		[Token(Token = "0x4001842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private GameEvent launchNotificationEvent;

		[Token(Token = "0x4001843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string pushNotificationToken;

		[Token(Token = "0x4001844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private string androidRegistrationId;

		[Token(Token = "0x4001845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ReadOnlyCollection<string> whitelistDps;

		[Token(Token = "0x4001846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ReadOnlyCollection<string> whitelistEvents;

		[Token(Token = "0x4001847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Dictionary<string, ReadOnlyCollection<EventTrigger>> eventTriggers;

		[Token(Token = "0x4001848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private ReadOnlyCollection<string> cacheImages;

		[Token(Token = "0x4001849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool hasSentDefaultEvents;

		[Token(Token = "0x400184A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		private bool newPlayer;

		[Token(Token = "0x400184B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int retryAttempts;

		[Token(Token = "0x170002D2")]
		internal override bool HasStarted
		{
			[Token(Token = "0x6001D13")]
			[Address(RVA = "0x1669680", Offset = "0x1669680", VA = "0x1669680", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D3")]
		internal override bool IsUploading
		{
			[Token(Token = "0x6001D14")]
			[Address(RVA = "0x1669688", Offset = "0x1669688", VA = "0x1669688", Slot = "21")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D4")]
		internal override string CrossGameUserID
		{
			[Token(Token = "0x6001D15")]
			[Address(RVA = "0x1669690", Offset = "0x1669690", VA = "0x1669690", Slot = "22")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D16")]
			[Address(RVA = "0x16696E0", Offset = "0x16696E0", VA = "0x16696E0", Slot = "23")]
			set
			{
			}
		}

		[Token(Token = "0x170002D5")]
		internal override string AndroidRegistrationID
		{
			[Token(Token = "0x6001D17")]
			[Address(RVA = "0x1669838", Offset = "0x1669838", VA = "0x1669838", Slot = "24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D18")]
			[Address(RVA = "0x1669840", Offset = "0x1669840", VA = "0x1669840", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x170002D6")]
		internal override string PushNotificationToken
		{
			[Token(Token = "0x6001D19")]
			[Address(RVA = "0x1669964", Offset = "0x1669964", VA = "0x1669964", Slot = "26")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D1A")]
			[Address(RVA = "0x166996C", Offset = "0x166996C", VA = "0x166996C", Slot = "27")]
			set
			{
			}
		}

		[Token(Token = "0x6001D02")]
		[Address(RVA = "0x16648A8", Offset = "0x16648A8", VA = "0x16648A8")]
		internal DDNAImpl(DDNA ddna)
		{
		}

		[Token(Token = "0x6001D03")]
		[Address(RVA = "0x1666A9C", Offset = "0x1666A9C", VA = "0x1666A9C", Slot = "4")]
		internal override void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001D04")]
		[Address(RVA = "0x1667190", Offset = "0x1667190", VA = "0x1667190", Slot = "5")]
		internal override void OnDestroy()
		{
		}

		[Token(Token = "0x6001D05")]
		[Address(RVA = "0x166724C", Offset = "0x166724C", VA = "0x166724C", Slot = "6")]
		internal override void StartSDK(bool newPlayer)
		{
		}

		[Token(Token = "0x6001D06")]
		[Address(RVA = "0x1667508", Offset = "0x1667508", VA = "0x1667508", Slot = "7")]
		internal override void StopSDK()
		{
		}

		[Token(Token = "0x6001D07")]
		internal override EventAction RecordEvent<T>(T gameEvent)
		{
			return null;
		}

		[Token(Token = "0x6001D08")]
		[Address(RVA = "0x1667608", Offset = "0x1667608", VA = "0x1667608", Slot = "9")]
		internal override EventAction RecordEvent(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001D09")]
		[Address(RVA = "0x16676A4", Offset = "0x16676A4", VA = "0x16676A4", Slot = "10")]
		internal override EventAction RecordEvent(string eventName, Dictionary<string, object> eventParams)
		{
			return null;
		}

		[Token(Token = "0x6001D0A")]
		[Address(RVA = "0x1667850", Offset = "0x1667850", VA = "0x1667850", Slot = "11")]
		internal override void RequestEngagement(Engagement engagement, Action<Dictionary<string, object>> callback)
		{
		}

		[Token(Token = "0x6001D0B")]
		[Address(RVA = "0x1667F3C", Offset = "0x1667F3C", VA = "0x1667F3C", Slot = "12")]
		internal override void RequestEngagement(Engagement engagement, Action<Engagement> onCompleted, Action<Exception> onError)
		{
		}

		[Token(Token = "0x6001D0C")]
		[Address(RVA = "0x1668488", Offset = "0x1668488", VA = "0x1668488", Slot = "13")]
		internal override void RecordPushNotification(Dictionary<string, object> payload)
		{
		}

		[Token(Token = "0x6001D0D")]
		[Address(RVA = "0x1668C3C", Offset = "0x1668C3C", VA = "0x1668C3C", Slot = "14")]
		internal override void RequestSessionConfiguration()
		{
		}

		[Token(Token = "0x6001D0E")]
		[Address(RVA = "0x166919C", Offset = "0x166919C", VA = "0x166919C", Slot = "15")]
		internal override void Upload()
		{
		}

		[Token(Token = "0x6001D0F")]
		[Address(RVA = "0x1669310", Offset = "0x1669310", VA = "0x1669310", Slot = "16")]
		internal override void DownloadImageAssets()
		{
		}

		[Token(Token = "0x6001D10")]
		[Address(RVA = "0x1669438", Offset = "0x1669438", VA = "0x1669438", Slot = "17")]
		internal override void ClearPersistentData()
		{
		}

		[Token(Token = "0x6001D11")]
		[Address(RVA = "0x16695F0", Offset = "0x16695F0", VA = "0x16695F0", Slot = "18")]
		internal override void ForgetMe()
		{
		}

		[Token(Token = "0x6001D12")]
		[Address(RVA = "0x1669638", Offset = "0x1669638", VA = "0x1669638", Slot = "19")]
		internal override void StopTrackingMe()
		{
		}

		[Token(Token = "0x6001D1B")]
		[Address(RVA = "0x1669294", Offset = "0x1669294", VA = "0x1669294")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD30A8", Offset = "0xCD30A8")]
		private IEnumerator UploadCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6001D1C")]
		[Address(RVA = "0x1669ABC", Offset = "0x1669ABC", VA = "0x1669ABC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD310C", Offset = "0xCD310C")]
		private IEnumerator PostEvents(string[] events, Action<bool, int> resultCallback)
		{
			return null;
		}

		[Token(Token = "0x6001D1D")]
		[Address(RVA = "0x1669B94", Offset = "0x1669B94", VA = "0x1669B94")]
		private void TriggerDefaultEvents(bool newPlayer)
		{
		}

		[Token(Token = "0x6001D1E")]
		[Address(RVA = "0x166A1CC", Offset = "0x166A1CC", VA = "0x166A1CC")]
		private void HandleSessionConfigurationCallback(Dictionary<string, object> response)
		{
		}

		[Token(Token = "0x6001D1F")]
		[Address(RVA = "0x166AD68", Offset = "0x166AD68", VA = "0x166AD68")]
		private void HandleSessionConfigurationRetry()
		{
		}

		[Token(Token = "0x6001D20")]
		[Address(RVA = "0x166B0E4", Offset = "0x166B0E4", VA = "0x166B0E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD3170", Offset = "0xCD3170")]
		private IEnumerator DoSessionConfigurationRetry(int delay)
		{
			return null;
		}

		[Token(Token = "0x6001D21")]
		[Address(RVA = "0x166B19C", Offset = "0x166B19C", VA = "0x166B19C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD31D4", Offset = "0xCD31D4")]
		private void <DownloadImageAssets>b__30_0()
		{
		}

		[Token(Token = "0x6001D22")]
		[Address(RVA = "0x166B234", Offset = "0x166B234", VA = "0x166B234")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD31E4", Offset = "0xCD31E4")]
		private void <DownloadImageAssets>b__30_1(string e)
		{
		}

		[Token(Token = "0x6001D23")]
		[Address(RVA = "0x166B2DC", Offset = "0x166B2DC", VA = "0x166B2DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD31F4", Offset = "0xCD31F4")]
		private void <UploadCoroutine>b__47_0(bool succeeded, int statusCode)
		{
		}

		[Token(Token = "0x6001D24")]
		[Address(RVA = "0x166B4DC", Offset = "0x166B4DC", VA = "0x166B4DC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3204", Offset = "0xCD3204")]
		private EventTrigger <HandleSessionConfigurationCallback>b__50_2(object e, int i)
		{
			return null;
		}
	}
	[Token(Token = "0x20004CC")]
	internal class DDNANonTracking : DDNABase
	{
		[Token(Token = "0x2000676")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF95C", Offset = "0xCBF95C")]
		private sealed class <>c__DisplayClass35_0
		{
			[Token(Token = "0x4001ECE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool succeeded;

			[Token(Token = "0x4001ECF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public System.Action onSuccess;

			[Token(Token = "0x600241D")]
			[Address(RVA = "0x166DC8C", Offset = "0x166DC8C", VA = "0x166DC8C")]
			public <>c__DisplayClass35_0()
			{
			}

			[Token(Token = "0x600241E")]
			[Address(RVA = "0x166DC94", Offset = "0x166DC94", VA = "0x166DC94")]
			internal void <Send>b__0(int statusCode, string data, string error)
			{
			}
		}

		[Token(Token = "0x2000677")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF96C", Offset = "0xCBF96C")]
		private sealed class <Send>d__35 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001ED0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001ED1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public System.Action onSuccess;

			[Token(Token = "0x4001ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public DDNANonTracking <>4__this;

			[Token(Token = "0x4001ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public HttpRequest request;

			[Token(Token = "0x4001ED5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass35_0 <>8__1;

			[Token(Token = "0x4001ED6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <attempts>5__2;

			[Token(Token = "0x4001ED7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private System.Action<int, string, string> <onCompletion>5__3;

			[Token(Token = "0x170003D8")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002422")]
				[Address(RVA = "0x166DFB4", Offset = "0x166DFB4", VA = "0x166DFB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003D9")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002424")]
				[Address(RVA = "0x166E01C", Offset = "0x166E01C", VA = "0x166E01C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600241F")]
			[Address(RVA = "0x166DBAC", Offset = "0x166DBAC", VA = "0x166DBAC")]
			[DebuggerHidden]
			public <Send>d__35(int <>1__state)
			{
			}

			[Token(Token = "0x6002420")]
			[Address(RVA = "0x166DD80", Offset = "0x166DD80", VA = "0x166DD80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002421")]
			[Address(RVA = "0x166DD84", Offset = "0x166DD84", VA = "0x166DD84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002423")]
			[Address(RVA = "0x166DFBC", Offset = "0x166DFBC", VA = "0x166DFBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400184C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool started;

		[Token(Token = "0x400184D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool uploading;

		[Token(Token = "0x400184E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCF6C", Offset = "0xCCCF6C")]
		private string <CrossGameUserID>k__BackingField;

		[Token(Token = "0x400184F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCF7C", Offset = "0xCCCF7C")]
		private string <PushNotificationToken>k__BackingField;

		[Token(Token = "0x4001850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCF8C", Offset = "0xCCCF8C")]
		private string <AndroidRegistrationID>k__BackingField;

		[Token(Token = "0x170002D7")]
		internal override bool HasStarted
		{
			[Token(Token = "0x6001D36")]
			[Address(RVA = "0x166DB6C", Offset = "0x166DB6C", VA = "0x166DB6C", Slot = "20")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D8")]
		internal override bool IsUploading
		{
			[Token(Token = "0x6001D37")]
			[Address(RVA = "0x166DB74", Offset = "0x166DB74", VA = "0x166DB74", Slot = "21")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170002D9")]
		internal override string CrossGameUserID
		{
			[Token(Token = "0x6001D38")]
			[Address(RVA = "0x166DB7C", Offset = "0x166DB7C", VA = "0x166DB7C", Slot = "22")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3214", Offset = "0xCD3214")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D39")]
			[Address(RVA = "0x166DB84", Offset = "0x166DB84", VA = "0x166DB84", Slot = "23")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3224", Offset = "0xCD3224")]
			set
			{
			}
		}

		[Token(Token = "0x170002DA")]
		internal override string PushNotificationToken
		{
			[Token(Token = "0x6001D3A")]
			[Address(RVA = "0x166DB8C", Offset = "0x166DB8C", VA = "0x166DB8C", Slot = "26")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3234", Offset = "0xCD3234")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0x166DB94", Offset = "0x166DB94", VA = "0x166DB94", Slot = "27")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3244", Offset = "0xCD3244")]
			set
			{
			}
		}

		[Token(Token = "0x170002DB")]
		internal override string AndroidRegistrationID
		{
			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0x166DB9C", Offset = "0x166DB9C", VA = "0x166DB9C", Slot = "24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3254", Offset = "0xCD3254")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0x166DBA4", Offset = "0x166DBA4", VA = "0x166DBA4", Slot = "25")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3264", Offset = "0xCD3264")]
			set
			{
			}
		}

		[Token(Token = "0x6001D25")]
		[Address(RVA = "0x1664804", Offset = "0x1664804", VA = "0x1664804")]
		internal DDNANonTracking(DDNA ddna)
		{
		}

		[Token(Token = "0x6001D26")]
		[Address(RVA = "0x166CF40", Offset = "0x166CF40", VA = "0x166CF40", Slot = "4")]
		internal override void OnApplicationPause(bool pauseStatus)
		{
		}

		[Token(Token = "0x6001D27")]
		[Address(RVA = "0x166CF44", Offset = "0x166CF44", VA = "0x166CF44", Slot = "5")]
		internal override void OnDestroy()
		{
		}

		[Token(Token = "0x6001D28")]
		[Address(RVA = "0x166CF48", Offset = "0x166CF48", VA = "0x166CF48", Slot = "6")]
		internal override void StartSDK(bool newPlayer)
		{
		}

		[Token(Token = "0x6001D29")]
		[Address(RVA = "0x166CFEC", Offset = "0x166CFEC", VA = "0x166CFEC", Slot = "7")]
		internal override void StopSDK()
		{
		}

		[Token(Token = "0x6001D2A")]
		internal override EventAction RecordEvent<T>(T gameEvent)
		{
			return null;
		}

		[Token(Token = "0x6001D2B")]
		[Address(RVA = "0x166CFF4", Offset = "0x166CFF4", VA = "0x166CFF4", Slot = "9")]
		internal override EventAction RecordEvent(string eventName)
		{
			return null;
		}

		[Token(Token = "0x6001D2C")]
		[Address(RVA = "0x166D090", Offset = "0x166D090", VA = "0x166D090", Slot = "10")]
		internal override EventAction RecordEvent(string eventName, Dictionary<string, object> eventParams)
		{
			return null;
		}

		[Token(Token = "0x6001D2D")]
		[Address(RVA = "0x166D12C", Offset = "0x166D12C", VA = "0x166D12C", Slot = "11")]
		internal override void RequestEngagement(Engagement engagement, Action<Dictionary<string, object>> callback)
		{
		}

		[Token(Token = "0x6001D2E")]
		[Address(RVA = "0x166D1AC", Offset = "0x166D1AC", VA = "0x166D1AC", Slot = "12")]
		internal override void RequestEngagement(Engagement engagement, Action<Engagement> onCompleted, Action<Exception> onError)
		{
		}

		[Token(Token = "0x6001D2F")]
		[Address(RVA = "0x166D250", Offset = "0x166D250", VA = "0x166D250", Slot = "13")]
		internal override void RecordPushNotification(Dictionary<string, object> payload)
		{
		}

		[Token(Token = "0x6001D30")]
		[Address(RVA = "0x166D254", Offset = "0x166D254", VA = "0x166D254", Slot = "14")]
		internal override void RequestSessionConfiguration()
		{
		}

		[Token(Token = "0x6001D31")]
		[Address(RVA = "0x166D270", Offset = "0x166D270", VA = "0x166D270", Slot = "15")]
		internal override void Upload()
		{
		}

		[Token(Token = "0x6001D32")]
		[Address(RVA = "0x166D274", Offset = "0x166D274", VA = "0x166D274", Slot = "16")]
		internal override void DownloadImageAssets()
		{
		}

		[Token(Token = "0x6001D33")]
		[Address(RVA = "0x166D29C", Offset = "0x166D29C", VA = "0x166D29C", Slot = "17")]
		internal override void ClearPersistentData()
		{
		}

		[Token(Token = "0x6001D34")]
		[Address(RVA = "0x166D2A0", Offset = "0x166D2A0", VA = "0x166D2A0", Slot = "18")]
		internal override void ForgetMe()
		{
		}

		[Token(Token = "0x6001D35")]
		[Address(RVA = "0x166DA1C", Offset = "0x166DA1C", VA = "0x166DA1C", Slot = "19")]
		internal override void StopTrackingMe()
		{
		}

		[Token(Token = "0x6001D3E")]
		[Address(RVA = "0x166D970", Offset = "0x166D970", VA = "0x166D970")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD3274", Offset = "0xCD3274")]
		private IEnumerator Send(HttpRequest request, System.Action onSuccess)
		{
			return null;
		}

		[Token(Token = "0x6001D3F")]
		[Address(RVA = "0x166DBD8", Offset = "0x166DBD8", VA = "0x166DBD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD32D8", Offset = "0xCD32D8")]
		private void <ForgetMe>b__17_0()
		{
		}
	}
	[Token(Token = "0x20004CD")]
	public class EngageFactory
	{
		[Token(Token = "0x2000678")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF97C", Offset = "0xCBF97C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001ED8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<Dictionary<string, object>> callback;

			[Token(Token = "0x6002425")]
			[Address(RVA = "0x166FB48", Offset = "0x166FB48", VA = "0x166FB48")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x6002426")]
			[Address(RVA = "0x1670504", Offset = "0x1670504", VA = "0x1670504")]
			internal void <RequestGameParameters>b__0(Engagement response)
			{
			}

			[Token(Token = "0x6002427")]
			[Address(RVA = "0x1670624", Offset = "0x1670624", VA = "0x1670624")]
			internal void <RequestGameParameters>b__1(Exception exception)
			{
			}
		}

		[Token(Token = "0x2000679")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF98C", Offset = "0xCBF98C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001ED9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Action<ImageMessage> callback;

			[Token(Token = "0x6002428")]
			[Address(RVA = "0x166FC94", Offset = "0x166FC94", VA = "0x166FC94")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x6002429")]
			[Address(RVA = "0x16706A8", Offset = "0x16706A8", VA = "0x16706A8")]
			internal void <RequestImageMessage>b__0(Engagement response)
			{
			}

			[Token(Token = "0x600242A")]
			[Address(RVA = "0x1670720", Offset = "0x1670720", VA = "0x1670720")]
			internal void <RequestImageMessage>b__1(Exception exception)
			{
			}
		}

		[Token(Token = "0x200067A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF99C", Offset = "0xCBF99C")]
		private sealed class <>c__DisplayClass8_0
		{
			[Token(Token = "0x4001EDA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string decisionPoint;

			[Token(Token = "0x4001EDB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<InterstitialAd> callback;

			[Token(Token = "0x600242B")]
			[Address(RVA = "0x166FFD0", Offset = "0x166FFD0", VA = "0x166FFD0")]
			public <>c__DisplayClass8_0()
			{
			}

			[Token(Token = "0x600242C")]
			[Address(RVA = "0x167077C", Offset = "0x167077C", VA = "0x167077C")]
			internal void <RequestInterstitialAd>b__0(Engagement response)
			{
			}
		}

		[Token(Token = "0x200067B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF9AC", Offset = "0xCBF9AC")]
		private sealed class <>c__DisplayClass8_1
		{
			[Token(Token = "0x4001EDC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Engagement engagement;

			[Token(Token = "0x4001EDD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass8_0 CS$<>8__locals1;

			[Token(Token = "0x600242D")]
			[Address(RVA = "0x166FFD8", Offset = "0x166FFD8", VA = "0x166FFD8")]
			public <>c__DisplayClass8_1()
			{
			}

			[Token(Token = "0x600242E")]
			[Address(RVA = "0x167084C", Offset = "0x167084C", VA = "0x167084C")]
			internal void <RequestInterstitialAd>b__1(Exception exception)
			{
			}
		}

		[Token(Token = "0x200067C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF9BC", Offset = "0xCBF9BC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001EDE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string decisionPoint;

			[Token(Token = "0x4001EDF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Action<RewardedAd> callback;

			[Token(Token = "0x600242F")]
			[Address(RVA = "0x1670314", Offset = "0x1670314", VA = "0x1670314")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002430")]
			[Address(RVA = "0x167038C", Offset = "0x167038C", VA = "0x167038C")]
			internal void <RequestRewardedAd>b__0(Engagement response)
			{
			}
		}

		[Token(Token = "0x200067D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF9CC", Offset = "0xCBF9CC")]
		private sealed class <>c__DisplayClass10_1
		{
			[Token(Token = "0x4001EE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Engagement engagement;

			[Token(Token = "0x4001EE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass10_0 CS$<>8__locals1;

			[Token(Token = "0x6002431")]
			[Address(RVA = "0x167031C", Offset = "0x167031C", VA = "0x167031C")]
			public <>c__DisplayClass10_1()
			{
			}

			[Token(Token = "0x6002432")]
			[Address(RVA = "0x167045C", Offset = "0x167045C", VA = "0x167045C")]
			internal void <RequestRewardedAd>b__1(Exception exception)
			{
			}
		}

		[Token(Token = "0x4001851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly DDNABase ddna;

		[Token(Token = "0x4001852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly SmartAds smartads;

		[Token(Token = "0x6001D40")]
		[Address(RVA = "0x1666A4C", Offset = "0x1666A4C", VA = "0x1666A4C")]
		internal EngageFactory(DDNABase ddna, SmartAds smartads)
		{
		}

		[Token(Token = "0x6001D41")]
		[Address(RVA = "0x166FB3C", Offset = "0x166FB3C", VA = "0x166FB3C")]
		public void RequestGameParameters(string decisionPoint, Action<Dictionary<string, object>> callback)
		{
		}

		[Token(Token = "0x6001D42")]
		[Address(RVA = "0x165ECD8", Offset = "0x165ECD8", VA = "0x165ECD8")]
		public void RequestGameParameters(string decisionPoint, Params parameters, Action<Dictionary<string, object>> callback)
		{
		}

		[Token(Token = "0x6001D43")]
		[Address(RVA = "0x166FC88", Offset = "0x166FC88", VA = "0x166FC88")]
		public void RequestImageMessage(string decisionPoint, Action<ImageMessage> callback)
		{
		}

		[Token(Token = "0x6001D44")]
		[Address(RVA = "0x165F014", Offset = "0x165F014", VA = "0x165F014")]
		public void RequestImageMessage(string decisionPoint, Params parameters, Action<ImageMessage> callback)
		{
		}

		[Token(Token = "0x6001D45")]
		[Address(RVA = "0x166FC9C", Offset = "0x166FC9C", VA = "0x166FC9C")]
		public void RequestInterstitialAd(string decisionPoint, Action<InterstitialAd> callback)
		{
		}

		[Token(Token = "0x6001D46")]
		[Address(RVA = "0x166FCA8", Offset = "0x166FCA8", VA = "0x166FCA8")]
		public void RequestInterstitialAd(string decisionPoint, Params parameters, Action<InterstitialAd> callback)
		{
		}

		[Token(Token = "0x6001D47")]
		[Address(RVA = "0x166FFE0", Offset = "0x166FFE0", VA = "0x166FFE0")]
		public void RequestRewardedAd(string decisionPoint, Action<RewardedAd> callback)
		{
		}

		[Token(Token = "0x6001D48")]
		[Address(RVA = "0x166FFEC", Offset = "0x166FFEC", VA = "0x166FFEC")]
		public void RequestRewardedAd(string decisionPoint, Params parameters, Action<RewardedAd> callback)
		{
		}

		[Token(Token = "0x6001D49")]
		[Address(RVA = "0x166FB50", Offset = "0x166FB50", VA = "0x166FB50")]
		protected static Engagement BuildEngagement(string decisionPoint, Params parameters)
		{
			return null;
		}
	}
	[Token(Token = "0x20004CE")]
	public class Engagement<T> where T : Engagement<T>
	{
		[Token(Token = "0x4001853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly Params parameters;

		[Token(Token = "0x4001854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private string response;

		[Token(Token = "0x4001855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCF9C", Offset = "0xCCCF9C")]
		private string <DecisionPoint>k__BackingField;

		[Token(Token = "0x4001856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCFAC", Offset = "0xCCCFAC")]
		private string <Flavour>k__BackingField;

		[Token(Token = "0x4001857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCFBC", Offset = "0xCCCFBC")]
		private int <StatusCode>k__BackingField;

		[Token(Token = "0x4001858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCFCC", Offset = "0xCCCFCC")]
		private string <Error>k__BackingField;

		[Token(Token = "0x4001859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCCFDC", Offset = "0xCCCFDC")]
		private Dictionary<string, object> <JSON>k__BackingField;

		[Token(Token = "0x170002DC")]
		public string DecisionPoint
		{
			[Token(Token = "0x6001D4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD32E8", Offset = "0xCD32E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4D")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD32F8", Offset = "0xCD32F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170002DD")]
		public string Flavour
		{
			[Token(Token = "0x6001D4E")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3308", Offset = "0xCD3308")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D4F")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3318", Offset = "0xCD3318")]
			internal set
			{
			}
		}

		[Token(Token = "0x170002DE")]
		public string Raw
		{
			[Token(Token = "0x6001D52")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D53")]
			set
			{
			}
		}

		[Token(Token = "0x170002DF")]
		public int StatusCode
		{
			[Token(Token = "0x6001D54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3328", Offset = "0xCD3328")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001D55")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3338", Offset = "0xCD3338")]
			set
			{
			}
		}

		[Token(Token = "0x170002E0")]
		public string Error
		{
			[Token(Token = "0x6001D56")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3348", Offset = "0xCD3348")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D57")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3358", Offset = "0xCD3358")]
			set
			{
			}
		}

		[Token(Token = "0x170002E1")]
		public Dictionary<string, object> JSON
		{
			[Token(Token = "0x6001D58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3368", Offset = "0xCD3368")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D59")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3378", Offset = "0xCD3378")]
			internal set
			{
			}
		}

		[Token(Token = "0x6001D4A")]
		public Engagement(string decisionPoint)
		{
		}

		[Token(Token = "0x6001D4B")]
		internal Engagement(string decisionPoint, Params parameters)
		{
		}

		[Token(Token = "0x6001D50")]
		public T AddParam(string key, object value)
		{
			return null;
		}

		[Token(Token = "0x6001D51")]
		public Dictionary<string, object> AsDictionary()
		{
			return null;
		}

		[Token(Token = "0x6001D5A")]
		internal string GetDecisionPointAndFlavour()
		{
			return null;
		}

		[Token(Token = "0x6001D5B")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004CF")]
	public class Engagement : Engagement<Engagement>
	{
		[Token(Token = "0x6001D5C")]
		[Address(RVA = "0x166913C", Offset = "0x166913C", VA = "0x166913C")]
		public Engagement(string decisionPoint)
		{
		}

		[Token(Token = "0x6001D5D")]
		[Address(RVA = "0x1670324", Offset = "0x1670324", VA = "0x1670324")]
		internal Engagement(string decisionPoint, Params parameters)
		{
		}
	}
	[Token(Token = "0x20004D0")]
	public class BasicExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200067E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF9DC", Offset = "0xCBF9DC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<string> <>9__4_0;

			[Token(Token = "0x4001EE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Action<string> <>9__4_1;

			[Token(Token = "0x4001EE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Action<string> <>9__4_2;

			[Token(Token = "0x4001EE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Action<string> <>9__4_3;

			[Token(Token = "0x4001EE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Action<string> <>9__4_4;

			[Token(Token = "0x4001EE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Action<string> <>9__4_5;

			[Token(Token = "0x4001EE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Action<string> <>9__4_6;

			[Token(Token = "0x4001EEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Action<ImageMessage> <>9__4_7;

			[Token(Token = "0x4001EEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Action<Dictionary<string, object>> <>9__4_8;

			[Token(Token = "0x4001EEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public static Action<ImageMessage.EventArgs> <>9__10_2;

			[Token(Token = "0x4001EED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public static Action<ImageMessage.EventArgs> <>9__10_3;

			[Token(Token = "0x4001EEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public static Action<ImageMessage> <>9__10_0;

			[Token(Token = "0x6002434")]
			[Address(RVA = "0x1660260", Offset = "0x1660260", VA = "0x1660260")]
			public <>c()
			{
			}

			[Token(Token = "0x6002435")]
			[Address(RVA = "0x1660268", Offset = "0x1660268", VA = "0x1660268")]
			internal void <Start>b__4_0(string n)
			{
			}

			[Token(Token = "0x6002436")]
			[Address(RVA = "0x16602F0", Offset = "0x16602F0", VA = "0x16602F0")]
			internal void <Start>b__4_1(string n)
			{
			}

			[Token(Token = "0x6002437")]
			[Address(RVA = "0x1660378", Offset = "0x1660378", VA = "0x1660378")]
			internal void <Start>b__4_2(string n)
			{
			}

			[Token(Token = "0x6002438")]
			[Address(RVA = "0x1660400", Offset = "0x1660400", VA = "0x1660400")]
			internal void <Start>b__4_3(string n)
			{
			}

			[Token(Token = "0x6002439")]
			[Address(RVA = "0x1660488", Offset = "0x1660488", VA = "0x1660488")]
			internal void <Start>b__4_4(string n)
			{
			}

			[Token(Token = "0x600243A")]
			[Address(RVA = "0x1660510", Offset = "0x1660510", VA = "0x1660510")]
			internal void <Start>b__4_5(string n)
			{
			}

			[Token(Token = "0x600243B")]
			[Address(RVA = "0x1660598", Offset = "0x1660598", VA = "0x1660598")]
			internal void <Start>b__4_6(string n)
			{
			}

			[Token(Token = "0x600243C")]
			[Address(RVA = "0x1660620", Offset = "0x1660620", VA = "0x1660620")]
			internal void <Start>b__4_7(ImageMessage imageMessage)
			{
			}

			[Token(Token = "0x600243D")]
			[Address(RVA = "0x166063C", Offset = "0x166063C", VA = "0x166063C")]
			internal void <Start>b__4_8(Dictionary<string, object> gameParameters)
			{
			}

			[Token(Token = "0x600243E")]
			[Address(RVA = "0x16606C4", Offset = "0x16606C4", VA = "0x16606C4")]
			internal void <OnImageMessageBtn_Clicked>b__10_0(ImageMessage imageMessage)
			{
			}

			[Token(Token = "0x600243F")]
			[Address(RVA = "0x166096C", Offset = "0x166096C", VA = "0x166096C")]
			internal void <OnImageMessageBtn_Clicked>b__10_2(ImageMessage.EventArgs obj)
			{
			}

			[Token(Token = "0x6002440")]
			[Address(RVA = "0x16609FC", Offset = "0x16609FC", VA = "0x16609FC")]
			internal void <OnImageMessageBtn_Clicked>b__10_3(ImageMessage.EventArgs obj)
			{
			}
		}

		[Token(Token = "0x200067F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF9EC", Offset = "0xCBF9EC")]
		private sealed class <>c__DisplayClass10_0
		{
			[Token(Token = "0x4001EEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ImageMessage imageMessage;

			[Token(Token = "0x6002441")]
			[Address(RVA = "0x1660964", Offset = "0x1660964", VA = "0x1660964")]
			public <>c__DisplayClass10_0()
			{
			}

			[Token(Token = "0x6002442")]
			[Address(RVA = "0x1660A9C", Offset = "0x1660A9C", VA = "0x1660A9C")]
			internal void <OnImageMessageBtn_Clicked>b__1()
			{
			}
		}

		[Token(Token = "0x400185A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform cubeObj;

		[Token(Token = "0x400185B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject popUpObj;

		[Token(Token = "0x400185C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Text popUpContent;

		[Token(Token = "0x400185D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Text popUpTitle;

		[Token(Token = "0x6001D5E")]
		[Address(RVA = "0x165D490", Offset = "0x165D490", VA = "0x165D490")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D5F")]
		[Address(RVA = "0x165DF04", Offset = "0x165DF04", VA = "0x165DF04")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D60")]
		[Address(RVA = "0x165E044", Offset = "0x165E044", VA = "0x165E044")]
		public void OnSimpleEventBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D61")]
		[Address(RVA = "0x165E14C", Offset = "0x165E14C", VA = "0x165E14C")]
		public void OnAchievementEventBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D62")]
		[Address(RVA = "0x165E86C", Offset = "0x165E86C", VA = "0x165E86C")]
		public void OnTransactionEventBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D63")]
		[Address(RVA = "0x165EAE0", Offset = "0x165EAE0", VA = "0x165EAE0")]
		public void OnEngagementBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D64")]
		[Address(RVA = "0x165EE04", Offset = "0x165EE04", VA = "0x165EE04")]
		public void OnImageMessageBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D65")]
		[Address(RVA = "0x165F140", Offset = "0x165F140", VA = "0x165F140")]
		public void OnUploadEventsBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D66")]
		[Address(RVA = "0x165F1EC", Offset = "0x165F1EC", VA = "0x165F1EC")]
		public void OnStartSDKBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D67")]
		[Address(RVA = "0x165F2F0", Offset = "0x165F2F0", VA = "0x165F2F0")]
		public void OnStartSDKNewUserBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D68")]
		[Address(RVA = "0x165F8AC", Offset = "0x165F8AC", VA = "0x165F8AC")]
		public void OnStopSDKBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D69")]
		[Address(RVA = "0x165FA1C", Offset = "0x165FA1C", VA = "0x165FA1C")]
		public void OnNewSessionBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D6A")]
		[Address(RVA = "0x165FC8C", Offset = "0x165FC8C", VA = "0x165FC8C")]
		public void OnForgetMeBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D6B")]
		[Address(RVA = "0x165FEC0", Offset = "0x165FEC0", VA = "0x165FEC0")]
		public void OnClearPersistentDataBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D6C")]
		[Address(RVA = "0x16601AC", Offset = "0x16601AC", VA = "0x16601AC")]
		public BasicExample()
		{
		}

		[Token(Token = "0x6001D6D")]
		[Address(RVA = "0x16601B4", Offset = "0x16601B4", VA = "0x16601B4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3388", Offset = "0xCD3388")]
		private void <OnEngagementBtn_Clicked>b__9_0(Dictionary<string, object> gameParameters)
		{
		}
	}
	[Token(Token = "0x20004D1")]
	public class SmartAdsExample : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000680")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBF9FC", Offset = "0xCBF9FC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<Button> <>9__13_0;

			[Token(Token = "0x4001EF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<Button> <>9__13_1;

			[Token(Token = "0x4001EF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Predicate<Button> <>9__13_2;

			[Token(Token = "0x4001EF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Predicate<Text> <>9__13_3;

			[Token(Token = "0x4001EF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Predicate<Text> <>9__13_4;

			[Token(Token = "0x4001EF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Predicate<Text> <>9__13_5;

			[Token(Token = "0x4001EF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public static Predicate<Text> <>9__13_6;

			[Token(Token = "0x4001EF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public static Predicate<Text> <>9__13_7;

			[Token(Token = "0x4001EF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public static Predicate<Text> <>9__13_8;

			[Token(Token = "0x6002444")]
			[Address(RVA = "0x116E4C0", Offset = "0x116E4C0", VA = "0x116E4C0")]
			public <>c()
			{
			}

			[Token(Token = "0x6002445")]
			[Address(RVA = "0x116E4C8", Offset = "0x116E4C8", VA = "0x116E4C8")]
			internal bool <Start>b__13_0(Button e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002446")]
			[Address(RVA = "0x116E52C", Offset = "0x116E52C", VA = "0x116E52C")]
			internal bool <Start>b__13_1(Button e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002447")]
			[Address(RVA = "0x116E590", Offset = "0x116E590", VA = "0x116E590")]
			internal bool <Start>b__13_2(Button e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002448")]
			[Address(RVA = "0x116E5F4", Offset = "0x116E5F4", VA = "0x116E5F4")]
			internal bool <Start>b__13_3(Text e)
			{
				return default(bool);
			}

			[Token(Token = "0x6002449")]
			[Address(RVA = "0x116E658", Offset = "0x116E658", VA = "0x116E658")]
			internal bool <Start>b__13_4(Text e)
			{
				return default(bool);
			}

			[Token(Token = "0x600244A")]
			[Address(RVA = "0x116E6BC", Offset = "0x116E6BC", VA = "0x116E6BC")]
			internal bool <Start>b__13_5(Text e)
			{
				return default(bool);
			}

			[Token(Token = "0x600244B")]
			[Address(RVA = "0x116E720", Offset = "0x116E720", VA = "0x116E720")]
			internal bool <Start>b__13_6(Text e)
			{
				return default(bool);
			}

			[Token(Token = "0x600244C")]
			[Address(RVA = "0x116E784", Offset = "0x116E784", VA = "0x116E784")]
			internal bool <Start>b__13_7(Text e)
			{
				return default(bool);
			}

			[Token(Token = "0x600244D")]
			[Address(RVA = "0x116E7E8", Offset = "0x116E7E8", VA = "0x116E7E8")]
			internal bool <Start>b__13_8(Text e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400185E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InterstitialAd interstitialAd;

		[Token(Token = "0x400185F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RewardedAd rewardedAd1;

		[Token(Token = "0x4001860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RewardedAd rewardedAd2;

		[Token(Token = "0x4001861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform cubeObj;

		[Token(Token = "0x4001862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Button interstitialBtn;

		[Token(Token = "0x4001863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Button rewarded1Btn;

		[Token(Token = "0x4001864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button rewarded2Btn;

		[Token(Token = "0x4001865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Text interstitialMsg;

		[Token(Token = "0x4001866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Text interstitialStats;

		[Token(Token = "0x4001867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Text rewarded1Msg;

		[Token(Token = "0x4001868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Text rewarded1Stats;

		[Token(Token = "0x4001869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Text rewarded2Msg;

		[Token(Token = "0x400186A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Text rewarded2Stats;

		[Token(Token = "0x6001D6E")]
		[Address(RVA = "0x116C360", Offset = "0x116C360", VA = "0x116C360")]
		private void Start()
		{
		}

		[Token(Token = "0x6001D6F")]
		[Address(RVA = "0x116CCC8", Offset = "0x116CCC8", VA = "0x116CCC8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001D70")]
		[Address(RVA = "0x116D268", Offset = "0x116D268", VA = "0x116D268")]
		public void OnInterstitialBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D71")]
		[Address(RVA = "0x116D280", Offset = "0x116D280", VA = "0x116D280")]
		public void OnRewarded1Btn_Clicked()
		{
		}

		[Token(Token = "0x6001D72")]
		[Address(RVA = "0x116D2D4", Offset = "0x116D2D4", VA = "0x116D2D4")]
		public void OnRewarded2Btn_Clicked()
		{
		}

		[Token(Token = "0x6001D73")]
		[Address(RVA = "0x116D328", Offset = "0x116D328", VA = "0x116D328")]
		public void OnNewSessionBtn_Clicked()
		{
		}

		[Token(Token = "0x6001D74")]
		[Address(RVA = "0x116D490", Offset = "0x116D490", VA = "0x116D490")]
		public void OnGdprToggle_ValueChanged(bool value)
		{
		}

		[Token(Token = "0x6001D75")]
		[Address(RVA = "0x116CDF8", Offset = "0x116CDF8", VA = "0x116CDF8")]
		private void UpdateStats(Ad action, Text view)
		{
		}

		[Token(Token = "0x6001D76")]
		[Address(RVA = "0x116D528", Offset = "0x116D528", VA = "0x116D528")]
		private void OnInterstitialAdOpened(InterstitialAd ad)
		{
		}

		[Token(Token = "0x6001D77")]
		[Address(RVA = "0x116D58C", Offset = "0x116D58C", VA = "0x116D58C")]
		private void OnInterstitialAdFailedToOpen(InterstitialAd ad, string reason)
		{
		}

		[Token(Token = "0x6001D78")]
		[Address(RVA = "0x116D610", Offset = "0x116D610", VA = "0x116D610")]
		private void OnInterstitialAdClosed(InterstitialAd ad)
		{
		}

		[Token(Token = "0x6001D79")]
		[Address(RVA = "0x116D614", Offset = "0x116D614", VA = "0x116D614")]
		private void OnRewardedAdLoaded(RewardedAd ad)
		{
		}

		[Token(Token = "0x6001D7A")]
		[Address(RVA = "0x116D6E0", Offset = "0x116D6E0", VA = "0x116D6E0")]
		private void OnRewardedAdExpired(RewardedAd ad)
		{
		}

		[Token(Token = "0x6001D7B")]
		[Address(RVA = "0x116D7AC", Offset = "0x116D7AC", VA = "0x116D7AC")]
		private void OnRewardedAdOpened(RewardedAd ad)
		{
		}

		[Token(Token = "0x6001D7C")]
		[Address(RVA = "0x116D878", Offset = "0x116D878", VA = "0x116D878")]
		private void OnRewardedAdFailedToOpen(RewardedAd ad, string reason)
		{
		}

		[Token(Token = "0x6001D7D")]
		[Address(RVA = "0x116D958", Offset = "0x116D958", VA = "0x116D958")]
		private void OnRewardedAdClosed(RewardedAd ad, bool completed)
		{
		}

		[Token(Token = "0x6001D7E")]
		[Address(RVA = "0x116DA88", Offset = "0x116DA88", VA = "0x116DA88")]
		public SmartAdsExample()
		{
		}

		[Token(Token = "0x6001D7F")]
		[Address(RVA = "0x116DA90", Offset = "0x116DA90", VA = "0x116DA90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3398", Offset = "0xCD3398")]
		private void <Start>b__13_9()
		{
		}

		[Token(Token = "0x6001D80")]
		[Address(RVA = "0x116DBA4", Offset = "0x116DBA4", VA = "0x116DBA4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD33A8", Offset = "0xCD33A8")]
		private void <Start>b__13_13(InterstitialAd action)
		{
		}

		[Token(Token = "0x6001D81")]
		[Address(RVA = "0x116DD0C", Offset = "0x116DD0C", VA = "0x116DD0C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD33B8", Offset = "0xCD33B8")]
		private void <Start>b__13_10(string reason)
		{
		}

		[Token(Token = "0x6001D82")]
		[Address(RVA = "0x116DDEC", Offset = "0x116DDEC", VA = "0x116DDEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD33C8", Offset = "0xCD33C8")]
		private void <Start>b__13_11()
		{
		}

		[Token(Token = "0x6001D83")]
		[Address(RVA = "0x116DF68", Offset = "0x116DF68", VA = "0x116DF68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD33D8", Offset = "0xCD33D8")]
		private void <Start>b__13_14(RewardedAd action)
		{
		}

		[Token(Token = "0x6001D84")]
		[Address(RVA = "0x116E150", Offset = "0x116E150", VA = "0x116E150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD33E8", Offset = "0xCD33E8")]
		private void <Start>b__13_15(RewardedAd action)
		{
		}

		[Token(Token = "0x6001D85")]
		[Address(RVA = "0x116E338", Offset = "0x116E338", VA = "0x116E338")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD33F8", Offset = "0xCD33F8")]
		private void <Start>b__13_12(string reason)
		{
		}
	}
	[Token(Token = "0x20004D2")]
	public class GameEvent<T> where T : GameEvent<T>
	{
		[Token(Token = "0x400186B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal readonly Params parameters;

		[Token(Token = "0x400186C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD03C", Offset = "0xCCD03C")]
		private string <Name>k__BackingField;

		[Token(Token = "0x170002E2")]
		public string Name
		{
			[Token(Token = "0x6001D87")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3408", Offset = "0xCD3408")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001D88")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3418", Offset = "0xCD3418")]
			private set
			{
			}
		}

		[Token(Token = "0x6001D86")]
		public GameEvent(string name)
		{
		}

		[Token(Token = "0x6001D89")]
		public T AddParam(string key, object value)
		{
			return null;
		}

		[Token(Token = "0x6001D8A")]
		public Dictionary<string, object> AsDictionary()
		{
			return null;
		}
	}
	[Token(Token = "0x20004D3")]
	public class GameEvent : GameEvent<GameEvent>
	{
		[Token(Token = "0x6001D8B")]
		[Address(RVA = "0x115B5FC", Offset = "0x115B5FC", VA = "0x115B5FC")]
		public GameEvent(string name)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D4")]
	[AttributeAttribute(Name = "XmlRootAttribute", RVA = "0xCBEC50", Offset = "0xCBEC50")]
	public sealed class APIConfiguration
	{
		[Token(Token = "0x400186D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xCCD04C", Offset = "0xCCD04C")]
		public string ApiKey;

		[Token(Token = "0x6001D8C")]
		[Address(RVA = "0xF76ADC", Offset = "0xF76ADC", VA = "0xF76ADC")]
		public APIConfiguration()
		{
		}
	}
	[Token(Token = "0x20004D5")]
	internal class ActionStore
	{
		[Token(Token = "0x2000681")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFA0C", Offset = "0xCBFA0C")]
		private sealed class <>c__DisplayClass4_0
		{
			[Token(Token = "0x4001EFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public byte[] hash;

			[Token(Token = "0x600244E")]
			[Address(RVA = "0xF773FC", Offset = "0xF773FC", VA = "0xF773FC")]
			public <>c__DisplayClass4_0()
			{
			}

			[Token(Token = "0x600244F")]
			[Address(RVA = "0xF77D1C", Offset = "0xF77D1C", VA = "0xF77D1C")]
			internal bool <Get>b__0(byte t, int i)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000682")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFA1C", Offset = "0xCBFA1C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001EFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001EFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<byte, bool> <>9__8_0;

			[Token(Token = "0x6002451")]
			[Address(RVA = "0xF77D08", Offset = "0xF77D08", VA = "0xF77D08")]
			public <>c()
			{
			}

			[Token(Token = "0x6002452")]
			[Address(RVA = "0xF77D10", Offset = "0xF77D10", VA = "0xF77D10")]
			internal bool <InitialiseSalt>b__8_0(byte e)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400186E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object LOCK;

		[Token(Token = "0x400186F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string location;

		[Token(Token = "0x4001870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private byte[] salt;

		[Token(Token = "0x6001D8D")]
		[Address(RVA = "0xF76B3C", Offset = "0xF76B3C", VA = "0xF76B3C")]
		internal ActionStore(string location)
		{
		}

		[Token(Token = "0x6001D8E")]
		[Address(RVA = "0xF76E98", Offset = "0xF76E98", VA = "0xF76E98", Slot = "4")]
		internal virtual Dictionary<string, object> Get(EventTrigger trigger)
		{
			return null;
		}

		[Token(Token = "0x6001D8F")]
		[Address(RVA = "0xF77554", Offset = "0xF77554", VA = "0xF77554", Slot = "5")]
		internal virtual void Put(EventTrigger trigger, Dictionary<string, object> action)
		{
		}

		[Token(Token = "0x6001D90")]
		[Address(RVA = "0xF77900", Offset = "0xF77900", VA = "0xF77900", Slot = "6")]
		internal virtual void Remove(EventTrigger trigger)
		{
		}

		[Token(Token = "0x6001D91")]
		[Address(RVA = "0xF77A68", Offset = "0xF77A68", VA = "0xF77A68", Slot = "7")]
		internal virtual void Clear()
		{
		}

		[Token(Token = "0x6001D92")]
		[Address(RVA = "0xF76C8C", Offset = "0xF76C8C", VA = "0xF76C8C")]
		private void InitialiseSalt()
		{
		}

		[Token(Token = "0x6001D93")]
		[Address(RVA = "0xF77404", Offset = "0xF77404", VA = "0xF77404")]
		private static byte[] GeneratedSaltedHash(byte[] text, byte[] salt)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D6")]
	internal static class ClientInfo
	{
		[Token(Token = "0x4001871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string platform;

		[Token(Token = "0x4001872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string deviceName;

		[Token(Token = "0x4001873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string deviceModel;

		[Token(Token = "0x4001874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string deviceType;

		[Token(Token = "0x4001875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static string operatingSystem;

		[Token(Token = "0x4001876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static string operatingSystemVersion;

		[Token(Token = "0x4001877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static string manufacturer;

		[Token(Token = "0x4001878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static string timezoneOffset;

		[Token(Token = "0x4001879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static string countryCode;

		[Token(Token = "0x400187A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private static string languageCode;

		[Token(Token = "0x400187B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static string locale;

		[Token(Token = "0x170002E3")]
		public static string Platform
		{
			[Token(Token = "0x6001D95")]
			[Address(RVA = "0x1660B20", Offset = "0x1660B20", VA = "0x1660B20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E4")]
		public static string DeviceName
		{
			[Token(Token = "0x6001D96")]
			[Address(RVA = "0x16612A0", Offset = "0x16612A0", VA = "0x16612A0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E5")]
		public static string DeviceModel
		{
			[Token(Token = "0x6001D97")]
			[Address(RVA = "0x1662A4C", Offset = "0x1662A4C", VA = "0x1662A4C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E6")]
		public static string DeviceType
		{
			[Token(Token = "0x6001D98")]
			[Address(RVA = "0x1662B64", Offset = "0x1662B64", VA = "0x1662B64")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E7")]
		public static string OperatingSystem
		{
			[Token(Token = "0x6001D99")]
			[Address(RVA = "0x1662D80", Offset = "0x1662D80", VA = "0x1662D80")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E8")]
		public static string OperatingSystemVersion
		{
			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0x1663020", Offset = "0x1663020", VA = "0x1663020")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002E9")]
		public static string Manufacturer
		{
			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0x1663248", Offset = "0x1663248", VA = "0x1663248")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EA")]
		public static string TimezoneOffset
		{
			[Token(Token = "0x6001D9C")]
			[Address(RVA = "0x1663438", Offset = "0x1663438", VA = "0x1663438")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EB")]
		public static string CountryCode
		{
			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0x16637CC", Offset = "0x16637CC", VA = "0x16637CC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002EC")]
		public static string LanguageCode
		{
			[Token(Token = "0x6001D9E")]
			[Address(RVA = "0x1663874", Offset = "0x1663874", VA = "0x1663874")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170002ED")]
		public static string Locale
		{
			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0x1663980", Offset = "0x1663980", VA = "0x1663980")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001DA0")]
		[Address(RVA = "0x1663B08", Offset = "0x1663B08", VA = "0x1663B08")]
		private static bool RuntimePlatformIs(string platformName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA1")]
		[Address(RVA = "0x1663C34", Offset = "0x1663C34", VA = "0x1663C34")]
		private static float ScreenSizeInches()
		{
			return default(float);
		}

		[Token(Token = "0x6001DA2")]
		[Address(RVA = "0x1663D00", Offset = "0x1663D00", VA = "0x1663D00")]
		private static bool IsTablet()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DA3")]
		[Address(RVA = "0x1660BC4", Offset = "0x1660BC4", VA = "0x1660BC4")]
		private static string GetPlatform()
		{
			return null;
		}

		[Token(Token = "0x6001DA4")]
		[Address(RVA = "0x1661344", Offset = "0x1661344", VA = "0x1661344")]
		private static string GetDeviceName()
		{
			return null;
		}

		[Token(Token = "0x6001DA5")]
		[Address(RVA = "0x1662AF0", Offset = "0x1662AF0", VA = "0x1662AF0")]
		private static string GetDeviceModel()
		{
			return null;
		}

		[Token(Token = "0x6001DA6")]
		[Address(RVA = "0x1662C08", Offset = "0x1662C08", VA = "0x1662C08")]
		private static string GetDeviceType()
		{
			return null;
		}

		[Token(Token = "0x6001DA7")]
		[Address(RVA = "0x1662E24", Offset = "0x1662E24", VA = "0x1662E24")]
		private static string GetOperatingSystem()
		{
			return null;
		}

		[Token(Token = "0x6001DA8")]
		[Address(RVA = "0x16630C4", Offset = "0x16630C4", VA = "0x16630C4")]
		private static string GetOperatingSystemVersion()
		{
			return null;
		}

		[Token(Token = "0x6001DA9")]
		[Address(RVA = "0x16632EC", Offset = "0x16632EC", VA = "0x16632EC")]
		private static string GetManufacturer()
		{
			return null;
		}

		[Token(Token = "0x6001DAA")]
		[Address(RVA = "0x16634DC", Offset = "0x16634DC", VA = "0x16634DC")]
		private static string GetCurrentTimezoneOffset()
		{
			return null;
		}

		[Token(Token = "0x6001DAB")]
		[Address(RVA = "0x166386C", Offset = "0x166386C", VA = "0x166386C")]
		private static string GetCountryCode()
		{
			return null;
		}

		[Token(Token = "0x6001DAC")]
		[Address(RVA = "0x1663918", Offset = "0x1663918", VA = "0x1663918")]
		private static string GetLanguageCode()
		{
			return null;
		}

		[Token(Token = "0x6001DAD")]
		[Address(RVA = "0x1663A24", Offset = "0x1663A24", VA = "0x1663A24")]
		private static string GetLocale()
		{
			return null;
		}

		[Token(Token = "0x6001DAE")]
		[Address(RVA = "0x1663D6C", Offset = "0x1663D6C", VA = "0x1663D6C")]
		private static string Trim(string value, int length)
		{
			return null;
		}
	}
	[Token(Token = "0x20004D7")]
	internal class ConcurrentQueue<T>
	{
		[Token(Token = "0x400187C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly object queueLock;

		[Token(Token = "0x400187D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Queue<T> queue;

		[Token(Token = "0x170002EE")]
		public int Count
		{
			[Token(Token = "0x6001DB0")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001DB1")]
		public T Peek()
		{
			return (T)null;
		}

		[Token(Token = "0x6001DB2")]
		public void Enqueue(T obj)
		{
		}

		[Token(Token = "0x6001DB3")]
		public T Dequeue()
		{
			return (T)null;
		}

		[Token(Token = "0x6001DB4")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001DB5")]
		public ConcurrentQueue()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20004D8")]
	[AttributeAttribute(Name = "XmlRootAttribute", RVA = "0xCBEC88", Offset = "0xCBEC88")]
	public sealed class Configuration
	{
		[Token(Token = "0x400187E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xCCD084", Offset = "0xCCD084")]
		public string environmentKeyDev;

		[Token(Token = "0x400187F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xCCD0BC", Offset = "0xCCD0BC")]
		public string environmentKeyLive;

		[Token(Token = "0x4001880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xCCD0F4", Offset = "0xCCD0F4")]
		public int environmentKey;

		[Token(Token = "0x4001881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xCCD12C", Offset = "0xCCD12C")]
		public string collectUrl;

		[Token(Token = "0x4001882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xCCD164", Offset = "0xCCD164")]
		public string engageUrl;

		[Token(Token = "0x4001883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xCCD19C", Offset = "0xCCD19C")]
		public string hashSecret;

		[Token(Token = "0x4001884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xCCD1D4", Offset = "0xCCD1D4")]
		public string clientVersion;

		[Token(Token = "0x4001885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "XmlElementAttribute", RVA = "0xCCD20C", Offset = "0xCCD20C")]
		public bool useApplicationVersion;

		[Token(Token = "0x6001DB6")]
		[Address(RVA = "0x165DE3C", Offset = "0x165DE3C", VA = "0x165DE3C")]
		public Configuration()
		{
		}
	}
	[Token(Token = "0x20004D9")]
	public delegate void EngageResponse(string response, int statusCode, string error);
	[Token(Token = "0x20004DA")]
	internal class EngageRequest
	{
		[Token(Token = "0x4001886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD244", Offset = "0xCCD244")]
		private string <DecisionPoint>k__BackingField;

		[Token(Token = "0x4001887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD254", Offset = "0xCCD254")]
		private string <Flavour>k__BackingField;

		[Token(Token = "0x4001888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD264", Offset = "0xCCD264")]
		private Dictionary<string, object> <Parameters>k__BackingField;

		[Token(Token = "0x170002EF")]
		public string DecisionPoint
		{
			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0x16708F4", Offset = "0x16708F4", VA = "0x16708F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3428", Offset = "0xCD3428")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DBD")]
			[Address(RVA = "0x16708FC", Offset = "0x16708FC", VA = "0x16708FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3438", Offset = "0xCD3438")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F0")]
		public string Flavour
		{
			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0x1670904", Offset = "0x1670904", VA = "0x1670904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3448", Offset = "0xCD3448")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DBF")]
			[Address(RVA = "0x167090C", Offset = "0x167090C", VA = "0x167090C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3458", Offset = "0xCD3458")]
			set
			{
			}
		}

		[Token(Token = "0x170002F1")]
		public Dictionary<string, object> Parameters
		{
			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0x1670914", Offset = "0x1670914", VA = "0x1670914")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3468", Offset = "0xCD3468")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0x167091C", Offset = "0x167091C", VA = "0x167091C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3478", Offset = "0xCD3478")]
			set
			{
			}
		}

		[Token(Token = "0x6001DBB")]
		[Address(RVA = "0x1667DA4", Offset = "0x1667DA4", VA = "0x1667DA4")]
		public EngageRequest(string decisionPoint)
		{
		}

		[Token(Token = "0x6001DC2")]
		[Address(RVA = "0x166F28C", Offset = "0x166F28C", VA = "0x166F28C")]
		public string ToJSON()
		{
			return null;
		}

		[Token(Token = "0x6001DC3")]
		[Address(RVA = "0x1670924", Offset = "0x1670924", VA = "0x1670924", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004DB")]
	internal class Engage
	{
		[Token(Token = "0x2000683")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFA2C", Offset = "0xCBFA2C")]
		private sealed class <>c__DisplayClass0_0
		{
			[Token(Token = "0x4001EFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public EngageCache cache;

			[Token(Token = "0x4001EFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public EngageRequest request;

			[Token(Token = "0x4001EFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EngageResponse response;

			[Token(Token = "0x6002453")]
			[Address(RVA = "0x166E058", Offset = "0x166E058", VA = "0x166E058")]
			public <>c__DisplayClass0_0()
			{
			}

			[Token(Token = "0x6002454")]
			[Address(RVA = "0x166E060", Offset = "0x166E060", VA = "0x166E060")]
			internal void <Request>b__0(int statusCode, string data, string error)
			{
			}
		}

		[Token(Token = "0x2000684")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFA3C", Offset = "0xCBFA3C")]
		private sealed class <Request>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public EngageCache cache;

			[Token(Token = "0x4001F03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public EngageRequest request;

			[Token(Token = "0x4001F04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public EngageResponse response;

			[Token(Token = "0x4001F05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool useConfigurationTimeout;

			[Token(Token = "0x4001F06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public MonoBehaviour caller;

			[Token(Token = "0x170003DA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002458")]
				[Address(RVA = "0x166F6AC", Offset = "0x166F6AC", VA = "0x166F6AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600245A")]
				[Address(RVA = "0x166F714", Offset = "0x166F714", VA = "0x166F714", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002455")]
			[Address(RVA = "0x166E024", Offset = "0x166E024", VA = "0x166E024")]
			[DebuggerHidden]
			public <Request>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6002456")]
			[Address(RVA = "0x166F018", Offset = "0x166F018", VA = "0x166F018", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002457")]
			[Address(RVA = "0x166F01C", Offset = "0x166F01C", VA = "0x166F01C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002459")]
			[Address(RVA = "0x166F6B4", Offset = "0x166F6B4", VA = "0x166F6B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x6001DC4")]
		[Address(RVA = "0x1667E68", Offset = "0x1667E68", VA = "0x1667E68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD3488", Offset = "0xCD3488")]
		internal static IEnumerator Request(MonoBehaviour caller, EngageCache cache, EngageRequest request, EngageResponse response, bool useConfigurationTimeout = false)
		{
			return null;
		}

		[Token(Token = "0x6001DC5")]
		[Address(RVA = "0x166E050", Offset = "0x166E050", VA = "0x166E050")]
		public Engage()
		{
		}
	}
	[Token(Token = "0x20004DC")]
	internal class EngageCache
	{
		[Serializable]
		[Token(Token = "0x2000685")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFA4C", Offset = "0xCBFA4C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<string, string> <>9__6_0;

			[Token(Token = "0x4001F09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<string, string> <>9__6_1;

			[Token(Token = "0x4001F0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<string, string> <>9__6_2;

			[Token(Token = "0x4001F0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<string, DateTime> <>9__6_3;

			[Token(Token = "0x4001F0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<KeyValuePair<string, DateTime>, string> <>9__9_0;

			[Token(Token = "0x600245C")]
			[Address(RVA = "0x166F898", Offset = "0x166F898", VA = "0x166F898")]
			public <>c()
			{
			}

			[Token(Token = "0x600245D")]
			[Address(RVA = "0x166F8A0", Offset = "0x166F8A0", VA = "0x166F8A0")]
			internal string <.ctor>b__6_0(string e)
			{
				return null;
			}

			[Token(Token = "0x600245E")]
			[Address(RVA = "0x166F908", Offset = "0x166F908", VA = "0x166F908")]
			internal string <.ctor>b__6_1(string e)
			{
				return null;
			}

			[Token(Token = "0x600245F")]
			[Address(RVA = "0x166F914", Offset = "0x166F914", VA = "0x166F914")]
			internal string <.ctor>b__6_2(string e)
			{
				return null;
			}

			[Token(Token = "0x6002460")]
			[Address(RVA = "0x166F9B0", Offset = "0x166F9B0", VA = "0x166F9B0")]
			internal DateTime <.ctor>b__6_3(string e)
			{
				return default(DateTime);
			}

			[Token(Token = "0x6002461")]
			[Address(RVA = "0x166FAA0", Offset = "0x166FAA0", VA = "0x166FAA0")]
			internal string <Save>b__9_0(KeyValuePair<string, DateTime> e)
			{
				return null;
			}
		}

		[Token(Token = "0x4001889")]
		private const string TIMES = "times";

		[Token(Token = "0x400188A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object LOCK;

		[Token(Token = "0x400188B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Settings settings;

		[Token(Token = "0x400188C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly string location;

		[Token(Token = "0x400188D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly IDictionary<string, string> cache;

		[Token(Token = "0x400188E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly IDictionary<string, DateTime> times;

		[Token(Token = "0x6001DC6")]
		[Address(RVA = "0x166656C", Offset = "0x166656C", VA = "0x166656C")]
		internal EngageCache(Settings settings)
		{
		}

		[Token(Token = "0x6001DC7")]
		[Address(RVA = "0x166E31C", Offset = "0x166E31C", VA = "0x166E31C")]
		internal void Put(string decisionPoint, string flavour, string data)
		{
		}

		[Token(Token = "0x6001DC8")]
		[Address(RVA = "0x166E5C4", Offset = "0x166E5C4", VA = "0x166E5C4")]
		internal string Get(string decisionPoint, string flavour)
		{
			return null;
		}

		[Token(Token = "0x6001DC9")]
		[Address(RVA = "0x1666CF8", Offset = "0x1666CF8", VA = "0x1666CF8")]
		internal void Save()
		{
		}

		[Token(Token = "0x6001DCA")]
		[Address(RVA = "0x1667328", Offset = "0x1667328", VA = "0x1667328")]
		internal void Clear()
		{
		}

		[Token(Token = "0x6001DCB")]
		[Address(RVA = "0x166F71C", Offset = "0x166F71C", VA = "0x166F71C")]
		private void CreateDirectory()
		{
		}

		[Token(Token = "0x6001DCC")]
		[Address(RVA = "0x166F75C", Offset = "0x166F75C", VA = "0x166F75C")]
		private static string Key(string decisionPoint, string flavour)
		{
			return null;
		}
	}
	[Token(Token = "0x20004DD")]
	public class EventStore : IDisposable
	{
		[Token(Token = "0x400188F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly string PF_KEY_IN_FILE;

		[Token(Token = "0x4001890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly string PF_KEY_OUT_FILE;

		[Token(Token = "0x4001891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly string FILE_A;

		[Token(Token = "0x4001892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly string FILE_B;

		[Token(Token = "0x4001893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly long MAX_FILE_SIZE_BYTES;

		[Token(Token = "0x4001894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _initialised;

		[Token(Token = "0x4001895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		private bool _disposed;

		[Token(Token = "0x4001896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Stream _infs;

		[Token(Token = "0x4001897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Stream _outfs;

		[Token(Token = "0x4001898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static object _lock;

		[Token(Token = "0x170002F2")]
		public bool IsInitialised
		{
			[Token(Token = "0x6001DCF")]
			[Address(RVA = "0x167126C", Offset = "0x167126C", VA = "0x167126C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001DCE")]
		[Address(RVA = "0x1666478", Offset = "0x1666478", VA = "0x1666478")]
		public EventStore(string dir)
		{
		}

		[Token(Token = "0x6001DD0")]
		[Address(RVA = "0x1671274", Offset = "0x1671274", VA = "0x1671274")]
		public bool Push(string obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD1")]
		[Address(RVA = "0x166C9C8", Offset = "0x166C9C8", VA = "0x166C9C8")]
		public bool Swap()
		{
			return default(bool);
		}

		[Token(Token = "0x6001DD2")]
		[Address(RVA = "0x166CC3C", Offset = "0x166CC3C", VA = "0x166CC3C")]
		public List<string> Read()
		{
			return null;
		}

		[Token(Token = "0x6001DD3")]
		[Address(RVA = "0x166B3CC", Offset = "0x166B3CC", VA = "0x166B3CC")]
		public void ClearOut()
		{
		}

		[Token(Token = "0x6001DD4")]
		[Address(RVA = "0x16694D4", Offset = "0x16694D4", VA = "0x16694D4")]
		public void ClearAll()
		{
		}

		[Token(Token = "0x6001DD5")]
		[Address(RVA = "0x1666BD0", Offset = "0x1666BD0", VA = "0x1666BD0")]
		public void FlushBuffers()
		{
		}

		[Token(Token = "0x6001DD6")]
		[Address(RVA = "0x1671998", Offset = "0x1671998", VA = "0x1671998", Slot = "1")]
		~EventStore()
		{
		}

		[Token(Token = "0x6001DD7")]
		[Address(RVA = "0x16671D0", Offset = "0x16671D0", VA = "0x16671D0", Slot = "4")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001DD8")]
		[Address(RVA = "0x1671A0C", Offset = "0x1671A0C", VA = "0x1671A0C", Slot = "5")]
		protected virtual void Dispose(bool disposing)
		{
		}

		[Token(Token = "0x6001DD9")]
		[Address(RVA = "0x1670F10", Offset = "0x1670F10", VA = "0x1670F10")]
		private bool InitialiseFileStreams(string dir)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDA")]
		[Address(RVA = "0x1671410", Offset = "0x1671410", VA = "0x1671410")]
		public static bool PushEvent(string obj, Stream stream)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DDB")]
		[Address(RVA = "0x167166C", Offset = "0x167166C", VA = "0x167166C")]
		public static void ReadEvents(Stream stream, IList<string> events)
		{
		}

		[Token(Token = "0x6001DDC")]
		[Address(RVA = "0x16715AC", Offset = "0x16715AC", VA = "0x16715AC")]
		public static void SwapStreams(ref Stream sin, ref Stream sout)
		{
		}

		[Token(Token = "0x6001DDD")]
		[Address(RVA = "0x167192C", Offset = "0x167192C", VA = "0x167192C")]
		public static void ClearStream(Stream stream)
		{
		}
	}
	[Token(Token = "0x20004DE")]
	internal class ImageMessageStore
	{
		[Token(Token = "0x2000686")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFA5C", Offset = "0xCBFA5C")]
		private sealed class <>c__DisplayClass5_0
		{
			[Token(Token = "0x4001F0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ImageMessageStore <>4__this;

			[Token(Token = "0x4001F0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string url;

			[Token(Token = "0x4001F0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Action<Texture2D> onSuccess;

			[Token(Token = "0x6002462")]
			[Address(RVA = "0x11623B8", Offset = "0x11623B8", VA = "0x11623B8")]
			public <>c__DisplayClass5_0()
			{
			}

			[Token(Token = "0x6002463")]
			[Address(RVA = "0x11623C0", Offset = "0x11623C0", VA = "0x11623C0")]
			internal void <Get>b__0(string fileTempPath)
			{
			}
		}

		[Token(Token = "0x2000687")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFA6C", Offset = "0xCBFA6C")]
		private sealed class <Get>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImageMessageStore <>4__this;

			[Token(Token = "0x4001F13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4001F14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<Texture2D> onSuccess;

			[Token(Token = "0x4001F15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<string> onError;

			[Token(Token = "0x170003DC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002467")]
				[Address(RVA = "0x1162D4C", Offset = "0x1162D4C", VA = "0x1162D4C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DD")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002469")]
				[Address(RVA = "0x1162DB4", Offset = "0x1162DB4", VA = "0x1162DB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002464")]
			[Address(RVA = "0x1162018", Offset = "0x1162018", VA = "0x1162018")]
			[DebuggerHidden]
			public <Get>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6002465")]
			[Address(RVA = "0x1162B80", Offset = "0x1162B80", VA = "0x1162B80", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002466")]
			[Address(RVA = "0x1162B84", Offset = "0x1162B84", VA = "0x1162B84", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002468")]
			[Address(RVA = "0x1162D54", Offset = "0x1162D54", VA = "0x1162D54", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000688")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFA7C", Offset = "0xCBFA7C")]
		private sealed class <>c__DisplayClass6_0
		{
			[Token(Token = "0x4001F16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int downloading;

			[Token(Token = "0x4001F17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public int maxConcurrent;

			[Token(Token = "0x4001F18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ImageMessageStore <>4__this;

			[Token(Token = "0x4001F19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int downloaded;

			[Token(Token = "0x4001F1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string error;

			[Token(Token = "0x4001F1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Func<bool> <>9__0;

			[Token(Token = "0x4001F1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<string> <>9__2;

			[Token(Token = "0x600246A")]
			[Address(RVA = "0x11624C4", Offset = "0x11624C4", VA = "0x11624C4")]
			public <>c__DisplayClass6_0()
			{
			}

			[Token(Token = "0x600246B")]
			[Address(RVA = "0x11624CC", Offset = "0x11624CC", VA = "0x11624CC")]
			internal bool <Prefetch>b__0()
			{
				return default(bool);
			}

			[Token(Token = "0x600246C")]
			[Address(RVA = "0x11624DC", Offset = "0x11624DC", VA = "0x11624DC")]
			internal void <Prefetch>b__2(string e)
			{
			}
		}

		[Token(Token = "0x2000689")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFA8C", Offset = "0xCBFA8C")]
		private sealed class <>c__DisplayClass6_1
		{
			[Token(Token = "0x4001F1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string url;

			[Token(Token = "0x4001F1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public <>c__DisplayClass6_0 CS$<>8__locals1;

			[Token(Token = "0x600246D")]
			[Address(RVA = "0x1162510", Offset = "0x1162510", VA = "0x1162510")]
			public <>c__DisplayClass6_1()
			{
			}

			[Token(Token = "0x600246E")]
			[Address(RVA = "0x1162518", Offset = "0x1162518", VA = "0x1162518")]
			internal void <Prefetch>b__1(string t)
			{
			}
		}

		[Token(Token = "0x200068A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFA9C", Offset = "0xCBFA9C")]
		private sealed class <Prefetch>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImageMessageStore <>4__this;

			[Token(Token = "0x4001F22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string[] urls;

			[Token(Token = "0x4001F23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public System.Action onSuccess;

			[Token(Token = "0x4001F24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private <>c__DisplayClass6_0 <>8__1;

			[Token(Token = "0x4001F25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private <>c__DisplayClass6_1 <>8__2;

			[Token(Token = "0x4001F26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public Action<string> onError;

			[Token(Token = "0x4001F27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private string[] <>7__wrap1;

			[Token(Token = "0x4001F28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <>7__wrap2;

			[Token(Token = "0x170003DE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002472")]
				[Address(RVA = "0x11632F8", Offset = "0x11632F8", VA = "0x11632F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003DF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002474")]
				[Address(RVA = "0x1163360", Offset = "0x1163360", VA = "0x1163360", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600246F")]
			[Address(RVA = "0x116210C", Offset = "0x116210C", VA = "0x116210C")]
			[DebuggerHidden]
			public <Prefetch>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6002470")]
			[Address(RVA = "0x1162DBC", Offset = "0x1162DBC", VA = "0x1162DBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002471")]
			[Address(RVA = "0x1162DC0", Offset = "0x1162DC0", VA = "0x1162DC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002473")]
			[Address(RVA = "0x1163300", Offset = "0x1163300", VA = "0x1163300", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200068B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFAAC", Offset = "0xCBFAAC")]
		private sealed class <Fetch>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ImageMessageStore <>4__this;

			[Token(Token = "0x4001F2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string url;

			[Token(Token = "0x4001F2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Action<string> onError;

			[Token(Token = "0x4001F2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Action<string> onSuccess;

			[Token(Token = "0x4001F2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private string <filePathTmp>5__2;

			[Token(Token = "0x4001F30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private DownloadHandlerFile <downloadHandler>5__3;

			[Token(Token = "0x4001F31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <www>5__4;

			[Token(Token = "0x170003E0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x600247A")]
				[Address(RVA = "0x1162B10", Offset = "0x1162B10", VA = "0x1162B10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600247C")]
				[Address(RVA = "0x1162B78", Offset = "0x1162B78", VA = "0x1162B78", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002475")]
			[Address(RVA = "0x1162244", Offset = "0x1162244", VA = "0x1162244")]
			[DebuggerHidden]
			public <Fetch>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6002476")]
			[Address(RVA = "0x11625A8", Offset = "0x11625A8", VA = "0x11625A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002477")]
			[Address(RVA = "0x11627A0", Offset = "0x11627A0", VA = "0x11627A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002478")]
			[Address(RVA = "0x11626E0", Offset = "0x11626E0", VA = "0x11626E0")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6002479")]
			[Address(RVA = "0x1162620", Offset = "0x1162620", VA = "0x1162620")]
			private void <>m__Finally2()
			{
			}

			[Token(Token = "0x600247B")]
			[Address(RVA = "0x1162B18", Offset = "0x1162B18", VA = "0x1162B18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly string cache;

		[Token(Token = "0x400189A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly MonoBehaviour parent;

		[Token(Token = "0x6001DDF")]
		[Address(RVA = "0x1161CA0", Offset = "0x1161CA0", VA = "0x1161CA0")]
		internal ImageMessageStore(MonoBehaviour parent)
		{
		}

		[Token(Token = "0x6001DE0")]
		[Address(RVA = "0x1161E8C", Offset = "0x1161E8C", VA = "0x1161E8C", Slot = "4")]
		internal virtual bool Has(string url)
		{
			return default(bool);
		}

		[Token(Token = "0x6001DE1")]
		[Address(RVA = "0x1161F44", Offset = "0x1161F44", VA = "0x1161F44")]
		internal Texture2D Get(string url)
		{
			return null;
		}

		[Token(Token = "0x6001DE2")]
		[Address(RVA = "0x116166C", Offset = "0x116166C", VA = "0x116166C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD34EC", Offset = "0xCD34EC")]
		internal IEnumerator Get(string url, Action<Texture2D> onSuccess, Action<string> onError)
		{
			return null;
		}

		[Token(Token = "0x6001DE3")]
		[Address(RVA = "0x1162044", Offset = "0x1162044", VA = "0x1162044")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD3550", Offset = "0xCD3550")]
		internal IEnumerator Prefetch(System.Action onSuccess, Action<string> onError, params string[] urls)
		{
			return null;
		}

		[Token(Token = "0x6001DE4")]
		[Address(RVA = "0x1162138", Offset = "0x1162138", VA = "0x1162138")]
		internal void Clear()
		{
		}

		[Token(Token = "0x6001DE5")]
		[Address(RVA = "0x116217C", Offset = "0x116217C", VA = "0x116217C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD35B4", Offset = "0xCD35B4")]
		private IEnumerator Fetch(string url, Action<string> onSuccess, Action<string> onError)
		{
			return null;
		}

		[Token(Token = "0x6001DE6")]
		[Address(RVA = "0x1161EC4", Offset = "0x1161EC4", VA = "0x1161EC4")]
		private static string GetName(string url)
		{
			return null;
		}

		[Token(Token = "0x6001DE7")]
		[Address(RVA = "0x1162270", Offset = "0x1162270", VA = "0x1162270")]
		private bool IsFull()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004DF")]
	public static class Logger
	{
		[Token(Token = "0x200068C")]
		public enum Level
		{
			[Token(Token = "0x4001F33")]
			DEBUG,
			[Token(Token = "0x4001F34")]
			INFO,
			[Token(Token = "0x4001F35")]
			WARNING,
			[Token(Token = "0x4001F36")]
			ERROR
		}

		[Token(Token = "0x400189B")]
		public const string PREFIX = "[DDSDK] ";

		[Token(Token = "0x400189C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Level sLogLevel;

		[Token(Token = "0x170002F3")]
		internal static Level LogLevel
		{
			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x1165128", Offset = "0x1165128", VA = "0x1165128")]
			get
			{
				return default(Level);
			}
		}

		[Token(Token = "0x6001DE8")]
		[Address(RVA = "0x11650BC", Offset = "0x11650BC", VA = "0x11650BC")]
		public static void SetLogLevel(Level logLevel)
		{
		}

		[Token(Token = "0x6001DEA")]
		[Address(RVA = "0x1164E5C", Offset = "0x1164E5C", VA = "0x1164E5C")]
		internal static void LogDebug(string msg)
		{
		}

		[Token(Token = "0x6001DEB")]
		[Address(RVA = "0x1161DF0", Offset = "0x1161DF0", VA = "0x1161DF0")]
		internal static void LogInfo(string msg)
		{
		}

		[Token(Token = "0x6001DEC")]
		[Address(RVA = "0x115D050", Offset = "0x115D050", VA = "0x115D050")]
		internal static void LogWarning(string msg)
		{
		}

		[Token(Token = "0x6001DED")]
		[Address(RVA = "0x115F9F4", Offset = "0x115F9F4", VA = "0x115F9F4")]
		internal static void LogError(string msg)
		{
		}

		[Token(Token = "0x6001DEE")]
		[Address(RVA = "0x1165190", Offset = "0x1165190", VA = "0x1165190")]
		private static void Log(string msg, Level level)
		{
		}

		[Token(Token = "0x6001DEF")]
		[Address(RVA = "0x11652F8", Offset = "0x11652F8", VA = "0x11652F8")]
		internal static void HandleLog(string logString, string stackTrace, LogType type)
		{
		}
	}
	[Token(Token = "0x20004E0")]
	internal class HttpRequest
	{
		[Token(Token = "0x200068D")]
		internal enum HTTPMethodType
		{
			[Token(Token = "0x4001F38")]
			GET,
			[Token(Token = "0x4001F39")]
			POST
		}

		[Token(Token = "0x400189D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, string> headers;

		[Token(Token = "0x400189E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD274", Offset = "0xCCD274")]
		private string <URL>k__BackingField;

		[Token(Token = "0x400189F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD284", Offset = "0xCCD284")]
		private HTTPMethodType <HTTPMethod>k__BackingField;

		[Token(Token = "0x40018A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD294", Offset = "0xCCD294")]
		private string <HTTPBody>k__BackingField;

		[Token(Token = "0x40018A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD2A4", Offset = "0xCCD2A4")]
		private int <TimeoutSeconds>k__BackingField;

		[Token(Token = "0x170002F4")]
		internal string URL
		{
			[Token(Token = "0x6001DF2")]
			[Address(RVA = "0x115B9A4", Offset = "0x115B9A4", VA = "0x115B9A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3618", Offset = "0xCD3618")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0x115B9AC", Offset = "0x115B9AC", VA = "0x115B9AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3628", Offset = "0xCD3628")]
			private set
			{
			}
		}

		[Token(Token = "0x170002F5")]
		internal HTTPMethodType HTTPMethod
		{
			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0x115B9B4", Offset = "0x115B9B4", VA = "0x115B9B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3638", Offset = "0xCD3638")]
			get
			{
				return default(HTTPMethodType);
			}
			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0x115B9BC", Offset = "0x115B9BC", VA = "0x115B9BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3648", Offset = "0xCD3648")]
			set
			{
			}
		}

		[Token(Token = "0x170002F6")]
		internal string HTTPBody
		{
			[Token(Token = "0x6001DF6")]
			[Address(RVA = "0x115B9C4", Offset = "0x115B9C4", VA = "0x115B9C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3658", Offset = "0xCD3658")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0x115B9CC", Offset = "0x115B9CC", VA = "0x115B9CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3668", Offset = "0xCD3668")]
			set
			{
			}
		}

		[Token(Token = "0x170002F7")]
		internal int TimeoutSeconds
		{
			[Token(Token = "0x6001DF8")]
			[Address(RVA = "0x115B9D4", Offset = "0x115B9D4", VA = "0x115B9D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3678", Offset = "0xCD3678")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0x115B9DC", Offset = "0x115B9DC", VA = "0x115B9DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3688", Offset = "0xCD3688")]
			set
			{
			}
		}

		[Token(Token = "0x6001DF1")]
		[Address(RVA = "0x115B8C0", Offset = "0x115B8C0", VA = "0x115B8C0")]
		internal HttpRequest(string url)
		{
		}

		[Token(Token = "0x6001DFA")]
		[Address(RVA = "0x115B9E4", Offset = "0x115B9E4", VA = "0x115B9E4")]
		internal Dictionary<string, string> getHeaders()
		{
			return null;
		}

		[Token(Token = "0x6001DFB")]
		[Address(RVA = "0x115B9EC", Offset = "0x115B9EC", VA = "0x115B9EC")]
		internal void setHeader(string field, string value)
		{
		}

		[Token(Token = "0x6001DFC")]
		[Address(RVA = "0x115BA5C", Offset = "0x115BA5C", VA = "0x115BA5C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20004E1")]
	internal static class Network
	{
		[Token(Token = "0x200068E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFABC", Offset = "0xCBFABC")]
		private sealed class <SendRequest>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HttpRequest request;

			[Token(Token = "0x4001F3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public System.Action<int, string, string> completionHandler;

			[Token(Token = "0x4001F3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170003E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002480")]
				[Address(RVA = "0x1167200", Offset = "0x1167200", VA = "0x1167200", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002482")]
				[Address(RVA = "0x1167268", Offset = "0x1167268", VA = "0x1167268", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600247D")]
			[Address(RVA = "0x1166E90", Offset = "0x1166E90", VA = "0x1166E90")]
			[DebuggerHidden]
			public <SendRequest>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x600247E")]
			[Address(RVA = "0x1166EBC", Offset = "0x1166EBC", VA = "0x1166EBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600247F")]
			[Address(RVA = "0x1166EC0", Offset = "0x1166EC0", VA = "0x1166EC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002481")]
			[Address(RVA = "0x1167208", Offset = "0x1167208", VA = "0x1167208", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018A2")]
		private const string HeaderKey = "STATUS";

		[Token(Token = "0x40018A3")]
		private const string StatusRegex = "^.*\\s(\\d{3})\\s.*$";

		[Token(Token = "0x40018A4")]
		private const string ErrorRegex = "^(\\d{3})\\s.*$";

		[Token(Token = "0x6001DFD")]
		[Address(RVA = "0x1166DF8", Offset = "0x1166DF8", VA = "0x1166DF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD3698", Offset = "0xCD3698")]
		internal static IEnumerator SendRequest(HttpRequest request, System.Action<int, string, string> completionHandler)
		{
			return null;
		}
	}
	[Token(Token = "0x20004E2")]
	public class OrientationChange : MonoBehaviour
	{
		[Token(Token = "0x200068F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFACC", Offset = "0xCBFACC")]
		private sealed class <CheckForChange>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OrientationChange <>4__this;

			[Token(Token = "0x170003E4")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6002486")]
				[Address(RVA = "0x1167690", Offset = "0x1167690", VA = "0x1167690", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003E5")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6002488")]
				[Address(RVA = "0x11676F8", Offset = "0x11676F8", VA = "0x11676F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002483")]
			[Address(RVA = "0x1167478", Offset = "0x1167478", VA = "0x1167478")]
			[DebuggerHidden]
			public <CheckForChange>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6002484")]
			[Address(RVA = "0x11674D4", Offset = "0x11674D4", VA = "0x11674D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002485")]
			[Address(RVA = "0x11674D8", Offset = "0x11674D8", VA = "0x11674D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002487")]
			[Address(RVA = "0x1167698", Offset = "0x1167698", VA = "0x1167698", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40018A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector2 resolution;

		[Token(Token = "0x40018A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private DeviceOrientation orientation;

		[Token(Token = "0x40018A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool running;

		[Token(Token = "0x1400002D")]
		private event System.Action onChange
		{
			[Token(Token = "0x6001DFE")]
			[Address(RVA = "0x1167270", Offset = "0x1167270", VA = "0x1167270")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD36FC", Offset = "0xCD36FC")]
			add
			{
			}
			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0x1167314", Offset = "0x1167314", VA = "0x1167314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD370C", Offset = "0xCD370C")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E00")]
		[Address(RVA = "0x11673B8", Offset = "0x11673B8", VA = "0x11673B8")]
		private OrientationChange()
		{
		}

		[Token(Token = "0x6001E01")]
		[Address(RVA = "0x11673C8", Offset = "0x11673C8", VA = "0x11673C8")]
		public void Init(System.Action onChange)
		{
		}

		[Token(Token = "0x6001E02")]
		[Address(RVA = "0x11673D0", Offset = "0x11673D0", VA = "0x11673D0")]
		private void Start()
		{
		}

		[Token(Token = "0x6001E03")]
		[Address(RVA = "0x11673FC", Offset = "0x11673FC", VA = "0x11673FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD371C", Offset = "0xCD371C")]
		private IEnumerator CheckForChange()
		{
			return null;
		}

		[Token(Token = "0x6001E04")]
		[Address(RVA = "0x11674A4", Offset = "0x11674A4", VA = "0x11674A4")]
		private void OnDestroy()
		{
		}
	}
	[Token(Token = "0x20004E3")]
	public sealed class Platform
	{
		[Token(Token = "0x40018A9")]
		public const string ANDROID = "ANDROID";

		[Token(Token = "0x40018AA")]
		public const string AMAZON = "AMAZON";

		[Token(Token = "0x40018AB")]
		public const string IOS = "IOS";

		[Token(Token = "0x40018AC")]
		public const string IOS_TV = "IOS_TV";

		[Token(Token = "0x40018AD")]
		public const string WINDOWS_MOBILE = "WINDOWS_MOBILE";

		[Token(Token = "0x40018AE")]
		public const string BLACKBERRY = "BLACKBERRY";

		[Token(Token = "0x40018AF")]
		public const string FACEBOOK = "FACEBOOK";

		[Token(Token = "0x40018B0")]
		public const string PC_CLIENT = "PC_CLIENT";

		[Token(Token = "0x40018B1")]
		public const string MAC_CLIENT = "MAC_CLIENT";

		[Token(Token = "0x40018B2")]
		public const string WEB = "WEB";

		[Token(Token = "0x40018B3")]
		public const string PSVITA = "PSVITA";

		[Token(Token = "0x40018B4")]
		public const string PS4 = "PS4";

		[Token(Token = "0x40018B5")]
		public const string PS3 = "PS3";

		[Token(Token = "0x40018B6")]
		public const string XBOXONE = "XBOXONE";

		[Token(Token = "0x40018B7")]
		public const string XBOX360 = "XBOX360";

		[Token(Token = "0x40018B8")]
		public const string WIIU = "WIIU";

		[Token(Token = "0x40018B9")]
		public const string SWITCH = "SWITCH";

		[Token(Token = "0x40018BA")]
		public const string UNKNOWN = "UNKNOWN";

		[Token(Token = "0x6001E05")]
		[Address(RVA = "0x1167C80", Offset = "0x1167C80", VA = "0x1167C80")]
		public Platform()
		{
		}
	}
	[Token(Token = "0x20004E4")]
	public class Settings
	{
		[Token(Token = "0x40018BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly string SDK_VERSION;

		[Token(Token = "0x40018BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal static readonly string ENGAGE_API_VERSION;

		[Token(Token = "0x40018BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal static readonly string EVENT_STORAGE_PATH;

		[Token(Token = "0x40018BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal static readonly string ENGAGE_STORAGE_PATH;

		[Token(Token = "0x40018BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal static readonly string ACTIONS_STORAGE_PATH;

		[Token(Token = "0x40018C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal static readonly string LEGACY_SETTINGS_STORAGE_PATH;

		[Token(Token = "0x40018C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal static readonly string EVENT_TIMESTAMP_FORMAT;

		[Token(Token = "0x40018C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal static readonly string USERID_URL_PATTERN;

		[Token(Token = "0x40018C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal static readonly string COLLECT_URL_PATTERN;

		[Token(Token = "0x40018C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal static readonly string COLLECT_HASH_URL_PATTERN;

		[Token(Token = "0x40018C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal static readonly string ENGAGE_URL_PATTERN;

		[Token(Token = "0x40018C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal static readonly string ENGAGE_HASH_URL_PATTERN;

		[Token(Token = "0x40018C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private bool _debugMode;

		[Token(Token = "0x40018C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD2C4", Offset = "0xCCD2C4")]
		private bool <OnFirstRunSendNewPlayerEvent>k__BackingField;

		[Token(Token = "0x40018C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD2D4", Offset = "0xCCD2D4")]
		private bool <OnInitSendClientDeviceEvent>k__BackingField;

		[Token(Token = "0x40018CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD2E4", Offset = "0xCCD2E4")]
		private bool <OnInitSendGameStartedEvent>k__BackingField;

		[Token(Token = "0x40018CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD2F4", Offset = "0xCCD2F4")]
		private float <HttpRequestRetryDelaySeconds>k__BackingField;

		[Token(Token = "0x40018CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD304", Offset = "0xCCD304")]
		private int <HttpRequestMaxRetries>k__BackingField;

		[Token(Token = "0x40018CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD314", Offset = "0xCCD314")]
		private int <HttpRequestCollectTimeoutSeconds>k__BackingField;

		[Token(Token = "0x40018CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD324", Offset = "0xCCD324")]
		private int <HttpRequestEngageTimeoutSeconds>k__BackingField;

		[Token(Token = "0x40018CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD334", Offset = "0xCCD334")]
		private bool <BackgroundEventUpload>k__BackingField;

		[Token(Token = "0x40018D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD344", Offset = "0xCCD344")]
		private int <BackgroundEventUploadStartDelaySeconds>k__BackingField;

		[Token(Token = "0x40018D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD354", Offset = "0xCCD354")]
		private int <BackgroundEventUploadRepeatRateSeconds>k__BackingField;

		[Token(Token = "0x40018D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD364", Offset = "0xCCD364")]
		private bool <UseEventStore>k__BackingField;

		[Token(Token = "0x40018D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD374", Offset = "0xCCD374")]
		private int <SessionTimeoutSeconds>k__BackingField;

		[Token(Token = "0x40018D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD384", Offset = "0xCCD384")]
		private int <EngageCacheExpirySeconds>k__BackingField;

		[Token(Token = "0x40018D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD394", Offset = "0xCCD394")]
		private int <ImageCacheLimitMB>k__BackingField;

		[Token(Token = "0x40018D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD3A4", Offset = "0xCCD3A4")]
		private int <MaxConcurrentImageCacheFetches>k__BackingField;

		[Token(Token = "0x40018D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD3B4", Offset = "0xCCD3B4")]
		private bool <AdvertiserGdprUserConsent>k__BackingField;

		[Token(Token = "0x40018D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD3C4", Offset = "0xCCD3C4")]
		private bool <AdvertiserGdprAgeRestrictedUser>k__BackingField;

		[Token(Token = "0x40018D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x46")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD3D4", Offset = "0xCCD3D4")]
		private bool <MultipleActionsForEventTriggerEnabled>k__BackingField;

		[Token(Token = "0x40018DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x47")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD3E4", Offset = "0xCCD3E4")]
		private bool <MultipleActionsForImageMessagesEnabled>k__BackingField;

		[Token(Token = "0x40018DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD3F4", Offset = "0xCCD3F4")]
		private GameParametersHandler <DefaultGameParameterHandler>k__BackingField;

		[Token(Token = "0x40018DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD404", Offset = "0xCCD404")]
		private ImageMessageHandler <DefaultImageMessageHandler>k__BackingField;

		[Token(Token = "0x40018DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD414", Offset = "0xCCD414")]
		private int <HttpRequestConfigurationTimeoutSeconds>k__BackingField;

		[Token(Token = "0x40018DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD424", Offset = "0xCCD424")]
		private int <HttpRequestConfigurationMaxRetries>k__BackingField;

		[Token(Token = "0x40018DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD434", Offset = "0xCCD434")]
		private int <HttpRequestConfigurationRetryBackoffFactorSeconds>k__BackingField;

		[Token(Token = "0x170002F8")]
		public bool OnFirstRunSendNewPlayerEvent
		{
			[Token(Token = "0x6001E07")]
			[Address(RVA = "0x1169E20", Offset = "0x1169E20", VA = "0x1169E20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3780", Offset = "0xCD3780")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E08")]
			[Address(RVA = "0x1169E28", Offset = "0x1169E28", VA = "0x1169E28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3790", Offset = "0xCD3790")]
			set
			{
			}
		}

		[Token(Token = "0x170002F9")]
		public bool OnInitSendClientDeviceEvent
		{
			[Token(Token = "0x6001E09")]
			[Address(RVA = "0x1169E34", Offset = "0x1169E34", VA = "0x1169E34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD37A0", Offset = "0xCD37A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E0A")]
			[Address(RVA = "0x1169E3C", Offset = "0x1169E3C", VA = "0x1169E3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD37B0", Offset = "0xCD37B0")]
			set
			{
			}
		}

		[Token(Token = "0x170002FA")]
		public bool OnInitSendGameStartedEvent
		{
			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x1169E48", Offset = "0x1169E48", VA = "0x1169E48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD37C0", Offset = "0xCD37C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0x1169E50", Offset = "0x1169E50", VA = "0x1169E50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD37D0", Offset = "0xCD37D0")]
			set
			{
			}
		}

		[Token(Token = "0x170002FB")]
		public bool DebugMode
		{
			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x1169E5C", Offset = "0x1169E5C", VA = "0x1169E5C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E0E")]
			[Address(RVA = "0x1169D50", Offset = "0x1169D50", VA = "0x1169D50")]
			set
			{
			}
		}

		[Token(Token = "0x170002FC")]
		public float HttpRequestRetryDelaySeconds
		{
			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x1169E64", Offset = "0x1169E64", VA = "0x1169E64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD37E0", Offset = "0xCD37E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001E10")]
			[Address(RVA = "0x1169E6C", Offset = "0x1169E6C", VA = "0x1169E6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD37F0", Offset = "0xCD37F0")]
			set
			{
			}
		}

		[Token(Token = "0x170002FD")]
		public int HttpRequestMaxRetries
		{
			[Token(Token = "0x6001E11")]
			[Address(RVA = "0x1169E74", Offset = "0x1169E74", VA = "0x1169E74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3800", Offset = "0xCD3800")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E12")]
			[Address(RVA = "0x1169E7C", Offset = "0x1169E7C", VA = "0x1169E7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3810", Offset = "0xCD3810")]
			set
			{
			}
		}

		[Token(Token = "0x170002FE")]
		public int HttpRequestCollectTimeoutSeconds
		{
			[Token(Token = "0x6001E13")]
			[Address(RVA = "0x1169E84", Offset = "0x1169E84", VA = "0x1169E84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3820", Offset = "0xCD3820")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E14")]
			[Address(RVA = "0x1169E8C", Offset = "0x1169E8C", VA = "0x1169E8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3830", Offset = "0xCD3830")]
			set
			{
			}
		}

		[Token(Token = "0x170002FF")]
		public int HttpRequestEngageTimeoutSeconds
		{
			[Token(Token = "0x6001E15")]
			[Address(RVA = "0x1169E94", Offset = "0x1169E94", VA = "0x1169E94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3840", Offset = "0xCD3840")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E16")]
			[Address(RVA = "0x1169E9C", Offset = "0x1169E9C", VA = "0x1169E9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3850", Offset = "0xCD3850")]
			set
			{
			}
		}

		[Token(Token = "0x17000300")]
		public bool BackgroundEventUpload
		{
			[Token(Token = "0x6001E17")]
			[Address(RVA = "0x1169EA4", Offset = "0x1169EA4", VA = "0x1169EA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3860", Offset = "0xCD3860")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E18")]
			[Address(RVA = "0x1169EAC", Offset = "0x1169EAC", VA = "0x1169EAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3870", Offset = "0xCD3870")]
			set
			{
			}
		}

		[Token(Token = "0x17000301")]
		public int BackgroundEventUploadStartDelaySeconds
		{
			[Token(Token = "0x6001E19")]
			[Address(RVA = "0x1169EB8", Offset = "0x1169EB8", VA = "0x1169EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3880", Offset = "0xCD3880")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E1A")]
			[Address(RVA = "0x1169EC0", Offset = "0x1169EC0", VA = "0x1169EC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3890", Offset = "0xCD3890")]
			set
			{
			}
		}

		[Token(Token = "0x17000302")]
		public int BackgroundEventUploadRepeatRateSeconds
		{
			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0x1169EC8", Offset = "0x1169EC8", VA = "0x1169EC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD38A0", Offset = "0xCD38A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E1C")]
			[Address(RVA = "0x1169ED0", Offset = "0x1169ED0", VA = "0x1169ED0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD38B0", Offset = "0xCD38B0")]
			set
			{
			}
		}

		[Token(Token = "0x17000303")]
		public bool UseEventStore
		{
			[Token(Token = "0x6001E1D")]
			[Address(RVA = "0x1169ED8", Offset = "0x1169ED8", VA = "0x1169ED8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD38C0", Offset = "0xCD38C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0x1169EE0", Offset = "0x1169EE0", VA = "0x1169EE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD38D0", Offset = "0xCD38D0")]
			set
			{
			}
		}

		[Token(Token = "0x17000304")]
		public int SessionTimeoutSeconds
		{
			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0x1169EEC", Offset = "0x1169EEC", VA = "0x1169EEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD38E0", Offset = "0xCD38E0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E20")]
			[Address(RVA = "0x1169EF4", Offset = "0x1169EF4", VA = "0x1169EF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD38F0", Offset = "0xCD38F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000305")]
		public int EngageCacheExpirySeconds
		{
			[Token(Token = "0x6001E21")]
			[Address(RVA = "0x1169EFC", Offset = "0x1169EFC", VA = "0x1169EFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3900", Offset = "0xCD3900")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E22")]
			[Address(RVA = "0x1169F04", Offset = "0x1169F04", VA = "0x1169F04")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3910", Offset = "0xCD3910")]
			set
			{
			}
		}

		[Token(Token = "0x17000306")]
		public int ImageCacheLimitMB
		{
			[Token(Token = "0x6001E23")]
			[Address(RVA = "0x1169F0C", Offset = "0x1169F0C", VA = "0x1169F0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3920", Offset = "0xCD3920")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E24")]
			[Address(RVA = "0x1169F14", Offset = "0x1169F14", VA = "0x1169F14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3930", Offset = "0xCD3930")]
			set
			{
			}
		}

		[Token(Token = "0x17000307")]
		public int MaxConcurrentImageCacheFetches
		{
			[Token(Token = "0x6001E25")]
			[Address(RVA = "0x1169F1C", Offset = "0x1169F1C", VA = "0x1169F1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3940", Offset = "0xCD3940")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E26")]
			[Address(RVA = "0x1169F24", Offset = "0x1169F24", VA = "0x1169F24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3950", Offset = "0xCD3950")]
			set
			{
			}
		}

		[Token(Token = "0x17000308")]
		public bool AdvertiserGdprUserConsent
		{
			[Token(Token = "0x6001E27")]
			[Address(RVA = "0x1169F2C", Offset = "0x1169F2C", VA = "0x1169F2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3960", Offset = "0xCD3960")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E28")]
			[Address(RVA = "0x1169F34", Offset = "0x1169F34", VA = "0x1169F34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3970", Offset = "0xCD3970")]
			set
			{
			}
		}

		[Token(Token = "0x17000309")]
		public bool AdvertiserGdprAgeRestrictedUser
		{
			[Token(Token = "0x6001E29")]
			[Address(RVA = "0x1169F40", Offset = "0x1169F40", VA = "0x1169F40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3980", Offset = "0xCD3980")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0x1169F48", Offset = "0x1169F48", VA = "0x1169F48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3990", Offset = "0xCD3990")]
			set
			{
			}
		}

		[Token(Token = "0x1700030A")]
		public bool MultipleActionsForEventTriggerEnabled
		{
			[Token(Token = "0x6001E2B")]
			[Address(RVA = "0x1169F54", Offset = "0x1169F54", VA = "0x1169F54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD39A0", Offset = "0xCD39A0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0x1169F5C", Offset = "0x1169F5C", VA = "0x1169F5C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD39B0", Offset = "0xCD39B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700030B")]
		public bool MultipleActionsForImageMessagesEnabled
		{
			[Token(Token = "0x6001E2D")]
			[Address(RVA = "0x1169F68", Offset = "0x1169F68", VA = "0x1169F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD39C0", Offset = "0xCD39C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0x1169F70", Offset = "0x1169F70", VA = "0x1169F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD39D0", Offset = "0xCD39D0")]
			set
			{
			}
		}

		[Token(Token = "0x1700030C")]
		public GameParametersHandler DefaultGameParameterHandler
		{
			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0x1169F7C", Offset = "0x1169F7C", VA = "0x1169F7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD39E0", Offset = "0xCD39E0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E30")]
			[Address(RVA = "0x1169F84", Offset = "0x1169F84", VA = "0x1169F84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD39F0", Offset = "0xCD39F0")]
			set
			{
			}
		}

		[Token(Token = "0x1700030D")]
		public ImageMessageHandler DefaultImageMessageHandler
		{
			[Token(Token = "0x6001E31")]
			[Address(RVA = "0x1169F8C", Offset = "0x1169F8C", VA = "0x1169F8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3A00", Offset = "0xCD3A00")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E32")]
			[Address(RVA = "0x1169F94", Offset = "0x1169F94", VA = "0x1169F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3A10", Offset = "0xCD3A10")]
			set
			{
			}
		}

		[Token(Token = "0x1700030E")]
		public int HttpRequestConfigurationTimeoutSeconds
		{
			[Token(Token = "0x6001E33")]
			[Address(RVA = "0x1169F9C", Offset = "0x1169F9C", VA = "0x1169F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3A20", Offset = "0xCD3A20")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E34")]
			[Address(RVA = "0x1169FA4", Offset = "0x1169FA4", VA = "0x1169FA4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3A30", Offset = "0xCD3A30")]
			set
			{
			}
		}

		[Token(Token = "0x1700030F")]
		public int HttpRequestConfigurationMaxRetries
		{
			[Token(Token = "0x6001E35")]
			[Address(RVA = "0x1169FAC", Offset = "0x1169FAC", VA = "0x1169FAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3A40", Offset = "0xCD3A40")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E36")]
			[Address(RVA = "0x1169FB4", Offset = "0x1169FB4", VA = "0x1169FB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3A50", Offset = "0xCD3A50")]
			set
			{
			}
		}

		[Token(Token = "0x17000310")]
		public int HttpRequestConfigurationRetryBackoffFactorSeconds
		{
			[Token(Token = "0x6001E37")]
			[Address(RVA = "0x1169FBC", Offset = "0x1169FBC", VA = "0x1169FBC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3A60", Offset = "0xCD3A60")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001E38")]
			[Address(RVA = "0x1169FC4", Offset = "0x1169FC4", VA = "0x1169FC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3A70", Offset = "0xCD3A70")]
			set
			{
			}
		}

		[Token(Token = "0x6001E06")]
		[Address(RVA = "0x1169CB4", Offset = "0x1169CB4", VA = "0x1169CB4")]
		internal Settings()
		{
		}
	}
	[Token(Token = "0x20004E5")]
	public abstract class SimpleDataStore<K, V>
	{
		[Token(Token = "0x40018E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object LOCK;

		[Token(Token = "0x40018E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly string location;

		[Token(Token = "0x40018E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private readonly string storename;

		[Token(Token = "0x40018E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private Dictionary<K, V> data;

		[Token(Token = "0x40018E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private char paramSeparator;

		[Token(Token = "0x6001E3A")]
		internal SimpleDataStore(string directory, string storename, char paramSeparator = ' ')
		{
		}

		[Token(Token = "0x6001E3B")]
		protected abstract K parseKey(string key);

		[Token(Token = "0x6001E3C")]
		protected abstract V parseValue(string value);

		[Token(Token = "0x6001E3D")]
		protected abstract string createLine(K key, V value);

		[Token(Token = "0x6001E3E")]
		public void Put(K key, V value)
		{
		}

		[Token(Token = "0x6001E3F")]
		public V GetOrDefault(K key, V defaultValue)
		{
			return (V)null;
		}

		[Token(Token = "0x6001E40")]
		internal void Save()
		{
		}

		[Token(Token = "0x6001E41")]
		internal void Clear()
		{
		}

		[Token(Token = "0x6001E42")]
		private void CreateDirectory()
		{
		}

		[Token(Token = "0x6001E43")]
		protected char getKeyValueSeparator()
		{
			return default(char);
		}

		[Token(Token = "0x6001E45")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3A80", Offset = "0xCD3A80")]
		private K <.ctor>b__5_0(string e)
		{
			return (K)null;
		}

		[Token(Token = "0x6001E46")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3A90", Offset = "0xCD3A90")]
		private V <.ctor>b__5_1(string e)
		{
			return (V)null;
		}

		[Token(Token = "0x6001E47")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3AA0", Offset = "0xCD3AA0")]
		private string <Save>b__11_0(KeyValuePair<K, V> e)
		{
			return null;
		}
	}
	[Token(Token = "0x20004E6")]
	public class Singleton<T> : MonoBehaviour where T : MonoBehaviour
	{
		[Token(Token = "0x40018E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T _instance;

		[Token(Token = "0x40018E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static object _lock;

		[Token(Token = "0x40018E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool applicationIsQuitting;

		[Token(Token = "0x17000311")]
		public static T Instance
		{
			[Token(Token = "0x6001E48")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001E49")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001E4A")]
		public Singleton()
		{
		}
	}
	[Token(Token = "0x20004E7")]
	public static class Utils
	{
		[Token(Token = "0x6001E4C")]
		public static Dictionary<K, V> HashtableToDictionary<K, V>(Hashtable table)
		{
			return null;
		}

		[Token(Token = "0x6001E4D")]
		public static Dictionary<K, V> HashtableToDictionary<K, V>(Dictionary<K, V> dictionary)
		{
			return null;
		}

		[Token(Token = "0x6001E4E")]
		[Address(RVA = "0x116EE70", Offset = "0x116EE70", VA = "0x116EE70")]
		public static byte[] ComputeMD5Hash(byte[] buffer)
		{
			return null;
		}

		[Token(Token = "0x6001E4F")]
		[Address(RVA = "0x116EEE0", Offset = "0x116EEE0", VA = "0x116EEE0")]
		public static bool IsDirectoryWritable(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E50")]
		[Address(RVA = "0x116F1C8", Offset = "0x116F1C8", VA = "0x116F1C8")]
		public static bool FileExists(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E51")]
		[Address(RVA = "0x116F08C", Offset = "0x116F08C", VA = "0x116F08C")]
		public static bool DirectoryExists(string path)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E52")]
		[Address(RVA = "0x116F12C", Offset = "0x116F12C", VA = "0x116F12C")]
		public static void CreateDirectory(string path)
		{
		}

		[Token(Token = "0x6001E53")]
		[Address(RVA = "0x116F268", Offset = "0x116F268", VA = "0x116F268")]
		public static Stream CreateStream(string path)
		{
			return null;
		}

		[Token(Token = "0x6001E54")]
		[Address(RVA = "0x116F38C", Offset = "0x116F38C", VA = "0x116F38C")]
		public static Stream OpenStream(string path)
		{
			return null;
		}

		[Token(Token = "0x6001E55")]
		[Address(RVA = "0x116F4B0", Offset = "0x116F4B0", VA = "0x116F4B0")]
		public static string FixURL(string url)
		{
			return null;
		}

		[Token(Token = "0x6001E56")]
		public static T GetOrDefault<T, K>(this IDictionary<K, object> dict, K key, T def)
		{
			return (T)null;
		}
	}
	[Token(Token = "0x20004E8")]
	public class ImageMessage
	{
		[Token(Token = "0x2000690")]
		public class EventArgs : System.EventArgs
		{
			[Token(Token = "0x4001F42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEB4C", Offset = "0xCCEB4C")]
			private string <ID>k__BackingField;

			[Token(Token = "0x4001F43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEB5C", Offset = "0xCCEB5C")]
			private string <ActionType>k__BackingField;

			[Token(Token = "0x4001F44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEB6C", Offset = "0xCCEB6C")]
			private string <ActionValue>k__BackingField;

			[Token(Token = "0x170003E6")]
			public string ID
			{
				[Token(Token = "0x600248A")]
				[Address(RVA = "0x1160BEC", Offset = "0x1160BEC", VA = "0x1160BEC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD5984", Offset = "0xCD5984")]
				get
				{
					return null;
				}
				[Token(Token = "0x600248B")]
				[Address(RVA = "0x1160BF4", Offset = "0x1160BF4", VA = "0x1160BF4")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD5994", Offset = "0xCD5994")]
				set
				{
				}
			}

			[Token(Token = "0x170003E7")]
			public string ActionType
			{
				[Token(Token = "0x600248C")]
				[Address(RVA = "0x1160BFC", Offset = "0x1160BFC", VA = "0x1160BFC")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD59A4", Offset = "0xCD59A4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600248D")]
				[Address(RVA = "0x1160C04", Offset = "0x1160C04", VA = "0x1160C04")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD59B4", Offset = "0xCD59B4")]
				set
				{
				}
			}

			[Token(Token = "0x170003E8")]
			public string ActionValue
			{
				[Token(Token = "0x600248E")]
				[Address(RVA = "0x1160C0C", Offset = "0x1160C0C", VA = "0x1160C0C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD59C4", Offset = "0xCD59C4")]
				get
				{
					return null;
				}
				[Token(Token = "0x600248F")]
				[Address(RVA = "0x1160C14", Offset = "0x1160C14", VA = "0x1160C14")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD59D4", Offset = "0xCD59D4")]
				set
				{
				}
			}

			[Token(Token = "0x6002489")]
			[Address(RVA = "0x1160B38", Offset = "0x1160B38", VA = "0x1160B38")]
			public EventArgs(string id, string type, string value)
			{
			}

			[Token(Token = "0x6002490")]
			[Address(RVA = "0x1160C1C", Offset = "0x1160C1C", VA = "0x1160C1C")]
			internal static EventArgs Create(string platform, string id, string type, object value)
			{
				return null;
			}
		}

		[Token(Token = "0x2000691")]
		public class StoreEventArgs : EventArgs
		{
			[Token(Token = "0x6002491")]
			[Address(RVA = "0x1160D10", Offset = "0x1160D10", VA = "0x1160D10")]
			public StoreEventArgs(string platform, string id, string type, object value)
			{
			}
		}

		[Token(Token = "0x2000692")]
		private class SpriteMap : MonoBehaviour
		{
			[Token(Token = "0x20006B1")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFB3C", Offset = "0xCBFB3C")]
			private sealed class <>c__DisplayClass16_0
			{
				[Token(Token = "0x4001FDB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public SpriteMap <>4__this;

				[Token(Token = "0x4001FDC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Action<string> callback;

				[Token(Token = "0x6002511")]
				[Address(RVA = "0x1161664", Offset = "0x1161664", VA = "0x1161664")]
				public <>c__DisplayClass16_0()
				{
				}

				[Token(Token = "0x6002512")]
				[Address(RVA = "0x116198C", Offset = "0x116198C", VA = "0x116198C")]
				internal void <LoadResource>b__0(Texture2D t)
				{
				}
			}

			[Token(Token = "0x4001F45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private ImageMessageStore store;

			[Token(Token = "0x4001F46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Dictionary<string, object> configuration;

			[Token(Token = "0x4001F47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Texture2D texture;

			[Token(Token = "0x4001F48")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEB7C", Offset = "0xCCEB7C")]
			private string <URL>k__BackingField;

			[Token(Token = "0x4001F49")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEB8C", Offset = "0xCCEB8C")]
			private int <Width>k__BackingField;

			[Token(Token = "0x4001F4A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCEB9C", Offset = "0xCCEB9C")]
			private int <Height>k__BackingField;

			[Token(Token = "0x170003E9")]
			public string URL
			{
				[Token(Token = "0x6002492")]
				[Address(RVA = "0x1161634", Offset = "0x1161634", VA = "0x1161634")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD59E4", Offset = "0xCD59E4")]
				get
				{
					return null;
				}
				[Token(Token = "0x6002493")]
				[Address(RVA = "0x116163C", Offset = "0x116163C", VA = "0x116163C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD59F4", Offset = "0xCD59F4")]
				private set
				{
				}
			}

			[Token(Token = "0x170003EA")]
			public int Width
			{
				[Token(Token = "0x6002494")]
				[Address(RVA = "0x1161644", Offset = "0x1161644", VA = "0x1161644")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD5A04", Offset = "0xCD5A04")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002495")]
				[Address(RVA = "0x116164C", Offset = "0x116164C", VA = "0x116164C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD5A14", Offset = "0xCD5A14")]
				private set
				{
				}
			}

			[Token(Token = "0x170003EB")]
			public int Height
			{
				[Token(Token = "0x6002496")]
				[Address(RVA = "0x1161654", Offset = "0x1161654", VA = "0x1161654")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD5A24", Offset = "0xCD5A24")]
				get
				{
					return default(int);
				}
				[Token(Token = "0x6002497")]
				[Address(RVA = "0x116165C", Offset = "0x116165C", VA = "0x116165C")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD5A34", Offset = "0xCD5A34")]
				private set
				{
				}
			}

			[Token(Token = "0x170003EC")]
			public Texture Texture
			{
				[Token(Token = "0x600249A")]
				[Address(RVA = "0x1161734", Offset = "0x1161734", VA = "0x1161734")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003ED")]
			public Sprite Background
			{
				[Token(Token = "0x600249B")]
				[Address(RVA = "0x115DC08", Offset = "0x115DC08", VA = "0x115DC08")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003EE")]
			public List<Sprite> Buttons
			{
				[Token(Token = "0x600249C")]
				[Address(RVA = "0x115E0AC", Offset = "0x115E0AC", VA = "0x115E0AC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002498")]
			[Address(RVA = "0x115C564", Offset = "0x115C564", VA = "0x115C564")]
			public void Build(DDNA ddna, Dictionary<string, object> configuration)
			{
			}

			[Token(Token = "0x6002499")]
			[Address(RVA = "0x115D200", Offset = "0x115D200", VA = "0x115D200")]
			public void LoadResource(Action<string> callback)
			{
			}

			[Token(Token = "0x600249D")]
			[Address(RVA = "0x116173C", Offset = "0x116173C", VA = "0x116173C")]
			public Sprite GetSubRegion(int x, int y, int width, int height)
			{
				return null;
			}

			[Token(Token = "0x600249E")]
			[Address(RVA = "0x116181C", Offset = "0x116181C", VA = "0x116181C")]
			public Sprite GetSubRegion(Rect rect)
			{
				return null;
			}

			[Token(Token = "0x600249F")]
			[Address(RVA = "0x1161918", Offset = "0x1161918", VA = "0x1161918")]
			private void OnDestroy()
			{
			}

			[Token(Token = "0x60024A0")]
			[Address(RVA = "0x1161984", Offset = "0x1161984", VA = "0x1161984")]
			public SpriteMap()
			{
			}
		}

		[Token(Token = "0x2000693")]
		private class Layer : MonoBehaviour
		{
			[Serializable]
			[Token(Token = "0x20006B2")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFB4C", Offset = "0xCBFB4C")]
			private sealed class <>c
			{
				[Token(Token = "0x4001FDD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public static readonly <>c <>9;

				[Token(Token = "0x4001FDE")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public static System.Action <>9__5_0;

				[Token(Token = "0x4001FDF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public static System.Action <>9__6_0;

				[Token(Token = "0x6002514")]
				[Address(RVA = "0x1160EF0", Offset = "0x1160EF0", VA = "0x1160EF0")]
				public <>c()
				{
				}

				[Token(Token = "0x6002515")]
				[Address(RVA = "0x1160EF8", Offset = "0x1160EF8", VA = "0x1160EF8")]
				internal void <RegisterAction>b__5_0()
				{
				}

				[Token(Token = "0x6002516")]
				[Address(RVA = "0x1160EFC", Offset = "0x1160EFC", VA = "0x1160EFC")]
				internal void <RegisterAction>b__6_0()
				{
				}
			}

			[Token(Token = "0x20006B3")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFB5C", Offset = "0xCBFB5C")]
			private sealed class <>c__DisplayClass6_0
			{
				[Token(Token = "0x4001FE0")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public object valueObj;

				[Token(Token = "0x4001FE1")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public Layer <>4__this;

				[Token(Token = "0x6002517")]
				[Address(RVA = "0x1160E78", Offset = "0x1160E78", VA = "0x1160E78")]
				public <>c__DisplayClass6_0()
				{
				}
			}

			[Token(Token = "0x20006B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFB6C", Offset = "0xCBFB6C")]
			private sealed class <>c__DisplayClass6_1
			{
				[Token(Token = "0x4001FE2")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public EventArgs eventArgs;

				[Token(Token = "0x4001FE3")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public GameEvent actionEvent;

				[Token(Token = "0x4001FE4")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public <>c__DisplayClass6_0 CS$<>8__locals1;

				[Token(Token = "0x6002518")]
				[Address(RVA = "0x1160E80", Offset = "0x1160E80", VA = "0x1160E80")]
				public <>c__DisplayClass6_1()
				{
				}

				[Token(Token = "0x6002519")]
				[Address(RVA = "0x1160F00", Offset = "0x1160F00", VA = "0x1160F00")]
				internal void <RegisterAction>b__1()
				{
				}

				[Token(Token = "0x600251A")]
				[Address(RVA = "0x1160FD0", Offset = "0x1160FD0", VA = "0x1160FD0")]
				internal void <RegisterAction>b__2()
				{
				}

				[Token(Token = "0x600251B")]
				[Address(RVA = "0x11610CC", Offset = "0x11610CC", VA = "0x11610CC")]
				internal void <RegisterAction>b__3()
				{
				}

				[Token(Token = "0x600251C")]
				[Address(RVA = "0x1161194", Offset = "0x1161194", VA = "0x1161194")]
				internal void <RegisterAction>b__4()
				{
				}
			}

			[Token(Token = "0x4001F4B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			protected DDNA ddna;

			[Token(Token = "0x4001F4C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			protected GameObject parent;

			[Token(Token = "0x4001F4D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			protected ImageMessage imageMessage;

			[Token(Token = "0x4001F4E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			protected List<System.Action> actions;

			[Token(Token = "0x4001F4F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			protected int depth;

			[Token(Token = "0x60024A1")]
			[Address(RVA = "0x115EFC4", Offset = "0x115EFC4", VA = "0x115EFC4")]
			protected void RegisterAction()
			{
			}

			[Token(Token = "0x60024A2")]
			[Address(RVA = "0x115E8FC", Offset = "0x115E8FC", VA = "0x115E8FC")]
			protected void RegisterAction(Dictionary<string, object> action, string id)
			{
			}

			[Token(Token = "0x60024A3")]
			[Address(RVA = "0x115FAA0", Offset = "0x115FAA0", VA = "0x115FAA0")]
			protected void PositionObject(GameObject obj, Rect position)
			{
			}

			[Token(Token = "0x60024A4")]
			[Address(RVA = "0x11600E8", Offset = "0x11600E8", VA = "0x11600E8")]
			public Layer()
			{
			}
		}

		[Token(Token = "0x2000694")]
		private class ShimLayer : Layer
		{
			[Token(Token = "0x4001F50")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Texture2D texture;

			[Token(Token = "0x4001F51")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private readonly byte dimmedMaskAlpha;

			[Token(Token = "0x4001F52")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Sprite sprite;

			[Token(Token = "0x60024A5")]
			[Address(RVA = "0x115D964", Offset = "0x115D964", VA = "0x115D964")]
			public void Build(DDNA ddna, GameObject parent, ImageMessage imageMessage, Dictionary<string, object> config, int depth)
			{
			}

			[Token(Token = "0x60024A6")]
			[Address(RVA = "0x116125C", Offset = "0x116125C", VA = "0x116125C")]
			private void Start()
			{
			}

			[Token(Token = "0x60024A7")]
			[Address(RVA = "0x116153C", Offset = "0x116153C", VA = "0x116153C")]
			private void OnDestroy()
			{
			}

			[Token(Token = "0x60024A8")]
			[Address(RVA = "0x11615B4", Offset = "0x11615B4", VA = "0x11615B4")]
			public ShimLayer()
			{
			}

			[Token(Token = "0x60024A9")]
			[Address(RVA = "0x11615C0", Offset = "0x11615C0", VA = "0x11615C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD5A44", Offset = "0xCD5A44")]
			private void <Start>b__4_0()
			{
			}
		}

		[Token(Token = "0x2000695")]
		private class BackgroundLayer : Layer
		{
			[Token(Token = "0x4001F53")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Rect position;

			[Token(Token = "0x4001F54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float scale;

			[Token(Token = "0x4001F55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Sprite sprite;

			[Token(Token = "0x4001F56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Dictionary<string, object> layout;

			[Token(Token = "0x4001F57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private GameObject obj;

			[Token(Token = "0x170003EF")]
			public Rect Position
			{
				[Token(Token = "0x60024AE")]
				[Address(RVA = "0x115FCE0", Offset = "0x115FCE0", VA = "0x115FCE0")]
				get
				{
					return default(Rect);
				}
			}

			[Token(Token = "0x170003F0")]
			public float Scale
			{
				[Token(Token = "0x60024AF")]
				[Address(RVA = "0x115FCEC", Offset = "0x115FCEC", VA = "0x115FCEC")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x60024AA")]
			[Address(RVA = "0x115DEE8", Offset = "0x115DEE8", VA = "0x115DEE8")]
			public void Build(DDNA ddna, GameObject parent, ImageMessage imageMessage, Dictionary<string, object> layout, Sprite sprite, int depth)
			{
			}

			[Token(Token = "0x60024AB")]
			[Address(RVA = "0x115F0BC", Offset = "0x115F0BC", VA = "0x115F0BC")]
			private void CalculatePosition()
			{
			}

			[Token(Token = "0x60024AC")]
			[Address(RVA = "0x115FA90", Offset = "0x115FA90", VA = "0x115FA90")]
			private void UpdatePosition()
			{
			}

			[Token(Token = "0x60024AD")]
			[Address(RVA = "0x115C898", Offset = "0x115C898", VA = "0x115C898")]
			public void Resize()
			{
			}

			[Token(Token = "0x60024B0")]
			[Address(RVA = "0x115FCF4", Offset = "0x115FCF4", VA = "0x115FCF4")]
			private void Start()
			{
			}

			[Token(Token = "0x60024B1")]
			[Address(RVA = "0x115F280", Offset = "0x115F280", VA = "0x115F280")]
			private Rect RenderAsCover(Dictionary<string, object> rules)
			{
				return default(Rect);
			}

			[Token(Token = "0x60024B2")]
			[Address(RVA = "0x115F560", Offset = "0x115F560", VA = "0x115F560")]
			private Rect RenderAsContain(Dictionary<string, object> rules)
			{
				return default(Rect);
			}

			[Token(Token = "0x60024B3")]
			[Address(RVA = "0x115FF30", Offset = "0x115FF30", VA = "0x115FF30")]
			private float GetConstraintPixels(string constraint, float edge)
			{
				return default(float);
			}

			[Token(Token = "0x60024B4")]
			[Address(RVA = "0x1160078", Offset = "0x1160078", VA = "0x1160078")]
			private void OnDestroy()
			{
			}

			[Token(Token = "0x60024B5")]
			[Address(RVA = "0x11600E4", Offset = "0x11600E4", VA = "0x11600E4")]
			public BackgroundLayer()
			{
			}

			[Token(Token = "0x60024B6")]
			[Address(RVA = "0x1160164", Offset = "0x1160164", VA = "0x1160164")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD5A54", Offset = "0xCD5A54")]
			private void <Start>b__13_0()
			{
			}
		}

		[Token(Token = "0x2000696")]
		private class ButtonsLayer : Layer
		{
			[Token(Token = "0x20006B5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFB7C", Offset = "0xCBFB7C")]
			private sealed class <>c__DisplayClass8_0
			{
				[Token(Token = "0x4001FE5")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public System.Action action;

				[Token(Token = "0x600251D")]
				[Address(RVA = "0x116091C", Offset = "0x116091C", VA = "0x116091C")]
				public <>c__DisplayClass8_0()
				{
				}

				[Token(Token = "0x600251E")]
				[Address(RVA = "0x1160B1C", Offset = "0x1160B1C", VA = "0x1160B1C")]
				internal void <Start>b__0()
				{
				}
			}

			[Token(Token = "0x4001F58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<Sprite> sprites;

			[Token(Token = "0x4001F59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Rect> positions;

			[Token(Token = "0x4001F5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private BackgroundLayer content;

			[Token(Token = "0x4001F5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Dictionary<string, object> orientation;

			[Token(Token = "0x4001F5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private List<GameObject> buttonObjects;

			[Token(Token = "0x60024B7")]
			[Address(RVA = "0x115E640", Offset = "0x115E640", VA = "0x115E640")]
			public void Build(DDNA ddna, GameObject parent, ImageMessage imageMessage, Dictionary<string, object> orientation, List<Sprite> sprites, BackgroundLayer content, int depth)
			{
			}

			[Token(Token = "0x60024B8")]
			[Address(RVA = "0x115C8C8", Offset = "0x115C8C8", VA = "0x115C8C8")]
			public void Resize()
			{
			}

			[Token(Token = "0x60024B9")]
			[Address(RVA = "0x11601D8", Offset = "0x11601D8", VA = "0x11601D8")]
			private void UpdatePositions(bool shouldRegisterActions = false)
			{
			}

			[Token(Token = "0x60024BA")]
			[Address(RVA = "0x1160640", Offset = "0x1160640", VA = "0x1160640")]
			private void Start()
			{
			}

			[Token(Token = "0x60024BB")]
			[Address(RVA = "0x1160924", Offset = "0x1160924", VA = "0x1160924")]
			private void OnDestroy()
			{
			}

			[Token(Token = "0x60024BC")]
			[Address(RVA = "0x1160A3C", Offset = "0x1160A3C", VA = "0x1160A3C")]
			public ButtonsLayer()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000697")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFADC", Offset = "0xCBFADC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<string> <>9__34_0;

			[Token(Token = "0x60024BE")]
			[Address(RVA = "0x115E8F0", Offset = "0x115E8F0", VA = "0x115E8F0")]
			public <>c()
			{
			}

			[Token(Token = "0x60024BF")]
			[Address(RVA = "0x115E8F8", Offset = "0x115E8F8", VA = "0x115E8F8")]
			internal void <Show>b__34_0(string e)
			{
			}
		}

		[Token(Token = "0x40018ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly DDNA ddna;

		[Token(Token = "0x40018EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, object> configuration;

		[Token(Token = "0x40018EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject gameObject;

		[Token(Token = "0x40018F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private SpriteMap spriteMap;

		[Token(Token = "0x40018F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int depth;

		[Token(Token = "0x40018F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private bool showing;

		[Token(Token = "0x40018F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Engagement engagement;

		[Token(Token = "0x40018F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string name;

		[Token(Token = "0x40018F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private OrientationChange changeListener;

		[Token(Token = "0x40018F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCCD494", Offset = "0xCCD494")]
		private Dictionary<string, object> <Parameters>k__BackingField;

		[Token(Token = "0x17000312")]
		public Dictionary<string, object> Parameters
		{
			[Token(Token = "0x6001E6C")]
			[Address(RVA = "0x115E7E4", Offset = "0x115E7E4", VA = "0x115E7E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3B60", Offset = "0xCD3B60")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001E6D")]
			[Address(RVA = "0x115E7EC", Offset = "0x115E7EC", VA = "0x115E7EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3B70", Offset = "0xCD3B70")]
			private set
			{
			}
		}

		[Token(Token = "0x1400002E")]
		public event System.Action OnDidReceiveResources
		{
			[Token(Token = "0x6001E57")]
			[Address(RVA = "0x115BCB0", Offset = "0x115BCB0", VA = "0x115BCB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3AC0", Offset = "0xCD3AC0")]
			add
			{
			}
			[Token(Token = "0x6001E58")]
			[Address(RVA = "0x115BD54", Offset = "0x115BD54", VA = "0x115BD54")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3AD0", Offset = "0xCD3AD0")]
			remove
			{
			}
		}

		[Token(Token = "0x1400002F")]
		public event Action<string> OnDidFailToReceiveResources
		{
			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x115BDF8", Offset = "0x115BDF8", VA = "0x115BDF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3AE0", Offset = "0xCD3AE0")]
			add
			{
			}
			[Token(Token = "0x6001E5A")]
			[Address(RVA = "0x115BE9C", Offset = "0x115BE9C", VA = "0x115BE9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3AF0", Offset = "0xCD3AF0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000030")]
		public event Action<EventArgs> OnDismiss
		{
			[Token(Token = "0x6001E5B")]
			[Address(RVA = "0x115BF40", Offset = "0x115BF40", VA = "0x115BF40")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3B00", Offset = "0xCD3B00")]
			add
			{
			}
			[Token(Token = "0x6001E5C")]
			[Address(RVA = "0x115BFE4", Offset = "0x115BFE4", VA = "0x115BFE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3B10", Offset = "0xCD3B10")]
			remove
			{
			}
		}

		[Token(Token = "0x14000031")]
		public event Action<EventArgs> OnAction
		{
			[Token(Token = "0x6001E5D")]
			[Address(RVA = "0x115C088", Offset = "0x115C088", VA = "0x115C088")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3B20", Offset = "0xCD3B20")]
			add
			{
			}
			[Token(Token = "0x6001E5E")]
			[Address(RVA = "0x115C12C", Offset = "0x115C12C", VA = "0x115C12C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3B30", Offset = "0xCD3B30")]
			remove
			{
			}
		}

		[Token(Token = "0x14000032")]
		public event Action<EventArgs> OnStore
		{
			[Token(Token = "0x6001E5F")]
			[Address(RVA = "0x115C1D0", Offset = "0x115C1D0", VA = "0x115C1D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3B40", Offset = "0xCD3B40")]
			add
			{
			}
			[Token(Token = "0x6001E60")]
			[Address(RVA = "0x115C274", Offset = "0x115C274", VA = "0x115C274")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3B50", Offset = "0xCD3B50")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E61")]
		[Address(RVA = "0x115C318", Offset = "0x115C318", VA = "0x115C318")]
		private ImageMessage(DDNA ddna, Dictionary<string, object> configuration, string name, int depth, Engagement engagement)
		{
		}

		[Token(Token = "0x6001E62")]
		[Address(RVA = "0x115C818", Offset = "0x115C818", VA = "0x115C818")]
		private void redraw()
		{
		}

		[Token(Token = "0x6001E63")]
		[Address(RVA = "0x115C9B4", Offset = "0x115C9B4", VA = "0x115C9B4")]
		public static ImageMessage Create(Engagement engagement)
		{
			return null;
		}

		[Token(Token = "0x6001E64")]
		[Address(RVA = "0x115CDEC", Offset = "0x115CDEC", VA = "0x115CDEC")]
		public static ImageMessage Create(Engagement engagement, Dictionary<string, object> options)
		{
			return null;
		}

		[Token(Token = "0x6001E65")]
		[Address(RVA = "0x115CA2C", Offset = "0x115CA2C", VA = "0x115CA2C")]
		public static ImageMessage Create(DDNA ddna, Engagement engagement, Dictionary<string, object> options)
		{
			return null;
		}

		[Token(Token = "0x6001E66")]
		[Address(RVA = "0x115CE70", Offset = "0x115CE70", VA = "0x115CE70")]
		private static bool ValidConfiguration(Dictionary<string, object> c)
		{
			return default(bool);
		}

		[Token(Token = "0x6001E67")]
		[Address(RVA = "0x115D0EC", Offset = "0x115D0EC", VA = "0x115D0EC")]
		public void FetchResources()
		{
		}

		[Token(Token = "0x6001E68")]
		[Address(RVA = "0x115D1B4", Offset = "0x115D1B4", VA = "0x115D1B4")]
		public bool IsReady()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E69")]
		[Address(RVA = "0x115D2FC", Offset = "0x115D2FC", VA = "0x115D2FC")]
		public void Show()
		{
		}

		[Token(Token = "0x6001E6A")]
		[Address(RVA = "0x115E760", Offset = "0x115E760", VA = "0x115E760")]
		public bool IsShowing()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E6B")]
		[Address(RVA = "0x115E768", Offset = "0x115E768", VA = "0x115E768")]
		public void Close()
		{
		}

		[Token(Token = "0x6001E6E")]
		[Address(RVA = "0x115E7F4", Offset = "0x115E7F4", VA = "0x115E7F4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3B80", Offset = "0xCD3B80")]
		private void <FetchResources>b__32_0(string error)
		{
		}
	}
	[Token(Token = "0x20004E9")]
	public class AndroidNotifications : MonoBehaviour
	{
		[Token(Token = "0x40018F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private DDNANotifications ddnaNotifications;

		[Token(Token = "0x40018FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool? notificationsPresent;

		[Token(Token = "0x14000033")]
		public event Action<string> OnDidLaunchWithPushNotification
		{
			[Token(Token = "0x6001E6F")]
			[Address(RVA = "0x165C61C", Offset = "0x165C61C", VA = "0x165C61C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3B90", Offset = "0xCD3B90")]
			add
			{
			}
			[Token(Token = "0x6001E70")]
			[Address(RVA = "0x165C6C0", Offset = "0x165C6C0", VA = "0x165C6C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3BA0", Offset = "0xCD3BA0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000034")]
		public event Action<string> OnDidReceivePushNotification
		{
			[Token(Token = "0x6001E71")]
			[Address(RVA = "0x165C764", Offset = "0x165C764", VA = "0x165C764")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3BB0", Offset = "0xCD3BB0")]
			add
			{
			}
			[Token(Token = "0x6001E72")]
			[Address(RVA = "0x165C808", Offset = "0x165C808", VA = "0x165C808")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3BC0", Offset = "0xCD3BC0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000035")]
		public event Action<string> OnDidRegisterForPushNotifications
		{
			[Token(Token = "0x6001E73")]
			[Address(RVA = "0x165C8AC", Offset = "0x165C8AC", VA = "0x165C8AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3BD0", Offset = "0xCD3BD0")]
			add
			{
			}
			[Token(Token = "0x6001E74")]
			[Address(RVA = "0x165C950", Offset = "0x165C950", VA = "0x165C950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3BE0", Offset = "0xCD3BE0")]
			remove
			{
			}
		}

		[Token(Token = "0x14000036")]
		public event Action<string> OnDidFailToRegisterForPushNotifications
		{
			[Token(Token = "0x6001E75")]
			[Address(RVA = "0x165C9F4", Offset = "0x165C9F4", VA = "0x165C9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3BF0", Offset = "0xCD3BF0")]
			add
			{
			}
			[Token(Token = "0x6001E76")]
			[Address(RVA = "0x165CA98", Offset = "0x165CA98", VA = "0x165CA98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3C00", Offset = "0xCD3C00")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E77")]
		[Address(RVA = "0x165CB3C", Offset = "0x165CB3C", VA = "0x165CB3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E78")]
		[Address(RVA = "0x165CD7C", Offset = "0x165CD7C", VA = "0x165CD7C")]
		public void RegisterForPushNotifications(bool secondary = false)
		{
		}

		[Token(Token = "0x6001E79")]
		[Address(RVA = "0x165CF38", Offset = "0x165CF38", VA = "0x165CF38")]
		public void UnregisterForPushNotifications()
		{
		}

		[Token(Token = "0x6001E7A")]
		[Address(RVA = "0x165CC34", Offset = "0x165CC34", VA = "0x165CC34")]
		private bool AreNotificationsPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x6001E7B")]
		[Address(RVA = "0x165D014", Offset = "0x165D014", VA = "0x165D014")]
		public void DidReceivePushNotification(string notification)
		{
		}

		[Token(Token = "0x6001E7C")]
		[Address(RVA = "0x165D2B4", Offset = "0x165D2B4", VA = "0x165D2B4")]
		public void DidRegisterForPushNotifications(string registrationId)
		{
		}

		[Token(Token = "0x6001E7D")]
		[Address(RVA = "0x165D3C8", Offset = "0x165D3C8", VA = "0x165D3C8")]
		public void DidFailToRegisterForPushNotifications(string error)
		{
		}

		[Token(Token = "0x6001E7E")]
		[Address(RVA = "0x165D488", Offset = "0x165D488", VA = "0x165D488")]
		public AndroidNotifications()
		{
		}
	}
	[Token(Token = "0x20004EA")]
	public class IosNotifications : MonoBehaviour
	{
		[Token(Token = "0x14000037")]
		public event Action<string> OnDidLaunchWithPushNotification
		{
			[Token(Token = "0x6001E7F")]
			[Address(RVA = "0x1164650", Offset = "0x1164650", VA = "0x1164650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3C10", Offset = "0xCD3C10")]
			add
			{
			}
			[Token(Token = "0x6001E80")]
			[Address(RVA = "0x11646F4", Offset = "0x11646F4", VA = "0x11646F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3C20", Offset = "0xCD3C20")]
			remove
			{
			}
		}

		[Token(Token = "0x14000038")]
		public event Action<string> OnDidReceivePushNotification
		{
			[Token(Token = "0x6001E81")]
			[Address(RVA = "0x1164798", Offset = "0x1164798", VA = "0x1164798")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3C30", Offset = "0xCD3C30")]
			add
			{
			}
			[Token(Token = "0x6001E82")]
			[Address(RVA = "0x116483C", Offset = "0x116483C", VA = "0x116483C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3C40", Offset = "0xCD3C40")]
			remove
			{
			}
		}

		[Token(Token = "0x14000039")]
		public event Action<string> OnDidRegisterForPushNotifications
		{
			[Token(Token = "0x6001E83")]
			[Address(RVA = "0x11648E0", Offset = "0x11648E0", VA = "0x11648E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3C50", Offset = "0xCD3C50")]
			add
			{
			}
			[Token(Token = "0x6001E84")]
			[Address(RVA = "0x1164984", Offset = "0x1164984", VA = "0x1164984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3C60", Offset = "0xCD3C60")]
			remove
			{
			}
		}

		[Token(Token = "0x1400003A")]
		public event Action<string> OnDidFailToRegisterForPushNotifications
		{
			[Token(Token = "0x6001E85")]
			[Address(RVA = "0x1164A28", Offset = "0x1164A28", VA = "0x1164A28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3C70", Offset = "0xCD3C70")]
			add
			{
			}
			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x1164ACC", Offset = "0x1164ACC", VA = "0x1164ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3C80", Offset = "0xCD3C80")]
			remove
			{
			}
		}

		[Token(Token = "0x6001E87")]
		[Address(RVA = "0x1164B70", Offset = "0x1164B70", VA = "0x1164B70")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001E88")]
		[Address(RVA = "0x1164C1C", Offset = "0x1164C1C", VA = "0x1164C1C")]
		public void RegisterForPushNotifications()
		{
		}

		[Token(Token = "0x6001E89")]
		[Address(RVA = "0x1164C24", Offset = "0x1164C24", VA = "0x1164C24")]
		public void UnregisterForPushNotifications()
		{
		}

		[Token(Token = "0x6001E8A")]
		[Address(RVA = "0x1164C2C", Offset = "0x1164C2C", VA = "0x1164C2C")]
		public void DidReceivePushNotification(string notification)
		{
		}

		[Token(Token = "0x6001E8B")]
		[Address(RVA = "0x1164EF8", Offset = "0x1164EF8", VA = "0x1164EF8")]
		public void DidRegisterForPushNotifications(string deviceToken)
		{
		}

		[Token(Token = "0x6001E8C")]
		[Address(RVA = "0x1164FF8", Offset = "0x1164FF8", VA = "0x1164FF8")]
		public void DidFailToRegisterForPushNotifications(string error)
		{
		}

		[Token(Token = "0x6001E8D")]
		[Address(RVA = "0x11650B4", Offset = "0x11650B4", VA = "0x11650B4")]
		public IosNotifications()
		{
		}
	}
	[Token(Token = "0x20004EB")]
	public class Params
	{
		[Token(Token = "0x4001901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Dictionary<string, object> _params;

		[Token(Token = "0x6001E8E")]
		[Address(RVA = "0x1167700", Offset = "0x1167700", VA = "0x1167700")]
		public Params()
		{
		}

		[Token(Token = "0x6001E8F")]
		[Address(RVA = "0x116777C", Offset = "0x116777C", VA = "0x116777C")]
		public Params(Params p)
		{
		}

		[Token(Token = "0x6001E90")]
		[Address(RVA = "0x116784C", Offset = "0x116784C", VA = "0x116784C")]
		public Params AddParam(string key, object value)
		{
			return null;
		}

		[Token(Token = "0x6001E91")]
		[Address(RVA = "0x1167AA4", Offset = "0x1167AA4", VA = "0x1167AA4")]
		public object GetParam(string key)
		{
			return null;
		}

		[Token(Token = "0x6001E92")]
		[Address(RVA = "0x1167C78", Offset = "0x1167C78", VA = "0x1167C78")]
		public Dictionary<string, object> AsDictionary()
		{
			return null;
		}
	}
	[Token(Token = "0x20004EC")]
	public class Product<T> : Params where T : Product<T>
	{
		[Token(Token = "0x4001902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Dictionary<string, object>> virtualCurrencies;

		[Token(Token = "0x4001903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<Dictionary<string, object>> items;

		[Token(Token = "0x4001904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly IDictionary<string, int> ISO4217;

		[Token(Token = "0x6001E93")]
		public T SetRealCurrency(string type, int amount)
		{
			return null;
		}

		[Token(Token = "0x6001E94")]
		public T AddVirtualCurrency(string name, string type, long amount)
		{
			return null;
		}

		[Token(Token = "0x6001E95")]
		public T AddItem(string name, string type, int amount)
		{
			return null;
		}

		[Token(Token = "0x6001E96")]
		public static int ConvertCurrency(string code, decimal value)
		{
			return default(int);
		}

		[Token(Token = "0x6001E97")]
		static Product()
		{
		}

		[Token(Token = "0x6001E98")]
		public Product()
		{
		}
	}
	[Token(Token = "0x20004ED")]
	public class Product : Product<Product>
	{
		[Token(Token = "0x6001E99")]
		[Address(RVA = "0x1167C88", Offset = "0x1167C88", VA = "0x1167C88")]
		public Product()
		{
		}
	}
	[Token(Token = "0x20004EE")]
	public class Transaction<T> : GameEvent<T> where T : Transaction<T>
	{
		[Token(Token = "0x6001E9A")]
		public Transaction(string name, string type, Product productsReceived, Product productsSpent)
		{
		}

		[Token(Token = "0x6001E9B")]
		public T SetTransactionId(string transactionId)
		{
			return null;
		}

		[Token(Token = "0x6001E9C")]
		public T SetReceipt(string receipt)
		{
			return null;
		}

		[Token(Token = "0x6001E9D")]
		public T SetReceiptSignature(string receiptSignature)
		{
			return null;
		}

		[Token(Token = "0x6001E9E")]
		public T SetServer(string server)
		{
			return null;
		}

		[Token(Token = "0x6001E9F")]
		public T SetTransactorId(string transactorId)
		{
			return null;
		}

		[Token(Token = "0x6001EA0")]
		public T SetProductId(string productId)
		{
			return null;
		}
	}
	[Token(Token = "0x20004EF")]
	public class Transaction : Transaction<Transaction>
	{
		[Token(Token = "0x6001EA1")]
		[Address(RVA = "0x116E84C", Offset = "0x116E84C", VA = "0x116E84C")]
		public Transaction(string name, string type, Product productsReceived, Product productsSpent)
		{
		}
	}
	[Token(Token = "0x20004F0")]
	internal abstract class ExecutionCountBasedTriggerCondition : TriggerCondition
	{
		[Token(Token = "0x4001905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected readonly ExecutionCountManager executionCountManager;

		[Token(Token = "0x4001906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected readonly long variantId;

		[Token(Token = "0x6001EA2")]
		[Address(RVA = "0x115B20C", Offset = "0x115B20C", VA = "0x115B20C")]
		protected ExecutionCountBasedTriggerCondition(ExecutionCountManager executionCountManager, long variantId)
		{
		}

		[Token(Token = "0x6001EA3")]
		[Address(RVA = "0x115B254", Offset = "0x115B254", VA = "0x115B254")]
		protected long getCurrentExecutionCount()
		{
			return default(long);
		}

		[Token(Token = "0x6001EA4")]
		public abstract bool CanExecute();
	}
	[Token(Token = "0x20004F1")]
	internal class ExecutionCountTriggerCondition : ExecutionCountBasedTriggerCondition
	{
		[Token(Token = "0x4001907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly long executionsRequired;

		[Token(Token = "0x6001EA5")]
		[Address(RVA = "0x115B4AC", Offset = "0x115B4AC", VA = "0x115B4AC")]
		public ExecutionCountTriggerCondition(long executionsRequired, ExecutionCountManager executionCountManager, long variantId)
		{
		}

		[Token(Token = "0x6001EA6")]
		[Address(RVA = "0x115B4F8", Offset = "0x115B4F8", VA = "0x115B4F8", Slot = "5")]
		public override bool CanExecute()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004F2")]
	internal class ExecutionRepeatTriggerCondition : ExecutionCountBasedTriggerCondition
	{
		[Token(Token = "0x4001908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly long executionsRepeatInterval;

		[Token(Token = "0x4001909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private long executionLimit;

		[Token(Token = "0x6001EA7")]
		[Address(RVA = "0x115B520", Offset = "0x115B520", VA = "0x115B520")]
		public ExecutionRepeatTriggerCondition(long executionsRepeatInterval, ExecutionCountManager executionCountManager, long variantId)
		{
		}

		[Token(Token = "0x6001EA8")]
		[Address(RVA = "0x115B574", Offset = "0x115B574", VA = "0x115B574")]
		public void setExecutionLimit(long limit)
		{
		}

		[Token(Token = "0x6001EA9")]
		[Address(RVA = "0x115B5A0", Offset = "0x115B5A0", VA = "0x115B5A0", Slot = "5")]
		public override bool CanExecute()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20004F3")]
	public interface TriggerCondition
	{
		[Token(Token = "0x6001EAA")]
		bool CanExecute();
	}
	[Token(Token = "0x20004F4")]
	public class TriggerConditionParser
	{
		[Serializable]
		[Token(Token = "0x2000698")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFAEC", Offset = "0xCBFAEC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<object, Dictionary<string, object>> <>9__3_0;

			[Token(Token = "0x60024C1")]
			[Address(RVA = "0x116EDE8", Offset = "0x116EDE8", VA = "0x116EDE8")]
			public <>c()
			{
			}

			[Token(Token = "0x60024C2")]
			[Address(RVA = "0x116EDF0", Offset = "0x116EDF0", VA = "0x116EDF0")]
			internal Dictionary<string, object> <parseConditions>b__3_0(object e)
			{
				return null;
			}
		}

		[Token(Token = "0x400190A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Dictionary<string, object> campaignLimitsConfig;

		[Token(Token = "0x400190B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly long variantId;

		[Token(Token = "0x6001EAB")]
		[Address(RVA = "0x116E8CC", Offset = "0x116E8CC", VA = "0x116E8CC")]
		public TriggerConditionParser(Dictionary<string, object> campaignLimitsConfig, long variantId)
		{
		}

		[Token(Token = "0x6001EAC")]
		[Address(RVA = "0x116E914", Offset = "0x116E914", VA = "0x116E914")]
		public List<TriggerCondition> parseConditions(ExecutionCountManager executionCountManager)
		{
			return null;
		}

		[Token(Token = "0x6001EAD")]
		[Address(RVA = "0x116EB98", Offset = "0x116EB98", VA = "0x116EB98")]
		public TriggerCondition parseCondition(Dictionary<string, object> showCondition, ExecutionCountManager executionCountManager)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F5")]
	public sealed class EventAction
	{
		[Token(Token = "0x400190C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal static readonly ReadOnlyCollection<EventTrigger> EMPTY_TRIGGERS;

		[Token(Token = "0x400190D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly GameEvent evnt;

		[Token(Token = "0x400190E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly ReadOnlyCollection<EventTrigger> triggers;

		[Token(Token = "0x400190F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly Settings settings;

		[Token(Token = "0x4001910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly ActionStore store;

		[Token(Token = "0x4001911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly List<EventActionHandler> handlers;

		[Token(Token = "0x6001EAE")]
		[Address(RVA = "0x1670C64", Offset = "0x1670C64", VA = "0x1670C64")]
		internal EventAction(GameEvent evnt, ReadOnlyCollection<EventTrigger> triggers, ActionStore store, Settings settings)
		{
		}

		[Token(Token = "0x6001EAF")]
		[Address(RVA = "0x1670D40", Offset = "0x1670D40", VA = "0x1670D40")]
		public EventAction Add(EventActionHandler handler)
		{
			return null;
		}

		[Token(Token = "0x6001EB0")]
		[Address(RVA = "0x165E378", Offset = "0x165E378", VA = "0x165E378")]
		public void Run()
		{
		}

		[Token(Token = "0x6001EB1")]
		[Address(RVA = "0x1670DD0", Offset = "0x1670DD0", VA = "0x1670DD0")]
		internal static EventAction CreateEmpty(GameEvent evnt)
		{
			return null;
		}
	}
	[Token(Token = "0x20004F6")]
	public abstract class EventActionHandler
	{
		[Token(Token = "0x6001EB3")]
		internal abstract bool Handle(EventTrigger trigger, ActionStore store);

		[Token(Token = "0x6001EB4")]
		internal abstract string Type();

		[Token(Token = "0x6001EB5")]
		[Address(RVA = "0x1670F08", Offset = "0x1670F08", VA = "0x1670F08")]
		protected EventActionHandler()
		{
		}
	}
	[Token(Token = "0x20004F7")]
	public class GameParametersHandler : EventActionHandler
	{
		[Token(Token = "0x4001912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly Action<Dictionary<string, object>> callback;

		[Token(Token = "0x6001EB6")]
		[Address(RVA = "0x115B65C", Offset = "0x115B65C", VA = "0x115B65C")]
		public GameParametersHandler(Action<Dictionary<string, object>> callback)
		{
		}

		[Token(Token = "0x6001EB7")]
		[Address(RVA = "0x115B690", Offset = "0x115B690", VA = "0x115B690", Slot = "4")]
		internal override bool Handle(EventTrigger trigger, ActionStore store)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EB8")]
		[Address(RVA = "0x115B878", Offset = "0x115B878", VA = "0x115B878", Slot = "5")]
		internal override string Type()
		{
			return null;
		}
	}
	[Token(Token = "0x20004F8")]
	public class ImageMessageHandler : EventActionHandler
	{
		[Token(Token = "0x4001913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly DDNA ddna;

		[Token(Token = "0x4001914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly Action<ImageMessage> callback;

		[Token(Token = "0x6001EB9")]
		[Address(RVA = "0x1161A40", Offset = "0x1161A40", VA = "0x1161A40")]
		public ImageMessageHandler(DDNA ddna, Action<ImageMessage> callback)
		{
		}

		[Token(Token = "0x6001EBA")]
		[Address(RVA = "0x1161A90", Offset = "0x1161A90", VA = "0x1161A90", Slot = "4")]
		internal override bool Handle(EventTrigger trigger, ActionStore store)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EBB")]
		[Address(RVA = "0x1161C58", Offset = "0x1161C58", VA = "0x1161C58", Slot = "5")]
		internal override string Type()
		{
			return null;
		}
	}
	[Token(Token = "0x20004F9")]
	internal class EventTrigger : IComparable<EventTrigger>
	{
		[Serializable]
		[Token(Token = "0x2000699")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFAFC", Offset = "0xCBFAFC")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<object, Dictionary<string, object>> <>9__14_0;

			[Token(Token = "0x60024C4")]
			[Address(RVA = "0x115AC7C", Offset = "0x115AC7C", VA = "0x115AC7C")]
			public <>c()
			{
			}

			[Token(Token = "0x60024C5")]
			[Address(RVA = "0x115AC84", Offset = "0x115AC84", VA = "0x115AC84")]
			internal Dictionary<string, object> <.ctor>b__14_0(object e)
			{
				return null;
			}

			[Token(Token = "0x60024C6")]
			[Address(RVA = "0x115AD04", Offset = "0x115AD04", VA = "0x115AD04")]
			internal bool <.cctor>b__26_0(bool left, bool right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024C7")]
			[Address(RVA = "0x115AD10", Offset = "0x115AD10", VA = "0x115AD10")]
			internal bool <.cctor>b__26_1(bool left, bool right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024C8")]
			[Address(RVA = "0x115AD1C", Offset = "0x115AD1C", VA = "0x115AD1C")]
			internal bool <.cctor>b__26_2(bool left, bool right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024C9")]
			[Address(RVA = "0x115AD28", Offset = "0x115AD28", VA = "0x115AD28")]
			internal bool <.cctor>b__26_3(bool left, bool right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024CA")]
			[Address(RVA = "0x115AD34", Offset = "0x115AD34", VA = "0x115AD34")]
			internal bool <.cctor>b__26_4(long left, long right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024CB")]
			[Address(RVA = "0x115AD40", Offset = "0x115AD40", VA = "0x115AD40")]
			internal bool <.cctor>b__26_5(long left, long right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024CC")]
			[Address(RVA = "0x115AD4C", Offset = "0x115AD4C", VA = "0x115AD4C")]
			internal bool <.cctor>b__26_6(long left, long right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024CD")]
			[Address(RVA = "0x115AD58", Offset = "0x115AD58", VA = "0x115AD58")]
			internal bool <.cctor>b__26_7(long left, long right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024CE")]
			[Address(RVA = "0x115AD64", Offset = "0x115AD64", VA = "0x115AD64")]
			internal bool <.cctor>b__26_8(long left, long right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024CF")]
			[Address(RVA = "0x115AD70", Offset = "0x115AD70", VA = "0x115AD70")]
			internal bool <.cctor>b__26_9(long left, long right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D0")]
			[Address(RVA = "0x115AD7C", Offset = "0x115AD7C", VA = "0x115AD7C")]
			internal bool <.cctor>b__26_10(double left, double right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D1")]
			[Address(RVA = "0x115AD88", Offset = "0x115AD88", VA = "0x115AD88")]
			internal bool <.cctor>b__26_11(double left, double right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D2")]
			[Address(RVA = "0x115AD94", Offset = "0x115AD94", VA = "0x115AD94")]
			internal bool <.cctor>b__26_12(double left, double right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D3")]
			[Address(RVA = "0x115ADA0", Offset = "0x115ADA0", VA = "0x115ADA0")]
			internal bool <.cctor>b__26_13(double left, double right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D4")]
			[Address(RVA = "0x115ADAC", Offset = "0x115ADAC", VA = "0x115ADAC")]
			internal bool <.cctor>b__26_14(double left, double right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D5")]
			[Address(RVA = "0x115ADB8", Offset = "0x115ADB8", VA = "0x115ADB8")]
			internal bool <.cctor>b__26_15(double left, double right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D6")]
			[Address(RVA = "0x115ADC4", Offset = "0x115ADC4", VA = "0x115ADC4")]
			internal bool <.cctor>b__26_16(string left, string right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D7")]
			[Address(RVA = "0x115ADD4", Offset = "0x115ADD4", VA = "0x115ADD4")]
			internal bool <.cctor>b__26_17(string left, string right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D8")]
			[Address(RVA = "0x115ADEC", Offset = "0x115ADEC", VA = "0x115ADEC")]
			internal bool <.cctor>b__26_18(string left, string right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024D9")]
			[Address(RVA = "0x115AE14", Offset = "0x115AE14", VA = "0x115AE14")]
			internal bool <.cctor>b__26_19(string left, string right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024DA")]
			[Address(RVA = "0x115AE44", Offset = "0x115AE44", VA = "0x115AE44")]
			internal bool <.cctor>b__26_20(string left, string right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024DB")]
			[Address(RVA = "0x115AE74", Offset = "0x115AE74", VA = "0x115AE74")]
			internal bool <.cctor>b__26_21(string left, string right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024DC")]
			[Address(RVA = "0x115AEAC", Offset = "0x115AEAC", VA = "0x115AEAC")]
			internal bool <.cctor>b__26_22(string left, string right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024DD")]
			[Address(RVA = "0x115AECC", Offset = "0x115AECC", VA = "0x115AECC")]
			internal bool <.cctor>b__26_23(string left, string right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024DE")]
			[Address(RVA = "0x115AEF4", Offset = "0x115AEF4", VA = "0x115AEF4")]
			internal bool <.cctor>b__26_24(string left, string right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024DF")]
			[Address(RVA = "0x115AF14", Offset = "0x115AF14", VA = "0x115AF14")]
			internal bool <.cctor>b__26_25(string left, string right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E0")]
			[Address(RVA = "0x115AF3C", Offset = "0x115AF3C", VA = "0x115AF3C")]
			internal bool <.cctor>b__26_26(DateTime left, DateTime right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E1")]
			[Address(RVA = "0x115AFB4", Offset = "0x115AFB4", VA = "0x115AFB4")]
			internal bool <.cctor>b__26_27(DateTime left, DateTime right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E2")]
			[Address(RVA = "0x115B02C", Offset = "0x115B02C", VA = "0x115B02C")]
			internal bool <.cctor>b__26_28(DateTime left, DateTime right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E3")]
			[Address(RVA = "0x115B0A4", Offset = "0x115B0A4", VA = "0x115B0A4")]
			internal bool <.cctor>b__26_29(DateTime left, DateTime right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E4")]
			[Address(RVA = "0x115B11C", Offset = "0x115B11C", VA = "0x115B11C")]
			internal bool <.cctor>b__26_30(DateTime left, DateTime right)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E5")]
			[Address(RVA = "0x115B194", Offset = "0x115B194", VA = "0x115B194")]
			internal bool <.cctor>b__26_31(DateTime left, DateTime right)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private readonly DDNABase ddna;

		[Token(Token = "0x4001916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private readonly int index;

		[Token(Token = "0x4001917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly string eventName;

		[Token(Token = "0x4001918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private readonly Dictionary<string, object> response;

		[Token(Token = "0x4001919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly long priority;

		[Token(Token = "0x400191A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private readonly long limit;

		[Token(Token = "0x400191B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly Dictionary<string, object>[] condition;

		[Token(Token = "0x400191C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private readonly long campaignId;

		[Token(Token = "0x400191D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private readonly long variantId;

		[Token(Token = "0x400191E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly string campaignName;

		[Token(Token = "0x400191F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private readonly string variantName;

		[Token(Token = "0x4001920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private readonly List<TriggerCondition> campaignTriggerConditions;

		[Token(Token = "0x4001921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private readonly ExecutionCountManager executionCountManager;

		[Token(Token = "0x4001922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int runs;

		[Token(Token = "0x4001923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Dictionary<string, Func<bool, bool, bool>> BOOLS;

		[Token(Token = "0x4001924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly Dictionary<string, Func<long, long, bool>> LONGS;

		[Token(Token = "0x4001925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly Dictionary<string, Func<double, double, bool>> DOUBLES;

		[Token(Token = "0x4001926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly Dictionary<string, Func<string, string, bool>> STRINGS;

		[Token(Token = "0x4001927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly Dictionary<string, Func<DateTime, DateTime, bool>> DATES;

		[Token(Token = "0x6001EBC")]
		[Address(RVA = "0x166B648", Offset = "0x166B648", VA = "0x166B648")]
		internal EventTrigger(DDNABase ddna, int index, Dictionary<string, object> json, ExecutionCountManager executionCountManager)
		{
		}

		[Token(Token = "0x6001EBD")]
		[Address(RVA = "0x1671D94", Offset = "0x1671D94", VA = "0x1671D94")]
		internal string GetEventName()
		{
			return null;
		}

		[Token(Token = "0x6001EBE")]
		[Address(RVA = "0x1671D9C", Offset = "0x1671D9C", VA = "0x1671D9C", Slot = "5")]
		internal virtual string GetAction()
		{
			return null;
		}

		[Token(Token = "0x6001EBF")]
		[Address(RVA = "0x1671E8C", Offset = "0x1671E8C", VA = "0x1671E8C", Slot = "6")]
		internal virtual Dictionary<string, object> GetResponse()
		{
			return null;
		}

		[Token(Token = "0x6001EC0")]
		[Address(RVA = "0x1671E94", Offset = "0x1671E94", VA = "0x1671E94", Slot = "7")]
		internal virtual long GetCampaignId()
		{
			return default(long);
		}

		[Token(Token = "0x6001EC1")]
		[Address(RVA = "0x1671E9C", Offset = "0x1671E9C", VA = "0x1671E9C", Slot = "8")]
		internal virtual bool Evaluate(GameEvent evnt)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EC2")]
		[Address(RVA = "0x1673D68", Offset = "0x1673D68", VA = "0x1673D68", Slot = "4")]
		public int CompareTo(EventTrigger other)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20004FA")]
	public class ExecutionCountManager : SimpleDataStore<long, long>
	{
		[Token(Token = "0x6001EC4")]
		[Address(RVA = "0x115B2D8", Offset = "0x115B2D8", VA = "0x115B2D8")]
		public ExecutionCountManager()
		{
		}

		[Token(Token = "0x6001EC5")]
		[Address(RVA = "0x115B364", Offset = "0x115B364", VA = "0x115B364", Slot = "4")]
		protected override long parseKey(string key)
		{
			return default(long);
		}

		[Token(Token = "0x6001EC6")]
		[Address(RVA = "0x115B370", Offset = "0x115B370", VA = "0x115B370", Slot = "5")]
		protected override long parseValue(string value)
		{
			return default(long);
		}

		[Token(Token = "0x6001EC7")]
		[Address(RVA = "0x115B37C", Offset = "0x115B37C", VA = "0x115B37C", Slot = "6")]
		protected override string createLine(long key, long value)
		{
			return null;
		}

		[Token(Token = "0x6001EC8")]
		[Address(RVA = "0x115B274", Offset = "0x115B274", VA = "0x115B274")]
		public long GetExecutionCount(long variantId)
		{
			return default(long);
		}

		[Token(Token = "0x6001EC9")]
		[Address(RVA = "0x115B42C", Offset = "0x115B42C", VA = "0x115B42C")]
		public void incrementExecutionCount(long variantId)
		{
		}
	}
}
namespace DeltaDNA.Android
{
	[Token(Token = "0x20004FB")]
	internal class DDNANotifications
	{
		[Token(Token = "0x4001928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private AndroidJavaClass ddnaNotifications;

		[Token(Token = "0x6001ECA")]
		[Address(RVA = "0x165C368", Offset = "0x165C368", VA = "0x165C368")]
		public DDNANotifications()
		{
		}

		[Token(Token = "0x6001ECB")]
		[Address(RVA = "0x165C3E8", Offset = "0x165C3E8", VA = "0x165C3E8")]
		public void MarkUnityLoaded()
		{
		}

		[Token(Token = "0x6001ECC")]
		[Address(RVA = "0x165C4DC", Offset = "0x165C4DC", VA = "0x165C4DC")]
		public void Register(AndroidJavaObject context, bool secondary)
		{
		}
	}
	[Token(Token = "0x20004FC")]
	public class Utils
	{
		[Token(Token = "0x4001929")]
		public const string DdnaNotificationsClassName = "com.deltadna.android.sdk.notifications.DDNANotifications";

		[Token(Token = "0x6001ECD")]
		[Address(RVA = "0x165C614", Offset = "0x165C614", VA = "0x165C614")]
		public Utils()
		{
		}
	}
}
namespace DeltaDNA.MiniJSON
{
	[Token(Token = "0x20004FD")]
	public static class Json
	{
		[Token(Token = "0x200069A")]
		private sealed class Parser : IDisposable
		{
			[Token(Token = "0x20006B6")]
			private enum TOKEN
			{
				[Token(Token = "0x4001FE7")]
				NONE,
				[Token(Token = "0x4001FE8")]
				CURLY_OPEN,
				[Token(Token = "0x4001FE9")]
				CURLY_CLOSE,
				[Token(Token = "0x4001FEA")]
				SQUARED_OPEN,
				[Token(Token = "0x4001FEB")]
				SQUARED_CLOSE,
				[Token(Token = "0x4001FEC")]
				COLON,
				[Token(Token = "0x4001FED")]
				COMMA,
				[Token(Token = "0x4001FEE")]
				STRING,
				[Token(Token = "0x4001FEF")]
				NUMBER,
				[Token(Token = "0x4001FF0")]
				TRUE,
				[Token(Token = "0x4001FF1")]
				FALSE,
				[Token(Token = "0x4001FF2")]
				NULL
			}

			[Token(Token = "0x4001F63")]
			private const string WORD_BREAK = "{}[],:\"";

			[Token(Token = "0x4001F64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringReader json;

			[Token(Token = "0x170003F1")]
			private char PeekChar
			{
				[Token(Token = "0x60024F1")]
				[Address(RVA = "0x1166100", Offset = "0x1166100", VA = "0x1166100")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x170003F2")]
			private char NextChar
			{
				[Token(Token = "0x60024F2")]
				[Address(RVA = "0x1165F08", Offset = "0x1165F08", VA = "0x1165F08")]
				get
				{
					return default(char);
				}
			}

			[Token(Token = "0x170003F3")]
			private string NextWord
			{
				[Token(Token = "0x60024F3")]
				[Address(RVA = "0x1165F90", Offset = "0x1165F90", VA = "0x1165F90")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170003F4")]
			private TOKEN NextToken
			{
				[Token(Token = "0x60024F4")]
				[Address(RVA = "0x11657A8", Offset = "0x11657A8", VA = "0x11657A8")]
				get
				{
					return default(TOKEN);
				}
			}

			[Token(Token = "0x60024E6")]
			[Address(RVA = "0x116550C", Offset = "0x116550C", VA = "0x116550C")]
			public static bool IsWordBreak(char c)
			{
				return default(bool);
			}

			[Token(Token = "0x60024E7")]
			[Address(RVA = "0x11655AC", Offset = "0x11655AC", VA = "0x11655AC")]
			private Parser(string jsonString)
			{
			}

			[Token(Token = "0x60024E8")]
			[Address(RVA = "0x1165350", Offset = "0x1165350", VA = "0x1165350")]
			public static object Parse(string jsonString)
			{
				return null;
			}

			[Token(Token = "0x60024E9")]
			[Address(RVA = "0x1165658", Offset = "0x1165658", VA = "0x1165658", Slot = "4")]
			public void Dispose()
			{
			}

			[Token(Token = "0x60024EA")]
			[Address(RVA = "0x1165694", Offset = "0x1165694", VA = "0x1165694")]
			private Dictionary<string, object> ParseObject()
			{
				return null;
			}

			[Token(Token = "0x60024EB")]
			[Address(RVA = "0x1165BD8", Offset = "0x1165BD8", VA = "0x1165BD8")]
			private List<object> ParseArray()
			{
				return null;
			}

			[Token(Token = "0x60024EC")]
			[Address(RVA = "0x1165630", Offset = "0x1165630", VA = "0x1165630")]
			private object ParseValue()
			{
				return null;
			}

			[Token(Token = "0x60024ED")]
			[Address(RVA = "0x1165CAC", Offset = "0x1165CAC", VA = "0x1165CAC")]
			private object ParseByToken(TOKEN token)
			{
				return null;
			}

			[Token(Token = "0x60024EE")]
			[Address(RVA = "0x1165958", Offset = "0x1165958", VA = "0x1165958")]
			private string ParseString()
			{
				return null;
			}

			[Token(Token = "0x60024EF")]
			[Address(RVA = "0x1165D88", Offset = "0x1165D88", VA = "0x1165D88")]
			private object ParseNumber()
			{
				return null;
			}

			[Token(Token = "0x60024F0")]
			[Address(RVA = "0x116604C", Offset = "0x116604C", VA = "0x116604C")]
			private void EatWhitespace()
			{
			}
		}

		[Token(Token = "0x200069B")]
		private sealed class Serializer
		{
			[Token(Token = "0x4001F65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private StringBuilder builder;

			[Token(Token = "0x60024F5")]
			[Address(RVA = "0x1166188", Offset = "0x1166188", VA = "0x1166188")]
			private Serializer()
			{
			}

			[Token(Token = "0x60024F6")]
			[Address(RVA = "0x1165490", Offset = "0x1165490", VA = "0x1165490")]
			public static string Serialize(object obj)
			{
				return null;
			}

			[Token(Token = "0x60024F7")]
			[Address(RVA = "0x11661FC", Offset = "0x11661FC", VA = "0x11661FC")]
			private void SerializeValue(object value)
			{
			}

			[Token(Token = "0x60024F8")]
			[Address(RVA = "0x116679C", Offset = "0x116679C", VA = "0x116679C")]
			private void SerializeObject(IDictionary obj)
			{
			}

			[Token(Token = "0x60024F9")]
			[Address(RVA = "0x11665F8", Offset = "0x11665F8", VA = "0x11665F8")]
			private void SerializeArray(IList anArray)
			{
			}

			[Token(Token = "0x60024FA")]
			[Address(RVA = "0x1166398", Offset = "0x1166398", VA = "0x1166398")]
			private void SerializeString(string str)
			{
			}

			[Token(Token = "0x60024FB")]
			[Address(RVA = "0x1166B94", Offset = "0x1166B94", VA = "0x1166B94")]
			private void SerializeOther(object value)
			{
			}
		}

		[Token(Token = "0x6001ECE")]
		[Address(RVA = "0x1164E50", Offset = "0x1164E50", VA = "0x1164E50")]
		public static object Deserialize(string json)
		{
			return null;
		}

		[Token(Token = "0x6001ECF")]
		[Address(RVA = "0x116548C", Offset = "0x116548C", VA = "0x116548C")]
		public static string Serialize(object obj)
		{
			return null;
		}
	}
}
namespace DeltaDNA.Ads
{
	[Token(Token = "0x20004FE")]
	internal interface ISmartAdsManager
	{
		[Token(Token = "0x6001ED0")]
		void RegisterForAds(Dictionary<string, object> config, bool userConsent, bool ageRestricted);

		[Token(Token = "0x6001ED1")]
		bool IsInterstitialAdAllowed(Engagement engagement, bool checkTime);

		[Token(Token = "0x6001ED2")]
		bool IsRewardedAdAllowed(Engagement engagement, bool checkTime);

		[Token(Token = "0x6001ED3")]
		long TimeUntilRewardedAdAllowed(Engagement engagement);

		[Token(Token = "0x6001ED4")]
		bool HasLoadedInterstitialAd();

		[Token(Token = "0x6001ED5")]
		bool HasLoadedRewardedAd();

		[Token(Token = "0x6001ED6")]
		void ShowInterstitialAd(Engagement engagement);

		[Token(Token = "0x6001ED7")]
		void ShowRewardedAd(Engagement engagement);

		[Token(Token = "0x6001ED8")]
		DateTime? GetLastShown(string decisionPoint);

		[Token(Token = "0x6001ED9")]
		long GetSessionCount(string decisionPoint);

		[Token(Token = "0x6001EDA")]
		long GetDailyCount(string decisionPoint);

		[Token(Token = "0x6001EDB")]
		void OnPause();

		[Token(Token = "0x6001EDC")]
		void OnResume();

		[Token(Token = "0x6001EDD")]
		void OnDestroy();

		[Token(Token = "0x6001EDE")]
		void OnNewSession();
	}
}
namespace DeltaDNA.Ads.iOS
{
	[Token(Token = "0x20004FF")]
	internal class SmartAdsManager : ISmartAdsManager
	{
		[Token(Token = "0x6001EDF")]
		[Address(RVA = "0x165C300", Offset = "0x165C300", VA = "0x165C300", Slot = "4")]
		public void RegisterForAds(Dictionary<string, object> config, bool userConsent, bool ageRestricted)
		{
		}

		[Token(Token = "0x6001EE0")]
		[Address(RVA = "0x165C304", Offset = "0x165C304", VA = "0x165C304", Slot = "5")]
		public bool IsInterstitialAdAllowed(Engagement engagement, bool checkTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE1")]
		[Address(RVA = "0x165C30C", Offset = "0x165C30C", VA = "0x165C30C", Slot = "8")]
		public bool HasLoadedInterstitialAd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE2")]
		[Address(RVA = "0x165C314", Offset = "0x165C314", VA = "0x165C314", Slot = "10")]
		public void ShowInterstitialAd(Engagement engagement)
		{
		}

		[Token(Token = "0x6001EE3")]
		[Address(RVA = "0x165C318", Offset = "0x165C318", VA = "0x165C318", Slot = "6")]
		public bool IsRewardedAdAllowed(Engagement engagement, bool checkTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE4")]
		[Address(RVA = "0x165C320", Offset = "0x165C320", VA = "0x165C320", Slot = "7")]
		public long TimeUntilRewardedAdAllowed(Engagement engagement)
		{
			return default(long);
		}

		[Token(Token = "0x6001EE5")]
		[Address(RVA = "0x165C328", Offset = "0x165C328", VA = "0x165C328", Slot = "9")]
		public bool HasLoadedRewardedAd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EE6")]
		[Address(RVA = "0x165C330", Offset = "0x165C330", VA = "0x165C330", Slot = "11")]
		public void ShowRewardedAd(Engagement engagement)
		{
		}

		[Token(Token = "0x6001EE7")]
		[Address(RVA = "0x165C334", Offset = "0x165C334", VA = "0x165C334", Slot = "12")]
		public DateTime? GetLastShown(string decisionPoint)
		{
			return null;
		}

		[Token(Token = "0x6001EE8")]
		[Address(RVA = "0x165C340", Offset = "0x165C340", VA = "0x165C340", Slot = "13")]
		public long GetSessionCount(string decisionPoint)
		{
			return default(long);
		}

		[Token(Token = "0x6001EE9")]
		[Address(RVA = "0x165C348", Offset = "0x165C348", VA = "0x165C348", Slot = "14")]
		public long GetDailyCount(string decisionPoint)
		{
			return default(long);
		}

		[Token(Token = "0x6001EEA")]
		[Address(RVA = "0x165C350", Offset = "0x165C350", VA = "0x165C350", Slot = "15")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001EEB")]
		[Address(RVA = "0x165C354", Offset = "0x165C354", VA = "0x165C354", Slot = "16")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001EEC")]
		[Address(RVA = "0x165C358", Offset = "0x165C358", VA = "0x165C358", Slot = "17")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001EED")]
		[Address(RVA = "0x165C35C", Offset = "0x165C35C", VA = "0x165C35C", Slot = "18")]
		public void OnNewSession()
		{
		}

		[Token(Token = "0x6001EEE")]
		[Address(RVA = "0x165C360", Offset = "0x165C360", VA = "0x165C360")]
		public SmartAdsManager()
		{
		}
	}
}
namespace DeltaDNA.Ads.Android
{
	[Token(Token = "0x2000500")]
	internal class AdService : ISmartAdsManager
	{
		[Token(Token = "0x6001EEF")]
		[Address(RVA = "0x165BE68", Offset = "0x165BE68", VA = "0x165BE68")]
		internal AdService(SmartAds ads, string sdkVersion)
		{
		}

		[Token(Token = "0x6001EF0")]
		[Address(RVA = "0x165BE70", Offset = "0x165BE70", VA = "0x165BE70", Slot = "4")]
		public void RegisterForAds(Dictionary<string, object> config, bool userConsent, bool ageRestricted)
		{
		}

		[Token(Token = "0x6001EF1")]
		[Address(RVA = "0x165BE74", Offset = "0x165BE74", VA = "0x165BE74", Slot = "5")]
		public bool IsInterstitialAdAllowed(Engagement engagement, bool checkTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF2")]
		[Address(RVA = "0x165BE7C", Offset = "0x165BE7C", VA = "0x165BE7C", Slot = "6")]
		public bool IsRewardedAdAllowed(Engagement engagement, bool checkTime)
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF3")]
		[Address(RVA = "0x165BE84", Offset = "0x165BE84", VA = "0x165BE84", Slot = "7")]
		public long TimeUntilRewardedAdAllowed(Engagement engagement)
		{
			return default(long);
		}

		[Token(Token = "0x6001EF4")]
		[Address(RVA = "0x165BE8C", Offset = "0x165BE8C", VA = "0x165BE8C", Slot = "8")]
		public bool HasLoadedInterstitialAd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF5")]
		[Address(RVA = "0x165BE94", Offset = "0x165BE94", VA = "0x165BE94", Slot = "9")]
		public bool HasLoadedRewardedAd()
		{
			return default(bool);
		}

		[Token(Token = "0x6001EF6")]
		[Address(RVA = "0x165BE9C", Offset = "0x165BE9C", VA = "0x165BE9C", Slot = "10")]
		public void ShowInterstitialAd(Engagement engagement)
		{
		}

		[Token(Token = "0x6001EF7")]
		[Address(RVA = "0x165BEA0", Offset = "0x165BEA0", VA = "0x165BEA0", Slot = "11")]
		public void ShowRewardedAd(Engagement engagement)
		{
		}

		[Token(Token = "0x6001EF8")]
		[Address(RVA = "0x165BEA4", Offset = "0x165BEA4", VA = "0x165BEA4", Slot = "12")]
		public DateTime? GetLastShown(string decisionPoint)
		{
			return null;
		}

		[Token(Token = "0x6001EF9")]
		[Address(RVA = "0x165BEB0", Offset = "0x165BEB0", VA = "0x165BEB0", Slot = "13")]
		public long GetSessionCount(string decisionPoint)
		{
			return default(long);
		}

		[Token(Token = "0x6001EFA")]
		[Address(RVA = "0x165BEB8", Offset = "0x165BEB8", VA = "0x165BEB8", Slot = "14")]
		public long GetDailyCount(string decisionPoint)
		{
			return default(long);
		}

		[Token(Token = "0x6001EFB")]
		[Address(RVA = "0x165BEC0", Offset = "0x165BEC0", VA = "0x165BEC0", Slot = "15")]
		public void OnPause()
		{
		}

		[Token(Token = "0x6001EFC")]
		[Address(RVA = "0x165BEC4", Offset = "0x165BEC4", VA = "0x165BEC4", Slot = "16")]
		public void OnResume()
		{
		}

		[Token(Token = "0x6001EFD")]
		[Address(RVA = "0x165BEC8", Offset = "0x165BEC8", VA = "0x165BEC8", Slot = "17")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x6001EFE")]
		[Address(RVA = "0x165BECC", Offset = "0x165BECC", VA = "0x165BECC", Slot = "18")]
		public void OnNewSession()
		{
		}
	}
	[Token(Token = "0x2000501")]
	internal class AdServiceListener : AndroidJavaProxy
	{
		[Token(Token = "0x400192A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SmartAds ads;

		[Token(Token = "0x6001EFF")]
		[Address(RVA = "0x165BED0", Offset = "0x165BED0", VA = "0x165BED0")]
		internal AdServiceListener(SmartAds ads)
		{
		}

		[Token(Token = "0x6001F00")]
		[Address(RVA = "0x165BF60", Offset = "0x165BF60", VA = "0x165BF60")]
		private void onRegisteredForInterstitialAds()
		{
		}

		[Token(Token = "0x6001F01")]
		[Address(RVA = "0x165BF7C", Offset = "0x165BF7C", VA = "0x165BF7C")]
		private void onFailedToRegisterForInterstitialAds(string reason)
		{
		}

		[Token(Token = "0x6001F02")]
		[Address(RVA = "0x165BF98", Offset = "0x165BF98", VA = "0x165BF98")]
		private void onRegisteredForRewardedAds()
		{
		}

		[Token(Token = "0x6001F03")]
		[Address(RVA = "0x165BFB4", Offset = "0x165BFB4", VA = "0x165BFB4")]
		private void onFailedToRegisterForRewardedAds(string reason)
		{
		}

		[Token(Token = "0x6001F04")]
		[Address(RVA = "0x165BFD0", Offset = "0x165BFD0", VA = "0x165BFD0")]
		private void onInterstitialAdOpened()
		{
		}

		[Token(Token = "0x6001F05")]
		[Address(RVA = "0x165BFEC", Offset = "0x165BFEC", VA = "0x165BFEC")]
		private void onInterstitialAdFailedToOpen(string reason)
		{
		}

		[Token(Token = "0x6001F06")]
		[Address(RVA = "0x165C008", Offset = "0x165C008", VA = "0x165C008")]
		private void onInterstitialAdClosed()
		{
		}

		[Token(Token = "0x6001F07")]
		[Address(RVA = "0x165C024", Offset = "0x165C024", VA = "0x165C024")]
		private void onRewardedAdLoaded()
		{
		}

		[Token(Token = "0x6001F08")]
		[Address(RVA = "0x165C040", Offset = "0x165C040", VA = "0x165C040")]
		private void onRewardedAdOpened(string decisionPoint)
		{
		}

		[Token(Token = "0x6001F09")]
		[Address(RVA = "0x165C05C", Offset = "0x165C05C", VA = "0x165C05C")]
		private void onRewardedAdFailedToOpen(string reason)
		{
		}

		[Token(Token = "0x6001F0A")]
		[Address(RVA = "0x165C078", Offset = "0x165C078", VA = "0x165C078")]
		private void onRewardedAdClosed(bool completed)
		{
		}

		[Token(Token = "0x6001F0B")]
		[Address(RVA = "0x165C118", Offset = "0x165C118", VA = "0x165C118")]
		private void onRecordEvent(string eventName, string eventParamsJson)
		{
		}
	}
	[Token(Token = "0x2000502")]
	public class Utils
	{
		[Token(Token = "0x400192B")]
		public const string AdServiceWrapperClassName = "com.deltadna.android.sdk.ads.core.AdServiceWrapper";

		[Token(Token = "0x400192C")]
		public const string AdServiceListenerClassName = "com.deltadna.android.sdk.ads.core.AdServiceListener";

		[Token(Token = "0x400192D")]
		public const string UnityActivityClassName = "com.unity3d.player.UnityPlayer";

		[Token(Token = "0x400192E")]
		public const string JSONObjectClassName = "org.json.JSONObject";

		[Token(Token = "0x400192F")]
		public const string ThrowableClassName = "java.lang.Throwable";

		[Token(Token = "0x6001F0C")]
		[Address(RVA = "0x165C2F8", Offset = "0x165C2F8", VA = "0x165C2F8")]
		public Utils()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x2000503")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x6001F0D")]
		[Address(RVA = "0xF6FC00", Offset = "0xF6FC00", VA = "0xF6FC00")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F0E")]
		[Address(RVA = "0xF6FDB4", Offset = "0xF6FDB4", VA = "0xF6FDB4")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x2000504")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x4001930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController instance;

		[Token(Token = "0x4001931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x4001932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x4001933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x6001F0F")]
		[Address(RVA = "0xF6FDBC", Offset = "0xF6FDBC", VA = "0xF6FDBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F10")]
		[Address(RVA = "0xF6FE14", Offset = "0xF6FE14", VA = "0xF6FE14")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x2000505")]
	public class CUI_ChangeColor : MonoBehaviour
	{
		[Token(Token = "0x6001F11")]
		[Address(RVA = "0xF6FE2C", Offset = "0xF6FE2C", VA = "0xF6FE2C")]
		public void ChangeColorToBlue()
		{
		}

		[Token(Token = "0x6001F12")]
		[Address(RVA = "0xF6FEA8", Offset = "0xF6FEA8", VA = "0xF6FEA8")]
		public void ChangeColorToCyan()
		{
		}

		[Token(Token = "0x6001F13")]
		[Address(RVA = "0xF6FF24", Offset = "0xF6FF24", VA = "0xF6FF24")]
		public void ChangeColorToWhite()
		{
		}

		[Token(Token = "0x6001F14")]
		[Address(RVA = "0xF6FFA0", Offset = "0xF6FFA0", VA = "0xF6FFA0")]
		public CUI_ChangeColor()
		{
		}
	}
	[Token(Token = "0x2000506")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x4001935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x4001936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x4001937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x4001938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x4001939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x400193A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x6001F15")]
		[Address(RVA = "0xF6FFA8", Offset = "0xF6FFA8", VA = "0xF6FFA8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F16")]
		[Address(RVA = "0xF7002C", Offset = "0xF7002C", VA = "0xF7002C")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x6001F17")]
		[Address(RVA = "0xF70194", Offset = "0xF70194", VA = "0xF70194", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x6001F18")]
		[Address(RVA = "0xF70228", Offset = "0xF70228", VA = "0xF70228", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x6001F19")]
		[Address(RVA = "0xF702B8", Offset = "0xF702B8", VA = "0xF702B8")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x2000507")]
	public class CUI_DragBetweenCanvases : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x400193B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x6001F1A")]
		[Address(RVA = "0xF702C0", Offset = "0xF702C0", VA = "0xF702C0", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001F1B")]
		[Address(RVA = "0xF70604", Offset = "0xF70604", VA = "0xF70604", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001F1C")]
		[Address(RVA = "0xF70A64", Offset = "0xF70A64", VA = "0xF70A64", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001F1D")]
		[Address(RVA = "0xF70408", Offset = "0xF70408", VA = "0xF70408")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6001F1E")]
		[Address(RVA = "0xF70AD0", Offset = "0xF70AD0", VA = "0xF70AD0")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x2000508")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200069C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFB0C", Offset = "0xCBFB0C")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x60024FD")]
			[Address(RVA = "0xF70F38", Offset = "0xF70F38", VA = "0xF70F38")]
			public <>c()
			{
			}

			[Token(Token = "0x60024FE")]
			[Address(RVA = "0xF70F40", Offset = "0xF70F40", VA = "0xF70F40")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400193C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x400193D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x6001F1F")]
		[Address(RVA = "0xF70AD8", Offset = "0xF70AD8", VA = "0xF70AD8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F20")]
		[Address(RVA = "0xF70EC8", Offset = "0xF70EC8", VA = "0xF70EC8")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x2000509")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x400193E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x400193F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x4001940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4001941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 lastMouse;

		[Token(Token = "0x6001F21")]
		[Address(RVA = "0xF71008", Offset = "0xF71008", VA = "0xF71008")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F22")]
		[Address(RVA = "0xF71034", Offset = "0xF71034", VA = "0xF71034")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F23")]
		[Address(RVA = "0xF71250", Offset = "0xF71250", VA = "0xF71250")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x200050A")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x4001942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x6001F24")]
		[Address(RVA = "0xF71264", Offset = "0xF71264", VA = "0xF71264")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001F25")]
		[Address(RVA = "0xF712C4", Offset = "0xF712C4", VA = "0xF712C4")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F26")]
		[Address(RVA = "0xF714BC", Offset = "0xF714BC", VA = "0xF714BC")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x200050B")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x4001943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4001944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x4001945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x6001F27")]
		[Address(RVA = "0xF714C4", Offset = "0xF714C4", VA = "0xF714C4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F28")]
		[Address(RVA = "0xF7153C", Offset = "0xF7153C", VA = "0xF7153C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F29")]
		[Address(RVA = "0xF71694", Offset = "0xF71694", VA = "0xF71694")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x200050C")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x4001946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x4001947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x4001948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x6001F2A")]
		[Address(RVA = "0xF716A4", Offset = "0xF716A4", VA = "0xF716A4")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F2B")]
		[Address(RVA = "0xF7171C", Offset = "0xF7171C", VA = "0xF7171C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F2C")]
		[Address(RVA = "0xF7181C", Offset = "0xF7181C", VA = "0xF7181C")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x200050D")]
	public class CUI_PickImageFromSet : MonoBehaviour
	{
		[Token(Token = "0x4001949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x6001F2D")]
		[Address(RVA = "0xF71830", Offset = "0xF71830", VA = "0xF71830")]
		public void PickThis()
		{
		}

		[Token(Token = "0x6001F2E")]
		[Address(RVA = "0xF719FC", Offset = "0xF719FC", VA = "0xF719FC")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x200050E")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x400194A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001F30")]
		[Address(RVA = "0xF71A08", Offset = "0xF71A08", VA = "0xF71A08")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F31")]
		[Address(RVA = "0xF71A68", Offset = "0xF71A68", VA = "0xF71A68")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F32")]
		[Address(RVA = "0xF71B6C", Offset = "0xF71B6C", VA = "0xF71B6C")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x200050F")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x400194B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x400194C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x400194D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x6001F33")]
		[Address(RVA = "0xF71B74", Offset = "0xF71B74", VA = "0xF71B74")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F34")]
		[Address(RVA = "0xF71B78", Offset = "0xF71B78", VA = "0xF71B78")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F35")]
		[Address(RVA = "0xF71D74", Offset = "0xF71D74", VA = "0xF71D74")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x2000510")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x400194E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x400194F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x4001950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x6001F36")]
		[Address(RVA = "0xF71D88", Offset = "0xF71D88", VA = "0xF71D88")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F37")]
		[Address(RVA = "0xF71E04", Offset = "0xF71E04", VA = "0xF71E04")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x2000511")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x200069D")]
		private enum ViveButton
		{
			[Token(Token = "0x4001F69")]
			Trigger,
			[Token(Token = "0x4001F6A")]
			TouchpadTouch,
			[Token(Token = "0x4001F6B")]
			TouchpadPress,
			[Token(Token = "0x4001F6C")]
			Grip,
			[Token(Token = "0x4001F6D")]
			Menu
		}

		[Token(Token = "0x4001951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x4001952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x4001953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x6001F38")]
		[Address(RVA = "0xF71E0C", Offset = "0xF71E0C", VA = "0xF71E0C")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x2000512")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x4001954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x6001F39")]
		[Address(RVA = "0xF71E50", Offset = "0xF71E50", VA = "0xF71E50")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3A")]
		[Address(RVA = "0xF71E5C", Offset = "0xF71E5C", VA = "0xF71E5C")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x6001F3B")]
		[Address(RVA = "0xF71EE0", Offset = "0xF71EE0", VA = "0xF71EE0")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x6001F3C")]
		[Address(RVA = "0xF71EE4", Offset = "0xF71EE4", VA = "0xF71EE4")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x2000513")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x4001955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x6001F3D")]
		[Address(RVA = "0xF71EEC", Offset = "0xF71EEC", VA = "0xF71EEC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F3E")]
		[Address(RVA = "0xF72054", Offset = "0xF72054", VA = "0xF72054")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F3F")]
		[Address(RVA = "0xF72128", Offset = "0xF72128", VA = "0xF72128")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x2000514")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x4001956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x4001957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x4001958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x6001F40")]
		[Address(RVA = "0xF72130", Offset = "0xF72130", VA = "0xF72130")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F41")]
		[Address(RVA = "0xF724D0", Offset = "0xF724D0", VA = "0xF724D0")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x2000515")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4001959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x400195A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x6001F42")]
		[Address(RVA = "0xF724D8", Offset = "0xF724D8", VA = "0xF724D8", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001F43")]
		[Address(RVA = "0xF72824", Offset = "0xF72824", VA = "0xF72824", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001F44")]
		[Address(RVA = "0xF72828", Offset = "0xF72828", VA = "0xF72828", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x6001F45")]
		[Address(RVA = "0xF728A0", Offset = "0xF728A0", VA = "0xF728A0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F46")]
		[Address(RVA = "0xF72628", Offset = "0xF72628", VA = "0xF72628")]
		private void RaycastPosition(out Vector2 newPos)
		{
		}

		[Token(Token = "0x6001F47")]
		[Address(RVA = "0xF729B4", Offset = "0xF729B4", VA = "0xF729B4")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x2000516")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x400195B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x400195C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x400195D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x400195E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x400195F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x6001F48")]
		[Address(RVA = "0xF729BC", Offset = "0xF729BC", VA = "0xF729BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001F49")]
		[Address(RVA = "0xF72A0C", Offset = "0xF72A0C", VA = "0xF72A0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F4A")]
		[Address(RVA = "0xF72C70", Offset = "0xF72C70", VA = "0xF72C70")]
		public CUI_inventory_paralax()
		{
		}
	}
}
namespace UnityEditor.Rendering.Universal
{
	[Token(Token = "0x2000517")]
	internal class AssetVersion : ScriptableObject
	{
		[Token(Token = "0x4001960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int version;

		[Token(Token = "0x6001F4B")]
		[Address(RVA = "0x11052D4", Offset = "0x11052D4", VA = "0x11052D4")]
		public AssetVersion()
		{
		}
	}
}
namespace AraSamples
{
	[Serializable]
	[Token(Token = "0x2000518")]
	public class AxleInfo
	{
		[Token(Token = "0x4001961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public WheelCollider leftWheel;

		[Token(Token = "0x4001962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public WheelCollider rightWheel;

		[Token(Token = "0x4001963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool motor;

		[Token(Token = "0x4001964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool steering;

		[Token(Token = "0x6001F4C")]
		[Address(RVA = "0x121F750", Offset = "0x121F750", VA = "0x121F750")]
		public AxleInfo()
		{
		}
	}
	[Token(Token = "0x2000519")]
	public class CarController : MonoBehaviour
	{
		[Token(Token = "0x4001965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<AxleInfo> axleInfos;

		[Token(Token = "0x4001966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxMotorTorque;

		[Token(Token = "0x4001967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxSteeringAngle;

		[Token(Token = "0x6001F4D")]
		[Address(RVA = "0x121F758", Offset = "0x121F758", VA = "0x121F758")]
		public void ApplyLocalPositionToVisuals(WheelCollider collider)
		{
		}

		[Token(Token = "0x6001F4E")]
		[Address(RVA = "0x121F824", Offset = "0x121F824", VA = "0x121F824")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F4F")]
		[Address(RVA = "0x121FA14", Offset = "0x121FA14", VA = "0x121FA14")]
		public CarController()
		{
		}
	}
	[Token(Token = "0x200051A")]
	public class ObjectDragger : MonoBehaviour
	{
		[Token(Token = "0x4001968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 screenPoint;

		[Token(Token = "0x4001969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 offset;

		[Token(Token = "0x6001F50")]
		[Address(RVA = "0x121FA1C", Offset = "0x121FA1C", VA = "0x121FA1C")]
		private void OnMouseDown()
		{
		}

		[Token(Token = "0x6001F51")]
		[Address(RVA = "0x121FBA0", Offset = "0x121FBA0", VA = "0x121FBA0")]
		private void OnMouseDrag()
		{
		}

		[Token(Token = "0x6001F52")]
		[Address(RVA = "0x121FCC4", Offset = "0x121FCC4", VA = "0x121FCC4")]
		public ObjectDragger()
		{
		}
	}
	[Token(Token = "0x200051B")]
	public class Rotation : MonoBehaviour
	{
		[Token(Token = "0x400196A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x400196B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 axis;

		[Token(Token = "0x6001F53")]
		[Address(RVA = "0x121FCCC", Offset = "0x121FCCC", VA = "0x121FCCC")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F54")]
		[Address(RVA = "0x121FD34", Offset = "0x121FD34", VA = "0x121FD34")]
		public Rotation()
		{
		}
	}
}
namespace Ara
{
	[Token(Token = "0x200051C")]
	[ExecuteInEditMode]
	public class AraTrail : MonoBehaviour
	{
		[Token(Token = "0x200069E")]
		public enum TrailAlignment
		{
			[Token(Token = "0x4001F6F")]
			View,
			[Token(Token = "0x4001F70")]
			Velocity,
			[Token(Token = "0x4001F71")]
			Local
		}

		[Token(Token = "0x200069F")]
		public enum TrailSorting
		{
			[Token(Token = "0x4001F73")]
			OlderOnTop,
			[Token(Token = "0x4001F74")]
			NewerOnTop
		}

		[Token(Token = "0x20006A0")]
		public enum Timescale
		{
			[Token(Token = "0x4001F76")]
			Normal,
			[Token(Token = "0x4001F77")]
			Unscaled
		}

		[Token(Token = "0x20006A1")]
		public enum TextureMode
		{
			[Token(Token = "0x4001F79")]
			Stretch,
			[Token(Token = "0x4001F7A")]
			Tile,
			[Token(Token = "0x4001F7B")]
			WorldTile
		}

		[Token(Token = "0x20006A2")]
		public struct CurveFrame
		{
			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 normal;

			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 bitangent;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 tangent;

			[Token(Token = "0x60024FF")]
			[Address(RVA = "0xDD9A40", Offset = "0xDD9A40", VA = "0xDD9A40")]
			public CurveFrame(Vector3 position, Vector3 normal, Vector3 bitangent, Vector3 tangent)
			{
			}

			[Token(Token = "0x6002500")]
			[Address(RVA = "0xDD9A70", Offset = "0xDD9A70", VA = "0xDD9A70")]
			public Vector3 Transport(Vector3 newTangent, Vector3 newPosition)
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x20006A3")]
		public struct Point
		{
			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 velocity;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 tangent;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Vector3 normal;

			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public Color color;

			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public float thickness;

			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			public float life;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public float texcoord;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			public bool discontinuous;

			[Token(Token = "0x6002501")]
			[Address(RVA = "0xDD9B5C", Offset = "0xDD9B5C", VA = "0xDD9B5C")]
			public Point(Vector3 position, Vector3 velocity, Vector3 tangent, Vector3 normal, Color color, float thickness, float texcoord, float lifetime)
			{
			}

			[Token(Token = "0x6002502")]
			[Address(RVA = "0x121BB20", Offset = "0x121BB20", VA = "0x121BB20")]
			public static float CatmullRom(float p0, float p1, float p2, float p3, float t)
			{
				return default(float);
			}

			[Token(Token = "0x6002503")]
			[Address(RVA = "0x121E498", Offset = "0x121E498", VA = "0x121E498")]
			public static Point operator +(Point p1, Point p2)
			{
				return default(Point);
			}

			[Token(Token = "0x6002504")]
			[Address(RVA = "0x121E688", Offset = "0x121E688", VA = "0x121E688")]
			public static Point operator -(Point p1, Point p2)
			{
				return default(Point);
			}
		}

		[Token(Token = "0x400196C")]
		public const float epsilon = 1E-05f;

		[Token(Token = "0x400196D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCD6A4", Offset = "0xCCD6A4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD6A4", Offset = "0xCCD6A4")]
		public TrailSection section;

		[Token(Token = "0x400196E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD704", Offset = "0xCCD704")]
		public Space space;

		[Token(Token = "0x400196F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD73C", Offset = "0xCCD73C")]
		public Timescale timescale;

		[Token(Token = "0x4001970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD774", Offset = "0xCCD774")]
		public TrailAlignment alignment;

		[Token(Token = "0x4001971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD7AC", Offset = "0xCCD7AC")]
		public TrailSorting sorting;

		[Token(Token = "0x4001972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD7E4", Offset = "0xCCD7E4")]
		public float thickness;

		[Token(Token = "0x4001973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD81C", Offset = "0xCCD81C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCD81C", Offset = "0xCCD81C")]
		public int smoothness;

		[Token(Token = "0x4001974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD870", Offset = "0xCCD870")]
		public bool highQualityCorners;

		[Token(Token = "0x4001975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCD8A8", Offset = "0xCCD8A8")]
		public int cornerRoundness;

		[Token(Token = "0x4001976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCD8C0", Offset = "0xCCD8C0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD8C0", Offset = "0xCCD8C0")]
		public AnimationCurve thicknessOverLenght;

		[Token(Token = "0x4001977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD920", Offset = "0xCCD920")]
		public Gradient colorOverLenght;

		[Token(Token = "0x4001978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCD958", Offset = "0xCCD958")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD958", Offset = "0xCCD958")]
		public AnimationCurve thicknessOverTime;

		[Token(Token = "0x4001979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCD9B8", Offset = "0xCCD9B8")]
		public Gradient colorOverTime;

		[Token(Token = "0x400197A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCD9F0", Offset = "0xCCD9F0")]
		public bool emit;

		[Token(Token = "0x400197B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDA28", Offset = "0xCCDA28")]
		public float initialThickness;

		[Token(Token = "0x400197C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDA60", Offset = "0xCCDA60")]
		public Color initialColor;

		[Token(Token = "0x400197D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDA98", Offset = "0xCCDA98")]
		public Vector3 initialVelocity;

		[Token(Token = "0x400197E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDAD0", Offset = "0xCCDAD0")]
		public float timeInterval;

		[Token(Token = "0x400197F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDB08", Offset = "0xCCDB08")]
		public float minDistance;

		[Token(Token = "0x4001980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDB40", Offset = "0xCCDB40")]
		public float time;

		[Token(Token = "0x4001981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCDB78", Offset = "0xCCDB78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDB78", Offset = "0xCCDB78")]
		public bool enablePhysics;

		[Token(Token = "0x4001982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDBD8", Offset = "0xCCDBD8")]
		public float warmup;

		[Token(Token = "0x4001983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDC10", Offset = "0xCCDC10")]
		public Vector3 gravity;

		[Token(Token = "0x4001984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDC48", Offset = "0xCCDC48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCDC48", Offset = "0xCCDC48")]
		public float inertia;

		[Token(Token = "0x4001985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDC9C", Offset = "0xCCDC9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCDC9C", Offset = "0xCCDC9C")]
		public float velocitySmoothing;

		[Token(Token = "0x4001986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDCF0", Offset = "0xCCDCF0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCDCF0", Offset = "0xCCDCF0")]
		public float damping;

		[Token(Token = "0x4001987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCDD44", Offset = "0xCCDD44")]
		public Material[] materials;

		[Token(Token = "0x4001988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public ShadowCastingMode castShadows;

		[Token(Token = "0x4001989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public bool receiveShadows;

		[Token(Token = "0x400198A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBD")]
		public bool useLightProbes;

		[Token(Token = "0x400198B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBE")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0xCCDD7C", Offset = "0xCCDD7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDD7C", Offset = "0xCCDD7C")]
		public bool quadMapping;

		[Token(Token = "0x400198C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDDDC", Offset = "0xCCDDDC")]
		public TextureMode textureMode;

		[Token(Token = "0x400198D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDE14", Offset = "0xCCDE14")]
		public float uvFactor;

		[Token(Token = "0x400198E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDE4C", Offset = "0xCCDE4C")]
		public float uvWidthFactor;

		[Token(Token = "0x400198F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDE84", Offset = "0xCCDE84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0xCCDE84", Offset = "0xCCDE84")]
		public float tileAnchor;

		[Token(Token = "0x4001991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		public ElasticArray<Point> points;

		[Token(Token = "0x4001992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private ElasticArray<Point> renderablePoints;

		[Token(Token = "0x4001993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<int> discontinuities;

		[Token(Token = "0x4001994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Mesh mesh_;

		[Token(Token = "0x4001995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3 velocity;

		[Token(Token = "0x4001996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private Vector3 prevPosition;

		[Token(Token = "0x4001997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float accumTime;

		[Token(Token = "0x4001998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<Vector3> vertices;

		[Token(Token = "0x4001999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<Vector3> normals;

		[Token(Token = "0x400199A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private List<Vector4> tangents;

		[Token(Token = "0x400199B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private List<Vector4> uvs;

		[Token(Token = "0x400199C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private List<Color> vertColors;

		[Token(Token = "0x400199D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private List<int> tris;

		[Token(Token = "0x400199E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Vector3 nextV;

		[Token(Token = "0x400199F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private Vector3 prevV;

		[Token(Token = "0x40019A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private Vector3 vertex;

		[Token(Token = "0x40019A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private Vector3 normal;

		[Token(Token = "0x40019A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Vector3 bitangent;

		[Token(Token = "0x40019A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private Vector4 tangent;

		[Token(Token = "0x40019A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Vector4 texTangent;

		[Token(Token = "0x40019A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector4 uv;

		[Token(Token = "0x40019A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private Color color;

		[Token(Token = "0x40019A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private Action<ScriptableRenderContext, Camera> renderCallback;

		[Token(Token = "0x17000313")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001F57")]
			[Address(RVA = "0x1218F78", Offset = "0x1218F78", VA = "0x1218F78")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000314")]
		private float DeltaTime
		{
			[Token(Token = "0x6001F58")]
			[Address(RVA = "0x1218F84", Offset = "0x1218F84", VA = "0x1218F84")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000315")]
		private float FixedDeltaTime
		{
			[Token(Token = "0x6001F59")]
			[Address(RVA = "0x1218FA0", Offset = "0x1218FA0", VA = "0x1218FA0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000316")]
		public Mesh mesh
		{
			[Token(Token = "0x6001F5A")]
			[Address(RVA = "0x1218FBC", Offset = "0x1218FBC", VA = "0x1218FBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1400003B")]
		public event System.Action onUpdatePoints
		{
			[Token(Token = "0x6001F55")]
			[Address(RVA = "0x1218E30", Offset = "0x1218E30", VA = "0x1218E30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3C90", Offset = "0xCD3C90")]
			add
			{
			}
			[Token(Token = "0x6001F56")]
			[Address(RVA = "0x1218ED4", Offset = "0x1218ED4", VA = "0x1218ED4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3CA0", Offset = "0xCD3CA0")]
			remove
			{
			}
		}

		[Token(Token = "0x6001F5B")]
		[Address(RVA = "0x1218FC4", Offset = "0x1218FC4", VA = "0x1218FC4")]
		public void OnValidate()
		{
		}

		[Token(Token = "0x6001F5C")]
		[Address(RVA = "0x121905C", Offset = "0x121905C", VA = "0x121905C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001F5D")]
		[Address(RVA = "0x121915C", Offset = "0x121915C", VA = "0x121915C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F5E")]
		[Address(RVA = "0x12193A4", Offset = "0x12193A4", VA = "0x12193A4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F5F")]
		[Address(RVA = "0x121925C", Offset = "0x121925C", VA = "0x121925C")]
		private void AttachToCameraRendering()
		{
		}

		[Token(Token = "0x6001F60")]
		[Address(RVA = "0x1219418", Offset = "0x1219418", VA = "0x1219418")]
		private void DetachFromCameraRendering()
		{
		}

		[Token(Token = "0x6001F61")]
		[Address(RVA = "0x121951C", Offset = "0x121951C", VA = "0x121951C")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001F62")]
		[Address(RVA = "0x1219574", Offset = "0x1219574", VA = "0x1219574")]
		private void UpdateVelocity()
		{
		}

		[Token(Token = "0x6001F63")]
		[Address(RVA = "0x12196E8", Offset = "0x12196E8", VA = "0x12196E8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6001F64")]
		[Address(RVA = "0x1219758", Offset = "0x1219758", VA = "0x1219758")]
		private void EmissionStep(float time)
		{
		}

		[Token(Token = "0x6001F65")]
		[Address(RVA = "0x1219060", Offset = "0x1219060", VA = "0x1219060")]
		private void Warmup()
		{
		}

		[Token(Token = "0x6001F66")]
		[Address(RVA = "0x1219F80", Offset = "0x1219F80", VA = "0x1219F80")]
		private void PhysicsStep(float timestep)
		{
		}

		[Token(Token = "0x6001F67")]
		[Address(RVA = "0x121A1D4", Offset = "0x121A1D4", VA = "0x121A1D4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001F68")]
		[Address(RVA = "0x1219D28", Offset = "0x1219D28", VA = "0x1219D28")]
		public void EmitPoint(Vector3 position)
		{
		}

		[Token(Token = "0x6001F69")]
		[Address(RVA = "0x12198B4", Offset = "0x12198B4", VA = "0x12198B4")]
		private void SnapLastPointToTransform()
		{
		}

		[Token(Token = "0x6001F6A")]
		[Address(RVA = "0x1219AE0", Offset = "0x1219AE0", VA = "0x1219AE0")]
		private void UpdatePointsLifecycle()
		{
		}

		[Token(Token = "0x6001F6B")]
		[Address(RVA = "0x121A270", Offset = "0x121A270", VA = "0x121A270")]
		private void ClearMeshData()
		{
		}

		[Token(Token = "0x6001F6C")]
		[Address(RVA = "0x121A340", Offset = "0x121A340", VA = "0x121A340")]
		private void CommitMeshData()
		{
		}

		[Token(Token = "0x6001F6D")]
		[Address(RVA = "0x121A3E0", Offset = "0x121A3E0", VA = "0x121A3E0")]
		private void RenderMesh(Camera cam)
		{
		}

		[Token(Token = "0x6001F6E")]
		[Address(RVA = "0x121A614", Offset = "0x121A614", VA = "0x121A614")]
		public float GetLenght(ElasticArray<Point> input)
		{
			return default(float);
		}

		[Token(Token = "0x6001F6F")]
		[Address(RVA = "0x121A750", Offset = "0x121A750", VA = "0x121A750")]
		private ElasticArray<Point> GetRenderablePoints(int start, int end)
		{
			return null;
		}

		[Token(Token = "0x6001F70")]
		[Address(RVA = "0x121BB8C", Offset = "0x121BB8C", VA = "0x121BB8C")]
		private CurveFrame InitializeCurveFrame(Vector3 point, Vector3 nextPoint)
		{
			return default(CurveFrame);
		}

		[Token(Token = "0x6001F71")]
		[Address(RVA = "0x121BE14", Offset = "0x121BE14", VA = "0x121BE14")]
		private void UpdateTrailMesh(Camera cam)
		{
		}

		[Token(Token = "0x6001F72")]
		[Address(RVA = "0x121C0DC", Offset = "0x121C0DC", VA = "0x121C0DC")]
		private void UpdateSegmentMesh(int start, int end, Vector3 localCamPosition)
		{
		}

		[Token(Token = "0x6001F73")]
		[Address(RVA = "0x121CC34", Offset = "0x121CC34", VA = "0x121CC34")]
		private void AppendSection(Point[] data, ref CurveFrame frame, int i, int count, float sectionThickness, float vCoord)
		{
		}

		[Token(Token = "0x6001F74")]
		[Address(RVA = "0x121D10C", Offset = "0x121D10C", VA = "0x121D10C")]
		private void AppendFlatTrail(Point[] data, ref CurveFrame frame, int i, int count, float sectionThickness, float vCoord, ref int va, ref int vb)
		{
		}

		[Token(Token = "0x6001F75")]
		[Address(RVA = "0x121E01C", Offset = "0x121E01C", VA = "0x121E01C")]
		public AraTrail()
		{
		}

		[Token(Token = "0x6001F76")]
		[Address(RVA = "0x121E490", Offset = "0x121E490", VA = "0x121E490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCD3CB0", Offset = "0xCD3CB0")]
		private void <AttachToCameraRendering>b__80_0(ScriptableRenderContext cntxt, Camera cam)
		{
		}
	}
	[Token(Token = "0x200051D")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0xCBECE0", Offset = "0xCBECE0")]
	public class ElasticArray<T> : IList<T>, ICollection<T>, IEnumerable<T>, IEnumerable
	{
		[Token(Token = "0x20006A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0xCBFB1C", Offset = "0xCBFB1C")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<T>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <>1__state;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private T <>2__current;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ElasticArray<T> <>4__this;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private int <i>5__2;

			[Token(Token = "0x170003F5")]
			private T System.Collections.Generic.IEnumerator<T>.Current
			{
				[Token(Token = "0x6002508")]
				[DebuggerHidden]
				get
				{
					return (T)null;
				}
			}

			[Token(Token = "0x170003F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x600250A")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6002505")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6002506")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6002507")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6002509")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40019A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T[] data;

		[Token(Token = "0x40019A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int count;

		[Token(Token = "0x17000317")]
		public int Count
		{
			[Token(Token = "0x6001F7E")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000318")]
		public bool IsReadOnly
		{
			[Token(Token = "0x6001F7F")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000319")]
		public T Item
		{
			[Token(Token = "0x6001F83")]
			get
			{
				return (T)null;
			}
			[Token(Token = "0x6001F84")]
			set
			{
			}
		}

		[Token(Token = "0x1700031A")]
		public T[] Data
		{
			[Token(Token = "0x6001F85")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001F77")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0xCD3CC0", Offset = "0xCD3CC0")]
		public IEnumerator<T> GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001F78")]
		private IEnumerator System.Collections.IEnumerable.GetEnumerator()
		{
			return null;
		}

		[Token(Token = "0x6001F79")]
		public void Add(T item)
		{
		}

		[Token(Token = "0x6001F7A")]
		public void Clear()
		{
		}

		[Token(Token = "0x6001F7B")]
		public bool Contains(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F7C")]
		public void CopyTo(T[] array, int arrayIndex)
		{
		}

		[Token(Token = "0x6001F7D")]
		public bool Remove(T item)
		{
			return default(bool);
		}

		[Token(Token = "0x6001F80")]
		public int IndexOf(T item)
		{
			return default(int);
		}

		[Token(Token = "0x6001F81")]
		public void Insert(int index, T item)
		{
		}

		[Token(Token = "0x6001F82")]
		public void RemoveAt(int index)
		{
		}

		[Token(Token = "0x6001F86")]
		public void SetCount(int count)
		{
		}

		[Token(Token = "0x6001F87")]
		public void EnsureCapacity(int capacity)
		{
		}

		[Token(Token = "0x6001F88")]
		public void Reverse()
		{
		}

		[Token(Token = "0x6001F89")]
		public ElasticArray()
		{
		}
	}
	[Token(Token = "0x200051E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBED18", Offset = "0xCBED18")]
	public class ColorFromSpeed : MonoBehaviour
	{
		[Token(Token = "0x40019AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x40019AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDEF8", Offset = "0xCCDEF8")]
		public Gradient colorFromSpeed;

		[Token(Token = "0x40019AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDF30", Offset = "0xCCDF30")]
		public float minSpeed;

		[Token(Token = "0x40019AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0xCCDF68", Offset = "0xCCDF68")]
		public float maxSpeed;

		[Token(Token = "0x6001F8A")]
		[Address(RVA = "0x121E878", Offset = "0x121E878", VA = "0x121E878")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F8B")]
		[Address(RVA = "0x121E924", Offset = "0x121E924", VA = "0x121E924")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F8C")]
		[Address(RVA = "0x121E9AC", Offset = "0x121E9AC", VA = "0x121E9AC")]
		private void SetColorFromSpeed()
		{
		}

		[Token(Token = "0x6001F8D")]
		[Address(RVA = "0x121EB44", Offset = "0x121EB44", VA = "0x121EB44")]
		public ColorFromSpeed()
		{
		}
	}
	[Token(Token = "0x200051F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBED7C", Offset = "0xCBED7C")]
	public class ElectricalArc : MonoBehaviour
	{
		[Token(Token = "0x40019AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x40019AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform source;

		[Token(Token = "0x40019B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x40019B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int points;

		[Token(Token = "0x40019B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float burstInterval;

		[Token(Token = "0x40019B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float burstRandom;

		[Token(Token = "0x40019B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float speedRandom;

		[Token(Token = "0x40019B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float positionRandom;

		[Token(Token = "0x40019B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float accum;

		[Token(Token = "0x6001F8E")]
		[Address(RVA = "0x121EBC0", Offset = "0x121EBC0", VA = "0x121EBC0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F8F")]
		[Address(RVA = "0x121EC34", Offset = "0x121EC34", VA = "0x121EC34")]
		private void Update()
		{
		}

		[Token(Token = "0x6001F90")]
		[Address(RVA = "0x121EC9C", Offset = "0x121EC9C", VA = "0x121EC9C")]
		private void ChangeArc()
		{
		}

		[Token(Token = "0x6001F91")]
		[Address(RVA = "0x121EFE4", Offset = "0x121EFE4", VA = "0x121EFE4")]
		public ElectricalArc()
		{
		}
	}
	[Token(Token = "0x2000520")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0xCBEDE0", Offset = "0xCBEDE0")]
	public class TireTrack : MonoBehaviour
	{
		[Token(Token = "0x40019B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private AraTrail trail;

		[Token(Token = "0x40019B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float offset;

		[Token(Token = "0x40019B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxDist;

		[Token(Token = "0x6001F92")]
		[Address(RVA = "0x121F000", Offset = "0x121F000", VA = "0x121F000")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001F93")]
		[Address(RVA = "0x121F0AC", Offset = "0x121F0AC", VA = "0x121F0AC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001F94")]
		[Address(RVA = "0x121F134", Offset = "0x121F134", VA = "0x121F134")]
		private void ProjectToGround()
		{
		}

		[Token(Token = "0x6001F95")]
		[Address(RVA = "0x121F448", Offset = "0x121F448", VA = "0x121F448")]
		public TireTrack()
		{
		}
	}
	[Token(Token = "0x2000521")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0xCBEE44", Offset = "0xCBEE44")]
	public class TrailSection : ScriptableObject
	{
		[Token(Token = "0x40019BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<Vector2> vertices;

		[Token(Token = "0x40019BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int snapX;

		[Token(Token = "0x40019BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int snapY;

		[Token(Token = "0x1700031B")]
		public int Segments
		{
			[Token(Token = "0x6001F96")]
			[Address(RVA = "0x121DFC8", Offset = "0x121DFC8", VA = "0x121DFC8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001F97")]
		[Address(RVA = "0x121F45C", Offset = "0x121F45C", VA = "0x121F45C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001F98")]
		[Address(RVA = "0x121F4FC", Offset = "0x121F4FC", VA = "0x121F4FC")]
		public void CirclePreset(int segments)
		{
		}

		[Token(Token = "0x6001F99")]
		[Address(RVA = "0x121F68C", Offset = "0x121F68C", VA = "0x121F68C")]
		public static int SnapTo(float val, int snapInterval, int threshold)
		{
			return default(int);
		}

		[Token(Token = "0x6001F9A")]
		[Address(RVA = "0x121F748", Offset = "0x121F748", VA = "0x121F748")]
		public TrailSection()
		{
		}
	}
}
