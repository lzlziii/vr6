using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using ES3Internal;
using ES3Types;
using HutongGames.PlayMaker;
using Il2CppDummyDll;
using RootMotion.Dynamics;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityStandardAssets.Utility;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4EF698", Offset = "0x4EF698")]
internal sealed class <>f__AnonymousType0<<assembly>j__TPar, <type>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x4F8460", Offset = "0x4F8460")]
	private readonly <assembly>j__TPar <assembly>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x4F8474", Offset = "0x4F8474")]
	private readonly <type>j__TPar <type>i__Field;

	[Token(Token = "0x17000001")]
	public <assembly>j__TPar assembly
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<assembly>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <type>j__TPar type
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<type>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<assembly>j__TPar assembly, <type>j__TPar type)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
public class FsmES3File : ScriptableObject
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public ES3File file;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0x178B4A0", Offset = "0x178B4A0", VA = "0x178B4A0")]
	public FsmES3File()
	{
	}
}
[Token(Token = "0x2000004")]
public class ES3AutoSave : MonoBehaviour
{
	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public bool saveChildren;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
	private bool isQuitting;

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xF6DECC", Offset = "0xF6DECC", VA = "0xF6DECC")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000009")]
	[Address(RVA = "0xF6E064", Offset = "0xF6E064", VA = "0xF6E064")]
	public void OnApplicationQuit()
	{
	}

	[Token(Token = "0x600000A")]
	[Address(RVA = "0xF6E070", Offset = "0xF6E070", VA = "0xF6E070")]
	public void OnDestroy()
	{
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xF6E210", Offset = "0xF6E210", VA = "0xF6E210")]
	public ES3AutoSave()
	{
	}
}
[Token(Token = "0x2000005")]
public class ES3AutoSaveMgr : MonoBehaviour, ISerializationCallbackReceiver
{
	[Token(Token = "0x20001E2")]
	public enum LoadEvent
	{
		[Token(Token = "0x4000952")]
		None,
		[Token(Token = "0x4000953")]
		Awake,
		[Token(Token = "0x4000954")]
		Start
	}

	[Token(Token = "0x20001E3")]
	public enum SaveEvent
	{
		[Token(Token = "0x4000956")]
		None,
		[Token(Token = "0x4000957")]
		OnApplicationQuit,
		[Token(Token = "0x4000958")]
		OnApplicationPause
	}

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ES3AutoSaveMgr _instance;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string key;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public SaveEvent saveEvent;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public LoadEvent loadEvent;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ES3SerializableSettings settings;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public List<ES3AutoSave> autoSaves;

	[Token(Token = "0x17000003")]
	public static ES3AutoSaveMgr Instance
	{
		[Token(Token = "0x600000C")]
		[Address(RVA = "0xF6E218", Offset = "0xF6E218", VA = "0xF6E218")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xF6E370", Offset = "0xF6E370", VA = "0xF6E370")]
	public void Save()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xF6E500", Offset = "0xF6E500", VA = "0xF6E500")]
	public void Load()
	{
	}

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xF6E5B4", Offset = "0xF6E5B4", VA = "0xF6E5B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xF6E5C4", Offset = "0xF6E5C4", VA = "0xF6E5C4")]
	public void Awake()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xF6E654", Offset = "0xF6E654", VA = "0xF6E654")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xF6E664", Offset = "0xF6E664", VA = "0xF6E664")]
	private void OnApplicationPause(bool paused)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xF6DF44", Offset = "0xF6DF44", VA = "0xF6DF44")]
	public static void AddAutoSave(ES3AutoSave autoSave)
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xF6E0F4", Offset = "0xF6E0F4", VA = "0xF6E0F4")]
	public static void RemoveAutoSave(ES3AutoSave autoSave)
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xF6E6BC", Offset = "0xF6E6BC", VA = "0xF6E6BC", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xF6E6C0", Offset = "0xF6E6C0", VA = "0xF6E6C0", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xF6E6C4", Offset = "0xF6E6C4", VA = "0xF6E6C4")]
	public ES3AutoSaveMgr()
	{
	}
}
[Token(Token = "0x2000006")]
public static class ES3
{
	[Token(Token = "0x20001E4")]
	public enum Location
	{
		[Token(Token = "0x400095A")]
		File,
		[Token(Token = "0x400095B")]
		PlayerPrefs,
		[Token(Token = "0x400095C")]
		Memory,
		[Token(Token = "0x400095D")]
		Resources
	}

	[Token(Token = "0x20001E5")]
	public enum Directory
	{
		[Token(Token = "0x400095F")]
		PersistentDataPath,
		[Token(Token = "0x4000960")]
		DataPath
	}

	[Token(Token = "0x20001E6")]
	public enum EncryptionType
	{
		[Token(Token = "0x4000962")]
		None,
		[Token(Token = "0x4000963")]
		AES
	}

	[Token(Token = "0x20001E7")]
	public enum Format
	{
		[Token(Token = "0x4000965")]
		JSON
	}

	[Token(Token = "0x20001E8")]
	public enum ReferenceMode
	{
		[Token(Token = "0x4000967")]
		ByRef,
		[Token(Token = "0x4000968")]
		ByValue,
		[Token(Token = "0x4000969")]
		ByRefAndValue
	}

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string backupFileSuffix;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static string temporaryFileSuffix;

	[Token(Token = "0x6000019")]
	public static void Save<T>(string key, object value)
	{
	}

	[Token(Token = "0x600001A")]
	public static void Save<T>(string key, object value, ES3Settings settings)
	{
	}

	[Token(Token = "0x600001B")]
	public static void Save<T>(string key, object value, string filePath)
	{
	}

	[Token(Token = "0x600001C")]
	public static void Save<T>(string key, object value, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xF684B4", Offset = "0xF684B4", VA = "0xF684B4")]
	public static void SaveRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xF686A8", Offset = "0xF686A8", VA = "0xF686A8")]
	public static void SaveRaw(byte[] bytes, string filePath)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xF6874C", Offset = "0xF6874C", VA = "0xF6874C")]
	public static void SaveRaw(byte[] bytes, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xF68550", Offset = "0xF68550", VA = "0xF68550")]
	public static void SaveRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xF68DE8", Offset = "0xF68DE8", VA = "0xF68DE8")]
	public static void SaveRaw(string str)
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xF68F3C", Offset = "0xF68F3C", VA = "0xF68F3C")]
	public static void SaveRaw(string str, string filePath)
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xF68FE0", Offset = "0xF68FE0", VA = "0xF68FE0")]
	public static void SaveRaw(string str, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xF68E84", Offset = "0xF68E84", VA = "0xF68E84")]
	public static void SaveRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xF6908C", Offset = "0xF6908C", VA = "0xF6908C")]
	public static void AppendRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xF692CC", Offset = "0xF692CC", VA = "0xF692CC")]
	public static void AppendRaw(byte[] bytes, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xF69128", Offset = "0xF69128", VA = "0xF69128")]
	public static void AppendRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xF69378", Offset = "0xF69378", VA = "0xF69378")]
	public static void AppendRaw(string str)
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xF695E4", Offset = "0xF695E4", VA = "0xF695E4")]
	public static void AppendRaw(string str, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xF69414", Offset = "0xF69414", VA = "0xF69414")]
	public static void AppendRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xF69690", Offset = "0xF69690", VA = "0xF69690")]
	public static void SaveImage(Texture2D texture, string imagePath)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xF698FC", Offset = "0xF698FC", VA = "0xF698FC")]
	public static void SaveImage(Texture2D texture, string imagePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xF69734", Offset = "0xF69734", VA = "0xF69734")]
	public static void SaveImage(Texture2D texture, ES3Settings settings)
	{
	}

	[Token(Token = "0x600002E")]
	public static T Load<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x600002F")]
	public static T Load<T>(string key, string filePath)
	{
		return (T)null;
	}

	[Token(Token = "0x6000030")]
	public static T Load<T>(string key, string filePath, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000031")]
	public static T Load<T>(string key, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000032")]
	public static T Load<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000033")]
	public static T Load<T>(string key, string filePath, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000034")]
	public static T Load<T>(string key, string filePath, T defaultValue, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000035")]
	public static T Load<T>(string key, T defaultValue, ES3Settings settings)
	{
		return (T)null;
	}

	[Token(Token = "0x6000036")]
	public static void LoadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x6000037")]
	public static void LoadInto<T>(string key, string filePath, T obj) where T : class
	{
	}

	[Token(Token = "0x6000038")]
	public static void LoadInto<T>(string key, string filePath, T obj, ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x6000039")]
	public static void LoadInto<T>(string key, T obj, ES3Settings settings) where T : class
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xF69A24", Offset = "0xF69A24", VA = "0xF69A24")]
	public static byte[] LoadRawBytes()
	{
		return null;
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xF69C74", Offset = "0xF69C74", VA = "0xF69C74")]
	public static byte[] LoadRawBytes(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xF69D10", Offset = "0xF69D10", VA = "0xF69D10")]
	public static byte[] LoadRawBytes(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xF69AB8", Offset = "0xF69AB8", VA = "0xF69AB8")]
	public static byte[] LoadRawBytes(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xF69DB4", Offset = "0xF69DB4", VA = "0xF69DB4")]
	public static string LoadRawString()
	{
		return null;
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xF69F18", Offset = "0xF69F18", VA = "0xF69F18")]
	public static string LoadRawString(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xF69FB4", Offset = "0xF69FB4", VA = "0xF69FB4")]
	public static string LoadRawString(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xF69E48", Offset = "0xF69E48", VA = "0xF69E48")]
	public static string LoadRawString(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xF6A058", Offset = "0xF6A058", VA = "0xF6A058")]
	public static Texture2D LoadImage(string imagePath)
	{
		return null;
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xF6A170", Offset = "0xF6A170", VA = "0xF6A170")]
	public static Texture2D LoadImage(string imagePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xF6A0F4", Offset = "0xF6A0F4", VA = "0xF6A0F4")]
	public static Texture2D LoadImage(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xF6A214", Offset = "0xF6A214", VA = "0xF6A214")]
	public static Texture2D LoadImage(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xF6A294", Offset = "0xF6A294", VA = "0xF6A294")]
	public static AudioClip LoadAudio(string audioFilePath, AudioType audioType)
	{
		return null;
	}

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xF6A338", Offset = "0xF6A338", VA = "0xF6A338")]
	public static AudioClip LoadAudio(string audioFilePath, AudioType audioType, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xF6A71C", Offset = "0xF6A71C", VA = "0xF6A71C")]
	public static void DeleteFile()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xF6A90C", Offset = "0xF6A90C", VA = "0xF6A90C")]
	public static void DeleteFile(string filePath)
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xF6A9A8", Offset = "0xF6A9A8", VA = "0xF6A9A8")]
	public static void DeleteFile(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xF6A7B0", Offset = "0xF6A7B0", VA = "0xF6A7B0")]
	public static void DeleteFile(ES3Settings settings)
	{
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xF6AA78", Offset = "0xF6AA78", VA = "0xF6AA78")]
	public static void CopyFile(string oldFilePath, string newFilePath)
	{
	}

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xF6AD28", Offset = "0xF6AD28", VA = "0xF6AD28")]
	public static void CopyFile(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xF6AB34", Offset = "0xF6AB34", VA = "0xF6AB34")]
	public static void CopyFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xF6AE04", Offset = "0xF6AE04", VA = "0xF6AE04")]
	public static void RenameFile(string oldFilePath, string newFilePath)
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xF6B0F4", Offset = "0xF6B0F4", VA = "0xF6B0F4")]
	public static void RenameFile(string oldFilePath, string newFilePath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xF6AEC0", Offset = "0xF6AEC0", VA = "0xF6AEC0")]
	public static void RenameFile(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xF6B1C8", Offset = "0xF6B1C8", VA = "0xF6B1C8")]
	public static void RenameDirectory(string oldDirectoryPath, string newDirectoryPath)
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xF6B434", Offset = "0xF6B434", VA = "0xF6B434")]
	public static void RenameDirectory(string oldDirectoryPath, string newDirectoryPath, ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xF6B284", Offset = "0xF6B284", VA = "0xF6B284")]
	public static void RenameDirectory(ES3Settings oldSettings, ES3Settings newSettings)
	{
	}

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xF6B540", Offset = "0xF6B540", VA = "0xF6B540")]
	public static void DeleteDirectory(string directoryPath)
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xF6B718", Offset = "0xF6B718", VA = "0xF6B718")]
	public static void DeleteDirectory(string directoryPath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xF6B5DC", Offset = "0xF6B5DC", VA = "0xF6B5DC")]
	public static void DeleteDirectory(ES3Settings settings)
	{
	}

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xF6B7BC", Offset = "0xF6B7BC", VA = "0xF6B7BC")]
	public static void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xF6BA50", Offset = "0xF6BA50", VA = "0xF6BA50")]
	public static void DeleteKey(string key, string filePath)
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xF6BAF4", Offset = "0xF6BAF4", VA = "0xF6BAF4")]
	public static void DeleteKey(string key, string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xF6B858", Offset = "0xF6B858", VA = "0xF6B858")]
	public static void DeleteKey(string key, ES3Settings settings)
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xF6BCFC", Offset = "0xF6BCFC", VA = "0xF6BCFC")]
	public static bool KeyExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xF6BECC", Offset = "0xF6BECC", VA = "0xF6BECC")]
	public static bool KeyExists(string key, string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xF6BF70", Offset = "0xF6BF70", VA = "0xF6BF70")]
	public static bool KeyExists(string key, string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xF6BD98", Offset = "0xF6BD98", VA = "0xF6BD98")]
	public static bool KeyExists(string key, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xF6C0C8", Offset = "0xF6C0C8", VA = "0xF6C0C8")]
	public static bool FileExists()
	{
		return default(bool);
	}

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xF6C15C", Offset = "0xF6C15C", VA = "0xF6C15C")]
	public static bool FileExists(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xF6C1F8", Offset = "0xF6C1F8", VA = "0xF6C1F8")]
	public static bool FileExists(string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xF6BBA0", Offset = "0xF6BBA0", VA = "0xF6BBA0")]
	public static bool FileExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xF6C29C", Offset = "0xF6C29C", VA = "0xF6C29C")]
	public static bool DirectoryExists(string folderPath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xF6C47C", Offset = "0xF6C47C", VA = "0xF6C47C")]
	public static bool DirectoryExists(string folderPath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xF6C338", Offset = "0xF6C338", VA = "0xF6C338")]
	public static bool DirectoryExists(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xF6C520", Offset = "0xF6C520", VA = "0xF6C520")]
	public static string[] GetKeys()
	{
		return null;
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xF6C9C4", Offset = "0xF6C9C4", VA = "0xF6C9C4")]
	public static string[] GetKeys(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xF6CA60", Offset = "0xF6CA60", VA = "0xF6CA60")]
	public static string[] GetKeys(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xF6C5B4", Offset = "0xF6C5B4", VA = "0xF6C5B4")]
	public static string[] GetKeys(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xF6CB04", Offset = "0xF6CB04", VA = "0xF6CB04")]
	public static string[] GetFiles()
	{
		return null;
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xF6CC6C", Offset = "0xF6CC6C", VA = "0xF6CC6C")]
	public static string[] GetFiles(string directoryPath)
	{
		return null;
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xF6CD08", Offset = "0xF6CD08", VA = "0xF6CD08")]
	public static string[] GetFiles(string directoryPath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xF6CB98", Offset = "0xF6CB98", VA = "0xF6CB98")]
	public static string[] GetFiles(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xF6CED4", Offset = "0xF6CED4", VA = "0xF6CED4")]
	public static string[] GetDirectories()
	{
		return null;
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xF6D03C", Offset = "0xF6D03C", VA = "0xF6D03C")]
	public static string[] GetDirectories(string directoryPath)
	{
		return null;
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xF6D0D8", Offset = "0xF6D0D8", VA = "0xF6D0D8")]
	public static string[] GetDirectories(string directoryPath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xF6CF68", Offset = "0xF6CF68", VA = "0xF6CF68")]
	public static string[] GetDirectories(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000073")]
	[Address(RVA = "0xF6D304", Offset = "0xF6D304", VA = "0xF6D304")]
	public static void CreateBackup()
	{
	}

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xF6D468", Offset = "0xF6D468", VA = "0xF6D468")]
	public static void CreateBackup(string filePath)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xF6D504", Offset = "0xF6D504", VA = "0xF6D504")]
	public static void CreateBackup(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xF6D398", Offset = "0xF6D398", VA = "0xF6D398")]
	public static void CreateBackup(ES3Settings settings)
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xF6D5A8", Offset = "0xF6D5A8", VA = "0xF6D5A8")]
	public static bool RestoreBackup(string filePath)
	{
		return default(bool);
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xF6D750", Offset = "0xF6D750", VA = "0xF6D750")]
	public static bool RestoreBackup(string filePath, ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xF6D644", Offset = "0xF6D644", VA = "0xF6D644")]
	public static bool RestoreBackup(ES3Settings settings)
	{
		return default(bool);
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xF6D7F4", Offset = "0xF6D7F4", VA = "0xF6D7F4")]
	public static DateTime GetTimestamp()
	{
		return default(DateTime);
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xF6DA0C", Offset = "0xF6DA0C", VA = "0xF6DA0C")]
	public static DateTime GetTimestamp(string filePath)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xF6DAB0", Offset = "0xF6DAB0", VA = "0xF6DAB0")]
	public static DateTime GetTimestamp(string filePath, ES3Settings settings)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xF6D890", Offset = "0xF6D890", VA = "0xF6D890")]
	public static DateTime GetTimestamp(ES3Settings settings)
	{
		return default(DateTime);
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xF6DC04", Offset = "0xF6DC04", VA = "0xF6DC04")]
	public static void Init()
	{
	}
}
[Token(Token = "0x2000007")]
public class ES3File
{
	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ES3Settings settings;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private Dictionary<string, ES3Data> cache;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private bool syncWithFile;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xF73E4C", Offset = "0xF73E4C", VA = "0xF73E4C")]
	public ES3File()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xF7434C", Offset = "0xF7434C", VA = "0xF7434C")]
	public ES3File(string filePath)
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xF743C8", Offset = "0xF743C8", VA = "0xF743C8")]
	public ES3File(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xF7444C", Offset = "0xF7444C", VA = "0xF7444C")]
	public ES3File(ES3Settings settings)
	{
	}

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xF74454", Offset = "0xF74454", VA = "0xF74454")]
	public ES3File(bool syncWithFile)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xF744CC", Offset = "0xF744CC", VA = "0xF744CC")]
	public ES3File(string filePath, bool syncWithFile)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xF7454C", Offset = "0xF7454C", VA = "0xF7454C")]
	public ES3File(string filePath, ES3Settings settings, bool syncWithFile)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xF73EC0", Offset = "0xF73EC0", VA = "0xF73EC0")]
	public ES3File(ES3Settings settings, bool syncWithFile)
	{
	}

	[Token(Token = "0x6000088")]
	[Address(RVA = "0xF745D4", Offset = "0xF745D4", VA = "0xF745D4")]
	public ES3File(byte[] bytes)
	{
	}

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xF7464C", Offset = "0xF7464C", VA = "0xF7464C")]
	public ES3File(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xF74B38", Offset = "0xF74B38", VA = "0xF74B38")]
	public void Sync()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xF74EAC", Offset = "0xF74EAC", VA = "0xF74EAC")]
	public void Sync(string filePath)
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xF74F24", Offset = "0xF74F24", VA = "0xF74F24")]
	public void Sync(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xF74B40", Offset = "0xF74B40", VA = "0xF74B40")]
	public void Sync(ES3Settings settings)
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xF724F4", Offset = "0xF724F4", VA = "0xF724F4")]
	public void Clear()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xF74FA4", Offset = "0xF74FA4", VA = "0xF74FA4")]
	public string[] GetKeys()
	{
		return null;
	}

	[Token(Token = "0x6000090")]
	public void Save<T>(string key, object value)
	{
	}

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xF72560", Offset = "0xF72560", VA = "0xF72560")]
	public void SaveRaw(byte[] bytes)
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xF746EC", Offset = "0xF746EC", VA = "0xF746EC")]
	public void SaveRaw(byte[] bytes, ES3Settings settings)
	{
	}

	[Token(Token = "0x6000093")]
	public T Load<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x6000094")]
	public T Load<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x6000095")]
	public void LoadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xF6F5B0", Offset = "0xF6F5B0", VA = "0xF6F5B0")]
	public byte[] LoadRawBytes()
	{
		return null;
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xF752BC", Offset = "0xF752BC", VA = "0xF752BC")]
	public string LoadRawString()
	{
		return null;
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xF75388", Offset = "0xF75388", VA = "0xF75388")]
	public void DeleteKey(string key)
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xF753FC", Offset = "0xF753FC", VA = "0xF753FC")]
	public bool KeyExists(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xF75470", Offset = "0xF75470", VA = "0xF75470")]
	public int Size()
	{
		return default(int);
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xF755A8", Offset = "0xF755A8", VA = "0xF755A8")]
	public Type GetKeyType(string key)
	{
		return null;
	}
}
[Token(Token = "0x2000008")]
public class ES3InspectorInfo : MonoBehaviour
{
	[Token(Token = "0x600009C")]
	[Address(RVA = "0xF756C0", Offset = "0xF756C0", VA = "0xF756C0")]
	public ES3InspectorInfo()
	{
	}
}
[Token(Token = "0x2000009")]
public class ES3ReferenceMgr : ES3ReferenceMgrBase, ISerializationCallbackReceiver
{
	[Token(Token = "0x600009D")]
	[Address(RVA = "0x1C62BA0", Offset = "0x1C62BA0", VA = "0x1C62BA0", Slot = "4")]
	public void OnBeforeSerialize()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0x1C62BA4", Offset = "0x1C62BA4", VA = "0x1C62BA4", Slot = "5")]
	public void OnAfterDeserialize()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0x1C62BA8", Offset = "0x1C62BA8", VA = "0x1C62BA8")]
	public ES3ReferenceMgr()
	{
	}
}
[Token(Token = "0x200000A")]
public class ES3Spreadsheet
{
	[Token(Token = "0x20001E9")]
	protected struct Index
	{
		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int col;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public int row;

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0x6E3DC4", Offset = "0x6E3DC4", VA = "0x6E3DC4")]
		public Index(int col, int row)
		{
		}
	}

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private int cols;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private int rows;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Dictionary<Index, string> cells;

	[Token(Token = "0x4000014")]
	private const string QUOTE = "\"";

	[Token(Token = "0x4000015")]
	private const char QUOTE_CHAR = '"';

	[Token(Token = "0x4000016")]
	private const char COMMA_CHAR = ',';

	[Token(Token = "0x4000017")]
	private const char NEWLINE_CHAR = '\n';

	[Token(Token = "0x4000018")]
	private const string ESCAPED_QUOTE = "\"\"";

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static char[] CHARS_TO_ESCAPE;

	[Token(Token = "0x17000004")]
	public int ColumnCount
	{
		[Token(Token = "0x60000A0")]
		[Address(RVA = "0x1C63630", Offset = "0x1C63630", VA = "0x1C63630")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x17000005")]
	public int RowCount
	{
		[Token(Token = "0x60000A1")]
		[Address(RVA = "0x1C63638", Offset = "0x1C63638", VA = "0x1C63638")]
		get
		{
			return default(int);
		}
	}

	[Token(Token = "0x60000A2")]
	public void SetCell<T>(int col, int row, object value)
	{
	}

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0x1C63640", Offset = "0x1C63640", VA = "0x1C63640")]
	private void SetCell(int col, int row, string value)
	{
	}

	[Token(Token = "0x60000A4")]
	public T GetCell<T>(int col, int row)
	{
		return (T)null;
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0x1C636F8", Offset = "0x1C636F8", VA = "0x1C636F8")]
	public void Load(string filePath)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0x1C637A8", Offset = "0x1C637A8", VA = "0x1C637A8")]
	public void Load(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0x1C6377C", Offset = "0x1C6377C", VA = "0x1C6377C")]
	public void Load(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0x1C63AC4", Offset = "0x1C63AC4", VA = "0x1C63AC4")]
	public void LoadRaw(string str)
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0x1C63B9C", Offset = "0x1C63B9C", VA = "0x1C63B9C")]
	public void LoadRaw(string str, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0x1C63834", Offset = "0x1C63834", VA = "0x1C63834")]
	private void Load(Stream stream, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0x1C63C50", Offset = "0x1C63C50", VA = "0x1C63C50")]
	public void Save(string filePath)
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0x1C6402C", Offset = "0x1C6402C", VA = "0x1C6402C")]
	public void Save(string filePath, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0x1C640AC", Offset = "0x1C640AC", VA = "0x1C640AC")]
	public void Save(ES3Settings settings)
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0x1C640B4", Offset = "0x1C640B4", VA = "0x1C640B4")]
	public void Save(string filePath, bool append)
	{
	}

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x1C64130", Offset = "0x1C64130", VA = "0x1C64130")]
	public void Save(string filePath, ES3Settings settings, bool append)
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x1C63CC8", Offset = "0x1C63CC8", VA = "0x1C63CC8")]
	public void Save(ES3Settings settings, bool append)
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x1C64358", Offset = "0x1C64358", VA = "0x1C64358")]
	private static string Escape(string str, bool isAlreadyWrappedInQuotes = false)
	{
		return null;
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x1C64490", Offset = "0x1C64490", VA = "0x1C64490")]
	private static string Unescape(string str)
	{
		return null;
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x1C641B4", Offset = "0x1C641B4", VA = "0x1C641B4")]
	private string[,] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x1C645B8", Offset = "0x1C645B8", VA = "0x1C645B8")]
	public ES3Spreadsheet()
	{
	}
}
[Token(Token = "0x200000B")]
public abstract class ES3Reader : IDisposable
{
	[Token(Token = "0x20001EA")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4F8178", Offset = "0x4F8178")]
	public class ES3ReaderPropertyEnumerator
	{
		[Token(Token = "0x2000285")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8440", Offset = "0x4F8440")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ES3ReaderPropertyEnumerator <>4__this;

			[Token(Token = "0x1700010E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E9D")]
				[Address(RVA = "0x1C62820", Offset = "0x1C62820", VA = "0x1C62820", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E9F")]
				[Address(RVA = "0x1C628A0", Offset = "0x1C628A0", VA = "0x1C628A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E9A")]
			[Address(RVA = "0x1C62730", Offset = "0x1C62730", VA = "0x1C62730")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000E9B")]
			[Address(RVA = "0x1C62750", Offset = "0x1C62750", VA = "0x1C62750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E9C")]
			[Address(RVA = "0x1C62754", Offset = "0x1C62754", VA = "0x1C62754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E9E")]
			[Address(RVA = "0x1C62828", Offset = "0x1C62828", VA = "0x1C62828", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ES3Reader reader;

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0x1C62690", Offset = "0x1C62690", VA = "0x1C62690")]
		public ES3ReaderPropertyEnumerator(ES3Reader reader)
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0x1C626B0", Offset = "0x1C626B0", VA = "0x1C626B0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x501A50", Offset = "0x501A50")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x20001EB")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4F818C", Offset = "0x4F818C")]
	public class ES3ReaderRawEnumerator
	{
		[Token(Token = "0x2000286")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8450", Offset = "0x4F8450")]
		private sealed class <GetEnumerator>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ES3ReaderRawEnumerator <>4__this;

			[Token(Token = "0x17000110")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000EA3")]
				[Address(RVA = "0x1C62B18", Offset = "0x1C62B18", VA = "0x1C62B18", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000111")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000EA5")]
				[Address(RVA = "0x1C62B98", Offset = "0x1C62B98", VA = "0x1C62B98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000EA0")]
			[Address(RVA = "0x1C62948", Offset = "0x1C62948", VA = "0x1C62948")]
			[DebuggerHidden]
			public <GetEnumerator>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000EA1")]
			[Address(RVA = "0x1C62968", Offset = "0x1C62968", VA = "0x1C62968", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000EA2")]
			[Address(RVA = "0x1C6296C", Offset = "0x1C6296C", VA = "0x1C6296C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000EA4")]
			[Address(RVA = "0x1C62B20", Offset = "0x1C62B20", VA = "0x1C62B20", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ES3Reader reader;

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0x1C628A8", Offset = "0x1C628A8", VA = "0x1C628A8")]
		public ES3ReaderRawEnumerator(ES3Reader reader)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0x1C628C8", Offset = "0x1C628C8", VA = "0x1C628C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x501AC0", Offset = "0x501AC0")]
		public IEnumerator GetEnumerator()
		{
			return null;
		}
	}

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ES3Settings settings;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	internal string overridePropertiesName;

	[Token(Token = "0x17000006")]
	public virtual ES3ReaderPropertyEnumerator Properties
	{
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xF85D54", Offset = "0xF85D54", VA = "0xF85D54", Slot = "38")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000007")]
	internal virtual ES3ReaderRawEnumerator RawEnumerator
	{
		[Token(Token = "0x60000D9")]
		[Address(RVA = "0xF85DC0", Offset = "0xF85DC0", VA = "0xF85DC0", Slot = "39")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000B6")]
	internal abstract int Read_int();

	[Token(Token = "0x60000B7")]
	internal abstract float Read_float();

	[Token(Token = "0x60000B8")]
	internal abstract bool Read_bool();

	[Token(Token = "0x60000B9")]
	internal abstract char Read_char();

	[Token(Token = "0x60000BA")]
	internal abstract decimal Read_decimal();

	[Token(Token = "0x60000BB")]
	internal abstract double Read_double();

	[Token(Token = "0x60000BC")]
	internal abstract long Read_long();

	[Token(Token = "0x60000BD")]
	internal abstract ulong Read_ulong();

	[Token(Token = "0x60000BE")]
	internal abstract byte Read_byte();

	[Token(Token = "0x60000BF")]
	internal abstract sbyte Read_sbyte();

	[Token(Token = "0x60000C0")]
	internal abstract short Read_short();

	[Token(Token = "0x60000C1")]
	internal abstract ushort Read_ushort();

	[Token(Token = "0x60000C2")]
	internal abstract uint Read_uint();

	[Token(Token = "0x60000C3")]
	internal abstract string Read_string();

	[Token(Token = "0x60000C4")]
	internal abstract byte[] Read_byteArray();

	[Token(Token = "0x60000C5")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FF7EC", Offset = "0x4FF7EC")]
	public abstract string ReadPropertyName();

	[Token(Token = "0x60000C6")]
	protected abstract Type ReadKeyPrefix(bool ignore = false);

	[Token(Token = "0x60000C7")]
	protected abstract void ReadKeySuffix();

	[Token(Token = "0x60000C8")]
	internal abstract byte[] ReadElement(bool skip = false);

	[Token(Token = "0x60000C9")]
	internal abstract bool Goto(string key);

	[Token(Token = "0x60000CA")]
	public abstract void Dispose();

	[Token(Token = "0x60000CB")]
	internal abstract bool StartReadObject();

	[Token(Token = "0x60000CC")]
	internal abstract void EndReadObject();

	[Token(Token = "0x60000CD")]
	internal abstract bool StartReadDictionary();

	[Token(Token = "0x60000CE")]
	internal abstract void EndReadDictionary();

	[Token(Token = "0x60000CF")]
	internal abstract bool StartReadDictionaryKey();

	[Token(Token = "0x60000D0")]
	internal abstract void EndReadDictionaryKey();

	[Token(Token = "0x60000D1")]
	internal abstract void StartReadDictionaryValue();

	[Token(Token = "0x60000D2")]
	internal abstract bool EndReadDictionaryValue();

	[Token(Token = "0x60000D3")]
	internal abstract bool StartReadCollection();

	[Token(Token = "0x60000D4")]
	internal abstract void EndReadCollection();

	[Token(Token = "0x60000D5")]
	internal abstract bool StartReadCollectionItem();

	[Token(Token = "0x60000D6")]
	internal abstract bool EndReadCollectionItem();

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xF76A70", Offset = "0xF76A70", VA = "0xF76A70")]
	internal ES3Reader(ES3Settings settings, bool readHeaderAndFooter = true)
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xF85E2C", Offset = "0xF85E2C", VA = "0xF85E2C", Slot = "40")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FF800", Offset = "0x4FF800")]
	public virtual void Skip()
	{
	}

	[Token(Token = "0x60000DB")]
	public virtual T Read<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x60000DC")]
	public virtual void ReadInto<T>(object obj)
	{
	}

	[Token(Token = "0x60000DD")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FF814", Offset = "0x4FF814")]
	public T ReadProperty<T>()
	{
		return (T)null;
	}

	[Token(Token = "0x60000DE")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FF828", Offset = "0x4FF828")]
	public T ReadProperty<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xF85E40", Offset = "0xF85E40", VA = "0xF85E40")]
	internal Type ReadType()
	{
		return null;
	}

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xF85F4C", Offset = "0xF85F4C", VA = "0xF85F4C")]
	public void SetPrivateProperty(string name, object value, object objectContainingProperty)
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xF86154", Offset = "0xF86154", VA = "0xF86154")]
	public void SetPrivateField(string name, object value, object objectContainingField)
	{
	}

	[Token(Token = "0x60000E2")]
	public virtual T Read<T>(string key)
	{
		return (T)null;
	}

	[Token(Token = "0x60000E3")]
	public virtual T Read<T>(string key, T defaultValue)
	{
		return (T)null;
	}

	[Token(Token = "0x60000E4")]
	public virtual void ReadInto<T>(string key, T obj) where T : class
	{
	}

	[Token(Token = "0x60000E5")]
	protected virtual void ReadObject<T>(object obj, ES3Type type)
	{
	}

	[Token(Token = "0x60000E6")]
	protected virtual T ReadObject<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x60000E7")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FF83C", Offset = "0x4FF83C")]
	public virtual T Read<T>(ES3Type type)
	{
		return (T)null;
	}

	[Token(Token = "0x60000E8")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FF850", Offset = "0x4FF850")]
	public virtual void ReadInto<T>(object obj, ES3Type type)
	{
	}

	[Token(Token = "0x60000E9")]
	private Type ReadTypeFromHeader<T>()
	{
		return null;
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xF8635C", Offset = "0xF8635C", VA = "0xF8635C")]
	public static ES3Reader Create()
	{
		return null;
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xF863C4", Offset = "0xF863C4", VA = "0xF863C4")]
	public static ES3Reader Create(string filePath)
	{
		return null;
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xF86434", Offset = "0xF86434", VA = "0xF86434")]
	public static ES3Reader Create(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xF6C01C", Offset = "0xF6C01C", VA = "0xF6C01C")]
	public static ES3Reader Create(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xF864AC", Offset = "0xF864AC", VA = "0xF864AC")]
	public static ES3Reader Create(byte[] bytes)
	{
		return null;
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xF75084", Offset = "0xF75084", VA = "0xF75084")]
	public static ES3Reader Create(byte[] bytes, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xF8651C", Offset = "0xF8651C", VA = "0xF8651C")]
	internal static ES3Reader Create(Stream stream, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xF865C8", Offset = "0xF865C8", VA = "0xF865C8")]
	internal static ES3Reader Create(Stream stream, ES3Settings settings, bool readHeaderAndFooter)
	{
		return null;
	}
}
[Token(Token = "0x200000C")]
public class ES3Settings : ICloneable
{
	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ES3Settings _defaults;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	[SerializeField]
	private ES3.Location _location;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string path;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public ES3.EncryptionType encryptionType;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string encryptionPassword;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ES3.Directory directory;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public ES3.Format format;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int bufferSize;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public Encoding encoding;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4F8498", Offset = "0x4F8498")]
	public bool typeChecking;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4F84AC", Offset = "0x4F84AC")]
	public bool safeReflection;

	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4F84C0", Offset = "0x4F84C0")]
	public ES3.ReferenceMode memberReferenceMode;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4F84D4", Offset = "0x4F84D4")]
	public ES3.ReferenceMode referenceMode;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4F84E8", Offset = "0x4F84E8")]
	public string[] assemblyNames;

	[Token(Token = "0x17000008")]
	public ES3.Location location
	{
		[Token(Token = "0x60000F2")]
		[Address(RVA = "0x1C62D78", Offset = "0x1C62D78", VA = "0x1C62D78")]
		get
		{
			return default(ES3.Location);
		}
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0x1C62DAC", Offset = "0x1C62DAC", VA = "0x1C62DAC")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public string FullPath
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0x1C632C0", Offset = "0x1C632C0", VA = "0x1C632C0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0x1C62DB4", Offset = "0x1C62DB4", VA = "0x1C62DB4")]
	private void CopyInto(ES3Settings newSettings)
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0x1C62EE8", Offset = "0x1C62EE8", VA = "0x1C62EE8")]
	public ES3Settings()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0x1C63008", Offset = "0x1C63008", VA = "0x1C63008")]
	public ES3Settings(string path)
	{
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0x1C63024", Offset = "0x1C63024", VA = "0x1C63024")]
	public ES3Settings(string path, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0x1C63070", Offset = "0x1C63070", VA = "0x1C63070")]
	public ES3Settings(ES3.EncryptionType encryptionType, string encryptionPassword)
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0x1C63094", Offset = "0x1C63094", VA = "0x1C63094")]
	public ES3Settings(string path, ES3.EncryptionType encryptionType, string encryptionPassword)
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0x1C630C0", Offset = "0x1C630C0", VA = "0x1C630C0")]
	public ES3Settings(string path, ES3.EncryptionType encryptionType, string encryptionPassword, ES3Settings settings)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0x1C62CB4", Offset = "0x1C62CB4", VA = "0x1C62CB4")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FF864", Offset = "0x4FF864")]
	public ES3Settings(bool applyDefaults)
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0x1C62F20", Offset = "0x1C62F20", VA = "0x1C62F20")]
	protected void ApplyDefaults()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0x1C630E8", Offset = "0x1C630E8", VA = "0x1C630E8")]
	internal static void LoadDefaults()
	{
	}

	[Token(Token = "0x60000FF")]
	[Address(RVA = "0x1C6352C", Offset = "0x1C6352C", VA = "0x1C6352C")]
	private static bool IsAbsolute(string path)
	{
		return default(bool);
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0x1C635BC", Offset = "0x1C635BC", VA = "0x1C635BC", Slot = "4")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FF878", Offset = "0x4FF878")]
	public object Clone()
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x200000D")]
[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4EF6A8", Offset = "0x4EF6A8")]
public class ES3SerializableSettings : ES3Settings
{
	[Token(Token = "0x6000102")]
	[Address(RVA = "0x1C62C24", Offset = "0x1C62C24", VA = "0x1C62C24")]
	public ES3SerializableSettings()
	{
	}

	[Token(Token = "0x6000103")]
	[Address(RVA = "0x1C62CF8", Offset = "0x1C62CF8", VA = "0x1C62CF8")]
	public ES3SerializableSettings(bool applyDefaults)
	{
	}
}
[Token(Token = "0x200000E")]
public class ES3Cloud : ES3WebClass
{
	[Token(Token = "0x20001EC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F81A0", Offset = "0x4F81A0")]
	private sealed class <Sync>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ES3Settings settings;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string user;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string password;

		[Token(Token = "0x170000B1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xF73910", Offset = "0xF73910", VA = "0xF73910", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0xF73990", Offset = "0xF73990", VA = "0xF73990", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xF6F030", Offset = "0xF6F030", VA = "0xF6F030")]
		[DebuggerHidden]
		public <Sync>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xF7374C", Offset = "0xF7374C", VA = "0xF7374C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xF73750", Offset = "0xF73750", VA = "0xF73750", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xF73918", Offset = "0xF73918", VA = "0xF73918", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001ED")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F81B0", Offset = "0x4F81B0")]
	private sealed class <UploadFile>d__30 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ES3Settings settings;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string user;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string password;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public byte[] bytes;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000B3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xF73DC4", Offset = "0xF73DC4", VA = "0xF73DC4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D3E")]
			[Address(RVA = "0xF73E44", Offset = "0xF73E44", VA = "0xF73E44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xF6FCC4", Offset = "0xF6FCC4", VA = "0xF6FCC4")]
		[DebuggerHidden]
		public <UploadFile>d__30(int <>1__state)
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xF73998", Offset = "0xF73998", VA = "0xF73998", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xF73A84", Offset = "0xF73A84", VA = "0xF73A84", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xF739B0", Offset = "0xF739B0", VA = "0xF739B0")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xF73DCC", Offset = "0xF73DCC", VA = "0xF73DCC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F81C0", Offset = "0x4F81C0")]
	private sealed class <DownloadFile>d__41 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ES3File es3File;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string user;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string password;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long timestamp;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000B5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D43")]
			[Address(RVA = "0xF72568", Offset = "0xF72568", VA = "0xF72568", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D45")]
			[Address(RVA = "0xF725E8", Offset = "0xF725E8", VA = "0xF725E8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xF7043C", Offset = "0xF7043C", VA = "0xF7043C")]
		[DebuggerHidden]
		public <DownloadFile>d__41(int <>1__state)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xF7201C", Offset = "0xF7201C", VA = "0xF7201C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xF72108", Offset = "0xF72108", VA = "0xF72108", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xF72034", Offset = "0xF72034", VA = "0xF72034")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xF72570", Offset = "0xF72570", VA = "0xF72570", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001EF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F81D0", Offset = "0x4F81D0")]
	private sealed class <DownloadFile>d__42 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ES3Settings settings;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string user;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string password;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long timestamp;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000B7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xF72AA8", Offset = "0xF72AA8", VA = "0xF72AA8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xF72B28", Offset = "0xF72B28", VA = "0xF72B28", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xF7045C", Offset = "0xF7045C", VA = "0xF7045C")]
		[DebuggerHidden]
		public <DownloadFile>d__42(int <>1__state)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xF725F0", Offset = "0xF725F0", VA = "0xF725F0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xF726DC", Offset = "0xF726DC", VA = "0xF726DC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xF72608", Offset = "0xF72608", VA = "0xF72608")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xF72AB0", Offset = "0xF72AB0", VA = "0xF72AB0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F81E0", Offset = "0x4F81E0")]
	private sealed class <DeleteFile>d__50 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ES3Settings settings;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string user;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string password;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000B9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D51")]
			[Address(RVA = "0xF71F94", Offset = "0xF71F94", VA = "0xF71F94", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D53")]
			[Address(RVA = "0xF72014", Offset = "0xF72014", VA = "0xF72014", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xF70958", Offset = "0xF70958", VA = "0xF70958")]
		[DebuggerHidden]
		public <DeleteFile>d__50(int <>1__state)
		{
		}

		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xF71770", Offset = "0xF71770", VA = "0xF71770", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xF7185C", Offset = "0xF7185C", VA = "0xF7185C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xF71788", Offset = "0xF71788", VA = "0xF71788")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xF71F9C", Offset = "0xF71F9C", VA = "0xF71F9C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F81F0", Offset = "0x4F81F0")]
	private sealed class <RenameFile>d__57 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ES3Settings settings;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ES3Settings newSettings;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string user;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string password;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000BB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D58")]
			[Address(RVA = "0xF736C4", Offset = "0xF736C4", VA = "0xF736C4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xF73744", Offset = "0xF73744", VA = "0xF73744", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xF70EB4", Offset = "0xF70EB4", VA = "0xF70EB4")]
		[DebuggerHidden]
		public <RenameFile>d__57(int <>1__state)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xF73354", Offset = "0xF73354", VA = "0xF73354", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xF73440", Offset = "0xF73440", VA = "0xF73440", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xF7336C", Offset = "0xF7336C", VA = "0xF7336C")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xF736CC", Offset = "0xF736CC", VA = "0xF736CC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8200", Offset = "0x4F8200")]
	private sealed class <DownloadFilenames>d__60 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string user;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string password;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000BD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xF72EB4", Offset = "0xF72EB4", VA = "0xF72EB4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000BE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xF72F34", Offset = "0xF72F34", VA = "0xF72F34", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xF71044", Offset = "0xF71044", VA = "0xF71044")]
		[DebuggerHidden]
		public <DownloadFilenames>d__60(int <>1__state)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xF72B30", Offset = "0xF72B30", VA = "0xF72B30", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xF72C1C", Offset = "0xF72C1C", VA = "0xF72C1C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xF72B48", Offset = "0xF72B48", VA = "0xF72B48")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xF72EBC", Offset = "0xF72EBC", VA = "0xF72EBC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001F3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8210", Offset = "0x4F8210")]
	private sealed class <DownloadTimestamp>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ES3Cloud <>4__this;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ES3Settings settings;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string user;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string password;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private UnityWebRequest <webRequest>5__2;

		[Token(Token = "0x170000BF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D66")]
			[Address(RVA = "0xF732CC", Offset = "0xF732CC", VA = "0xF732CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D68")]
			[Address(RVA = "0xF7334C", Offset = "0xF7334C", VA = "0xF7334C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xF71540", Offset = "0xF71540", VA = "0xF71540")]
		[DebuggerHidden]
		public <DownloadTimestamp>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xF72F3C", Offset = "0xF72F3C", VA = "0xF72F3C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xF73028", Offset = "0xF73028", VA = "0xF73028", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xF72F54", Offset = "0xF72F54", VA = "0xF72F54")]
		private void <>m__Finally1()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xF732D4", Offset = "0xF732D4", VA = "0xF732D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Encoding encoding;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private byte[] _data;

	[Token(Token = "0x1700000A")]
	public byte[] data
	{
		[Token(Token = "0x6000105")]
		[Address(RVA = "0xF6E850", Offset = "0xF6E850", VA = "0xF6E850")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000B")]
	public string text
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xF6E858", Offset = "0xF6E858", VA = "0xF6E858")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000C")]
	public string[] filenames
	{
		[Token(Token = "0x6000107")]
		[Address(RVA = "0xF6E8A0", Offset = "0xF6E8A0", VA = "0xF6E8A0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700000D")]
	public DateTime timestamp
	{
		[Token(Token = "0x6000108")]
		[Address(RVA = "0xF6E984", Offset = "0xF6E984", VA = "0xF6E984")]
		get
		{
			return default(DateTime);
		}
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xF6E78C", Offset = "0xF6E78C", VA = "0xF6E78C")]
	public ES3Cloud(string url, string apiKey)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xF6EB54", Offset = "0xF6EB54", VA = "0xF6EB54")]
	public IEnumerator Sync()
	{
		return null;
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xF6ECA0", Offset = "0xF6ECA0", VA = "0xF6ECA0")]
	public IEnumerator Sync(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xF6ED34", Offset = "0xF6ED34", VA = "0xF6ED34")]
	public IEnumerator Sync(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xF6EDCC", Offset = "0xF6EDCC", VA = "0xF6EDCC")]
	public IEnumerator Sync(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xF6EE5C", Offset = "0xF6EE5C", VA = "0xF6EE5C")]
	public IEnumerator Sync(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xF6EEF8", Offset = "0xF6EEF8", VA = "0xF6EEF8")]
	public IEnumerator Sync(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xF6EF98", Offset = "0xF6EF98", VA = "0xF6EF98")]
	public IEnumerator Sync(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xF6EBE0", Offset = "0xF6EBE0", VA = "0xF6EBE0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FF88C", Offset = "0x4FF88C")]
	private IEnumerator Sync(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000111")]
	[Address(RVA = "0xF6F050", Offset = "0xF6F050", VA = "0xF6F050")]
	public IEnumerator UploadFile()
	{
		return null;
	}

	[Token(Token = "0x6000112")]
	[Address(RVA = "0xF6F180", Offset = "0xF6F180", VA = "0xF6F180")]
	public IEnumerator UploadFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x6000113")]
	[Address(RVA = "0xF6F214", Offset = "0xF6F214", VA = "0xF6F214")]
	public IEnumerator UploadFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xF6F2AC", Offset = "0xF6F2AC", VA = "0xF6F2AC")]
	public IEnumerator UploadFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000115")]
	[Address(RVA = "0xF6F33C", Offset = "0xF6F33C", VA = "0xF6F33C")]
	public IEnumerator UploadFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000116")]
	[Address(RVA = "0xF6F3D8", Offset = "0xF6F3D8", VA = "0xF6F3D8")]
	public IEnumerator UploadFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xF6F478", Offset = "0xF6F478", VA = "0xF6F478")]
	public IEnumerator UploadFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xF6F510", Offset = "0xF6F510", VA = "0xF6F510")]
	public IEnumerator UploadFile(ES3File es3File)
	{
		return null;
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xF6FBB4", Offset = "0xF6FBB4", VA = "0xF6FBB4")]
	public IEnumerator UploadFile(ES3File es3File, string user)
	{
		return null;
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xF6FC5C", Offset = "0xF6FC5C", VA = "0xF6FC5C")]
	public IEnumerator UploadFile(ES3File es3File, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600011B")]
	[Address(RVA = "0xF6F0DC", Offset = "0xF6F0DC", VA = "0xF6F0DC")]
	public IEnumerator UploadFile(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xF6FAD8", Offset = "0xF6FAD8", VA = "0xF6FAD8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FF8FC", Offset = "0x4FF8FC")]
	private IEnumerator UploadFile(byte[] bytes, ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xF6FCE4", Offset = "0xF6FCE4", VA = "0xF6FCE4")]
	public IEnumerator DownloadFile()
	{
		return null;
	}

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xF6FE60", Offset = "0xF6FE60", VA = "0xF6FE60")]
	public IEnumerator DownloadFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xF6FF00", Offset = "0xF6FF00", VA = "0xF6FF00")]
	public IEnumerator DownloadFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xF6FFA4", Offset = "0xF6FFA4", VA = "0xF6FFA4")]
	public IEnumerator DownloadFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xF70040", Offset = "0xF70040", VA = "0xF70040")]
	public IEnumerator DownloadFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xF700E8", Offset = "0xF700E8", VA = "0xF700E8")]
	public IEnumerator DownloadFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xF70194", Offset = "0xF70194", VA = "0xF70194")]
	public IEnumerator DownloadFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xF70238", Offset = "0xF70238", VA = "0xF70238")]
	public IEnumerator DownloadFile(ES3File es3File)
	{
		return null;
	}

	[Token(Token = "0x6000125")]
	[Address(RVA = "0xF70398", Offset = "0xF70398", VA = "0xF70398")]
	public IEnumerator DownloadFile(ES3File es3File, string user)
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xF70418", Offset = "0xF70418", VA = "0xF70418")]
	public IEnumerator DownloadFile(ES3File es3File, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000127")]
	[Address(RVA = "0xF702B4", Offset = "0xF702B4", VA = "0xF702B4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FF96C", Offset = "0x4FF96C")]
	private IEnumerator DownloadFile(ES3File es3File, string user, string password, long timestamp)
	{
		return null;
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xF6FD7C", Offset = "0xF6FD7C", VA = "0xF6FD7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FF9DC", Offset = "0x4FF9DC")]
	private IEnumerator DownloadFile(ES3Settings settings, string user, string password, long timestamp)
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xF7047C", Offset = "0xF7047C", VA = "0xF7047C")]
	public IEnumerator DeleteFile()
	{
		return null;
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xF705C8", Offset = "0xF705C8", VA = "0xF705C8")]
	public IEnumerator DeleteFile(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xF7065C", Offset = "0xF7065C", VA = "0xF7065C")]
	public IEnumerator DeleteFile(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xF706F4", Offset = "0xF706F4", VA = "0xF706F4")]
	public IEnumerator DeleteFile(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xF70784", Offset = "0xF70784", VA = "0xF70784")]
	public IEnumerator DeleteFile(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xF70820", Offset = "0xF70820", VA = "0xF70820")]
	public IEnumerator DeleteFile(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xF708C0", Offset = "0xF708C0", VA = "0xF708C0")]
	public IEnumerator DeleteFile(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xF70508", Offset = "0xF70508", VA = "0xF70508")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFA4C", Offset = "0x4FFA4C")]
	private IEnumerator DeleteFile(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000131")]
	[Address(RVA = "0xF70978", Offset = "0xF70978", VA = "0xF70978")]
	public IEnumerator RenameFile(string filePath, string newFilePath)
	{
		return null;
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xF70B04", Offset = "0xF70B04", VA = "0xF70B04")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user)
	{
		return null;
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xF70BC0", Offset = "0xF70BC0", VA = "0xF70BC0")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xF70C70", Offset = "0xF70C70", VA = "0xF70C70")]
	public IEnumerator RenameFile(string filePath, string newFilePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xF70D30", Offset = "0xF70D30", VA = "0xF70D30")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xF70DF8", Offset = "0xF70DF8", VA = "0xF70DF8")]
	public IEnumerator RenameFile(string filePath, string newFilePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xF70A2C", Offset = "0xF70A2C", VA = "0xF70A2C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFABC", Offset = "0x4FFABC")]
	private IEnumerator RenameFile(ES3Settings settings, ES3Settings newSettings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xF70ED4", Offset = "0xF70ED4", VA = "0xF70ED4")]
	public IEnumerator DownloadFilenames()
	{
		return null;
	}

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xF70FE0", Offset = "0xF70FE0", VA = "0xF70FE0")]
	public IEnumerator DownloadFilenames(string user)
	{
		return null;
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xF70F34", Offset = "0xF70F34", VA = "0xF70F34")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFB2C", Offset = "0x4FFB2C")]
	public IEnumerator DownloadFilenames(string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xF71064", Offset = "0xF71064", VA = "0xF71064")]
	public IEnumerator DownloadTimestamp()
	{
		return null;
	}

	[Token(Token = "0x600013C")]
	[Address(RVA = "0xF711B0", Offset = "0xF711B0", VA = "0xF711B0")]
	public IEnumerator DownloadTimestamp(string filePath)
	{
		return null;
	}

	[Token(Token = "0x600013D")]
	[Address(RVA = "0xF71244", Offset = "0xF71244", VA = "0xF71244")]
	public IEnumerator DownloadTimestamp(string filePath, string user)
	{
		return null;
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xF712DC", Offset = "0xF712DC", VA = "0xF712DC")]
	public IEnumerator DownloadTimestamp(string filePath, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xF7136C", Offset = "0xF7136C", VA = "0xF7136C")]
	public IEnumerator DownloadTimestamp(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xF71408", Offset = "0xF71408", VA = "0xF71408")]
	public IEnumerator DownloadTimestamp(string filePath, string user, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000141")]
	[Address(RVA = "0xF714A8", Offset = "0xF714A8", VA = "0xF714A8")]
	public IEnumerator DownloadTimestamp(string filePath, string user, string password, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0xF710F0", Offset = "0xF710F0", VA = "0xF710F0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFB9C", Offset = "0x4FFB9C")]
	private IEnumerator DownloadTimestamp(ES3Settings settings, string user, string password)
	{
		return null;
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xF71560", Offset = "0xF71560", VA = "0xF71560")]
	private long DateTimeToUnixTimestamp(DateTime dt)
	{
		return default(long);
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xF716AC", Offset = "0xF716AC", VA = "0xF716AC")]
	private long GetFileTimestamp(ES3Settings settings)
	{
		return default(long);
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xF7173C", Offset = "0xF7173C", VA = "0xF7173C", Slot = "4")]
	protected override void Reset()
	{
	}
}
[Token(Token = "0x200000F")]
public abstract class ES3Writer : IDisposable
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public ES3Settings settings;

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected HashSet<string> keysToDelete;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	internal bool writeHeaderAndFooter;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	internal bool overwriteKeys;

	[Token(Token = "0x6000146")]
	internal abstract void WriteNull();

	[Token(Token = "0x6000147")]
	internal abstract void StartWriteFile();

	[Token(Token = "0x6000148")]
	internal abstract void EndWriteFile();

	[Token(Token = "0x6000149")]
	internal abstract void StartWriteObject(string name);

	[Token(Token = "0x600014A")]
	internal abstract void EndWriteObject(string name);

	[Token(Token = "0x600014B")]
	internal abstract void StartWriteProperty(string name);

	[Token(Token = "0x600014C")]
	internal abstract void EndWriteProperty(string name);

	[Token(Token = "0x600014D")]
	internal abstract void StartWriteCollection(int length);

	[Token(Token = "0x600014E")]
	internal abstract void EndWriteCollection();

	[Token(Token = "0x600014F")]
	internal abstract void StartWriteCollectionItem(int index);

	[Token(Token = "0x6000150")]
	internal abstract void EndWriteCollectionItem(int index);

	[Token(Token = "0x6000151")]
	internal abstract void StartWriteDictionary(int length);

	[Token(Token = "0x6000152")]
	internal abstract void EndWriteDictionary();

	[Token(Token = "0x6000153")]
	internal abstract void StartWriteDictionaryKey(int index);

	[Token(Token = "0x6000154")]
	internal abstract void EndWriteDictionaryKey(int index);

	[Token(Token = "0x6000155")]
	internal abstract void StartWriteDictionaryValue(int index);

	[Token(Token = "0x6000156")]
	internal abstract void EndWriteDictionaryValue(int index);

	[Token(Token = "0x6000157")]
	public abstract void Dispose();

	[Token(Token = "0x6000158")]
	internal abstract void WriteRawProperty(string name, byte[] bytes);

	[Token(Token = "0x6000159")]
	internal abstract void WritePrimitive(int value);

	[Token(Token = "0x600015A")]
	internal abstract void WritePrimitive(float value);

	[Token(Token = "0x600015B")]
	internal abstract void WritePrimitive(bool value);

	[Token(Token = "0x600015C")]
	internal abstract void WritePrimitive(decimal value);

	[Token(Token = "0x600015D")]
	internal abstract void WritePrimitive(double value);

	[Token(Token = "0x600015E")]
	internal abstract void WritePrimitive(long value);

	[Token(Token = "0x600015F")]
	internal abstract void WritePrimitive(ulong value);

	[Token(Token = "0x6000160")]
	internal abstract void WritePrimitive(uint value);

	[Token(Token = "0x6000161")]
	internal abstract void WritePrimitive(byte value);

	[Token(Token = "0x6000162")]
	internal abstract void WritePrimitive(sbyte value);

	[Token(Token = "0x6000163")]
	internal abstract void WritePrimitive(short value);

	[Token(Token = "0x6000164")]
	internal abstract void WritePrimitive(ushort value);

	[Token(Token = "0x6000165")]
	internal abstract void WritePrimitive(char value);

	[Token(Token = "0x6000166")]
	internal abstract void WritePrimitive(string value);

	[Token(Token = "0x6000167")]
	internal abstract void WritePrimitive(byte[] value);

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x1789070", Offset = "0x1789070", VA = "0x1789070")]
	protected ES3Writer(ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
	{
	}

	[Token(Token = "0x6000169")]
	public virtual void Write<T>(string key, object value)
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0x1789114", Offset = "0x1789114", VA = "0x1789114", Slot = "40")]
	internal virtual void Write(string key, Type type, byte[] value)
	{
	}

	[Token(Token = "0x600016B")]
	[Address(RVA = "0x1789288", Offset = "0x1789288", VA = "0x1789288", Slot = "41")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFC0C", Offset = "0x4FFC0C")]
	public virtual void Write(Type type, string key, object value)
	{
	}

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x17893D4", Offset = "0x17893D4", VA = "0x17893D4", Slot = "42")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFC20", Offset = "0x4FFC20")]
	public virtual void Write(object value, ES3.ReferenceMode memberReferenceMode = ES3.ReferenceMode.ByRef)
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x17894BC", Offset = "0x17894BC", VA = "0x17894BC", Slot = "43")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFC34", Offset = "0x4FFC34")]
	public virtual void Write(object value, ES3Type type, ES3.ReferenceMode memberReferenceMode = ES3.ReferenceMode.ByRef)
	{
	}

	[Token(Token = "0x600016E")]
	[Address(RVA = "0x17898E4", Offset = "0x17898E4", VA = "0x17898E4", Slot = "44")]
	internal virtual void WriteRef(UnityEngine.Object obj)
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x1789A94", Offset = "0x1789A94", VA = "0x1789A94", Slot = "45")]
	public virtual void WriteProperty(string name, object value)
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x1789AE8", Offset = "0x1789AE8", VA = "0x1789AE8", Slot = "46")]
	public virtual void WriteProperty(string name, object value, ES3.ReferenceMode memberReferenceMode)
	{
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x1789B30", Offset = "0x1789B30", VA = "0x1789B30", Slot = "47")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFC48", Offset = "0x4FFC48")]
	public virtual void WriteProperty(string name, object value, ES3Type type)
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x1789B98", Offset = "0x1789B98", VA = "0x1789B98", Slot = "48")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFC5C", Offset = "0x4FFC5C")]
	public virtual void WriteProperty(string name, object value, ES3Type type, ES3.ReferenceMode memberReferenceMode)
	{
	}

	[Token(Token = "0x6000173")]
	public virtual void WriteProperty<T>(string name, object value)
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x177F1B0", Offset = "0x177F1B0", VA = "0x177F1B0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFC70", Offset = "0x4FFC70")]
	public void WritePropertyByRef(string name, UnityEngine.Object value)
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x1789BF0", Offset = "0x1789BF0", VA = "0x1789BF0")]
	public void WritePrivateProperty(string name, object objectContainingProperty)
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x1789E84", Offset = "0x1789E84", VA = "0x1789E84")]
	public void WritePrivateField(string name, object objectContainingField)
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x178A118", Offset = "0x178A118", VA = "0x178A118")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFC84", Offset = "0x4FFC84")]
	public void WritePrivateProperty(string name, object objectContainingProperty, ES3Type type)
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x178A35C", Offset = "0x178A35C", VA = "0x178A35C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFC98", Offset = "0x4FFC98")]
	public void WritePrivateField(string name, object objectContainingField, ES3Type type)
	{
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x178A5A0", Offset = "0x178A5A0", VA = "0x178A5A0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFCAC", Offset = "0x4FFCAC")]
	public void WritePrivatePropertyByRef(string name, object objectContainingProperty)
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x178A81C", Offset = "0x178A81C", VA = "0x178A81C")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFCC0", Offset = "0x4FFCC0")]
	public void WritePrivateFieldByRef(string name, object objectContainingField)
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x17891E0", Offset = "0x17891E0", VA = "0x17891E0")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFCD4", Offset = "0x4FFCD4")]
	public void WriteType(Type type)
	{
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0x178AA98", Offset = "0x178AA98", VA = "0x178AA98")]
	public static ES3Writer Create(string filePath, ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0x178AB24", Offset = "0x178AB24", VA = "0x178AB24")]
	public static ES3Writer Create(ES3Settings settings)
	{
		return null;
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x178AB48", Offset = "0x178AB48", VA = "0x178AB48")]
	internal static ES3Writer Create(ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys, bool append)
	{
		return null;
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x178ABA0", Offset = "0x178ABA0", VA = "0x178ABA0")]
	internal static ES3Writer Create(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
	{
		return null;
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x178AD3C", Offset = "0x178AD3C", VA = "0x178AD3C", Slot = "50")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FFCE8", Offset = "0x4FFCE8")]
	public virtual void MarkKeyForDeletion(string key)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x178ADB0", Offset = "0x178ADB0", VA = "0x178ADB0")]
	protected void Merge()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x178AEC8", Offset = "0x178AEC8", VA = "0x178AEC8")]
	protected void Merge(ES3Reader reader)
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x178B208", Offset = "0x178B208", VA = "0x178B208", Slot = "51")]
	public virtual void Save()
	{
	}

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x178B21C", Offset = "0x178B21C", VA = "0x178B21C", Slot = "52")]
	public virtual void Save(bool overwriteKeys)
	{
	}
}
[Token(Token = "0x2000010")]
[ExecuteInEditMode]
public class LODGroupOverride : MonoBehaviour
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public float lodSize;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 localReference;

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x1795400", Offset = "0x1795400", VA = "0x1795400")]
	private void OnStart()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x17954D4", Offset = "0x17954D4", VA = "0x17954D4")]
	public LODGroupOverride()
	{
	}
}
[Token(Token = "0x2000011")]
[ExecuteInEditMode]
public class LightmappedLOD : MonoBehaviour
{
	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MeshRenderer currentRenderer;

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x1795578", Offset = "0x1795578", VA = "0x1795578")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x17955FC", Offset = "0x17955FC", VA = "0x17955FC")]
	private void RendererInfoTransfer()
	{
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0x1795E14", Offset = "0x1795E14", VA = "0x1795E14")]
	public LightmappedLOD()
	{
	}
}
[Token(Token = "0x2000012")]
[ExecuteInEditMode]
public class StealLightmap : MonoBehaviour
{
	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private MeshRenderer currentRenderer;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public MeshRenderer lightmappedObject;

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x118D71C", Offset = "0x118D71C", VA = "0x118D71C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x118D720", Offset = "0x118D720", VA = "0x118D720")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x118D7A4", Offset = "0x118D7A4", VA = "0x118D7A4")]
	private void RendererInfoTransfer()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x118D9CC", Offset = "0x118D9CC", VA = "0x118D9CC")]
	public StealLightmap()
	{
	}
}
[Token(Token = "0x2000013")]
public class MoveSample : MonoBehaviour
{
	[Token(Token = "0x600018E")]
	[Address(RVA = "0x1795E1C", Offset = "0x1795E1C", VA = "0x1795E1C")]
	private void Start()
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x17961E0", Offset = "0x17961E0", VA = "0x17961E0")]
	public MoveSample()
	{
	}
}
[Token(Token = "0x2000014")]
public class RotateSample : MonoBehaviour
{
	[Token(Token = "0x6000190")]
	[Address(RVA = "0x118CB74", Offset = "0x118CB74", VA = "0x118CB74")]
	private void Start()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x118CF38", Offset = "0x118CF38", VA = "0x118CF38")]
	public RotateSample()
	{
	}
}
[Token(Token = "0x2000015")]
public class SampleInfo : MonoBehaviour
{
	[Token(Token = "0x6000192")]
	[Address(RVA = "0x118CF40", Offset = "0x118CF40", VA = "0x118CF40")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000193")]
	[Address(RVA = "0x118D268", Offset = "0x118D268", VA = "0x118D268")]
	public SampleInfo()
	{
	}
}
[Token(Token = "0x2000016")]
public class iTween : MonoBehaviour
{
	[Token(Token = "0x20001F4")]
	private delegate float EasingFunction(float start, float end, float Value);

	[Token(Token = "0x20001F5")]
	private delegate void ApplyTween();

	[Token(Token = "0x20001F6")]
	public enum EaseType
	{
		[Token(Token = "0x40009A9")]
		easeInQuad,
		[Token(Token = "0x40009AA")]
		easeOutQuad,
		[Token(Token = "0x40009AB")]
		easeInOutQuad,
		[Token(Token = "0x40009AC")]
		easeInCubic,
		[Token(Token = "0x40009AD")]
		easeOutCubic,
		[Token(Token = "0x40009AE")]
		easeInOutCubic,
		[Token(Token = "0x40009AF")]
		easeInQuart,
		[Token(Token = "0x40009B0")]
		easeOutQuart,
		[Token(Token = "0x40009B1")]
		easeInOutQuart,
		[Token(Token = "0x40009B2")]
		easeInQuint,
		[Token(Token = "0x40009B3")]
		easeOutQuint,
		[Token(Token = "0x40009B4")]
		easeInOutQuint,
		[Token(Token = "0x40009B5")]
		easeInSine,
		[Token(Token = "0x40009B6")]
		easeOutSine,
		[Token(Token = "0x40009B7")]
		easeInOutSine,
		[Token(Token = "0x40009B8")]
		easeInExpo,
		[Token(Token = "0x40009B9")]
		easeOutExpo,
		[Token(Token = "0x40009BA")]
		easeInOutExpo,
		[Token(Token = "0x40009BB")]
		easeInCirc,
		[Token(Token = "0x40009BC")]
		easeOutCirc,
		[Token(Token = "0x40009BD")]
		easeInOutCirc,
		[Token(Token = "0x40009BE")]
		linear,
		[Token(Token = "0x40009BF")]
		spring,
		[Token(Token = "0x40009C0")]
		easeInBounce,
		[Token(Token = "0x40009C1")]
		easeOutBounce,
		[Token(Token = "0x40009C2")]
		easeInOutBounce,
		[Token(Token = "0x40009C3")]
		easeInBack,
		[Token(Token = "0x40009C4")]
		easeOutBack,
		[Token(Token = "0x40009C5")]
		easeInOutBack,
		[Token(Token = "0x40009C6")]
		easeInElastic,
		[Token(Token = "0x40009C7")]
		easeOutElastic,
		[Token(Token = "0x40009C8")]
		easeInOutElastic,
		[Token(Token = "0x40009C9")]
		punch
	}

	[Token(Token = "0x20001F7")]
	public enum LoopType
	{
		[Token(Token = "0x40009CB")]
		none,
		[Token(Token = "0x40009CC")]
		loop,
		[Token(Token = "0x40009CD")]
		pingPong
	}

	[Token(Token = "0x20001F8")]
	public enum NamedValueColor
	{
		[Token(Token = "0x40009CF")]
		_Color,
		[Token(Token = "0x40009D0")]
		_SpecColor,
		[Token(Token = "0x40009D1")]
		_Emission,
		[Token(Token = "0x40009D2")]
		_ReflectColor
	}

	[Token(Token = "0x20001F9")]
	public static class Defaults
	{
		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static float time;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static float delay;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static NamedValueColor namedColorValue;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static LoopType loopType;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static EaseType easeType;

		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float lookSpeed;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool isLocal;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static Space space;

		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static bool orientToPath;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static Color color;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static float updateTimePercentage;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static float updateTime;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static float lookAhead;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static bool useRealTime;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static Vector3 up;
	}

	[Token(Token = "0x20001FA")]
	private class CRSpline
	{
		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3[] pts;

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0x2996008", Offset = "0x2996008", VA = "0x2996008")]
		public CRSpline(params Vector3[] pts)
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0x29960A8", Offset = "0x29960A8", VA = "0x29960A8")]
		public Vector3 Interp(float t)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8220", Offset = "0x4F8220")]
	private sealed class <TweenDelay>d__145 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public iTween <>4__this;

		[Token(Token = "0x170000C1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0x2995B44", Offset = "0x2995B44", VA = "0x2995B44", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0x2995BC4", Offset = "0x2995BC4", VA = "0x2995BC4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0x2995A14", Offset = "0x2995A14", VA = "0x2995A14")]
		[DebuggerHidden]
		public <TweenDelay>d__145(int <>1__state)
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0x2995A34", Offset = "0x2995A34", VA = "0x2995A34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0x2995A38", Offset = "0x2995A38", VA = "0x2995A38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0x2995B4C", Offset = "0x2995B4C", VA = "0x2995B4C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8230", Offset = "0x4F8230")]
	private sealed class <TweenRestart>d__147 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public iTween <>4__this;

		[Token(Token = "0x170000C3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0x2995CFC", Offset = "0x2995CFC", VA = "0x2995CFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0x2995D7C", Offset = "0x2995D7C", VA = "0x2995D7C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0x2995BCC", Offset = "0x2995BCC", VA = "0x2995BCC")]
		[DebuggerHidden]
		public <TweenRestart>d__147(int <>1__state)
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0x2995BEC", Offset = "0x2995BEC", VA = "0x2995BEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0x2995BF0", Offset = "0x2995BF0", VA = "0x2995BF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0x2995D04", Offset = "0x2995D04", VA = "0x2995D04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20001FD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8240", Offset = "0x4F8240")]
	private sealed class <Start>d__229 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int <>1__state;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private object <>2__current;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public iTween <>4__this;

		[Token(Token = "0x170000C5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000D83")]
			[Address(RVA = "0x299598C", Offset = "0x299598C", VA = "0x299598C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000C6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000D85")]
			[Address(RVA = "0x2995A0C", Offset = "0x2995A0C", VA = "0x2995A0C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0x2995890", Offset = "0x2995890", VA = "0x2995890")]
		[DebuggerHidden]
		public <Start>d__229(int <>1__state)
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0x29958B0", Offset = "0x29958B0", VA = "0x29958B0", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0x29958B4", Offset = "0x29958B4", VA = "0x29958B4", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x2995994", Offset = "0x2995994", VA = "0x2995994", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static List<Hashtable> tweens;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public string id;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string type;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public string method;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public EaseType easeType;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float time;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delay;

	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LoopType loopType;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isRunning;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool isPaused;

	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public string _name;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float runningTime;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float percentage;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float delayStarted;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool kinematic;

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	private bool isLocal;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	private bool loop;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	private bool reverse;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool wasPaused;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool physics;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Hashtable tweenArguments;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Space space;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private EasingFunction ease;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ApplyTween apply;

	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private AudioSource audioSource;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3[] vector3s;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector2[] vector2s;

	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Color[,] colors;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float[] floats;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rect[] rects;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private CRSpline path;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 preUpdate;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 postUpdate;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private NamedValueColor namedcolorvalue;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float lastRealTime;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool useRealTime;

	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Transform thisTransform;

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x1206938", Offset = "0x1206938", VA = "0x1206938")]
	public static void Init(GameObject target)
	{
	}

	[Token(Token = "0x6000195")]
	[Address(RVA = "0x1206C54", Offset = "0x1206C54", VA = "0x1206C54")]
	public static void ValueTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x1208020", Offset = "0x1208020", VA = "0x1208020")]
	public static void FadeFrom(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0x12083D0", Offset = "0x12083D0", VA = "0x12083D0")]
	public static void FadeFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x120918C", Offset = "0x120918C", VA = "0x120918C")]
	public static void FadeTo(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x12093CC", Offset = "0x12093CC", VA = "0x12093CC")]
	public static void FadeTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x1209A74", Offset = "0x1209A74", VA = "0x1209A74")]
	public static void ColorFrom(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x1208450", Offset = "0x1208450", VA = "0x1208450")]
	public static void ColorFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0x1209CD8", Offset = "0x1209CD8", VA = "0x1209CD8")]
	public static void ColorTo(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x120944C", Offset = "0x120944C", VA = "0x120944C")]
	public static void ColorTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x1209F3C", Offset = "0x1209F3C", VA = "0x1209F3C")]
	public static void AudioFrom(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x120A238", Offset = "0x120A238", VA = "0x120A238")]
	public static void AudioFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x120A75C", Offset = "0x120A75C", VA = "0x120A75C")]
	public static void AudioTo(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x60001A1")]
	[Address(RVA = "0x120AA58", Offset = "0x120AA58", VA = "0x120AA58")]
	public static void AudioTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001A2")]
	[Address(RVA = "0x120ABE8", Offset = "0x120ABE8", VA = "0x120ABE8")]
	public static void Stab(GameObject target, AudioClip audioclip, float delay)
	{
	}

	[Token(Token = "0x60001A3")]
	[Address(RVA = "0x120AE10", Offset = "0x120AE10", VA = "0x120AE10")]
	public static void Stab(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001A4")]
	[Address(RVA = "0x120AEDC", Offset = "0x120AEDC", VA = "0x120AEDC")]
	public static void LookFrom(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0x120B130", Offset = "0x120B130", VA = "0x120B130")]
	public static void LookFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0x120B97C", Offset = "0x120B97C", VA = "0x120B97C")]
	public static void LookTo(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0x120BBD0", Offset = "0x120BBD0", VA = "0x120BBD0")]
	public static void LookTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0x120BFD4", Offset = "0x120BFD4", VA = "0x120BFD4")]
	public static void MoveTo(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x120C228", Offset = "0x120C228", VA = "0x120C228")]
	public static void MoveTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x120C6F4", Offset = "0x120C6F4", VA = "0x120C6F4")]
	public static void MoveFrom(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x120C948", Offset = "0x120C948", VA = "0x120C948")]
	public static void MoveFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x120D730", Offset = "0x120D730", VA = "0x120D730")]
	public static void MoveAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x120D984", Offset = "0x120D984", VA = "0x120D984")]
	public static void MoveAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1206A00", Offset = "0x1206A00", VA = "0x1206A00")]
	public static void MoveBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x120DA90", Offset = "0x120DA90", VA = "0x120DA90")]
	public static void MoveBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0x120DB9C", Offset = "0x120DB9C", VA = "0x120DB9C")]
	public static void ScaleTo(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0x120DDF0", Offset = "0x120DDF0", VA = "0x120DDF0")]
	public static void ScaleTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0x120E2BC", Offset = "0x120E2BC", VA = "0x120E2BC")]
	public static void ScaleFrom(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0x120E510", Offset = "0x120E510", VA = "0x120E510")]
	public static void ScaleFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0x120EB78", Offset = "0x120EB78", VA = "0x120EB78")]
	public static void ScaleAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0x120EDCC", Offset = "0x120EDCC", VA = "0x120EDCC")]
	public static void ScaleAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001B6")]
	[Address(RVA = "0x120EED8", Offset = "0x120EED8", VA = "0x120EED8")]
	public static void ScaleBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0x120F12C", Offset = "0x120F12C", VA = "0x120F12C")]
	public static void ScaleBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0x120F238", Offset = "0x120F238", VA = "0x120F238")]
	public static void RotateTo(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60001B9")]
	[Address(RVA = "0x120F48C", Offset = "0x120F48C", VA = "0x120F48C")]
	public static void RotateTo(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001BA")]
	[Address(RVA = "0x120F964", Offset = "0x120F964", VA = "0x120F964")]
	public static void RotateFrom(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x60001BB")]
	[Address(RVA = "0x120FBB8", Offset = "0x120FBB8", VA = "0x120FBB8")]
	public static void RotateFrom(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001BC")]
	[Address(RVA = "0x1210314", Offset = "0x1210314", VA = "0x1210314")]
	public static void RotateAdd(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001BD")]
	[Address(RVA = "0x1210568", Offset = "0x1210568", VA = "0x1210568")]
	public static void RotateAdd(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001BE")]
	[Address(RVA = "0x1210674", Offset = "0x1210674", VA = "0x1210674")]
	public static void RotateBy(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0x12108C8", Offset = "0x12108C8", VA = "0x12108C8")]
	public static void RotateBy(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0x12109D4", Offset = "0x12109D4", VA = "0x12109D4")]
	public static void ShakePosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0x1210C28", Offset = "0x1210C28", VA = "0x1210C28")]
	public static void ShakePosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0x1210D34", Offset = "0x1210D34", VA = "0x1210D34")]
	public static void ShakeScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0x1210F88", Offset = "0x1210F88", VA = "0x1210F88")]
	public static void ShakeScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0x1211094", Offset = "0x1211094", VA = "0x1211094")]
	public static void ShakeRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0x12112E8", Offset = "0x12112E8", VA = "0x12112E8")]
	public static void ShakeRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0x12113F4", Offset = "0x12113F4", VA = "0x12113F4")]
	public static void PunchPosition(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0x1211648", Offset = "0x1211648", VA = "0x1211648")]
	public static void PunchPosition(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0x12117B4", Offset = "0x12117B4", VA = "0x12117B4")]
	public static void PunchRotation(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0x1211A08", Offset = "0x1211A08", VA = "0x1211A08")]
	public static void PunchRotation(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0x1211B74", Offset = "0x1211B74", VA = "0x1211B74")]
	public static void PunchScale(GameObject target, Vector3 amount, float time)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0x1211DC8", Offset = "0x1211DC8", VA = "0x1211DC8")]
	public static void PunchScale(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0x1211F34", Offset = "0x1211F34", VA = "0x1211F34")]
	private void GenerateTargets()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0x12135BC", Offset = "0x12135BC", VA = "0x12135BC")]
	private void GenerateRectTargets()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0x12133A8", Offset = "0x12133A8", VA = "0x12133A8")]
	private void GenerateColorTargets()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0x1213034", Offset = "0x1213034", VA = "0x1213034")]
	private void GenerateVector3Targets()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0x1212C40", Offset = "0x1212C40", VA = "0x1212C40")]
	private void GenerateVector2Targets()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0x1212960", Offset = "0x1212960", VA = "0x1212960")]
	private void GenerateFloatTargets()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0x1213778", Offset = "0x1213778", VA = "0x1213778")]
	private void GenerateColorToTargets()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0x12145A8", Offset = "0x12145A8", VA = "0x12145A8")]
	private void GenerateAudioToTargets()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0x121BD48", Offset = "0x121BD48", VA = "0x121BD48")]
	private void GenerateStabTargets()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0x121AFD4", Offset = "0x121AFD4", VA = "0x121AFD4")]
	private void GenerateLookToTargets()
	{
	}

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0x12149F4", Offset = "0x12149F4", VA = "0x12149F4")]
	private void GenerateMoveToPathTargets()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0x121552C", Offset = "0x121552C", VA = "0x121552C")]
	private void GenerateMoveToTargets()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0x1215EA0", Offset = "0x1215EA0", VA = "0x1215EA0")]
	private void GenerateMoveByTargets()
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0x1216874", Offset = "0x1216874", VA = "0x1216874")]
	private void GenerateScaleToTargets()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0x121704C", Offset = "0x121704C", VA = "0x121704C")]
	private void GenerateScaleByTargets()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0x12176E4", Offset = "0x12176E4", VA = "0x12176E4")]
	private void GenerateScaleAddTargets()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0x1217D60", Offset = "0x1217D60", VA = "0x1217D60")]
	private void GenerateRotateToTargets()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0x1218720", Offset = "0x1218720", VA = "0x1218720")]
	private void GenerateRotateAddTargets()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0x1218DC0", Offset = "0x1218DC0", VA = "0x1218DC0")]
	private void GenerateRotateByTargets()
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0x12194C0", Offset = "0x12194C0", VA = "0x12194C0")]
	private void GenerateShakePositionTargets()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0x1219940", Offset = "0x1219940", VA = "0x1219940")]
	private void GenerateShakeScaleTargets()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0x1219D68", Offset = "0x1219D68", VA = "0x1219D68")]
	private void GenerateShakeRotationTargets()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0x121A190", Offset = "0x121A190", VA = "0x121A190")]
	private void GeneratePunchPositionTargets()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0x121A698", Offset = "0x121A698", VA = "0x121A698")]
	private void GeneratePunchRotationTargets()
	{
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0x121AB48", Offset = "0x121AB48", VA = "0x121AB48")]
	private void GeneratePunchScaleTargets()
	{
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0x121C648", Offset = "0x121C648", VA = "0x121C648")]
	private void ApplyRectTargets()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0x121CB28", Offset = "0x121CB28", VA = "0x121CB28")]
	private void ApplyColorTargets()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0x121D124", Offset = "0x121D124", VA = "0x121D124")]
	private void ApplyVector3Targets()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0x121D4B8", Offset = "0x121D4B8", VA = "0x121D4B8")]
	private void ApplyVector2Targets()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0x121D78C", Offset = "0x121D78C", VA = "0x121D78C")]
	private void ApplyFloatTargets()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0x121D98C", Offset = "0x121D98C", VA = "0x121D98C")]
	private void ApplyColorToTargets()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0x121E4A0", Offset = "0x121E4A0", VA = "0x121E4A0")]
	private void ApplyAudioToTargets()
	{
	}

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0x121E784", Offset = "0x121E784", VA = "0x121E784")]
	private void ApplyStabTargets()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0x121E788", Offset = "0x121E788", VA = "0x121E788")]
	private void ApplyMoveToPathTargets()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0x121ECB8", Offset = "0x121ECB8", VA = "0x121ECB8")]
	private void ApplyMoveToTargets()
	{
	}

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0x121F1A4", Offset = "0x121F1A4", VA = "0x121F1A4")]
	private void ApplyMoveByTargets()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0x121F7C4", Offset = "0x121F7C4", VA = "0x121F7C4")]
	private void ApplyScaleToTargets()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0x121FAE0", Offset = "0x121FAE0", VA = "0x121FAE0")]
	private void ApplyLookToTargets()
	{
	}

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0x121FE98", Offset = "0x121FE98", VA = "0x121FE98")]
	private void ApplyRotateToTargets()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0x12204E4", Offset = "0x12204E4", VA = "0x12204E4")]
	private void ApplyRotateAddTargets()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0x12209E0", Offset = "0x12209E0", VA = "0x12209E0")]
	private void ApplyShakePositionTargets()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0x122113C", Offset = "0x122113C", VA = "0x122113C")]
	private void ApplyShakeScaleTargets()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0x1221524", Offset = "0x1221524", VA = "0x1221524")]
	private void ApplyShakeRotationTargets()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0x12219F8", Offset = "0x12219F8", VA = "0x12219F8")]
	private void ApplyPunchPositionTargets()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0x1222304", Offset = "0x1222304", VA = "0x1222304")]
	private void ApplyPunchRotationTargets()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0x12229FC", Offset = "0x12229FC", VA = "0x12229FC")]
	private void ApplyPunchScaleTargets()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0x1222F58", Offset = "0x1222F58", VA = "0x1222F58")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFCFC", Offset = "0x4FFCFC")]
	private IEnumerator TweenDelay()
	{
		return null;
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0x1222FD4", Offset = "0x1222FD4", VA = "0x1222FD4")]
	private void TweenStart()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1223B7C", Offset = "0x1223B7C", VA = "0x1223B7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFD6C", Offset = "0x4FFD6C")]
	private IEnumerator TweenRestart()
	{
		return null;
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1223BF8", Offset = "0x1223BF8", VA = "0x1223BF8")]
	private void TweenUpdate()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1223CF8", Offset = "0x1223CF8", VA = "0x1223CF8")]
	private void TweenComplete()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1223DF8", Offset = "0x1223DF8", VA = "0x1223DF8")]
	private void TweenLoop()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1223EB0", Offset = "0x1223EB0", VA = "0x1223EB0")]
	public static Rect RectUpdate(Rect currentValue, Rect targetValue, float speed)
	{
		return default(Rect);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x12240D0", Offset = "0x12240D0", VA = "0x12240D0")]
	public static Vector3 Vector3Update(Vector3 currentValue, Vector3 targetValue, float speed)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0x12241FC", Offset = "0x12241FC", VA = "0x12241FC")]
	public static Vector2 Vector2Update(Vector2 currentValue, Vector2 targetValue, float speed)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000203")]
	[Address(RVA = "0x1224094", Offset = "0x1224094", VA = "0x1224094")]
	public static float FloatUpdate(float currentValue, float targetValue, float speed)
	{
		return default(float);
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x1224310", Offset = "0x1224310", VA = "0x1224310")]
	public static void FadeUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0x1225308", Offset = "0x1225308", VA = "0x1225308")]
	public static void FadeUpdate(GameObject target, float alpha, float time)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x12243F8", Offset = "0x12243F8", VA = "0x12243F8")]
	public static void ColorUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x1225548", Offset = "0x1225548", VA = "0x1225548")]
	public static void ColorUpdate(GameObject target, Color color, float time)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x12257AC", Offset = "0x12257AC", VA = "0x12257AC")]
	public static void AudioUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0x1225EB4", Offset = "0x1225EB4", VA = "0x1225EB4")]
	public static void AudioUpdate(GameObject target, float volume, float pitch, float time)
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0x12261B0", Offset = "0x12261B0", VA = "0x12261B0")]
	public static void RotateUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0x1226BC8", Offset = "0x1226BC8", VA = "0x1226BC8")]
	public static void RotateUpdate(GameObject target, Vector3 rotation, float time)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0x1226E1C", Offset = "0x1226E1C", VA = "0x1226E1C")]
	public static void ScaleUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600020D")]
	[Address(RVA = "0x1227704", Offset = "0x1227704", VA = "0x1227704")]
	public static void ScaleUpdate(GameObject target, Vector3 scale, float time)
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0x1227958", Offset = "0x1227958", VA = "0x1227958")]
	public static void MoveUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0x12295B0", Offset = "0x12295B0", VA = "0x12295B0")]
	public static void MoveUpdate(GameObject target, Vector3 position, float time)
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0x12286A4", Offset = "0x12286A4", VA = "0x12286A4")]
	public static void LookUpdate(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0x1229804", Offset = "0x1229804", VA = "0x1229804")]
	public static void LookUpdate(GameObject target, Vector3 looktarget, float time)
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0x1229A58", Offset = "0x1229A58", VA = "0x1229A58")]
	public static float PathLength(Transform[] path)
	{
		return default(float);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0x121C490", Offset = "0x121C490", VA = "0x121C490")]
	public static float PathLength(Vector3[] path)
	{
		return default(float);
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0x122A61C", Offset = "0x122A61C", VA = "0x122A61C")]
	public static void PutOnPath(GameObject target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0x122A6F0", Offset = "0x122A6F0", VA = "0x122A6F0")]
	public static void PutOnPath(Transform target, Vector3[] path, float percent)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0x122A7A8", Offset = "0x122A7A8", VA = "0x122A7A8")]
	public static void PutOnPath(GameObject target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0x122A94C", Offset = "0x122A94C", VA = "0x122A94C")]
	public static void PutOnPath(Transform target, Transform[] path, float percent)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0x122AAD4", Offset = "0x122AAD4", VA = "0x122AAD4")]
	public static Vector3 PointOnPath(Transform[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0x122AC30", Offset = "0x122AC30", VA = "0x122AC30")]
	public static void DrawLine(Vector3[] line)
	{
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0x122AED8", Offset = "0x122AED8", VA = "0x122AED8")]
	public static void DrawLine(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0x122AFA4", Offset = "0x122AFA4", VA = "0x122AFA4")]
	public static void DrawLine(Transform[] line)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0x122B154", Offset = "0x122B154", VA = "0x122B154")]
	public static void DrawLine(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0x122B2E4", Offset = "0x122B2E4", VA = "0x122B2E4")]
	public static void DrawLineGizmos(Vector3[] line)
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0x122B3E8", Offset = "0x122B3E8", VA = "0x122B3E8")]
	public static void DrawLineGizmos(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0x122B4B4", Offset = "0x122B4B4", VA = "0x122B4B4")]
	public static void DrawLineGizmos(Transform[] line)
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0x122B664", Offset = "0x122B664", VA = "0x122B664")]
	public static void DrawLineGizmos(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0x122B7F4", Offset = "0x122B7F4", VA = "0x122B7F4")]
	public static void DrawLineHandles(Vector3[] line)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0x122B8F8", Offset = "0x122B8F8", VA = "0x122B8F8")]
	public static void DrawLineHandles(Vector3[] line, Color color)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0x122B9C4", Offset = "0x122B9C4", VA = "0x122B9C4")]
	public static void DrawLineHandles(Transform[] line)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0x122BB74", Offset = "0x122BB74", VA = "0x122BB74")]
	public static void DrawLineHandles(Transform[] line, Color color)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0x122BD04", Offset = "0x122BD04", VA = "0x122BD04")]
	public static Vector3 PointOnPath(Vector3[] path, float percent)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0x122BD94", Offset = "0x122BD94", VA = "0x122BD94")]
	public static void DrawPath(Vector3[] path)
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0x122C0CC", Offset = "0x122C0CC", VA = "0x122C0CC")]
	public static void DrawPath(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0x122C198", Offset = "0x122C198", VA = "0x122C198")]
	public static void DrawPath(Transform[] path)
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0x122C348", Offset = "0x122C348", VA = "0x122C348")]
	public static void DrawPath(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x600022A")]
	[Address(RVA = "0x122C4D8", Offset = "0x122C4D8", VA = "0x122C4D8")]
	public static void DrawPathGizmos(Vector3[] path)
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0x122C5DC", Offset = "0x122C5DC", VA = "0x122C5DC")]
	public static void DrawPathGizmos(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0x122C6A8", Offset = "0x122C6A8", VA = "0x122C6A8")]
	public static void DrawPathGizmos(Transform[] path)
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0x122C858", Offset = "0x122C858", VA = "0x122C858")]
	public static void DrawPathGizmos(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x600022E")]
	[Address(RVA = "0x122C9E8", Offset = "0x122C9E8", VA = "0x122C9E8")]
	public static void DrawPathHandles(Vector3[] path)
	{
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0x122CAEC", Offset = "0x122CAEC", VA = "0x122CAEC")]
	public static void DrawPathHandles(Vector3[] path, Color color)
	{
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0x122CBB8", Offset = "0x122CBB8", VA = "0x122CBB8")]
	public static void DrawPathHandles(Transform[] path)
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0x122CD68", Offset = "0x122CD68", VA = "0x122CD68")]
	public static void DrawPathHandles(Transform[] path, Color color)
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0x122CEF8", Offset = "0x122CEF8", VA = "0x122CEF8")]
	public static void Resume(GameObject target)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0x122D040", Offset = "0x122D040", VA = "0x122D040")]
	public static void Resume(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0x122D3C4", Offset = "0x122D3C4", VA = "0x122D3C4")]
	public static void Resume(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0x122D564", Offset = "0x122D564", VA = "0x122D564")]
	public static void Resume(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0x122DA28", Offset = "0x122DA28", VA = "0x122DA28")]
	public static void Resume()
	{
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0x122DB88", Offset = "0x122DB88", VA = "0x122DB88")]
	public static void Resume(string type)
	{
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0x122DE0C", Offset = "0x122DE0C", VA = "0x122DE0C")]
	public static void Pause(GameObject target)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0x122DF78", Offset = "0x122DF78", VA = "0x122DF78")]
	public static void Pause(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0x122E2FC", Offset = "0x122E2FC", VA = "0x122E2FC")]
	public static void Pause(GameObject target, string type)
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0x122E508", Offset = "0x122E508", VA = "0x122E508")]
	public static void Pause(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0x122EA48", Offset = "0x122EA48", VA = "0x122EA48")]
	public static void Pause()
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0x122EBA8", Offset = "0x122EBA8", VA = "0x122EBA8")]
	public static void Pause(string type)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0x122EE2C", Offset = "0x122EE2C", VA = "0x122EE2C")]
	public static int Count()
	{
		return default(int);
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0x122EEB4", Offset = "0x122EEB4", VA = "0x122EEB4")]
	public static int Count(string type)
	{
		return default(int);
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0x122F110", Offset = "0x122F110", VA = "0x122F110")]
	public static int Count(GameObject target)
	{
		return default(int);
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0x122F18C", Offset = "0x122F18C", VA = "0x122F18C")]
	public static int Count(GameObject target, string type)
	{
		return default(int);
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0x122F320", Offset = "0x122F320", VA = "0x122F320")]
	public static void Stop()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0x122F60C", Offset = "0x122F60C", VA = "0x122F60C")]
	public static void Stop(string type)
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0x122FA24", Offset = "0x122FA24", VA = "0x122FA24")]
	public static void StopByName(string name)
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0x122F4CC", Offset = "0x122F4CC", VA = "0x122F4CC")]
	public static void Stop(GameObject target)
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0x122FDC0", Offset = "0x122FDC0", VA = "0x122FDC0")]
	public static void Stop(GameObject target, bool includechildren)
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0x122F890", Offset = "0x122F890", VA = "0x122F890")]
	public static void Stop(GameObject target, string type)
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0x122FCA8", Offset = "0x122FCA8", VA = "0x122FCA8")]
	public static void StopByName(GameObject target, string name)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0x1230144", Offset = "0x1230144", VA = "0x1230144")]
	public static void Stop(GameObject target, string type, bool includechildren)
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0x12305FC", Offset = "0x12305FC", VA = "0x12305FC")]
	public static void StopByName(GameObject target, string name, bool includechildren)
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0x1208260", Offset = "0x1208260", VA = "0x1208260")]
	public static Hashtable Hash(params object[] args)
	{
		return null;
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0x1230A34", Offset = "0x1230A34", VA = "0x1230A34")]
	private iTween(Hashtable h)
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0x1230A54", Offset = "0x1230A54", VA = "0x1230A54")]
	private void Awake()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0x1232070", Offset = "0x1232070", VA = "0x1232070")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFDDC", Offset = "0x4FFDDC")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0x12320EC", Offset = "0x12320EC", VA = "0x12320EC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000250")]
	[Address(RVA = "0x1232140", Offset = "0x1232140", VA = "0x1232140")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0x1232190", Offset = "0x1232190", VA = "0x1232190")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0x12322D4", Offset = "0x12322D4", VA = "0x12322D4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0x1232368", Offset = "0x1232368", VA = "0x1232368")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0x122AD34", Offset = "0x122AD34", VA = "0x122AD34")]
	private static void DrawLineHelper(Vector3[] line, Color color, string method)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0x122BE98", Offset = "0x122BE98", VA = "0x122BE98")]
	private static void DrawPathHelper(Vector3[] path, Color color, string method)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0x1229CC4", Offset = "0x1229CC4", VA = "0x1229CC4")]
	private static Vector3[] PathControlPointGenerator(Vector3[] path)
	{
		return null;
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0x122A140", Offset = "0x122A140", VA = "0x122A140")]
	private static Vector3 Interp(Vector3[] pts, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0x1207E84", Offset = "0x1207E84", VA = "0x1207E84")]
	private static void Launch(GameObject target, Hashtable args)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0x1207208", Offset = "0x1207208", VA = "0x1207208")]
	private static Hashtable CleanArgs(Hashtable args)
	{
		return null;
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0x123236C", Offset = "0x123236C", VA = "0x123236C")]
	private static string GenerateID()
	{
		return null;
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0x1230A84", Offset = "0x1230A84", VA = "0x1230A84")]
	private void RetrieveArgs()
	{
	}

	[Token(Token = "0x600025C")]
	[Address(RVA = "0x1232410", Offset = "0x1232410", VA = "0x1232410")]
	private void GetEasingFunction()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0x1223C78", Offset = "0x1223C78", VA = "0x1223C78")]
	private void UpdatePercentage()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0x12231B4", Offset = "0x12231B4", VA = "0x12231B4")]
	private void CallBack(string callbackType)
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0x121C198", Offset = "0x121C198", VA = "0x121C198")]
	private void Dispose()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0x1223540", Offset = "0x1223540", VA = "0x1223540")]
	private void ConflictCheck()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0x1223B78", Offset = "0x1223B78", VA = "0x1223B78")]
	private void EnableKinematic()
	{
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0x1223EAC", Offset = "0x1223EAC", VA = "0x1223EAC")]
	private void DisableKinematic()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0x1232308", Offset = "0x1232308", VA = "0x1232308")]
	private void ResumeDelay()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0x1232A00", Offset = "0x1232A00", VA = "0x1232A00")]
	private float linear(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0x121C3A8", Offset = "0x121C3A8", VA = "0x121C3A8")]
	private float clerp(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0x1232A8C", Offset = "0x1232A8C", VA = "0x1232A8C")]
	private float spring(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0x1232B98", Offset = "0x1232B98", VA = "0x1232B98")]
	private float easeInQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0x1232BB8", Offset = "0x1232BB8", VA = "0x1232BB8")]
	private float easeOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0x1232BE0", Offset = "0x1232BE0", VA = "0x1232BE0")]
	private float easeInOutQuad(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0x1232C44", Offset = "0x1232C44", VA = "0x1232C44")]
	private float easeInCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0x1232C68", Offset = "0x1232C68", VA = "0x1232C68")]
	private float easeOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0x1232C98", Offset = "0x1232C98", VA = "0x1232C98")]
	private float easeInOutCubic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0x1232D00", Offset = "0x1232D00", VA = "0x1232D00")]
	private float easeInQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0x1232D28", Offset = "0x1232D28", VA = "0x1232D28")]
	private float easeOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0x1232D58", Offset = "0x1232D58", VA = "0x1232D58")]
	private float easeInOutQuart(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0x1232DC4", Offset = "0x1232DC4", VA = "0x1232DC4")]
	private float easeInQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0x1232DF0", Offset = "0x1232DF0", VA = "0x1232DF0")]
	private float easeOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0x1232E28", Offset = "0x1232E28", VA = "0x1232E28")]
	private float easeInOutQuint(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0x1232EA0", Offset = "0x1232EA0", VA = "0x1232EA0")]
	private float easeInSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0x1232F4C", Offset = "0x1232F4C", VA = "0x1232F4C")]
	private float easeOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0x1232FF4", Offset = "0x1232FF4", VA = "0x1232FF4")]
	private float easeInOutSine(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0x12330AC", Offset = "0x12330AC", VA = "0x12330AC")]
	private float easeInExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000277")]
	[Address(RVA = "0x1233158", Offset = "0x1233158", VA = "0x1233158")]
	private float easeOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0x1233204", Offset = "0x1233204", VA = "0x1233204")]
	private float easeInOutExpo(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0x1233328", Offset = "0x1233328", VA = "0x1233328")]
	private float easeInCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0x12333EC", Offset = "0x12333EC", VA = "0x12333EC")]
	private float easeOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0x12334AC", Offset = "0x12334AC", VA = "0x12334AC")]
	private float easeInOutCirc(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0x12335CC", Offset = "0x12335CC", VA = "0x12335CC")]
	private float easeInBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0x1233620", Offset = "0x1233620", VA = "0x1233620")]
	private float easeOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0x12336EC", Offset = "0x12336EC", VA = "0x12336EC")]
	private float easeInOutBounce(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0x123378C", Offset = "0x123378C", VA = "0x123378C")]
	private float easeInBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0x12337C4", Offset = "0x12337C4", VA = "0x12337C4")]
	private float easeOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0x1233808", Offset = "0x1233808", VA = "0x1233808")]
	private float easeInOutBack(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0x122221C", Offset = "0x122221C", VA = "0x122221C")]
	private float punch(float amplitude, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0x1233894", Offset = "0x1233894", VA = "0x1233894")]
	private float easeInElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0x12339A0", Offset = "0x12339A0", VA = "0x12339A0")]
	private float easeOutElastic(float start, float end, float value)
	{
		return default(float);
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0x1233AA0", Offset = "0x1233AA0", VA = "0x1233AA0")]
	private float easeInOutElastic(float start, float end, float value)
	{
		return default(float);
	}
}
[Token(Token = "0x2000017")]
public class Skeleton : MonoBehaviour
{
	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Animator animator;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PuppetMaster puppetMaster;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public ConfigurableJoint[] leftLeg;

	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint[] rightLeg;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool leftLegRemoved;

	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool rightLegRemoved;

	[Token(Token = "0x6000287")]
	[Address(RVA = "0x118D270", Offset = "0x118D270", VA = "0x118D270")]
	private void Start()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0x118D3BC", Offset = "0x118D3BC", VA = "0x118D3BC")]
	public void OnRebuild()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0x118D474", Offset = "0x118D474", VA = "0x118D474")]
	private void OnMuscleDisconnected(Muscle m)
	{
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0x118D568", Offset = "0x118D568", VA = "0x118D568")]
	private bool IsLegMuscle(Muscle m, out bool isLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0x118D714", Offset = "0x118D714", VA = "0x118D714")]
	public Skeleton()
	{
	}
}
[Token(Token = "0x2000018")]
public class AlphaButtonClickMask : MonoBehaviour, ICanvasRaycastFilter
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	protected Image _image;

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xF67DDC", Offset = "0xF67DDC", VA = "0xF67DDC")]
	public void Start()
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xF67FE4", Offset = "0xF67FE4", VA = "0xF67FE4", Slot = "4")]
	public bool IsRaycastLocationValid(Vector2 sp, Camera eventCamera)
	{
		return default(bool);
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xF684AC", Offset = "0xF684AC", VA = "0xF684AC")]
	public AlphaButtonClickMask()
	{
	}
}
[Token(Token = "0x2000019")]
public class EventSystemChecker : MonoBehaviour
{
	[Token(Token = "0x600028F")]
	[Address(RVA = "0x178B26C", Offset = "0x178B26C", VA = "0x178B26C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x178B3A4", Offset = "0x178B3A4", VA = "0x178B3A4")]
	public EventSystemChecker()
	{
	}
}
[Token(Token = "0x200001A")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EF6EC", Offset = "0x4EF6EC")]
public class ForcedReset : MonoBehaviour
{
	[Token(Token = "0x6000291")]
	[Address(RVA = "0x178B3AC", Offset = "0x178B3AC", VA = "0x178B3AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x178B498", Offset = "0x178B498", VA = "0x178B498")]
	public ForcedReset()
	{
	}
}
namespace UnityStandardAssets.Utility
{
	[Token(Token = "0x200001B")]
	public class ActivateTrigger : MonoBehaviour
	{
		[Token(Token = "0x20001FE")]
		public enum Mode
		{
			[Token(Token = "0x40009ED")]
			Trigger,
			[Token(Token = "0x40009EE")]
			Replace,
			[Token(Token = "0x40009EF")]
			Activate,
			[Token(Token = "0x40009F0")]
			Enable,
			[Token(Token = "0x40009F1")]
			Animate,
			[Token(Token = "0x40009F2")]
			Deactivate
		}

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Mode action;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public UnityEngine.Object target;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public GameObject source;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int triggerCount;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool repeatTrigger;

		[Token(Token = "0x6000293")]
		[Address(RVA = "0x1C3609C", Offset = "0x1C3609C", VA = "0x1C3609C")]
		private void DoActivateTrigger()
		{
		}

		[Token(Token = "0x6000294")]
		[Address(RVA = "0x1C36564", Offset = "0x1C36564", VA = "0x1C36564")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000295")]
		[Address(RVA = "0x1C36568", Offset = "0x1C36568", VA = "0x1C36568")]
		public ActivateTrigger()
		{
		}
	}
	[Token(Token = "0x200001C")]
	public class AutoMobileShaderSwitch : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20001FF")]
		public class ReplacementDefinition
		{
			[Token(Token = "0x40009F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Shader original;

			[Token(Token = "0x40009F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Shader replacement;

			[Token(Token = "0x6000D86")]
			[Address(RVA = "0x1C37328", Offset = "0x1C37328", VA = "0x1C37328")]
			public ReplacementDefinition()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000200")]
		public class ReplacementList
		{
			[Token(Token = "0x40009F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public ReplacementDefinition[] items;

			[Token(Token = "0x6000D87")]
			[Address(RVA = "0x1C37330", Offset = "0x1C37330", VA = "0x1C37330")]
			public ReplacementList()
			{
			}
		}

		[Token(Token = "0x4000066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private ReplacementList m_ReplacementList;

		[Token(Token = "0x6000296")]
		[Address(RVA = "0x1C36580", Offset = "0x1C36580", VA = "0x1C36580")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000297")]
		[Address(RVA = "0x1C37320", Offset = "0x1C37320", VA = "0x1C37320")]
		public AutoMobileShaderSwitch()
		{
		}
	}
	[Token(Token = "0x200001D")]
	public class AutoMoveAndRotate : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000201")]
		public class Vector3andSpace
		{
			[Token(Token = "0x40009F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 value;

			[Token(Token = "0x40009F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Space space;

			[Token(Token = "0x6000D88")]
			[Address(RVA = "0x1C37574", Offset = "0x1C37574", VA = "0x1C37574")]
			public Vector3andSpace()
			{
			}
		}

		[Token(Token = "0x4000067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3andSpace moveUnitsPerSecond;

		[Token(Token = "0x4000068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3andSpace rotateDegreesPerSecond;

		[Token(Token = "0x4000069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool ignoreTimescale;

		[Token(Token = "0x400006A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_LastRealTime;

		[Token(Token = "0x6000298")]
		[Address(RVA = "0x1C3739C", Offset = "0x1C3739C", VA = "0x1C3739C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000299")]
		[Address(RVA = "0x1C373B8", Offset = "0x1C373B8", VA = "0x1C373B8")]
		private void Update()
		{
		}

		[Token(Token = "0x600029A")]
		[Address(RVA = "0x1C3756C", Offset = "0x1C3756C", VA = "0x1C3756C")]
		public AutoMoveAndRotate()
		{
		}
	}
	[Token(Token = "0x200001E")]
	public class CameraRefocus
	{
		[Token(Token = "0x400006B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Camera Camera;

		[Token(Token = "0x400006C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 Lookatpoint;

		[Token(Token = "0x400006D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform Parent;

		[Token(Token = "0x400006E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 m_OrigCameraPos;

		[Token(Token = "0x400006F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_Refocus;

		[Token(Token = "0x600029B")]
		[Address(RVA = "0x1C37584", Offset = "0x1C37584", VA = "0x1C37584")]
		public CameraRefocus(Camera camera, Transform parent, Vector3 origCameraPos)
		{
		}

		[Token(Token = "0x600029C")]
		[Address(RVA = "0x1C375C4", Offset = "0x1C375C4", VA = "0x1C375C4")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x600029D")]
		[Address(RVA = "0x1C375CC", Offset = "0x1C375CC", VA = "0x1C375CC")]
		public void ChangeParent(Transform parent)
		{
		}

		[Token(Token = "0x600029E")]
		[Address(RVA = "0x1C375D4", Offset = "0x1C375D4", VA = "0x1C375D4")]
		public void GetFocusPoint()
		{
		}

		[Token(Token = "0x600029F")]
		[Address(RVA = "0x1C37764", Offset = "0x1C37764", VA = "0x1C37764")]
		public void SetFocusPoint()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200001F")]
	public class CurveControlledBob
	{
		[Token(Token = "0x4000070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float HorizontalBobRange;

		[Token(Token = "0x4000071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float VerticalBobRange;

		[Token(Token = "0x4000072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve Bobcurve;

		[Token(Token = "0x4000073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float VerticaltoHorizontalRatio;

		[Token(Token = "0x4000074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float m_CyclePositionX;

		[Token(Token = "0x4000075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float m_CyclePositionY;

		[Token(Token = "0x4000076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float m_BobBaseInterval;

		[Token(Token = "0x4000077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4000078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_Time;

		[Token(Token = "0x60002A0")]
		[Address(RVA = "0x1C377DC", Offset = "0x1C377DC", VA = "0x1C377DC")]
		public void Setup(Camera camera, float bobBaseInterval)
		{
		}

		[Token(Token = "0x60002A1")]
		[Address(RVA = "0x1C378D4", Offset = "0x1C378D4", VA = "0x1C378D4")]
		public Vector3 DoHeadBob(float speed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002A2")]
		[Address(RVA = "0x1C37A0C", Offset = "0x1C37A0C", VA = "0x1C37A0C")]
		public CurveControlledBob()
		{
		}
	}
	[Token(Token = "0x2000020")]
	public class DragRigidbody : MonoBehaviour
	{
		[Token(Token = "0x2000202")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8250", Offset = "0x4F8250")]
		private sealed class <DragObject>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x40009F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x40009FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DragRigidbody <>4__this;

			[Token(Token = "0x40009FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float distance;

			[Token(Token = "0x40009FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <oldDrag>5__2;

			[Token(Token = "0x40009FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <oldAngularDrag>5__3;

			[Token(Token = "0x40009FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private Camera <mainCamera>5__4;

			[Token(Token = "0x170000C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D8C")]
				[Address(RVA = "0x1C386EC", Offset = "0x1C386EC", VA = "0x1C386EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D8E")]
				[Address(RVA = "0x1C3876C", Offset = "0x1C3876C", VA = "0x1C3876C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D89")]
			[Address(RVA = "0x1C38320", Offset = "0x1C38320", VA = "0x1C38320")]
			[DebuggerHidden]
			public <DragObject>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6000D8A")]
			[Address(RVA = "0x1C38348", Offset = "0x1C38348", VA = "0x1C38348", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D8B")]
			[Address(RVA = "0x1C3834C", Offset = "0x1C3834C", VA = "0x1C3834C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D8D")]
			[Address(RVA = "0x1C386F4", Offset = "0x1C386F4", VA = "0x1C386F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000079")]
		private const float k_Spring = 50f;

		[Token(Token = "0x400007A")]
		private const float k_Damper = 5f;

		[Token(Token = "0x400007B")]
		private const float k_Drag = 10f;

		[Token(Token = "0x400007C")]
		private const float k_AngularDrag = 5f;

		[Token(Token = "0x400007D")]
		private const float k_Distance = 0.2f;

		[Token(Token = "0x400007E")]
		private const bool k_AttachToCenterOfMass = false;

		[Token(Token = "0x400007F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private SpringJoint m_SpringJoint;

		[Token(Token = "0x60002A3")]
		[Address(RVA = "0x1C37CF4", Offset = "0x1C37CF4", VA = "0x1C37CF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60002A4")]
		[Address(RVA = "0x1C3827C", Offset = "0x1C3827C", VA = "0x1C3827C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFE4C", Offset = "0x4FFE4C")]
		private IEnumerator DragObject(float distance)
		{
			return null;
		}

		[Token(Token = "0x60002A5")]
		[Address(RVA = "0x1C381C4", Offset = "0x1C381C4", VA = "0x1C381C4")]
		private Camera FindCamera()
		{
			return null;
		}

		[Token(Token = "0x60002A6")]
		[Address(RVA = "0x1C38340", Offset = "0x1C38340", VA = "0x1C38340")]
		public DragRigidbody()
		{
		}
	}
	[Token(Token = "0x2000021")]
	public class DynamicShadowSettings : MonoBehaviour
	{
		[Token(Token = "0x4000080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Light sunLight;

		[Token(Token = "0x4000081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minHeight;

		[Token(Token = "0x4000082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float minShadowDistance;

		[Token(Token = "0x4000083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minShadowBias;

		[Token(Token = "0x4000084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxHeight;

		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxShadowDistance;

		[Token(Token = "0x4000086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float maxShadowBias;

		[Token(Token = "0x4000087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float adaptTime;

		[Token(Token = "0x4000088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float m_SmoothHeight;

		[Token(Token = "0x4000089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_ChangeSpeed;

		[Token(Token = "0x400008A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float m_OriginalStrength;

		[Token(Token = "0x60002A7")]
		[Address(RVA = "0x1C38774", Offset = "0x1C38774", VA = "0x1C38774")]
		private void Start()
		{
		}

		[Token(Token = "0x60002A8")]
		[Address(RVA = "0x1C387A4", Offset = "0x1C387A4", VA = "0x1C387A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60002A9")]
		[Address(RVA = "0x1C38AD0", Offset = "0x1C38AD0", VA = "0x1C38AD0")]
		public DynamicShadowSettings()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000022")]
	public class FOVKick
	{
		[Token(Token = "0x2000203")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8260", Offset = "0x4F8260")]
		private sealed class <FOVKickUp>d__9 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40009FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000A00")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000A01")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FOVKick <>4__this;

			[Token(Token = "0x4000A02")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <t>5__2;

			[Token(Token = "0x170000C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D92")]
				[Address(RVA = "0x1C3920C", Offset = "0x1C3920C", VA = "0x1C3920C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D94")]
				[Address(RVA = "0x1C3928C", Offset = "0x1C3928C", VA = "0x1C3928C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D8F")]
			[Address(RVA = "0x1C38CE4", Offset = "0x1C38CE4", VA = "0x1C38CE4")]
			[DebuggerHidden]
			public <FOVKickUp>d__9(int <>1__state)
			{
			}

			[Token(Token = "0x6000D90")]
			[Address(RVA = "0x1C39050", Offset = "0x1C39050", VA = "0x1C39050", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D91")]
			[Address(RVA = "0x1C39054", Offset = "0x1C39054", VA = "0x1C39054", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D93")]
			[Address(RVA = "0x1C39214", Offset = "0x1C39214", VA = "0x1C39214", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000204")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8270", Offset = "0x4F8270")]
		private sealed class <FOVKickDown>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A03")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000A04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000A05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public FOVKick <>4__this;

			[Token(Token = "0x4000A06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <t>5__2;

			[Token(Token = "0x170000CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D98")]
				[Address(RVA = "0x1C38FC8", Offset = "0x1C38FC8", VA = "0x1C38FC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000D9A")]
				[Address(RVA = "0x1C39048", Offset = "0x1C39048", VA = "0x1C39048", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D95")]
			[Address(RVA = "0x1C38D84", Offset = "0x1C38D84", VA = "0x1C38D84")]
			[DebuggerHidden]
			public <FOVKickDown>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000D96")]
			[Address(RVA = "0x1C38DC4", Offset = "0x1C38DC4", VA = "0x1C38DC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D97")]
			[Address(RVA = "0x1C38DC8", Offset = "0x1C38DC8", VA = "0x1C38DC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D99")]
			[Address(RVA = "0x1C38FD0", Offset = "0x1C38FD0", VA = "0x1C38FD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400008B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Camera Camera;

		[Token(Token = "0x400008C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public float originalFov;

		[Token(Token = "0x400008D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float FOVIncrease;

		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float TimeToIncrease;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float TimeToDecrease;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AnimationCurve IncreaseCurve;

		[Token(Token = "0x60002AA")]
		[Address(RVA = "0x1C38B18", Offset = "0x1C38B18", VA = "0x1C38B18")]
		public void Setup(Camera camera)
		{
		}

		[Token(Token = "0x60002AB")]
		[Address(RVA = "0x1C38B50", Offset = "0x1C38B50", VA = "0x1C38B50")]
		private void CheckStatus(Camera camera)
		{
		}

		[Token(Token = "0x60002AC")]
		[Address(RVA = "0x1C38C5C", Offset = "0x1C38C5C", VA = "0x1C38C5C")]
		public void ChangeCamera(Camera camera)
		{
		}

		[Token(Token = "0x60002AD")]
		[Address(RVA = "0x1C38C64", Offset = "0x1C38C64", VA = "0x1C38C64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFEBC", Offset = "0x4FFEBC")]
		public IEnumerator FOVKickUp()
		{
			return null;
		}

		[Token(Token = "0x60002AE")]
		[Address(RVA = "0x1C38D04", Offset = "0x1C38D04", VA = "0x1C38D04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFF2C", Offset = "0x4FFF2C")]
		public IEnumerator FOVKickDown()
		{
			return null;
		}

		[Token(Token = "0x60002AF")]
		[Address(RVA = "0x1C38DA4", Offset = "0x1C38DA4", VA = "0x1C38DA4")]
		public FOVKick()
		{
		}
	}
	[Token(Token = "0x2000023")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EF75C", Offset = "0x4EF75C")]
	public class FPSCounter : MonoBehaviour
	{
		[Token(Token = "0x4000091")]
		private const float fpsMeasurePeriod = 0.5f;

		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int m_FpsAccumulator;

		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_FpsNextPeriod;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_CurrentFps;

		[Token(Token = "0x4000095")]
		private const string display = "{0} FPS";

		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text m_Text;

		[Token(Token = "0x60002B0")]
		[Address(RVA = "0x1C39294", Offset = "0x1C39294", VA = "0x1C39294")]
		private void Start()
		{
		}

		[Token(Token = "0x60002B1")]
		[Address(RVA = "0x1C3930C", Offset = "0x1C3930C", VA = "0x1C3930C")]
		private void Update()
		{
		}

		[Token(Token = "0x60002B2")]
		[Address(RVA = "0x1C39410", Offset = "0x1C39410", VA = "0x1C39410")]
		public FPSCounter()
		{
		}
	}
	[Token(Token = "0x2000024")]
	public class FollowTarget : MonoBehaviour
	{
		[Token(Token = "0x4000097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform target;

		[Token(Token = "0x4000098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 offset;

		[Token(Token = "0x60002B3")]
		[Address(RVA = "0x1C39418", Offset = "0x1C39418", VA = "0x1C39418")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60002B4")]
		[Address(RVA = "0x1C39510", Offset = "0x1C39510", VA = "0x1C39510")]
		public FollowTarget()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000025")]
	public class LerpControlledBob
	{
		[Token(Token = "0x2000205")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8280", Offset = "0x4F8280")]
		private sealed class <DoBobCycle>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000A08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000A09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public LerpControlledBob <>4__this;

			[Token(Token = "0x4000A0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <t>5__2;

			[Token(Token = "0x170000CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000D9E")]
				[Address(RVA = "0x1C39880", Offset = "0x1C39880", VA = "0x1C39880", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DA0")]
				[Address(RVA = "0x1C39900", Offset = "0x1C39900", VA = "0x1C39900", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0x1C395F8", Offset = "0x1C395F8", VA = "0x1C395F8")]
			[DebuggerHidden]
			public <DoBobCycle>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000D9C")]
			[Address(RVA = "0x1C39620", Offset = "0x1C39620", VA = "0x1C39620", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000D9D")]
			[Address(RVA = "0x1C39624", Offset = "0x1C39624", VA = "0x1C39624", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000D9F")]
			[Address(RVA = "0x1C39888", Offset = "0x1C39888", VA = "0x1C39888", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float BobDuration;

		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float BobAmount;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private float m_Offset;

		[Token(Token = "0x60002B5")]
		[Address(RVA = "0x1C39570", Offset = "0x1C39570", VA = "0x1C39570")]
		public float Offset()
		{
			return default(float);
		}

		[Token(Token = "0x60002B6")]
		[Address(RVA = "0x1C39578", Offset = "0x1C39578", VA = "0x1C39578")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x4FFF9C", Offset = "0x4FFF9C")]
		public IEnumerator DoBobCycle()
		{
			return null;
		}

		[Token(Token = "0x60002B7")]
		[Address(RVA = "0x1C39618", Offset = "0x1C39618", VA = "0x1C39618")]
		public LerpControlledBob()
		{
		}
	}
	[Token(Token = "0x2000026")]
	public class ObjectResetter : MonoBehaviour
	{
		[Token(Token = "0x2000206")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8290", Offset = "0x4F8290")]
		private sealed class <ResetCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000A0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000A0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float delay;

			[Token(Token = "0x4000A0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ObjectResetter <>4__this;

			[Token(Token = "0x170000CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DA4")]
				[Address(RVA = "0x1C39E48", Offset = "0x1C39E48", VA = "0x1C39E48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DA6")]
				[Address(RVA = "0x1C39EC8", Offset = "0x1C39EC8", VA = "0x1C39EC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA1")]
			[Address(RVA = "0x1C39B08", Offset = "0x1C39B08", VA = "0x1C39B08")]
			[DebuggerHidden]
			public <ResetCoroutine>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000DA2")]
			[Address(RVA = "0x1C39B30", Offset = "0x1C39B30", VA = "0x1C39B30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DA3")]
			[Address(RVA = "0x1C39B34", Offset = "0x1C39B34", VA = "0x1C39B34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0x1C39E50", Offset = "0x1C39E50", VA = "0x1C39E50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400009C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Vector3 originalPosition;

		[Token(Token = "0x400009D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Quaternion originalRotation;

		[Token(Token = "0x400009E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Transform> originalStructure;

		[Token(Token = "0x400009F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Rigidbody Rigidbody;

		[Token(Token = "0x60002B8")]
		[Address(RVA = "0x1C39908", Offset = "0x1C39908", VA = "0x1C39908")]
		private void Start()
		{
		}

		[Token(Token = "0x60002B9")]
		[Address(RVA = "0x1C39A40", Offset = "0x1C39A40", VA = "0x1C39A40")]
		public void DelayedReset(float delay)
		{
		}

		[Token(Token = "0x60002BA")]
		[Address(RVA = "0x1C39A64", Offset = "0x1C39A64", VA = "0x1C39A64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x50000C", Offset = "0x50000C")]
		public IEnumerator ResetCoroutine(float delay)
		{
			return null;
		}

		[Token(Token = "0x60002BB")]
		[Address(RVA = "0x1C39B28", Offset = "0x1C39B28", VA = "0x1C39B28")]
		public ObjectResetter()
		{
		}
	}
	[Token(Token = "0x2000027")]
	public class ParticleSystemDestroyer : MonoBehaviour
	{
		[Token(Token = "0x2000207")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F82A0", Offset = "0x4F82A0")]
		private sealed class <Start>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000A10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000A11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ParticleSystemDestroyer <>4__this;

			[Token(Token = "0x4000A12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private ParticleSystem[] <systems>5__2;

			[Token(Token = "0x4000A13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <stopTime>5__3;

			[Token(Token = "0x170000D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DAA")]
				[Address(RVA = "0x1C3A3F0", Offset = "0x1C3A3F0", VA = "0x1C3A3F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DAC")]
				[Address(RVA = "0x1C3A470", Offset = "0x1C3A470", VA = "0x1C3A470", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0x1C39F50", Offset = "0x1C39F50", VA = "0x1C39F50")]
			[DebuggerHidden]
			public <Start>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0x1C39F98", Offset = "0x1C39F98", VA = "0x1C39F98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0x1C39F9C", Offset = "0x1C39F9C", VA = "0x1C39F9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0x1C3A3F8", Offset = "0x1C3A3F8", VA = "0x1C3A3F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float minDuration;

		[Token(Token = "0x40000A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float maxDuration;

		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private float m_MaxLifetime;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool m_EarlyStop;

		[Token(Token = "0x60002BC")]
		[Address(RVA = "0x1C39ED0", Offset = "0x1C39ED0", VA = "0x1C39ED0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x50007C", Offset = "0x50007C")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x60002BD")]
		[Address(RVA = "0x1C39F70", Offset = "0x1C39F70", VA = "0x1C39F70")]
		public void Stop()
		{
		}

		[Token(Token = "0x60002BE")]
		[Address(RVA = "0x1C39F7C", Offset = "0x1C39F7C", VA = "0x1C39F7C")]
		public ParticleSystemDestroyer()
		{
		}
	}
	[Token(Token = "0x2000028")]
	public class PlatformSpecificContent : MonoBehaviour
	{
		[Token(Token = "0x2000208")]
		private enum BuildTargetGroup
		{
			[Token(Token = "0x4000A15")]
			Standalone,
			[Token(Token = "0x4000A16")]
			Mobile
		}

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private BuildTargetGroup m_BuildTargetGroup;

		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private GameObject[] m_Content;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private MonoBehaviour[] m_MonoBehaviours;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_ChildrenOfThisObject;

		[Token(Token = "0x60002BF")]
		[Address(RVA = "0x1C3A478", Offset = "0x1C3A478", VA = "0x1C3A478")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002C0")]
		[Address(RVA = "0x1C3A47C", Offset = "0x1C3A47C", VA = "0x1C3A47C")]
		private void CheckEnableContent()
		{
		}

		[Token(Token = "0x60002C1")]
		[Address(RVA = "0x1C3A490", Offset = "0x1C3A490", VA = "0x1C3A490")]
		private void EnableContent(bool enabled)
		{
		}

		[Token(Token = "0x60002C2")]
		[Address(RVA = "0x1C3A90C", Offset = "0x1C3A90C", VA = "0x1C3A90C")]
		public PlatformSpecificContent()
		{
		}
	}
	[Token(Token = "0x2000029")]
	public class SimpleActivatorMenu : MonoBehaviour
	{
		[Token(Token = "0x40000A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Text camSwitchButton;

		[Token(Token = "0x40000A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] objects;

		[Token(Token = "0x40000AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int m_CurrentActiveObject;

		[Token(Token = "0x60002C3")]
		[Address(RVA = "0x1C3A994", Offset = "0x1C3A994", VA = "0x1C3A994")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60002C4")]
		[Address(RVA = "0x1C3AA18", Offset = "0x1C3AA18", VA = "0x1C3AA18")]
		public void NextCamera()
		{
		}

		[Token(Token = "0x60002C5")]
		[Address(RVA = "0x1C3AB48", Offset = "0x1C3AB48", VA = "0x1C3AB48")]
		public SimpleActivatorMenu()
		{
		}
	}
	[Token(Token = "0x200002A")]
	public class SimpleMouseRotator : MonoBehaviour
	{
		[Token(Token = "0x40000AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector2 rotationRange;

		[Token(Token = "0x40000AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rotationSpeed;

		[Token(Token = "0x40000AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float dampingTime;

		[Token(Token = "0x40000AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool autoZeroVerticalOnMobile;

		[Token(Token = "0x40000AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool autoZeroHorizontalOnMobile;

		[Token(Token = "0x40000B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public bool relative;

		[Token(Token = "0x40000B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_TargetAngles;

		[Token(Token = "0x40000B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_FollowAngles;

		[Token(Token = "0x40000B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_FollowVelocity;

		[Token(Token = "0x40000B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion m_OriginalRotation;

		[Token(Token = "0x60002C6")]
		[Address(RVA = "0x1C3AB50", Offset = "0x1C3AB50", VA = "0x1C3AB50")]
		private void Start()
		{
		}

		[Token(Token = "0x60002C7")]
		[Address(RVA = "0x1C3ABA4", Offset = "0x1C3ABA4", VA = "0x1C3ABA4")]
		private void Update()
		{
		}

		[Token(Token = "0x60002C8")]
		[Address(RVA = "0x1C3B10C", Offset = "0x1C3B10C", VA = "0x1C3B10C")]
		public SimpleMouseRotator()
		{
		}
	}
	[Token(Token = "0x200002B")]
	public class SmoothFollow : MonoBehaviour
	{
		[Token(Token = "0x40000B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float distance;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float height;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float rotationDamping;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float heightDamping;

		[Token(Token = "0x60002C9")]
		[Address(RVA = "0x1C3B1F8", Offset = "0x1C3B1F8", VA = "0x1C3B1F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60002CA")]
		[Address(RVA = "0x1C3B1FC", Offset = "0x1C3B1FC", VA = "0x1C3B1FC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60002CB")]
		[Address(RVA = "0x1C3B664", Offset = "0x1C3B664", VA = "0x1C3B664")]
		public SmoothFollow()
		{
		}
	}
	[Token(Token = "0x200002C")]
	public class TimedObjectActivator : MonoBehaviour
	{
		[Token(Token = "0x2000209")]
		public enum Action
		{
			[Token(Token = "0x4000A18")]
			Activate,
			[Token(Token = "0x4000A19")]
			Deactivate,
			[Token(Token = "0x4000A1A")]
			Destroy,
			[Token(Token = "0x4000A1B")]
			ReloadLevel,
			[Token(Token = "0x4000A1C")]
			Call
		}

		[Serializable]
		[Token(Token = "0x200020A")]
		public class Entry
		{
			[Token(Token = "0x4000A1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public GameObject target;

			[Token(Token = "0x4000A1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Action action;

			[Token(Token = "0x4000A1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float delay;

			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0x1C3BEC0", Offset = "0x1C3BEC0", VA = "0x1C3BEC0")]
			public Entry()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200020B")]
		public class Entries
		{
			[Token(Token = "0x4000A20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Entry[] entries;

			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0x1C3BA24", Offset = "0x1C3BA24", VA = "0x1C3BA24")]
			public Entries()
			{
			}
		}

		[Token(Token = "0x200020C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F82B0", Offset = "0x4F82B0")]
		private sealed class <Activate>d__5 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A21")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000A22")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000A23")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Entry entry;

			[Token(Token = "0x170000D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DB2")]
				[Address(RVA = "0x1C3BB1C", Offset = "0x1C3BB1C", VA = "0x1C3BB1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DB4")]
				[Address(RVA = "0x1C3BB9C", Offset = "0x1C3BB9C", VA = "0x1C3BB9C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0x1C3B950", Offset = "0x1C3B950", VA = "0x1C3B950")]
			[DebuggerHidden]
			public <Activate>d__5(int <>1__state)
			{
			}

			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0x1C3BA2C", Offset = "0x1C3BA2C", VA = "0x1C3BA2C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0x1C3BA30", Offset = "0x1C3BA30", VA = "0x1C3BA30", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0x1C3BB24", Offset = "0x1C3BB24", VA = "0x1C3BB24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200020D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F82C0", Offset = "0x4F82C0")]
		private sealed class <Deactivate>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A24")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000A25")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000A26")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Entry entry;

			[Token(Token = "0x170000D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DB8")]
				[Address(RVA = "0x1C3BC94", Offset = "0x1C3BC94", VA = "0x1C3BC94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DBA")]
				[Address(RVA = "0x1C3BD14", Offset = "0x1C3BD14", VA = "0x1C3BD14", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0x1C3B970", Offset = "0x1C3B970", VA = "0x1C3B970")]
			[DebuggerHidden]
			public <Deactivate>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0x1C3BBA4", Offset = "0x1C3BBA4", VA = "0x1C3BBA4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0x1C3BBA8", Offset = "0x1C3BBA8", VA = "0x1C3BBA8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0x1C3BC9C", Offset = "0x1C3BC9C", VA = "0x1C3BC9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200020E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F82D0", Offset = "0x4F82D0")]
		private sealed class <ReloadLevel>d__7 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000A27")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000A28")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000A29")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Entry entry;

			[Token(Token = "0x170000D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DBE")]
				[Address(RVA = "0x1C3BE38", Offset = "0x1C3BE38", VA = "0x1C3BE38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DC0")]
				[Address(RVA = "0x1C3BEB8", Offset = "0x1C3BEB8", VA = "0x1C3BEB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DBB")]
			[Address(RVA = "0x1C3B990", Offset = "0x1C3B990", VA = "0x1C3B990")]
			[DebuggerHidden]
			public <ReloadLevel>d__7(int <>1__state)
			{
			}

			[Token(Token = "0x6000DBC")]
			[Address(RVA = "0x1C3BD1C", Offset = "0x1C3BD1C", VA = "0x1C3BD1C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DBD")]
			[Address(RVA = "0x1C3BD20", Offset = "0x1C3BD20", VA = "0x1C3BD20", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DBF")]
			[Address(RVA = "0x1C3BE40", Offset = "0x1C3BE40", VA = "0x1C3BE40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Entries entries;

		[Token(Token = "0x60002CC")]
		[Address(RVA = "0x1C3B684", Offset = "0x1C3B684", VA = "0x1C3B684")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002CD")]
		[Address(RVA = "0x1C3B7D0", Offset = "0x1C3B7D0", VA = "0x1C3B7D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5000EC", Offset = "0x5000EC")]
		private IEnumerator Activate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x60002CE")]
		[Address(RVA = "0x1C3B850", Offset = "0x1C3B850", VA = "0x1C3B850")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x50015C", Offset = "0x50015C")]
		private IEnumerator Deactivate(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x60002CF")]
		[Address(RVA = "0x1C3B8D0", Offset = "0x1C3B8D0", VA = "0x1C3B8D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5001CC", Offset = "0x5001CC")]
		private IEnumerator ReloadLevel(Entry entry)
		{
			return null;
		}

		[Token(Token = "0x60002D0")]
		[Address(RVA = "0x1C3B9B0", Offset = "0x1C3B9B0", VA = "0x1C3B9B0")]
		public TimedObjectActivator()
		{
		}
	}
	[Token(Token = "0x200002D")]
	public class TimedObjectDestructor : MonoBehaviour
	{
		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float m_TimeOut;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool m_DetachChildren;

		[Token(Token = "0x60002D1")]
		[Address(RVA = "0x1C3BEC8", Offset = "0x1C3BEC8", VA = "0x1C3BEC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002D2")]
		[Address(RVA = "0x1C3BF2C", Offset = "0x1C3BF2C", VA = "0x1C3BF2C")]
		private void DestroyNow()
		{
		}

		[Token(Token = "0x60002D3")]
		[Address(RVA = "0x1C3BFEC", Offset = "0x1C3BFEC", VA = "0x1C3BFEC")]
		public TimedObjectDestructor()
		{
		}
	}
	[Token(Token = "0x200002E")]
	public class WaypointCircuit : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200020F")]
		public class WaypointList
		{
			[Token(Token = "0x4000A2A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public WaypointCircuit circuit;

			[Token(Token = "0x4000A2B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Transform[] items;

			[Token(Token = "0x6000DC1")]
			[Address(RVA = "0x11F8CA8", Offset = "0x11F8CA8", VA = "0x11F8CA8")]
			public WaypointList()
			{
			}
		}

		[Token(Token = "0x2000210")]
		public struct RoutePoint
		{
			[Token(Token = "0x4000A2C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 position;

			[Token(Token = "0x4000A2D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 direction;

			[Token(Token = "0x6000DC2")]
			[Address(RVA = "0x6D0518", Offset = "0x6D0518", VA = "0x6D0518")]
			public RoutePoint(Vector3 position, Vector3 direction)
			{
			}
		}

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public WaypointList waypointList;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool smoothRoute;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int numPoints;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3[] points;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float[] distances;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float editorVisualisationSubsteps;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F85DC", Offset = "0x4F85DC")]
		private float <Length>k__BackingField;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int p0n;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int p1n;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int p2n;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int p3n;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float i;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 P0;

		[Token(Token = "0x40000CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 P1;

		[Token(Token = "0x40000CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 P2;

		[Token(Token = "0x40000CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 P3;

		[Token(Token = "0x1700000E")]
		public float Length
		{
			[Token(Token = "0x60002D4")]
			[Address(RVA = "0x1C3BFFC", Offset = "0x1C3BFFC", VA = "0x1C3BFFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x50023C", Offset = "0x50023C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60002D5")]
			[Address(RVA = "0x1C3C004", Offset = "0x1C3C004", VA = "0x1C3C004")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x50024C", Offset = "0x50024C")]
			private set
			{
			}
		}

		[Token(Token = "0x1700000F")]
		public Transform[] Waypoints
		{
			[Token(Token = "0x60002D6")]
			[Address(RVA = "0x1C3C00C", Offset = "0x1C3C00C", VA = "0x1C3C00C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60002D7")]
		[Address(RVA = "0x1C3C02C", Offset = "0x1C3C02C", VA = "0x1C3C02C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60002D8")]
		[Address(RVA = "0x1C3C51C", Offset = "0x1C3C51C", VA = "0x1C3C51C")]
		public RoutePoint GetRoutePoint(float dist)
		{
			return default(RoutePoint);
		}

		[Token(Token = "0x60002D9")]
		[Address(RVA = "0x1C3C664", Offset = "0x1C3C664", VA = "0x1C3C664")]
		public Vector3 GetRoutePosition(float dist)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002DA")]
		[Address(RVA = "0x1C3CB24", Offset = "0x1C3CB24", VA = "0x1C3CB24")]
		private Vector3 CatmullRom(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float i)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60002DB")]
		[Address(RVA = "0x1C3C094", Offset = "0x1C3C094", VA = "0x1C3C094")]
		private void CachePositionsAndDistances()
		{
		}

		[Token(Token = "0x60002DC")]
		[Address(RVA = "0x1C3CEFC", Offset = "0x1C3CEFC", VA = "0x1C3CEFC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60002DD")]
		[Address(RVA = "0x1C3D2EC", Offset = "0x1C3D2EC", VA = "0x1C3D2EC")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60002DE")]
		[Address(RVA = "0x1C3CF04", Offset = "0x1C3CF04", VA = "0x1C3CF04")]
		private void DrawGizmos(bool selected)
		{
		}

		[Token(Token = "0x60002DF")]
		[Address(RVA = "0x1C3D2F4", Offset = "0x1C3D2F4", VA = "0x1C3D2F4")]
		public WaypointCircuit()
		{
		}
	}
	[Token(Token = "0x200002F")]
	public class WaypointProgressTracker : MonoBehaviour
	{
		[Token(Token = "0x2000211")]
		public enum ProgressStyle
		{
			[Token(Token = "0x4000A2F")]
			SmoothAlongRoute,
			[Token(Token = "0x4000A30")]
			PointToPoint
		}

		[Token(Token = "0x40000CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private WaypointCircuit circuit;

		[Token(Token = "0x40000CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float lookAheadForTargetOffset;

		[Token(Token = "0x40000CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float lookAheadForTargetFactor;

		[Token(Token = "0x40000D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float lookAheadForSpeedOffset;

		[Token(Token = "0x40000D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float lookAheadForSpeedFactor;

		[Token(Token = "0x40000D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ProgressStyle progressStyle;

		[Token(Token = "0x40000D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float pointToPointThreshold;

		[Token(Token = "0x40000D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F865C", Offset = "0x4F865C")]
		private WaypointCircuit.RoutePoint <targetPoint>k__BackingField;

		[Token(Token = "0x40000D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F866C", Offset = "0x4F866C")]
		private WaypointCircuit.RoutePoint <speedPoint>k__BackingField;

		[Token(Token = "0x40000D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F867C", Offset = "0x4F867C")]
		private WaypointCircuit.RoutePoint <progressPoint>k__BackingField;

		[Token(Token = "0x40000D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform target;

		[Token(Token = "0x40000D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float progressDistance;

		[Token(Token = "0x40000D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int progressNum;

		[Token(Token = "0x40000DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 lastPosition;

		[Token(Token = "0x40000DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float speed;

		[Token(Token = "0x17000010")]
		public WaypointCircuit.RoutePoint targetPoint
		{
			[Token(Token = "0x60002E0")]
			[Address(RVA = "0x11F8D14", Offset = "0x11F8D14", VA = "0x11F8D14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x50025C", Offset = "0x50025C")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x60002E1")]
			[Address(RVA = "0x11F8D2C", Offset = "0x11F8D2C", VA = "0x11F8D2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x50026C", Offset = "0x50026C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000011")]
		public WaypointCircuit.RoutePoint speedPoint
		{
			[Token(Token = "0x60002E2")]
			[Address(RVA = "0x11F8D48", Offset = "0x11F8D48", VA = "0x11F8D48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x50027C", Offset = "0x50027C")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x60002E3")]
			[Address(RVA = "0x11F8D60", Offset = "0x11F8D60", VA = "0x11F8D60")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x50028C", Offset = "0x50028C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000012")]
		public WaypointCircuit.RoutePoint progressPoint
		{
			[Token(Token = "0x60002E4")]
			[Address(RVA = "0x11F8D7C", Offset = "0x11F8D7C", VA = "0x11F8D7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x50029C", Offset = "0x50029C")]
			get
			{
				return default(WaypointCircuit.RoutePoint);
			}
			[Token(Token = "0x60002E5")]
			[Address(RVA = "0x11F8D94", Offset = "0x11F8D94", VA = "0x11F8D94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5002AC", Offset = "0x5002AC")]
			private set
			{
			}
		}

		[Token(Token = "0x60002E6")]
		[Address(RVA = "0x11F8DB0", Offset = "0x11F8DB0", VA = "0x11F8DB0")]
		private void Start()
		{
		}

		[Token(Token = "0x60002E7")]
		[Address(RVA = "0x11F8EAC", Offset = "0x11F8EAC", VA = "0x11F8EAC")]
		public void Reset()
		{
		}

		[Token(Token = "0x60002E8")]
		[Address(RVA = "0x11F9008", Offset = "0x11F9008", VA = "0x11F9008")]
		private void Update()
		{
		}

		[Token(Token = "0x60002E9")]
		[Address(RVA = "0x11F97C0", Offset = "0x11F97C0", VA = "0x11F97C0")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60002EA")]
		[Address(RVA = "0x11F99E8", Offset = "0x11F99E8", VA = "0x11F99E8")]
		public WaypointProgressTracker()
		{
		}
	}
}
namespace UnityStandardAssets.ImageEffects
{
	[Token(Token = "0x2000030")]
	public enum AAMode
	{
		[Token(Token = "0x40000DD")]
		FXAA2,
		[Token(Token = "0x40000DE")]
		FXAA3Console,
		[Token(Token = "0x40000DF")]
		FXAA1PresetA,
		[Token(Token = "0x40000E0")]
		FXAA1PresetB,
		[Token(Token = "0x40000E1")]
		NFAA,
		[Token(Token = "0x40000E2")]
		SSAA,
		[Token(Token = "0x40000E3")]
		DLAA
	}
	[Token(Token = "0x2000031")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EF7CC", Offset = "0x4EF7CC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EF7CC", Offset = "0x4EF7CC")]
	public class Antialiasing : PostEffectsBase
	{
		[Token(Token = "0x40000E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AAMode mode;

		[Token(Token = "0x40000E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool showGeneratedNormals;

		[Token(Token = "0x40000E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float offsetScale;

		[Token(Token = "0x40000E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float blurRadius;

		[Token(Token = "0x40000E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float edgeThresholdMin;

		[Token(Token = "0x40000E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float edgeThreshold;

		[Token(Token = "0x40000EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float edgeSharpness;

		[Token(Token = "0x40000EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool dlaaSharp;

		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Shader ssaaShader;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material ssaa;

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Shader dlaaShader;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material dlaa;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Shader nfaaShader;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material nfaa;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Shader shaderFXAAPreset2;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Material materialFXAAPreset2;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Shader shaderFXAAPreset3;

		[Token(Token = "0x40000F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material materialFXAAPreset3;

		[Token(Token = "0x40000F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Shader shaderFXAAII;

		[Token(Token = "0x40000F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material materialFXAAII;

		[Token(Token = "0x40000F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Shader shaderFXAAIII;

		[Token(Token = "0x40000F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Material materialFXAAIII;

		[Token(Token = "0x60002EB")]
		[Address(RVA = "0x119714C", Offset = "0x119714C", VA = "0x119714C")]
		public Material CurrentAAMaterial()
		{
			return null;
		}

		[Token(Token = "0x60002EC")]
		[Address(RVA = "0x11971C0", Offset = "0x11971C0", VA = "0x11971C0", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60002ED")]
		[Address(RVA = "0x11972C4", Offset = "0x11972C4", VA = "0x11972C4")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60002EE")]
		[Address(RVA = "0x11979A8", Offset = "0x11979A8", VA = "0x11979A8")]
		public Antialiasing()
		{
		}
	}
	[Token(Token = "0x2000032")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EF874", Offset = "0x4EF874")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EF874", Offset = "0x4EF874")]
	public class Bloom : PostEffectsBase
	{
		[Token(Token = "0x2000212")]
		public enum LensFlareStyle
		{
			[Token(Token = "0x4000A32")]
			Ghosting,
			[Token(Token = "0x4000A33")]
			Anamorphic,
			[Token(Token = "0x4000A34")]
			Combined
		}

		[Token(Token = "0x2000213")]
		public enum TweakMode
		{
			[Token(Token = "0x4000A36")]
			Basic,
			[Token(Token = "0x4000A37")]
			Complex
		}

		[Token(Token = "0x2000214")]
		public enum HDRBloomMode
		{
			[Token(Token = "0x4000A39")]
			Auto,
			[Token(Token = "0x4000A3A")]
			On,
			[Token(Token = "0x4000A3B")]
			Off
		}

		[Token(Token = "0x2000215")]
		public enum BloomScreenBlendMode
		{
			[Token(Token = "0x4000A3D")]
			Screen,
			[Token(Token = "0x4000A3E")]
			Add
		}

		[Token(Token = "0x2000216")]
		public enum BloomQuality
		{
			[Token(Token = "0x4000A40")]
			Cheap,
			[Token(Token = "0x4000A41")]
			High
		}

		[Token(Token = "0x40000FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TweakMode tweakMode;

		[Token(Token = "0x40000FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x40000FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public HDRBloomMode hdr;

		[Token(Token = "0x40000FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool doHdr;

		[Token(Token = "0x40000FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sepBlurSpread;

		[Token(Token = "0x40000FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BloomQuality quality;

		[Token(Token = "0x4000100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float bloomIntensity;

		[Token(Token = "0x4000101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float bloomThreshold;

		[Token(Token = "0x4000102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color bloomThresholdColor;

		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public int bloomBlurIterations;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x4000105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float flareRotation;

		[Token(Token = "0x4000106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public LensFlareStyle lensflareMode;

		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float hollyStretchWidth;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float lensflareIntensity;

		[Token(Token = "0x4000109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float lensflareThreshold;

		[Token(Token = "0x400010A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float lensFlareSaturation;

		[Token(Token = "0x400010B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Color flareColorA;

		[Token(Token = "0x400010C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Color flareColorB;

		[Token(Token = "0x400010D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Color flareColorC;

		[Token(Token = "0x400010E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Color flareColorD;

		[Token(Token = "0x400010F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Shader lensFlareShader;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Material lensFlareMaterial;

		[Token(Token = "0x4000112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Shader screenBlendShader;

		[Token(Token = "0x4000113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Material screenBlend;

		[Token(Token = "0x4000114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Shader blurAndFlaresShader;

		[Token(Token = "0x4000115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Material blurAndFlaresMaterial;

		[Token(Token = "0x4000116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x4000117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60002EF")]
		[Address(RVA = "0x11979E8", Offset = "0x11979E8", VA = "0x11979E8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F0")]
		[Address(RVA = "0x1197A8C", Offset = "0x1197A8C", VA = "0x1197A8C")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60002F1")]
		[Address(RVA = "0x1199494", Offset = "0x1199494", VA = "0x1199494")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60002F2")]
		[Address(RVA = "0x119917C", Offset = "0x119917C", VA = "0x119917C")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60002F3")]
		[Address(RVA = "0x1198E04", Offset = "0x1198E04", VA = "0x1198E04")]
		private void BrightFilter(float thresh, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60002F4")]
		[Address(RVA = "0x1198CF8", Offset = "0x1198CF8", VA = "0x1198CF8")]
		private void BrightFilter(Color threshColor, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60002F5")]
		[Address(RVA = "0x1198F18", Offset = "0x1198F18", VA = "0x1198F18")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60002F6")]
		[Address(RVA = "0x1199580", Offset = "0x1199580", VA = "0x1199580")]
		public Bloom()
		{
		}
	}
	[Token(Token = "0x2000033")]
	public enum LensflareStyle34
	{
		[Token(Token = "0x4000119")]
		Ghosting,
		[Token(Token = "0x400011A")]
		Anamorphic,
		[Token(Token = "0x400011B")]
		Combined
	}
	[Token(Token = "0x2000034")]
	public enum TweakMode34
	{
		[Token(Token = "0x400011D")]
		Basic,
		[Token(Token = "0x400011E")]
		Complex
	}
	[Token(Token = "0x2000035")]
	public enum HDRBloomMode
	{
		[Token(Token = "0x4000120")]
		Auto,
		[Token(Token = "0x4000121")]
		On,
		[Token(Token = "0x4000122")]
		Off
	}
	[Token(Token = "0x2000036")]
	public enum BloomScreenBlendMode
	{
		[Token(Token = "0x4000124")]
		Screen,
		[Token(Token = "0x4000125")]
		Add
	}
	[Token(Token = "0x2000037")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EF91C", Offset = "0x4EF91C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EF91C", Offset = "0x4EF91C")]
	public class BloomAndFlares : PostEffectsBase
	{
		[Token(Token = "0x4000126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TweakMode34 tweakMode;

		[Token(Token = "0x4000127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BloomScreenBlendMode screenBlendMode;

		[Token(Token = "0x4000128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public HDRBloomMode hdr;

		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool doHdr;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sepBlurSpread;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float useSrcAlphaAsMask;

		[Token(Token = "0x400012C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float bloomIntensity;

		[Token(Token = "0x400012D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float bloomThreshold;

		[Token(Token = "0x400012E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int bloomBlurIterations;

		[Token(Token = "0x400012F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool lensflares;

		[Token(Token = "0x4000130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int hollywoodFlareBlurIterations;

		[Token(Token = "0x4000131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LensflareStyle34 lensflareMode;

		[Token(Token = "0x4000132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float hollyStretchWidth;

		[Token(Token = "0x4000133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float lensflareIntensity;

		[Token(Token = "0x4000134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float lensflareThreshold;

		[Token(Token = "0x4000135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Color flareColorA;

		[Token(Token = "0x4000136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Color flareColorB;

		[Token(Token = "0x4000137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Color flareColorC;

		[Token(Token = "0x4000138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Color flareColorD;

		[Token(Token = "0x4000139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Texture2D lensFlareVignetteMask;

		[Token(Token = "0x400013A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public Shader lensFlareShader;

		[Token(Token = "0x400013B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Material lensFlareMaterial;

		[Token(Token = "0x400013C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Shader vignetteShader;

		[Token(Token = "0x400013D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Material vignetteMaterial;

		[Token(Token = "0x400013E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public Shader separableBlurShader;

		[Token(Token = "0x400013F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Material separableBlurMaterial;

		[Token(Token = "0x4000140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Shader addBrightStuffOneOneShader;

		[Token(Token = "0x4000141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Material addBrightStuffBlendOneOneMaterial;

		[Token(Token = "0x4000142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public Shader screenBlendShader;

		[Token(Token = "0x4000143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Material screenBlend;

		[Token(Token = "0x4000144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public Shader hollywoodFlaresShader;

		[Token(Token = "0x4000145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Material hollywoodFlaresMaterial;

		[Token(Token = "0x4000146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Shader brightPassFilterShader;

		[Token(Token = "0x4000147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Material brightPassFilterMaterial;

		[Token(Token = "0x60002F7")]
		[Address(RVA = "0x1C1A130", Offset = "0x1C1A130", VA = "0x1C1A130", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60002F8")]
		[Address(RVA = "0x1C1A8A0", Offset = "0x1C1A8A0", VA = "0x1C1A8A0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60002F9")]
		[Address(RVA = "0x1C1BD44", Offset = "0x1C1BD44", VA = "0x1C1BD44")]
		private void AddTo(float intensity_, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60002FA")]
		[Address(RVA = "0x1C1BA3C", Offset = "0x1C1BA3C", VA = "0x1C1BA3C")]
		private void BlendFlares(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60002FB")]
		[Address(RVA = "0x1C1B730", Offset = "0x1C1B730", VA = "0x1C1B730")]
		private void BrightFilter(float thresh, float useAlphaAsMask, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60002FC")]
		[Address(RVA = "0x1C1B8A4", Offset = "0x1C1B8A4", VA = "0x1C1B8A4")]
		private void Vignette(float amount, RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x60002FD")]
		[Address(RVA = "0x1C1BE08", Offset = "0x1C1BE08", VA = "0x1C1BE08")]
		public BloomAndFlares()
		{
		}
	}
	[Token(Token = "0x2000038")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EF9C4", Offset = "0x4EF9C4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EF9C4", Offset = "0x4EF9C4")]
	public class BloomOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000217")]
		public enum Resolution
		{
			[Token(Token = "0x4000A43")]
			Low,
			[Token(Token = "0x4000A44")]
			High
		}

		[Token(Token = "0x2000218")]
		public enum BlurType
		{
			[Token(Token = "0x4000A46")]
			Standard,
			[Token(Token = "0x4000A47")]
			Sgx
		}

		[Token(Token = "0x4000148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F868C", Offset = "0x4F868C")]
		public float threshold;

		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F86A4", Offset = "0x4F86A4")]
		public float intensity;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F86C0", Offset = "0x4F86C0")]
		public float blurSize;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Resolution resolution;

		[Token(Token = "0x400014C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F86DC", Offset = "0x4F86DC")]
		public int blurIterations;

		[Token(Token = "0x400014D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BlurType blurType;

		[Token(Token = "0x400014E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Shader fastBloomShader;

		[Token(Token = "0x400014F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material fastBloomMaterial;

		[Token(Token = "0x60002FE")]
		[Address(RVA = "0x1C1C000", Offset = "0x1C1C000", VA = "0x1C1C000", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60002FF")]
		[Address(RVA = "0x1C1C050", Offset = "0x1C1C050", VA = "0x1C1C050")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000300")]
		[Address(RVA = "0x1C1C10C", Offset = "0x1C1C10C", VA = "0x1C1C10C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000301")]
		[Address(RVA = "0x1C1C638", Offset = "0x1C1C638", VA = "0x1C1C638")]
		public BloomOptimized()
		{
		}
	}
	[Token(Token = "0x2000039")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFA6C", Offset = "0x4EFA6C")]
	public class Blur : MonoBehaviour
	{
		[Token(Token = "0x4000150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F86F8", Offset = "0x4F86F8")]
		public int iterations;

		[Token(Token = "0x4000151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8714", Offset = "0x4F8714")]
		public float blurSpread;

		[Token(Token = "0x4000152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Shader blurShader;

		[Token(Token = "0x4000153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Material m_Material;

		[Token(Token = "0x17000013")]
		protected Material material
		{
			[Token(Token = "0x6000302")]
			[Address(RVA = "0x1C1C65C", Offset = "0x1C1C65C", VA = "0x1C1C65C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000303")]
		[Address(RVA = "0x1C1C7C8", Offset = "0x1C1C7C8", VA = "0x1C1C7C8")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000304")]
		[Address(RVA = "0x1C1C8E4", Offset = "0x1C1C8E4", VA = "0x1C1C8E4")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000305")]
		[Address(RVA = "0x1C1C9D4", Offset = "0x1C1C9D4", VA = "0x1C1C9D4")]
		public void FourTapCone(RenderTexture source, RenderTexture dest, int iteration)
		{
		}

		[Token(Token = "0x6000306")]
		[Address(RVA = "0x1C1CBF0", Offset = "0x1C1CBF0", VA = "0x1C1CBF0")]
		private void DownSample4x(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x6000307")]
		[Address(RVA = "0x1C1CDD8", Offset = "0x1C1CDD8", VA = "0x1C1CDD8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000308")]
		[Address(RVA = "0x1C1CF58", Offset = "0x1C1CF58", VA = "0x1C1CF58")]
		public Blur()
		{
		}
	}
	[Token(Token = "0x200003A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EFAB4", Offset = "0x4EFAB4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFAB4", Offset = "0x4EFAB4")]
	public class BlurOptimized : PostEffectsBase
	{
		[Token(Token = "0x2000219")]
		public enum BlurType
		{
			[Token(Token = "0x4000A49")]
			StandardGauss,
			[Token(Token = "0x4000A4A")]
			SgxGauss
		}

		[Token(Token = "0x4000154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F872C", Offset = "0x4F872C")]
		public int downsample;

		[Token(Token = "0x4000155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8744", Offset = "0x4F8744")]
		public float blurSize;

		[Token(Token = "0x4000156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8760", Offset = "0x4F8760")]
		public int blurIterations;

		[Token(Token = "0x4000157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BlurType blurType;

		[Token(Token = "0x4000158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Shader blurShader;

		[Token(Token = "0x4000159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material blurMaterial;

		[Token(Token = "0x600030A")]
		[Address(RVA = "0x1C1CF78", Offset = "0x1C1CF78", VA = "0x1C1CF78", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600030B")]
		[Address(RVA = "0x1C1CFC8", Offset = "0x1C1CFC8", VA = "0x1C1CFC8")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600030C")]
		[Address(RVA = "0x1C1D084", Offset = "0x1C1D084", VA = "0x1C1D084")]
		public void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600030D")]
		[Address(RVA = "0x1C1D540", Offset = "0x1C1D540", VA = "0x1C1D540")]
		public BlurOptimized()
		{
		}
	}
	[Token(Token = "0x200003B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EFB5C", Offset = "0x4EFB5C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFB5C", Offset = "0x4EFB5C")]
	public class CameraMotionBlur : PostEffectsBase
	{
		[Token(Token = "0x200021A")]
		public enum MotionBlurFilter
		{
			[Token(Token = "0x4000A4C")]
			CameraMotion,
			[Token(Token = "0x4000A4D")]
			LocalBlur,
			[Token(Token = "0x4000A4E")]
			Reconstruction,
			[Token(Token = "0x4000A4F")]
			ReconstructionDX11,
			[Token(Token = "0x4000A50")]
			ReconstructionDisc
		}

		[Token(Token = "0x400015A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float MAX_RADIUS;

		[Token(Token = "0x400015B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MotionBlurFilter filterType;

		[Token(Token = "0x400015C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool preview;

		[Token(Token = "0x400015D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 previewScale;

		[Token(Token = "0x400015E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float movementScale;

		[Token(Token = "0x400015F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float rotationScale;

		[Token(Token = "0x4000160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float maxVelocity;

		[Token(Token = "0x4000161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float minVelocity;

		[Token(Token = "0x4000162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float velocityScale;

		[Token(Token = "0x4000163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float softZDistance;

		[Token(Token = "0x4000164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int velocityDownsample;

		[Token(Token = "0x4000165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public LayerMask excludeLayers;

		[Token(Token = "0x4000166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private GameObject tmpCam;

		[Token(Token = "0x4000167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Shader shader;

		[Token(Token = "0x4000168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Shader dx11MotionBlurShader;

		[Token(Token = "0x4000169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Shader replacementClear;

		[Token(Token = "0x400016A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material motionBlurMaterial;

		[Token(Token = "0x400016B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Material dx11MotionBlurMaterial;

		[Token(Token = "0x400016C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture2D noiseTexture;

		[Token(Token = "0x400016D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float jitter;

		[Token(Token = "0x400016E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public bool showVelocity;

		[Token(Token = "0x400016F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float showVelocityScale;

		[Token(Token = "0x4000170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Matrix4x4 currentViewProjMat;

		[Token(Token = "0x4000171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Matrix4x4[] currentStereoViewProjMat;

		[Token(Token = "0x4000172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Matrix4x4 prevViewProjMat;

		[Token(Token = "0x4000173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Matrix4x4[] prevStereoViewProjMat;

		[Token(Token = "0x4000174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private int prevFrameCount;

		[Token(Token = "0x4000175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool wasActive;

		[Token(Token = "0x4000176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 prevFrameForward;

		[Token(Token = "0x4000177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 prevFrameUp;

		[Token(Token = "0x4000178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 prevFramePos;

		[Token(Token = "0x4000179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Camera _camera;

		[Token(Token = "0x600030E")]
		[Address(RVA = "0x1C1D560", Offset = "0x1C1D560", VA = "0x1C1D560")]
		private void CalculateViewProjection()
		{
		}

		[Token(Token = "0x600030F")]
		[Address(RVA = "0x1C1DC78", Offset = "0x1C1DC78", VA = "0x1C1DC78")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000310")]
		[Address(RVA = "0x1C1DFD4", Offset = "0x1C1DFD4", VA = "0x1C1DFD4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000311")]
		[Address(RVA = "0x1C1E0CC", Offset = "0x1C1E0CC", VA = "0x1C1E0CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000312")]
		[Address(RVA = "0x1C1E278", Offset = "0x1C1E278", VA = "0x1C1E278", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000313")]
		[Address(RVA = "0x1C1E354", Offset = "0x1C1E354", VA = "0x1C1E354")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000314")]
		[Address(RVA = "0x1C1DDA4", Offset = "0x1C1DDA4", VA = "0x1C1DDA4")]
		private void Remember()
		{
		}

		[Token(Token = "0x6000315")]
		[Address(RVA = "0x1C21124", Offset = "0x1C21124", VA = "0x1C21124")]
		private Camera GetTmpCam()
		{
			return null;
		}

		[Token(Token = "0x6000316")]
		[Address(RVA = "0x1C21030", Offset = "0x1C21030", VA = "0x1C21030")]
		private void StartFrame()
		{
		}

		[Token(Token = "0x6000317")]
		[Address(RVA = "0x1C21118", Offset = "0x1C21118", VA = "0x1C21118")]
		private static int divRoundUp(int x, int d)
		{
			return default(int);
		}

		[Token(Token = "0x6000318")]
		[Address(RVA = "0x1C215F8", Offset = "0x1C215F8", VA = "0x1C215F8")]
		public CameraMotionBlur()
		{
		}
	}
	[Token(Token = "0x200003C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFC04", Offset = "0x4EFC04")]
	public class ColorCorrectionCurves : PostEffectsBase
	{
		[Token(Token = "0x200021B")]
		public enum ColorCorrectionMode
		{
			[Token(Token = "0x4000A52")]
			Simple,
			[Token(Token = "0x4000A53")]
			Advanced
		}

		[Token(Token = "0x400017A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AnimationCurve redChannel;

		[Token(Token = "0x400017B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve greenChannel;

		[Token(Token = "0x400017C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AnimationCurve blueChannel;

		[Token(Token = "0x400017D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useDepthCorrection;

		[Token(Token = "0x400017E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AnimationCurve zCurve;

		[Token(Token = "0x400017F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve depthRedChannel;

		[Token(Token = "0x4000180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AnimationCurve depthGreenChannel;

		[Token(Token = "0x4000181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve depthBlueChannel;

		[Token(Token = "0x4000182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Material ccMaterial;

		[Token(Token = "0x4000183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Material ccDepthMaterial;

		[Token(Token = "0x4000184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Material selectiveCcMaterial;

		[Token(Token = "0x4000185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Texture2D rgbChannelTex;

		[Token(Token = "0x4000186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Texture2D rgbDepthChannelTex;

		[Token(Token = "0x4000187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Texture2D zCurveTex;

		[Token(Token = "0x4000188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float saturation;

		[Token(Token = "0x4000189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool selectiveCc;

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Color selectiveFromColor;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Color selectiveToColor;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public ColorCorrectionMode mode;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool updateTextures;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Shader colorCorrectionCurvesShader;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Shader simpleColorCorrectionCurvesShader;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public Shader colorCorrectionSelectiveShader;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool updateTexturesOnStartup;

		[Token(Token = "0x600031A")]
		[Address(RVA = "0x1C217A4", Offset = "0x1C217A4", VA = "0x1C217A4")]
		private new void Start()
		{
		}

		[Token(Token = "0x600031B")]
		[Address(RVA = "0x1C217E0", Offset = "0x1C217E0", VA = "0x1C217E0")]
		private void Awake()
		{
		}

		[Token(Token = "0x600031C")]
		[Address(RVA = "0x1C217E4", Offset = "0x1C217E4", VA = "0x1C217E4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600031D")]
		[Address(RVA = "0x1C21AE0", Offset = "0x1C21AE0", VA = "0x1C21AE0")]
		public void UpdateParameters()
		{
		}

		[Token(Token = "0x600031E")]
		[Address(RVA = "0x1C21FD4", Offset = "0x1C21FD4", VA = "0x1C21FD4")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x600031F")]
		[Address(RVA = "0x1C21FD8", Offset = "0x1C21FD8", VA = "0x1C21FD8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000320")]
		[Address(RVA = "0x1C22430", Offset = "0x1C22430", VA = "0x1C22430")]
		public ColorCorrectionCurves()
		{
		}
	}
	[Token(Token = "0x200003D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFC4C", Offset = "0x4EFC4C")]
	public class ColorCorrectionLookup : PostEffectsBase
	{
		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Shader shader;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Material material;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Texture3D converted3DLut;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string basedOnTempTex;

		[Token(Token = "0x6000321")]
		[Address(RVA = "0x1C22CA8", Offset = "0x1C22CA8", VA = "0x1C22CA8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000322")]
		[Address(RVA = "0x1C22CFC", Offset = "0x1C22CFC", VA = "0x1C22CFC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000323")]
		[Address(RVA = "0x1C22DBC", Offset = "0x1C22DBC", VA = "0x1C22DBC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000324")]
		[Address(RVA = "0x1C22E7C", Offset = "0x1C22E7C", VA = "0x1C22E7C")]
		public void SetIdentityLut()
		{
		}

		[Token(Token = "0x6000325")]
		[Address(RVA = "0x1C230FC", Offset = "0x1C230FC", VA = "0x1C230FC")]
		public bool ValidDimensions(Texture2D tex2d)
		{
			return default(bool);
		}

		[Token(Token = "0x6000326")]
		[Address(RVA = "0x1C23238", Offset = "0x1C23238", VA = "0x1C23238")]
		public void Convert(Texture2D temp2DTex, string path)
		{
		}

		[Token(Token = "0x6000327")]
		[Address(RVA = "0x1C236D8", Offset = "0x1C236D8", VA = "0x1C236D8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000328")]
		[Address(RVA = "0x1C23958", Offset = "0x1C23958", VA = "0x1C23958")]
		public ColorCorrectionLookup()
		{
		}
	}
	[Token(Token = "0x200003E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFC94", Offset = "0x4EFC94")]
	public class ColorCorrectionRamp : ImageEffectBase
	{
		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Texture textureRamp;

		[Token(Token = "0x6000329")]
		[Address(RVA = "0x1C239B8", Offset = "0x1C239B8", VA = "0x1C239B8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600032A")]
		[Address(RVA = "0x1C23B64", Offset = "0x1C23B64", VA = "0x1C23B64")]
		public ColorCorrectionRamp()
		{
		}
	}
	[Token(Token = "0x200003F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EFCDC", Offset = "0x4EFCDC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFCDC", Offset = "0x4EFCDC")]
	public class ContrastEnhance : PostEffectsBase
	{
		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F877C", Offset = "0x4F877C")]
		public float intensity;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8794", Offset = "0x4F8794")]
		public float threshold;

		[Token(Token = "0x4000199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Material separableBlurMaterial;

		[Token(Token = "0x400019A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material contrastCompositeMaterial;

		[Token(Token = "0x400019B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F87B0", Offset = "0x4F87B0")]
		public float blurSpread;

		[Token(Token = "0x400019C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader separableBlurShader;

		[Token(Token = "0x400019D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Shader contrastCompositeShader;

		[Token(Token = "0x600032B")]
		[Address(RVA = "0x1C23B74", Offset = "0x1C23B74", VA = "0x1C23B74", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600032C")]
		[Address(RVA = "0x1C23BD8", Offset = "0x1C23BD8", VA = "0x1C23BD8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600032D")]
		[Address(RVA = "0x1C23FE8", Offset = "0x1C23FE8", VA = "0x1C23FE8")]
		public ContrastEnhance()
		{
		}
	}
	[Token(Token = "0x2000040")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFD84", Offset = "0x4EFD84")]
	public class ContrastStretch : MonoBehaviour
	{
		[Token(Token = "0x400019E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F87C8", Offset = "0x4F87C8")]
		public float adaptationSpeed;

		[Token(Token = "0x400019F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F87E4", Offset = "0x4F87E4")]
		public float limitMinimum;

		[Token(Token = "0x40001A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F87FC", Offset = "0x4F87FC")]
		public float limitMaximum;

		[Token(Token = "0x40001A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private RenderTexture[] adaptRenderTex;

		[Token(Token = "0x40001A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int curAdaptIndex;

		[Token(Token = "0x40001A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader shaderLum;

		[Token(Token = "0x40001A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Material m_materialLum;

		[Token(Token = "0x40001A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader shaderReduce;

		[Token(Token = "0x40001A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Material m_materialReduce;

		[Token(Token = "0x40001A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader shaderAdapt;

		[Token(Token = "0x40001A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Material m_materialAdapt;

		[Token(Token = "0x40001A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader shaderApply;

		[Token(Token = "0x40001AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Material m_materialApply;

		[Token(Token = "0x17000014")]
		protected Material materialLum
		{
			[Token(Token = "0x600032E")]
			[Address(RVA = "0x1C23FFC", Offset = "0x1C23FFC", VA = "0x1C23FFC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000015")]
		protected Material materialReduce
		{
			[Token(Token = "0x600032F")]
			[Address(RVA = "0x1C240D4", Offset = "0x1C240D4", VA = "0x1C240D4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000016")]
		protected Material materialAdapt
		{
			[Token(Token = "0x6000330")]
			[Address(RVA = "0x1C241AC", Offset = "0x1C241AC", VA = "0x1C241AC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000017")]
		protected Material materialApply
		{
			[Token(Token = "0x6000331")]
			[Address(RVA = "0x1C24284", Offset = "0x1C24284", VA = "0x1C24284")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000332")]
		[Address(RVA = "0x1C2435C", Offset = "0x1C2435C", VA = "0x1C2435C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000333")]
		[Address(RVA = "0x1C2441C", Offset = "0x1C2441C", VA = "0x1C2441C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000334")]
		[Address(RVA = "0x1C245BC", Offset = "0x1C245BC", VA = "0x1C245BC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000335")]
		[Address(RVA = "0x1C2484C", Offset = "0x1C2484C", VA = "0x1C2484C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000336")]
		[Address(RVA = "0x1C24AF4", Offset = "0x1C24AF4", VA = "0x1C24AF4")]
		private void CalculateAdaptation(Texture curTexture)
		{
		}

		[Token(Token = "0x6000337")]
		[Address(RVA = "0x1C24DAC", Offset = "0x1C24DAC", VA = "0x1C24DAC")]
		public ContrastStretch()
		{
		}
	}
	[Token(Token = "0x2000041")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EFDCC", Offset = "0x4EFDCC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFDCC", Offset = "0x4EFDCC")]
	public class CreaseShading : PostEffectsBase
	{
		[Token(Token = "0x40001AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float intensity;

		[Token(Token = "0x40001AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int softness;

		[Token(Token = "0x40001AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float spread;

		[Token(Token = "0x40001AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader blurShader;

		[Token(Token = "0x40001AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Material blurMaterial;

		[Token(Token = "0x40001B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader depthFetchShader;

		[Token(Token = "0x40001B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Material depthFetchMaterial;

		[Token(Token = "0x40001B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Shader creaseApplyShader;

		[Token(Token = "0x40001B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Material creaseApplyMaterial;

		[Token(Token = "0x6000338")]
		[Address(RVA = "0x1C24E3C", Offset = "0x1C24E3C", VA = "0x1C24E3C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000339")]
		[Address(RVA = "0x1C24EB8", Offset = "0x1C24EB8", VA = "0x1C24EB8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600033A")]
		[Address(RVA = "0x1C2531C", Offset = "0x1C2531C", VA = "0x1C2531C")]
		public CreaseShading()
		{
		}
	}
	[Token(Token = "0x2000042")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EFE74", Offset = "0x4EFE74")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFE74", Offset = "0x4EFE74")]
	public class DepthOfField : PostEffectsBase
	{
		[Token(Token = "0x200021C")]
		public enum BlurType
		{
			[Token(Token = "0x4000A55")]
			DiscBlur,
			[Token(Token = "0x4000A56")]
			DX11
		}

		[Token(Token = "0x200021D")]
		public enum BlurSampleCount
		{
			[Token(Token = "0x4000A58")]
			Low,
			[Token(Token = "0x4000A59")]
			Medium,
			[Token(Token = "0x4000A5A")]
			High
		}

		[Token(Token = "0x40001B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool visualizeFocus;

		[Token(Token = "0x40001B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float focalLength;

		[Token(Token = "0x40001B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float focalSize;

		[Token(Token = "0x40001B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float aperture;

		[Token(Token = "0x40001B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Transform focalTransform;

		[Token(Token = "0x40001B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float maxBlurSize;

		[Token(Token = "0x40001BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool highResolution;

		[Token(Token = "0x40001BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlurType blurType;

		[Token(Token = "0x40001BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BlurSampleCount blurSampleCount;

		[Token(Token = "0x40001BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool nearBlur;

		[Token(Token = "0x40001BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float foregroundOverlap;

		[Token(Token = "0x40001BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader dofHdrShader;

		[Token(Token = "0x40001C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Material dofHdrMaterial;

		[Token(Token = "0x40001C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Shader dx11BokehShader;

		[Token(Token = "0x40001C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Material dx11bokehMaterial;

		[Token(Token = "0x40001C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float dx11BokehThreshold;

		[Token(Token = "0x40001C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float dx11SpawnHeuristic;

		[Token(Token = "0x40001C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Texture2D dx11BokehTexture;

		[Token(Token = "0x40001C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float dx11BokehScale;

		[Token(Token = "0x40001C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float dx11BokehIntensity;

		[Token(Token = "0x40001C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float focalDistance01;

		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private ComputeBuffer cbDrawArgs;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private ComputeBuffer cbPoints;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float internalBlurWidth;

		[Token(Token = "0x40001CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private Camera cachedCamera;

		[Token(Token = "0x600033B")]
		[Address(RVA = "0x1C25338", Offset = "0x1C25338", VA = "0x1C25338", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600033C")]
		[Address(RVA = "0x1C2555C", Offset = "0x1C2555C", VA = "0x1C2555C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600033D")]
		[Address(RVA = "0x1C25604", Offset = "0x1C25604", VA = "0x1C25604")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600033E")]
		[Address(RVA = "0x1C2573C", Offset = "0x1C2573C", VA = "0x1C2573C")]
		private void ReleaseComputeResources()
		{
		}

		[Token(Token = "0x600033F")]
		[Address(RVA = "0x1C253C0", Offset = "0x1C253C0", VA = "0x1C253C0")]
		private void CreateComputeResources()
		{
		}

		[Token(Token = "0x6000340")]
		[Address(RVA = "0x1C25780", Offset = "0x1C25780", VA = "0x1C25780")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6000341")]
		[Address(RVA = "0x1C25964", Offset = "0x1C25964", VA = "0x1C25964")]
		private void WriteCoc(RenderTexture fromTo, bool fgDilate)
		{
		}

		[Token(Token = "0x6000342")]
		[Address(RVA = "0x1C25D40", Offset = "0x1C25D40", VA = "0x1C25D40")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000343")]
		[Address(RVA = "0x1C27D0C", Offset = "0x1C27D0C", VA = "0x1C27D0C")]
		public DepthOfField()
		{
		}
	}
	[Token(Token = "0x2000043")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EFF1C", Offset = "0x4EFF1C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFF1C", Offset = "0x4EFF1C")]
	public class DepthOfFieldDeprecated : PostEffectsBase
	{
		[Token(Token = "0x200021E")]
		public enum Dof34QualitySetting
		{
			[Token(Token = "0x4000A5C")]
			OnlyBackground = 1,
			[Token(Token = "0x4000A5D")]
			BackgroundAndForeground
		}

		[Token(Token = "0x200021F")]
		public enum DofResolution
		{
			[Token(Token = "0x4000A5F")]
			High = 2,
			[Token(Token = "0x4000A60")]
			Medium,
			[Token(Token = "0x4000A61")]
			Low
		}

		[Token(Token = "0x2000220")]
		public enum DofBlurriness
		{
			[Token(Token = "0x4000A63")]
			Low = 1,
			[Token(Token = "0x4000A64")]
			High = 2,
			[Token(Token = "0x4000A65")]
			VeryHigh = 4
		}

		[Token(Token = "0x2000221")]
		public enum BokehDestination
		{
			[Token(Token = "0x4000A67")]
			Background = 1,
			[Token(Token = "0x4000A68")]
			Foreground,
			[Token(Token = "0x4000A69")]
			BackgroundAndForeground
		}

		[Token(Token = "0x40001CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int SMOOTH_DOWNSAMPLE_PASS;

		[Token(Token = "0x40001CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float BOKEH_EXTRA_BLUR;

		[Token(Token = "0x40001CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Dof34QualitySetting quality;

		[Token(Token = "0x40001D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public DofResolution resolution;

		[Token(Token = "0x40001D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool simpleTweakMode;

		[Token(Token = "0x40001D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float focalPoint;

		[Token(Token = "0x40001D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float smoothness;

		[Token(Token = "0x40001D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float focalZDistance;

		[Token(Token = "0x40001D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float focalZStartCurve;

		[Token(Token = "0x40001D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float focalZEndCurve;

		[Token(Token = "0x40001D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float focalStartCurve;

		[Token(Token = "0x40001D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float focalEndCurve;

		[Token(Token = "0x40001D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float focalDistance01;

		[Token(Token = "0x40001DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform objectFocus;

		[Token(Token = "0x40001DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float focalSize;

		[Token(Token = "0x40001DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public DofBlurriness bluriness;

		[Token(Token = "0x40001DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float maxBlurSpread;

		[Token(Token = "0x40001DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float foregroundBlurExtrude;

		[Token(Token = "0x40001DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Shader dofBlurShader;

		[Token(Token = "0x40001E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material dofBlurMaterial;

		[Token(Token = "0x40001E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Shader dofShader;

		[Token(Token = "0x40001E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material dofMaterial;

		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool visualize;

		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BokehDestination bokehDestination;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float widthOverHeight;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float oneOverBaseSize;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool bokeh;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool bokehSupport;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Shader bokehShader;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Texture2D bokehTexture;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public float bokehScale;

		[Token(Token = "0x40001EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float bokehIntensity;

		[Token(Token = "0x40001ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float bokehThresholdContrast;

		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float bokehThresholdLuminance;

		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int bokehDownsample;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Material bokehMaterial;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Camera _camera;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private RenderTexture foregroundTexture;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RenderTexture mediumRezWorkTexture;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private RenderTexture finalDefocus;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private RenderTexture lowRezWorkTexture;

		[Token(Token = "0x40001F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private RenderTexture bokehSource;

		[Token(Token = "0x40001F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private RenderTexture bokehSource2;

		[Token(Token = "0x6000344")]
		[Address(RVA = "0x1C27D78", Offset = "0x1C27D78", VA = "0x1C27D78")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x6000345")]
		[Address(RVA = "0x1C27E70", Offset = "0x1C27E70", VA = "0x1C27E70", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000346")]
		[Address(RVA = "0x1C27F98", Offset = "0x1C27F98", VA = "0x1C27F98")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000347")]
		[Address(RVA = "0x1C28258", Offset = "0x1C28258", VA = "0x1C28258")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000348")]
		[Address(RVA = "0x1C28300", Offset = "0x1C28300", VA = "0x1C28300")]
		private float FocalDistance01(float worldDist)
		{
			return default(float);
		}

		[Token(Token = "0x6000349")]
		[Address(RVA = "0x1C284E4", Offset = "0x1C284E4", VA = "0x1C284E4")]
		private int GetDividerBasedOnQuality()
		{
			return default(int);
		}

		[Token(Token = "0x600034A")]
		[Address(RVA = "0x1C28504", Offset = "0x1C28504", VA = "0x1C28504")]
		private int GetLowResolutionDividerBasedOnQuality(int baseDivider)
		{
			return default(int);
		}

		[Token(Token = "0x600034B")]
		[Address(RVA = "0x1C28528", Offset = "0x1C28528", VA = "0x1C28528")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600034C")]
		[Address(RVA = "0x1C29870", Offset = "0x1C29870", VA = "0x1C29870")]
		private void Blur(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x600034D")]
		[Address(RVA = "0x1C2A1D0", Offset = "0x1C2A1D0", VA = "0x1C2A1D0")]
		private void BlurFg(RenderTexture from, RenderTexture to, DofBlurriness iterations, int blurPass, float spread)
		{
		}

		[Token(Token = "0x600034E")]
		[Address(RVA = "0x1C2A78C", Offset = "0x1C2A78C", VA = "0x1C2A78C")]
		private void BlurHex(RenderTexture from, RenderTexture to, int blurPass, float spread, RenderTexture tmp)
		{
		}

		[Token(Token = "0x600034F")]
		[Address(RVA = "0x1C296CC", Offset = "0x1C296CC", VA = "0x1C296CC")]
		private void Downsample(RenderTexture from, RenderTexture to)
		{
		}

		[Token(Token = "0x6000350")]
		[Address(RVA = "0x1C29BFC", Offset = "0x1C29BFC", VA = "0x1C29BFC")]
		private void AddBokeh(RenderTexture bokehInfo, RenderTexture tempTex, RenderTexture finalTarget)
		{
		}

		[Token(Token = "0x6000351")]
		[Address(RVA = "0x1C2A5A0", Offset = "0x1C2A5A0", VA = "0x1C2A5A0")]
		private void ReleaseTextures()
		{
		}

		[Token(Token = "0x6000352")]
		[Address(RVA = "0x1C29218", Offset = "0x1C29218", VA = "0x1C29218")]
		private void AllocateTextures(bool blurForeground, RenderTexture source, int divider, int lowTexDivider)
		{
		}

		[Token(Token = "0x6000353")]
		[Address(RVA = "0x1C2AD80", Offset = "0x1C2AD80", VA = "0x1C2AD80")]
		public DepthOfFieldDeprecated()
		{
		}
	}
	[Token(Token = "0x2000044")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4EFFC4", Offset = "0x4EFFC4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4EFFC4", Offset = "0x4EFFC4")]
	public class EdgeDetection : PostEffectsBase
	{
		[Token(Token = "0x2000222")]
		public enum EdgeDetectMode
		{
			[Token(Token = "0x4000A6B")]
			TriangleDepthNormals,
			[Token(Token = "0x4000A6C")]
			RobertsCrossDepthNormals,
			[Token(Token = "0x4000A6D")]
			SobelDepth,
			[Token(Token = "0x4000A6E")]
			SobelDepthThin,
			[Token(Token = "0x4000A6F")]
			TriangleLuminance
		}

		[Token(Token = "0x40001F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public EdgeDetectMode mode;

		[Token(Token = "0x40001F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float sensitivityDepth;

		[Token(Token = "0x40001FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float sensitivityNormals;

		[Token(Token = "0x40001FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float lumThreshold;

		[Token(Token = "0x40001FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float edgeExp;

		[Token(Token = "0x40001FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float sampleDist;

		[Token(Token = "0x40001FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float edgesOnly;

		[Token(Token = "0x40001FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color edgesOnlyBgColor;

		[Token(Token = "0x4000200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Shader edgeDetectShader;

		[Token(Token = "0x4000201")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Material edgeDetectMaterial;

		[Token(Token = "0x4000202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private EdgeDetectMode oldMode;

		[Token(Token = "0x6000355")]
		[Address(RVA = "0x1C2AEA4", Offset = "0x1C2AEA4", VA = "0x1C2AEA4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000356")]
		[Address(RVA = "0x1C2B030", Offset = "0x1C2B030", VA = "0x1C2B030")]
		private new void Start()
		{
		}

		[Token(Token = "0x6000357")]
		[Address(RVA = "0x1C2AF18", Offset = "0x1C2AF18", VA = "0x1C2AF18")]
		private void SetCameraFlag()
		{
		}

		[Token(Token = "0x6000358")]
		[Address(RVA = "0x1C2B03C", Offset = "0x1C2B03C", VA = "0x1C2B03C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000359")]
		[Address(RVA = "0x1C2B040", Offset = "0x1C2B040", VA = "0x1C2B040")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600035A")]
		[Address(RVA = "0x1C2B300", Offset = "0x1C2B300", VA = "0x1C2B300")]
		public EdgeDetection()
		{
		}
	}
	[Token(Token = "0x2000045")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F006C", Offset = "0x4F006C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F006C", Offset = "0x4F006C")]
	public class Fisheye : PostEffectsBase
	{
		[Token(Token = "0x4000203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8814", Offset = "0x4F8814")]
		public float strengthX;

		[Token(Token = "0x4000204")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F882C", Offset = "0x4F882C")]
		public float strengthY;

		[Token(Token = "0x4000205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Shader fishEyeShader;

		[Token(Token = "0x4000206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material fisheyeMaterial;

		[Token(Token = "0x600035B")]
		[Address(RVA = "0x1C2B378", Offset = "0x1C2B378", VA = "0x1C2B378", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600035C")]
		[Address(RVA = "0x1C2B3C8", Offset = "0x1C2B3C8", VA = "0x1C2B3C8")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600035D")]
		[Address(RVA = "0x1C2B594", Offset = "0x1C2B594", VA = "0x1C2B594")]
		public Fisheye()
		{
		}
	}
	[Token(Token = "0x2000046")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0114", Offset = "0x4F0114")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0114", Offset = "0x4F0114")]
	internal class GlobalFog : PostEffectsBase
	{
		[Token(Token = "0x4000207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F8844", Offset = "0x4F8844")]
		public bool distanceFog;

		[Token(Token = "0x4000208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F8878", Offset = "0x4F8878")]
		public bool excludeFarPixels;

		[Token(Token = "0x4000209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F88AC", Offset = "0x4F88AC")]
		public bool useRadialDistance;

		[Token(Token = "0x400020A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F88E0", Offset = "0x4F88E0")]
		public bool heightFog;

		[Token(Token = "0x400020B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F8914", Offset = "0x4F8914")]
		public float height;

		[Token(Token = "0x400020C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8948", Offset = "0x4F8948")]
		public float heightDensity;

		[Token(Token = "0x400020D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F8968", Offset = "0x4F8968")]
		public float startDistance;

		[Token(Token = "0x400020E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Shader fogShader;

		[Token(Token = "0x400020F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Material fogMaterial;

		[Token(Token = "0x600035E")]
		[Address(RVA = "0x1C2B5A8", Offset = "0x1C2B5A8", VA = "0x1C2B5A8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600035F")]
		[Address(RVA = "0x1C2B5FC", Offset = "0x1C2B5FC", VA = "0x1C2B5FC")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000360")]
		[Address(RVA = "0x1C2C29C", Offset = "0x1C2C29C", VA = "0x1C2C29C")]
		private static void CustomGraphicsBlit(RenderTexture source, RenderTexture dest, Material fxMaterial, int passNr)
		{
		}

		[Token(Token = "0x6000361")]
		[Address(RVA = "0x1C2C43C", Offset = "0x1C2C43C", VA = "0x1C2C43C")]
		public GlobalFog()
		{
		}
	}
	[Token(Token = "0x2000047")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F01BC", Offset = "0x4F01BC")]
	public class Grayscale : ImageEffectBase
	{
		[Token(Token = "0x4000210")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Texture textureRamp;

		[Token(Token = "0x4000211")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F899C", Offset = "0x4F899C")]
		public float rampOffset;

		[Token(Token = "0x6000362")]
		[Address(RVA = "0x1C2C460", Offset = "0x1C2C460", VA = "0x1C2C460")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000363")]
		[Address(RVA = "0x1C2C578", Offset = "0x1C2C578", VA = "0x1C2C578")]
		public Grayscale()
		{
		}
	}
	[Token(Token = "0x2000048")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0204", Offset = "0x4F0204")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0204", Offset = "0x4F0204")]
	public class ImageEffectBase : MonoBehaviour
	{
		[Token(Token = "0x4000212")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Shader shader;

		[Token(Token = "0x4000213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material m_Material;

		[Token(Token = "0x17000018")]
		protected Material material
		{
			[Token(Token = "0x6000365")]
			[Address(RVA = "0x1C23A8C", Offset = "0x1C23A8C", VA = "0x1C23A8C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000364")]
		[Address(RVA = "0x1C2C580", Offset = "0x1C2C580", VA = "0x1C2C580", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000366")]
		[Address(RVA = "0x1C2C64C", Offset = "0x1C2C64C", VA = "0x1C2C64C", Slot = "5")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000367")]
		[Address(RVA = "0x1C23B6C", Offset = "0x1C23B6C", VA = "0x1C23B6C")]
		public ImageEffectBase()
		{
		}
	}
	[Token(Token = "0x2000049")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F029C", Offset = "0x4F029C")]
	public class ImageEffects
	{
		[Token(Token = "0x6000368")]
		[Address(RVA = "0x1C2C708", Offset = "0x1C2C708", VA = "0x1C2C708")]
		public static void RenderDistortion(Material material, RenderTexture source, RenderTexture destination, float angle, Vector2 center, Vector2 radius)
		{
		}

		[Token(Token = "0x6000369")]
		[Address(RVA = "0x1C2CA8C", Offset = "0x1C2CA8C", VA = "0x1C2CA8C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x5002DC", Offset = "0x5002DC")]
		public static void Blit(RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600036A")]
		[Address(RVA = "0x1C2CB10", Offset = "0x1C2CB10", VA = "0x1C2CB10")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x500310", Offset = "0x500310")]
		public static void BlitWithMaterial(Material material, RenderTexture source, RenderTexture dest)
		{
		}

		[Token(Token = "0x600036B")]
		[Address(RVA = "0x1C2CB9C", Offset = "0x1C2CB9C", VA = "0x1C2CB9C")]
		public ImageEffects()
		{
		}
	}
	[Token(Token = "0x200004A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F02D0", Offset = "0x4F02D0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F02D0", Offset = "0x4F02D0")]
	public class MotionBlur : ImageEffectBase
	{
		[Token(Token = "0x4000214")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F89B8", Offset = "0x4F89B8")]
		public float blurAmount;

		[Token(Token = "0x4000215")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool extraBlur;

		[Token(Token = "0x4000216")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private RenderTexture accumTexture;

		[Token(Token = "0x600036C")]
		[Address(RVA = "0x1C2CBA4", Offset = "0x1C2CBA4", VA = "0x1C2CBA4", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600036D")]
		[Address(RVA = "0x1C2CBA8", Offset = "0x1C2CBA8", VA = "0x1C2CBA8", Slot = "5")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x600036E")]
		[Address(RVA = "0x1C2CC30", Offset = "0x1C2CC30", VA = "0x1C2CC30")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600036F")]
		[Address(RVA = "0x1C2D094", Offset = "0x1C2D094", VA = "0x1C2D094")]
		public MotionBlur()
		{
		}
	}
	[Token(Token = "0x200004B")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0378", Offset = "0x4F0378")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0378", Offset = "0x4F0378")]
	public class NoiseAndGrain : PostEffectsBase
	{
		[Token(Token = "0x4000217")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float intensityMultiplier;

		[Token(Token = "0x4000218")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float generalIntensity;

		[Token(Token = "0x4000219")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float blackIntensity;

		[Token(Token = "0x400021A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float whiteIntensity;

		[Token(Token = "0x400021B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float midGrey;

		[Token(Token = "0x400021C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool dx11Grain;

		[Token(Token = "0x400021D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float softness;

		[Token(Token = "0x400021E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool monochrome;

		[Token(Token = "0x400021F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 intensities;

		[Token(Token = "0x4000220")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 tiling;

		[Token(Token = "0x4000221")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float monochromeTiling;

		[Token(Token = "0x4000222")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public FilterMode filterMode;

		[Token(Token = "0x4000223")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Texture2D noiseTexture;

		[Token(Token = "0x4000224")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Shader noiseShader;

		[Token(Token = "0x4000225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Material noiseMaterial;

		[Token(Token = "0x4000226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Shader dx11NoiseShader;

		[Token(Token = "0x4000227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Material dx11NoiseMaterial;

		[Token(Token = "0x4000228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float TILE_AMOUNT;

		[Token(Token = "0x6000370")]
		[Address(RVA = "0x1C2D0A8", Offset = "0x1C2D0A8", VA = "0x1C2D0A8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000371")]
		[Address(RVA = "0x1C2D120", Offset = "0x1C2D120", VA = "0x1C2D120")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000372")]
		[Address(RVA = "0x1C2DDDC", Offset = "0x1C2DDDC", VA = "0x1C2DDDC")]
		private static void DrawNoiseQuadGrid(RenderTexture source, RenderTexture dest, Material fxMaterial, Texture2D noise, int passNr)
		{
		}

		[Token(Token = "0x6000373")]
		[Address(RVA = "0x1C2E1A0", Offset = "0x1C2E1A0", VA = "0x1C2E1A0")]
		public NoiseAndGrain()
		{
		}
	}
	[Token(Token = "0x200004C")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0420", Offset = "0x4F0420")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0420", Offset = "0x4F0420")]
	public class NoiseAndScratches : MonoBehaviour
	{
		[Token(Token = "0x4000229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool monochrome;

		[Token(Token = "0x400022A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		private bool rgbFallback;

		[Token(Token = "0x400022B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F89D4", Offset = "0x4F89D4")]
		public float grainIntensityMin;

		[Token(Token = "0x400022C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F89F0", Offset = "0x4F89F0")]
		public float grainIntensityMax;

		[Token(Token = "0x400022D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8A0C", Offset = "0x4F8A0C")]
		public float grainSize;

		[Token(Token = "0x400022E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8A2C", Offset = "0x4F8A2C")]
		public float scratchIntensityMin;

		[Token(Token = "0x400022F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8A48", Offset = "0x4F8A48")]
		public float scratchIntensityMax;

		[Token(Token = "0x4000230")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8A64", Offset = "0x4F8A64")]
		public float scratchFPS;

		[Token(Token = "0x4000231")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8A80", Offset = "0x4F8A80")]
		public float scratchJitter;

		[Token(Token = "0x4000232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Texture grainTexture;

		[Token(Token = "0x4000233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture scratchTexture;

		[Token(Token = "0x4000234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Shader shaderRGB;

		[Token(Token = "0x4000235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader shaderYUV;

		[Token(Token = "0x4000236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Material m_MaterialRGB;

		[Token(Token = "0x4000237")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_MaterialYUV;

		[Token(Token = "0x4000238")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float scratchTimeLeft;

		[Token(Token = "0x4000239")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float scratchX;

		[Token(Token = "0x400023A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float scratchY;

		[Token(Token = "0x17000019")]
		protected Material material
		{
			[Token(Token = "0x6000376")]
			[Address(RVA = "0x1C2E444", Offset = "0x1C2E444", VA = "0x1C2E444")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000375")]
		[Address(RVA = "0x1C2E2C8", Offset = "0x1C2E2C8", VA = "0x1C2E2C8")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000377")]
		[Address(RVA = "0x1C2E5CC", Offset = "0x1C2E5CC", VA = "0x1C2E5CC")]
		protected void OnDisable()
		{
		}

		[Token(Token = "0x6000378")]
		[Address(RVA = "0x1C2E6F0", Offset = "0x1C2E6F0", VA = "0x1C2E6F0")]
		private void SanitizeParameters()
		{
		}

		[Token(Token = "0x6000379")]
		[Address(RVA = "0x1C2E840", Offset = "0x1C2E840", VA = "0x1C2E840")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600037A")]
		[Address(RVA = "0x1C2EC80", Offset = "0x1C2EC80", VA = "0x1C2EC80")]
		public NoiseAndScratches()
		{
		}
	}
	[Token(Token = "0x200004D")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F04C8", Offset = "0x4F04C8")]
	public class PostEffectsBase : MonoBehaviour
	{
		[Token(Token = "0x400023B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected bool supportHDRTextures;

		[Token(Token = "0x400023C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		protected bool supportDX11;

		[Token(Token = "0x400023D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		protected bool isSupported;

		[Token(Token = "0x400023E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<Material> createdMaterials;

		[Token(Token = "0x600037B")]
		[Address(RVA = "0x1C1A334", Offset = "0x1C1A334", VA = "0x1C1A334")]
		protected Material CheckShaderAndCreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x600037C")]
		[Address(RVA = "0x1C2ECF4", Offset = "0x1C2ECF4", VA = "0x1C2ECF4")]
		protected Material CreateMaterial(Shader s, Material m2Create)
		{
			return null;
		}

		[Token(Token = "0x600037D")]
		[Address(RVA = "0x1C2EF30", Offset = "0x1C2EF30", VA = "0x1C2EF30")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600037E")]
		[Address(RVA = "0x1C2EF3C", Offset = "0x1C2EF3C", VA = "0x1C2EF3C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600037F")]
		[Address(RVA = "0x1C2EF40", Offset = "0x1C2EF40", VA = "0x1C2EF40")]
		private void RemoveCreatedMaterials()
		{
		}

		[Token(Token = "0x6000380")]
		[Address(RVA = "0x1C2F034", Offset = "0x1C2F034", VA = "0x1C2F034")]
		protected bool CheckSupport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000381")]
		[Address(RVA = "0x1C2F03C", Offset = "0x1C2F03C", VA = "0x1C2F03C", Slot = "4")]
		public virtual bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000382")]
		[Address(RVA = "0x1C217D0", Offset = "0x1C217D0", VA = "0x1C217D0")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000383")]
		[Address(RVA = "0x1C1A1F8", Offset = "0x1C1A1F8", VA = "0x1C1A1F8")]
		protected bool CheckSupport(bool needDepth)
		{
			return default(bool);
		}

		[Token(Token = "0x6000384")]
		[Address(RVA = "0x1C1E2FC", Offset = "0x1C1E2FC", VA = "0x1C1E2FC")]
		protected bool CheckSupport(bool needDepth, bool needHdr)
		{
			return default(bool);
		}

		[Token(Token = "0x6000385")]
		[Address(RVA = "0x1C2F100", Offset = "0x1C2F100", VA = "0x1C2F100")]
		public bool Dx11Support()
		{
			return default(bool);
		}

		[Token(Token = "0x6000386")]
		[Address(RVA = "0x1C1A7E0", Offset = "0x1C1A7E0", VA = "0x1C1A7E0")]
		protected void ReportAutoDisable()
		{
		}

		[Token(Token = "0x6000387")]
		[Address(RVA = "0x1C2F108", Offset = "0x1C2F108", VA = "0x1C2F108")]
		private bool CheckShader(Shader s)
		{
			return default(bool);
		}

		[Token(Token = "0x6000388")]
		[Address(RVA = "0x1C2ECD0", Offset = "0x1C2ECD0", VA = "0x1C2ECD0")]
		protected void NotSupported()
		{
		}

		[Token(Token = "0x6000389")]
		[Address(RVA = "0x1C2F3C4", Offset = "0x1C2F3C4", VA = "0x1C2F3C4")]
		protected void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x600038A")]
		[Address(RVA = "0x1C1BF70", Offset = "0x1C1BF70", VA = "0x1C1BF70")]
		public PostEffectsBase()
		{
		}
	}
	[Token(Token = "0x200004E")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0548", Offset = "0x4F0548")]
	internal class PostEffectsHelper : MonoBehaviour
	{
		[Token(Token = "0x600038B")]
		[Address(RVA = "0x1C2F794", Offset = "0x1C2F794", VA = "0x1C2F794")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600038C")]
		[Address(RVA = "0x1C2F818", Offset = "0x1C2F818", VA = "0x1C2F818")]
		private static void DrawLowLevelPlaneAlignedWithCamera(float dist, RenderTexture source, RenderTexture dest, Material material, Camera cameraForProjectionMatrix)
		{
		}

		[Token(Token = "0x600038D")]
		[Address(RVA = "0x1C2FB48", Offset = "0x1C2FB48", VA = "0x1C2FB48")]
		private static void DrawBorder(RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x600038E")]
		[Address(RVA = "0x1C2FF14", Offset = "0x1C2FF14", VA = "0x1C2FF14")]
		private static void DrawLowLevelQuad(float x1, float x2, float y1, float y2, RenderTexture source, RenderTexture dest, Material material)
		{
		}

		[Token(Token = "0x600038F")]
		[Address(RVA = "0x1C300C0", Offset = "0x1C300C0", VA = "0x1C300C0")]
		public PostEffectsHelper()
		{
		}
	}
	[Token(Token = "0x200004F")]
	internal class Quads
	{
		[Token(Token = "0x400023F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x4000240")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int currentQuads;

		[Token(Token = "0x6000390")]
		[Address(RVA = "0x1C300C8", Offset = "0x1C300C8", VA = "0x1C300C8")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x6000391")]
		[Address(RVA = "0x1C28008", Offset = "0x1C28008", VA = "0x1C28008")]
		public static void Cleanup()
		{
		}

		[Token(Token = "0x6000392")]
		[Address(RVA = "0x1C2AA6C", Offset = "0x1C2AA6C", VA = "0x1C2AA6C")]
		public static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6000393")]
		[Address(RVA = "0x1C30208", Offset = "0x1C30208", VA = "0x1C30208")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x6000394")]
		[Address(RVA = "0x1C30900", Offset = "0x1C30900", VA = "0x1C30900")]
		public Quads()
		{
		}
	}
	[Token(Token = "0x2000050")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F05C8", Offset = "0x4F05C8")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F05C8", Offset = "0x4F05C8")]
	public class ScreenOverlay : PostEffectsBase
	{
		[Token(Token = "0x2000223")]
		public enum OverlayBlendMode
		{
			[Token(Token = "0x4000A71")]
			Additive,
			[Token(Token = "0x4000A72")]
			ScreenBlend,
			[Token(Token = "0x4000A73")]
			Multiply,
			[Token(Token = "0x4000A74")]
			Overlay,
			[Token(Token = "0x4000A75")]
			AlphaBlend
		}

		[Token(Token = "0x4000241")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public OverlayBlendMode blendMode;

		[Token(Token = "0x4000242")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float intensity;

		[Token(Token = "0x4000243")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Texture2D texture;

		[Token(Token = "0x4000244")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Shader overlayShader;

		[Token(Token = "0x4000245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Material overlayMaterial;

		[Token(Token = "0x6000396")]
		[Address(RVA = "0x1C3090C", Offset = "0x1C3090C", VA = "0x1C3090C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x6000397")]
		[Address(RVA = "0x1C3095C", Offset = "0x1C3095C", VA = "0x1C3095C")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x6000398")]
		[Address(RVA = "0x1C30B48", Offset = "0x1C30B48", VA = "0x1C30B48")]
		public ScreenOverlay()
		{
		}
	}
	[Token(Token = "0x2000051")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0670", Offset = "0x4F0670")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0670", Offset = "0x4F0670")]
	internal class ScreenSpaceAmbientObscurance : PostEffectsBase
	{
		[Token(Token = "0x4000246")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8A98", Offset = "0x4F8A98")]
		public float intensity;

		[Token(Token = "0x4000247")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8AB4", Offset = "0x4F8AB4")]
		public float radius;

		[Token(Token = "0x4000248")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8AD4", Offset = "0x4F8AD4")]
		public int blurIterations;

		[Token(Token = "0x4000249")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8AF0", Offset = "0x4F8AF0")]
		public float blurFilterDistance;

		[Token(Token = "0x400024A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8B0C", Offset = "0x4F8B0C")]
		public int downsample;

		[Token(Token = "0x400024B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Texture2D rand;

		[Token(Token = "0x400024C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Shader aoShader;

		[Token(Token = "0x400024D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Material aoMaterial;

		[Token(Token = "0x6000399")]
		[Address(RVA = "0x1C30B5C", Offset = "0x1C30B5C", VA = "0x1C30B5C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x600039A")]
		[Address(RVA = "0x1C30BB0", Offset = "0x1C30BB0", VA = "0x1C30BB0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600039B")]
		[Address(RVA = "0x1C30C70", Offset = "0x1C30C70", VA = "0x1C30C70")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x600039C")]
		[Address(RVA = "0x1C31840", Offset = "0x1C31840", VA = "0x1C31840")]
		public ScreenSpaceAmbientObscurance()
		{
		}
	}
	[Token(Token = "0x2000052")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0718", Offset = "0x4F0718")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0718", Offset = "0x4F0718")]
	public class ScreenSpaceAmbientOcclusion : MonoBehaviour
	{
		[Token(Token = "0x2000224")]
		public enum SSAOSamples
		{
			[Token(Token = "0x4000A77")]
			Low,
			[Token(Token = "0x4000A78")]
			Medium,
			[Token(Token = "0x4000A79")]
			High
		}

		[Token(Token = "0x400024E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8B24", Offset = "0x4F8B24")]
		public float m_Radius;

		[Token(Token = "0x400024F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SSAOSamples m_SampleCount;

		[Token(Token = "0x4000250")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8B40", Offset = "0x4F8B40")]
		public float m_OcclusionIntensity;

		[Token(Token = "0x4000251")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8B5C", Offset = "0x4F8B5C")]
		public int m_Blur;

		[Token(Token = "0x4000252")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8B78", Offset = "0x4F8B78")]
		public int m_Downsampling;

		[Token(Token = "0x4000253")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8B94", Offset = "0x4F8B94")]
		public float m_OcclusionAttenuation;

		[Token(Token = "0x4000254")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8BB0", Offset = "0x4F8BB0")]
		public float m_MinZ;

		[Token(Token = "0x4000255")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader m_SSAOShader;

		[Token(Token = "0x4000256")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Material m_SSAOMaterial;

		[Token(Token = "0x4000257")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Texture2D m_RandomTexture;

		[Token(Token = "0x4000258")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_Supported;

		[Token(Token = "0x600039D")]
		[Address(RVA = "0x1C3186C", Offset = "0x1C3186C", VA = "0x1C3186C")]
		private static Material CreateMaterial(Shader shader)
		{
			return null;
		}

		[Token(Token = "0x600039E")]
		[Address(RVA = "0x1C31938", Offset = "0x1C31938", VA = "0x1C31938")]
		private static void DestroyMaterial(Material mat)
		{
		}

		[Token(Token = "0x600039F")]
		[Address(RVA = "0x1C319E8", Offset = "0x1C319E8", VA = "0x1C319E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003A0")]
		[Address(RVA = "0x1C319F0", Offset = "0x1C319F0", VA = "0x1C319F0")]
		private void Start()
		{
		}

		[Token(Token = "0x60003A1")]
		[Address(RVA = "0x1C31BE8", Offset = "0x1C31BE8", VA = "0x1C31BE8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003A2")]
		[Address(RVA = "0x1C31AF8", Offset = "0x1C31AF8", VA = "0x1C31AF8")]
		private void CreateMaterials()
		{
		}

		[Token(Token = "0x60003A3")]
		[Address(RVA = "0x1C31C8C", Offset = "0x1C31C8C", VA = "0x1C31C8C")]
		[ImageEffectOpaque]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003A4")]
		[Address(RVA = "0x1C325C4", Offset = "0x1C325C4", VA = "0x1C325C4")]
		public ScreenSpaceAmbientOcclusion()
		{
		}
	}
	[Token(Token = "0x2000053")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F07C0", Offset = "0x4F07C0")]
	public class SepiaTone : ImageEffectBase
	{
		[Token(Token = "0x60003A5")]
		[Address(RVA = "0x1C32614", Offset = "0x1C32614", VA = "0x1C32614")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003A6")]
		[Address(RVA = "0x1C326AC", Offset = "0x1C326AC", VA = "0x1C326AC")]
		public SepiaTone()
		{
		}
	}
	[Token(Token = "0x2000054")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0808", Offset = "0x4F0808")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0808", Offset = "0x4F0808")]
	public class SunShafts : PostEffectsBase
	{
		[Token(Token = "0x2000225")]
		public enum SunShaftsResolution
		{
			[Token(Token = "0x4000A7B")]
			Low,
			[Token(Token = "0x4000A7C")]
			Normal,
			[Token(Token = "0x4000A7D")]
			High
		}

		[Token(Token = "0x2000226")]
		public enum ShaftsScreenBlendMode
		{
			[Token(Token = "0x4000A7F")]
			Screen,
			[Token(Token = "0x4000A80")]
			Add
		}

		[Token(Token = "0x4000259")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public SunShaftsResolution resolution;

		[Token(Token = "0x400025A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ShaftsScreenBlendMode screenBlendMode;

		[Token(Token = "0x400025B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Transform sunTransform;

		[Token(Token = "0x400025C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int radialBlurIterations;

		[Token(Token = "0x400025D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color sunColor;

		[Token(Token = "0x400025E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color sunThreshold;

		[Token(Token = "0x400025F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float sunShaftBlurRadius;

		[Token(Token = "0x4000260")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float sunShaftIntensity;

		[Token(Token = "0x4000261")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float maxRadius;

		[Token(Token = "0x4000262")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool useDepthTexture;

		[Token(Token = "0x4000263")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Shader sunShaftsShader;

		[Token(Token = "0x4000264")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Material sunShaftsMaterial;

		[Token(Token = "0x4000265")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public Shader simpleClearShader;

		[Token(Token = "0x4000266")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Material simpleClearMaterial;

		[Token(Token = "0x60003A7")]
		[Address(RVA = "0x1C326B4", Offset = "0x1C326B4", VA = "0x1C326B4", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003A8")]
		[Address(RVA = "0x1C32718", Offset = "0x1C32718", VA = "0x1C32718")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003A9")]
		[Address(RVA = "0x1C33218", Offset = "0x1C33218", VA = "0x1C33218")]
		public SunShafts()
		{
		}
	}
	[Token(Token = "0x2000055")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F08B0", Offset = "0x4F08B0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F08B0", Offset = "0x4F08B0")]
	internal class TiltShift : PostEffectsBase
	{
		[Token(Token = "0x2000227")]
		public enum TiltShiftMode
		{
			[Token(Token = "0x4000A82")]
			TiltShiftMode,
			[Token(Token = "0x4000A83")]
			IrisMode
		}

		[Token(Token = "0x2000228")]
		public enum TiltShiftQuality
		{
			[Token(Token = "0x4000A85")]
			Preview,
			[Token(Token = "0x4000A86")]
			Low,
			[Token(Token = "0x4000A87")]
			Normal,
			[Token(Token = "0x4000A88")]
			High
		}

		[Token(Token = "0x4000267")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TiltShiftMode mode;

		[Token(Token = "0x4000268")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TiltShiftQuality quality;

		[Token(Token = "0x4000269")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8BCC", Offset = "0x4F8BCC")]
		public float blurArea;

		[Token(Token = "0x400026A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8BE8", Offset = "0x4F8BE8")]
		public float maxBlurSize;

		[Token(Token = "0x400026B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8C04", Offset = "0x4F8C04")]
		public int downsample;

		[Token(Token = "0x400026C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Shader tiltShiftShader;

		[Token(Token = "0x400026D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Material tiltShiftMaterial;

		[Token(Token = "0x60003AA")]
		[Address(RVA = "0x1C332C8", Offset = "0x1C332C8", VA = "0x1C332C8", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AB")]
		[Address(RVA = "0x1C33318", Offset = "0x1C33318", VA = "0x1C33318")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003AC")]
		[Address(RVA = "0x1C3367C", Offset = "0x1C3367C", VA = "0x1C3367C")]
		public TiltShift()
		{
		}
	}
	[Token(Token = "0x2000056")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0948", Offset = "0x4F0948")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0948", Offset = "0x4F0948")]
	public class Tonemapping : PostEffectsBase
	{
		[Token(Token = "0x2000229")]
		public enum TonemapperType
		{
			[Token(Token = "0x4000A8A")]
			SimpleReinhard,
			[Token(Token = "0x4000A8B")]
			UserCurve,
			[Token(Token = "0x4000A8C")]
			Hable,
			[Token(Token = "0x4000A8D")]
			Photographic,
			[Token(Token = "0x4000A8E")]
			OptimizedHejiDawson,
			[Token(Token = "0x4000A8F")]
			AdaptiveReinhard,
			[Token(Token = "0x4000A90")]
			AdaptiveReinhardAutoWhite
		}

		[Token(Token = "0x200022A")]
		public enum AdaptiveTexSize
		{
			[Token(Token = "0x4000A92")]
			Square16 = 0x10,
			[Token(Token = "0x4000A93")]
			Square32 = 0x20,
			[Token(Token = "0x4000A94")]
			Square64 = 0x40,
			[Token(Token = "0x4000A95")]
			Square128 = 0x80,
			[Token(Token = "0x4000A96")]
			Square256 = 0x100,
			[Token(Token = "0x4000A97")]
			Square512 = 0x200,
			[Token(Token = "0x4000A98")]
			Square1024 = 0x400
		}

		[Token(Token = "0x400026E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TonemapperType type;

		[Token(Token = "0x400026F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdaptiveTexSize adaptiveTextureSize;

		[Token(Token = "0x4000270")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AnimationCurve remapCurve;

		[Token(Token = "0x4000271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Texture2D curveTex;

		[Token(Token = "0x4000272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float exposureAdjustment;

		[Token(Token = "0x4000273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float middleGrey;

		[Token(Token = "0x4000274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float white;

		[Token(Token = "0x4000275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float adaptionSpeed;

		[Token(Token = "0x4000276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Shader tonemapper;

		[Token(Token = "0x4000277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool validRenderTextureFormat;

		[Token(Token = "0x4000278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Material tonemapMaterial;

		[Token(Token = "0x4000279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private RenderTexture rt;

		[Token(Token = "0x400027A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private RenderTextureFormat rtFormat;

		[Token(Token = "0x60003AD")]
		[Address(RVA = "0x1C3369C", Offset = "0x1C3369C", VA = "0x1C3369C", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003AE")]
		[Address(RVA = "0x1C3381C", Offset = "0x1C3381C", VA = "0x1C3381C")]
		public float UpdateCurve()
		{
			return default(float);
		}

		[Token(Token = "0x60003AF")]
		[Address(RVA = "0x1C33BA8", Offset = "0x1C33BA8", VA = "0x1C33BA8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003B0")]
		[Address(RVA = "0x1C33D48", Offset = "0x1C33D48", VA = "0x1C33D48")]
		private bool CreateInternalRenderTexture()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B1")]
		[Address(RVA = "0x1C33E54", Offset = "0x1C33E54", VA = "0x1C33E54")]
		[ImageEffectTransformsToLDR]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003B2")]
		[Address(RVA = "0x1C34948", Offset = "0x1C34948", VA = "0x1C34948")]
		public Tonemapping()
		{
		}
	}
	[Token(Token = "0x2000057")]
	internal class Triangles
	{
		[Token(Token = "0x400027B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh[] meshes;

		[Token(Token = "0x400027C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static int currentTris;

		[Token(Token = "0x60003B3")]
		[Address(RVA = "0x1C34990", Offset = "0x1C34990", VA = "0x1C34990")]
		private static bool HasMeshes()
		{
			return default(bool);
		}

		[Token(Token = "0x60003B4")]
		[Address(RVA = "0x1C34B10", Offset = "0x1C34B10", VA = "0x1C34B10")]
		private static void Cleanup()
		{
		}

		[Token(Token = "0x60003B5")]
		[Address(RVA = "0x1C34D60", Offset = "0x1C34D60", VA = "0x1C34D60")]
		private static Mesh[] GetMeshes(int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x60003B6")]
		[Address(RVA = "0x1C35074", Offset = "0x1C35074", VA = "0x1C35074")]
		private static Mesh GetMesh(int triCount, int triOffset, int totalWidth, int totalHeight)
		{
			return null;
		}

		[Token(Token = "0x60003B7")]
		[Address(RVA = "0x1C35648", Offset = "0x1C35648", VA = "0x1C35648")]
		public Triangles()
		{
		}
	}
	[Token(Token = "0x2000058")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F09F0", Offset = "0x4F09F0")]
	public class Twirl : ImageEffectBase
	{
		[Token(Token = "0x400027D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 radius;

		[Token(Token = "0x400027E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8C1C", Offset = "0x4F8C1C")]
		public float angle;

		[Token(Token = "0x400027F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 center;

		[Token(Token = "0x60003B9")]
		[Address(RVA = "0x1C35654", Offset = "0x1C35654", VA = "0x1C35654")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003BA")]
		[Address(RVA = "0x1C35698", Offset = "0x1C35698", VA = "0x1C35698")]
		public Twirl()
		{
		}
	}
	[Token(Token = "0x2000059")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0A38", Offset = "0x4F0A38")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0A38", Offset = "0x4F0A38")]
	public class VignetteAndChromaticAberration : PostEffectsBase
	{
		[Token(Token = "0x200022B")]
		public enum AberrationMode
		{
			[Token(Token = "0x4000A9A")]
			Simple,
			[Token(Token = "0x4000A9B")]
			Advanced
		}

		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AberrationMode mode;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float intensity;

		[Token(Token = "0x4000282")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float chromaticAberration;

		[Token(Token = "0x4000283")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float axialAberration;

		[Token(Token = "0x4000284")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float blur;

		[Token(Token = "0x4000285")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blurSpread;

		[Token(Token = "0x4000286")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float luminanceDependency;

		[Token(Token = "0x4000287")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float blurDistance;

		[Token(Token = "0x4000288")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Shader vignetteShader;

		[Token(Token = "0x4000289")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Shader separableBlurShader;

		[Token(Token = "0x400028A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Shader chromAberrationShader;

		[Token(Token = "0x400028B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material m_VignetteMaterial;

		[Token(Token = "0x400028C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Material m_SeparableBlurMaterial;

		[Token(Token = "0x400028D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material m_ChromAberrationMaterial;

		[Token(Token = "0x60003BB")]
		[Address(RVA = "0x1C35720", Offset = "0x1C35720", VA = "0x1C35720", Slot = "4")]
		public override bool CheckResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60003BC")]
		[Address(RVA = "0x1C35798", Offset = "0x1C35798", VA = "0x1C35798")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003BD")]
		[Address(RVA = "0x1C35F94", Offset = "0x1C35F94", VA = "0x1C35F94")]
		public VignetteAndChromaticAberration()
		{
		}
	}
	[Token(Token = "0x200005A")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0AE0", Offset = "0x4F0AE0")]
	public class Vortex : ImageEffectBase
	{
		[Token(Token = "0x400028E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 radius;

		[Token(Token = "0x400028F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float angle;

		[Token(Token = "0x4000290")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 center;

		[Token(Token = "0x60003BE")]
		[Address(RVA = "0x1C35FD0", Offset = "0x1C35FD0", VA = "0x1C35FD0")]
		private void OnRenderImage(RenderTexture source, RenderTexture destination)
		{
		}

		[Token(Token = "0x60003BF")]
		[Address(RVA = "0x1C36014", Offset = "0x1C36014", VA = "0x1C36014")]
		public Vortex()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput
{
	[Token(Token = "0x200005B")]
	public class AxisTouchButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000291")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string axisName;

		[Token(Token = "0x4000292")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float axisValue;

		[Token(Token = "0x4000293")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float responseSpeed;

		[Token(Token = "0x4000294")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float returnToCentreSpeed;

		[Token(Token = "0x4000295")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private AxisTouchButton m_PairedWith;

		[Token(Token = "0x4000296")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CrossPlatformInputManager.VirtualAxis m_Axis;

		[Token(Token = "0x60003C0")]
		[Address(RVA = "0x1192AEC", Offset = "0x1192AEC", VA = "0x1192AEC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003C1")]
		[Address(RVA = "0x1192DE8", Offset = "0x1192DE8", VA = "0x1192DE8")]
		private void FindPairedButton()
		{
		}

		[Token(Token = "0x60003C2")]
		[Address(RVA = "0x1192FA4", Offset = "0x1192FA4", VA = "0x1192FA4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003C3")]
		[Address(RVA = "0x1193044", Offset = "0x1193044", VA = "0x1193044", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60003C4")]
		[Address(RVA = "0x1193150", Offset = "0x1193150", VA = "0x1193150", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60003C5")]
		[Address(RVA = "0x119320C", Offset = "0x119320C", VA = "0x119320C")]
		public AxisTouchButton()
		{
		}
	}
	[Token(Token = "0x200005C")]
	public class ButtonHandler : MonoBehaviour
	{
		[Token(Token = "0x4000297")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string Name;

		[Token(Token = "0x60003C6")]
		[Address(RVA = "0x1193284", Offset = "0x1193284", VA = "0x1193284")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003C7")]
		[Address(RVA = "0x1193288", Offset = "0x1193288", VA = "0x1193288")]
		public void SetDownState()
		{
		}

		[Token(Token = "0x60003C8")]
		[Address(RVA = "0x11933A4", Offset = "0x11933A4", VA = "0x11933A4")]
		public void SetUpState()
		{
		}

		[Token(Token = "0x60003C9")]
		[Address(RVA = "0x11934C0", Offset = "0x11934C0", VA = "0x11934C0")]
		public void SetAxisPositiveState()
		{
		}

		[Token(Token = "0x60003CA")]
		[Address(RVA = "0x11935DC", Offset = "0x11935DC", VA = "0x11935DC")]
		public void SetAxisNeutralState()
		{
		}

		[Token(Token = "0x60003CB")]
		[Address(RVA = "0x11936F8", Offset = "0x11936F8", VA = "0x11936F8")]
		public void SetAxisNegativeState()
		{
		}

		[Token(Token = "0x60003CC")]
		[Address(RVA = "0x1193814", Offset = "0x1193814", VA = "0x1193814")]
		public void Update()
		{
		}

		[Token(Token = "0x60003CD")]
		[Address(RVA = "0x1193818", Offset = "0x1193818", VA = "0x1193818")]
		public ButtonHandler()
		{
		}
	}
	[Token(Token = "0x200005D")]
	public static class CrossPlatformInputManager
	{
		[Token(Token = "0x200022C")]
		public enum ActiveInputMethod
		{
			[Token(Token = "0x4000A9D")]
			Hardware,
			[Token(Token = "0x4000A9E")]
			Touch
		}

		[Token(Token = "0x200022D")]
		public class VirtualAxis
		{
			[Token(Token = "0x4000A9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FEBF8", Offset = "0x4FEBF8")]
			private string <name>k__BackingField;

			[Token(Token = "0x4000AA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private float m_Value;

			[Token(Token = "0x4000AA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FEC08", Offset = "0x4FEC08")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x170000D9")]
			public string name
			{
				[Token(Token = "0x6000DC3")]
				[Address(RVA = "0x11948F0", Offset = "0x11948F0", VA = "0x11948F0")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x502170", Offset = "0x502170")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000DC4")]
				[Address(RVA = "0x11948F8", Offset = "0x11948F8", VA = "0x11948F8")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x502180", Offset = "0x502180")]
				private set
				{
				}
			}

			[Token(Token = "0x170000DA")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6000DC5")]
				[Address(RVA = "0x1194900", Offset = "0x1194900", VA = "0x1194900")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x502190", Offset = "0x502190")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000DC6")]
				[Address(RVA = "0x1194908", Offset = "0x1194908", VA = "0x1194908")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5021A0", Offset = "0x5021A0")]
				private set
				{
				}
			}

			[Token(Token = "0x170000DB")]
			public float GetValue
			{
				[Token(Token = "0x6000DCB")]
				[Address(RVA = "0x1194940", Offset = "0x1194940", VA = "0x1194940")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x170000DC")]
			public float GetValueRaw
			{
				[Token(Token = "0x6000DCC")]
				[Address(RVA = "0x1194948", Offset = "0x1194948", VA = "0x1194948")]
				get
				{
					return default(float);
				}
			}

			[Token(Token = "0x6000DC7")]
			[Address(RVA = "0x1192C98", Offset = "0x1192C98", VA = "0x1192C98")]
			public VirtualAxis(string name)
			{
			}

			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0x1194910", Offset = "0x1194910", VA = "0x1194910")]
			public VirtualAxis(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0x1192FC8", Offset = "0x1192FC8", VA = "0x1192FC8")]
			public void Remove()
			{
			}

			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0x1194938", Offset = "0x1194938", VA = "0x1194938")]
			public void Update(float value)
			{
			}
		}

		[Token(Token = "0x200022E")]
		public class VirtualButton
		{
			[Token(Token = "0x4000AA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FEC18", Offset = "0x4FEC18")]
			private string <name>k__BackingField;

			[Token(Token = "0x4000AA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FEC28", Offset = "0x4FEC28")]
			private bool <matchWithInputManager>k__BackingField;

			[Token(Token = "0x4000AA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int m_LastPressedFrame;

			[Token(Token = "0x4000AA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int m_ReleasedFrame;

			[Token(Token = "0x4000AA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private bool m_Pressed;

			[Token(Token = "0x170000DD")]
			public string name
			{
				[Token(Token = "0x6000DCD")]
				[Address(RVA = "0x1194950", Offset = "0x1194950", VA = "0x1194950")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5021B0", Offset = "0x5021B0")]
				get
				{
					return null;
				}
				[Token(Token = "0x6000DCE")]
				[Address(RVA = "0x1194958", Offset = "0x1194958", VA = "0x1194958")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5021C0", Offset = "0x5021C0")]
				private set
				{
				}
			}

			[Token(Token = "0x170000DE")]
			public bool matchWithInputManager
			{
				[Token(Token = "0x6000DCF")]
				[Address(RVA = "0x1194960", Offset = "0x1194960", VA = "0x1194960")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5021D0", Offset = "0x5021D0")]
				get
				{
					return default(bool);
				}
				[Token(Token = "0x6000DD0")]
				[Address(RVA = "0x1194968", Offset = "0x1194968", VA = "0x1194968")]
				[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5021E0", Offset = "0x5021E0")]
				private set
				{
				}
			}

			[Token(Token = "0x170000DF")]
			public bool GetButton
			{
				[Token(Token = "0x6000DD6")]
				[Address(RVA = "0x1194AB0", Offset = "0x1194AB0", VA = "0x1194AB0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000E0")]
			public bool GetButtonDown
			{
				[Token(Token = "0x6000DD7")]
				[Address(RVA = "0x1194AB8", Offset = "0x1194AB8", VA = "0x1194AB8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x170000E1")]
			public bool GetButtonUp
			{
				[Token(Token = "0x6000DD8")]
				[Address(RVA = "0x1194AE0", Offset = "0x1194AE0", VA = "0x1194AE0")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000DD1")]
			[Address(RVA = "0x1194970", Offset = "0x1194970", VA = "0x1194970")]
			public VirtualButton(string name)
			{
			}

			[Token(Token = "0x6000DD2")]
			[Address(RVA = "0x11949A8", Offset = "0x11949A8", VA = "0x11949A8")]
			public VirtualButton(string name, bool matchToInputSettings)
			{
			}

			[Token(Token = "0x6000DD3")]
			[Address(RVA = "0x11949E0", Offset = "0x11949E0", VA = "0x11949E0")]
			public void Pressed()
			{
			}

			[Token(Token = "0x6000DD4")]
			[Address(RVA = "0x1194A10", Offset = "0x1194A10", VA = "0x1194A10")]
			public void Released()
			{
			}

			[Token(Token = "0x6000DD5")]
			[Address(RVA = "0x1194A34", Offset = "0x1194A34", VA = "0x1194A34")]
			public void Remove()
			{
			}
		}

		[Token(Token = "0x4000298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static VirtualInput activeInput;

		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static VirtualInput s_TouchInput;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static VirtualInput s_HardwareInput;

		[Token(Token = "0x1700001A")]
		public static Vector3 mousePosition
		{
			[Token(Token = "0x60003E3")]
			[Address(RVA = "0x119450C", Offset = "0x119450C", VA = "0x119450C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60003CE")]
		[Address(RVA = "0x1193820", Offset = "0x1193820", VA = "0x1193820")]
		static CrossPlatformInputManager()
		{
		}

		[Token(Token = "0x60003CF")]
		[Address(RVA = "0x11938D0", Offset = "0x11938D0", VA = "0x11938D0")]
		public static void SwitchActiveInputMethod(ActiveInputMethod activeInputMethod)
		{
		}

		[Token(Token = "0x60003D0")]
		[Address(RVA = "0x1192C04", Offset = "0x1192C04", VA = "0x1192C04")]
		public static bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D1")]
		[Address(RVA = "0x1193A14", Offset = "0x1193A14", VA = "0x1193A14")]
		public static bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60003D2")]
		[Address(RVA = "0x1192CC0", Offset = "0x1192CC0", VA = "0x1192CC0")]
		public static void RegisterVirtualAxis(VirtualAxis axis)
		{
		}

		[Token(Token = "0x60003D3")]
		[Address(RVA = "0x1193C84", Offset = "0x1193C84", VA = "0x1193C84")]
		public static void RegisterVirtualButton(VirtualButton button)
		{
		}

		[Token(Token = "0x60003D4")]
		[Address(RVA = "0x1193E80", Offset = "0x1193E80", VA = "0x1193E80")]
		public static void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x60003D5")]
		[Address(RVA = "0x1194014", Offset = "0x1194014", VA = "0x1194014")]
		public static void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x60003D6")]
		[Address(RVA = "0x1192D54", Offset = "0x1192D54", VA = "0x1192D54")]
		public static VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x60003D7")]
		[Address(RVA = "0x118EB7C", Offset = "0x118EB7C", VA = "0x118EB7C")]
		public static float GetAxis(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60003D8")]
		[Address(RVA = "0x11942A8", Offset = "0x11942A8", VA = "0x11942A8")]
		public static float GetAxisRaw(string name)
		{
			return default(float);
		}

		[Token(Token = "0x60003D9")]
		[Address(RVA = "0x1194200", Offset = "0x1194200", VA = "0x1194200")]
		private static float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x60003DA")]
		[Address(RVA = "0x1194324", Offset = "0x1194324", VA = "0x1194324")]
		public static bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DB")]
		[Address(RVA = "0x118DDA8", Offset = "0x118DDA8", VA = "0x118DDA8")]
		public static bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DC")]
		[Address(RVA = "0x11943C4", Offset = "0x11943C4", VA = "0x11943C4")]
		public static bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x60003DD")]
		[Address(RVA = "0x1193304", Offset = "0x1193304", VA = "0x1193304")]
		public static void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x60003DE")]
		[Address(RVA = "0x1193420", Offset = "0x1193420", VA = "0x1193420")]
		public static void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x60003DF")]
		[Address(RVA = "0x119353C", Offset = "0x119353C", VA = "0x119353C")]
		public static void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x60003E0")]
		[Address(RVA = "0x1193774", Offset = "0x1193774", VA = "0x1193774")]
		public static void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x60003E1")]
		[Address(RVA = "0x1193658", Offset = "0x1193658", VA = "0x1193658")]
		public static void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x60003E2")]
		[Address(RVA = "0x1194464", Offset = "0x1194464", VA = "0x1194464")]
		public static void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x60003E4")]
		[Address(RVA = "0x11945AC", Offset = "0x11945AC", VA = "0x11945AC")]
		public static void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x60003E5")]
		[Address(RVA = "0x11946C0", Offset = "0x11946C0", VA = "0x11946C0")]
		public static void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x60003E6")]
		[Address(RVA = "0x11947D8", Offset = "0x11947D8", VA = "0x11947D8")]
		public static void SetVirtualMousePositionZ(float f)
		{
		}
	}
	[Token(Token = "0x200005E")]
	public class InputAxisScrollbar : MonoBehaviour
	{
		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string axis;

		[Token(Token = "0x60003E7")]
		[Address(RVA = "0x1194B08", Offset = "0x1194B08", VA = "0x1194B08")]
		private void Update()
		{
		}

		[Token(Token = "0x60003E8")]
		[Address(RVA = "0x1194B0C", Offset = "0x1194B0C", VA = "0x1194B0C")]
		public void HandleInput(float value)
		{
		}

		[Token(Token = "0x60003E9")]
		[Address(RVA = "0x1194BA8", Offset = "0x1194BA8", VA = "0x1194BA8")]
		public InputAxisScrollbar()
		{
		}
	}
	[Token(Token = "0x200005F")]
	public class Joystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IDragHandler
	{
		[Token(Token = "0x200022F")]
		public enum AxisOption
		{
			[Token(Token = "0x4000AA8")]
			Both,
			[Token(Token = "0x4000AA9")]
			OnlyHorizontal,
			[Token(Token = "0x4000AAA")]
			OnlyVertical
		}

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int MovementRange;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AxisOption axesToUse;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string horizontalAxisName;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string verticalAxisName;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_UseX;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool m_UseY;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x60003EA")]
		[Address(RVA = "0x1194BB0", Offset = "0x1194BB0", VA = "0x1194BB0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003EB")]
		[Address(RVA = "0x1194D38", Offset = "0x1194D38", VA = "0x1194D38")]
		private void Start()
		{
		}

		[Token(Token = "0x60003EC")]
		[Address(RVA = "0x1194D84", Offset = "0x1194D84", VA = "0x1194D84")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x60003ED")]
		[Address(RVA = "0x1194BB4", Offset = "0x1194BB4", VA = "0x1194BB4")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60003EE")]
		[Address(RVA = "0x1194EC8", Offset = "0x1194EC8", VA = "0x1194EC8", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60003EF")]
		[Address(RVA = "0x1195100", Offset = "0x1195100", VA = "0x1195100", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x60003F0")]
		[Address(RVA = "0x1195164", Offset = "0x1195164", VA = "0x1195164", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x60003F1")]
		[Address(RVA = "0x1195168", Offset = "0x1195168", VA = "0x1195168")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003F2")]
		[Address(RVA = "0x11951C4", Offset = "0x11951C4", VA = "0x11951C4")]
		public Joystick()
		{
		}
	}
	[Token(Token = "0x2000060")]
	[ExecuteInEditMode]
	public class MobileControlRig : MonoBehaviour
	{
		[Token(Token = "0x60003F3")]
		[Address(RVA = "0x1195244", Offset = "0x1195244", VA = "0x1195244")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003F4")]
		[Address(RVA = "0x1195254", Offset = "0x1195254", VA = "0x1195254")]
		private void Start()
		{
		}

		[Token(Token = "0x60003F5")]
		[Address(RVA = "0x119524C", Offset = "0x119524C", VA = "0x119524C")]
		private void CheckEnableControlRig()
		{
		}

		[Token(Token = "0x60003F6")]
		[Address(RVA = "0x11953AC", Offset = "0x11953AC", VA = "0x11953AC")]
		private void EnableControlRig(bool enabled)
		{
		}

		[Token(Token = "0x60003F7")]
		[Address(RVA = "0x11956DC", Offset = "0x11956DC", VA = "0x11956DC")]
		public MobileControlRig()
		{
		}
	}
	[Token(Token = "0x2000061")]
	public class TiltInput : MonoBehaviour
	{
		[Token(Token = "0x2000230")]
		public enum AxisOptions
		{
			[Token(Token = "0x4000AAC")]
			ForwardAxis,
			[Token(Token = "0x4000AAD")]
			SidewaysAxis
		}

		[Serializable]
		[Token(Token = "0x2000231")]
		public class AxisMapping
		{
			[Token(Token = "0x2000287")]
			public enum MappingType
			{
				[Token(Token = "0x4000BFB")]
				NamedAxis,
				[Token(Token = "0x4000BFC")]
				MousePositionX,
				[Token(Token = "0x4000BFD")]
				MousePositionY,
				[Token(Token = "0x4000BFE")]
				MousePositionZ
			}

			[Token(Token = "0x4000AAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public MappingType type;

			[Token(Token = "0x4000AAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public string axisName;

			[Token(Token = "0x6000DD9")]
			[Address(RVA = "0x11968D4", Offset = "0x11968D4", VA = "0x11968D4")]
			public AxisMapping()
			{
			}
		}

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AxisMapping mapping;

		[Token(Token = "0x40002A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AxisOptions tiltAroundAxis;

		[Token(Token = "0x40002A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fullTiltAngle;

		[Token(Token = "0x40002A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float centreAngleOffset;

		[Token(Token = "0x40002A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private CrossPlatformInputManager.VirtualAxis m_SteerAxis;

		[Token(Token = "0x60003F8")]
		[Address(RVA = "0x11964CC", Offset = "0x11964CC", VA = "0x11964CC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003F9")]
		[Address(RVA = "0x11965A4", Offset = "0x11965A4", VA = "0x11965A4")]
		private void Update()
		{
		}

		[Token(Token = "0x60003FA")]
		[Address(RVA = "0x119689C", Offset = "0x119689C", VA = "0x119689C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60003FB")]
		[Address(RVA = "0x11968C0", Offset = "0x11968C0", VA = "0x11968C0")]
		public TiltInput()
		{
		}
	}
	[Token(Token = "0x2000062")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0B38", Offset = "0x4F0B38")]
	public class TouchPad : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x2000232")]
		public enum AxisOption
		{
			[Token(Token = "0x4000AB1")]
			Both,
			[Token(Token = "0x4000AB2")]
			OnlyHorizontal,
			[Token(Token = "0x4000AB3")]
			OnlyVertical
		}

		[Token(Token = "0x2000233")]
		public enum ControlStyle
		{
			[Token(Token = "0x4000AB5")]
			Absolute,
			[Token(Token = "0x4000AB6")]
			Relative,
			[Token(Token = "0x4000AB7")]
			Swipe
		}

		[Token(Token = "0x40002AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AxisOption axesToUse;

		[Token(Token = "0x40002AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ControlStyle controlStyle;

		[Token(Token = "0x40002AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string horizontalAxisName;

		[Token(Token = "0x40002AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string verticalAxisName;

		[Token(Token = "0x40002AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Xsensitivity;

		[Token(Token = "0x40002AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float Ysensitivity;

		[Token(Token = "0x40002B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 m_StartPos;

		[Token(Token = "0x40002B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector2 m_PreviousDelta;

		[Token(Token = "0x40002B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 m_JoytickOutput;

		[Token(Token = "0x40002B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool m_UseX;

		[Token(Token = "0x40002B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		private bool m_UseY;

		[Token(Token = "0x40002B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private CrossPlatformInputManager.VirtualAxis m_HorizontalVirtualAxis;

		[Token(Token = "0x40002B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private CrossPlatformInputManager.VirtualAxis m_VerticalVirtualAxis;

		[Token(Token = "0x40002B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool m_Dragging;

		[Token(Token = "0x40002B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_Id;

		[Token(Token = "0x40002B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector2 m_PreviousTouchPos;

		[Token(Token = "0x40002BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 m_Center;

		[Token(Token = "0x40002BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Image m_Image;

		[Token(Token = "0x60003FC")]
		[Address(RVA = "0x11968DC", Offset = "0x11968DC", VA = "0x11968DC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60003FD")]
		[Address(RVA = "0x1196A64", Offset = "0x1196A64", VA = "0x1196A64")]
		private void Start()
		{
		}

		[Token(Token = "0x60003FE")]
		[Address(RVA = "0x11968E0", Offset = "0x11968E0", VA = "0x11968E0")]
		private void CreateVirtualAxes()
		{
		}

		[Token(Token = "0x60003FF")]
		[Address(RVA = "0x1196B14", Offset = "0x1196B14", VA = "0x1196B14")]
		private void UpdateVirtualAxes(Vector3 value)
		{
		}

		[Token(Token = "0x6000400")]
		[Address(RVA = "0x1196B9C", Offset = "0x1196B9C", VA = "0x1196B9C", Slot = "4")]
		public void OnPointerDown(PointerEventData data)
		{
		}

		[Token(Token = "0x6000401")]
		[Address(RVA = "0x1196C68", Offset = "0x1196C68", VA = "0x1196C68")]
		private void Update()
		{
		}

		[Token(Token = "0x6000402")]
		[Address(RVA = "0x1196EF0", Offset = "0x1196EF0", VA = "0x1196EF0", Slot = "5")]
		public void OnPointerUp(PointerEventData data)
		{
		}

		[Token(Token = "0x6000403")]
		[Address(RVA = "0x1196F90", Offset = "0x1196F90", VA = "0x1196F90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000404")]
		[Address(RVA = "0x11970A4", Offset = "0x11970A4", VA = "0x11970A4")]
		public TouchPad()
		{
		}
	}
	[Token(Token = "0x2000063")]
	public abstract class VirtualInput
	{
		[Token(Token = "0x40002BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8C38", Offset = "0x4F8C38")]
		private Vector3 <virtualMousePosition>k__BackingField;

		[Token(Token = "0x40002BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualAxis> m_VirtualAxes;

		[Token(Token = "0x40002BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Dictionary<string, CrossPlatformInputManager.VirtualButton> m_VirtualButtons;

		[Token(Token = "0x40002BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected List<string> m_AlwaysUseVirtual;

		[Token(Token = "0x1700001B")]
		public Vector3 virtualMousePosition
		{
			[Token(Token = "0x6000405")]
			[Address(RVA = "0x119712C", Offset = "0x119712C", VA = "0x119712C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500374", Offset = "0x500374")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000406")]
			[Address(RVA = "0x1197140", Offset = "0x1197140", VA = "0x1197140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500384", Offset = "0x500384")]
			private set
			{
			}
		}

		[Token(Token = "0x6000407")]
		[Address(RVA = "0x11939A0", Offset = "0x11939A0", VA = "0x11939A0")]
		public bool AxisExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000408")]
		[Address(RVA = "0x1193AA8", Offset = "0x1193AA8", VA = "0x1193AA8")]
		public bool ButtonExists(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000409")]
		[Address(RVA = "0x1193B1C", Offset = "0x1193B1C", VA = "0x1193B1C")]
		public void RegisterVirtualAxis(CrossPlatformInputManager.VirtualAxis axis)
		{
		}

		[Token(Token = "0x600040A")]
		[Address(RVA = "0x1193D18", Offset = "0x1193D18", VA = "0x1193D18")]
		public void RegisterVirtualButton(CrossPlatformInputManager.VirtualButton button)
		{
		}

		[Token(Token = "0x600040B")]
		[Address(RVA = "0x1193F6C", Offset = "0x1193F6C", VA = "0x1193F6C")]
		public void UnRegisterVirtualAxis(string name)
		{
		}

		[Token(Token = "0x600040C")]
		[Address(RVA = "0x11940A8", Offset = "0x11940A8", VA = "0x11940A8")]
		public void UnRegisterVirtualButton(string name)
		{
		}

		[Token(Token = "0x600040D")]
		[Address(RVA = "0x1194150", Offset = "0x1194150", VA = "0x1194150")]
		public CrossPlatformInputManager.VirtualAxis VirtualAxisReference(string name)
		{
			return null;
		}

		[Token(Token = "0x600040E")]
		[Address(RVA = "0x1194674", Offset = "0x1194674", VA = "0x1194674")]
		public void SetVirtualMousePositionX(float f)
		{
		}

		[Token(Token = "0x600040F")]
		[Address(RVA = "0x1194788", Offset = "0x1194788", VA = "0x1194788")]
		public void SetVirtualMousePositionY(float f)
		{
		}

		[Token(Token = "0x6000410")]
		[Address(RVA = "0x11948A0", Offset = "0x11948A0", VA = "0x11948A0")]
		public void SetVirtualMousePositionZ(float f)
		{
		}

		[Token(Token = "0x6000411")]
		public abstract float GetAxis(string name, bool raw);

		[Token(Token = "0x6000412")]
		public abstract bool GetButton(string name);

		[Token(Token = "0x6000413")]
		public abstract bool GetButtonDown(string name);

		[Token(Token = "0x6000414")]
		public abstract bool GetButtonUp(string name);

		[Token(Token = "0x6000415")]
		public abstract void SetButtonDown(string name);

		[Token(Token = "0x6000416")]
		public abstract void SetButtonUp(string name);

		[Token(Token = "0x6000417")]
		public abstract void SetAxisPositive(string name);

		[Token(Token = "0x6000418")]
		public abstract void SetAxisNegative(string name);

		[Token(Token = "0x6000419")]
		public abstract void SetAxisZero(string name);

		[Token(Token = "0x600041A")]
		public abstract void SetAxis(string name, float value);

		[Token(Token = "0x600041B")]
		public abstract Vector3 MousePosition();

		[Token(Token = "0x600041C")]
		[Address(RVA = "0x1196048", Offset = "0x1196048", VA = "0x1196048")]
		protected VirtualInput()
		{
		}
	}
}
namespace UnityStandardAssets.CrossPlatformInput.PlatformSpecific
{
	[Token(Token = "0x2000064")]
	public class MobileInput : VirtualInput
	{
		[Token(Token = "0x600041D")]
		[Address(RVA = "0x11956E4", Offset = "0x11956E4", VA = "0x11956E4")]
		private void AddButton(string name)
		{
		}

		[Token(Token = "0x600041E")]
		[Address(RVA = "0x1195798", Offset = "0x1195798", VA = "0x1195798")]
		private void AddAxes(string name)
		{
		}

		[Token(Token = "0x600041F")]
		[Address(RVA = "0x119583C", Offset = "0x119583C", VA = "0x119583C", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x6000420")]
		[Address(RVA = "0x11958FC", Offset = "0x11958FC", VA = "0x11958FC", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000421")]
		[Address(RVA = "0x11959D8", Offset = "0x11959D8", VA = "0x11959D8", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000422")]
		[Address(RVA = "0x1195AA8", Offset = "0x1195AA8", VA = "0x1195AA8", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000423")]
		[Address(RVA = "0x1195B6C", Offset = "0x1195B6C", VA = "0x1195B6C", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000424")]
		[Address(RVA = "0x1195C34", Offset = "0x1195C34", VA = "0x1195C34", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000425")]
		[Address(RVA = "0x1195CF8", Offset = "0x1195CF8", VA = "0x1195CF8", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6000426")]
		[Address(RVA = "0x1195DC8", Offset = "0x1195DC8", VA = "0x1195DC8", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000427")]
		[Address(RVA = "0x1195EA0", Offset = "0x1195EA0", VA = "0x1195EA0", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000428")]
		[Address(RVA = "0x1195F78", Offset = "0x1195F78", VA = "0x1195F78", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x6000429")]
		[Address(RVA = "0x1196034", Offset = "0x1196034", VA = "0x1196034", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600042A")]
		[Address(RVA = "0x11938C8", Offset = "0x11938C8", VA = "0x11938C8")]
		public MobileInput()
		{
		}
	}
	[Token(Token = "0x2000065")]
	public class StandaloneInput : VirtualInput
	{
		[Token(Token = "0x600042B")]
		[Address(RVA = "0x1196134", Offset = "0x1196134", VA = "0x1196134", Slot = "4")]
		public override float GetAxis(string name, bool raw)
		{
			return default(float);
		}

		[Token(Token = "0x600042C")]
		[Address(RVA = "0x119614C", Offset = "0x119614C", VA = "0x119614C", Slot = "5")]
		public override bool GetButton(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600042D")]
		[Address(RVA = "0x1196158", Offset = "0x1196158", VA = "0x1196158", Slot = "6")]
		public override bool GetButtonDown(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600042E")]
		[Address(RVA = "0x1196164", Offset = "0x1196164", VA = "0x1196164", Slot = "7")]
		public override bool GetButtonUp(string name)
		{
			return default(bool);
		}

		[Token(Token = "0x600042F")]
		[Address(RVA = "0x1196170", Offset = "0x1196170", VA = "0x1196170", Slot = "8")]
		public override void SetButtonDown(string name)
		{
		}

		[Token(Token = "0x6000430")]
		[Address(RVA = "0x11961FC", Offset = "0x11961FC", VA = "0x11961FC", Slot = "9")]
		public override void SetButtonUp(string name)
		{
		}

		[Token(Token = "0x6000431")]
		[Address(RVA = "0x1196288", Offset = "0x1196288", VA = "0x1196288", Slot = "10")]
		public override void SetAxisPositive(string name)
		{
		}

		[Token(Token = "0x6000432")]
		[Address(RVA = "0x1196314", Offset = "0x1196314", VA = "0x1196314", Slot = "11")]
		public override void SetAxisNegative(string name)
		{
		}

		[Token(Token = "0x6000433")]
		[Address(RVA = "0x11963A0", Offset = "0x11963A0", VA = "0x11963A0", Slot = "12")]
		public override void SetAxisZero(string name)
		{
		}

		[Token(Token = "0x6000434")]
		[Address(RVA = "0x119642C", Offset = "0x119642C", VA = "0x119642C", Slot = "13")]
		public override void SetAxis(string name, float value)
		{
		}

		[Token(Token = "0x6000435")]
		[Address(RVA = "0x11964B8", Offset = "0x11964B8", VA = "0x11964B8", Slot = "14")]
		public override Vector3 MousePosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000436")]
		[Address(RVA = "0x11938CC", Offset = "0x11938CC", VA = "0x11938CC")]
		public StandaloneInput()
		{
		}
	}
}
namespace UnityStandardAssets.Vehicles.Ball
{
	[Token(Token = "0x2000066")]
	public class Ball : MonoBehaviour
	{
		[Token(Token = "0x40002C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float m_MovePower;

		[Token(Token = "0x40002C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private bool m_UseTorque;

		[Token(Token = "0x40002C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float m_MaxAngularVelocity;

		[Token(Token = "0x40002C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x40002C4")]
		private const float k_GroundRayLength = 1f;

		[Token(Token = "0x40002C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x6000437")]
		[Address(RVA = "0x11F9A20", Offset = "0x11F9A20", VA = "0x11F9A20")]
		private void Start()
		{
		}

		[Token(Token = "0x6000438")]
		[Address(RVA = "0x11F9AB8", Offset = "0x11F9AB8", VA = "0x11F9AB8")]
		public void Move(Vector3 moveDirection, bool jump)
		{
		}

		[Token(Token = "0x6000439")]
		[Address(RVA = "0x11F9D54", Offset = "0x11F9D54", VA = "0x11F9D54")]
		public Ball()
		{
		}
	}
	[Token(Token = "0x2000067")]
	public class BallUserControl : MonoBehaviour
	{
		[Token(Token = "0x40002C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private Ball ball;

		[Token(Token = "0x40002C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 move;

		[Token(Token = "0x40002C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Transform cam;

		[Token(Token = "0x40002C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 camForward;

		[Token(Token = "0x40002CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool jump;

		[Token(Token = "0x600043A")]
		[Address(RVA = "0x11F9D84", Offset = "0x11F9D84", VA = "0x11F9D84")]
		private void Awake()
		{
		}

		[Token(Token = "0x600043B")]
		[Address(RVA = "0x11F9EA4", Offset = "0x11F9EA4", VA = "0x11F9EA4")]
		private void Update()
		{
		}

		[Token(Token = "0x600043C")]
		[Address(RVA = "0x11FA218", Offset = "0x11FA218", VA = "0x11FA218")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600043D")]
		[Address(RVA = "0x11FA278", Offset = "0x11FA278", VA = "0x11FA278")]
		public BallUserControl()
		{
		}
	}
}
namespace UnityStandardAssets.Characters.ThirdPerson
{
	[Token(Token = "0x2000068")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0BA8", Offset = "0x4F0BA8")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0BA8", Offset = "0x4F0BA8")]
	public class AICharacterControl : MonoBehaviour
	{
		[Token(Token = "0x40002CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8C88", Offset = "0x4F8C88")]
		private NavMeshAgent <agent>k__BackingField;

		[Token(Token = "0x40002CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8C98", Offset = "0x4F8C98")]
		private ThirdPersonCharacter <character>k__BackingField;

		[Token(Token = "0x40002CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform target;

		[Token(Token = "0x1700001C")]
		public NavMeshAgent agent
		{
			[Token(Token = "0x600043E")]
			[Address(RVA = "0x1190F68", Offset = "0x1190F68", VA = "0x1190F68")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500394", Offset = "0x500394")]
			get
			{
				return null;
			}
			[Token(Token = "0x600043F")]
			[Address(RVA = "0x1190F70", Offset = "0x1190F70", VA = "0x1190F70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5003A4", Offset = "0x5003A4")]
			private set
			{
			}
		}

		[Token(Token = "0x1700001D")]
		public ThirdPersonCharacter character
		{
			[Token(Token = "0x6000440")]
			[Address(RVA = "0x1190F78", Offset = "0x1190F78", VA = "0x1190F78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5003B4", Offset = "0x5003B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000441")]
			[Address(RVA = "0x1190F80", Offset = "0x1190F80", VA = "0x1190F80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5003C4", Offset = "0x5003C4")]
			private set
			{
			}
		}

		[Token(Token = "0x6000442")]
		[Address(RVA = "0x1190F88", Offset = "0x1190F88", VA = "0x1190F88")]
		private void Start()
		{
		}

		[Token(Token = "0x6000443")]
		[Address(RVA = "0x1191044", Offset = "0x1191044", VA = "0x1191044")]
		private void Update()
		{
		}

		[Token(Token = "0x6000444")]
		[Address(RVA = "0x119141C", Offset = "0x119141C", VA = "0x119141C")]
		public void SetTarget(Transform target)
		{
		}

		[Token(Token = "0x6000445")]
		[Address(RVA = "0x1191424", Offset = "0x1191424", VA = "0x1191424")]
		public AICharacterControl()
		{
		}
	}
	[Token(Token = "0x2000069")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0C44", Offset = "0x4F0C44")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0C44", Offset = "0x4F0C44")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0C44", Offset = "0x4F0C44")]
	public class ThirdPersonCharacter : MonoBehaviour
	{
		[Token(Token = "0x40002CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private float m_MovingTurnSpeed;

		[Token(Token = "0x40002CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float m_StationaryTurnSpeed;

		[Token(Token = "0x40002D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float m_JumpPower;

		[Token(Token = "0x40002D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8CD8", Offset = "0x4F8CD8")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x40002D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_RunCycleLegOffset;

		[Token(Token = "0x40002D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_MoveSpeedMultiplier;

		[Token(Token = "0x40002D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_AnimSpeedMultiplier;

		[Token(Token = "0x40002D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float m_GroundCheckDistance;

		[Token(Token = "0x40002D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x40002D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator m_Animator;

		[Token(Token = "0x40002D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_IsGrounded;

		[Token(Token = "0x40002D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float m_OrigGroundCheckDistance;

		[Token(Token = "0x40002DA")]
		private const float k_Half = 0.5f;

		[Token(Token = "0x40002DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float m_TurnAmount;

		[Token(Token = "0x40002DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float m_ForwardAmount;

		[Token(Token = "0x40002DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Vector3 m_GroundNormal;

		[Token(Token = "0x40002DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float m_CapsuleHeight;

		[Token(Token = "0x40002DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 m_CapsuleCenter;

		[Token(Token = "0x40002E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x40002E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool m_Crouching;

		[Token(Token = "0x6000446")]
		[Address(RVA = "0x119142C", Offset = "0x119142C", VA = "0x119142C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000447")]
		[Address(RVA = "0x119121C", Offset = "0x119121C", VA = "0x119121C")]
		public void Move(Vector3 move, bool crouch, bool jump)
		{
		}

		[Token(Token = "0x6000448")]
		[Address(RVA = "0x1191B30", Offset = "0x1191B30", VA = "0x1191B30")]
		private void ScaleCapsuleForCrouching(bool crouch)
		{
		}

		[Token(Token = "0x6000449")]
		[Address(RVA = "0x1191EB0", Offset = "0x1191EB0", VA = "0x1191EB0")]
		private void PreventStandingInLowHeadroom()
		{
		}

		[Token(Token = "0x600044A")]
		[Address(RVA = "0x11920C0", Offset = "0x11920C0", VA = "0x11920C0")]
		private void UpdateAnimator(Vector3 move)
		{
		}

		[Token(Token = "0x600044B")]
		[Address(RVA = "0x11919E0", Offset = "0x11919E0", VA = "0x11919E0")]
		private void HandleAirborneMovement()
		{
		}

		[Token(Token = "0x600044C")]
		[Address(RVA = "0x119182C", Offset = "0x119182C", VA = "0x119182C")]
		private void HandleGroundedMovement(bool crouch, bool jump)
		{
		}

		[Token(Token = "0x600044D")]
		[Address(RVA = "0x1191734", Offset = "0x1191734", VA = "0x1191734")]
		private void ApplyExtraTurnRotation()
		{
		}

		[Token(Token = "0x600044E")]
		[Address(RVA = "0x1192414", Offset = "0x1192414", VA = "0x1192414")]
		public void OnAnimatorMove()
		{
		}

		[Token(Token = "0x600044F")]
		[Address(RVA = "0x1191540", Offset = "0x1191540", VA = "0x1191540")]
		private void CheckGroundStatus()
		{
		}

		[Token(Token = "0x6000450")]
		[Address(RVA = "0x1192570", Offset = "0x1192570", VA = "0x1192570")]
		public ThirdPersonCharacter()
		{
		}
	}
	[Token(Token = "0x200006A")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0D0C", Offset = "0x4F0D0C")]
	public class ThirdPersonUserControl : MonoBehaviour
	{
		[Token(Token = "0x40002E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private ThirdPersonCharacter m_Character;

		[Token(Token = "0x40002E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform m_Cam;

		[Token(Token = "0x40002E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Vector3 m_CamForward;

		[Token(Token = "0x40002E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_Move;

		[Token(Token = "0x40002E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool m_Jump;

		[Token(Token = "0x6000451")]
		[Address(RVA = "0x11925B8", Offset = "0x11925B8", VA = "0x11925B8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000452")]
		[Address(RVA = "0x11926EC", Offset = "0x11926EC", VA = "0x11926EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000453")]
		[Address(RVA = "0x1192780", Offset = "0x1192780", VA = "0x1192780")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000454")]
		[Address(RVA = "0x1192AE4", Offset = "0x1192AE4", VA = "0x1192AE4")]
		public ThirdPersonUserControl()
		{
		}
	}
}
namespace UnityStandardAssets.Characters.FirstPerson
{
	[Token(Token = "0x200006B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0D7C", Offset = "0x4F0D7C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0D7C", Offset = "0x4F0D7C")]
	public class FirstPersonController : MonoBehaviour
	{
		[Token(Token = "0x40002E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private bool m_IsWalking;

		[Token(Token = "0x40002E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private float m_WalkSpeed;

		[Token(Token = "0x40002E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float m_RunSpeed;

		[Token(Token = "0x40002EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8D84", Offset = "0x4F8D84")]
		private float m_RunstepLenghten;

		[Token(Token = "0x40002EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float m_JumpSpeed;

		[Token(Token = "0x40002EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float m_StickToGroundForce;

		[Token(Token = "0x40002ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float m_GravityMultiplier;

		[Token(Token = "0x40002EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MouseLook m_MouseLook;

		[Token(Token = "0x40002EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private bool m_UseFovKick;

		[Token(Token = "0x40002F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private FOVKick m_FovKick;

		[Token(Token = "0x40002F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool m_UseHeadBob;

		[Token(Token = "0x40002F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private CurveControlledBob m_HeadBob;

		[Token(Token = "0x40002F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private LerpControlledBob m_JumpBob;

		[Token(Token = "0x40002F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float m_StepInterval;

		[Token(Token = "0x40002F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private AudioClip[] m_FootstepSounds;

		[Token(Token = "0x40002F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private AudioClip m_JumpSound;

		[Token(Token = "0x40002F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private AudioClip m_LandSound;

		[Token(Token = "0x40002F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Camera m_Camera;

		[Token(Token = "0x40002F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool m_Jump;

		[Token(Token = "0x40002FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float m_YRotation;

		[Token(Token = "0x40002FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector2 m_Input;

		[Token(Token = "0x40002FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 m_MoveDir;

		[Token(Token = "0x40002FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private CharacterController m_CharacterController;

		[Token(Token = "0x40002FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private CollisionFlags m_CollisionFlags;

		[Token(Token = "0x40002FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x4000301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float m_StepCycle;

		[Token(Token = "0x4000302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float m_NextStep;

		[Token(Token = "0x4000303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool m_Jumping;

		[Token(Token = "0x4000304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x6000455")]
		[Address(RVA = "0x118D9D4", Offset = "0x118D9D4", VA = "0x118D9D4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000456")]
		[Address(RVA = "0x118DBE0", Offset = "0x118DBE0", VA = "0x118DBE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000457")]
		[Address(RVA = "0x118DE48", Offset = "0x118DE48", VA = "0x118DE48")]
		private void PlayLandingSound()
		{
		}

		[Token(Token = "0x6000458")]
		[Address(RVA = "0x118DEA8", Offset = "0x118DEA8", VA = "0x118DEA8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000459")]
		[Address(RVA = "0x118E548", Offset = "0x118E548", VA = "0x118E548")]
		private void PlayJumpSound()
		{
		}

		[Token(Token = "0x600045A")]
		[Address(RVA = "0x118E598", Offset = "0x118E598", VA = "0x118E598")]
		private void ProgressStepCycle(float speed)
		{
		}

		[Token(Token = "0x600045B")]
		[Address(RVA = "0x118E99C", Offset = "0x118E99C", VA = "0x118E99C")]
		private void PlayFootStepAudio()
		{
		}

		[Token(Token = "0x600045C")]
		[Address(RVA = "0x118E6CC", Offset = "0x118E6CC", VA = "0x118E6CC")]
		private void UpdateCameraPosition(float speed)
		{
		}

		[Token(Token = "0x600045D")]
		[Address(RVA = "0x118E360", Offset = "0x118E360", VA = "0x118E360")]
		private void GetInput(out float speed)
		{
		}

		[Token(Token = "0x600045E")]
		[Address(RVA = "0x118DD4C", Offset = "0x118DD4C", VA = "0x118DD4C")]
		private void RotateView()
		{
		}

		[Token(Token = "0x600045F")]
		[Address(RVA = "0x118EFCC", Offset = "0x118EFCC", VA = "0x118EFCC")]
		private void OnControllerColliderHit(ControllerColliderHit hit)
		{
		}

		[Token(Token = "0x6000460")]
		[Address(RVA = "0x118F188", Offset = "0x118F188", VA = "0x118F188")]
		public FirstPersonController()
		{
		}
	}
	[Token(Token = "0x200006C")]
	public class HeadBob : MonoBehaviour
	{
		[Token(Token = "0x4000305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Camera Camera;

		[Token(Token = "0x4000306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CurveControlledBob motionBob;

		[Token(Token = "0x4000307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LerpControlledBob jumpAndLandingBob;

		[Token(Token = "0x4000308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RigidbodyFirstPersonController rigidbodyFirstPersonController;

		[Token(Token = "0x4000309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float StrideInterval;

		[Token(Token = "0x400030A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8E8C", Offset = "0x4F8E8C")]
		public float RunningStrideLengthen;

		[Token(Token = "0x400030B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x400030C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_OriginalCameraPosition;

		[Token(Token = "0x6000461")]
		[Address(RVA = "0x118F290", Offset = "0x118F290", VA = "0x118F290")]
		private void Start()
		{
		}

		[Token(Token = "0x6000462")]
		[Address(RVA = "0x118F324", Offset = "0x118F324", VA = "0x118F324")]
		private void Update()
		{
		}

		[Token(Token = "0x6000463")]
		[Address(RVA = "0x118F678", Offset = "0x118F678", VA = "0x118F678")]
		public HeadBob()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200006D")]
	public class MouseLook
	{
		[Token(Token = "0x400030D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float XSensitivity;

		[Token(Token = "0x400030E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float YSensitivity;

		[Token(Token = "0x400030F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool clampVerticalRotation;

		[Token(Token = "0x4000310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float MinimumX;

		[Token(Token = "0x4000311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float MaximumX;

		[Token(Token = "0x4000312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool smooth;

		[Token(Token = "0x4000313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float smoothTime;

		[Token(Token = "0x4000314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool lockCursor;

		[Token(Token = "0x4000315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Quaternion m_CharacterTargetRot;

		[Token(Token = "0x4000316")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion m_CameraTargetRot;

		[Token(Token = "0x4000317")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool m_cursorIsLocked;

		[Token(Token = "0x6000464")]
		[Address(RVA = "0x118DB64", Offset = "0x118DB64", VA = "0x118DB64")]
		public void Init(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6000465")]
		[Address(RVA = "0x118EBF8", Offset = "0x118EBF8", VA = "0x118EBF8")]
		public void LookRotation(Transform character, Transform camera)
		{
		}

		[Token(Token = "0x6000466")]
		[Address(RVA = "0x118F818", Offset = "0x118F818", VA = "0x118F818")]
		public void SetCursorLock(bool value)
		{
		}

		[Token(Token = "0x6000467")]
		[Address(RVA = "0x118E98C", Offset = "0x118E98C", VA = "0x118E98C")]
		public void UpdateCursorLock()
		{
		}

		[Token(Token = "0x6000468")]
		[Address(RVA = "0x118F848", Offset = "0x118F848", VA = "0x118F848")]
		private void InternalLockUpdate()
		{
		}

		[Token(Token = "0x6000469")]
		[Address(RVA = "0x118F710", Offset = "0x118F710", VA = "0x118F710")]
		private Quaternion ClampRotationAroundXAxis(Quaternion q)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600046A")]
		[Address(RVA = "0x118F8CC", Offset = "0x118F8CC", VA = "0x118F8CC")]
		public MouseLook()
		{
		}
	}
	[Token(Token = "0x200006E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0E18", Offset = "0x4F0E18")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0E18", Offset = "0x4F0E18")]
	public class RigidbodyFirstPersonController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000234")]
		public class MovementSettings
		{
			[Token(Token = "0x4000AB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float ForwardSpeed;

			[Token(Token = "0x4000AB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float BackwardSpeed;

			[Token(Token = "0x4000ABA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float StrafeSpeed;

			[Token(Token = "0x4000ABB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float RunMultiplier;

			[Token(Token = "0x4000ABC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public KeyCode RunKey;

			[Token(Token = "0x4000ABD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float JumpForce;

			[Token(Token = "0x4000ABE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public AnimationCurve SlopeCurveModifier;

			[Token(Token = "0x4000ABF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[HideInInspector]
			public float CurrentTargetSpeed;

			[Token(Token = "0x6000DDA")]
			[Address(RVA = "0x1190AF0", Offset = "0x1190AF0", VA = "0x1190AF0")]
			public void UpdateDesiredTargetSpeed(Vector2 input)
			{
			}

			[Token(Token = "0x6000DDB")]
			[Address(RVA = "0x1190D00", Offset = "0x1190D00", VA = "0x1190D00")]
			public MovementSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000235")]
		public class AdvancedSettings
		{
			[Token(Token = "0x4000AC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float groundCheckDistance;

			[Token(Token = "0x4000AC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float stickToGroundHelperDistance;

			[Token(Token = "0x4000AC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float slowDownRate;

			[Token(Token = "0x4000AC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool airControl;

			[Token(Token = "0x4000AC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEC48", Offset = "0x4FEC48")]
			public float shellOffset;

			[Token(Token = "0x6000DDC")]
			[Address(RVA = "0x1190F40", Offset = "0x1190F40", VA = "0x1190F40")]
			public AdvancedSettings()
			{
			}
		}

		[Token(Token = "0x4000318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Camera cam;

		[Token(Token = "0x4000319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MovementSettings movementSettings;

		[Token(Token = "0x400031A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MouseLook mouseLook;

		[Token(Token = "0x400031B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AdvancedSettings advancedSettings;

		[Token(Token = "0x400031C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Rigidbody m_RigidBody;

		[Token(Token = "0x400031D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CapsuleCollider m_Capsule;

		[Token(Token = "0x400031E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float m_YRotation;

		[Token(Token = "0x400031F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 m_GroundContactNormal;

		[Token(Token = "0x4000320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool m_Jump;

		[Token(Token = "0x4000321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool m_PreviouslyGrounded;

		[Token(Token = "0x4000322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool m_Jumping;

		[Token(Token = "0x4000323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37")]
		private bool m_IsGrounded;

		[Token(Token = "0x1700001E")]
		public Vector3 Velocity
		{
			[Token(Token = "0x600046B")]
			[Address(RVA = "0x118F640", Offset = "0x118F640", VA = "0x118F640")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700001F")]
		public bool Grounded
		{
			[Token(Token = "0x600046C")]
			[Address(RVA = "0x118F914", Offset = "0x118F914", VA = "0x118F914")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000020")]
		public bool Jumping
		{
			[Token(Token = "0x600046D")]
			[Address(RVA = "0x118F91C", Offset = "0x118F91C", VA = "0x118F91C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000021")]
		public bool Running
		{
			[Token(Token = "0x600046E")]
			[Address(RVA = "0x118F670", Offset = "0x118F670", VA = "0x118F670")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600046F")]
		[Address(RVA = "0x118F924", Offset = "0x118F924", VA = "0x118F924")]
		private void Start()
		{
		}

		[Token(Token = "0x6000470")]
		[Address(RVA = "0x118F9F0", Offset = "0x118F9F0", VA = "0x118F9F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000471")]
		[Address(RVA = "0x118FD14", Offset = "0x118FD14", VA = "0x118FD14")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000472")]
		[Address(RVA = "0x11906CC", Offset = "0x11906CC", VA = "0x11906CC")]
		private float SlopeMultiplier()
		{
			return default(float);
		}

		[Token(Token = "0x6000473")]
		[Address(RVA = "0x11907B0", Offset = "0x11907B0", VA = "0x11907B0")]
		private void StickToGroundHelper()
		{
		}

		[Token(Token = "0x6000474")]
		[Address(RVA = "0x11905F0", Offset = "0x11905F0", VA = "0x11905F0")]
		private Vector2 GetInput()
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000475")]
		[Address(RVA = "0x118FA94", Offset = "0x118FA94", VA = "0x118FA94")]
		private void RotateView()
		{
		}

		[Token(Token = "0x6000476")]
		[Address(RVA = "0x1190384", Offset = "0x1190384", VA = "0x1190384")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x6000477")]
		[Address(RVA = "0x1190BE4", Offset = "0x1190BE4", VA = "0x1190BE4")]
		public RigidbodyFirstPersonController()
		{
		}
	}
}
namespace VLB
{
	[Token(Token = "0x200006F")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F0EB4", Offset = "0x4F0EB4")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F0EB4", Offset = "0x4F0EB4")]
	public class BeamGeometry : MonoBehaviour
	{
		[Token(Token = "0x4000324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x4000325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Matrix4x4 m_ColorGradientMatrix;

		[Token(Token = "0x4000326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private MeshType m_CurrentMeshType;

		[Token(Token = "0x4000327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8EA4", Offset = "0x4F8EA4")]
		private MeshRenderer <meshRenderer>k__BackingField;

		[Token(Token = "0x4000328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8EB4", Offset = "0x4F8EB4")]
		private MeshFilter <meshFilter>k__BackingField;

		[Token(Token = "0x4000329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8EC4", Offset = "0x4F8EC4")]
		private Material <material>k__BackingField;

		[Token(Token = "0x400032A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8ED4", Offset = "0x4F8ED4")]
		private Mesh <coneMesh>k__BackingField;

		[Token(Token = "0x17000022")]
		public MeshRenderer meshRenderer
		{
			[Token(Token = "0x6000478")]
			[Address(RVA = "0x11FA280", Offset = "0x11FA280", VA = "0x11FA280")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5003D4", Offset = "0x5003D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000479")]
			[Address(RVA = "0x11FA288", Offset = "0x11FA288", VA = "0x11FA288")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5003E4", Offset = "0x5003E4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000023")]
		public MeshFilter meshFilter
		{
			[Token(Token = "0x600047A")]
			[Address(RVA = "0x11FA290", Offset = "0x11FA290", VA = "0x11FA290")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5003F4", Offset = "0x5003F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600047B")]
			[Address(RVA = "0x11FA298", Offset = "0x11FA298", VA = "0x11FA298")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500404", Offset = "0x500404")]
			private set
			{
			}
		}

		[Token(Token = "0x17000024")]
		public Material material
		{
			[Token(Token = "0x600047C")]
			[Address(RVA = "0x11FA2A0", Offset = "0x11FA2A0", VA = "0x11FA2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500414", Offset = "0x500414")]
			get
			{
				return null;
			}
			[Token(Token = "0x600047D")]
			[Address(RVA = "0x11FA2A8", Offset = "0x11FA2A8", VA = "0x11FA2A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500424", Offset = "0x500424")]
			private set
			{
			}
		}

		[Token(Token = "0x17000025")]
		public Mesh coneMesh
		{
			[Token(Token = "0x600047E")]
			[Address(RVA = "0x11FA2B0", Offset = "0x11FA2B0", VA = "0x11FA2B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500434", Offset = "0x500434")]
			get
			{
				return null;
			}
			[Token(Token = "0x600047F")]
			[Address(RVA = "0x11FA2B8", Offset = "0x11FA2B8", VA = "0x11FA2B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500444", Offset = "0x500444")]
			private set
			{
			}
		}

		[Token(Token = "0x17000026")]
		public bool visible
		{
			[Token(Token = "0x6000480")]
			[Address(RVA = "0x11FA2C0", Offset = "0x11FA2C0", VA = "0x11FA2C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000481")]
			[Address(RVA = "0x11FA2E8", Offset = "0x11FA2E8", VA = "0x11FA2E8")]
			set
			{
			}
		}

		[Token(Token = "0x17000027")]
		public int sortingLayerID
		{
			[Token(Token = "0x6000482")]
			[Address(RVA = "0x11FA318", Offset = "0x11FA318", VA = "0x11FA318")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000483")]
			[Address(RVA = "0x11FA340", Offset = "0x11FA340", VA = "0x11FA340")]
			set
			{
			}
		}

		[Token(Token = "0x17000028")]
		public int sortingOrder
		{
			[Token(Token = "0x6000484")]
			[Address(RVA = "0x11FA370", Offset = "0x11FA370", VA = "0x11FA370")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000485")]
			[Address(RVA = "0x11FA398", Offset = "0x11FA398", VA = "0x11FA398")]
			set
			{
			}
		}

		[Token(Token = "0x6000486")]
		[Address(RVA = "0x11FA3C8", Offset = "0x11FA3C8", VA = "0x11FA3C8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000487")]
		[Address(RVA = "0x11FA490", Offset = "0x11FA490", VA = "0x11FA490")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000488")]
		[Address(RVA = "0x11FA550", Offset = "0x11FA550", VA = "0x11FA550")]
		private static bool IsUsingCustomRenderPipeline()
		{
			return default(bool);
		}

		[Token(Token = "0x6000489")]
		[Address(RVA = "0x11FA670", Offset = "0x11FA670", VA = "0x11FA670")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600048A")]
		[Address(RVA = "0x11FA73C", Offset = "0x11FA73C", VA = "0x11FA73C")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600048B")]
		[Address(RVA = "0x11FA808", Offset = "0x11FA808", VA = "0x11FA808")]
		public void Initialize(VolumetricLightBeam master, Shader shader)
		{
		}

		[Token(Token = "0x600048C")]
		[Address(RVA = "0x11FADF8", Offset = "0x11FADF8", VA = "0x11FADF8")]
		public void RegenerateMesh()
		{
		}

		[Token(Token = "0x600048D")]
		[Address(RVA = "0x11FD098", Offset = "0x11FD098", VA = "0x11FD098")]
		private void ComputeLocalMatrix()
		{
		}

		[Token(Token = "0x600048E")]
		[Address(RVA = "0x11FC2B0", Offset = "0x11FC2B0", VA = "0x11FC2B0")]
		public void UpdateMaterialAndBounds()
		{
		}

		[Token(Token = "0x600048F")]
		[Address(RVA = "0x11FDBD4", Offset = "0x11FDBD4", VA = "0x11FDBD4")]
		public void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x6000490")]
		[Address(RVA = "0x11FDCFC", Offset = "0x11FDCFC", VA = "0x11FDCFC")]
		public void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x6000491")]
		[Address(RVA = "0x11FDD6C", Offset = "0x11FDD6C", VA = "0x11FDD6C")]
		private void OnBeginCameraRendering(ScriptableRenderContext src, Camera cam)
		{
		}

		[Token(Token = "0x6000492")]
		[Address(RVA = "0x11FE27C", Offset = "0x11FE27C", VA = "0x11FE27C")]
		private void OnWillRenderObject()
		{
		}

		[Token(Token = "0x6000493")]
		[Address(RVA = "0x11FDD74", Offset = "0x11FDD74", VA = "0x11FDD74")]
		private void UpdateCameraRelatedProperties(Camera cam)
		{
		}

		[Token(Token = "0x6000494")]
		[Address(RVA = "0x11FE538", Offset = "0x11FE538", VA = "0x11FE538")]
		public BeamGeometry()
		{
		}
	}
	[Token(Token = "0x2000070")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F0F24", Offset = "0x4F0F24")]
	public class Config : ScriptableObject
	{
		[Token(Token = "0x400032B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int geometryLayerID;

		[Token(Token = "0x400032C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string geometryTag;

		[Token(Token = "0x400032D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int geometryRenderQueue;

		[Token(Token = "0x400032E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool forceSinglePass;

		[Token(Token = "0x400032F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		[HighlightNull]
		private Shader beamShader1Pass;

		[Token(Token = "0x4000330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4F8F14", Offset = "0x4F8F14")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4F8F14", Offset = "0x4F8F14")]
		[SerializeField]
		[HighlightNull]
		private Shader beamShader2Pass;

		[Token(Token = "0x4000331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int sharedMeshSides;

		[Token(Token = "0x4000332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int sharedMeshSegments;

		[Token(Token = "0x4000333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8F94", Offset = "0x4F8F94")]
		public float globalNoiseScale;

		[Token(Token = "0x4000334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 globalNoiseVelocity;

		[Token(Token = "0x4000335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HighlightNull]
		public TextAsset noise3DData;

		[Token(Token = "0x4000336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public int noise3DSize;

		[Token(Token = "0x4000337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HighlightNull]
		public ParticleSystem dustParticlesPrefab;

		[Token(Token = "0x4000338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Config m_Instance;

		[Token(Token = "0x17000029")]
		public Shader beamShader
		{
			[Token(Token = "0x6000495")]
			[Address(RVA = "0x11FE540", Offset = "0x11FE540", VA = "0x11FE540")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700002A")]
		public Vector4 globalNoiseParam
		{
			[Token(Token = "0x6000496")]
			[Address(RVA = "0x11FE558", Offset = "0x11FE558", VA = "0x11FE558")]
			get
			{
				return default(Vector4);
			}
		}

		[Token(Token = "0x1700002B")]
		public static Config Instance
		{
			[Token(Token = "0x6000499")]
			[Address(RVA = "0x11FB14C", Offset = "0x11FB14C", VA = "0x11FB14C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0x11FE598", Offset = "0x11FE598", VA = "0x11FE598")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0x11FE790", Offset = "0x11FE790", VA = "0x11FE790")]
		public ParticleSystem NewVolumetricDustParticles()
		{
			return null;
		}

		[Token(Token = "0x600049A")]
		[Address(RVA = "0x11FE9C4", Offset = "0x11FE9C4", VA = "0x11FE9C4")]
		public Config()
		{
		}
	}
	[Token(Token = "0x2000071")]
	public static class Consts
	{
		[Token(Token = "0x4000339")]
		private const string HelpUrlBase = "http://saladgamer.com/vlb-doc/";

		[Token(Token = "0x400033A")]
		public const string HelpUrlBeam = "http://saladgamer.com/vlb-doc/comp-lightbeam/";

		[Token(Token = "0x400033B")]
		public const string HelpUrlDustParticles = "http://saladgamer.com/vlb-doc/comp-dustparticles/";

		[Token(Token = "0x400033C")]
		public const string HelpUrlDynamicOcclusion = "http://saladgamer.com/vlb-doc/comp-dynocclusion/";

		[Token(Token = "0x400033D")]
		public const string HelpUrlTriggerZone = "http://saladgamer.com/vlb-doc/comp-triggerzone/";

		[Token(Token = "0x400033E")]
		public const string HelpUrlConfig = "http://saladgamer.com/vlb-doc/config/";

		[Token(Token = "0x400033F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly bool ProceduralObjectsVisibleInEditor;

		[Token(Token = "0x4000340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Color FlatColor;

		[Token(Token = "0x4000341")]
		public const ColorMode ColorModeDefault = ColorMode.Flat;

		[Token(Token = "0x4000342")]
		public const float Alpha = 1f;

		[Token(Token = "0x4000343")]
		public const float SpotAngleDefault = 35f;

		[Token(Token = "0x4000344")]
		public const float SpotAngleMin = 0.1f;

		[Token(Token = "0x4000345")]
		public const float SpotAngleMax = 179.9f;

		[Token(Token = "0x4000346")]
		public const float ConeRadiusStart = 0.1f;

		[Token(Token = "0x4000347")]
		public const MeshType GeomMeshType = MeshType.Shared;

		[Token(Token = "0x4000348")]
		public const int GeomSidesDefault = 18;

		[Token(Token = "0x4000349")]
		public const int GeomSidesMin = 3;

		[Token(Token = "0x400034A")]
		public const int GeomSidesMax = 256;

		[Token(Token = "0x400034B")]
		public const int GeomSegmentsDefault = 5;

		[Token(Token = "0x400034C")]
		public const int GeomSegmentsMin = 0;

		[Token(Token = "0x400034D")]
		public const int GeomSegmentsMax = 64;

		[Token(Token = "0x400034E")]
		public const bool GeomCap = false;

		[Token(Token = "0x400034F")]
		public const AttenuationEquation AttenuationEquationDefault = AttenuationEquation.Quadratic;

		[Token(Token = "0x4000350")]
		public const float AttenuationCustomBlending = 0.5f;

		[Token(Token = "0x4000351")]
		public const float FadeStart = 0f;

		[Token(Token = "0x4000352")]
		public const float FadeEnd = 3f;

		[Token(Token = "0x4000353")]
		public const float FadeMinThreshold = 0.01f;

		[Token(Token = "0x4000354")]
		public const float DepthBlendDistance = 2f;

		[Token(Token = "0x4000355")]
		public const float CameraClippingDistance = 0.5f;

		[Token(Token = "0x4000356")]
		public const float FresnelPowMaxValue = 10f;

		[Token(Token = "0x4000357")]
		public const float FresnelPow = 8f;

		[Token(Token = "0x4000358")]
		public const float GlareFrontal = 0.5f;

		[Token(Token = "0x4000359")]
		public const float GlareBehind = 0.5f;

		[Token(Token = "0x400035A")]
		public const float NoiseIntensityMin = 0f;

		[Token(Token = "0x400035B")]
		public const float NoiseIntensityMax = 1f;

		[Token(Token = "0x400035C")]
		public const float NoiseIntensityDefault = 0.5f;

		[Token(Token = "0x400035D")]
		public const float NoiseScaleMin = 0.01f;

		[Token(Token = "0x400035E")]
		public const float NoiseScaleMax = 2f;

		[Token(Token = "0x400035F")]
		public const float NoiseScaleDefault = 0.5f;

		[Token(Token = "0x4000360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static readonly Vector3 NoiseVelocityDefault;

		[Token(Token = "0x4000361")]
		public const BlendingMode BlendingModeDefault = BlendingMode.Additive;

		[Token(Token = "0x4000362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static readonly BlendMode[] BlendingMode_SrcFactor;

		[Token(Token = "0x4000363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static readonly BlendMode[] BlendingMode_DstFactor;

		[Token(Token = "0x4000364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static readonly bool[] BlendingMode_AlphaAsBlack;

		[Token(Token = "0x4000365")]
		public const float DynOcclusionMinSurfaceRatioDefault = 0.5f;

		[Token(Token = "0x4000366")]
		public const float DynOcclusionMinSurfaceRatioMin = 50f;

		[Token(Token = "0x4000367")]
		public const float DynOcclusionMinSurfaceRatioMax = 100f;

		[Token(Token = "0x4000368")]
		public const float DynOcclusionMaxSurfaceDotDefault = 0.25f;

		[Token(Token = "0x4000369")]
		public const float DynOcclusionMaxSurfaceAngleMin = 45f;

		[Token(Token = "0x400036A")]
		public const float DynOcclusionMaxSurfaceAngleMax = 90f;

		[Token(Token = "0x400036B")]
		public const int ConfigGeometryLayerIDDefault = 1;

		[Token(Token = "0x400036C")]
		public const string ConfigGeometryTagDefault = "Untagged";

		[Token(Token = "0x400036D")]
		public const RenderQueue ConfigGeometryRenderQueueDefault = RenderQueue.Transparent;

		[Token(Token = "0x400036E")]
		public const bool ConfigGeometryForceSinglePassDefault = false;

		[Token(Token = "0x400036F")]
		public const int ConfigNoise3DSizeDefault = 64;

		[Token(Token = "0x4000370")]
		public const int ConfigSharedMeshSides = 24;

		[Token(Token = "0x4000371")]
		public const int ConfigSharedMeshSegments = 5;

		[Token(Token = "0x1700002C")]
		public static HideFlags ProceduralObjectsHideFlags
		{
			[Token(Token = "0x600049C")]
			[Address(RVA = "0x11FAC14", Offset = "0x11FAC14", VA = "0x11FAC14")]
			get
			{
				return default(HideFlags);
			}
		}
	}
	[Token(Token = "0x2000072")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F0F58", Offset = "0x4F0F58")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F0F58", Offset = "0x4F0F58")]
	public class DynamicOcclusion : MonoBehaviour
	{
		[Token(Token = "0x2000236")]
		private enum Direction
		{
			[Token(Token = "0x4000AC6")]
			Up,
			[Token(Token = "0x4000AC7")]
			Right,
			[Token(Token = "0x4000AC8")]
			Down,
			[Token(Token = "0x4000AC9")]
			Left
		}

		[Token(Token = "0x4000372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public LayerMask layerMask;

		[Token(Token = "0x4000373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minOccluderArea;

		[Token(Token = "0x4000374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int waitFrameCount;

		[Token(Token = "0x4000375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float minSurfaceRatio;

		[Token(Token = "0x4000376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxSurfaceDot;

		[Token(Token = "0x4000377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PlaneAlignment planeAlignment;

		[Token(Token = "0x4000378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float planeOffset;

		[Token(Token = "0x4000379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x400037A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int m_FrameCountToWait;

		[Token(Token = "0x400037B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float m_RangeMultiplier;

		[Token(Token = "0x400037C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private uint m_PrevNonSubHitDirectionId;

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x11FEC64", Offset = "0x11FEC64", VA = "0x11FEC64")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x600049F")]
		[Address(RVA = "0x11FED10", Offset = "0x11FED10", VA = "0x11FED10")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0x11FED70", Offset = "0x11FED70", VA = "0x11FED70")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0x11FEDB8", Offset = "0x11FEDB8", VA = "0x11FEDB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60004A2")]
		[Address(RVA = "0x11FEEC0", Offset = "0x11FEEC0", VA = "0x11FEEC0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0x11FF4FC", Offset = "0x11FF4FC", VA = "0x11FF4FC")]
		private Vector3 GetRandomVectorAround(Vector3 direction, float angleDiff)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0x11FF620", Offset = "0x11FF620", VA = "0x11FF620")]
		private RaycastHit GetBestHit(Vector3 rayPos, Vector3 rayDir)
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0x11FFA04", Offset = "0x11FFA04", VA = "0x11FFA04")]
		private Vector3 GetDirection(uint dirInt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004A6")]
		[Address(RVA = "0x11FFC6C", Offset = "0x11FFC6C", VA = "0x11FFC6C")]
		private bool IsHitValid(RaycastHit hit)
		{
			return default(bool);
		}

		[Token(Token = "0x60004A7")]
		[Address(RVA = "0x11FEEF4", Offset = "0x11FEEF4", VA = "0x11FEEF4")]
		private void ProcessRaycasts()
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0x11FFE14", Offset = "0x11FFE14", VA = "0x11FFE14")]
		private void SetHit(RaycastHit hit)
		{
		}

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0x11FED94", Offset = "0x11FED94", VA = "0x11FED94")]
		private void SetHitNull()
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0x11FFFEC", Offset = "0x11FFFEC", VA = "0x11FFFEC")]
		private void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0x1200160", Offset = "0x1200160", VA = "0x1200160")]
		private void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0x120043C", Offset = "0x120043C", VA = "0x120043C")]
		public DynamicOcclusion()
		{
		}
	}
	[Token(Token = "0x2000073")]
	public enum ColorMode
	{
		[Token(Token = "0x400037E")]
		Flat,
		[Token(Token = "0x400037F")]
		Gradient
	}
	[Token(Token = "0x2000074")]
	public enum AttenuationEquation
	{
		[Token(Token = "0x4000381")]
		Linear,
		[Token(Token = "0x4000382")]
		Quadratic,
		[Token(Token = "0x4000383")]
		Blend
	}
	[Token(Token = "0x2000075")]
	public enum BlendingMode
	{
		[Token(Token = "0x4000385")]
		Additive,
		[Token(Token = "0x4000386")]
		SoftAdditive,
		[Token(Token = "0x4000387")]
		TraditionalTransparency
	}
	[Token(Token = "0x2000076")]
	public enum MeshType
	{
		[Token(Token = "0x4000389")]
		Shared,
		[Token(Token = "0x400038A")]
		Custom
	}
	[Token(Token = "0x2000077")]
	public enum RenderQueue
	{
		[Token(Token = "0x400038C")]
		Custom = 0,
		[Token(Token = "0x400038D")]
		Background = 1000,
		[Token(Token = "0x400038E")]
		Geometry = 2000,
		[Token(Token = "0x400038F")]
		AlphaTest = 2450,
		[Token(Token = "0x4000390")]
		GeometryLast = 2500,
		[Token(Token = "0x4000391")]
		Transparent = 3000,
		[Token(Token = "0x4000392")]
		Overlay = 4000
	}
	[Token(Token = "0x2000078")]
	public enum PlaneAlignment
	{
		[Token(Token = "0x4000394")]
		Surface,
		[Token(Token = "0x4000395")]
		Beam
	}
	[Token(Token = "0x2000079")]
	public static class GlobalMesh
	{
		[Token(Token = "0x4000396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Mesh ms_Mesh;

		[Token(Token = "0x1700002D")]
		public static Mesh mesh
		{
			[Token(Token = "0x60004AD")]
			[Address(RVA = "0x11FC0B8", Offset = "0x11FC0B8", VA = "0x11FC0B8")]
			get
			{
				return null;
			}
		}
	}
	[Token(Token = "0x200007A")]
	public sealed class HighlightNullAttribute : PropertyAttribute
	{
		[Token(Token = "0x60004AF")]
		[Address(RVA = "0x1200494", Offset = "0x1200494", VA = "0x1200494")]
		public HighlightNullAttribute()
		{
		}
	}
	[Token(Token = "0x200007B")]
	public static class MeshGenerator
	{
		[Token(Token = "0x4000397")]
		private const float kMinTruncatedRadius = 0.001f;

		[Token(Token = "0x1700002E")]
		private static bool duplicateBackFaces
		{
			[Token(Token = "0x60004B0")]
			[Address(RVA = "0x120049C", Offset = "0x120049C", VA = "0x120049C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0x1200520", Offset = "0x1200520", VA = "0x1200520")]
		public static Mesh GenerateConeZ_RadiusAndAngle(float lengthZ, float radiusStart, float coneAngle, int numSides, int numSegments, bool cap)
		{
			return null;
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0x1200604", Offset = "0x1200604", VA = "0x1200604")]
		public static Mesh GenerateConeZ_Angle(float lengthZ, float coneAngle, int numSides, int numSegments, bool cap)
		{
			return null;
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0x11FB2B4", Offset = "0x11FB2B4", VA = "0x11FB2B4")]
		public static Mesh GenerateConeZ_Radius(float lengthZ, float radiusStart, float radiusEnd, int numSides, int numSegments, bool cap)
		{
			return null;
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0x1200638", Offset = "0x1200638", VA = "0x1200638")]
		public static int GetVertexCount(int numSides, int numSegments, bool geomCap)
		{
			return default(int);
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0x1200660", Offset = "0x1200660", VA = "0x1200660")]
		public static int GetIndicesCount(int numSides, int numSegments, bool geomCap)
		{
			return default(int);
		}

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0x1200690", Offset = "0x1200690", VA = "0x1200690")]
		public static int GetSharedMeshVertexCount()
		{
			return default(int);
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0x1200740", Offset = "0x1200740", VA = "0x1200740")]
		public static int GetSharedMeshIndicesCount()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200007C")]
	public static class Noise3D
	{
		[Token(Token = "0x4000398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool ms_IsSupportedChecked;

		[Token(Token = "0x4000399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_IsSupported;

		[Token(Token = "0x400039A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Texture3D ms_NoiseTexture;

		[Token(Token = "0x400039B")]
		private const HideFlags kHideFlags = HideFlags.HideAndDontSave;

		[Token(Token = "0x400039C")]
		private const int kMinShaderLevel = 35;

		[Token(Token = "0x1700002F")]
		public static bool isSupported
		{
			[Token(Token = "0x60004B8")]
			[Address(RVA = "0x11FD75C", Offset = "0x11FD75C", VA = "0x11FD75C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000030")]
		public static bool isProperlyLoaded
		{
			[Token(Token = "0x60004B9")]
			[Address(RVA = "0x120089C", Offset = "0x120089C", VA = "0x120089C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000031")]
		public static string isNotSupportedString
		{
			[Token(Token = "0x60004BA")]
			[Address(RVA = "0x12007F4", Offset = "0x12007F4", VA = "0x12007F4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0x1200954", Offset = "0x1200954", VA = "0x1200954")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x500454", Offset = "0x500454")]
		private static void OnStartUp()
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0x11FD8EC", Offset = "0x11FD8EC", VA = "0x11FD8EC")]
		public static void LoadIfNeeded()
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0x12009C4", Offset = "0x12009C4", VA = "0x12009C4")]
		private static Texture3D LoadTexture3D(TextAsset textData, int size)
		{
			return null;
		}
	}
	[Token(Token = "0x200007D")]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F1010", Offset = "0x4F1010")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F1010", Offset = "0x4F1010")]
	public class TriggerZone : MonoBehaviour
	{
		[Token(Token = "0x400039D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool setIsTrigger;

		[Token(Token = "0x400039E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rangeMultiplier;

		[Token(Token = "0x400039F")]
		private const int kMeshColliderNumSides = 8;

		[Token(Token = "0x40003A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Mesh m_Mesh;

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0x1200DF4", Offset = "0x1200DF4", VA = "0x1200DF4")]
		private void Update()
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0x12010D4", Offset = "0x12010D4", VA = "0x12010D4")]
		public TriggerZone()
		{
		}
	}
	[Token(Token = "0x200007E")]
	public static class Utils
	{
		[Token(Token = "0x2000237")]
		public enum FloatPackingPrecision
		{
			[Token(Token = "0x4000ACB")]
			High = 64,
			[Token(Token = "0x4000ACC")]
			Low = 8,
			[Token(Token = "0x4000ACD")]
			Undef = 0
		}

		[Token(Token = "0x40003A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static FloatPackingPrecision ms_FloatPackingPrecision;

		[Token(Token = "0x40003A2")]
		private const int kFloatPackingHighMinShaderLevel = 35;

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0x11FAC98", Offset = "0x11FAC98", VA = "0x11FAC98")]
		public static string GetPath(Transform current)
		{
			return null;
		}

		[Token(Token = "0x60004C2")]
		public static T NewWithComponent<T>(string name) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60004C3")]
		public static T GetOrAddComponent<T>(this GameObject self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60004C4")]
		public static T GetOrAddComponent<T>(this MonoBehaviour self) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0x12010EC", Offset = "0x12010EC", VA = "0x12010EC")]
		public static bool HasFlag(this Enum mask, Enum flags)
		{
			return default(bool);
		}

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0x12011F4", Offset = "0x12011F4", VA = "0x12011F4")]
		public static Vector2 xy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0x1201214", Offset = "0x1201214", VA = "0x1201214")]
		public static Vector2 xz(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0x1201238", Offset = "0x1201238", VA = "0x1201238")]
		public static Vector2 yz(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0x1201260", Offset = "0x1201260", VA = "0x1201260")]
		public static Vector2 yx(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0x120128C", Offset = "0x120128C", VA = "0x120128C")]
		public static Vector2 zx(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0x12012B4", Offset = "0x12012B4", VA = "0x12012B4")]
		public static Vector2 zy(this Vector3 aVector)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0x12012D8", Offset = "0x12012D8", VA = "0x12012D8")]
		public static float GetVolumeCubic(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0x11FF8C0", Offset = "0x11FF8C0", VA = "0x11FF8C0")]
		public static float GetMaxArea2D(this Bounds self)
		{
			return default(float);
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0x1201350", Offset = "0x1201350", VA = "0x1201350")]
		public static Color Opaque(this Color self)
		{
			return default(Color);
		}

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0x1201380", Offset = "0x1201380", VA = "0x1201380")]
		public static void GizmosDrawPlane(Vector3 normal, Vector3 position, Color color, float size = 1f)
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0x1200184", Offset = "0x1200184", VA = "0x1200184")]
		public static Plane TranslateCustom(this Plane plane, Vector3 translation)
		{
			return default(Plane);
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0x12018A4", Offset = "0x12018A4", VA = "0x12018A4")]
		public static bool IsValid(this Plane plane)
		{
			return default(bool);
		}

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0x11FD47C", Offset = "0x11FD47C", VA = "0x11FD47C")]
		public static Matrix4x4 SampleInMatrix(this Gradient self, int floatPackingPrecision)
		{
			return default(Matrix4x4);
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0x1201A3C", Offset = "0x1201A3C", VA = "0x1201A3C")]
		public static Color[] SampleInArray(this Gradient self, int samplesCount)
		{
			return null;
		}

		[Token(Token = "0x60004D4")]
		[Address(RVA = "0x1201B88", Offset = "0x1201B88", VA = "0x1201B88")]
		private static Vector4 Vector4_Floor(Vector4 vec)
		{
			return default(Vector4);
		}

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0x1201914", Offset = "0x1201914", VA = "0x1201914")]
		public static float PackToFloat(this Color color, int floatPackingPrecision)
		{
			return default(float);
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0x11FD38C", Offset = "0x11FD38C", VA = "0x11FD38C")]
		public static FloatPackingPrecision GetFloatPackingPrecision()
		{
			return default(FloatPackingPrecision);
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0x1201C64", Offset = "0x1201C64", VA = "0x1201C64")]
		public static void MarkCurrentSceneDirty()
		{
		}
	}
	[Token(Token = "0x200007F")]
	public static class Version
	{
		[Token(Token = "0x40003A3")]
		public const int Current = 1510;
	}
	[Token(Token = "0x2000080")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F10C8", Offset = "0x4F10C8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F10C8", Offset = "0x4F10C8")]
	public class VolumetricDustParticles : MonoBehaviour
	{
		[Token(Token = "0x2000238")]
		public enum Direction
		{
			[Token(Token = "0x4000ACF")]
			Beam,
			[Token(Token = "0x4000AD0")]
			Random
		}

		[Token(Token = "0x40003A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8FD0", Offset = "0x4F8FD0")]
		public float alpha;

		[Token(Token = "0x40003A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F8FE8", Offset = "0x4F8FE8")]
		public float size;

		[Token(Token = "0x40003A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Direction direction;

		[Token(Token = "0x40003A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x40003A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float density;

		[Token(Token = "0x40003A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9008", Offset = "0x4F9008")]
		public float spawnMaxDistance;

		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool cullingEnabled;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float cullingMaxDistance;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F9020", Offset = "0x4F9020")]
		private bool <isCulled>k__BackingField;

		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool isFeatureSupported;

		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem m_Particles;

		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private ParticleSystemRenderer m_Renderer;

		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		private static bool ms_NoMainCameraLogged;

		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static Camera ms_MainCamera;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private VolumetricLightBeam m_Master;

		[Token(Token = "0x17000032")]
		public bool isCulled
		{
			[Token(Token = "0x60004D9")]
			[Address(RVA = "0x1201C6C", Offset = "0x1201C6C", VA = "0x1201C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500574", Offset = "0x500574")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004DA")]
			[Address(RVA = "0x1201C74", Offset = "0x1201C74", VA = "0x1201C74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500584", Offset = "0x500584")]
			private set
			{
			}
		}

		[Token(Token = "0x17000033")]
		public bool particlesAreInstantiated
		{
			[Token(Token = "0x60004DB")]
			[Address(RVA = "0x1201C7C", Offset = "0x1201C7C", VA = "0x1201C7C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000034")]
		public int particlesCurrentCount
		{
			[Token(Token = "0x60004DC")]
			[Address(RVA = "0x1201CFC", Offset = "0x1201CFC", VA = "0x1201CFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000035")]
		public int particlesMaxCount
		{
			[Token(Token = "0x60004DD")]
			[Address(RVA = "0x1201DA8", Offset = "0x1201DA8", VA = "0x1201DA8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000036")]
		public Camera mainCamera
		{
			[Token(Token = "0x60004DE")]
			[Address(RVA = "0x1201E74", Offset = "0x1201E74", VA = "0x1201E74")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0x120213C", Offset = "0x120213C", VA = "0x120213C")]
		private void Start()
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0x12021B4", Offset = "0x12021B4", VA = "0x12021B4")]
		private void InstantiateParticleSystem()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0x12024B8", Offset = "0x12024B8", VA = "0x12024B8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0x12023CC", Offset = "0x12023CC", VA = "0x12023CC")]
		private void SetActiveAndPlay()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0x1202CD0", Offset = "0x1202CD0", VA = "0x1202CD0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0x1202D94", Offset = "0x1202D94", VA = "0x1202D94")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0x1202E70", Offset = "0x1202E70", VA = "0x1202E70")]
		private void Update()
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0x12024BC", Offset = "0x12024BC", VA = "0x12024BC")]
		private void SetParticleProperties()
		{
		}

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0x1202E9C", Offset = "0x1202E9C", VA = "0x1202E9C")]
		private void UpdateCulling()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0x120331C", Offset = "0x120331C", VA = "0x120331C")]
		public VolumetricDustParticles()
		{
		}
	}
	[Token(Token = "0x2000081")]
	[ExecuteInEditMode]
	[DisallowMultipleComponent]
	[SelectionBase]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F1180", Offset = "0x4F1180")]
	public class VolumetricLightBeam : MonoBehaviour
	{
		[Token(Token = "0x2000239")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F82E0", Offset = "0x4F82E0")]
		private sealed class <CoPlaytimeUpdate>d__96 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000AD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000AD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public VolumetricLightBeam <>4__this;

			[Token(Token = "0x170000E2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DE0")]
				[Address(RVA = "0x1204BB0", Offset = "0x1204BB0", VA = "0x1204BB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000DE2")]
				[Address(RVA = "0x1204C30", Offset = "0x1204C30", VA = "0x1204C30", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DDD")]
			[Address(RVA = "0x12045A0", Offset = "0x12045A0", VA = "0x12045A0")]
			[DebuggerHidden]
			public <CoPlaytimeUpdate>d__96(int <>1__state)
			{
			}

			[Token(Token = "0x6000DDE")]
			[Address(RVA = "0x1204B24", Offset = "0x1204B24", VA = "0x1204B24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DDF")]
			[Address(RVA = "0x1204B28", Offset = "0x1204B28", VA = "0x1204B28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000DE1")]
			[Address(RVA = "0x1204BB8", Offset = "0x1204BB8", VA = "0x1204BB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool colorFromLight;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColorMode colorMode;

		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "ColorUsageAttribute", RVA = "0x4F9030", Offset = "0x4F9030")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4F9030", Offset = "0x4F9030")]
		public Color color;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Gradient colorGradient;

		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9080", Offset = "0x4F9080")]
		public float alphaInside;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4F9098", Offset = "0x4F9098")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9098", Offset = "0x4F9098")]
		public float alphaOutside;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BlendingMode blendingMode;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4F90E8", Offset = "0x4F90E8")]
		public bool spotAngleFromLight;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F911C", Offset = "0x4F911C")]
		public float spotAngle;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4F913C", Offset = "0x4F913C")]
		public float coneRadiusStart;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public MeshType geomMeshType;

		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4F9170", Offset = "0x4F9170")]
		public int geomCustomSides;

		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public int geomCustomSegments;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool geomCap;

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool fadeEndFromLight;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AttenuationEquation attenuationEquation;

		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F91A4", Offset = "0x4F91A4")]
		public float attenuationCustomBlending;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float fadeStart;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float fadeEnd;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float depthBlendDistance;

		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float cameraClippingDistance;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F91BC", Offset = "0x4F91BC")]
		public float glareFrontal;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F91D4", Offset = "0x4F91D4")]
		public float glareBehind;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4F91EC", Offset = "0x4F91EC")]
		public float boostDistanceInside;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x4F9220", Offset = "0x4F9220")]
		public float fresnelPowInside;

		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4F9254", Offset = "0x4F9254")]
		public float fresnelPow;

		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public bool noiseEnabled;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9288", Offset = "0x4F9288")]
		public float noiseIntensity;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool noiseScaleUseGlobal;

		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F92A0", Offset = "0x4F92A0")]
		public float noiseScaleLocal;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public bool noiseVelocityUseGlobal;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 noiseVelocityLocal;

		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Plane m_PlaneWS;

		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[SerializeField]
		private int pluginVersion;

		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4F92CC", Offset = "0x4F92CC")]
		[SerializeField]
		private bool _TrackChangesDuringPlaytime;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		private int _SortingLayerID;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private int _SortingOrder;

		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private BeamGeometry m_BeamGeom;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine m_CoPlaytimeUpdate;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Light _CachedLight;

		[Token(Token = "0x17000037")]
		public float coneAngle
		{
			[Token(Token = "0x60004EA")]
			[Address(RVA = "0x11FD27C", Offset = "0x11FD27C", VA = "0x11FD27C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000038")]
		public float coneRadiusEnd
		{
			[Token(Token = "0x60004EB")]
			[Address(RVA = "0x11FD1D4", Offset = "0x11FD1D4", VA = "0x11FD1D4")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000039")]
		public float coneVolume
		{
			[Token(Token = "0x60004EC")]
			[Address(RVA = "0x12033F8", Offset = "0x12033F8", VA = "0x12033F8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003A")]
		public float coneApexOffsetZ
		{
			[Token(Token = "0x60004ED")]
			[Address(RVA = "0x11FD334", Offset = "0x11FD334", VA = "0x11FD334")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003B")]
		public int geomSides
		{
			[Token(Token = "0x60004EE")]
			[Address(RVA = "0x1203440", Offset = "0x1203440", VA = "0x1203440")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004EF")]
			[Address(RVA = "0x12034E0", Offset = "0x12034E0", VA = "0x12034E0")]
			set
			{
			}
		}

		[Token(Token = "0x1700003C")]
		public int geomSegments
		{
			[Token(Token = "0x60004F0")]
			[Address(RVA = "0x1203570", Offset = "0x1203570", VA = "0x1203570")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004F1")]
			[Address(RVA = "0x1203610", Offset = "0x1203610", VA = "0x1203610")]
			set
			{
			}
		}

		[Token(Token = "0x1700003D")]
		public float attenuationLerpLinearQuad
		{
			[Token(Token = "0x60004F2")]
			[Address(RVA = "0x11FD730", Offset = "0x11FD730", VA = "0x11FD730")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700003E")]
		public int sortingLayerID
		{
			[Token(Token = "0x60004F3")]
			[Address(RVA = "0x12036A0", Offset = "0x12036A0", VA = "0x12036A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004F4")]
			[Address(RVA = "0x12036A8", Offset = "0x12036A8", VA = "0x12036A8")]
			set
			{
			}
		}

		[Token(Token = "0x1700003F")]
		public string sortingLayerName
		{
			[Token(Token = "0x60004F5")]
			[Address(RVA = "0x120376C", Offset = "0x120376C", VA = "0x120376C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60004F6")]
			[Address(RVA = "0x1203778", Offset = "0x1203778", VA = "0x1203778")]
			set
			{
			}
		}

		[Token(Token = "0x17000040")]
		public int sortingOrder
		{
			[Token(Token = "0x60004F7")]
			[Address(RVA = "0x12037A0", Offset = "0x12037A0", VA = "0x12037A0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60004F8")]
			[Address(RVA = "0x12037A8", Offset = "0x12037A8", VA = "0x12037A8")]
			set
			{
			}
		}

		[Token(Token = "0x17000041")]
		public bool trackChangesDuringPlaytime
		{
			[Token(Token = "0x60004F9")]
			[Address(RVA = "0x120386C", Offset = "0x120386C", VA = "0x120386C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60004FA")]
			[Address(RVA = "0x1203874", Offset = "0x1203874", VA = "0x1203874")]
			set
			{
			}
		}

		[Token(Token = "0x17000042")]
		public bool isCurrentlyTrackingChanges
		{
			[Token(Token = "0x60004FB")]
			[Address(RVA = "0x12038D0", Offset = "0x12038D0", VA = "0x12038D0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000043")]
		public bool hasGeometry
		{
			[Token(Token = "0x60004FC")]
			[Address(RVA = "0x1203140", Offset = "0x1203140", VA = "0x1203140")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000044")]
		public Bounds bounds
		{
			[Token(Token = "0x60004FD")]
			[Address(RVA = "0x12031C4", Offset = "0x12031C4", VA = "0x12031C4")]
			get
			{
				return default(Bounds);
			}
		}

		[Token(Token = "0x17000045")]
		public int blendingModeAsInt
		{
			[Token(Token = "0x6000501")]
			[Address(RVA = "0x11FD604", Offset = "0x11FD604", VA = "0x11FD604")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000046")]
		public string meshStats
		{
			[Token(Token = "0x6000502")]
			[Address(RVA = "0x1203A30", Offset = "0x1203A30", VA = "0x1203A30")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000047")]
		public int meshVerticesCount
		{
			[Token(Token = "0x6000503")]
			[Address(RVA = "0x1203BFC", Offset = "0x1203BFC", VA = "0x1203BFC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000048")]
		public int meshTrianglesCount
		{
			[Token(Token = "0x6000504")]
			[Address(RVA = "0x1203D00", Offset = "0x1203D00", VA = "0x1203D00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000049")]
		private Light lightSpotAttached
		{
			[Token(Token = "0x6000505")]
			[Address(RVA = "0x1203E2C", Offset = "0x1203E2C", VA = "0x1203E2C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0x12002BC", Offset = "0x12002BC", VA = "0x12002BC")]
		public void SetClippingPlane(Plane planeWS)
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0x1200390", Offset = "0x1200390", VA = "0x1200390")]
		public void SetClippingPlaneOff()
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0x12038E0", Offset = "0x12038E0", VA = "0x12038E0")]
		public bool IsColliderHiddenByDynamicOccluder(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0x1203F44", Offset = "0x1203F44", VA = "0x1203F44")]
		public float GetInsideBeamFactor(Vector3 posWS)
		{
			return default(float);
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0x11FE32C", Offset = "0x11FE32C", VA = "0x11FE32C")]
		public float GetInsideBeamFactorFromObjectSpacePos(Vector3 posOS)
		{
			return default(float);
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0x1203FAC", Offset = "0x1203FAC", VA = "0x1203FAC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x500594", Offset = "0x500594")]
		public void Generate()
		{
		}

		[Token(Token = "0x6000509")]
		[Address(RVA = "0x1203FBC", Offset = "0x1203FBC", VA = "0x1203FBC", Slot = "4")]
		public virtual void GenerateGeometry()
		{
		}

		[Token(Token = "0x600050A")]
		[Address(RVA = "0x12042E8", Offset = "0x12042E8", VA = "0x12042E8", Slot = "5")]
		public virtual void UpdateAfterManualPropertyChange()
		{
		}

		[Token(Token = "0x600050B")]
		[Address(RVA = "0x1204390", Offset = "0x1204390", VA = "0x1204390")]
		private void Start()
		{
		}

		[Token(Token = "0x600050C")]
		[Address(RVA = "0x12043A0", Offset = "0x12043A0", VA = "0x12043A0")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600050D")]
		[Address(RVA = "0x1204460", Offset = "0x1204460", VA = "0x1204460")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600050E")]
		[Address(RVA = "0x120387C", Offset = "0x120387C", VA = "0x120387C")]
		private void StartPlaytimeUpdateIfNeeded()
		{
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0x1204520", Offset = "0x1204520", VA = "0x1204520")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5005C8", Offset = "0x5005C8")]
		private IEnumerator CoPlaytimeUpdate()
		{
			return null;
		}

		[Token(Token = "0x6000510")]
		[Address(RVA = "0x12045C0", Offset = "0x12045C0", VA = "0x12045C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0x12045C4", Offset = "0x12045C4", VA = "0x12045C4")]
		private void DestroyBeam()
		{
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0x12046A0", Offset = "0x12046A0", VA = "0x12046A0")]
		private void AssignPropertiesFromSpotLight(Light lightSpot)
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0x12047E4", Offset = "0x12047E4", VA = "0x12047E4")]
		private void ClampProperties()
		{
		}

		[Token(Token = "0x6000514")]
		[Address(RVA = "0x12042C0", Offset = "0x12042C0", VA = "0x12042C0")]
		private void ValidateProperties()
		{
		}

		[Token(Token = "0x6000515")]
		[Address(RVA = "0x1204204", Offset = "0x1204204", VA = "0x1204204")]
		private void HandleBackwardCompatibility(int serializedVersion, int newVersion)
		{
		}

		[Token(Token = "0x6000516")]
		[Address(RVA = "0x12049D8", Offset = "0x12049D8", VA = "0x12049D8")]
		public VolumetricLightBeam()
		{
		}
	}
}
namespace VLB_Samples
{
	[Token(Token = "0x2000082")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F11E8", Offset = "0x4F11E8")]
	public class CameraToggleBeamVisibility : MonoBehaviour
	{
		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		private KeyCode m_KeyCode;

		[Token(Token = "0x6000517")]
		[Address(RVA = "0x1204C38", Offset = "0x1204C38", VA = "0x1204C38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000518")]
		[Address(RVA = "0x1204D70", Offset = "0x1204D70", VA = "0x1204D70")]
		public CameraToggleBeamVisibility()
		{
		}
	}
	[Token(Token = "0x2000083")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F1258", Offset = "0x4F1258")]
	public class CheckIfInsideBeam : MonoBehaviour
	{
		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private bool isInsideBeam;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Material m_Material;

		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Collider m_Collider;

		[Token(Token = "0x6000519")]
		[Address(RVA = "0x1204D80", Offset = "0x1204D80", VA = "0x1204D80")]
		private void Start()
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0x1204E58", Offset = "0x1204E58", VA = "0x1204E58")]
		private void Update()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0x1204F60", Offset = "0x1204F60", VA = "0x1204F60")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0x1204F6C", Offset = "0x1204F6C", VA = "0x1204F6C")]
		private void OnTriggerStay(Collider trigger)
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0x1205040", Offset = "0x1205040", VA = "0x1205040")]
		public CheckIfInsideBeam()
		{
		}
	}
	[Token(Token = "0x2000084")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F130C", Offset = "0x4F130C")]
	public class FeaturesNotSupportedMessage : MonoBehaviour
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0x1205048", Offset = "0x1205048", VA = "0x1205048")]
		private void Start()
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0x1205140", Offset = "0x1205140", VA = "0x1205140")]
		public FeaturesNotSupportedMessage()
		{
		}
	}
	[Token(Token = "0x2000085")]
	public class FreeCameraController : MonoBehaviour
	{
		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float cameraSensitivity;

		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float speedNormal;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float speedFactorSlow;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speedFactorFast;

		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float speedClimb;

		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float rotationH;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float rotationV;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_UseMouseView;

		[Token(Token = "0x1700004A")]
		private bool useMouseView
		{
			[Token(Token = "0x6000520")]
			[Address(RVA = "0x1205148", Offset = "0x1205148", VA = "0x1205148")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000521")]
			[Address(RVA = "0x1205150", Offset = "0x1205150", VA = "0x1205150")]
			set
			{
			}
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0x120517C", Offset = "0x120517C", VA = "0x120517C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0x1205238", Offset = "0x1205238", VA = "0x1205238")]
		private void Update()
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0x1205A10", Offset = "0x1205A10", VA = "0x1205A10")]
		public FreeCameraController()
		{
		}
	}
	[Token(Token = "0x2000086")]
	public class LightGenerator : MonoBehaviour
	{
		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9344", Offset = "0x4F9344")]
		[SerializeField]
		private int CountX;

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9380", Offset = "0x4F9380")]
		[SerializeField]
		private int CountY;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		private float OffsetUnits;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float PositionY;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private bool NoiseEnabled;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		[SerializeField]
		private bool AddLight;

		[Token(Token = "0x6000525")]
		[Address(RVA = "0x1205A50", Offset = "0x1205A50", VA = "0x1205A50")]
		public void Generate()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0x12066AC", Offset = "0x12066AC", VA = "0x12066AC")]
		public LightGenerator()
		{
		}
	}
	[Token(Token = "0x2000087")]
	public class Rotater : MonoBehaviour
	{
		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "FormerlySerializedAsAttribute", RVA = "0x4F93FC", Offset = "0x4F93FC")]
		public Vector3 EulerSpeed;

		[Token(Token = "0x6000527")]
		[Address(RVA = "0x12066D4", Offset = "0x12066D4", VA = "0x12066D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0x120689C", Offset = "0x120689C", VA = "0x120689C")]
		public Rotater()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x2000088")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F137C", Offset = "0x4F137C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F137C", Offset = "0x4F137C")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200023A")]
		public enum Mode
		{
			[Token(Token = "0x4000AD5")]
			AnimationClips,
			[Token(Token = "0x4000AD6")]
			AnimationStates,
			[Token(Token = "0x4000AD7")]
			PlayableDirector,
			[Token(Token = "0x4000AD8")]
			Realtime
		}

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9430", Offset = "0x4F9430")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9430", Offset = "0x4F9430")]
		public int frameRate;

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9484", Offset = "0x4F9484")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9484", Offset = "0x4F9484")]
		public float keyReductionError;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F94D8", Offset = "0x4F94D8")]
		public Mode mode;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F950C", Offset = "0x4F950C")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9540", Offset = "0x4F9540")]
		public string[] animationStates;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9574", Offset = "0x4F9574")]
		public bool loop;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F95A8", Offset = "0x4F95A8")]
		public string saveToFolder;

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F95DC", Offset = "0x4F95DC")]
		public string appendName;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9610", Offset = "0x4F9610")]
		public string saveName;

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F9644", Offset = "0x4F9644")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F9654", Offset = "0x4F9654")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F96C4", Offset = "0x4F96C4")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x1700004B")]
		public bool isBaking
		{
			[Token(Token = "0x600052D")]
			[Address(RVA = "0x1797888", Offset = "0x1797888", VA = "0x1797888")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500708", Offset = "0x500708")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600052E")]
			[Address(RVA = "0x1797890", Offset = "0x1797890", VA = "0x1797890")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500718", Offset = "0x500718")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public float bakingProgress
		{
			[Token(Token = "0x600052F")]
			[Address(RVA = "0x1797898", Offset = "0x1797898", VA = "0x1797898")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500728", Offset = "0x500728")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000530")]
			[Address(RVA = "0x17978A0", Offset = "0x17978A0", VA = "0x17978A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500738", Offset = "0x500738")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004D")]
		protected float clipLength
		{
			[Token(Token = "0x6000536")]
			[Address(RVA = "0x17978A8", Offset = "0x17978A8", VA = "0x17978A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500748", Offset = "0x500748")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000537")]
			[Address(RVA = "0x17978B0", Offset = "0x17978B0", VA = "0x17978B0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500758", Offset = "0x500758")]
			private set
			{
			}
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0x1797728", Offset = "0x1797728", VA = "0x1797728")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500638", Offset = "0x500638")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0x1797780", Offset = "0x1797780", VA = "0x1797780")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x50066C", Offset = "0x50066C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0x17977D8", Offset = "0x17977D8", VA = "0x17977D8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x5006A0", Offset = "0x5006A0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x600052C")]
		[Address(RVA = "0x1797830", Offset = "0x1797830", VA = "0x1797830")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x5006D4", Offset = "0x5006D4")]
		private void ASThread()
		{
		}

		[Token(Token = "0x6000531")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x6000532")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x6000533")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x6000534")]
		protected abstract void OnSetCurves(ref AnimationClip clip);

		[Token(Token = "0x6000535")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x6000538")]
		[Address(RVA = "0x17978B8", Offset = "0x17978B8", VA = "0x17978B8")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0x17978BC", Offset = "0x17978BC", VA = "0x17978BC")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0x17978C0", Offset = "0x17978C0", VA = "0x17978C0")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0x17978C4", Offset = "0x17978C4", VA = "0x17978C4")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x2000089")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F96D4", Offset = "0x4F96D4")]
		public bool markAsLegacy;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9708", Offset = "0x4F9708")]
		public Transform root;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F973C", Offset = "0x4F973C")]
		public Transform rootNode;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9770", Offset = "0x4F9770")]
		public Transform[] ignoreList;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F97A4", Offset = "0x4F97A4")]
		public Transform[] bakePositionList;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BakerTransform[] children;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private BakerTransform rootChild;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int rootChildIndex;

		[Token(Token = "0x600053C")]
		[Address(RVA = "0x11855FC", Offset = "0x11855FC", VA = "0x11855FC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0x1185A88", Offset = "0x1185A88", VA = "0x1185A88", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x600053E")]
		[Address(RVA = "0x1185A90", Offset = "0x1185A90", VA = "0x1185A90", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0x1185BCC", Offset = "0x1185BCC", VA = "0x1185BCC", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0x1185C54", Offset = "0x1185C54", VA = "0x1185C54", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0x1185CDC", Offset = "0x1185CDC", VA = "0x1185CDC", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0x11858B0", Offset = "0x11858B0", VA = "0x11858B0")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0x118599C", Offset = "0x118599C", VA = "0x118599C")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0x1185D64", Offset = "0x1185D64", VA = "0x1185D64")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x200008A")]
	public class TQ
	{
		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 t;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Quaternion q;

		[Token(Token = "0x6000545")]
		[Address(RVA = "0x118AFB4", Offset = "0x118AFB4", VA = "0x118AFB4")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x200008B")]
	public class AvatarUtility
	{
		[Token(Token = "0x6000546")]
		[Address(RVA = "0x17961E8", Offset = "0x17961E8", VA = "0x17961E8")]
		public static Quaternion GetPostRotation(Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0x1796488", Offset = "0x1796488", VA = "0x1796488")]
		public static TQ GetIKGoalTQ(Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0x1796468", Offset = "0x1796468", VA = "0x1796468")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x6000549")]
		[Address(RVA = "0x1796DA0", Offset = "0x1796DA0", VA = "0x1796DA0")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x200008C")]
	public static class BakerUtilities
	{
		[Token(Token = "0x600054A")]
		[Address(RVA = "0x1798D60", Offset = "0x1798D60", VA = "0x1798D60")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0x179A894", Offset = "0x179A894", VA = "0x179A894")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0x179858C", Offset = "0x179858C", VA = "0x179858C")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0x1798DA4", Offset = "0x1798DA4", VA = "0x1798DA4")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0x1798050", Offset = "0x1798050", VA = "0x1798050")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x200008D")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Transform transform;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private string Qx;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string Qy;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private string Qz;

		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qw;

		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private string Tx;

		[Token(Token = "0x400040C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Ty;

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private string Tz;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve rotX;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve posX;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public AnimationCurve posY;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve posZ;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private AvatarIKGoal goal;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Quaternion lastQ;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool lastQSet;

		[Token(Token = "0x600054F")]
		[Address(RVA = "0x17979A0", Offset = "0x17979A0", VA = "0x17979A0")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0x1797C30", Offset = "0x1797C30", VA = "0x1797C30")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0x1797ADC", Offset = "0x1797ADC", VA = "0x1797ADC")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000552")]
		[Address(RVA = "0x1797D7C", Offset = "0x1797D7C", VA = "0x1797D7C")]
		public void SetIKKeyframes(float time, Avatar avatar, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x6000553")]
		[Address(RVA = "0x17982EC", Offset = "0x17982EC", VA = "0x17982EC")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000554")]
		[Address(RVA = "0x1798430", Offset = "0x1798430", VA = "0x1798430")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x6000555")]
		[Address(RVA = "0x1798524", Offset = "0x1798524", VA = "0x1798524")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000556")]
		[Address(RVA = "0x1798494", Offset = "0x1798494", VA = "0x1798494")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000557")]
		[Address(RVA = "0x179887C", Offset = "0x179887C", VA = "0x179887C")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000558")]
		[Address(RVA = "0x1798938", Offset = "0x1798938", VA = "0x1798938")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200008E")]
	public class BakerMuscle
	{
		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AnimationCurve curve;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private int muscleIndex;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string propertyName;

		[Token(Token = "0x6000559")]
		[Address(RVA = "0x1798DA8", Offset = "0x1798DA8", VA = "0x1798DA8")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x600055A")]
		[Address(RVA = "0x1798E1C", Offset = "0x1798E1C", VA = "0x1798E1C")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x600055B")]
		[Address(RVA = "0x17996F0", Offset = "0x17996F0", VA = "0x17996F0")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x600055C")]
		[Address(RVA = "0x17997AC", Offset = "0x17997AC", VA = "0x17997AC")]
		public void SetCurves(ref AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x600055D")]
		[Address(RVA = "0x1799688", Offset = "0x1799688", VA = "0x1799688")]
		public void Reset()
		{
		}

		[Token(Token = "0x600055E")]
		[Address(RVA = "0x17998B4", Offset = "0x17998B4", VA = "0x17998B4")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x600055F")]
		[Address(RVA = "0x1799924", Offset = "0x1799924", VA = "0x1799924")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200008F")]
	public class BakerTransform
	{
		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform transform;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public AnimationCurve posX;

		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve posY;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public AnimationCurve posZ;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve rotX;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public AnimationCurve rotY;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve rotZ;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public AnimationCurve rotW;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string relativePath;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool recordPosition;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 relativePosition;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool isRootNode;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion relativeRotation;

		[Token(Token = "0x6000560")]
		[Address(RVA = "0x1799934", Offset = "0x1799934", VA = "0x1799934")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x6000561")]
		[Address(RVA = "0x1799ABC", Offset = "0x1799ABC", VA = "0x1799ABC")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000562")]
		[Address(RVA = "0x1799AEC", Offset = "0x1799AEC", VA = "0x1799AEC")]
		public void SetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000563")]
		[Address(RVA = "0x1799E74", Offset = "0x1799E74", VA = "0x1799E74")]
		private void AddRootMotionCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x6000564")]
		[Address(RVA = "0x17999C4", Offset = "0x17999C4", VA = "0x17999C4")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000565")]
		[Address(RVA = "0x179A1B4", Offset = "0x179A1B4", VA = "0x179A1B4")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x6000566")]
		[Address(RVA = "0x179A218", Offset = "0x179A218", VA = "0x179A218")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x6000567")]
		[Address(RVA = "0x179A53C", Offset = "0x179A53C", VA = "0x179A53C")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x2000090")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F97D8", Offset = "0x4F97D8")]
		public bool bakeHandIK;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F980C", Offset = "0x4F980C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F980C", Offset = "0x4F980C")]
		public float IKKeyReductionError;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9860", Offset = "0x4F9860")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9860", Offset = "0x4F9860")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float[] muscles;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private HumanPose pose;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private HumanPoseHandler handler;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector3 bodyPosition;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Quaternion bodyRotation;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int mN;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x6000568")]
		[Address(RVA = "0x1186F3C", Offset = "0x1186F3C", VA = "0x1186F3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000569")]
		[Address(RVA = "0x118744C", Offset = "0x118744C", VA = "0x118744C", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x600056A")]
		[Address(RVA = "0x1187474", Offset = "0x1187474", VA = "0x1187474", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x600056B")]
		[Address(RVA = "0x1187610", Offset = "0x1187610", VA = "0x1187610", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0x1187738", Offset = "0x1187738", VA = "0x1187738", Slot = "7")]
		protected override void OnSetCurves(ref AnimationClip clip)
		{
		}

		[Token(Token = "0x600056D")]
		[Address(RVA = "0x11879F4", Offset = "0x11879F4", VA = "0x11879F4", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0x1187E94", Offset = "0x1187E94", VA = "0x1187E94")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x600056F")]
		[Address(RVA = "0x1187FC0", Offset = "0x1187FC0", VA = "0x1187FC0")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x2000091")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200023B")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000ADA")]
			Update,
			[Token(Token = "0x4000ADB")]
			FixedUpdate,
			[Token(Token = "0x4000ADC")]
			LateUpdate,
			[Token(Token = "0x4000ADD")]
			FixedLateUpdate
		}

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform target;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform rotationSpace;

		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public UpdateMode updateMode;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool lockCursor;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4F98B4", Offset = "0x4F98B4")]
		public bool smoothFollow;

		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offset;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float followSpeed;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4F98E8", Offset = "0x4F98E8")]
		public float rotationSensitivity;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float yMinLimit;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float yMaxLimit;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool rotateAlways;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool rotateOnRightButton;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4F991C", Offset = "0x4F991C")]
		public float distance;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float minDistance;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float maxDistance;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float zoomSpeed;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float zoomSensitivity;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4F9950", Offset = "0x4F9950")]
		public LayerMask blockingLayers;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float blockingRadius;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float blockingSmoothTime;

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9984", Offset = "0x4F9984")]
		public float blockedOffset;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F999C", Offset = "0x4F999C")]
		private float <x>k__BackingField;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F99AC", Offset = "0x4F99AC")]
		private float <y>k__BackingField;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F99BC", Offset = "0x4F99BC")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 targetDistance;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 position;

		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Quaternion rotation;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Vector3 smoothPosition;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Camera cam;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool fixedFrame;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float fixedDeltaTime;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Quaternion r;

		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private Vector3 lastUp;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float blockedDistance;

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private float blockedDistanceV;

		[Token(Token = "0x1700004E")]
		public float x
		{
			[Token(Token = "0x6000570")]
			[Address(RVA = "0x16227FC", Offset = "0x16227FC", VA = "0x16227FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500768", Offset = "0x500768")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000571")]
			[Address(RVA = "0x1622804", Offset = "0x1622804", VA = "0x1622804")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500778", Offset = "0x500778")]
			private set
			{
			}
		}

		[Token(Token = "0x1700004F")]
		public float y
		{
			[Token(Token = "0x6000572")]
			[Address(RVA = "0x162280C", Offset = "0x162280C", VA = "0x162280C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500788", Offset = "0x500788")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000573")]
			[Address(RVA = "0x1622814", Offset = "0x1622814", VA = "0x1622814")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500798", Offset = "0x500798")]
			private set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public float distanceTarget
		{
			[Token(Token = "0x6000574")]
			[Address(RVA = "0x162281C", Offset = "0x162281C", VA = "0x162281C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5007A8", Offset = "0x5007A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000575")]
			[Address(RVA = "0x1622824", Offset = "0x1622824", VA = "0x1622824")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5007B8", Offset = "0x5007B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000051")]
		private float zoomAdd
		{
			[Token(Token = "0x600057F")]
			[Address(RVA = "0x16235D0", Offset = "0x16235D0", VA = "0x16235D0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000576")]
		[Address(RVA = "0x162282C", Offset = "0x162282C", VA = "0x162282C")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000577")]
		[Address(RVA = "0x1622870", Offset = "0x1622870", VA = "0x1622870")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x6000578")]
		[Address(RVA = "0x162287C", Offset = "0x162287C", VA = "0x162287C", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000579")]
		[Address(RVA = "0x1622A18", Offset = "0x1622A18", VA = "0x1622A18", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600057A")]
		[Address(RVA = "0x1622A6C", Offset = "0x1622A6C", VA = "0x1622A6C", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0x1622ACC", Offset = "0x1622ACC", VA = "0x1622ACC", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600057C")]
		[Address(RVA = "0x1622B30", Offset = "0x1622B30", VA = "0x1622B30")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x600057D")]
		[Address(RVA = "0x1622A48", Offset = "0x1622A48", VA = "0x1622A48")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0x1622D04", Offset = "0x1622D04", VA = "0x1622D04")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0x162350C", Offset = "0x162350C", VA = "0x162350C")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0x1623658", Offset = "0x1623658", VA = "0x1623658")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x2000092")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rotationSensitivity;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float yMinLimit;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float yMaxLimit;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float x;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float y;

		[Token(Token = "0x6000582")]
		[Address(RVA = "0x16237CC", Offset = "0x16237CC", VA = "0x16237CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0x1623818", Offset = "0x1623818", VA = "0x1623818")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0x16239F8", Offset = "0x16239F8", VA = "0x16239F8")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0x1623ABC", Offset = "0x1623ABC", VA = "0x1623ABC")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000093")]
	public enum Axis
	{
		[Token(Token = "0x4000463")]
		X,
		[Token(Token = "0x4000464")]
		Y,
		[Token(Token = "0x4000465")]
		Z
	}
	[Token(Token = "0x2000094")]
	public class AxisTools
	{
		[Token(Token = "0x6000586")]
		[Address(RVA = "0x1796DA8", Offset = "0x1796DA8", VA = "0x1796DA8")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0x1796E94", Offset = "0x1796E94", VA = "0x1796E94")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0x1796F68", Offset = "0x1796F68", VA = "0x1796F68")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0x1797194", Offset = "0x1797194", VA = "0x1797194")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0x17970B0", Offset = "0x17970B0", VA = "0x17970B0")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0x17972DC", Offset = "0x17972DC", VA = "0x17972DC")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0x1797340", Offset = "0x1797340", VA = "0x1797340")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0x1797720", Offset = "0x1797720", VA = "0x1797720")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000095")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x200023C")]
		public class LimbOrientation
		{
			[Token(Token = "0x4000ADE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x4000ADF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x4000AE0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x6000DE3")]
			[Address(RVA = "0x179B088", Offset = "0x179B088", VA = "0x179B088")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public LimbOrientation leftArm;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public LimbOrientation rightArm;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x17000052")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x600058F")]
			[Address(RVA = "0x179AE3C", Offset = "0x179AE3C", VA = "0x179AE3C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000053")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x6000590")]
			[Address(RVA = "0x179B0D8", Offset = "0x179B0D8", VA = "0x179B0D8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0x179AE04", Offset = "0x179AE04", VA = "0x179AE04")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x2000096")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x200023D")]
		public enum BoneType
		{
			[Token(Token = "0x4000AE2")]
			Unassigned,
			[Token(Token = "0x4000AE3")]
			Spine,
			[Token(Token = "0x4000AE4")]
			Head,
			[Token(Token = "0x4000AE5")]
			Arm,
			[Token(Token = "0x4000AE6")]
			Leg,
			[Token(Token = "0x4000AE7")]
			Tail,
			[Token(Token = "0x4000AE8")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x200023E")]
		public enum BoneSide
		{
			[Token(Token = "0x4000AEA")]
			Center,
			[Token(Token = "0x4000AEB")]
			Left,
			[Token(Token = "0x4000AEC")]
			Right
		}

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static string[] typeRight;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeSpine;

		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static string[] typeHead;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeArm;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static string[] typeLeg;

		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeTail;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static string[] typeEye;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeExclude;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public static string[] pelvis;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] hand;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public static string[] foot;

		[Token(Token = "0x6000591")]
		[Address(RVA = "0x179B324", Offset = "0x179B324", VA = "0x179B324")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000592")]
		[Address(RVA = "0x179B6AC", Offset = "0x179B6AC", VA = "0x179B6AC")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000593")]
		[Address(RVA = "0x179B954", Offset = "0x179B954", VA = "0x179B954")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0x179B9E4", Offset = "0x179B9E4", VA = "0x179B9E4")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000595")]
		[Address(RVA = "0x179BA8C", Offset = "0x179BA8C", VA = "0x179BA8C")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000596")]
		[Address(RVA = "0x179B514", Offset = "0x179B514", VA = "0x179B514")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000597")]
		[Address(RVA = "0x179B89C", Offset = "0x179B89C", VA = "0x179B89C")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000598")]
		[Address(RVA = "0x179C3B8", Offset = "0x179C3B8", VA = "0x179C3B8")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000599")]
		[Address(RVA = "0x179C198", Offset = "0x179C198", VA = "0x179C198")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600059A")]
		[Address(RVA = "0x179C2A8", Offset = "0x179C2A8", VA = "0x179C2A8")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600059B")]
		[Address(RVA = "0x179BCD0", Offset = "0x179BCD0", VA = "0x179BCD0")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600059C")]
		[Address(RVA = "0x179BD9C", Offset = "0x179BD9C", VA = "0x179BD9C")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600059D")]
		[Address(RVA = "0x179BE68", Offset = "0x179BE68", VA = "0x179BE68")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600059E")]
		[Address(RVA = "0x179BF34", Offset = "0x179BF34", VA = "0x179BF34")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0x179C000", Offset = "0x179C000", VA = "0x179C000")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0x179C0CC", Offset = "0x179C0CC", VA = "0x179C0CC")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0x179C5D4", Offset = "0x179C5D4", VA = "0x179C5D4")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0x179BBCC", Offset = "0x179BBCC", VA = "0x179BBCC")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0x179C554", Offset = "0x179C554", VA = "0x179C554")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0x179C658", Offset = "0x179C658", VA = "0x179C658")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0x179C728", Offset = "0x179C728", VA = "0x179C728")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0x179C4D0", Offset = "0x179C4D0", VA = "0x179C4D0")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0x179C44C", Offset = "0x179C44C", VA = "0x179C44C")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x2000097")]
	public class BipedReferences
	{
		[Token(Token = "0x200023F")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x4000AED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x4000AEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x170000E4")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x6000DE5")]
				[Address(RVA = "0x16227F4", Offset = "0x16227F4", VA = "0x16227F4")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x6000DE4")]
			[Address(RVA = "0x6DB9EC", Offset = "0x6DB9EC", VA = "0x6DB9EC")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform root;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform pelvis;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform leftThigh;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform leftCalf;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftFoot;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Transform rightThigh;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightCalf;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Transform rightFoot;

		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftUpperArm;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Transform leftForearm;

		[Token(Token = "0x4000486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHand;

		[Token(Token = "0x4000487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Transform rightUpperArm;

		[Token(Token = "0x4000488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightForearm;

		[Token(Token = "0x4000489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Transform rightHand;

		[Token(Token = "0x400048A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform head;

		[Token(Token = "0x400048B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public Transform[] spine;

		[Token(Token = "0x400048C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform[] eyes;

		[Token(Token = "0x17000054")]
		public virtual bool isFilled
		{
			[Token(Token = "0x60005A9")]
			[Address(RVA = "0x179F46C", Offset = "0x179F46C", VA = "0x179F46C", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000055")]
		public bool isEmpty
		{
			[Token(Token = "0x60005AA")]
			[Address(RVA = "0x179F94C", Offset = "0x179F94C", VA = "0x179F94C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0x179F960", Offset = "0x179F960", VA = "0x179F960", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0x179FE98", Offset = "0x179FE98", VA = "0x179FE98", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0x17A03A0", Offset = "0x17A03A0", VA = "0x17A03A0")]
		public static bool AutoDetectReferences(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0x17A0C38", Offset = "0x17A0C38", VA = "0x17A0C38")]
		public static void DetectReferencesByNaming(ref BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0x17A065C", Offset = "0x17A065C", VA = "0x17A065C")]
		public static void AssignHumanoidReferences(ref BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0x17A18AC", Offset = "0x17A18AC", VA = "0x17A18AC")]
		public static bool SetupError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0x17A19C4", Offset = "0x17A19C4", VA = "0x17A19C4")]
		public static bool SetupWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0x17A2034", Offset = "0x17A2034", VA = "0x17A2034")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0x17A1DE8", Offset = "0x17A1DE8", VA = "0x17A1DE8")]
		private static bool AddBoneToEyes(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0x17A1BF8", Offset = "0x17A1BF8", VA = "0x17A1BF8")]
		private static bool AddBoneToSpine(Transform bone, ref BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B5")]
		[Address(RVA = "0x17A1AA0", Offset = "0x17A1AA0", VA = "0x17A1AA0")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, ref Transform firstBone, ref Transform secondBone, ref Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x60005B6")]
		[Address(RVA = "0x17A1F14", Offset = "0x17A1F14", VA = "0x17A1F14")]
		private static void AddBoneToHierarchy(ref Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x60005B7")]
		[Address(RVA = "0x17A214C", Offset = "0x17A214C", VA = "0x17A214C")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B8")]
		[Address(RVA = "0x17A2F78", Offset = "0x17A2F78", VA = "0x17A2F78")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60005B9")]
		[Address(RVA = "0x17A2904", Offset = "0x17A2904", VA = "0x17A2904")]
		private static bool SpineError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BA")]
		[Address(RVA = "0x17A3334", Offset = "0x17A3334", VA = "0x17A3334")]
		private static bool SpineWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0x17A2D38", Offset = "0x17A2D38", VA = "0x17A2D38")]
		private static bool EyesError(BipedReferences references, ref string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0x17A333C", Offset = "0x17A333C", VA = "0x17A333C")]
		private static bool EyesWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0x17A3344", Offset = "0x17A3344", VA = "0x17A3344")]
		private static bool RootHeightWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x17A3548", Offset = "0x17A3548", VA = "0x17A3548")]
		private static bool FacingAxisWarning(BipedReferences references, ref string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0x17A37CC", Offset = "0x17A37CC", VA = "0x17A37CC")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0x17A05E0", Offset = "0x17A05E0", VA = "0x17A05E0")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x2000098")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x400048D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[Multiline]
		public string text;

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0x1623AE8", Offset = "0x1623AE8", VA = "0x1623AE8")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x2000099")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x400048E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string text;

		[Token(Token = "0x400048F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Color color;

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0x1623AF0", Offset = "0x1623AF0", VA = "0x1623AF0")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0x1623C64", Offset = "0x1623C64", VA = "0x1623C64")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x200009A")]
	public class Hierarchy
	{
		[Token(Token = "0x60005C4")]
		[Address(RVA = "0x1185DD8", Offset = "0x1185DD8", VA = "0x1185DD8")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0x118600C", Offset = "0x118600C", VA = "0x118600C")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0x1185E64", Offset = "0x1185E64", VA = "0x1185E64")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0x118614C", Offset = "0x118614C", VA = "0x118614C")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0x118628C", Offset = "0x118628C", VA = "0x118628C")]
		public static void AddAncestors(Transform transform, Transform blocker, ref Transform[] array)
		{
		}

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0x11865BC", Offset = "0x11865BC", VA = "0x11865BC")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0x1186714", Offset = "0x1186714", VA = "0x1186714")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0x11868F0", Offset = "0x11868F0", VA = "0x11868F0")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0x1186D30", Offset = "0x1186D30", VA = "0x1186D30")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x60005CD")]
		[Address(RVA = "0x1186AC0", Offset = "0x1186AC0", VA = "0x1186AC0")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x60005CE")]
		[Address(RVA = "0x1186F34", Offset = "0x1186F34", VA = "0x1186F34")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x200009B")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4000490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string name;

		[Token(Token = "0x4000491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string color;

		[Token(Token = "0x60005CF")]
		[Address(RVA = "0x11880A8", Offset = "0x11880A8", VA = "0x11880A8")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x60005D0")]
		[Address(RVA = "0x118811C", Offset = "0x118811C", VA = "0x118811C")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200009C")]
	public enum InterpolationMode
	{
		[Token(Token = "0x4000493")]
		None,
		[Token(Token = "0x4000494")]
		InOutCubic,
		[Token(Token = "0x4000495")]
		InOutQuintic,
		[Token(Token = "0x4000496")]
		InOutSine,
		[Token(Token = "0x4000497")]
		InQuintic,
		[Token(Token = "0x4000498")]
		InQuartic,
		[Token(Token = "0x4000499")]
		InCubic,
		[Token(Token = "0x400049A")]
		InQuadratic,
		[Token(Token = "0x400049B")]
		InElastic,
		[Token(Token = "0x400049C")]
		InElasticSmall,
		[Token(Token = "0x400049D")]
		InElasticBig,
		[Token(Token = "0x400049E")]
		InSine,
		[Token(Token = "0x400049F")]
		InBack,
		[Token(Token = "0x40004A0")]
		OutQuintic,
		[Token(Token = "0x40004A1")]
		OutQuartic,
		[Token(Token = "0x40004A2")]
		OutCubic,
		[Token(Token = "0x40004A3")]
		OutInCubic,
		[Token(Token = "0x40004A4")]
		OutInQuartic,
		[Token(Token = "0x40004A5")]
		OutElastic,
		[Token(Token = "0x40004A6")]
		OutElasticSmall,
		[Token(Token = "0x40004A7")]
		OutElasticBig,
		[Token(Token = "0x40004A8")]
		OutSine,
		[Token(Token = "0x40004A9")]
		OutBack,
		[Token(Token = "0x40004AA")]
		OutBackCubic,
		[Token(Token = "0x40004AB")]
		OutBackQuartic,
		[Token(Token = "0x40004AC")]
		BackInCubic,
		[Token(Token = "0x40004AD")]
		BackInQuartic
	}
	[Token(Token = "0x200009D")]
	public class Interp
	{
		[Token(Token = "0x60005D1")]
		[Address(RVA = "0x1188190", Offset = "0x1188190", VA = "0x1188190")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x60005D2")]
		[Address(RVA = "0x1188CE8", Offset = "0x1188CE8", VA = "0x1188CE8")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60005D3")]
		[Address(RVA = "0x1188E00", Offset = "0x1188E00", VA = "0x1188E00")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x60005D4")]
		[Address(RVA = "0x1188534", Offset = "0x1188534", VA = "0x1188534")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005D5")]
		[Address(RVA = "0x118854C", Offset = "0x118854C", VA = "0x118854C")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005D6")]
		[Address(RVA = "0x1188578", Offset = "0x1188578", VA = "0x1188578")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005D7")]
		[Address(RVA = "0x11885B8", Offset = "0x11885B8", VA = "0x11885B8")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005D8")]
		[Address(RVA = "0x11885DC", Offset = "0x11885DC", VA = "0x11885DC")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005D9")]
		[Address(RVA = "0x11885FC", Offset = "0x11885FC", VA = "0x11885FC")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005DA")]
		[Address(RVA = "0x118861C", Offset = "0x118861C", VA = "0x118861C")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005DB")]
		[Address(RVA = "0x1188638", Offset = "0x1188638", VA = "0x1188638")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005DC")]
		[Address(RVA = "0x118867C", Offset = "0x118867C", VA = "0x118867C")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005DD")]
		[Address(RVA = "0x11886B4", Offset = "0x11886B4", VA = "0x11886B4")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005DE")]
		[Address(RVA = "0x11886E0", Offset = "0x11886E0", VA = "0x11886E0")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005DF")]
		[Address(RVA = "0x1188F10", Offset = "0x1188F10", VA = "0x1188F10")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005E0")]
		[Address(RVA = "0x1188718", Offset = "0x1188718", VA = "0x1188718")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x1188748", Offset = "0x1188748", VA = "0x1188748")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x118877C", Offset = "0x118877C", VA = "0x118877C")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x11887B4", Offset = "0x11887B4", VA = "0x11887B4")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x11887F8", Offset = "0x11887F8", VA = "0x11887F8")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x1188858", Offset = "0x1188858", VA = "0x1188858")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x11888B8", Offset = "0x11888B8", VA = "0x11888B8")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x118890C", Offset = "0x118890C", VA = "0x118890C")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005E8")]
		[Address(RVA = "0x1188960", Offset = "0x1188960", VA = "0x1188960")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005E9")]
		[Address(RVA = "0x1188A0C", Offset = "0x1188A0C", VA = "0x1188A0C")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005EA")]
		[Address(RVA = "0x1188AB4", Offset = "0x1188AB4", VA = "0x1188AB4")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005EB")]
		[Address(RVA = "0x1188F48", Offset = "0x1188F48", VA = "0x1188F48")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005EC")]
		[Address(RVA = "0x1188B6C", Offset = "0x1188B6C", VA = "0x1188B6C")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005ED")]
		[Address(RVA = "0x1188C6C", Offset = "0x1188C6C", VA = "0x1188C6C")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005EE")]
		[Address(RVA = "0x1188CA4", Offset = "0x1188CA4", VA = "0x1188CA4")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60005EF")]
		[Address(RVA = "0x1189054", Offset = "0x1189054", VA = "0x1189054")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x200009E")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x40004AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public string name;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string color;

		[Token(Token = "0x60005F0")]
		[Address(RVA = "0x118905C", Offset = "0x118905C", VA = "0x118905C")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x60005F1")]
		[Address(RVA = "0x11890D0", Offset = "0x11890D0", VA = "0x11890D0")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x200009F")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x60005F2")]
		[Address(RVA = "0x1183D80", Offset = "0x1183D80", VA = "0x1183D80")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x1189144", Offset = "0x1189144", VA = "0x1189144")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x11891E0", Offset = "0x11891E0", VA = "0x11891E0")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x1189148", Offset = "0x1189148", VA = "0x1189148")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x11891E4", Offset = "0x11891E4", VA = "0x11891E4")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0x118926C", Offset = "0x118926C", VA = "0x118926C")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0x118928C", Offset = "0x118928C", VA = "0x118928C")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0x11892C4", Offset = "0x11892C4", VA = "0x11892C4")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0x1189314", Offset = "0x1189314", VA = "0x1189314")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0x118941C", Offset = "0x118941C", VA = "0x118941C")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0x1189504", Offset = "0x1189504", VA = "0x1189504")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0x1189570", Offset = "0x1189570", VA = "0x1189570")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x20000A0")]
	public static class QuaTools
	{
		[Token(Token = "0x60005FE")]
		[Address(RVA = "0x1189594", Offset = "0x1189594", VA = "0x1189594")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0x11896B8", Offset = "0x11896B8", VA = "0x11896B8")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x11897DC", Offset = "0x11897DC", VA = "0x11897DC")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000601")]
		[Address(RVA = "0x1189914", Offset = "0x1189914", VA = "0x1189914")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1189A4C", Offset = "0x1189A4C", VA = "0x1189A4C")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x1189C2C", Offset = "0x1189C2C", VA = "0x1189C2C")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x1189D24", Offset = "0x1189D24", VA = "0x1189D24")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000605")]
		[Address(RVA = "0x1189E98", Offset = "0x1189E98", VA = "0x1189E98")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x118A1CC", Offset = "0x118A1CC", VA = "0x118A1CC")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x118A448", Offset = "0x118A448", VA = "0x118A448")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x118A600", Offset = "0x118A600", VA = "0x118A600")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x118A780", Offset = "0x118A780", VA = "0x118A780")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x118A8B4", Offset = "0x118A8B4", VA = "0x118A8B4")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20000A1")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x17000056")]
		public static T instance
		{
			[Token(Token = "0x600060B")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600060C")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600060D")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x20000A2")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F99DC", Offset = "0x4F99DC")]
		public bool fixTransforms;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator animator;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private Animation legacy;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool updateFrame;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool componentInitiated;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool skipSolverUpdate;

		[Token(Token = "0x17000057")]
		private bool animatePhysics
		{
			[Token(Token = "0x6000615")]
			[Address(RVA = "0x118AA54", Offset = "0x118AA54", VA = "0x118AA54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000058")]
		private bool isAnimated
		{
			[Token(Token = "0x6000619")]
			[Address(RVA = "0x118ADEC", Offset = "0x118ADEC", VA = "0x118ADEC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x118A91C", Offset = "0x118A91C", VA = "0x118A91C")]
		public void Disable()
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x118A9C8", Offset = "0x118A9C8", VA = "0x118A9C8", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x118A9CC", Offset = "0x118A9CC", VA = "0x118A9CC", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x118A9D0", Offset = "0x118A9D0", VA = "0x118A9D0", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x118A9D4", Offset = "0x118A9D4", VA = "0x118A9D4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x118AA50", Offset = "0x118AA50", VA = "0x118AA50")]
		private void Start()
		{
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x118A9FC", Offset = "0x118A9FC", VA = "0x118A9FC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x118AD9C", Offset = "0x118AD9C", VA = "0x118AD9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x118AB70", Offset = "0x118AB70", VA = "0x118AB70")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x118AEB4", Offset = "0x118AEB4", VA = "0x118AEB4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x118AF08", Offset = "0x118AF08", VA = "0x118AF08")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x118AF68", Offset = "0x118AF68", VA = "0x118AF68")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x118AFA4", Offset = "0x118AFA4", VA = "0x118AFA4")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x20000A3")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject target;

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x118AFFC", Offset = "0x118AFFC", VA = "0x118AFFC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x118B0CC", Offset = "0x118B0CC", VA = "0x118B0CC")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x118B19C", Offset = "0x118B19C", VA = "0x118B19C")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x118B26C", Offset = "0x118B26C", VA = "0x118B26C")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x20000A4")]
	public static class V3Tools
	{
		[Token(Token = "0x6000622")]
		[Address(RVA = "0x118B274", Offset = "0x118B274", VA = "0x118B274")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000623")]
		[Address(RVA = "0x118B37C", Offset = "0x118B37C", VA = "0x118B37C")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0x118B484", Offset = "0x118B484", VA = "0x118B484")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0x118B5A8", Offset = "0x118B5A8", VA = "0x118B5A8")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0x118B6F4", Offset = "0x118B6F4", VA = "0x118B6F4")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0x118B974", Offset = "0x118B974", VA = "0x118B974")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0x118BC10", Offset = "0x118BC10", VA = "0x118BC10")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, out float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0x118BEB4", Offset = "0x118BEB4", VA = "0x118BEB4")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0x118C0DC", Offset = "0x118C0DC", VA = "0x118C0DC")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600062B")]
		[Address(RVA = "0x118C2EC", Offset = "0x118C2EC", VA = "0x118C2EC")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600062C")]
		[Address(RVA = "0x118C438", Offset = "0x118C438", VA = "0x118C438")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20000A5")]
	public static class Warning
	{
		[Token(Token = "0x2000240")]
		public delegate void Logger(string message);

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x600062D")]
		[Address(RVA = "0x118C594", Offset = "0x118C594", VA = "0x118C594")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x600062E")]
		[Address(RVA = "0x118CA60", Offset = "0x118CA60", VA = "0x118CA60")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.Dynamics
{
	[Token(Token = "0x20000A6")]
	public class AnimationBlocker : MonoBehaviour
	{
		[Token(Token = "0x600062F")]
		[Address(RVA = "0x1635384", Offset = "0x1635384", VA = "0x1635384")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000630")]
		[Address(RVA = "0x16354AC", Offset = "0x16354AC", VA = "0x16354AC")]
		public AnimationBlocker()
		{
		}
	}
	[Token(Token = "0x20000A7")]
	public abstract class BehaviourBase : MonoBehaviour
	{
		[Token(Token = "0x2000241")]
		public delegate void BehaviourDelegate();

		[Token(Token = "0x2000242")]
		public delegate void HitDelegate(MuscleHit hit);

		[Token(Token = "0x2000243")]
		public delegate void CollisionDelegate(MuscleCollision collision);

		[Serializable]
		[Token(Token = "0x2000244")]
		public struct PuppetEvent
		{
			[Token(Token = "0x4000AEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEC7C", Offset = "0x4FEC7C")]
			public string switchToBehaviour;

			[Token(Token = "0x4000AF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FECB0", Offset = "0x4FECB0")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4000AF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FECE4", Offset = "0x4FECE4")]
			public UnityEvent unityEvent;

			[Token(Token = "0x4000AF2")]
			private const string empty = "";

			[Token(Token = "0x170000E5")]
			public bool switchBehaviour
			{
				[Token(Token = "0x6000DF6")]
				[Address(RVA = "0x6DBBE8", Offset = "0x6DBBE8", VA = "0x6DBBE8")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000DF7")]
			[Address(RVA = "0x6DBBF0", Offset = "0x6DBBF0", VA = "0x6DBBF0")]
			public void Trigger(PuppetMaster puppetMaster, bool switchBehaviourEnabled = true)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000245")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4000AF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string animationState;

			[Token(Token = "0x4000AF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float crossfadeTime;

			[Token(Token = "0x4000AF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public int layer;

			[Token(Token = "0x4000AF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool resetNormalizedTime;

			[Token(Token = "0x4000AF7")]
			private const string empty = "";

			[Token(Token = "0x6000DF8")]
			[Address(RVA = "0x1637164", Offset = "0x1637164", VA = "0x1637164")]
			public void Activate(Animator animator, Animation animation)
			{
			}

			[Token(Token = "0x6000DF9")]
			[Address(RVA = "0x1637248", Offset = "0x1637248", VA = "0x1637248")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6000DFA")]
			[Address(RVA = "0x16373A0", Offset = "0x16373A0", VA = "0x16373A0")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x6000DFB")]
			[Address(RVA = "0x16374D4", Offset = "0x16374D4", VA = "0x16374D4")]
			public AnimatorEvent()
			{
			}
		}

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BehaviourDelegate OnPreActivate;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public BehaviourDelegate OnPreInitiate;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourDelegate OnPreFixedUpdate;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public BehaviourDelegate OnPreUpdate;

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BehaviourDelegate OnPreLateUpdate;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public BehaviourDelegate OnPreDeactivate;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BehaviourDelegate OnPreFixTransforms;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BehaviourDelegate OnPreRead;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BehaviourDelegate OnPreWrite;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public HitDelegate OnPreMuscleHit;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public CollisionDelegate OnPreMuscleCollision;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public CollisionDelegate OnPreMuscleCollisionExit;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BehaviourDelegate OnHierarchyChanged;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public BehaviourDelegate OnPostActivate;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourDelegate OnPostInitiate;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public BehaviourDelegate OnPostFixedUpdate;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BehaviourDelegate OnPostUpdate;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public BehaviourDelegate OnPostLateUpdate;

		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BehaviourDelegate OnPostDeactivate;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public BehaviourDelegate OnPostDrawGizmos;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BehaviourDelegate OnPostFixTransforms;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public BehaviourDelegate OnPostRead;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public BehaviourDelegate OnPostWrite;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public HitDelegate OnPostMuscleHit;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CollisionDelegate OnPostMuscleCollision;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public CollisionDelegate OnPostMuscleCollisionExit;

		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public bool deactivated;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F9A30", Offset = "0x4F9A30")]
		private bool <forceActive>k__BackingField;

		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7A")]
		private bool initiated;

		[Token(Token = "0x17000059")]
		public bool forceActive
		{
			[Token(Token = "0x6000649")]
			[Address(RVA = "0x1635760", Offset = "0x1635760", VA = "0x1635760")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500838", Offset = "0x500838")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600064A")]
			[Address(RVA = "0x1635768", Offset = "0x1635768", VA = "0x1635768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500848", Offset = "0x500848")]
			protected set
			{
			}
		}

		[Token(Token = "0x6000631")]
		public abstract void OnReactivate();

		[Token(Token = "0x6000632")]
		[Address(RVA = "0x16354B4", Offset = "0x16354B4", VA = "0x16354B4", Slot = "5")]
		public virtual void Resurrect()
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0x16354B8", Offset = "0x16354B8", VA = "0x16354B8", Slot = "6")]
		public virtual void Freeze()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0x16354BC", Offset = "0x16354BC", VA = "0x16354BC", Slot = "7")]
		public virtual void Unfreeze()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0x16354C0", Offset = "0x16354C0", VA = "0x16354C0", Slot = "8")]
		public virtual void KillStart()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0x16354C4", Offset = "0x16354C4", VA = "0x16354C4", Slot = "9")]
		public virtual void KillEnd()
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0x16354C8", Offset = "0x16354C8", VA = "0x16354C8", Slot = "10")]
		public virtual void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0x16354CC", Offset = "0x16354CC", VA = "0x16354CC", Slot = "11")]
		public virtual void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0x16354D0", Offset = "0x16354D0", VA = "0x16354D0", Slot = "12")]
		public virtual void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x600063A")]
		[Address(RVA = "0x16354D4", Offset = "0x16354D4", VA = "0x16354D4", Slot = "13")]
		public virtual void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0x163571C", Offset = "0x163571C", VA = "0x163571C", Slot = "14")]
		public virtual void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0x163572C", Offset = "0x163572C", VA = "0x163572C", Slot = "15")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x600063D")]
		[Address(RVA = "0x1635730", Offset = "0x1635730", VA = "0x1635730", Slot = "16")]
		protected virtual void OnDeactivate()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0x1635734", Offset = "0x1635734", VA = "0x1635734", Slot = "17")]
		protected virtual void OnInitiate()
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0x1635738", Offset = "0x1635738", VA = "0x1635738", Slot = "18")]
		protected virtual void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0x163573C", Offset = "0x163573C", VA = "0x163573C", Slot = "19")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1635740", Offset = "0x1635740", VA = "0x1635740", Slot = "20")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1635744", Offset = "0x1635744", VA = "0x1635744", Slot = "21")]
		protected virtual void OnDrawGizmosBehaviour()
		{
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1635748", Offset = "0x1635748", VA = "0x1635748", Slot = "22")]
		protected virtual void OnFixTransformsBehaviour()
		{
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x163574C", Offset = "0x163574C", VA = "0x163574C", Slot = "23")]
		protected virtual void OnReadBehaviour()
		{
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1635750", Offset = "0x1635750", VA = "0x1635750", Slot = "24")]
		protected virtual void OnWriteBehaviour()
		{
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1635754", Offset = "0x1635754", VA = "0x1635754", Slot = "25")]
		protected virtual void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1635758", Offset = "0x1635758", VA = "0x1635758", Slot = "26")]
		protected virtual void OnMuscleCollisionBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x163575C", Offset = "0x163575C", VA = "0x163575C", Slot = "27")]
		protected virtual void OnMuscleCollisionExitBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x600064B")]
		[Address(RVA = "0x1635770", Offset = "0x1635770", VA = "0x1635770")]
		public void Initiate()
		{
		}

		[Token(Token = "0x600064C")]
		[Address(RVA = "0x16357BC", Offset = "0x16357BC", VA = "0x16357BC")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0x1635820", Offset = "0x1635820", VA = "0x1635820")]
		public void OnRead()
		{
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0x1635884", Offset = "0x1635884", VA = "0x1635884")]
		public void OnWrite()
		{
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0x16358E8", Offset = "0x16358E8", VA = "0x16358E8")]
		public void OnMuscleHit(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0x1635E4C", Offset = "0x1635E4C", VA = "0x1635E4C")]
		public void OnMuscleCollision(MuscleCollision collision)
		{
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0x16361E4", Offset = "0x16361E4", VA = "0x16361E4")]
		public void OnMuscleCollisionExit(MuscleCollision collision)
		{
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0x1636270", Offset = "0x1636270", VA = "0x1636270")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0x1636280", Offset = "0x1636280", VA = "0x1636280")]
		public void Activate()
		{
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0x16363B0", Offset = "0x16363B0", VA = "0x16363B0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0x1636400", Offset = "0x1636400", VA = "0x1636400")]
		public void FixedUpdateB()
		{
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0x16364E4", Offset = "0x16364E4", VA = "0x16364E4")]
		public void UpdateB()
		{
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0x16365C8", Offset = "0x16365C8", VA = "0x16365C8")]
		public void LateUpdateB()
		{
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0x16366AC", Offset = "0x16366AC", VA = "0x16366AC", Slot = "28")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0x16366F0", Offset = "0x16366F0", VA = "0x16366F0")]
		protected void RotateTargetToRootMuscle()
		{
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0x1636944", Offset = "0x1636944", VA = "0x1636944")]
		protected void TranslateTargetToRootMuscle(float maintainY)
		{
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0x1636C20", Offset = "0x1636C20", VA = "0x1636C20")]
		protected void RemovePropMuscles()
		{
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0x1636E58", Offset = "0x1636E58", VA = "0x1636E58", Slot = "29")]
		protected virtual void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0x1636DBC", Offset = "0x1636DBC", VA = "0x1636DBC")]
		protected bool ContainsRemovablePropMuscle()
		{
			return default(bool);
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0x163715C", Offset = "0x163715C", VA = "0x163715C")]
		protected BehaviourBase()
		{
		}
	}
	[Token(Token = "0x20000A8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F13EC", Offset = "0x4F13EC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F13EC", Offset = "0x4F13EC")]
	public class BehaviourFall : BehaviourBase
	{
		[Token(Token = "0x2000246")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F82F0", Offset = "0x4F82F0")]
		private sealed class <SmoothActivate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000AF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000AF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000AFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public BehaviourFall <>4__this;

			[Token(Token = "0x4000AFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private float <fader>5__2;

			[Token(Token = "0x170000E6")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000DFF")]
				[Address(RVA = "0x1638954", Offset = "0x1638954", VA = "0x1638954", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000E7")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E01")]
				[Address(RVA = "0x16389D4", Offset = "0x16389D4", VA = "0x16389D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000DFC")]
			[Address(RVA = "0x1637BA4", Offset = "0x1637BA4", VA = "0x1637BA4")]
			[DebuggerHidden]
			public <SmoothActivate>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6000DFD")]
			[Address(RVA = "0x1638630", Offset = "0x1638630", VA = "0x1638630", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000DFE")]
			[Address(RVA = "0x1638634", Offset = "0x1638634", VA = "0x1638634", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E00")]
			[Address(RVA = "0x163895C", Offset = "0x163895C", VA = "0x163895C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4F9A40", Offset = "0x4F9A40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9A40", Offset = "0x4F9A40")]
		public string stateName;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9AA0", Offset = "0x4F9AA0")]
		public float transitionDuration;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9AD4", Offset = "0x4F9AD4")]
		public int layer;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9B08", Offset = "0x4F9B08")]
		public float fixedTime;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4F9B3C", Offset = "0x4F9B3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9B3C", Offset = "0x4F9B3C")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9B9C", Offset = "0x4F9B9C")]
		public string blendParameter;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9BD0", Offset = "0x4F9BD0")]
		public float writheHeight;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9C04", Offset = "0x4F9C04")]
		public float writheYVelocity;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9C38", Offset = "0x4F9C38")]
		public float blendSpeed;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9C6C", Offset = "0x4F9C6C")]
		public float blendMappingSpeed;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4F9CA0", Offset = "0x4F9CA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9CA0", Offset = "0x4F9CA0")]
		public bool canEnd;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9D00", Offset = "0x4F9D00")]
		public float minTime;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9D34", Offset = "0x4F9D34")]
		public float maxEndVelocity;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9D68", Offset = "0x4F9D68")]
		public PuppetEvent onEnd;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float timer;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool endTriggered;

		[Token(Token = "0x600065F")]
		[Address(RVA = "0x1637A1C", Offset = "0x1637A1C", VA = "0x1637A1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500858", Offset = "0x500858")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0x1637A74", Offset = "0x1637A74", VA = "0x1637A74")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x50088C", Offset = "0x50088C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0x1637ACC", Offset = "0x1637ACC", VA = "0x1637ACC", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0x1637B88", Offset = "0x1637B88", VA = "0x1637B88", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0x1637B94", Offset = "0x1637B94", VA = "0x1637B94", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x6000664")]
		[Address(RVA = "0x1637B08", Offset = "0x1637B08", VA = "0x1637B08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5008C0", Offset = "0x5008C0")]
		private IEnumerator SmoothActivate()
		{
			return null;
		}

		[Token(Token = "0x6000665")]
		[Address(RVA = "0x1637BC4", Offset = "0x1637BC4", VA = "0x1637BC4", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0x1638284", Offset = "0x1638284", VA = "0x1638284", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0x1638480", Offset = "0x1638480", VA = "0x1638480", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0x1638058", Offset = "0x1638058", VA = "0x1638058")]
		private float GetBlendTarget(float groundHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0x1637EA8", Offset = "0x1637EA8", VA = "0x1637EA8")]
		private float GetGroundHeight()
		{
			return default(float);
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0x16384F8", Offset = "0x16384F8", VA = "0x16384F8", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0x1638578", Offset = "0x1638578", VA = "0x1638578")]
		public BehaviourFall()
		{
		}
	}
	[Token(Token = "0x20000A9")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F144C", Offset = "0x4F144C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F144C", Offset = "0x4F144C")]
	public class BehaviourPuppet : BehaviourBase
	{
		[Serializable]
		[Token(Token = "0x2000247")]
		public enum State
		{
			[Token(Token = "0x4000AFD")]
			Puppet,
			[Token(Token = "0x4000AFE")]
			Unpinned,
			[Token(Token = "0x4000AFF")]
			GetUp
		}

		[Serializable]
		[Token(Token = "0x2000248")]
		public enum NormalMode
		{
			[Token(Token = "0x4000B01")]
			Active,
			[Token(Token = "0x4000B02")]
			Unmapped,
			[Token(Token = "0x4000B03")]
			Kinematic
		}

		[Serializable]
		[Token(Token = "0x2000249")]
		public class MasterProps
		{
			[Token(Token = "0x4000B04")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public NormalMode normalMode;

			[Token(Token = "0x4000B05")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float mappingBlendSpeed;

			[Token(Token = "0x4000B06")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool activateOnStaticCollisions;

			[Token(Token = "0x4000B07")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float activateOnImpulse;

			[Token(Token = "0x6000E02")]
			[Address(RVA = "0x163D7E4", Offset = "0x163D7E4", VA = "0x163D7E4")]
			public MasterProps()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200024A")]
		public struct MuscleProps
		{
			[Token(Token = "0x4000B08")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FED18", Offset = "0x4FED18")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FED18", Offset = "0x4FED18")]
			public float unpinParents;

			[Token(Token = "0x4000B09")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FED68", Offset = "0x4FED68")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FED68", Offset = "0x4FED68")]
			public float unpinChildren;

			[Token(Token = "0x4000B0A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEDB8", Offset = "0x4FEDB8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FEDB8", Offset = "0x4FEDB8")]
			public float unpinGroup;

			[Token(Token = "0x4000B0B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEE08", Offset = "0x4FEE08")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FEE08", Offset = "0x4FEE08")]
			public float minMappingWeight;

			[Token(Token = "0x4000B0C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEE58", Offset = "0x4FEE58")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FEE58", Offset = "0x4FEE58")]
			public float maxMappingWeight;

			[Token(Token = "0x4000B0D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEEA8", Offset = "0x4FEEA8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FEEA8", Offset = "0x4FEEA8")]
			public float minPinWeight;

			[Token(Token = "0x4000B0E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEEF8", Offset = "0x4FEEF8")]
			public bool disableColliders;

			[Token(Token = "0x4000B0F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEF2C", Offset = "0x4FEF2C")]
			public float regainPinSpeed;

			[Token(Token = "0x4000B10")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEF60", Offset = "0x4FEF60")]
			public float collisionResistance;

			[Token(Token = "0x4000B11")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEF94", Offset = "0x4FEF94")]
			public float knockOutDistance;

			[Token(Token = "0x4000B12")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEFC8", Offset = "0x4FEFC8")]
			public PhysicMaterial puppetMaterial;

			[Token(Token = "0x4000B13")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEFFC", Offset = "0x4FEFFC")]
			public PhysicMaterial unpinnedMaterial;
		}

		[Serializable]
		[Token(Token = "0x200024B")]
		public struct MusclePropsGroup
		{
			[Token(Token = "0x4000B14")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4000B15")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF040", Offset = "0x4FF040")]
			public Muscle.Group[] groups;

			[Token(Token = "0x4000B16")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF074", Offset = "0x4FF074")]
			public MuscleProps props;
		}

		[Serializable]
		[Token(Token = "0x200024C")]
		public struct CollisionResistanceMultiplier
		{
			[Token(Token = "0x4000B17")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LayerMask layers;

			[Token(Token = "0x4000B18")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF0A8", Offset = "0x4FF0A8")]
			public float multiplier;

			[Token(Token = "0x4000B19")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF0DC", Offset = "0x4FF0DC")]
			public float collisionThreshold;
		}

		[Token(Token = "0x200024D")]
		public delegate void CollisionImpulseDelegate(MuscleCollision m, float impulse);

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4F9D9C", Offset = "0x4F9D9C")]
		public MasterProps masterProps;

		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9DD0", Offset = "0x4F9DD0")]
		public LayerMask groundLayers;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9E04", Offset = "0x4F9E04")]
		public LayerMask collisionLayers;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9E38", Offset = "0x4F9E38")]
		public float collisionThreshold;

		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Weight collisionResistance;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9E6C", Offset = "0x4F9E6C")]
		public CollisionResistanceMultiplier[] collisionResistanceMultipliers;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9EA0", Offset = "0x4F9EA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9EA0", Offset = "0x4F9EA0")]
		public int maxCollisions;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9EF4", Offset = "0x4F9EF4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4F9EF4", Offset = "0x4F9EF4")]
		public float regainPinSpeed;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9F4C", Offset = "0x4F9F4C")]
		public float boostFalloff;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4F9F80", Offset = "0x4F9F80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9F80", Offset = "0x4F9F80")]
		public MuscleProps defaults;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F9FE0", Offset = "0x4F9FE0")]
		public MusclePropsGroup[] groupOverrides;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FA014", Offset = "0x4FA014")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA014", Offset = "0x4FA014")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FA014", Offset = "0x4FA014")]
		public float knockOutDistance;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA094", Offset = "0x4FA094")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FA094", Offset = "0x4FA094")]
		public float unpinnedMuscleWeightMlp;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA0E4", Offset = "0x4FA0E4")]
		public float maxRigidbodyVelocity;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA118", Offset = "0x4FA118")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FA118", Offset = "0x4FA118")]
		public float pinWeightThreshold;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA168", Offset = "0x4FA168")]
		public bool unpinnedMuscleKnockout;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE5")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA19C", Offset = "0x4FA19C")]
		public bool dropProps;

		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE6")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FA1D0", Offset = "0x4FA1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA1D0", Offset = "0x4FA1D0")]
		public bool canGetUp;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA230", Offset = "0x4FA230")]
		public float getUpDelay;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA264", Offset = "0x4FA264")]
		public float blendToAnimationTime;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA298", Offset = "0x4FA298")]
		public float maxGetUpVelocity;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA2CC", Offset = "0x4FA2CC")]
		public float minGetUpDuration;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA300", Offset = "0x4FA300")]
		public float getUpCollisionResistanceMlp;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA334", Offset = "0x4FA334")]
		public float getUpRegainPinSpeedMlp;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA368", Offset = "0x4FA368")]
		public float getUpKnockOutDistanceMlp;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA39C", Offset = "0x4FA39C")]
		public Vector3 getUpOffsetProne;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA3D0", Offset = "0x4FA3D0")]
		public Vector3 getUpOffsetSupine;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FA404", Offset = "0x4FA404")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA404", Offset = "0x4FA404")]
		public PuppetEvent onGetUpProne;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA464", Offset = "0x4FA464")]
		public PuppetEvent onGetUpSupine;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA498", Offset = "0x4FA498")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA4CC", Offset = "0x4FA4CC")]
		public PuppetEvent onLoseBalanceFromPuppet;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA500", Offset = "0x4FA500")]
		public PuppetEvent onLoseBalanceFromGetUp;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA534", Offset = "0x4FA534")]
		public PuppetEvent onRegainBalance;

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public CollisionDelegate OnCollision;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public CollisionImpulseDelegate OnCollisionImpulse;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA568", Offset = "0x4FA568")]
		private State <state>k__BackingField;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[HideInInspector]
		public bool canMoveTarget;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float unpinnedTimer;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float getUpTimer;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Vector3 hipsForward;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Vector3 hipsUp;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private float getupAnimationBlendWeight;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float getupAnimationBlendWeightV;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private bool getUpTargetFixed;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private NormalMode lastNormalMode;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private int collisions;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool eventsEnabled;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float lastKnockOutDistance;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float knockOutDistanceSqr;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private bool getupDisabled;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
		private bool hasCollidedSinceGetUp;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[HideInInspector]
		public int grabbing;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool hasBoosted;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 getUpPosition;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private bool dropPropFlag;

		[Token(Token = "0x1700005A")]
		public State state
		{
			[Token(Token = "0x600066E")]
			[Address(RVA = "0x1638A8C", Offset = "0x1638A8C", VA = "0x1638A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500998", Offset = "0x500998")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x600066F")]
			[Address(RVA = "0x1638A94", Offset = "0x1638A94", VA = "0x1638A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5009A8", Offset = "0x5009A8")]
			private set
			{
			}
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0x16389DC", Offset = "0x16389DC", VA = "0x16389DC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500930", Offset = "0x500930")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0x1638A34", Offset = "0x1638A34", VA = "0x1638A34")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500964", Offset = "0x500964")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0x1638A9C", Offset = "0x1638A9C", VA = "0x1638A9C", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0x1638DF4", Offset = "0x1638DF4", VA = "0x1638DF4")]
		public void Reset(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0x1638E78", Offset = "0x1638E78", VA = "0x1638E78", Slot = "10")]
		public override void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0x1639008", Offset = "0x1639008", VA = "0x1639008", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0x16397EC", Offset = "0x16397EC", VA = "0x16397EC", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0x16398CC", Offset = "0x16398CC", VA = "0x16398CC", Slot = "8")]
		public override void KillStart()
		{
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0x1639974", Offset = "0x1639974", VA = "0x1639974", Slot = "9")]
		public override void KillEnd()
		{
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0x163997C", Offset = "0x163997C", VA = "0x163997C", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0x1639A1C", Offset = "0x1639A1C", VA = "0x1639A1C", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0x1639A28", Offset = "0x1639A28", VA = "0x1639A28", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0x163A608", Offset = "0x163A608", VA = "0x163A608", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0x163AA88", Offset = "0x163AA88", VA = "0x163AA88")]
		private bool SetKinematic()
		{
			return default(bool);
		}

		[Token(Token = "0x600067C")]
		[Address(RVA = "0x163ABC4", Offset = "0x163ABC4", VA = "0x163ABC4", Slot = "23")]
		protected override void OnReadBehaviour()
		{
		}

		[Token(Token = "0x600067D")]
		[Address(RVA = "0x163A830", Offset = "0x163A830", VA = "0x163A830")]
		private void BlendMuscleMapping(int muscleIndex, ref bool to)
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0x163B15C", Offset = "0x163B15C", VA = "0x163B15C", Slot = "13")]
		public override void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x600067F")]
		[Address(RVA = "0x163B198", Offset = "0x163B198", VA = "0x163B198", Slot = "14")]
		public override void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0x163B0F4", Offset = "0x163B0F4", VA = "0x163B0F4")]
		protected void MoveTarget(Vector3 position)
		{
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0x163B1C8", Offset = "0x163B1C8", VA = "0x163B1C8")]
		protected void RotateTarget(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0x163B238", Offset = "0x163B238", VA = "0x163B238", Slot = "29")]
		protected override void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0x163B248", Offset = "0x163B248", VA = "0x163B248")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0x163B534", Offset = "0x163B534", VA = "0x163B534")]
		public void Boost(float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0x163B5B0", Offset = "0x163B5B0", VA = "0x163B5B0")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0x163B85C", Offset = "0x163B85C", VA = "0x163B85C")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0x163BB18", Offset = "0x163BB18", VA = "0x163BB18")]
		public void BoostImmunity(float immunity)
		{
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0x163B5E8", Offset = "0x163B5E8", VA = "0x163B5E8")]
		public void BoostImmunity(int muscleIndex, float immunity)
		{
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0x163BB8C", Offset = "0x163BB8C", VA = "0x163BB8C")]
		public void BoostImmunity(int muscleIndex, float immunity, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x600068A")]
		[Address(RVA = "0x163BC2C", Offset = "0x163BC2C", VA = "0x163BC2C")]
		public void BoostImpulseMlp(float impulseMlp)
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0x163B724", Offset = "0x163B724", VA = "0x163B724")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp)
		{
		}

		[Token(Token = "0x600068C")]
		[Address(RVA = "0x163BC90", Offset = "0x163BC90", VA = "0x163BC90")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0x163BD30", Offset = "0x163BD30", VA = "0x163BD30")]
		public void Unpin()
		{
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0x163BDC4", Offset = "0x163BDC4", VA = "0x163BDC4", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0x163C05C", Offset = "0x163C05C", VA = "0x163C05C", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0x163C668", Offset = "0x163C668", VA = "0x163C668")]
		private float GetImpulse(MuscleCollision m, ref float layerThreshold)
		{
			return default(float);
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0x163BF14", Offset = "0x163BF14", VA = "0x163BF14")]
		private void UnPin(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0x163CE20", Offset = "0x163CE20", VA = "0x163CE20")]
		private void UnPinMuscle(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0x163CB88", Offset = "0x163CB88", VA = "0x163CB88")]
		private bool Activate(Collision collision, float impulse)
		{
			return default(bool);
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0x163D274", Offset = "0x163D274", VA = "0x163D274")]
		public bool IsProne()
		{
			return default(bool);
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0x163B964", Offset = "0x163B964", VA = "0x163B964")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren)
		{
			return default(float);
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0x163CC68", Offset = "0x163CC68", VA = "0x163CC68")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren, float falloffGroup)
		{
			return default(float);
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0x163D41C", Offset = "0x163D41C", VA = "0x163D41C")]
		private bool InGroup(Muscle.Group group1, Muscle.Group group2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0x163A4D0", Offset = "0x163A4D0", VA = "0x163A4D0")]
		private MuscleProps GetProps(Muscle.Group group)
		{
			return default(MuscleProps);
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0x162E0D4", Offset = "0x162E0D4", VA = "0x162E0D4")]
		public void SetState(State newState)
		{
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0x163D530", Offset = "0x163D530", VA = "0x163D530")]
		public void SetColliders(bool unpinned)
		{
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0x1638BC0", Offset = "0x1638BC0", VA = "0x1638BC0")]
		public void SetColliders(Muscle m, bool unpinned)
		{
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0x163D5A4", Offset = "0x163D5A4", VA = "0x163D5A4", Slot = "11")]
		public override void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0x163D5AC", Offset = "0x163D5AC", VA = "0x163D5AC", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0x163D6B0", Offset = "0x163D6B0", VA = "0x163D6B0")]
		public BehaviourPuppet()
		{
		}
	}
	[Token(Token = "0x20000AA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F14AC", Offset = "0x4F14AC")]
	public class BehaviourTemplate : BehaviourBase
	{
		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public SubBehaviourCOM centerOfMass;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public LayerMask groundLayers;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float loseBalanceAngle;

		[Token(Token = "0x600069F")]
		[Address(RVA = "0x163D8BC", Offset = "0x163D8BC", VA = "0x163D8BC", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0x163D8F4", Offset = "0x163D8F4", VA = "0x163D8F4", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0x163D8F8", Offset = "0x163D8F8", VA = "0x163D8F8", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0x163D8FC", Offset = "0x163D8FC", VA = "0x163D8FC", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0x163D900", Offset = "0x163D900", VA = "0x163D900", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0x163D944", Offset = "0x163D944", VA = "0x163D944", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0x163D948", Offset = "0x163D948", VA = "0x163D948", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0x163D950", Offset = "0x163D950", VA = "0x163D950", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0x163D958", Offset = "0x163D958", VA = "0x163D958")]
		public BehaviourTemplate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AB")]
	public class SubBehaviourBalancer : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x200024E")]
		public class Settings
		{
			[Token(Token = "0x4000B1A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF110", Offset = "0x4FF110")]
			public float damperForSpring;

			[Token(Token = "0x4000B1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF144", Offset = "0x4FF144")]
			public float maxForceMlp;

			[Token(Token = "0x4000B1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF178", Offset = "0x4FF178")]
			public float IMlp;

			[Token(Token = "0x4000B1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF1AC", Offset = "0x4FF1AC")]
			public float velocityF;

			[Token(Token = "0x4000B1E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF1E0", Offset = "0x4FF1E0")]
			public Vector3 copOffset;

			[Token(Token = "0x4000B1F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF214", Offset = "0x4FF214")]
			public float torqueMlp;

			[Token(Token = "0x4000B20")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF248", Offset = "0x4FF248")]
			public float maxTorqueMag;

			[Token(Token = "0x6000E07")]
			[Address(RVA = "0x11835B8", Offset = "0x11835B8", VA = "0x11835B8")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA598", Offset = "0x4FA598")]
		private ConfigurableJoint <joint>k__BackingField;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA5A8", Offset = "0x4FA5A8")]
		private Vector3 <dir>k__BackingField;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA5B8", Offset = "0x4FA5B8")]
		private Vector3 <dirVel>k__BackingField;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA5C8", Offset = "0x4FA5C8")]
		private Vector3 <cop>k__BackingField;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA5D8", Offset = "0x4FA5D8")]
		private Vector3 <com>k__BackingField;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA5E8", Offset = "0x4FA5E8")]
		private Vector3 <comV>k__BackingField;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Settings settings;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rigidbody[] rigidbodies;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Transform[] copPoints;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PressureSensor pressureSensor;

		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Rigidbody Ibody;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 I;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion toJointSpace;

		[Token(Token = "0x1700005B")]
		public ConfigurableJoint joint
		{
			[Token(Token = "0x60006A8")]
			[Address(RVA = "0x1182A48", Offset = "0x1182A48", VA = "0x1182A48")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5009B8", Offset = "0x5009B8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006A9")]
			[Address(RVA = "0x1182A50", Offset = "0x1182A50", VA = "0x1182A50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5009C8", Offset = "0x5009C8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005C")]
		public Vector3 dir
		{
			[Token(Token = "0x60006AA")]
			[Address(RVA = "0x1182A58", Offset = "0x1182A58", VA = "0x1182A58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5009D8", Offset = "0x5009D8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006AB")]
			[Address(RVA = "0x1182A6C", Offset = "0x1182A6C", VA = "0x1182A6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5009E8", Offset = "0x5009E8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005D")]
		public Vector3 dirVel
		{
			[Token(Token = "0x60006AC")]
			[Address(RVA = "0x1182A78", Offset = "0x1182A78", VA = "0x1182A78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5009F8", Offset = "0x5009F8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006AD")]
			[Address(RVA = "0x1182A8C", Offset = "0x1182A8C", VA = "0x1182A8C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500A08", Offset = "0x500A08")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public Vector3 cop
		{
			[Token(Token = "0x60006AE")]
			[Address(RVA = "0x1182A98", Offset = "0x1182A98", VA = "0x1182A98")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500A18", Offset = "0x500A18")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006AF")]
			[Address(RVA = "0x1182AAC", Offset = "0x1182AAC", VA = "0x1182AAC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500A28", Offset = "0x500A28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public Vector3 com
		{
			[Token(Token = "0x60006B0")]
			[Address(RVA = "0x1182AB8", Offset = "0x1182AB8", VA = "0x1182AB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500A38", Offset = "0x500A38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006B1")]
			[Address(RVA = "0x1182ACC", Offset = "0x1182ACC", VA = "0x1182ACC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500A48", Offset = "0x500A48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public Vector3 comV
		{
			[Token(Token = "0x60006B2")]
			[Address(RVA = "0x1182AD8", Offset = "0x1182AD8", VA = "0x1182AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500A58", Offset = "0x500A58")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006B3")]
			[Address(RVA = "0x1182AEC", Offset = "0x1182AEC", VA = "0x1182AEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500A68", Offset = "0x500A68")]
			private set
			{
			}
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0x1182AF8", Offset = "0x1182AF8", VA = "0x1182AF8")]
		public void Initiate(BehaviourBase behaviour, Settings settings, Rigidbody Ibody, Rigidbody[] rigidbodies, ConfigurableJoint joint, Transform[] copPoints, PressureSensor pressureSensor)
		{
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0x1182C38", Offset = "0x1182C38", VA = "0x1182C38")]
		private void Solve()
		{
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0x11834D4", Offset = "0x11834D4", VA = "0x11834D4")]
		public SubBehaviourBalancer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AC")]
	public abstract class SubBehaviourBase
	{
		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected BehaviourBase behaviour;

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0x11835F0", Offset = "0x11835F0", VA = "0x11835F0")]
		protected static Vector2 XZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0x1183614", Offset = "0x1183614", VA = "0x1183614")]
		protected static Vector3 XYZ(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006B9")]
		[Address(RVA = "0x1183648", Offset = "0x1183648", VA = "0x1183648")]
		protected static Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0x1183678", Offset = "0x1183678", VA = "0x1183678")]
		protected static Vector3 SetY(Vector3 v, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0x11835B0", Offset = "0x11835B0", VA = "0x11835B0")]
		protected SubBehaviourBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AD")]
	public class SubBehaviourCOM : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x200024F")]
		public enum Mode
		{
			[Token(Token = "0x4000B22")]
			FeetCentroid,
			[Token(Token = "0x4000B23")]
			CenterOfPressure
		}

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Mode mode;

		[Token(Token = "0x4000532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float velocityDamper;

		[Token(Token = "0x4000533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float velocityLerpSpeed;

		[Token(Token = "0x4000534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float velocityMax;

		[Token(Token = "0x4000535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float centerOfPressureSpeed;

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 offset;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA5F8", Offset = "0x4FA5F8")]
		private Vector3 <position>k__BackingField;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA608", Offset = "0x4FA608")]
		private Vector3 <direction>k__BackingField;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA618", Offset = "0x4FA618")]
		private float <angle>k__BackingField;

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA628", Offset = "0x4FA628")]
		private Vector3 <velocity>k__BackingField;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA638", Offset = "0x4FA638")]
		private Vector3 <centerOfPressure>k__BackingField;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA648", Offset = "0x4FA648")]
		private Quaternion <rotation>k__BackingField;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA658", Offset = "0x4FA658")]
		private Quaternion <inverseRotation>k__BackingField;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA668", Offset = "0x4FA668")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA678", Offset = "0x4FA678")]
		private float <lastGroundedTime>k__BackingField;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public bool[] groundContacts;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public Vector3[] groundContactPoints;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private LayerMask groundLayers;

		[Token(Token = "0x17000061")]
		public Vector3 position
		{
			[Token(Token = "0x60006BC")]
			[Address(RVA = "0x11836A8", Offset = "0x11836A8", VA = "0x11836A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500A78", Offset = "0x500A78")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006BD")]
			[Address(RVA = "0x11836BC", Offset = "0x11836BC", VA = "0x11836BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500A88", Offset = "0x500A88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public Vector3 direction
		{
			[Token(Token = "0x60006BE")]
			[Address(RVA = "0x11836C8", Offset = "0x11836C8", VA = "0x11836C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500A98", Offset = "0x500A98")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006BF")]
			[Address(RVA = "0x11836DC", Offset = "0x11836DC", VA = "0x11836DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500AA8", Offset = "0x500AA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public float angle
		{
			[Token(Token = "0x60006C0")]
			[Address(RVA = "0x11836E8", Offset = "0x11836E8", VA = "0x11836E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500AB8", Offset = "0x500AB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006C1")]
			[Address(RVA = "0x11836F0", Offset = "0x11836F0", VA = "0x11836F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500AC8", Offset = "0x500AC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000064")]
		public Vector3 velocity
		{
			[Token(Token = "0x60006C2")]
			[Address(RVA = "0x11836F8", Offset = "0x11836F8", VA = "0x11836F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500AD8", Offset = "0x500AD8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006C3")]
			[Address(RVA = "0x118370C", Offset = "0x118370C", VA = "0x118370C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500AE8", Offset = "0x500AE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public Vector3 centerOfPressure
		{
			[Token(Token = "0x60006C4")]
			[Address(RVA = "0x1183718", Offset = "0x1183718", VA = "0x1183718")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500AF8", Offset = "0x500AF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006C5")]
			[Address(RVA = "0x118372C", Offset = "0x118372C", VA = "0x118372C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500B08", Offset = "0x500B08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public Quaternion rotation
		{
			[Token(Token = "0x60006C6")]
			[Address(RVA = "0x1183738", Offset = "0x1183738", VA = "0x1183738")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500B18", Offset = "0x500B18")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60006C7")]
			[Address(RVA = "0x1183748", Offset = "0x1183748", VA = "0x1183748")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500B28", Offset = "0x500B28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public Quaternion inverseRotation
		{
			[Token(Token = "0x60006C8")]
			[Address(RVA = "0x1183758", Offset = "0x1183758", VA = "0x1183758")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500B38", Offset = "0x500B38")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60006C9")]
			[Address(RVA = "0x1183768", Offset = "0x1183768", VA = "0x1183768")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500B48", Offset = "0x500B48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public bool isGrounded
		{
			[Token(Token = "0x60006CA")]
			[Address(RVA = "0x1183778", Offset = "0x1183778", VA = "0x1183778")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500B58", Offset = "0x500B58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60006CB")]
			[Address(RVA = "0x1183780", Offset = "0x1183780", VA = "0x1183780")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500B68", Offset = "0x500B68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000069")]
		public float lastGroundedTime
		{
			[Token(Token = "0x60006CC")]
			[Address(RVA = "0x1183788", Offset = "0x1183788", VA = "0x1183788")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500B78", Offset = "0x500B78")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60006CD")]
			[Address(RVA = "0x1183790", Offset = "0x1183790", VA = "0x1183790")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500B88", Offset = "0x500B88")]
			private set
			{
			}
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1183798", Offset = "0x1183798", VA = "0x1183798")]
		public void Initiate(BehaviourBase behaviour, LayerMask groundLayers)
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1183B48", Offset = "0x1183B48", VA = "0x1183B48")]
		private void OnHierarchyChanged()
		{
		}

		[Token(Token = "0x60006D0")]
		[Address(RVA = "0x1183C2C", Offset = "0x1183C2C", VA = "0x1183C2C")]
		private void OnPreMuscleCollision(MuscleCollision c)
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1183FAC", Offset = "0x1183FAC", VA = "0x1183FAC")]
		private void OnPreMuscleCollisionExit(MuscleCollision c)
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x1184114", Offset = "0x1184114", VA = "0x1184114")]
		private void OnPreActivate()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x1184784", Offset = "0x1184784", VA = "0x1184784")]
		private void OnPreLateUpdate()
		{
		}

		[Token(Token = "0x60006D4")]
		[Address(RVA = "0x118519C", Offset = "0x118519C", VA = "0x118519C")]
		private void OnPreDeactivate()
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x1183DC4", Offset = "0x1183DC4", VA = "0x1183DC4")]
		private Vector3 GetCollisionCOP(Collision collision)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1184C34", Offset = "0x1184C34", VA = "0x1184C34")]
		private bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x118425C", Offset = "0x118425C", VA = "0x118425C")]
		private Vector3 GetCenterOfMass()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x1184EC0", Offset = "0x1184EC0", VA = "0x1184EC0")]
		private Vector3 GetCenterOfMassVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0x118522C", Offset = "0x118522C", VA = "0x118522C")]
		private Vector3 GetMomentum()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0x1184CAC", Offset = "0x1184CAC", VA = "0x1184CAC")]
		private Vector3 GetCenterOfPressure()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0x11844D0", Offset = "0x11844D0", VA = "0x11844D0")]
		private Vector3 GetFeetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0x11854A0", Offset = "0x11854A0", VA = "0x11854A0")]
		public SubBehaviourCOM()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000AE")]
	public class Booster
	{
		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA6A8", Offset = "0x4FA6A8")]
		public bool fullBody;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA6DC", Offset = "0x4FA6DC")]
		public ConfigurableJoint[] muscles;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA710", Offset = "0x4FA710")]
		public Muscle.Group[] groups;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA744", Offset = "0x4FA744")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FA744", Offset = "0x4FA744")]
		public float immunity;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA794", Offset = "0x4FA794")]
		public float impulseMlp;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA7C8", Offset = "0x4FA7C8")]
		public float boostParents;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA7FC", Offset = "0x4FA7FC")]
		public float boostChildren;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FA830", Offset = "0x4FA830")]
		public float delay;

		[Token(Token = "0x60006DD")]
		[Address(RVA = "0x1853F7C", Offset = "0x1853F7C", VA = "0x1853F7C")]
		public void Boost(BehaviourPuppet puppet)
		{
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0x185429C", Offset = "0x185429C", VA = "0x185429C")]
		public Booster()
		{
		}
	}
	[Token(Token = "0x20000AF")]
	public class JointBreakBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0x18543C8", Offset = "0x18543C8", VA = "0x18543C8")]
		private void OnJointBreak()
		{
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0x1855D0C", Offset = "0x1855D0C", VA = "0x1855D0C")]
		public JointBreakBroadcaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000B0")]
	public class Muscle
	{
		[Serializable]
		[Token(Token = "0x2000250")]
		public enum Group
		{
			[Token(Token = "0x4000B25")]
			Hips,
			[Token(Token = "0x4000B26")]
			Spine,
			[Token(Token = "0x4000B27")]
			Head,
			[Token(Token = "0x4000B28")]
			Arm,
			[Token(Token = "0x4000B29")]
			Hand,
			[Token(Token = "0x4000B2A")]
			Leg,
			[Token(Token = "0x4000B2B")]
			Foot,
			[Token(Token = "0x4000B2C")]
			Tail,
			[Token(Token = "0x4000B2D")]
			Prop
		}

		[Serializable]
		[Token(Token = "0x2000251")]
		public class InternalCollisionIgnoreSettings
		{
			[Token(Token = "0x4000B2E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF27C", Offset = "0x4FF27C")]
			public bool ignoreAll;

			[Token(Token = "0x4000B2F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF2B0", Offset = "0x4FF2B0")]
			public ConfigurableJoint[] muscles;

			[Token(Token = "0x4000B30")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF2E4", Offset = "0x4FF2E4")]
			public Group[] groups;

			[Token(Token = "0x6000E08")]
			[Address(RVA = "0x185D9B4", Offset = "0x185D9B4", VA = "0x185D9B4")]
			public InternalCollisionIgnoreSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000252")]
		public class Props
		{
			[Token(Token = "0x4000B31")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF318", Offset = "0x4FF318")]
			public Group group;

			[Token(Token = "0x4000B32")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF34C", Offset = "0x4FF34C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FF34C", Offset = "0x4FF34C")]
			public float mappingWeight;

			[Token(Token = "0x4000B33")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF39C", Offset = "0x4FF39C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FF39C", Offset = "0x4FF39C")]
			public float pinWeight;

			[Token(Token = "0x4000B34")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF3EC", Offset = "0x4FF3EC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FF3EC", Offset = "0x4FF3EC")]
			public float muscleWeight;

			[Token(Token = "0x4000B35")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF43C", Offset = "0x4FF43C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FF43C", Offset = "0x4FF43C")]
			public float muscleDamper;

			[Token(Token = "0x4000B36")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF48C", Offset = "0x4FF48C")]
			public bool mapPosition;

			[Token(Token = "0x4000B37")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF4C0", Offset = "0x4FF4C0")]
			public InternalCollisionIgnoreSettings internalCollisionIgnores;

			[Token(Token = "0x4000B38")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF4F4", Offset = "0x4FF4F4")]
			public Transform[] animatedTargetChildren;

			[Token(Token = "0x6000E09")]
			[Address(RVA = "0x185D910", Offset = "0x185D910", VA = "0x185D910")]
			public Props()
			{
			}

			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0x185DA3C", Offset = "0x185DA3C", VA = "0x185DA3C")]
			public Props(float pinWeight, float muscleWeight, float mappingWeight, float muscleDamper, bool mapPosition, Group group = Group.Hips)
			{
			}

			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0x185BAFC", Offset = "0x185BAFC", VA = "0x185BAFC")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x2000253")]
		public struct State
		{
			[Token(Token = "0x4000B39")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float mappingWeightMlp;

			[Token(Token = "0x4000B3A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float pinWeightMlp;

			[Token(Token = "0x4000B3B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float muscleWeightMlp;

			[Token(Token = "0x4000B3C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float maxForceMlp;

			[Token(Token = "0x4000B3D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float muscleDamperMlp;

			[Token(Token = "0x4000B3E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float muscleDamperAdd;

			[Token(Token = "0x4000B3F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float immunity;

			[Token(Token = "0x4000B40")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float impulseMlp;

			[Token(Token = "0x4000B41")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 velocity;

			[Token(Token = "0x4000B42")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 angularVelocity;

			[Token(Token = "0x4000B43")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isDisconnected;

			[Token(Token = "0x4000B44")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool resetFlag;

			[Token(Token = "0x170000E8")]
			public static State Default
			{
				[Token(Token = "0x6000E0C")]
				[Address(RVA = "0x1857898", Offset = "0x1857898", VA = "0x1857898")]
				get
				{
					return default(State);
				}
			}

			[Token(Token = "0x6000E0D")]
			[Address(RVA = "0x6DE384", Offset = "0x6DE384", VA = "0x6DE384")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x2000254")]
		public class TargetChild
		{
			[Token(Token = "0x4000B45")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform t;

			[Token(Token = "0x4000B46")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4000B47")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6000E0E")]
			[Address(RVA = "0x1859D34", Offset = "0x1859D34", VA = "0x1859D34")]
			public TargetChild(Transform t)
			{
			}

			[Token(Token = "0x6000E0F")]
			[Address(RVA = "0x185CF50", Offset = "0x185CF50", VA = "0x185CF50")]
			public void Map()
			{
			}
		}

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ConfigurableJoint joint;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform target;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Props props;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public State state;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int[] parentIndexes;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public int[] childIndexes;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public bool[] childFlags;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int[] kinshipDegrees;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public JointBreakBroadcaster jointBreakBroadcaster;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[HideInInspector]
		public Vector3 positionOffset;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA944", Offset = "0x4FA944")]
		private Transform <transform>k__BackingField;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA954", Offset = "0x4FA954")]
		private Rigidbody <rigidbody>k__BackingField;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA964", Offset = "0x4FA964")]
		private Transform <connectedBodyTarget>k__BackingField;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA974", Offset = "0x4FA974")]
		private Vector3 <targetAnimatedPosition>k__BackingField;

		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA984", Offset = "0x4FA984")]
		private Quaternion <targetAnimatedWorldRotation>k__BackingField;

		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA994", Offset = "0x4FA994")]
		private Vector3 <targetVelocity>k__BackingField;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FA9A4", Offset = "0x4FA9A4")]
		private Rigidbody <additionalRigidbody>k__BackingField;

		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		[HideInInspector]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[SerializeField]
		[HideInInspector]
		public Transform additionalPinTarget;

		[Token(Token = "0x4000562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		[HideInInspector]
		public float additionalPinWeight;

		[Token(Token = "0x4000563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public Vector3 mappedVelocity;

		[Token(Token = "0x4000564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[HideInInspector]
		public Vector3 mappedAngularVelocity;

		[Token(Token = "0x4000565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public bool isPropMuscle;

		[Token(Token = "0x4000566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		[HideInInspector]
		public int index;

		[Token(Token = "0x4000567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FAAA4", Offset = "0x4FAAA4")]
		private Quaternion <targetRotationRelative>k__BackingField;

		[Token(Token = "0x4000568")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FAAB4", Offset = "0x4FAAB4")]
		private Rigidbody <rebuildConnectedBody>k__BackingField;

		[Token(Token = "0x4000569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FAAC4", Offset = "0x4FAAC4")]
		private Transform <rebuildTargetParent>k__BackingField;

		[Token(Token = "0x400056A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FAAD4", Offset = "0x4FAAD4")]
		private Vector3 <defaultTargetPosRelToMuscle>k__BackingField;

		[Token(Token = "0x400056B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FAAE4", Offset = "0x4FAAE4")]
		private Quaternion <defaultTargetRotRelToMuscle>k__BackingField;

		[Token(Token = "0x400056C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FAAF4", Offset = "0x4FAAF4")]
		private Quaternion <defaultMuscleRotRelToTarget>k__BackingField;

		[Token(Token = "0x400056D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Transform rebuildParent;

		[Token(Token = "0x400056E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 rebuildPosition;

		[Token(Token = "0x400056F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Quaternion rebuildRotation;

		[Token(Token = "0x4000570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Vector3 rebuildTargetPosition;

		[Token(Token = "0x4000571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private Quaternion rebuildTargetRotation;

		[Token(Token = "0x4000572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private ConfigurableJointMotion rebuildAngularXMotion;

		[Token(Token = "0x4000573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private ConfigurableJointMotion rebuildAngularYMotion;

		[Token(Token = "0x4000574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private ConfigurableJointMotion rebuildAngularZMotion;

		[Token(Token = "0x4000575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool doesJointHaveConnectedBody;

		[Token(Token = "0x4000576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x169")]
		private bool hasAdditionalPin;

		[Token(Token = "0x4000577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16A")]
		private bool hasTargetParent;

		[Token(Token = "0x4000578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[HideInInspector]
		public Vector3 targetMappedPosition;

		[Token(Token = "0x4000579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public Quaternion targetMappedRotation;

		[Token(Token = "0x400057A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		public Vector3 targetSampledPosition;

		[Token(Token = "0x400057B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[HideInInspector]
		public Quaternion targetSampledRotation;

		[Token(Token = "0x400057C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private JointDrive slerpDrive;

		[Token(Token = "0x400057D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float lastJointDriveRotationWeight;

		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float lastRotationDamper;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 defaultTargetLocalPosition;

		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 lastMappedPosition;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private Quaternion localRotationConvert;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private Quaternion toParentSpace;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private Quaternion toJointSpaceInverse;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private Quaternion toJointSpaceDefault;

		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private Quaternion targetAnimatedRotation;

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Quaternion rotationRelativeToTarget;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Quaternion lastMappedRotation;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private Transform targetParent;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private Transform connectedBodyTransform;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private ConfigurableJointMotion angularXMotionDefault;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private ConfigurableJointMotion angularYMotionDefault;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private ConfigurableJointMotion angularZMotionDefault;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private bool directTargetParent;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x291")]
		private bool initiated;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private Collider[] _colliders;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float lastReadTime;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float lastWriteTime;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool[] disabledColliders;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private TargetChild[] targetChildren;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private Vector3 additionalTargetVelocity;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private Vector3 targetAnimatedCenterOfMass;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private Vector3 additionalPinTargetAnimatedCenterOfMass;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private Quaternion defaultTargetRotRelToMuscleInverse;

		[Token(Token = "0x1700006A")]
		public Transform transform
		{
			[Token(Token = "0x60006E1")]
			[Address(RVA = "0x18572F8", Offset = "0x18572F8", VA = "0x18572F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500B98", Offset = "0x500B98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006E2")]
			[Address(RVA = "0x1857300", Offset = "0x1857300", VA = "0x1857300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500BA8", Offset = "0x500BA8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public Rigidbody rigidbody
		{
			[Token(Token = "0x60006E3")]
			[Address(RVA = "0x1857308", Offset = "0x1857308", VA = "0x1857308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500BB8", Offset = "0x500BB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006E4")]
			[Address(RVA = "0x1857310", Offset = "0x1857310", VA = "0x1857310")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500BC8", Offset = "0x500BC8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public Transform connectedBodyTarget
		{
			[Token(Token = "0x60006E5")]
			[Address(RVA = "0x1857318", Offset = "0x1857318", VA = "0x1857318")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500BD8", Offset = "0x500BD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006E6")]
			[Address(RVA = "0x1857320", Offset = "0x1857320", VA = "0x1857320")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500BE8", Offset = "0x500BE8")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public Vector3 targetAnimatedPosition
		{
			[Token(Token = "0x60006E7")]
			[Address(RVA = "0x1857328", Offset = "0x1857328", VA = "0x1857328")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500BF8", Offset = "0x500BF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006E8")]
			[Address(RVA = "0x185733C", Offset = "0x185733C", VA = "0x185733C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500C08", Offset = "0x500C08")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public Quaternion targetAnimatedWorldRotation
		{
			[Token(Token = "0x60006E9")]
			[Address(RVA = "0x1857348", Offset = "0x1857348", VA = "0x1857348")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500C18", Offset = "0x500C18")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60006EA")]
			[Address(RVA = "0x1857358", Offset = "0x1857358", VA = "0x1857358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500C28", Offset = "0x500C28")]
			private set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public Collider[] colliders
		{
			[Token(Token = "0x60006EB")]
			[Address(RVA = "0x1857368", Offset = "0x1857368", VA = "0x1857368")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006EC")]
			[Address(RVA = "0x1857370", Offset = "0x1857370", VA = "0x1857370")]
			set
			{
			}
		}

		[Token(Token = "0x17000070")]
		public Vector3 targetVelocity
		{
			[Token(Token = "0x60006ED")]
			[Address(RVA = "0x1857378", Offset = "0x1857378", VA = "0x1857378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500C38", Offset = "0x500C38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006EE")]
			[Address(RVA = "0x185738C", Offset = "0x185738C", VA = "0x185738C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500C48", Offset = "0x500C48")]
			private set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public Rigidbody additionalRigidbody
		{
			[Token(Token = "0x60006EF")]
			[Address(RVA = "0x1857398", Offset = "0x1857398", VA = "0x1857398")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500C58", Offset = "0x500C58")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F0")]
			[Address(RVA = "0x18573A0", Offset = "0x18573A0", VA = "0x18573A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500C68", Offset = "0x500C68")]
			private set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public Quaternion targetRotationRelative
		{
			[Token(Token = "0x60006F1")]
			[Address(RVA = "0x18573A8", Offset = "0x18573A8", VA = "0x18573A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500C78", Offset = "0x500C78")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60006F2")]
			[Address(RVA = "0x18573B8", Offset = "0x18573B8", VA = "0x18573B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500C88", Offset = "0x500C88")]
			private set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public Rigidbody rebuildConnectedBody
		{
			[Token(Token = "0x60006F4")]
			[Address(RVA = "0x18575D4", Offset = "0x18575D4", VA = "0x18575D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500C98", Offset = "0x500C98")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F5")]
			[Address(RVA = "0x18575DC", Offset = "0x18575DC", VA = "0x18575DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500CA8", Offset = "0x500CA8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public Transform rebuildTargetParent
		{
			[Token(Token = "0x60006F6")]
			[Address(RVA = "0x18575E4", Offset = "0x18575E4", VA = "0x18575E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500CB8", Offset = "0x500CB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60006F7")]
			[Address(RVA = "0x18575EC", Offset = "0x18575EC", VA = "0x18575EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500CC8", Offset = "0x500CC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public Vector3 defaultTargetPosRelToMuscle
		{
			[Token(Token = "0x60006F8")]
			[Address(RVA = "0x18575F4", Offset = "0x18575F4", VA = "0x18575F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500CD8", Offset = "0x500CD8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60006F9")]
			[Address(RVA = "0x1857608", Offset = "0x1857608", VA = "0x1857608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500CE8", Offset = "0x500CE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public Quaternion defaultTargetRotRelToMuscle
		{
			[Token(Token = "0x60006FA")]
			[Address(RVA = "0x1857614", Offset = "0x1857614", VA = "0x1857614")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500CF8", Offset = "0x500CF8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60006FB")]
			[Address(RVA = "0x1857624", Offset = "0x1857624", VA = "0x1857624")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500D08", Offset = "0x500D08")]
			private set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public Quaternion defaultMuscleRotRelToTarget
		{
			[Token(Token = "0x60006FC")]
			[Address(RVA = "0x1857634", Offset = "0x1857634", VA = "0x1857634")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500D18", Offset = "0x500D18")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60006FD")]
			[Address(RVA = "0x1857644", Offset = "0x1857644", VA = "0x1857644")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500D28", Offset = "0x500D28")]
			private set
			{
			}
		}

		[Token(Token = "0x17000078")]
		private Quaternion localRotation
		{
			[Token(Token = "0x600071C")]
			[Address(RVA = "0x1859570", Offset = "0x1859570", VA = "0x1859570")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x17000079")]
		private Quaternion parentRotation
		{
			[Token(Token = "0x600071D")]
			[Address(RVA = "0x185971C", Offset = "0x185971C", VA = "0x185971C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700007A")]
		private Quaternion targetParentRotation
		{
			[Token(Token = "0x600071E")]
			[Address(RVA = "0x185966C", Offset = "0x185966C", VA = "0x185966C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x1700007B")]
		private Quaternion targetLocalRotation
		{
			[Token(Token = "0x600071F")]
			[Address(RVA = "0x185988C", Offset = "0x185988C", VA = "0x185988C")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x18573C8", Offset = "0x18573C8", VA = "0x18573C8")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x1857658", Offset = "0x1857658", VA = "0x1857658")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x18578D8", Offset = "0x18578D8", VA = "0x18578D8", Slot = "4")]
		public virtual void Initiate(Muscle[] colleagues)
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x18590E4", Offset = "0x18590E4", VA = "0x18590E4")]
		public void InitiateAdditionalPin()
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x1859394", Offset = "0x1859394", VA = "0x1859394")]
		public void UpdateColliders()
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x185A244", Offset = "0x185A244", VA = "0x185A244")]
		public void DisableColliders()
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x185A3A4", Offset = "0x185A3A4", VA = "0x185A3A4")]
		public void EnableColliders()
		{
		}

		[Token(Token = "0x6000704")]
		[Address(RVA = "0x1859E34", Offset = "0x1859E34", VA = "0x1859E34")]
		private void AddColliders(Transform t, ref Collider[] C, bool includeMeshColliders)
		{
		}

		[Token(Token = "0x6000705")]
		[Address(RVA = "0x185A114", Offset = "0x185A114", VA = "0x185A114")]
		private void AddCompoundColliders(Transform t, ref Collider[] colliders)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x185A494", Offset = "0x185A494", VA = "0x185A494")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x185A6F8", Offset = "0x185A6F8", VA = "0x185A6F8")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x185A974", Offset = "0x185A974", VA = "0x185A974")]
		private bool ForceIgnore(Muscle otherMuscle)
		{
			return default(bool);
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x185ACCC", Offset = "0x185ACCC", VA = "0x185ACCC")]
		public void IgnoreAngularLimits(bool ignore)
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x185AD74", Offset = "0x185AD74", VA = "0x185AD74")]
		public void FixTargetTransforms()
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x185AE04", Offset = "0x185AE04", VA = "0x185AE04")]
		public void Reset()
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x185B0B4", Offset = "0x185B0B4", VA = "0x185B0B4")]
		public void MoveToTarget()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x1859298", Offset = "0x1859298", VA = "0x1859298")]
		public void SetKinematic(bool to)
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x18599B8", Offset = "0x18599B8", VA = "0x18599B8")]
		public void Read()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x185B398", Offset = "0x185B398", VA = "0x185B398")]
		public void ClearVelocities()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x185B5F8", Offset = "0x185B5F8", VA = "0x185B5F8")]
		public void UpdateAnchor(bool supportTranslationAnimation)
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x185B9CC", Offset = "0x185B9CC", VA = "0x185B9CC", Slot = "5")]
		public virtual void Update(float pinWeightMaster, float muscleWeightMaster, float muscleSpring, float muscleDamper, float pinPow, float pinDistanceFalloff, bool rotationTargetChanged, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x185C488", Offset = "0x185C488", VA = "0x185C488")]
		public void StoreTargetMappedPosition()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x185C4CC", Offset = "0x185C4CC", VA = "0x185C4CC")]
		public void StoreTargetMappedRotation()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x185C518", Offset = "0x185C518", VA = "0x185C518")]
		public void Map(float mappingWeightMaster)
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x185CAB4", Offset = "0x185CAB4", VA = "0x185CAB4")]
		public void ResetTargetLocalPosition()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x185CAFC", Offset = "0x185CAFC", VA = "0x185CAFC")]
		public void CalculateMappedVelocity()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x185CD8C", Offset = "0x185CD8C", VA = "0x185CD8C")]
		public void MapDisconnected()
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x185BCE0", Offset = "0x185BCE0", VA = "0x185BCE0")]
		private void Pin(float pinWeightMaster, float pinPow, float pinDistanceFalloff, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x185CFCC", Offset = "0x185CFCC", VA = "0x185CFCC")]
		private void Pin(Rigidbody r, Vector3 posOffset, Vector3 targetVel, float w, float pinDistanceFalloff, float deltaTime)
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x185C27C", Offset = "0x185C27C", VA = "0x185C27C")]
		private void MuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x185D514", Offset = "0x185D514", VA = "0x185D514")]
		public void SetMuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x185D3E4", Offset = "0x185D3E4", VA = "0x185D3E4")]
		private Quaternion LocalToJointSpace(Quaternion localRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x185B898", Offset = "0x185B898", VA = "0x185B898")]
		private static Vector3 InverseTransformPointUnscaled(Vector3 position, Quaternion rotation, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x185D6E0", Offset = "0x185D6E0", VA = "0x185D6E0")]
		public Muscle()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public struct MuscleCollision
	{
		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Collision collision;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool isStay;

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x6DE3D8", Offset = "0x6DE3D8", VA = "0x6DE3D8")]
		public MuscleCollision(int muscleIndex, Collision collision, bool isStay = false)
		{
		}
	}
	[Token(Token = "0x20000B2")]
	public struct MuscleHit
	{
		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float unPin;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 force;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x6DE3E8", Offset = "0x6DE3E8", VA = "0x6DE3E8")]
		public MuscleHit(int muscleIndex, float unPin, Vector3 force, Vector3 position)
		{
		}
	}
	[Token(Token = "0x20000B3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F14E0", Offset = "0x4F14E0")]
	public class MuscleCollisionBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x40005A5")]
		private const string onMuscleHit = "OnMuscleHit";

		[Token(Token = "0x40005A6")]
		private const string onMuscleCollision = "OnMuscleCollision";

		[Token(Token = "0x40005A7")]
		private const string onMuscleCollisionExit = "OnMuscleCollisionExit";

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private MuscleCollisionBroadcaster otherBroadcaster;

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x185DB18", Offset = "0x185DB18", VA = "0x185DB18")]
		public void Hit(float unPin, Vector3 force, Vector3 position)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x185DC1C", Offset = "0x185DC1C", VA = "0x185DC1C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x185DE5C", Offset = "0x185DE5C", VA = "0x185DE5C")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x185E160", Offset = "0x185E160", VA = "0x185E160")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0x185E464", Offset = "0x185E464", VA = "0x185E464")]
		public MuscleCollisionBroadcaster()
		{
		}
	}
	[Token(Token = "0x20000B4")]
	public static class PhysXTools
	{
		[Token(Token = "0x600072A")]
		[Address(RVA = "0x185E46C", Offset = "0x185E46C", VA = "0x185E46C")]
		public static void Predict(Rigidbody r, int steps, out Vector3 position, out Quaternion rotation)
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x185E50C", Offset = "0x185E50C", VA = "0x185E50C")]
		public static void Predict(Rigidbody r, int steps, out Vector3 position, out Quaternion rotation, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x185E660", Offset = "0x185E660", VA = "0x185E660")]
		public static void Predict(ref Vector3 position, ref Quaternion rotation, ref Vector3 velocity, ref Vector3 angularVelocity, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x185E97C", Offset = "0x185E97C", VA = "0x185E97C")]
		public static Vector3 GetCenterOfMass(PuppetMaster puppet)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x185ECB0", Offset = "0x185ECB0", VA = "0x185ECB0")]
		public static Vector3 GetCenterOfMass(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x185EF50", Offset = "0x185EF50", VA = "0x185EF50")]
		public static Vector3 GetCenterOfMassVelocity(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x185F1F0", Offset = "0x185F1F0", VA = "0x185F1F0")]
		public static void DivByInertia(ref Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x185F3AC", Offset = "0x185F3AC", VA = "0x185F3AC")]
		public static void ScaleByInertia(ref Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x185F504", Offset = "0x185F504", VA = "0x185F504")]
		public static Vector3 GetFromToAcceleration(Vector3 fromV, Vector3 toV)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x185D148", Offset = "0x185D148", VA = "0x185D148")]
		public static Vector3 GetAngularAcceleration(Quaternion fromR, Quaternion toR)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x185F69C", Offset = "0x185F69C", VA = "0x185F69C")]
		public static void AddFromToTorque(Rigidbody r, Quaternion toR, ForceMode forceMode)
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x185FA64", Offset = "0x185FA64", VA = "0x185FA64")]
		public static void AddFromToTorque(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x185FE0C", Offset = "0x185FE0C", VA = "0x185FE0C")]
		public static void AddFromToForce(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x1860140", Offset = "0x1860140", VA = "0x1860140")]
		public static Vector3 GetLinearAcceleration(Vector3 fromPoint, Vector3 toPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x1860218", Offset = "0x1860218", VA = "0x1860218")]
		public static Quaternion ToJointSpace(ConfigurableJoint joint)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x18594F8", Offset = "0x18594F8", VA = "0x18594F8")]
		public static Vector3 CalculateInertiaTensorCuboid(Vector3 size, float mass)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x185F350", Offset = "0x185F350", VA = "0x185F350")]
		public static Vector3 Div(Vector3 v, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20000B5")]
	public class PressureSensor : MonoBehaviour
	{
		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool visualize;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask layers;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FABA4", Offset = "0x4FABA4")]
		private Vector3 <center>k__BackingField;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FABB4", Offset = "0x4FABB4")]
		private bool <inContact>k__BackingField;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FABC4", Offset = "0x4FABC4")]
		private Vector3 <bottom>k__BackingField;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FABD4", Offset = "0x4FABD4")]
		private Rigidbody <r>k__BackingField;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool fixedFrame;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 P;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int count;

		[Token(Token = "0x1700007C")]
		public Vector3 center
		{
			[Token(Token = "0x600073B")]
			[Address(RVA = "0x1860394", Offset = "0x1860394", VA = "0x1860394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500D38", Offset = "0x500D38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600073C")]
			[Address(RVA = "0x18603A8", Offset = "0x18603A8", VA = "0x18603A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500D48", Offset = "0x500D48")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public bool inContact
		{
			[Token(Token = "0x600073D")]
			[Address(RVA = "0x18603B4", Offset = "0x18603B4", VA = "0x18603B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500D58", Offset = "0x500D58")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600073E")]
			[Address(RVA = "0x18603BC", Offset = "0x18603BC", VA = "0x18603BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500D68", Offset = "0x500D68")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public Vector3 bottom
		{
			[Token(Token = "0x600073F")]
			[Address(RVA = "0x18603C4", Offset = "0x18603C4", VA = "0x18603C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500D78", Offset = "0x500D78")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000740")]
			[Address(RVA = "0x18603D8", Offset = "0x18603D8", VA = "0x18603D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500D88", Offset = "0x500D88")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public Rigidbody r
		{
			[Token(Token = "0x6000741")]
			[Address(RVA = "0x18603E4", Offset = "0x18603E4", VA = "0x18603E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500D98", Offset = "0x500D98")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000742")]
			[Address(RVA = "0x18603EC", Offset = "0x18603EC", VA = "0x18603EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500DA8", Offset = "0x500DA8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x18603F4", Offset = "0x18603F4", VA = "0x18603F4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x1860494", Offset = "0x1860494", VA = "0x1860494")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x1860720", Offset = "0x1860720", VA = "0x1860720")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x1860724", Offset = "0x1860724", VA = "0x1860724")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x1860730", Offset = "0x1860730", VA = "0x1860730")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x18607F0", Offset = "0x18607F0", VA = "0x18607F0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x1860498", Offset = "0x1860498", VA = "0x1860498")]
		private void ProcessCollision(Collision c)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x18608CC", Offset = "0x18608CC", VA = "0x18608CC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x1860910", Offset = "0x1860910", VA = "0x1860910")]
		public PressureSensor()
		{
		}
	}
	[Token(Token = "0x20000B6")]
	public abstract class Prop : MonoBehaviour
	{
		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FABE4", Offset = "0x4FABE4")]
		public int propType;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FAC18", Offset = "0x4FAC18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAC18", Offset = "0x4FAC18")]
		public ConfigurableJoint muscle;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAC78", Offset = "0x4FAC78")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FACAC", Offset = "0x4FACAC")]
		public bool forceLayers;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FACE0", Offset = "0x4FACE0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FACE0", Offset = "0x4FACE0")]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAD40", Offset = "0x4FAD40")]
		public Transform additionalPinTarget;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAD74", Offset = "0x4FAD74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FAD74", Offset = "0x4FAD74")]
		public float additionalPinWeight;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FADC4", Offset = "0x4FADC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FADC4", Offset = "0x4FADC4")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAE24", Offset = "0x4FAE24")]
		public PhysicMaterial droppedMaterial;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FAE58", Offset = "0x4FAE58")]
		private PropRoot <propRoot>k__BackingField;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FAE68", Offset = "0x4FAE68")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ConfigurableJointMotion xMotion;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private ConfigurableJointMotion yMotion;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ConfigurableJointMotion zMotion;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private ConfigurableJointMotion angularXMotion;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private ConfigurableJointMotion angularYMotion;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private ConfigurableJointMotion angularZMotion;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Collider[] colliders;

		[Token(Token = "0x17000080")]
		public bool isPickedUp
		{
			[Token(Token = "0x600074C")]
			[Address(RVA = "0x1860918", Offset = "0x1860918", VA = "0x1860918")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000081")]
		public PropRoot propRoot
		{
			[Token(Token = "0x600074D")]
			[Address(RVA = "0x186099C", Offset = "0x186099C", VA = "0x186099C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500DB8", Offset = "0x500DB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600074E")]
			[Address(RVA = "0x18609A4", Offset = "0x18609A4", VA = "0x18609A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500DC8", Offset = "0x500DC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		public bool initiated
		{
			[Token(Token = "0x6000752")]
			[Address(RVA = "0x1860D50", Offset = "0x1860D50", VA = "0x1860D50")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500DD8", Offset = "0x500DD8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000753")]
			[Address(RVA = "0x1860D58", Offset = "0x1860D58", VA = "0x1860D58")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500DE8", Offset = "0x500DE8")]
			private set
			{
			}
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x18609AC", Offset = "0x18609AC", VA = "0x18609AC")]
		public void PickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x1860D10", Offset = "0x1860D10", VA = "0x1860D10")]
		public void Drop()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x1860D48", Offset = "0x1860D48", VA = "0x1860D48")]
		public void StartPickedUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x1860D60", Offset = "0x1860D60", VA = "0x1860D60", Slot = "4")]
		protected virtual void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x1860D64", Offset = "0x1860D64", VA = "0x1860D64", Slot = "5")]
		protected virtual void OnDrop()
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x1860D68", Offset = "0x1860D68", VA = "0x1860D68", Slot = "6")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x1860D6C", Offset = "0x1860D6C", VA = "0x1860D6C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x1861030", Offset = "0x1861030", VA = "0x1861030")]
		private void ReleaseJoint()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x1860C24", Offset = "0x1860C24", VA = "0x1860C24")]
		private void SetMaterial(PhysicMaterial material)
		{
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0x1861220", Offset = "0x1861220", VA = "0x1861220")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0x186149C", Offset = "0x186149C", VA = "0x186149C")]
		protected Prop()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	public class PropMuscle : MonoBehaviour
	{
		[Token(Token = "0x2000255")]
		public delegate void PropDelegate(PuppetMasterProp prop);

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAEA8", Offset = "0x4FAEA8")]
		public PuppetMasterProp currentProp;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FAEDC", Offset = "0x4FAEDC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAEDC", Offset = "0x4FAEDC")]
		public Vector3 additionalPinOffset;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FAF3C", Offset = "0x4FAF3C")]
		private PuppetMasterProp <activeProp>k__BackingField;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PropDelegate OnPickUpProp;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PropDelegate OnDropProp;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Muscle _muscle;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PuppetMasterProp lastProp;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 targetDefaultLocalPos;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 lastAdditionalPinOffset;

		[Token(Token = "0x17000083")]
		public Muscle muscle
		{
			[Token(Token = "0x600075C")]
			[Address(RVA = "0x1861538", Offset = "0x1861538", VA = "0x1861538")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000084")]
		public PuppetMasterProp activeProp
		{
			[Token(Token = "0x600075D")]
			[Address(RVA = "0x1861620", Offset = "0x1861620", VA = "0x1861620")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500DF8", Offset = "0x500DF8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600075E")]
			[Address(RVA = "0x1861628", Offset = "0x1861628", VA = "0x1861628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500E08", Offset = "0x500E08")]
			private set
			{
			}
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0x1861630", Offset = "0x1861630", VA = "0x1861630")]
		public bool AddAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0x1861D90", Offset = "0x1861D90", VA = "0x1861D90")]
		public bool RemoveAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0x1861F9C", Offset = "0x1861F9C", VA = "0x1861F9C")]
		public void OnInitiate()
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0x1862268", Offset = "0x1862268", VA = "0x1862268")]
		public void TakeOver()
		{
		}

		[Token(Token = "0x6000763")]
		[Address(RVA = "0x18622C8", Offset = "0x18622C8", VA = "0x18622C8")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x6000764")]
		[Address(RVA = "0x1863374", Offset = "0x1863374", VA = "0x1863374")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000765")]
		[Address(RVA = "0x18637E0", Offset = "0x18637E0", VA = "0x18637E0")]
		public PropMuscle()
		{
		}
	}
	[Token(Token = "0x20000B8")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F1514", Offset = "0x4F1514")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F1514", Offset = "0x4F1514")]
	public class PropRoot : MonoBehaviour
	{
		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAF4C", Offset = "0x4FAF4C")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAF80", Offset = "0x4FAF80")]
		public Rigidbody connectTo;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAFB4", Offset = "0x4FAFB4")]
		public Prop currentProp;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Prop lastProp;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private bool fixedUpdateCalled;

		[Token(Token = "0x6000766")]
		[Address(RVA = "0x18638C0", Offset = "0x18638C0", VA = "0x18638C0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500E18", Offset = "0x500E18")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000767")]
		[Address(RVA = "0x1863918", Offset = "0x1863918", VA = "0x1863918")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500E4C", Offset = "0x500E4C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000768")]
		[Address(RVA = "0x1863970", Offset = "0x1863970", VA = "0x1863970")]
		public void DropImmediate()
		{
		}

		[Token(Token = "0x6000769")]
		[Address(RVA = "0x1863A80", Offset = "0x1863A80", VA = "0x1863A80")]
		private void Awake()
		{
		}

		[Token(Token = "0x600076A")]
		[Address(RVA = "0x1863B78", Offset = "0x1863B78", VA = "0x1863B78")]
		private void Update()
		{
		}

		[Token(Token = "0x600076B")]
		[Address(RVA = "0x1863CF8", Offset = "0x1863CF8", VA = "0x1863CF8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600076C")]
		[Address(RVA = "0x1863FB4", Offset = "0x1863FB4", VA = "0x1863FB4")]
		private void AttachProp(Prop prop)
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0x1865190", Offset = "0x1865190", VA = "0x1865190")]
		public PropRoot()
		{
		}
	}
	[Token(Token = "0x20000B9")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F1574", Offset = "0x4F1574")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F1574", Offset = "0x4F1574")]
	public class PropTemplate : Prop
	{
		[Token(Token = "0x600076E")]
		[Address(RVA = "0x1865198", Offset = "0x1865198", VA = "0x1865198", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x186519C", Offset = "0x186519C", VA = "0x186519C", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x18651A0", Offset = "0x18651A0", VA = "0x18651A0", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x18651A4", Offset = "0x18651A4", VA = "0x18651A4")]
		public PropTemplate()
		{
		}
	}
	[Token(Token = "0x20000BA")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F15D4", Offset = "0x4F15D4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F15D4", Offset = "0x4F15D4")]
	public class PuppetMaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000256")]
		public enum Mode
		{
			[Token(Token = "0x4000B49")]
			Active,
			[Token(Token = "0x4000B4A")]
			Kinematic,
			[Token(Token = "0x4000B4B")]
			Disabled
		}

		[Token(Token = "0x2000257")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x2000258")]
		public delegate void MuscleDelegate(Muscle muscle);

		[Serializable]
		[Token(Token = "0x2000259")]
		public enum UpdateMode
		{
			[Token(Token = "0x4000B4D")]
			Normal,
			[Token(Token = "0x4000B4E")]
			AnimatePhysics,
			[Token(Token = "0x4000B4F")]
			FixedUpdate
		}

		[Serializable]
		[Token(Token = "0x200025A")]
		public enum State
		{
			[Token(Token = "0x4000B51")]
			Alive,
			[Token(Token = "0x4000B52")]
			Dead,
			[Token(Token = "0x4000B53")]
			Frozen
		}

		[Serializable]
		[Token(Token = "0x200025B")]
		public struct StateSettings
		{
			[Token(Token = "0x4000B54")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF528", Offset = "0x4FF528")]
			public float killDuration;

			[Token(Token = "0x4000B55")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF55C", Offset = "0x4FF55C")]
			public float deadMuscleWeight;

			[Token(Token = "0x4000B56")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF590", Offset = "0x4FF590")]
			public float deadMuscleDamper;

			[Token(Token = "0x4000B57")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF5C4", Offset = "0x4FF5C4")]
			public float maxFreezeSqrVelocity;

			[Token(Token = "0x4000B58")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF5F8", Offset = "0x4FF5F8")]
			public bool freezePermanently;

			[Token(Token = "0x4000B59")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF62C", Offset = "0x4FF62C")]
			public bool enableAngularLimitsOnKill;

			[Token(Token = "0x4000B5A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FF660", Offset = "0x4FF660")]
			public bool enableInternalCollisionsOnKill;

			[Token(Token = "0x170000E9")]
			public static StateSettings Default
			{
				[Token(Token = "0x6000E1D")]
				[Address(RVA = "0x117C028", Offset = "0x117C028", VA = "0x117C028")]
				get
				{
					return default(StateSettings);
				}
			}

			[Token(Token = "0x6000E1C")]
			[Address(RVA = "0x6D0270", Offset = "0x6D0270", VA = "0x6D0270")]
			public StateSettings(float killDuration, float deadMuscleWeight = 0.01f, float deadMuscleDamper = 2f, float maxFreezeSqrVelocity = 0.02f, bool freezePermanently = false, bool enableAngularLimitsOnKill = true, bool enableInternalCollisionsOnKill = true)
			{
			}
		}

		[Token(Token = "0x200025C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8300", Offset = "0x4F8300")]
		private sealed class <DisabledToActive>d__173 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B5B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000B5C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000B5D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x170000EA")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E21")]
				[Address(RVA = "0x117B75C", Offset = "0x117B75C", VA = "0x117B75C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EB")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E23")]
				[Address(RVA = "0x117B7DC", Offset = "0x117B7DC", VA = "0x117B7DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E1E")]
			[Address(RVA = "0x117B36C", Offset = "0x117B36C", VA = "0x117B36C")]
			[DebuggerHidden]
			public <DisabledToActive>d__173(int <>1__state)
			{
			}

			[Token(Token = "0x6000E1F")]
			[Address(RVA = "0x117B38C", Offset = "0x117B38C", VA = "0x117B38C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E20")]
			[Address(RVA = "0x117B390", Offset = "0x117B390", VA = "0x117B390", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E22")]
			[Address(RVA = "0x117B764", Offset = "0x117B764", VA = "0x117B764", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8310", Offset = "0x4F8310")]
		private sealed class <KinematicToActive>d__175 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B5E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000B5F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000B60")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x170000EC")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E27")]
				[Address(RVA = "0x117BB04", Offset = "0x117BB04", VA = "0x117BB04", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000ED")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E29")]
				[Address(RVA = "0x117BB84", Offset = "0x117BB84", VA = "0x117BB84", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E24")]
			[Address(RVA = "0x117B7E4", Offset = "0x117B7E4", VA = "0x117B7E4")]
			[DebuggerHidden]
			public <KinematicToActive>d__175(int <>1__state)
			{
			}

			[Token(Token = "0x6000E25")]
			[Address(RVA = "0x117B804", Offset = "0x117B804", VA = "0x117B804", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E26")]
			[Address(RVA = "0x117B808", Offset = "0x117B808", VA = "0x117B808", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E28")]
			[Address(RVA = "0x117BB0C", Offset = "0x117BB0C", VA = "0x117BB0C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8320", Offset = "0x4F8320")]
		private sealed class <ActiveToDisabled>d__176 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B61")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000B62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000B63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x170000EE")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E2D")]
				[Address(RVA = "0x117A818", Offset = "0x117A818", VA = "0x117A818", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000EF")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E2F")]
				[Address(RVA = "0x117A898", Offset = "0x117A898", VA = "0x117A898", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E2A")]
			[Address(RVA = "0x117A620", Offset = "0x117A620", VA = "0x117A620")]
			[DebuggerHidden]
			public <ActiveToDisabled>d__176(int <>1__state)
			{
			}

			[Token(Token = "0x6000E2B")]
			[Address(RVA = "0x117A640", Offset = "0x117A640", VA = "0x117A640", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E2C")]
			[Address(RVA = "0x117A644", Offset = "0x117A644", VA = "0x117A644", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E2E")]
			[Address(RVA = "0x117A820", Offset = "0x117A820", VA = "0x117A820", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200025F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8330", Offset = "0x4F8330")]
		private sealed class <ActiveToKinematic>d__177 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B64")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000B65")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000B66")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x170000F0")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E33")]
				[Address(RVA = "0x117AAD4", Offset = "0x117AAD4", VA = "0x117AAD4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F1")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E35")]
				[Address(RVA = "0x117AB54", Offset = "0x117AB54", VA = "0x117AB54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E30")]
			[Address(RVA = "0x117A8A0", Offset = "0x117A8A0", VA = "0x117A8A0")]
			[DebuggerHidden]
			public <ActiveToKinematic>d__177(int <>1__state)
			{
			}

			[Token(Token = "0x6000E31")]
			[Address(RVA = "0x117A8C0", Offset = "0x117A8C0", VA = "0x117A8C0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E32")]
			[Address(RVA = "0x117A8C4", Offset = "0x117A8C4", VA = "0x117A8C4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E34")]
			[Address(RVA = "0x117AADC", Offset = "0x117AADC", VA = "0x117AADC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000260")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8340", Offset = "0x4F8340")]
		private sealed class <AliveToDead>d__228 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000B67")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000B68")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000B69")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x4000B6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool freeze;

			[Token(Token = "0x4000B6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private float <range>5__2;

			[Token(Token = "0x4000B6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private float <mW>5__3;

			[Token(Token = "0x170000F2")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E39")]
				[Address(RVA = "0x117B2E4", Offset = "0x117B2E4", VA = "0x117B2E4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F3")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E3B")]
				[Address(RVA = "0x117B364", Offset = "0x117B364", VA = "0x117B364", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E36")]
			[Address(RVA = "0x117AB5C", Offset = "0x117AB5C", VA = "0x117AB5C")]
			[DebuggerHidden]
			public <AliveToDead>d__228(int <>1__state)
			{
			}

			[Token(Token = "0x6000E37")]
			[Address(RVA = "0x117AB7C", Offset = "0x117AB7C", VA = "0x117AB7C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E38")]
			[Address(RVA = "0x117AB80", Offset = "0x117AB80", VA = "0x117AB80", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E3A")]
			[Address(RVA = "0x117B2EC", Offset = "0x117B2EC", VA = "0x117B2EC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FAFE8", Offset = "0x4FAFE8")]
		public PuppetMasterHumanoidConfig humanoidConfig;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform targetRoot;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FB01C", Offset = "0x4FB01C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB01C", Offset = "0x4FB01C")]
		public State state;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x4FB07C", Offset = "0x4FB07C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB07C", Offset = "0x4FB07C")]
		public StateSettings stateSettings;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB0F4", Offset = "0x4FB0F4")]
		public Mode mode;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB128", Offset = "0x4FB128")]
		public float blendTime;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB15C", Offset = "0x4FB15C")]
		public bool fixTargetTransforms;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB190", Offset = "0x4FB190")]
		public int solverIterationCount;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB1C4", Offset = "0x4FB1C4")]
		public bool visualizeTargetPose;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FB1F8", Offset = "0x4FB1F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB1F8", Offset = "0x4FB1F8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB1F8", Offset = "0x4FB1F8")]
		public float mappingWeight;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB270", Offset = "0x4FB270")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB270", Offset = "0x4FB270")]
		public float pinWeight;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB2C0", Offset = "0x4FB2C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB2C0", Offset = "0x4FB2C0")]
		public float muscleWeight;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FB310", Offset = "0x4FB310")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB310", Offset = "0x4FB310")]
		public float muscleSpring;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB370", Offset = "0x4FB370")]
		public float muscleDamper;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB3A4", Offset = "0x4FB3A4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB3A4", Offset = "0x4FB3A4")]
		public float pinPow;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB3F4", Offset = "0x4FB3F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB3F4", Offset = "0x4FB3F4")]
		public float pinDistanceFalloff;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB448", Offset = "0x4FB448")]
		public bool angularPinning;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5D")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB47C", Offset = "0x4FB47C")]
		public bool updateJointAnchors;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5E")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB4B0", Offset = "0x4FB4B0")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5F")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB4E4", Offset = "0x4FB4E4")]
		public bool angularLimits;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB518", Offset = "0x4FB518")]
		public bool internalCollisions;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FB54C", Offset = "0x4FB54C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB54C", Offset = "0x4FB54C")]
		public Muscle[] muscles;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		public PropMuscle[] propMuscles;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UpdateDelegate OnRead;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public UpdateDelegate OnWrite;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UpdateDelegate OnPostLateUpdate;

		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UpdateDelegate OnHierarchyChanged;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public MuscleDelegate OnMuscleRemoved;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public MuscleDelegate OnMuscleDisconnected;

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public MuscleDelegate OnMuscleReconnected;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Animator _targetAnimator;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FB5DC", Offset = "0x4FB5DC")]
		private Animation <targetAnimation>k__BackingField;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FB5EC", Offset = "0x4FB5EC")]
		private BehaviourBase[] <behaviours>k__BackingField;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FB5FC", Offset = "0x4FB5FC")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public List<SolverManager> solvers;

		[NonSerialized]
		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[HideInInspector]
		public bool manualInternalCollisionControl;

		[NonSerialized]
		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
		[HideInInspector]
		public bool manualAngularLimitControl;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
		[SerializeField]
		[HideInInspector]
		public bool mapDisconnectedMuscles;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA7")]
		private bool internalCollisionsEnabled;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool angularLimitsEnabled;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool fixedFrame;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int lastSolverIterationCount;

		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool isLegacy;

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		private bool animatorDisabled;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		private bool awakeFailed;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		private bool interpolated;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private bool freezeFlag;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		private bool hasBeenDisabled;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB6")]
		private bool hierarchyIsFlat;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB7")]
		private bool teleport;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 teleportPosition;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Quaternion teleportRotation;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool teleportMoveToTarget;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD5")]
		private bool rebuildFlag;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD6")]
		private bool onPostRebuildFlag;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool[] disconnectMuscleFlags;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private MuscleDisconnectMode[] muscleDisconnectModes;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool[] disconnectDeactivateFlags;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool[] reconnectMuscleFlags;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Muscle[] defaultMuscles;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private Vector3 rebuildPelvisPos;

		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Quaternion rebuildPelvisRot;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool readInFixedUpdate;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FB66C", Offset = "0x4FB66C")]
		private bool <isSwitchingMode>k__BackingField;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Mode activeMode;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Mode lastMode;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float mappingBlend;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FB67C", Offset = "0x4FB67C")]
		private bool <isKilling>k__BackingField;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		public UpdateDelegate OnFreeze;

		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public UpdateDelegate OnUnfreeze;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		public UpdateDelegate OnDeath;

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public UpdateDelegate OnResurrection;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private State activeState;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private State lastState;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool angularLimitsEnabledOnKill;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		private bool internalCollisionsEnabledOnKill;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
		private bool animationDisabledbyStates;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
		[HideInInspector]
		public bool storeTargetMappedState;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool targetMappedStateStored;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool targetMappedStateSampled;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		private bool sampleTargetMappedState;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		private bool hasProp;

		[Token(Token = "0x17000085")]
		public Animator targetAnimator
		{
			[Token(Token = "0x6000779")]
			[Address(RVA = "0x18653F4", Offset = "0x18653F4", VA = "0x18653F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x1865594", Offset = "0x1865594", VA = "0x1865594")]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public Animation targetAnimation
		{
			[Token(Token = "0x600077B")]
			[Address(RVA = "0x186559C", Offset = "0x186559C", VA = "0x186559C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500FB8", Offset = "0x500FB8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x18655A4", Offset = "0x18655A4", VA = "0x18655A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500FC8", Offset = "0x500FC8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public BehaviourBase[] behaviours
		{
			[Token(Token = "0x600077D")]
			[Address(RVA = "0x18655AC", Offset = "0x18655AC", VA = "0x18655AC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500FD8", Offset = "0x500FD8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600077E")]
			[Address(RVA = "0x18655B4", Offset = "0x18655B4", VA = "0x18655B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500FE8", Offset = "0x500FE8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public bool isActive
		{
			[Token(Token = "0x600077F")]
			[Address(RVA = "0x18655BC", Offset = "0x18655BC", VA = "0x18655BC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000089")]
		public bool initiated
		{
			[Token(Token = "0x6000780")]
			[Address(RVA = "0x1865660", Offset = "0x1865660", VA = "0x1865660")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x500FF8", Offset = "0x500FF8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000781")]
			[Address(RVA = "0x1865668", Offset = "0x1865668", VA = "0x1865668")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501008", Offset = "0x501008")]
			private set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public UpdateMode updateMode
		{
			[Token(Token = "0x6000782")]
			[Address(RVA = "0x1865670", Offset = "0x1865670", VA = "0x1865670")]
			get
			{
				return default(UpdateMode);
			}
		}

		[Token(Token = "0x1700008B")]
		public bool controlsAnimator
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x18657C0", Offset = "0x18657C0", VA = "0x18657C0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008C")]
		public bool isBlending
		{
			[Token(Token = "0x6000784")]
			[Address(RVA = "0x1865638", Offset = "0x1865638", VA = "0x1865638")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008D")]
		private bool autoSimulate
		{
			[Token(Token = "0x6000788")]
			[Address(RVA = "0x18667D4", Offset = "0x18667D4", VA = "0x18667D4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008E")]
		private AnimatorUpdateMode targetUpdateMode
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0x18656A4", Offset = "0x18656A4", VA = "0x18656A4")]
			get
			{
				return default(AnimatorUpdateMode);
			}
		}

		[Token(Token = "0x1700008F")]
		public bool isSwitchingMode
		{
			[Token(Token = "0x60007C6")]
			[Address(RVA = "0x1870418", Offset = "0x1870418", VA = "0x1870418")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5010E8", Offset = "0x5010E8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007C7")]
			[Address(RVA = "0x1870420", Offset = "0x1870420", VA = "0x1870420")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5010F8", Offset = "0x5010F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000090")]
		public bool isSwitchingState
		{
			[Token(Token = "0x60007E7")]
			[Address(RVA = "0x186581C", Offset = "0x186581C", VA = "0x186581C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000091")]
		public bool isKilling
		{
			[Token(Token = "0x60007E8")]
			[Address(RVA = "0x1874C64", Offset = "0x1874C64", VA = "0x1874C64")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5012C8", Offset = "0x5012C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007E9")]
			[Address(RVA = "0x1874C6C", Offset = "0x1874C6C", VA = "0x1874C6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5012D8", Offset = "0x5012D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public bool isAlive
		{
			[Token(Token = "0x60007EA")]
			[Address(RVA = "0x186C700", Offset = "0x186C700", VA = "0x186C700")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000093")]
		public bool isFrozen
		{
			[Token(Token = "0x60007EB")]
			[Address(RVA = "0x186ACFC", Offset = "0x186ACFC", VA = "0x186ACFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x18651A8", Offset = "0x18651A8", VA = "0x18651A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500E80", Offset = "0x500E80")]
		private void OpenUserManualSetup()
		{
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1865200", Offset = "0x1865200", VA = "0x1865200")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500EB4", Offset = "0x500EB4")]
		private void OpenUserManualComponent()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x1865258", Offset = "0x1865258", VA = "0x1865258")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500EE8", Offset = "0x500EE8")]
		private void OpenUserManualPerformance()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x18652B0", Offset = "0x18652B0", VA = "0x18652B0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500F1C", Offset = "0x500F1C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1865308", Offset = "0x1865308", VA = "0x1865308")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500F50", Offset = "0x500F50")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000777")]
		[Address(RVA = "0x1865360", Offset = "0x1865360", VA = "0x1865360")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x500F84", Offset = "0x500F84")]
		private void OpenComponentTutorial()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0x18653B8", Offset = "0x18653B8", VA = "0x18653B8")]
		private void ResetStateSettings()
		{
		}

		[Token(Token = "0x6000785")]
		[Address(RVA = "0x1865830", Offset = "0x1865830", VA = "0x1865830")]
		public void Teleport(Vector3 position, Quaternion rotation, bool moveToTarget)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0x18665F0", Offset = "0x18665F0", VA = "0x18665F0")]
		public void SetInternalCollisionsManual(bool collide, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0x186670C", Offset = "0x186670C", VA = "0x186670C")]
		public void SetAngularLimitsManual(bool limited)
		{
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x18667DC", Offset = "0x18667DC", VA = "0x18667DC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1866894", Offset = "0x1866894", VA = "0x1866894")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x18672D8", Offset = "0x18672D8", VA = "0x18672D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x1868254", Offset = "0x1868254", VA = "0x1868254")]
		public void Start()
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x1868320", Offset = "0x1868320", VA = "0x1868320")]
		public Transform FindTargetRootRecursive(Transform t)
		{
			return null;
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x186731C", Offset = "0x186731C", VA = "0x186731C")]
		private void Initiate()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x1869B6C", Offset = "0x1869B6C", VA = "0x1869B6C")]
		private void ActivateBehaviour(BehaviourBase behaviour)
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x1869CA8", Offset = "0x1869CA8", VA = "0x1869CA8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x1869DC0", Offset = "0x1869DC0", VA = "0x1869DC0")]
		private bool IsInterpolated()
		{
			return default(bool);
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x1869E54", Offset = "0x1869E54", VA = "0x1869E54")]
		private void OnRebuild()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x186A250", Offset = "0x186A250", VA = "0x186A250")]
		public void OnPreSimulate(float deltaTime)
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x186AE54", Offset = "0x186AE54", VA = "0x186AE54")]
		public void OnPostSimulate()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x186B8B8", Offset = "0x186B8B8", VA = "0x186B8B8", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x186BFA0", Offset = "0x186BFA0", VA = "0x186BFA0", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x186C09C", Offset = "0x186C09C", VA = "0x186C09C", Slot = "6")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0x186C2D8", Offset = "0x186C2D8", VA = "0x186C2D8", Slot = "7")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0x186B348", Offset = "0x186B348", VA = "0x186B348")]
		private void MoveToTarget()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0x1865888", Offset = "0x1865888", VA = "0x1865888")]
		private void Read()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0x186AAE4", Offset = "0x186AAE4", VA = "0x186AAE4")]
		private void FixTargetTransforms()
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0x186C710", Offset = "0x186C710", VA = "0x186C710")]
		private void VisualizeTargetPose()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0x186CA48", Offset = "0x186CA48", VA = "0x186CA48")]
		private void VisualizeHierarchy(Transform t, Color color)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0x1869A40", Offset = "0x1869A40", VA = "0x1869A40")]
		public void FlagInternalCollisionsForUpdate()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0x186AD10", Offset = "0x186AD10", VA = "0x186AD10")]
		private void UpdateInternalCollisions()
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0x186CDEC", Offset = "0x186CDEC", VA = "0x186CDEC")]
		public void UpdateInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0x186CCE0", Offset = "0x186CCE0", VA = "0x186CCE0")]
		private void IgnoreInternalCollisions()
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0x186CE90", Offset = "0x186CE90", VA = "0x186CE90")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0x186CBD0", Offset = "0x186CBD0", VA = "0x186CBD0")]
		private void ResetInternalCollisions()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0x186CF10", Offset = "0x186CF10", VA = "0x186CF10")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0x1869A58", Offset = "0x1869A58", VA = "0x1869A58")]
		public void FlagAngularLimitsForUpdate()
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0x186AD54", Offset = "0x186AD54", VA = "0x186AD54")]
		private void UpdateAngularLimits()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0x186CF98", Offset = "0x186CF98", VA = "0x186CF98")]
		public bool AddPropMuscle(ConfigurableJoint addPropMuscleTo, Vector3 position, Quaternion rotation, Vector3 additionalPinOffset, [Optional] Transform targetParent, [Optional] PuppetMasterProp initiateWithProp)
		{
			return default(bool);
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0x1862B2C", Offset = "0x1862B2C", VA = "0x1862B2C")]
		public bool IsDisconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0x1862B6C", Offset = "0x1862B6C", VA = "0x1862B6C")]
		public bool IsReconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0x18620CC", Offset = "0x18620CC", VA = "0x18620CC")]
		public void DisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0x1862FD0", Offset = "0x1862FD0", VA = "0x1862FD0")]
		public void ReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0x186432C", Offset = "0x186432C", VA = "0x186432C")]
		public void AddMuscle(ConfigurableJoint joint, Transform target, Rigidbody connectTo, Transform targetParent, [Optional] Muscle.Props muscleProps, bool forceTreeHierarchy = false, bool forceLayers = true)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0x186DF70", Offset = "0x186DF70", VA = "0x186DF70")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0x185445C", Offset = "0x185445C", VA = "0x185445C")]
		public void RemoveMuscleRecursive(ConfigurableJoint joint, bool attachTarget, bool blockTargetAnimation = false, MuscleRemoveMode removeMode = MuscleRemoveMode.Sever)
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0x186E408", Offset = "0x186E408", VA = "0x186E408")]
		public void ReplaceMuscle(ConfigurableJoint oldJoint, ConfigurableJoint newJoint)
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0x186E4B4", Offset = "0x186E4B4", VA = "0x186E4B4")]
		public void SetMuscles(Muscle[] newMuscles)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0x186E560", Offset = "0x186E560", VA = "0x186E560")]
		public void DisableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0x186E60C", Offset = "0x186E60C", VA = "0x186E60C")]
		public void EnableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0x186E6B8", Offset = "0x186E6B8", VA = "0x186E6B8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x501018", Offset = "0x501018")]
		public void FlattenHierarchy()
		{
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0x186E7F0", Offset = "0x186E7F0", VA = "0x186E7F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x50104C", Offset = "0x50104C")]
		public void TreeHierarchy()
		{
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0x186E9B4", Offset = "0x186E9B4", VA = "0x186E9B4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x501080", Offset = "0x501080")]
		public void FixMusclePositions()
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0x186EB3C", Offset = "0x186EB3C", VA = "0x186EB3C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x5010B4", Offset = "0x5010B4")]
		public void FixMusclePositionsAndRotations()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0x1869908", Offset = "0x1869908", VA = "0x1869908")]
		public bool HierarchyIsFlat()
		{
			return default(bool);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0x186D938", Offset = "0x186D938", VA = "0x186D938")]
		private int GetHighestDisconnectedParentIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0x186A8A0", Offset = "0x186A8A0", VA = "0x186A8A0")]
		private void ProcessDisconnects()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0x186AA10", Offset = "0x186AA10", VA = "0x186AA10")]
		private void ProcessReconnects()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0x186ED2C", Offset = "0x186ED2C", VA = "0x186ED2C")]
		private void OnDisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0x186F4C4", Offset = "0x186F4C4", VA = "0x186F4C4")]
		private void DisconnectMuscle(Muscle m, bool sever, bool deactivate)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0x186F250", Offset = "0x186F250", VA = "0x186F250")]
		private void OnReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0x186FC4C", Offset = "0x186FC4C", VA = "0x186FC4C")]
		private void ReconnectMuscle(Muscle m)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0x1870198", Offset = "0x1870198", VA = "0x1870198")]
		private void AddIndexesRecursive(int index, ref int[] indexes)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0x186E190", Offset = "0x186E190", VA = "0x186E190")]
		private void DisconnectJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0x186E2EC", Offset = "0x186E2EC", VA = "0x186E2EC")]
		private void KillJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0x18703F4", Offset = "0x18703F4", VA = "0x18703F4")]
		public void SwitchToActiveMode()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0x1870400", Offset = "0x1870400", VA = "0x1870400")]
		public void SwitchToKinematicMode()
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0x187040C", Offset = "0x187040C", VA = "0x187040C")]
		public void SwitchToDisabledMode()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0x1870428", Offset = "0x1870428", VA = "0x1870428")]
		public void DisableImmediately()
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0x18704D8", Offset = "0x18704D8", VA = "0x18704D8", Slot = "8")]
		protected virtual void SwitchModes()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0x1870660", Offset = "0x1870660", VA = "0x1870660")]
		private void DisabledToKinematic()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0x18707F8", Offset = "0x18707F8", VA = "0x18707F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x501108", Offset = "0x501108")]
		private IEnumerator DisabledToActive()
		{
			return null;
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0x1870874", Offset = "0x1870874", VA = "0x1870874")]
		private void KinematicToDisabled()
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0x187092C", Offset = "0x187092C", VA = "0x187092C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x501178", Offset = "0x501178")]
		private IEnumerator KinematicToActive()
		{
			return null;
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0x18709A8", Offset = "0x18709A8", VA = "0x18709A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5011E8", Offset = "0x5011E8")]
		private IEnumerator ActiveToDisabled()
		{
			return null;
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0x1870A24", Offset = "0x1870A24", VA = "0x1870A24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x501258", Offset = "0x501258")]
		private IEnumerator ActiveToKinematic()
		{
			return null;
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0x1870AA0", Offset = "0x1870AA0", VA = "0x1870AA0")]
		public void SetMuscleWeights(Muscle.Group group, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0x1870B9C", Offset = "0x1870B9C", VA = "0x1870B9C")]
		public void SetMuscleWeights(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0x18710B0", Offset = "0x18710B0", VA = "0x18710B0")]
		public void SetMuscleWeights(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0x1871394", Offset = "0x1871394", VA = "0x1871394")]
		public void SetMuscleWeightsRecursive(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0x18714E0", Offset = "0x18714E0", VA = "0x18714E0")]
		public void SetMuscleWeightsRecursive(int muscleIndex, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0x1871624", Offset = "0x1871624", VA = "0x1871624")]
		public void SetMuscleWeightsRecursive(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0x1870E30", Offset = "0x1870E30", VA = "0x1870E30")]
		public void SetMuscleWeights(int muscleIndex, float muscleWeight, float pinWeight, float mappingWeight, float muscleDamper)
		{
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0x187168C", Offset = "0x187168C", VA = "0x187168C")]
		public Muscle GetMuscle(Transform target)
		{
			return null;
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0x186DB10", Offset = "0x186DB10", VA = "0x186DB10")]
		public Muscle GetMuscle(Rigidbody rigidbody)
		{
			return null;
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0x18615C8", Offset = "0x18615C8", VA = "0x18615C8")]
		public Muscle GetMuscle(ConfigurableJoint joint)
		{
			return null;
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0x186A150", Offset = "0x186A150", VA = "0x186A150")]
		public bool ContainsJoint(ConfigurableJoint joint)
		{
			return default(bool);
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0x1871118", Offset = "0x1871118", VA = "0x1871118")]
		public int GetMuscleIndex(HumanBodyBones humanBodyBone)
		{
			return default(int);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0x1870C04", Offset = "0x1870C04", VA = "0x1870C04")]
		public int GetMuscleIndex(Transform target)
		{
			return default(int);
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0x18716E4", Offset = "0x18716E4", VA = "0x18716E4")]
		public int GetMuscleIndex(Rigidbody rigidbody)
		{
			return default(int);
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x186DF7C", Offset = "0x186DF7C", VA = "0x186DF7C")]
		public int GetMuscleIndex(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x1871910", Offset = "0x1871910", VA = "0x1871910")]
		public static PuppetMaster SetUp(Transform target, Transform ragdoll, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x1872AEC", Offset = "0x1872AEC", VA = "0x1872AEC")]
		public static PuppetMaster SetUp(Transform target, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x1871A2C", Offset = "0x1871A2C", VA = "0x1871A2C")]
		public void SetUpTo(Transform setUpTo, int characterControllerLayer, int ragdollLayer)
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x1872CA8", Offset = "0x1872CA8", VA = "0x1872CA8")]
		public static void RemoveRagdollComponents(Transform target, int characterControllerLayer)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x187378C", Offset = "0x187378C", VA = "0x187378C")]
		private void SetUpMuscles(Transform setUpTo)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1874680", Offset = "0x1874680", VA = "0x1874680")]
		private static Muscle.Group FindGroup(Animator animator, Transform t)
		{
			return default(Muscle.Group);
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x1873250", Offset = "0x1873250", VA = "0x1873250")]
		private void RemoveUnnecessaryBones()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x187427C", Offset = "0x187427C", VA = "0x187427C")]
		private static bool IsClothCollider(Collider collider, Cloth[] cloths)
		{
			return default(bool);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1874C74", Offset = "0x1874C74", VA = "0x1874C74")]
		public void Kill()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1874C80", Offset = "0x1874C80", VA = "0x1874C80")]
		public void Kill(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1874CA8", Offset = "0x1874CA8", VA = "0x1874CA8")]
		public void Freeze()
		{
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1874CB4", Offset = "0x1874CB4", VA = "0x1874CB4")]
		public void Freeze(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x1874CDC", Offset = "0x1874CDC", VA = "0x1874CDC")]
		public void Resurrect()
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x1874CE8", Offset = "0x1874CE8", VA = "0x1874CE8", Slot = "9")]
		protected virtual void SwitchStates()
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x1874E04", Offset = "0x1874E04", VA = "0x1874E04")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5012E8", Offset = "0x5012E8")]
		private IEnumerator AliveToDead(bool freeze)
		{
			return null;
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x186B524", Offset = "0x186B524", VA = "0x186B524")]
		private void OnFreezeFlag()
		{
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1874E98", Offset = "0x1874E98", VA = "0x1874E98")]
		private void DeadToAlive()
		{
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1866F3C", Offset = "0x1866F3C", VA = "0x1866F3C")]
		private void SetAnimationEnabled(bool to)
		{
		}

		[Token(Token = "0x60007F6")]
		[Address(RVA = "0x1874FEC", Offset = "0x1874FEC", VA = "0x1874FEC")]
		private void DeadToFrozen()
		{
		}

		[Token(Token = "0x60007F7")]
		[Address(RVA = "0x1874FF8", Offset = "0x1874FF8", VA = "0x1874FF8")]
		private void FrozenToAlive()
		{
		}

		[Token(Token = "0x60007F8")]
		[Address(RVA = "0x18752E8", Offset = "0x18752E8", VA = "0x18752E8")]
		private void FrozenToDead()
		{
		}

		[Token(Token = "0x60007F9")]
		[Address(RVA = "0x1867064", Offset = "0x1867064", VA = "0x1867064")]
		private void ActivateRagdoll(bool kinematic = false)
		{
		}

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0x18753C4", Offset = "0x18753C4", VA = "0x18753C4")]
		private bool CanFreeze()
		{
			return default(bool);
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0x1875498", Offset = "0x1875498", VA = "0x1875498")]
		public void SampleTargetMappedState()
		{
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0x1875624", Offset = "0x1875624", VA = "0x1875624")]
		public void FixTargetToSampledState(float weight)
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0x1869A70", Offset = "0x1869A70", VA = "0x1869A70")]
		public void StoreTargetMappedState()
		{
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1869590", Offset = "0x1869590", VA = "0x1869590")]
		private void UpdateHierarchies()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x18762C8", Offset = "0x18762C8", VA = "0x18762C8")]
		private bool HasProp()
		{
			return default(bool);
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x18760CC", Offset = "0x18760CC", VA = "0x18760CC")]
		private void UpdateBroadcasterMuscleIndexes()
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1875A78", Offset = "0x1875A78", VA = "0x1875A78")]
		private void AssignParentAndChildIndexes()
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1876348", Offset = "0x1876348", VA = "0x1876348")]
		private void AddToParentsRecursive(ConfigurableJoint joint, ref int[] indexes)
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1876510", Offset = "0x1876510", VA = "0x1876510")]
		private void AddToChildrenRecursive(ConfigurableJoint joint, ref int[] indexes, ref bool[] childFlags)
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1875F54", Offset = "0x1875F54", VA = "0x1875F54")]
		private void AssignKinshipDegrees()
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x18768AC", Offset = "0x18768AC", VA = "0x18768AC")]
		private void AssignKinshipsDownRecursive(ref int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1876A68", Offset = "0x1876A68", VA = "0x1876A68")]
		private void AssignKinshipsUpRecursive(ref int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0x18767B0", Offset = "0x18767B0", VA = "0x18767B0")]
		private int GetMuscleIndexLowLevel(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0x1868724", Offset = "0x1868724", VA = "0x1868724")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0x186DB68", Offset = "0x186DB68", VA = "0x186DB68")]
		private bool CheckMassVariation(float threshold, bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x186DA6C", Offset = "0x186DA6C", VA = "0x186DA6C")]
		private bool CheckIfInitiated()
		{
			return default(bool);
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1876D98", Offset = "0x1876D98", VA = "0x1876D98")]
		public PuppetMaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000BB")]
	public enum MuscleRemoveMode
	{
		[Token(Token = "0x4000628")]
		Sever,
		[Token(Token = "0x4000629")]
		Explode,
		[Token(Token = "0x400062A")]
		Numb
	}
	[Serializable]
	[Token(Token = "0x20000BC")]
	public enum MuscleDisconnectMode
	{
		[Token(Token = "0x400062C")]
		Sever,
		[Token(Token = "0x400062D")]
		Explode
	}
	[Token(Token = "0x20000BD")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x4F1634", Offset = "0x4F1634")]
	public class PuppetMasterHumanoidConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000261")]
		public class HumanoidMuscle
		{
			[Token(Token = "0x4000B6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[SerializeField]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4000B6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public HumanBodyBones bone;

			[Token(Token = "0x4000B6F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Muscle.Props props;

			[Token(Token = "0x6000E3C")]
			[Address(RVA = "0x117C764", Offset = "0x117C764", VA = "0x117C764")]
			public HumanoidMuscle()
			{
			}
		}

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FB69C", Offset = "0x4FB69C")]
		public PuppetMaster.State state;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public PuppetMaster.Mode mode;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float blendTime;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool fixTargetTransforms;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int solverIterationCount;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool visualizeTargetPose;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FB6D0", Offset = "0x4FB6D0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB6D0", Offset = "0x4FB6D0")]
		public float mappingWeight;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB720", Offset = "0x4FB720")]
		public float pinWeight;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB738", Offset = "0x4FB738")]
		public float muscleWeight;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FB750", Offset = "0x4FB750")]
		public float muscleSpring;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float muscleDamper;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB784", Offset = "0x4FB784")]
		public float pinPow;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB79C", Offset = "0x4FB79C")]
		public float pinDistanceFalloff;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool angularPinning;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool updateJointAnchors;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool angularLimits;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool internalCollisions;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FB7B8", Offset = "0x4FB7B8")]
		public HumanoidMuscle[] muscles;

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x117C0BC", Offset = "0x117C0BC", VA = "0x117C0BC")]
		public void ApplyTo(PuppetMaster p)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0x117C514", Offset = "0x117C514", VA = "0x117C514")]
		private Muscle GetMuscle(HumanBodyBones boneId, Animator animator, PuppetMaster puppetMaster)
		{
			return null;
		}

		[Token(Token = "0x600080E")]
		[Address(RVA = "0x117C670", Offset = "0x117C670", VA = "0x117C670")]
		public PuppetMasterHumanoidConfig()
		{
		}
	}
	[Token(Token = "0x20000BE")]
	public class PuppetMasterProp : MonoBehaviour
	{
		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB7EC", Offset = "0x4FB7EC")]
		public Transform meshRoot;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB820", Offset = "0x4FB820")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB854", Offset = "0x4FB854")]
		public bool forceLayers;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB888", Offset = "0x4FB888")]
		public float mass;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB8BC", Offset = "0x4FB8BC")]
		public int propType;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FB8F0", Offset = "0x4FB8F0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB8F0", Offset = "0x4FB8F0")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FB950", Offset = "0x4FB950")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB950", Offset = "0x4FB950")]
		public Vector3 additionalPinOffsetAdd;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FB9B0", Offset = "0x4FB9B0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FB9B0", Offset = "0x4FB9B0")]
		public float additionalPinWeight;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBA00", Offset = "0x4FBA00")]
		public float additionalPinMass;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FBA34", Offset = "0x4FBA34")]
		private bool <isPickedUp>k__BackingField;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FBA44", Offset = "0x4FBA44")]
		private Muscle <propMuscle>k__BackingField;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int defaultLayer;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Transform defaultParent;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider[] colliders;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private PhysicMaterial[] droppedMaterials;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Rigidbody r;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _mass;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float _drag;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float _angularDrag;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _useGravity;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isKinematic;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private RigidbodyInterpolation _interpolation;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private CollisionDetectionMode _collisionDetectionMode;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private RigidbodyConstraints _constraints;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] emptyColliders;

		[Token(Token = "0x17000094")]
		public bool isPickedUp
		{
			[Token(Token = "0x600080F")]
			[Address(RVA = "0x117C76C", Offset = "0x117C76C", VA = "0x117C76C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501358", Offset = "0x501358")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000810")]
			[Address(RVA = "0x117C774", Offset = "0x117C774", VA = "0x117C774")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501368", Offset = "0x501368")]
			private set
			{
			}
		}

		[Token(Token = "0x17000095")]
		protected Muscle propMuscle
		{
			[Token(Token = "0x6000814")]
			[Address(RVA = "0x117C840", Offset = "0x117C840", VA = "0x117C840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501378", Offset = "0x501378")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000815")]
			[Address(RVA = "0x117C848", Offset = "0x117C848", VA = "0x117C848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501388", Offset = "0x501388")]
			private set
			{
			}
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x117C77C", Offset = "0x117C77C", VA = "0x117C77C")]
		public Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x117C838", Offset = "0x117C838", VA = "0x117C838", Slot = "4")]
		protected virtual void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x117C83C", Offset = "0x117C83C", VA = "0x117C83C", Slot = "5")]
		protected virtual void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x117C850", Offset = "0x117C850", VA = "0x117C850")]
		public void PickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000817")]
		[Address(RVA = "0x117D048", Offset = "0x117D048", VA = "0x117D048")]
		public void Drop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000818")]
		[Address(RVA = "0x117D94C", Offset = "0x117D94C", VA = "0x117D94C", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000819")]
		[Address(RVA = "0x117DAEC", Offset = "0x117DAEC", VA = "0x117DAEC", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x117DD58", Offset = "0x117DD58", VA = "0x117DD58", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x117CE88", Offset = "0x117CE88", VA = "0x117CE88")]
		private void RemoveRigidbody()
		{
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x117D748", Offset = "0x117D748", VA = "0x117D748")]
		private void ReattachRigidbody()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x117DE8C", Offset = "0x117DE8C", VA = "0x117DE8C")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x117E068", Offset = "0x117E068", VA = "0x117E068")]
		public PuppetMasterProp()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F1688", Offset = "0x4F1688")]
	public class PuppetMasterSettings : Singleton<PuppetMasterSettings>
	{
		[Serializable]
		[Token(Token = "0x2000262")]
		public class PuppetUpdateLimit
		{
			[Token(Token = "0x4000B70")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FF6C4", Offset = "0x4FF6C4")]
			public int puppetsPerFrame;

			[Token(Token = "0x4000B71")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private int index;

			[Token(Token = "0x6000E3D")]
			[Address(RVA = "0x117E854", Offset = "0x117E854", VA = "0x117E854")]
			public PuppetUpdateLimit()
			{
			}

			[Token(Token = "0x6000E3E")]
			[Address(RVA = "0x117E690", Offset = "0x117E690", VA = "0x117E690")]
			public void Step(int puppetCount)
			{
			}

			[Token(Token = "0x6000E3F")]
			[Address(RVA = "0x117E2A4", Offset = "0x117E2A4", VA = "0x117E2A4")]
			public bool Update(List<PuppetMaster> puppets, PuppetMaster puppetMaster)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FBA54", Offset = "0x4FBA54")]
		public PuppetUpdateLimit kinematicCollidersUpdateLimit;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PuppetUpdateLimit freeUpdateLimit;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PuppetUpdateLimit fixedUpdateLimit;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool collisionStayMessages;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool collisionExitMessages;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float activePuppetCollisionThresholdMlp;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FBA88", Offset = "0x4FBA88")]
		private int <currentlyActivePuppets>k__BackingField;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FBA98", Offset = "0x4FBA98")]
		private int <currentlyKinematicPuppets>k__BackingField;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FBAA8", Offset = "0x4FBAA8")]
		private int <currentlyDisabledPuppets>k__BackingField;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private List<PuppetMaster> _puppets;

		[Token(Token = "0x17000096")]
		public int currentlyActivePuppets
		{
			[Token(Token = "0x600081F")]
			[Address(RVA = "0x117E118", Offset = "0x117E118", VA = "0x117E118")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501398", Offset = "0x501398")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000820")]
			[Address(RVA = "0x117E120", Offset = "0x117E120", VA = "0x117E120")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5013A8", Offset = "0x5013A8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public int currentlyKinematicPuppets
		{
			[Token(Token = "0x6000821")]
			[Address(RVA = "0x117E128", Offset = "0x117E128", VA = "0x117E128")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5013B8", Offset = "0x5013B8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000822")]
			[Address(RVA = "0x117E130", Offset = "0x117E130", VA = "0x117E130")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5013C8", Offset = "0x5013C8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public int currentlyDisabledPuppets
		{
			[Token(Token = "0x6000823")]
			[Address(RVA = "0x117E138", Offset = "0x117E138", VA = "0x117E138")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5013D8", Offset = "0x5013D8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000824")]
			[Address(RVA = "0x117E140", Offset = "0x117E140", VA = "0x117E140")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5013E8", Offset = "0x5013E8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public List<PuppetMaster> puppets
		{
			[Token(Token = "0x6000825")]
			[Address(RVA = "0x117E148", Offset = "0x117E148", VA = "0x117E148")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x117E150", Offset = "0x117E150", VA = "0x117E150")]
		public void Register(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x117E1FC", Offset = "0x117E1FC", VA = "0x117E1FC")]
		public void Unregister(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x117E270", Offset = "0x117E270", VA = "0x117E270")]
		public bool UpdateMoveToTarget(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x6000829")]
		[Address(RVA = "0x117E3C4", Offset = "0x117E3C4", VA = "0x117E3C4")]
		public bool UpdateFree(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x117E3F8", Offset = "0x117E3F8", VA = "0x117E3F8")]
		public bool UpdateFixed(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x117E42C", Offset = "0x117E42C", VA = "0x117E42C")]
		private void Update()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x117E6AC", Offset = "0x117E6AC", VA = "0x117E6AC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x117E72C", Offset = "0x117E72C", VA = "0x117E72C")]
		public PuppetMasterSettings()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public static class PuppetMasterTools
	{
		[Token(Token = "0x600082E")]
		[Address(RVA = "0x117E874", Offset = "0x117E874", VA = "0x117E874")]
		public static void PositionRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x117F230", Offset = "0x117F230", VA = "0x117F230")]
		public static void RealignRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x1180124", Offset = "0x1180124", VA = "0x1180124")]
		private static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x1180210", Offset = "0x1180210", VA = "0x1180210")]
		private static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x20000C1")]
	public class Weight
	{
		[Serializable]
		[Token(Token = "0x2000263")]
		public enum Mode
		{
			[Token(Token = "0x4000B73")]
			Float,
			[Token(Token = "0x4000B74")]
			Curve
		}

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Mode mode;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float floatValue;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public string tooltip;

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x11854C8", Offset = "0x11854C8", VA = "0x11854C8")]
		public Weight(float floatValue)
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x118553C", Offset = "0x118553C", VA = "0x118553C")]
		public Weight(float floatValue, string tooltip)
		{
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0x11855B8", Offset = "0x11855B8", VA = "0x11855B8")]
		public float GetValue(float param)
		{
			return default(float);
		}
	}
	[Token(Token = "0x20000C2")]
	public class InitialVelocity : MonoBehaviour
	{
		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 initialVelocity;

		[Token(Token = "0x6000835")]
		[Address(RVA = "0x1854324", Offset = "0x1854324", VA = "0x1854324")]
		private void Start()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0x18543C0", Offset = "0x18543C0", VA = "0x18543C0")]
		public InitialVelocity()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F16BC", Offset = "0x4F16BC")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F16BC", Offset = "0x4F16BC")]
	public class BipedRagdollCreator : RagdollCreator
	{
		[Serializable]
		[Token(Token = "0x2000264")]
		public struct Options
		{
			[Token(Token = "0x4000B75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float weight;

			[Token(Token = "0x4000B76")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FF6E0", Offset = "0x4FF6E0")]
			public bool spine;

			[Token(Token = "0x4000B77")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool chest;

			[Token(Token = "0x4000B78")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool hands;

			[Token(Token = "0x4000B79")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public bool feet;

			[Token(Token = "0x4000B7A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FF714", Offset = "0x4FF714")]
			public JointType joints;

			[Token(Token = "0x4000B7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float jointRange;

			[Token(Token = "0x4000B7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FF748", Offset = "0x4FF748")]
			public float colliderLengthOverlap;

			[Token(Token = "0x4000B7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ColliderType torsoColliders;

			[Token(Token = "0x4000B7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColliderType headCollider;

			[Token(Token = "0x4000B7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColliderType armColliders;

			[Token(Token = "0x4000B80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColliderType handColliders;

			[Token(Token = "0x4000B81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ColliderType legColliders;

			[Token(Token = "0x4000B82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColliderType footColliders;

			[Token(Token = "0x170000F4")]
			public static Options Default
			{
				[Token(Token = "0x6000E40")]
				[Address(RVA = "0x1852048", Offset = "0x1852048", VA = "0x1852048")]
				get
				{
					return default(Options);
				}
			}
		}

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool canBuild;

		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BipedRagdollReferences references;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Options options;

		[Token(Token = "0x6000837")]
		[Address(RVA = "0x163D96C", Offset = "0x163D96C", VA = "0x163D96C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x5013F8", Offset = "0x5013F8")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0x163D9C4", Offset = "0x163D9C4", VA = "0x163D9C4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x50142C", Offset = "0x50142C")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0x163DA1C", Offset = "0x163DA1C", VA = "0x163DA1C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x501460", Offset = "0x501460")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0x162B458", Offset = "0x162B458", VA = "0x162B458")]
		public static Options AutodetectOptions(BipedRagdollReferences r)
		{
			return default(Options);
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0x162B768", Offset = "0x162B768", VA = "0x162B768")]
		public static void Create(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0x163DB68", Offset = "0x163DB68", VA = "0x163DB68")]
		private static void CreateColliders(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0x16400E4", Offset = "0x16400E4", VA = "0x16400E4")]
		private static void CreateHandCollider(Transform hand, Transform lowerArm, Transform root, Options options)
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0x16404AC", Offset = "0x16404AC", VA = "0x16404AC")]
		private static void CreateFootCollider(Transform foot, Transform lowerLeg, Transform upperLeg, Transform root, Options options)
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0x1640D30", Offset = "0x1640D30", VA = "0x1640D30")]
		private static Vector3 GetChildCentroid(Transform t, Vector3 fallback)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x163ECD4", Offset = "0x163ECD4", VA = "0x163ECD4")]
		private static void MassDistribution(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x163F3A0", Offset = "0x163F3A0", VA = "0x163F3A0")]
		private static void CreateJoints(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x1640F60", Offset = "0x1640F60", VA = "0x1640F60")]
		private static void CreateLimbJoints(Transform connectedBone, Transform bone1, Transform bone2, Transform bone3, Transform root, Vector3 defaultWorldDirection, JointType jointType, CreateJointParams.Limits limits1, CreateJointParams.Limits limits2, CreateJointParams.Limits limits3)
		{
		}

		[Token(Token = "0x6000843")]
		[Address(RVA = "0x16419A0", Offset = "0x16419A0", VA = "0x16419A0")]
		public static void ClearBipedRagdoll(BipedRagdollReferences r)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x1641A18", Offset = "0x1641A18", VA = "0x1641A18")]
		public static bool IsClear(BipedRagdollReferences r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x163FF7C", Offset = "0x163FF7C", VA = "0x163FF7C")]
		private static Vector3 GetUpperArmToHeadCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x163DA74", Offset = "0x163DA74", VA = "0x163DA74")]
		private static Vector3 GetUpperArmCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x1641B40", Offset = "0x1641B40", VA = "0x1641B40")]
		public BipedRagdollCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000C4")]
	public struct BipedRagdollReferences
	{
		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform root;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Transform hips;

		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform spine;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform chest;

		[Token(Token = "0x4000671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform head;

		[Token(Token = "0x4000672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform leftUpperLeg;

		[Token(Token = "0x4000673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftLowerLeg;

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Transform leftFoot;

		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rightUpperLeg;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Transform rightLowerLeg;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightFoot;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Transform leftUpperArm;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftLowerArm;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Transform leftHand;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightUpperArm;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Transform rightLowerArm;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightHand;

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x6DE250", Offset = "0x6DE250", VA = "0x6DE250")]
		public bool IsValid(ref string msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x6DE258", Offset = "0x6DE258", VA = "0x6DE258")]
		private bool IsChildRecursive(Transform t, Transform parent)
		{
			return default(bool);
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x6DE260", Offset = "0x6DE260", VA = "0x6DE260")]
		public bool IsEmpty(bool considerRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x6DE268", Offset = "0x6DE268", VA = "0x6DE268")]
		public bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x6DE270", Offset = "0x6DE270", VA = "0x6DE270")]
		public Transform[] GetRagdollTransforms()
		{
			return null;
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1853B34", Offset = "0x1853B34", VA = "0x1853B34")]
		public static BipedRagdollReferences FromAvatar(Animator animator)
		{
			return default(BipedRagdollReferences);
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x1853EC4", Offset = "0x1853EC4", VA = "0x1853EC4")]
		public static BipedRagdollReferences FromBipedReferences(BipedReferences biped)
		{
			return default(BipedRagdollReferences);
		}
	}
	[Token(Token = "0x20000C5")]
	public static class JointConverter
	{
		[Token(Token = "0x600084F")]
		[Address(RVA = "0x1855D14", Offset = "0x1855D14", VA = "0x1855D14")]
		public static void ToConfigurable(GameObject root)
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x18564B0", Offset = "0x18564B0", VA = "0x18564B0")]
		public static void HingeToConfigurable(HingeJoint src)
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x185694C", Offset = "0x185694C", VA = "0x185694C")]
		public static void FixedToConfigurable(FixedJoint src)
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x1856B5C", Offset = "0x1856B5C", VA = "0x1856B5C")]
		public static void SpringToConfigurable(SpringJoint src)
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x1855FF0", Offset = "0x1855FF0", VA = "0x1855FF0")]
		public static void CharacterToConfigurable(CharacterJoint src)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1856E38", Offset = "0x1856E38", VA = "0x1856E38")]
		private static void ConvertJoint(ref ConfigurableJoint conf, Joint src)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x1857048", Offset = "0x1857048", VA = "0x1857048")]
		private static SoftJointLimit ConvertToHighSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x1857164", Offset = "0x1857164", VA = "0x1857164")]
		private static SoftJointLimit ConvertToLowSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0x18570E8", Offset = "0x18570E8", VA = "0x18570E8")]
		private static SoftJointLimitSpring ConvertToSoftJointLimitSpring(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimitSpring);
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x1857204", Offset = "0x1857204", VA = "0x1857204")]
		private static SoftJointLimit CopyLimit(SoftJointLimit src)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1857284", Offset = "0x1857284", VA = "0x1857284")]
		private static SoftJointLimitSpring CopyLimitSpring(SoftJointLimitSpring src)
		{
			return default(SoftJointLimitSpring);
		}
	}
	[Token(Token = "0x20000C6")]
	public abstract class RagdollCreator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000265")]
		public enum ColliderType
		{
			[Token(Token = "0x4000B84")]
			Box,
			[Token(Token = "0x4000B85")]
			Capsule
		}

		[Serializable]
		[Token(Token = "0x2000266")]
		public enum JointType
		{
			[Token(Token = "0x4000B87")]
			Configurable,
			[Token(Token = "0x4000B88")]
			Character
		}

		[Serializable]
		[Token(Token = "0x2000267")]
		public enum Direction
		{
			[Token(Token = "0x4000B8A")]
			X,
			[Token(Token = "0x4000B8B")]
			Y,
			[Token(Token = "0x4000B8C")]
			Z
		}

		[Token(Token = "0x2000268")]
		public struct CreateJointParams
		{
			[Token(Token = "0x2000288")]
			public struct Limits
			{
				[Token(Token = "0x4000BFF")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float minSwing;

				[Token(Token = "0x4000C00")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public float maxSwing;

				[Token(Token = "0x4000C01")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public float swing2;

				[Token(Token = "0x4000C02")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public float twist;

				[Token(Token = "0x6000EA6")]
				[Address(RVA = "0x6D0348", Offset = "0x6D0348", VA = "0x6D0348")]
				public Limits(float minSwing, float maxSwing, float swing2, float twist)
				{
				}
			}

			[Token(Token = "0x4000B8D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody rigidbody;

			[Token(Token = "0x4000B8E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Rigidbody connectedBody;

			[Token(Token = "0x4000B8F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Transform child;

			[Token(Token = "0x4000B90")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 worldSwingAxis;

			[Token(Token = "0x4000B91")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Limits limits;

			[Token(Token = "0x4000B92")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public JointType type;

			[Token(Token = "0x6000E41")]
			[Address(RVA = "0x6D02FC", Offset = "0x6D02FC", VA = "0x6D02FC")]
			public CreateJointParams(Rigidbody rigidbody, Rigidbody connectedBody, Transform child, Vector3 worldSwingAxis, Limits limits, JointType type)
			{
			}
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x11803A8", Offset = "0x11803A8", VA = "0x11803A8")]
		public static void ClearAll(Transform root)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1180620", Offset = "0x1180620", VA = "0x1180620")]
		protected static void ClearTransform(Transform transform)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x11808B0", Offset = "0x11808B0", VA = "0x11808B0")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x11810A0", Offset = "0x11810A0", VA = "0x11810A0")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width, float proportionAspect, Vector3 widthDirection)
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1180EB4", Offset = "0x1180EB4", VA = "0x1180EB4")]
		protected static float GetScaleF(Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x11815A8", Offset = "0x11815A8", VA = "0x11815A8")]
		protected static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x11815DC", Offset = "0x11815DC", VA = "0x11815DC")]
		protected static void Vector3Abs(ref Vector3 v)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x1181678", Offset = "0x1181678", VA = "0x1181678")]
		protected static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1181764", Offset = "0x1181764", VA = "0x1181764")]
		protected static Vector3 DirectionToVector3(Direction dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1180F08", Offset = "0x1180F08", VA = "0x1180F08")]
		protected static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1181850", Offset = "0x1181850", VA = "0x1181850")]
		protected static Vector3 GetLocalOrthoDirection(Transform transform, Vector3 worldDir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1181C34", Offset = "0x1181C34", VA = "0x1181C34")]
		protected static Rigidbody GetConnectedBody(Transform bone, ref Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x1181E48", Offset = "0x1181E48", VA = "0x1181E48")]
		protected static void CreateJoint(CreateJointParams p)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1182890", Offset = "0x1182890", VA = "0x1182890")]
		private static SoftJointLimit ToSoftJointLimit(float limit)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x11828D4", Offset = "0x11828D4", VA = "0x11828D4")]
		protected RagdollCreator()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x4F171C", Offset = "0x4F171C")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F171C", Offset = "0x4F171C")]
	public class RagdollEditor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000269")]
		public enum Mode
		{
			[Token(Token = "0x4000B94")]
			Colliders,
			[Token(Token = "0x4000B95")]
			Joints
		}

		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public Rigidbody selectedRigidbody;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public Collider selectedCollider;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public bool symmetry;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Mode mode;

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x1182930", Offset = "0x1182930", VA = "0x1182930")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x501494", Offset = "0x501494")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x1182988", Offset = "0x1182988", VA = "0x1182988")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x5014C8", Offset = "0x5014C8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x11829E0", Offset = "0x11829E0", VA = "0x11829E0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x5014FC", Offset = "0x5014FC")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x1182A38", Offset = "0x1182A38", VA = "0x1182A38")]
		public RagdollEditor()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x20000C8")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200026A")]
		public class Offset
		{
			[Token(Token = "0x4000B96")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x4000B97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public HumanBodyBones bone;

			[Token(Token = "0x4000B98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 rotationOffset;

			[Token(Token = "0x4000B99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			private Transform t;

			[Token(Token = "0x6000E42")]
			[Address(RVA = "0x162D1F8", Offset = "0x162D1F8", VA = "0x162D1F8")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x6000E43")]
			[Address(RVA = "0x162D4D8", Offset = "0x162D4D8", VA = "0x162D4D8")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Offset[] offsets;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator animator;

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x162D128", Offset = "0x162D128", VA = "0x162D128")]
		private void Start()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x162D188", Offset = "0x162D188", VA = "0x162D188")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x162D3C8", Offset = "0x162D3C8", VA = "0x162D3C8")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x162D4D0", Offset = "0x162D4D0", VA = "0x162D4D0")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F177C", Offset = "0x4F177C")]
	public class AnimatorIKDemo : MonoBehaviour
	{
		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform leftHandIKTarget;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Animator animator;

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1623CA8", Offset = "0x1623CA8", VA = "0x1623CA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1623D08", Offset = "0x1623D08", VA = "0x1623D08")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x1623D94", Offset = "0x1623D94", VA = "0x1623D94")]
		public AnimatorIKDemo()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public class BallShooter : MonoBehaviour
	{
		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public KeyCode keyCode;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject ball;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 force;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float mass;

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x1623DE0", Offset = "0x1623DE0", VA = "0x1623DE0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x1624184", Offset = "0x1624184", VA = "0x1624184")]
		public BallShooter()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public class BoardController : MonoBehaviour
	{
		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int groundLayer;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform rotationTarget;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float torque;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float skidDrag;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float turnSensitivity;

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody r;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool isGrounded;

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x1624228", Offset = "0x1624228", VA = "0x1624228")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x1624288", Offset = "0x1624288", VA = "0x1624288")]
		private void Update()
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x16244C4", Offset = "0x16244C4", VA = "0x16244C4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1624878", Offset = "0x1624878", VA = "0x1624878")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x16248EC", Offset = "0x16248EC", VA = "0x16248EC")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1624960", Offset = "0x1624960", VA = "0x1624960")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x16249D4", Offset = "0x16249D4", VA = "0x16249D4")]
		public BoardController()
		{
		}
	}
	[Token(Token = "0x20000CC")]
	public class CharacterAnimationMeleeDemo : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x1700009A")]
		private CharacterMeleeDemo melee
		{
			[Token(Token = "0x600087D")]
			[Address(RVA = "0x162514C", Offset = "0x162514C", VA = "0x162514C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x16251DC", Offset = "0x16251DC", VA = "0x16251DC", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x16259D0", Offset = "0x16259D0", VA = "0x16259D0")]
		public CharacterAnimationMeleeDemo()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	public class CharacterMeleeDemo : CharacterPuppet
	{
		[Serializable]
		[Token(Token = "0x200026B")]
		public class Action
		{
			[Serializable]
			[Token(Token = "0x2000289")]
			public class Anim
			{
				[Token(Token = "0x4000C03")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public string stateName;

				[Token(Token = "0x4000C04")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public int layer;

				[Token(Token = "0x4000C05")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public float transitionDuration;

				[Token(Token = "0x4000C06")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
				public float fixedTime;

				[Token(Token = "0x6000EA7")]
				[Address(RVA = "0x1627838", Offset = "0x1627838", VA = "0x1627838")]
				public Anim()
				{
				}
			}

			[Token(Token = "0x4000B9A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public string name;

			[Token(Token = "0x4000B9B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int inputActionIndex;

			[Token(Token = "0x4000B9C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float duration;

			[Token(Token = "0x4000B9D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float minFrequency;

			[Token(Token = "0x4000B9E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Anim anim;

			[Token(Token = "0x4000B9F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int[] requiredPropTypes;

			[Token(Token = "0x4000BA0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Booster[] boosters;

			[Token(Token = "0x6000E44")]
			[Address(RVA = "0x1627828", Offset = "0x1627828", VA = "0x1627828")]
			public Action()
			{
			}
		}

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FBAF8", Offset = "0x4FBAF8")]
		public Action[] actions;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		[HideInInspector]
		public int currentActionIndex;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		[HideInInspector]
		public float lastActionTime;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private float lastActionMoveMag;

		[Token(Token = "0x1700009B")]
		public Action currentAction
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0x162597C", Offset = "0x162597C", VA = "0x162597C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1627020", Offset = "0x1627020", VA = "0x1627020", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0x16270D4", Offset = "0x16270D4", VA = "0x16270D4", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x16274B0", Offset = "0x16274B0", VA = "0x16274B0")]
		private bool StartAction(Action action)
		{
			return default(bool);
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1627818", Offset = "0x1627818", VA = "0x1627818")]
		public CharacterMeleeDemo()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public class CharacterPuppet : CharacterThirdPerson
	{
		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FBB4C", Offset = "0x4FBB4C")]
		public PropMuscle propMuscle;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FBB80", Offset = "0x4FBB80")]
		private BehaviourPuppet <puppet>k__BackingField;

		[Token(Token = "0x1700009C")]
		public BehaviourPuppet puppet
		{
			[Token(Token = "0x6000885")]
			[Address(RVA = "0x1627840", Offset = "0x1627840", VA = "0x1627840")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501530", Offset = "0x501530")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000886")]
			[Address(RVA = "0x1627848", Offset = "0x1627848", VA = "0x1627848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501540", Offset = "0x501540")]
			private set
			{
			}
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1627034", Offset = "0x1627034", VA = "0x1627034", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x16279F4", Offset = "0x16279F4", VA = "0x16279F4", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1627C40", Offset = "0x1627C40", VA = "0x1627C40", Slot = "9")]
		protected override void Rotate()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1628458", Offset = "0x1628458", VA = "0x1628458", Slot = "10")]
		protected override bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1627824", Offset = "0x1627824", VA = "0x1627824")]
		public CharacterPuppet()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public class CreatePuppetInRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBB90", Offset = "0x4FBB90")]
		public Transform ragdollPrefab;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBBC4", Offset = "0x4FBBC4")]
		public string instanceName;

		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBBF8", Offset = "0x4FBBF8")]
		public int characterControllerLayer;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBC2C", Offset = "0x4FBC2C")]
		public int ragdollLayer;

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x162AFF0", Offset = "0x162AFF0", VA = "0x162AFF0")]
		private void Start()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x162B180", Offset = "0x162B180", VA = "0x162B180")]
		public CreatePuppetInRuntime()
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public class CreateRagdollInRuntime : MonoBehaviour
	{
		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBC60", Offset = "0x4FBC60")]
		public GameObject prefab;

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x162B1E4", Offset = "0x162B1E4", VA = "0x162B1E4")]
		private void Start()
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x162BAA0", Offset = "0x162BAA0", VA = "0x162BAA0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x162BAA4", Offset = "0x162BAA4", VA = "0x162BAA4")]
		public CreateRagdollInRuntime()
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class DeathBaker : MonoBehaviour
	{
		[Token(Token = "0x200026C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8350", Offset = "0x4F8350")]
		private sealed class <Bake>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BA1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BA2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BA3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DeathBaker <>4__this;

			[Token(Token = "0x170000F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E48")]
				[Address(RVA = "0x162C220", Offset = "0x162C220", VA = "0x162C220", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E4A")]
				[Address(RVA = "0x162C2A0", Offset = "0x162C2A0", VA = "0x162C2A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E45")]
			[Address(RVA = "0x162BFF0", Offset = "0x162BFF0", VA = "0x162BFF0")]
			[DebuggerHidden]
			public <Bake>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6000E46")]
			[Address(RVA = "0x162C11C", Offset = "0x162C11C", VA = "0x162C11C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E47")]
			[Address(RVA = "0x162C120", Offset = "0x162C120", VA = "0x162C120", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E49")]
			[Address(RVA = "0x162C228", Offset = "0x162C228", VA = "0x162C228", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8360", Offset = "0x4F8360")]
		private sealed class <FadeOutPinWeight>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BA4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BA5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DeathBaker <>4__this;

			[Token(Token = "0x170000F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E4E")]
				[Address(RVA = "0x162C56C", Offset = "0x162C56C", VA = "0x162C56C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E50")]
				[Address(RVA = "0x162C5EC", Offset = "0x162C5EC", VA = "0x162C5EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E4B")]
			[Address(RVA = "0x162C010", Offset = "0x162C010", VA = "0x162C010")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6000E4C")]
			[Address(RVA = "0x162C450", Offset = "0x162C450", VA = "0x162C450", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E4D")]
			[Address(RVA = "0x162C454", Offset = "0x162C454", VA = "0x162C454", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E4F")]
			[Address(RVA = "0x162C574", Offset = "0x162C574", VA = "0x162C574", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200026E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8370", Offset = "0x4F8370")]
		private sealed class <FadeOutMuscleWeight>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public DeathBaker <>4__this;

			[Token(Token = "0x170000F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E54")]
				[Address(RVA = "0x162C3C8", Offset = "0x162C3C8", VA = "0x162C3C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E56")]
				[Address(RVA = "0x162C448", Offset = "0x162C448", VA = "0x162C448", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E51")]
			[Address(RVA = "0x162C030", Offset = "0x162C030", VA = "0x162C030")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6000E52")]
			[Address(RVA = "0x162C2A8", Offset = "0x162C2A8", VA = "0x162C2A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E53")]
			[Address(RVA = "0x162C2AC", Offset = "0x162C2AC", VA = "0x162C2AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E55")]
			[Address(RVA = "0x162C3D0", Offset = "0x162C3D0", VA = "0x162C3D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBC94", Offset = "0x4FBC94")]
		public HumanoidBaker baker;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBCC8", Offset = "0x4FBCC8")]
		public float bakeTime;

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBCFC", Offset = "0x4FBCFC")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBD30", Offset = "0x4FBD30")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBD64", Offset = "0x4FBD64")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBD98", Offset = "0x4FBD98")]
		public float deadMuscleWeight;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Animator animator;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool isDead;

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x162BAAC", Offset = "0x162BAAC", VA = "0x162BAAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x162BB90", Offset = "0x162BB90", VA = "0x162BB90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x162BF70", Offset = "0x162BF70", VA = "0x162BF70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x501550", Offset = "0x501550")]
		private IEnumerator Bake()
		{
			return null;
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x162BE70", Offset = "0x162BE70", VA = "0x162BE70")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5015C0", Offset = "0x5015C0")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x162BEF0", Offset = "0x162BEF0", VA = "0x162BEF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x501630", Offset = "0x501630")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x162C050", Offset = "0x162C050", VA = "0x162C050")]
		public DeathBaker()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	public class Destructor : MonoBehaviour
	{
		[Token(Token = "0x200026F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8380", Offset = "0x4F8380")]
		private sealed class <Destruct>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BAB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Destructor <>4__this;

			[Token(Token = "0x170000FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E5A")]
				[Address(RVA = "0x162C7E0", Offset = "0x162C7E0", VA = "0x162C7E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E5C")]
				[Address(RVA = "0x162C860", Offset = "0x162C860", VA = "0x162C860", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E57")]
			[Address(RVA = "0x162C698", Offset = "0x162C698", VA = "0x162C698")]
			[DebuggerHidden]
			public <Destruct>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6000E58")]
			[Address(RVA = "0x162C6CC", Offset = "0x162C6CC", VA = "0x162C6CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E59")]
			[Address(RVA = "0x162C6D0", Offset = "0x162C6D0", VA = "0x162C6D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E5B")]
			[Address(RVA = "0x162C7E8", Offset = "0x162C7E8", VA = "0x162C7E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float delay;

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x162C5F4", Offset = "0x162C5F4", VA = "0x162C5F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x162C618", Offset = "0x162C618", VA = "0x162C618")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5016A0", Offset = "0x5016A0")]
		private IEnumerator Destruct()
		{
			return null;
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x162C6B8", Offset = "0x162C6B8", VA = "0x162C6B8")]
		public Destructor()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class Dying : MonoBehaviour
	{
		[Token(Token = "0x2000270")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8390", Offset = "0x4F8390")]
		private sealed class <FadeOutPinWeight>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dying <>4__this;

			[Token(Token = "0x170000FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E60")]
				[Address(RVA = "0x162D0A0", Offset = "0x162D0A0", VA = "0x162D0A0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170000FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E62")]
				[Address(RVA = "0x162D120", Offset = "0x162D120", VA = "0x162D120", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E5D")]
			[Address(RVA = "0x162CCDC", Offset = "0x162CCDC", VA = "0x162CCDC")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000E5E")]
			[Address(RVA = "0x162CF84", Offset = "0x162CF84", VA = "0x162CF84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E5F")]
			[Address(RVA = "0x162CF88", Offset = "0x162CF88", VA = "0x162CF88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E61")]
			[Address(RVA = "0x162D0A8", Offset = "0x162D0A8", VA = "0x162D0A8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000271")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F83A0", Offset = "0x4F83A0")]
		private sealed class <FadeOutMuscleWeight>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BB0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Dying <>4__this;

			[Token(Token = "0x170000FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E66")]
				[Address(RVA = "0x162CEFC", Offset = "0x162CEFC", VA = "0x162CEFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000100")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E68")]
				[Address(RVA = "0x162CF7C", Offset = "0x162CF7C", VA = "0x162CF7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E63")]
			[Address(RVA = "0x162CCFC", Offset = "0x162CCFC", VA = "0x162CCFC")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000E64")]
			[Address(RVA = "0x162CDDC", Offset = "0x162CDDC", VA = "0x162CDDC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E65")]
			[Address(RVA = "0x162CDE0", Offset = "0x162CDE0", VA = "0x162CDE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E67")]
			[Address(RVA = "0x162CF04", Offset = "0x162CF04", VA = "0x162CF04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBDCC", Offset = "0x4FBDCC")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBE00", Offset = "0x4FBE00")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBE34", Offset = "0x4FBE34")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBE68", Offset = "0x4FBE68")]
		public float deadMuscleWeight;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Animator animator;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 defaultPosition;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool isDead;

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x162C868", Offset = "0x162C868", VA = "0x162C868")]
		private void Start()
		{
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x162C94C", Offset = "0x162C94C", VA = "0x162C94C")]
		private void Update()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x162CBDC", Offset = "0x162CBDC", VA = "0x162CBDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x501710", Offset = "0x501710")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x162CC5C", Offset = "0x162CC5C", VA = "0x162CC5C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x501780", Offset = "0x501780")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x162CD1C", Offset = "0x162CD1C", VA = "0x162CD1C")]
		public Dying()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F17EC", Offset = "0x4F17EC")]
	public class FXCollisionBlood : MonoBehaviour
	{
		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minCollisionImpulse;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int emission;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float emissionImpulseAdd;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxEmission;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ParticleSystem particles;

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x162D4E0", Offset = "0x162D4E0", VA = "0x162D4E0")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x162D5E4", Offset = "0x162D5E4", VA = "0x162D5E4")]
		private void OnCollisionImpulse(MuscleCollision m, float impulse)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x162D9C0", Offset = "0x162D9C0", VA = "0x162D9C0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0x162DADC", Offset = "0x162DADC", VA = "0x162DADC")]
		public FXCollisionBlood()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public class Grab : MonoBehaviour
	{
		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBE9C", Offset = "0x4FBE9C")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBED0", Offset = "0x4FBED0")]
		public UserControlMelee userControl;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBF04", Offset = "0x4FBF04")]
		public int grabLayer;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool grabbed;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Rigidbody r;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider c;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private BehaviourPuppet otherPuppet;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Collider otherCollider;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private ConfigurableJoint joint;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float nextGrabTime;

		[Token(Token = "0x40006C0")]
		private const float massMlp = 5f;

		[Token(Token = "0x40006C1")]
		private const int solverIterationMlp = 10;

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0x162DB0C", Offset = "0x162DB0C", VA = "0x162DB0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0x162DB88", Offset = "0x162DB88", VA = "0x162DB88")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0x162EB9C", Offset = "0x162EB9C", VA = "0x162EB9C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0x162ED38", Offset = "0x162ED38", VA = "0x162ED38")]
		public Grab()
		{
		}
	}
	[Token(Token = "0x20000D6")]
	public class Killing : MonoBehaviour
	{
		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBF38", Offset = "0x4FBF38")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBF6C", Offset = "0x4FBF6C")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x162ED40", Offset = "0x162ED40", VA = "0x162ED40")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x162EE38", Offset = "0x162EE38", VA = "0x162EE38")]
		public Killing()
		{
		}
	}
	[Token(Token = "0x20000D7")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F185C", Offset = "0x4F185C")]
	public class LayerSetup : MonoBehaviour
	{
		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FBFA0", Offset = "0x4FBFA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FBFA0", Offset = "0x4FBFA0")]
		public Transform characterController;

		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FC000", Offset = "0x4FC000")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC000", Offset = "0x4FC000")]
		public int characterControllerLayer;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC060", Offset = "0x4FC060")]
		public int ragdollLayer;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC094", Offset = "0x4FC094")]
		public LayerMask ignoreCollisionWithCharacterController;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC0C8", Offset = "0x4FC0C8")]
		public LayerMask ignoreCollisionWithRagdoll;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private PuppetMaster puppetMaster;

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x162EE80", Offset = "0x162EE80", VA = "0x162EE80")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x162F110", Offset = "0x162F110", VA = "0x162F110")]
		public LayerSetup()
		{
		}
	}
	[Token(Token = "0x20000D8")]
	public class NavMeshPuppet : MonoBehaviour
	{
		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public NavMeshAgent agent;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Transform target;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Animator animator;

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x162F118", Offset = "0x162F118", VA = "0x162F118")]
		private void Update()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x162F298", Offset = "0x162F298", VA = "0x162F298")]
		public NavMeshPuppet()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	public class Planet : MonoBehaviour
	{
		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float mass;

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x162FFDC", Offset = "0x162FFDC", VA = "0x162FFDC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x16300F8", Offset = "0x16300F8", VA = "0x16300F8")]
		public Planet()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	public class PlanetaryGravity : MonoBehaviour
	{
		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Planet planet;

		[Token(Token = "0x40006D0")]
		private const float G = 6.672E-11f;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Rigidbody _r;

		[Token(Token = "0x1700009D")]
		private Rigidbody r
		{
			[Token(Token = "0x60008AF")]
			[Address(RVA = "0x163010C", Offset = "0x163010C", VA = "0x163010C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x16301BC", Offset = "0x16301BC", VA = "0x16301BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x16302DC", Offset = "0x16302DC", VA = "0x16302DC")]
		private void ApplyGravity(Rigidbody r)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1630524", Offset = "0x1630524", VA = "0x1630524")]
		public PlanetaryGravity()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	public class PropDemo : MonoBehaviour
	{
		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC0FC", Offset = "0x4FC0FC")]
		public PuppetMasterProp prop;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC130", Offset = "0x4FC130")]
		public PropMuscle propMuscleLeft;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC164", Offset = "0x4FC164")]
		public PropMuscle propMuscleRight;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC198", Offset = "0x4FC198")]
		public bool pickUpOnAwake;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool right;

		[Token(Token = "0x1700009E")]
		private PropMuscle connectTo
		{
			[Token(Token = "0x60008B5")]
			[Address(RVA = "0x1630570", Offset = "0x1630570", VA = "0x1630570")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x163052C", Offset = "0x163052C", VA = "0x163052C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1630588", Offset = "0x1630588", VA = "0x1630588")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1630654", Offset = "0x1630654", VA = "0x1630654")]
		public PropDemo()
		{
		}
	}
	[Token(Token = "0x20000DC")]
	public class PropMelee : Prop
	{
		[Token(Token = "0x2000272")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F83B0", Offset = "0x4F83B0")]
		private sealed class <Action>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BB5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PropMelee <>4__this;

			[Token(Token = "0x4000BB6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float duration;

			[Token(Token = "0x4000BB7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private int <additionalPinMuscleIndex>5__2;

			[Token(Token = "0x17000101")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E6C")]
				[Address(RVA = "0x1630D54", Offset = "0x1630D54", VA = "0x1630D54", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000102")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E6E")]
				[Address(RVA = "0x1630DD4", Offset = "0x1630DD4", VA = "0x1630DD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E69")]
			[Address(RVA = "0x1630740", Offset = "0x1630740", VA = "0x1630740")]
			[DebuggerHidden]
			public <Action>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6000E6A")]
			[Address(RVA = "0x1630A24", Offset = "0x1630A24", VA = "0x1630A24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E6B")]
			[Address(RVA = "0x1630A28", Offset = "0x1630A28", VA = "0x1630A28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E6D")]
			[Address(RVA = "0x1630D5C", Offset = "0x1630D5C", VA = "0x1630D5C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FC1CC", Offset = "0x4FC1CC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC1CC", Offset = "0x4FC1CC")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC22C", Offset = "0x4FC22C")]
		public BoxCollider boxCollider;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC260", Offset = "0x4FC260")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC294", Offset = "0x4FC294")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FC294", Offset = "0x4FC294")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC2E4", Offset = "0x4FC2E4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FC2E4", Offset = "0x4FC2E4")]
		public float actionMassMlp;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC33C", Offset = "0x4FC33C")]
		public Vector3 COMOffset;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float defaultColliderRadius;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float defaultMass;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float defaultAddMass;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody r;

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1630664", Offset = "0x1630664", VA = "0x1630664")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x163069C", Offset = "0x163069C", VA = "0x163069C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5017F0", Offset = "0x5017F0")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1630760", Offset = "0x1630760", VA = "0x1630760", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x16308B4", Offset = "0x16308B4", VA = "0x16308B4", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1630960", Offset = "0x1630960", VA = "0x1630960", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1630A0C", Offset = "0x1630A0C", VA = "0x1630A0C")]
		public PropMelee()
		{
		}
	}
	[Token(Token = "0x20000DD")]
	public class PropPickUpTrigger : MonoBehaviour
	{
		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PuppetMasterProp prop;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LayerMask characterLayers;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private CharacterPuppet characterPuppet;

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1630DDC", Offset = "0x1630DDC", VA = "0x1630DDC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1630FFC", Offset = "0x1630FFC", VA = "0x1630FFC")]
		public PropPickUpTrigger()
		{
		}
	}
	[Token(Token = "0x20000DE")]
	public class PuppetBoard : MonoBehaviour
	{
		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC370", Offset = "0x4FC370")]
		public Rigidbody target;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC3A4", Offset = "0x4FC3A4")]
		public Transform bodyTargetPivot;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC3D8", Offset = "0x4FC3D8")]
		public Transform bodyTarget;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody r;

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1631004", Offset = "0x1631004", VA = "0x1631004")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x16310DC", Offset = "0x16310DC", VA = "0x16310DC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x16313D4", Offset = "0x16313D4", VA = "0x16313D4")]
		public PuppetBoard()
		{
		}
	}
	[Token(Token = "0x20000DF")]
	public class PuppetMasterPropMelee : PuppetMasterProp
	{
		[Token(Token = "0x2000273")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F83C0", Offset = "0x4F83C0")]
		private sealed class <Action>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BB8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BB9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BBA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public PuppetMasterPropMelee <>4__this;

			[Token(Token = "0x4000BBB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float duration;

			[Token(Token = "0x17000103")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E72")]
				[Address(RVA = "0x16318B4", Offset = "0x16318B4", VA = "0x16318B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000104")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E74")]
				[Address(RVA = "0x1631934", Offset = "0x1631934", VA = "0x1631934", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E6F")]
			[Address(RVA = "0x1631480", Offset = "0x1631480", VA = "0x1631480")]
			[DebuggerHidden]
			public <Action>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6000E70")]
			[Address(RVA = "0x163173C", Offset = "0x163173C", VA = "0x163173C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E71")]
			[Address(RVA = "0x1631740", Offset = "0x1631740", VA = "0x1631740", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E73")]
			[Address(RVA = "0x16318BC", Offset = "0x16318BC", VA = "0x16318BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x4FC40C", Offset = "0x4FC40C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC40C", Offset = "0x4FC40C")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC46C", Offset = "0x4FC46C")]
		public BoxCollider boxCollider;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC4A0", Offset = "0x4FC4A0")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC4D4", Offset = "0x4FC4D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FC4D4", Offset = "0x4FC4D4")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC524", Offset = "0x4FC524")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FC524", Offset = "0x4FC524")]
		public float actionMassMlp;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC578", Offset = "0x4FC578")]
		public Vector3 COMOffset;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float defaultColliderRadius;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float defaultMass;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float defaultAdditionalPinWeight;

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x16276DC", Offset = "0x16276DC", VA = "0x16276DC")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x16313DC", Offset = "0x16313DC", VA = "0x16313DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x501860", Offset = "0x501860")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x16314A0", Offset = "0x16314A0", VA = "0x16314A0", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1631524", Offset = "0x1631524", VA = "0x1631524", Slot = "4")]
		protected override void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x163169C", Offset = "0x163169C", VA = "0x163169C", Slot = "5")]
		protected override void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0x1631724", Offset = "0x1631724", VA = "0x1631724")]
		public PuppetMasterPropMelee()
		{
		}
	}
	[Token(Token = "0x20000E0")]
	public class PuppetScaling : MonoBehaviour
	{
		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FC5AC", Offset = "0x4FC5AC")]
		public float masterScale;

		[Token(Token = "0x40006F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int muscleIndex;

		[Token(Token = "0x40006F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FC5CC", Offset = "0x4FC5CC")]
		public float muscleScale;

		[Token(Token = "0x40006F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float defaultMuscleSpring;

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0x163193C", Offset = "0x163193C", VA = "0x163193C")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0x1631990", Offset = "0x1631990", VA = "0x1631990")]
		private void Update()
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0x1632020", Offset = "0x1632020", VA = "0x1632020")]
		public PuppetScaling()
		{
		}
	}
	[Token(Token = "0x20000E1")]
	public class RaycastShooter : MonoBehaviour
	{
		[Token(Token = "0x40006F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public LayerMask layers;

		[Token(Token = "0x40006F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float unpin;

		[Token(Token = "0x40006F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float force;

		[Token(Token = "0x40006F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem blood;

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0x1632034", Offset = "0x1632034", VA = "0x1632034")]
		private void Update()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0x1632428", Offset = "0x1632428", VA = "0x1632428")]
		public RaycastShooter()
		{
		}
	}
	[Token(Token = "0x20000E2")]
	public class Respawning : MonoBehaviour
	{
		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC5EC", Offset = "0x4FC5EC")]
		public Transform pool;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC620", Offset = "0x4FC620")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC654", Offset = "0x4FC654")]
		public string idleAnimation;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Transform puppetRoot;

		[Token(Token = "0x1700009F")]
		private bool isPooled
		{
			[Token(Token = "0x60008CD")]
			[Address(RVA = "0x1632440", Offset = "0x1632440", VA = "0x1632440")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0x1632500", Offset = "0x1632500", VA = "0x1632500")]
		private void Start()
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0x1632588", Offset = "0x1632588", VA = "0x1632588")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0x16327D8", Offset = "0x16327D8", VA = "0x16327D8")]
		private void Pool()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0x1632808", Offset = "0x1632808", VA = "0x1632808")]
		private void Respawn(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0x16329D8", Offset = "0x16329D8", VA = "0x16329D8")]
		public Respawning()
		{
		}
	}
	[Token(Token = "0x20000E3")]
	public class RotateShoulderToTarget : MonoBehaviour
	{
		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Transform shoulder;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 euler;

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0x16329E0", Offset = "0x16329E0", VA = "0x16329E0")]
		private void OnPuppetMasterRead()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0x1632B04", Offset = "0x1632B04", VA = "0x1632B04")]
		public RotateShoulderToTarget()
		{
		}
	}
	[Token(Token = "0x20000E4")]
	public class SkeletonDisconnector : MonoBehaviour
	{
		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Skeleton skeleton;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MuscleDisconnectMode disconnectMuscleMode;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layers;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float unpin;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float force;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ParticleSystem particles;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PropMuscle propMuscle;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PuppetMasterProp prop;

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0x16336B0", Offset = "0x16336B0", VA = "0x16336B0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0x1633D54", Offset = "0x1633D54", VA = "0x1633D54")]
		public SkeletonDisconnector()
		{
		}
	}
	[Token(Token = "0x20000E5")]
	public class SkeletonShooter : MonoBehaviour
	{
		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Skeleton skeleton;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public MuscleRemoveMode removeMuscleMode;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layers;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float unpin;

		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float force;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ParticleSystem particles;

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0x1633D6C", Offset = "0x1633D6C", VA = "0x1633D6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0x1634364", Offset = "0x1634364", VA = "0x1634364")]
		public SkeletonShooter()
		{
		}
	}
	[Token(Token = "0x20000E6")]
	public class UserControlAIMelee : UserControlThirdPerson
	{
		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public BehaviourPuppet targetPuppet;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float stoppingDistance;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stoppingThreshold;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isAttacking;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float attackTimer;

		[Token(Token = "0x170000A0")]
		private Transform moveTarget
		{
			[Token(Token = "0x60008D9")]
			[Address(RVA = "0x16348EC", Offset = "0x16348EC", VA = "0x16348EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0x163496C", Offset = "0x163496C", VA = "0x163496C", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0x1634CAC", Offset = "0x1634CAC", VA = "0x1634CAC")]
		private bool CanAttack()
		{
			return default(bool);
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0x1634F04", Offset = "0x1634F04", VA = "0x1634F04")]
		public UserControlAIMelee()
		{
		}
	}
	[Token(Token = "0x20000E7")]
	public class UserControlMelee : UserControlThirdPerson
	{
		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public KeyCode hitKey;

		[Token(Token = "0x60008DD")]
		[Address(RVA = "0x1634F24", Offset = "0x1634F24", VA = "0x1634F24", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60008DE")]
		[Address(RVA = "0x1635374", Offset = "0x1635374", VA = "0x1635374")]
		public UserControlMelee()
		{
		}
	}
	[Token(Token = "0x20000E8")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool smoothFollow;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float smoothFollowSpeed;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected bool animatePhysics;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 lastPosition;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 localPosition;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion localRotation;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Quaternion lastRotation;

		[Token(Token = "0x170000A1")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0x1624A38", Offset = "0x1624A38", VA = "0x1624A38", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0x16249FC", Offset = "0x16249FC", VA = "0x16249FC", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0x1624A40", Offset = "0x1624A40", VA = "0x1624A40")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0x1624B2C", Offset = "0x1624B2C", VA = "0x1624B2C", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0x1624D5C", Offset = "0x1624D5C", VA = "0x1624D5C", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0x1625120", Offset = "0x1625120", VA = "0x1625120", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0x1624D6C", Offset = "0x1624D6C", VA = "0x1624D6C")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0x1625130", Offset = "0x1625130", VA = "0x1625130")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x20000E9")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F18CC", Offset = "0x4F18CC")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float pivotOffset;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Animator animator;

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0x1625A50", Offset = "0x1625A50", VA = "0x1625A50", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0x1625AB8", Offset = "0x1625AB8", VA = "0x1625AB8", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0x1625C00", Offset = "0x1625C00", VA = "0x1625C00")]
		private void Update()
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0x1625DF0", Offset = "0x1625DF0", VA = "0x1625DF0")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x20000EA")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F193C", Offset = "0x4F193C")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FC6B8", Offset = "0x4FC6B8")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		protected Animator animator;

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Vector3 lastForward;

		[Token(Token = "0x4000728")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x4000729")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float deltaAngle;

		[Token(Token = "0x170000A2")]
		public override bool animationGrounded
		{
			[Token(Token = "0x60008ED")]
			[Address(RVA = "0x1625EE4", Offset = "0x1625EE4", VA = "0x1625EE4", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0x1625E0C", Offset = "0x1625E0C", VA = "0x1625E0C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0x1625EB4", Offset = "0x1625EB4", VA = "0x1625EB4", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0x1625398", Offset = "0x1625398", VA = "0x1625398", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0x1626014", Offset = "0x1626014", VA = "0x1626014")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0x1625A10", Offset = "0x1625A10", VA = "0x1625A10")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x20000EB")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F19AC", Offset = "0x4F19AC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F19AC", Offset = "0x4F19AC")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FC6F8", Offset = "0x4FC6F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC6F8", Offset = "0x4FC6F8")]
		public Transform gravityTarget;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC758", Offset = "0x4FC758")]
		public float gravityMultiplier;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float airborneThreshold;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slopeStartAngle;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float slopeEndAngle;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float spherecastRadius;

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public LayerMask groundLayers;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Rigidbody r;

		[Token(Token = "0x4000735")]
		protected const float half = 0.5f;

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		protected float originalHeight;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Vector3 originalCenter;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x60008F1")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0x1626204", Offset = "0x1626204", VA = "0x1626204")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0x16263B4", Offset = "0x16263B4", VA = "0x16263B4", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0x16265C4", Offset = "0x16265C4", VA = "0x16265C4", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0x162690C", Offset = "0x162690C", VA = "0x162690C")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0x16269F8", Offset = "0x16269F8", VA = "0x16269F8")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0x1626C44", Offset = "0x1626C44", VA = "0x1626C44")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0x1626E4C", Offset = "0x1626E4C", VA = "0x1626E4C")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0x1626E7C", Offset = "0x1626E7C", VA = "0x1626E7C")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0x1626EAC", Offset = "0x1626EAC", VA = "0x1626EAC")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0x1626FE8", Offset = "0x1626FE8", VA = "0x1626FE8")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x20000EC")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x2000274")]
		public enum MoveMode
		{
			[Token(Token = "0x4000BBD")]
			Directional,
			[Token(Token = "0x4000BBE")]
			Strafe
		}

		[Token(Token = "0x2000275")]
		public struct AnimState
		{
			[Token(Token = "0x4000BBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x4000BC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x4000BC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x4000BC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x4000BC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x4000BC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x4000BC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x2000276")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F83D0", Offset = "0x4F83D0")]
		private sealed class <JumpSmooth>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x4000BC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x4000BCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private int <steps>5__2;

			[Token(Token = "0x4000BCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x17000105")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E78")]
				[Address(RVA = "0x162AF68", Offset = "0x162AF68", VA = "0x162AF68", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000106")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E7A")]
				[Address(RVA = "0x162AFE8", Offset = "0x162AFE8", VA = "0x162AFE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E75")]
			[Address(RVA = "0x162ADD8", Offset = "0x162ADD8", VA = "0x162ADD8")]
			[DebuggerHidden]
			public <JumpSmooth>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6000E76")]
			[Address(RVA = "0x162ADF8", Offset = "0x162ADF8", VA = "0x162ADF8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E77")]
			[Address(RVA = "0x162ADFC", Offset = "0x162ADFC", VA = "0x162ADFC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E79")]
			[Address(RVA = "0x162AF70", Offset = "0x162AF70", VA = "0x162AF70", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FC78C", Offset = "0x4FC78C")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CameraController cam;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FC7C0", Offset = "0x4FC7C0")]
		public MoveMode moveMode;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool smoothPhysics;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float smoothAccelerationTime;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float platformFriction;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float groundStickyEffect;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FC7F4", Offset = "0x4FC7F4")]
		public bool lookInCameraDirection;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float turnSpeed;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FC828", Offset = "0x4FC828")]
		public bool smoothJump;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float airSpeed;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float airControl;

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float jumpPower;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FC85C", Offset = "0x4FC85C")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public float wallRunMaxLength;

		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x4FC890", Offset = "0x4FC890")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FC8C4", Offset = "0x4FC8C4")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public AnimState animState;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		protected Vector3 moveDirection;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Animator animator;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 normal;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 platformVelocity;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private RaycastHit hit;

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float jumpLeg;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float jumpEndTime;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float forwardMlp;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float groundDistance;

		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float lastAirTime;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float stickyForce;

		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Vector3 wallNormal;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float wallRunWeight;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float lastWallRunWeight;

		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private bool fixedFrame;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private float wallRunEndTime;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Vector3 gravity;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float velocityY;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool doubleJumped;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		private bool jumpReleased;

		[Token(Token = "0x170000A3")]
		public bool onGround
		{
			[Token(Token = "0x60008FC")]
			[Address(RVA = "0x1628920", Offset = "0x1628920", VA = "0x1628920")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5018D0", Offset = "0x5018D0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008FD")]
			[Address(RVA = "0x1628928", Offset = "0x1628928", VA = "0x1628928")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5018E0", Offset = "0x5018E0")]
			private set
			{
			}
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0x1627850", Offset = "0x1627850", VA = "0x1627850", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0x1628930", Offset = "0x1628930", VA = "0x1628930")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0x1627AFC", Offset = "0x1627AFC", VA = "0x1627AFC", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0x16289BC", Offset = "0x16289BC", VA = "0x16289BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0x1627714", Offset = "0x1627714", VA = "0x1627714", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0x162A144", Offset = "0x162A144", VA = "0x162A144", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0x1629224", Offset = "0x1629224", VA = "0x1629224")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0x162A278", Offset = "0x162A278", VA = "0x162A278")]
		private void WallRun()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0x162AA70", Offset = "0x162AA70", VA = "0x162AA70")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0x1629DD8", Offset = "0x1629DD8", VA = "0x1629DD8")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0x1627EC0", Offset = "0x1627EC0", VA = "0x1627EC0", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0x162AB30", Offset = "0x162AB30", VA = "0x162AB30")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0x1628490", Offset = "0x1628490", VA = "0x1628490", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0x162AD30", Offset = "0x162AD30", VA = "0x162AD30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5018F0", Offset = "0x5018F0")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0x1629898", Offset = "0x1629898", VA = "0x1629898")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0x1628760", Offset = "0x1628760", VA = "0x1628760")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x4F1A48", Offset = "0x4F1A48")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000277")]
		public enum RotationMode
		{
			[Token(Token = "0x4000BCD")]
			Smooth,
			[Token(Token = "0x4000BCE")]
			Linear
		}

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC8D4", Offset = "0x4FC8D4")]
		public CameraController cameraController;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC908", Offset = "0x4FC908")]
		public float accelerationTime;

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC93C", Offset = "0x4FC93C")]
		public float turnTime;

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC970", Offset = "0x4FC970")]
		public bool walkByDefault;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC9A4", Offset = "0x4FC9A4")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FC9D8", Offset = "0x4FC9D8")]
		public float moveSpeed;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FCA0C", Offset = "0x4FCA0C")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animator animator;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float speed;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float angleVel;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float speedVel;

		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private CharacterController characterController;

		[Token(Token = "0x170000A4")]
		public bool isGrounded
		{
			[Token(Token = "0x600090E")]
			[Address(RVA = "0x1632B0C", Offset = "0x1632B0C", VA = "0x1632B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501960", Offset = "0x501960")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600090F")]
			[Address(RVA = "0x1632B14", Offset = "0x1632B14", VA = "0x1632B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501970", Offset = "0x501970")]
			private set
			{
			}
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0x1632B1C", Offset = "0x1632B1C", VA = "0x1632B1C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0x1632BB8", Offset = "0x1632BB8", VA = "0x1632BB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0x1633470", Offset = "0x1633470", VA = "0x1633470")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0x1632C28", Offset = "0x1632C28", VA = "0x1632C28")]
		private void Rotate()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0x1633128", Offset = "0x1633128", VA = "0x1633128")]
		private void Move()
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0x16334BC", Offset = "0x16334BC", VA = "0x16334BC")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0x16335DC", Offset = "0x16335DC", VA = "0x16335DC")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0x1633684", Offset = "0x1633684", VA = "0x1633684")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Transform moveTarget;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float stoppingDistance;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float stoppingThreshold;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Navigator navigator;

		[Token(Token = "0x6000918")]
		[Address(RVA = "0x1634488", Offset = "0x1634488", VA = "0x1634488", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0x1634500", Offset = "0x1634500", VA = "0x1634500", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0x1634874", Offset = "0x1634874", VA = "0x1634874")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0x16348BC", Offset = "0x16348BC", VA = "0x16348BC")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x2000278")]
		public struct State
		{
			[Token(Token = "0x4000BCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x4000BD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x4000BD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x4000BD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x4000BD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public bool walkByDefault;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		public bool canCrouch;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
		public bool canJump;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public State state;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected Transform cam;

		[Token(Token = "0x600091C")]
		[Address(RVA = "0x16344C8", Offset = "0x16344C8", VA = "0x16344C8", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0x1634F48", Offset = "0x1634F48", VA = "0x1634F48", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0x16348DC", Offset = "0x16348DC", VA = "0x16348DC")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x600091F")]
		[Address(RVA = "0x1623D9C", Offset = "0x1623D9C", VA = "0x1623D9C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0x1623DD8", Offset = "0x1623DD8", VA = "0x1623DD8")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x20000F1")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool mouse0;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool mouse1;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float slowMoTimeScale;

		[Token(Token = "0x6000921")]
		[Address(RVA = "0x163437C", Offset = "0x163437C", VA = "0x163437C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0x16343A8", Offset = "0x16343A8", VA = "0x16343A8")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0x1634474", Offset = "0x1634474", VA = "0x1634474")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F2")]
	public class Navigator
	{
		[Token(Token = "0x2000279")]
		public enum State
		{
			[Token(Token = "0x4000BD5")]
			Idle,
			[Token(Token = "0x4000BD6")]
			Seeking,
			[Token(Token = "0x4000BD7")]
			OnPath
		}

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FCA1C", Offset = "0x4FCA1C")]
		public bool activeTargetSeeking;

		[Token(Token = "0x400078C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FCA50", Offset = "0x4FCA50")]
		public float cornerRadius;

		[Token(Token = "0x400078D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FCA84", Offset = "0x4FCA84")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FCAB8", Offset = "0x4FCAB8")]
		public float maxSampleDistance;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FCAEC", Offset = "0x4FCAEC")]
		public float nextPathInterval;

		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FCB20", Offset = "0x4FCB20")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4FCB30", Offset = "0x4FCB30")]
		private State <state>k__BackingField;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Transform transform;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int cornerIndex;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3[] corners;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private NavMeshPath path;

		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool initiated;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float nextPathTime;

		[Token(Token = "0x170000A5")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x6000924")]
			[Address(RVA = "0x162F2A0", Offset = "0x162F2A0", VA = "0x162F2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501980", Offset = "0x501980")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000925")]
			[Address(RVA = "0x162F2B4", Offset = "0x162F2B4", VA = "0x162F2B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x501990", Offset = "0x501990")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public State state
		{
			[Token(Token = "0x6000926")]
			[Address(RVA = "0x162F2C0", Offset = "0x162F2C0", VA = "0x162F2C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5019A0", Offset = "0x5019A0")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x6000927")]
			[Address(RVA = "0x162F2C8", Offset = "0x162F2C8", VA = "0x162F2C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x5019B0", Offset = "0x5019B0")]
			private set
			{
			}
		}

		[Token(Token = "0x6000928")]
		[Address(RVA = "0x162F2D0", Offset = "0x162F2D0", VA = "0x162F2D0")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0x162F3B0", Offset = "0x162F3B0", VA = "0x162F3B0")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0x162FA7C", Offset = "0x162FA7C", VA = "0x162FA7C")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0x162FAE4", Offset = "0x162FAE4", VA = "0x162FAE4")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x162F90C", Offset = "0x162F90C", VA = "0x162F90C")]
		private void Stop()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x162F9A4", Offset = "0x162F9A4", VA = "0x162F9A4")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x162FC88", Offset = "0x162FC88", VA = "0x162FC88")]
		public void Visualize()
		{
		}

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x162FF50", Offset = "0x162FF50", VA = "0x162FF50")]
		public Navigator()
		{
		}
	}
}
namespace Horizon
{
	[Token(Token = "0x20000F3")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F1AB8", Offset = "0x4F1AB8")]
	public class HorizonCompensateZFighting : MonoBehaviour
	{
		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float minCamHeight;

		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minOffsetY;

		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxCamHeight;

		[Token(Token = "0x400079C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float maxOffsetY;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float currentOffset;

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x178B554", Offset = "0x178B554", VA = "0x178B554")]
		private void Update()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0x178B818", Offset = "0x178B818", VA = "0x178B818")]
		public HorizonCompensateZFighting()
		{
		}
	}
	[Token(Token = "0x20000F4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F1AEC", Offset = "0x4F1AEC")]
	public class HorizonCopyMaterialProps : MonoBehaviour
	{
		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public GameObject source;

		[Token(Token = "0x6000932")]
		[Address(RVA = "0x178B840", Offset = "0x178B840", VA = "0x178B840")]
		public void Sync(bool enabled_only_flag)
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0x178D028", Offset = "0x178D028", VA = "0x178D028")]
		private void CopyFloat(string propName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0x178D7E8", Offset = "0x178D7E8", VA = "0x178D7E8")]
		private void CopyFloat(string propName, string targetPropName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0x178D29C", Offset = "0x178D29C", VA = "0x178D29C")]
		private void CopyColor(string propName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0x178D72C", Offset = "0x178D72C", VA = "0x178D72C")]
		private void CopyColor(string propName, string targetPropName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0x178D1E4", Offset = "0x178D1E4", VA = "0x178D1E4")]
		private void CopyVector(string propName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x6000938")]
		[Address(RVA = "0x178D988", Offset = "0x178D988", VA = "0x178D988")]
		private void CopyVector(string propName, string targetPropName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0x178D0CC", Offset = "0x178D0CC", VA = "0x178D0CC")]
		private void CopyTexture(string propName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0x178D514", Offset = "0x178D514", VA = "0x178D514")]
		private void CopyTexture(string propName, string targetPropName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0x178D890", Offset = "0x178D890", VA = "0x178D890")]
		private void CopyTextureTilingOffset(string propName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x600093C")]
		[Address(RVA = "0x178D630", Offset = "0x178D630", VA = "0x178D630")]
		private void CopyTextureTilingOffset(string propName, string targetPropName, Material sourceMaterial, Material targetMaterial)
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0x178CFB8", Offset = "0x178CFB8", VA = "0x178CFB8")]
		private bool CheckEnabled(string propName, Material mat)
		{
			return default(bool);
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0x178D354", Offset = "0x178D354", VA = "0x178D354")]
		private float CheckType(string propName, Material mat)
		{
			return default(float);
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0x178D3B0", Offset = "0x178D3B0", VA = "0x178D3B0")]
		private bool CompareTextures(string sourcePropName, Material sourceMaterial, string targetPropName, Material targetMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6000940")]
		[Address(RVA = "0x178DA44", Offset = "0x178DA44", VA = "0x178DA44")]
		public HorizonCopyMaterialProps()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x4F1B20", Offset = "0x4F1B20")]
	[SelectionBase]
	[ExecuteInEditMode]
	public class HorizonMaster : MonoBehaviour
	{
		[Token(Token = "0x200027A")]
		[HideInInspector]
		public enum LayerCount
		{
			[Token(Token = "0x4000BD9")]
			One = 1,
			[Token(Token = "0x4000BDA")]
			Two,
			[Token(Token = "0x4000BDB")]
			Three,
			[Token(Token = "0x4000BDC")]
			Four
		}

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public List<Material> hMats;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public bool isPreset;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[HideInInspector]
		public bool childUsesDisplacement;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		[HideInInspector]
		public bool childUsesTesselation;

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		[HideInInspector]
		public bool childUsesCliffs;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[HideInInspector]
		public bool childUsesTransition;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		[HideInInspector]
		public bool horizonChildAvailable;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		[HideInInspector]
		public bool drawGizmos;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Color gizmoColor;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool updateHorizonMaster;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[HideInInspector]
		public bool showWireF;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Material getFromMaterialMat;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public bool setFeatures;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool getFeatures;

		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[HideInInspector]
		public bool getMatSettings;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int objectNumber;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform[] children;

		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public bool showFeatures;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		[HideInInspector]
		public bool showScaling;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
		[HideInInspector]
		public bool showMainSettings;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
		[HideInInspector]
		public bool showDetailSettings;

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool showWaterSettings;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[HideInInspector]
		public bool showFogSettings;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		[HideInInspector]
		public bool showSnowSettings;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		[HideInInspector]
		public bool showDispSettings;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public bool showCliffSettings;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		[HideInInspector]
		public bool showTools;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public LayerCount hFeatLayerCount;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public int layerCount;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool hFeatNormalmaps;

		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[HideInInspector]
		public bool hFeatEmissivness;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[HideInInspector]
		public bool hFeatDetailTex;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[HideInInspector]
		public bool hFeatWater;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public bool hFeatFog;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		[HideInInspector]
		public bool hFeatSnow;

		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		[HideInInspector]
		public bool hFeatDirSpec;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		[HideInInspector]
		public bool hFeatCubeRefl;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FCD70", Offset = "0x4FCD70")]
		public float hSetScaleInner;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public float hSetScaleOuter;

		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FCDB8", Offset = "0x4FCDB8")]
		public float hSetScaleHeight;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[HideInInspector]
		public Vector4 hSetMaskScaleOffset;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public bool hSetLockMask;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Texture hTexMask;

		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public Color hColTint;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[HideInInspector]
		public Color hColEmissColor;

		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[HideInInspector]
		public Color hColAmbOverride;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[HideInInspector]
		public float hSetIBLExposure;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public float hSetIBLReflExposure;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FCE70", Offset = "0x4FCE70")]
		public float hSetAmbvsIBL;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FCEA8", Offset = "0x4FCEA8")]
		public float hSetNMIntensLayers;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		[HideInInspector]
		public HorizON_LayerProps[] hSetLayerProps;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public Vector4 hSetDetailScaleOffset;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[HideInInspector]
		public Texture hTexDetailTexDiff;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[HideInInspector]
		public Texture hTexDetailTexNM;

		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FCF20", Offset = "0x4FCF20")]
		public float hSetDetailDiffIntens;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FCF58", Offset = "0x4FCF58")]
		public float hSetDetailNMIntens;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[HideInInspector]
		public Texture hTexWaterNM;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[HideInInspector]
		public Vector4 hSetWaterScaleOffset;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public Color hColWaterColorOpac;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[HideInInspector]
		public Color hColWaterSpecGloss;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FCFD0", Offset = "0x4FCFD0")]
		public float hSetWaterBlend;

		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FD008", Offset = "0x4FD008")]
		public float hSetWaterWavesIntens;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[HideInInspector]
		public float HSetWaterWavesSpeed;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FD050", Offset = "0x4FD050")]
		public float hSetFogIntens;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public Color hColFogColorAmbBlend;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FD098", Offset = "0x4FD098")]
		public float hSetFogSpecCubeAdd;

		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public float hSetFogStartDist;

		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		[HideInInspector]
		public float hSetFogTransDist;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[HideInInspector]
		public float hSetFogStartHeight;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		[HideInInspector]
		public float hSetFogTransHeight;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[HideInInspector]
		public float hSetFogDistHeightOffset;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FD120", Offset = "0x4FD120")]
		public float hSetFogEmissPunchThru;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FD158", Offset = "0x4FD158")]
		public float hsetSnowAmount;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		[HideInInspector]
		public Color hColSnowDiffColor;

		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		[HideInInspector]
		public Color hColSnowSpecGloss;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[HideInInspector]
		public float hSetSnowStartHeight;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[HideInInspector]
		public float hSetSnowHeightTrans;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FD1D0", Offset = "0x4FD1D0")]
		public float hSetSnowSlopeDamp;

		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FD208", Offset = "0x4FD208")]
		public float hSetSnowReduceByColor;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[HideInInspector]
		public float hSetDispHeight;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		public bool hSetDispRedByVertCol;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		[HideInInspector]
		public bool hSetDispRedByUV;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FD270", Offset = "0x4FD270")]
		public float hSetDispRedFadeAmount;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[HideInInspector]
		public Texture hTexDispHeightmap;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[HideInInspector]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FD2BC", Offset = "0x4FD2BC")]
		public float hSetTessSubD;

		[Token(Token = "0x40007F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[HideInInspector]
		public Texture hTexCliffDiff;

		[Token(Token = "0x40007F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[HideInInspector]
		public Vector4 hSetCliffScaleOffset;

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[HideInInspector]
		public bool hSetCliffAIsEmissMask;

		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		[HideInInspector]
		public Texture hTexCliffNM;

		[Token(Token = "0x6000941")]
		[Address(RVA = "0x1790F4C", Offset = "0x1790F4C", VA = "0x1790F4C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0x1790F50", Offset = "0x1790F50", VA = "0x1790F50")]
		public void UpdateMaterials()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0x1794F38", Offset = "0x1794F38", VA = "0x1794F38")]
		public HorizonMaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F6")]
	public class HorizON_LayerProps
	{
		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool showLayerSettings;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector4 hSetLayerScaleOffset;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Texture hTexLayerDiff;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture hTexLayerNM;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool hSetAIsEmissMask;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color hColLayerTint;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x4FD338", Offset = "0x4FD338")]
		public float hSetLayerDetIntens;

		[Token(Token = "0x6000944")]
		[Address(RVA = "0x178B4A8", Offset = "0x178B4A8", VA = "0x178B4A8")]
		public HorizON_LayerProps()
		{
		}
	}
	[Token(Token = "0x20000F7")]
	public class HorizonDecoPainterSettings : MonoBehaviour
	{
		[Token(Token = "0x6000945")]
		[Address(RVA = "0x178DA4C", Offset = "0x178DA4C", VA = "0x178DA4C")]
		public HorizonDecoPainterSettings()
		{
		}
	}
	[Token(Token = "0x20000F8")]
	public class HorizonDecoParent : MonoBehaviour
	{
		[Token(Token = "0x6000946")]
		[Address(RVA = "0x178DA54", Offset = "0x178DA54", VA = "0x178DA54")]
		public HorizonDecoParent()
		{
		}
	}
	[Token(Token = "0x20000F9")]
	public class HorizonDisplacementHelper
	{
		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float texel_step;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static float bounds_percentage_offset;

		[Token(Token = "0x4000801")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static Texture2D heightMap;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		private static Texture2D maskMap;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static float parallaxValue;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static Vector4 mapScaleOffset;

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private static Vector4 baseMapScaleOffset;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private static Vector4 blendColorMap1ScaleOffset;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private static Vector4 blendColorMap2ScaleOffset;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private static Vector4 blendColorMap3ScaleOffset;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private static bool _LAYERCOUNT_TWO;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		private static bool _LAYERCOUNT_THREE;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x66")]
		private static bool _LAYERCOUNT_FOUR;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x67")]
		private static bool waterOn;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private static float _LocalSpace;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private static bool PER_VERTEX_FLAG;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private static float VertexColorA;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private static float _ReduceByVertexAlpha;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private static float texCoordX;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private static float texCoordY;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private static float _ReduceByUVBorder;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private static float _ReduceByUVBorderLength;

		[Token(Token = "0x6000947")]
		[Address(RVA = "0x178DA5C", Offset = "0x178DA5C", VA = "0x178DA5C")]
		public static void AdjustBounds(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0x178F17C", Offset = "0x178F17C", VA = "0x178F17C")]
		public static void DisplaceMesh(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000949")]
		[Address(RVA = "0x178DF40", Offset = "0x178DF40", VA = "0x178DF40")]
		public static bool GetProps(GameObject gameObject)
		{
			return default(bool);
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0x178F840", Offset = "0x178F840", VA = "0x178F840")]
		private static Vector2 TRANSFORM_TEX(Vector2 uv_in, Vector4 scaleOffset)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0x178F86C", Offset = "0x178F86C", VA = "0x178F86C")]
		private static float Displace(Vector2 uv)
		{
			return default(float);
		}

		[Token(Token = "0x600094C")]
		[Address(RVA = "0x178EFC0", Offset = "0x178EFC0", VA = "0x178EFC0")]
		private static float disp(Vector2 uv)
		{
			return default(float);
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0x178EEF4", Offset = "0x178EEF4", VA = "0x178EEF4")]
		private static Vector2 getUVs(Vector2 objCenterXZ, Vector2 worldPosXZ)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0x178FDF0", Offset = "0x178FDF0", VA = "0x178FDF0")]
		public static void FixSeams(Transform[] inputTransforms)
		{
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0x1790ED8", Offset = "0x1790ED8", VA = "0x1790ED8")]
		public HorizonDisplacementHelper()
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public class HorizonPrefabList : MonoBehaviour
	{
		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public List<GameObject> prefabList;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool objectMode;

		[Token(Token = "0x6000951")]
		[Address(RVA = "0x179537C", Offset = "0x179537C", VA = "0x179537C")]
		public HorizonPrefabList()
		{
		}
	}
}
namespace ES3Types
{
	[Token(Token = "0x20000FB")]
	public class ES3Type_ES3Prefab : ES3Type
	{
		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000952")]
		[Address(RVA = "0x1C705C8", Offset = "0x1C705C8", VA = "0x1C705C8")]
		public ES3Type_ES3Prefab()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0x1C70698", Offset = "0x1C70698", VA = "0x1C70698", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000954")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FC")]
	public class ES3Type_ES3PrefabInternal : ES3Type
	{
		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000956")]
		[Address(RVA = "0x1C706A0", Offset = "0x1C706A0", VA = "0x1C706A0")]
		public ES3Type_ES3PrefabInternal()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0x1C70770", Offset = "0x1C70770", VA = "0x1C70770", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000958")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FD")]
	public class ES32DArrayType : ES3CollectionType
	{
		[Token(Token = "0x600095A")]
		[Address(RVA = "0x1C646CC", Offset = "0x1C646CC", VA = "0x1C646CC")]
		public ES32DArrayType(Type type)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0x1C647D8", Offset = "0x1C647D8", VA = "0x1C647D8", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode unityObjectType)
		{
		}

		[Token(Token = "0x600095C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0x1C64A74", Offset = "0x1C64A74", VA = "0x1C64A74", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FE")]
	public class ES33DArrayType : ES3CollectionType
	{
		[Token(Token = "0x600095E")]
		[Address(RVA = "0x1C64D30", Offset = "0x1C64D30", VA = "0x1C64D30")]
		public ES33DArrayType(Type type)
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0x1C64D34", Offset = "0x1C64D34", VA = "0x1C64D34", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000960")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0x1C65078", Offset = "0x1C65078", VA = "0x1C65078", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20000FF")]
	public class ES3ArrayType : ES3CollectionType
	{
		[Token(Token = "0x6000962")]
		[Address(RVA = "0x1C65460", Offset = "0x1C65460", VA = "0x1C65460")]
		public ES3ArrayType(Type type)
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0x1C65464", Offset = "0x1C65464", VA = "0x1C65464")]
		public ES3ArrayType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0x1C654AC", Offset = "0x1C654AC", VA = "0x1C654AC", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000965")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000966")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x1C656A0", Offset = "0x1C656A0", VA = "0x1C656A0", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1C65950", Offset = "0x1C65950", VA = "0x1C65950", Slot = "11")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000100")]
	public abstract class ES3CollectionType : ES3Type
	{
		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ES3Type elementType;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		protected ES3Reflection.ES3ReflectedMethod readMethod;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ES3Reflection.ES3ReflectedMethod readIntoMethod;

		[Token(Token = "0x6000969")]
		public abstract void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode);

		[Token(Token = "0x600096A")]
		[Address(RVA = "0x1C646D0", Offset = "0x1C646D0", VA = "0x1C646D0")]
		public ES3CollectionType(Type type)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1C65488", Offset = "0x1C65488", VA = "0x1C65488")]
		public ES3CollectionType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x1C66018", Offset = "0x1C66018", VA = "0x1C66018", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600096D")]
		protected virtual bool ReadICollection<T>(ES3Reader reader, ICollection<T> collection, ES3Type elementType)
		{
			return default(bool);
		}

		[Token(Token = "0x600096E")]
		protected virtual void ReadICollectionInto<T>(ES3Reader reader, ICollection<T> collection, ES3Type elementType)
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x1C66044", Offset = "0x1C66044", VA = "0x1C66044", Slot = "10")]
		public virtual object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0x1C662D0", Offset = "0x1C662D0", VA = "0x1C662D0", Slot = "11")]
		public virtual void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000101")]
	public class ES3DictionaryType : ES3Type
	{
		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ES3Type keyType;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public ES3Type valueType;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ES3Reflection.ES3ReflectedMethod readMethod;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		protected ES3Reflection.ES3ReflectedMethod readIntoMethod;

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x1C66D24", Offset = "0x1C66D24", VA = "0x1C66D24")]
		public ES3DictionaryType(Type type)
		{
		}

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x1C66E68", Offset = "0x1C66E68", VA = "0x1C66E68", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x1C66EB8", Offset = "0x1C66EB8", VA = "0x1C66EB8")]
		public void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000974")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000975")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000976")]
		public Dictionary<TKey, TVal> ReadKVP<TKey, TVal>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000977")]
		public void ReadKVP<TKey, TVal>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x1C673C4", Offset = "0x1C673C4", VA = "0x1C673C4")]
		public object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x1C67650", Offset = "0x1C67650", VA = "0x1C67650")]
		public void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class ES3HashSetType : ES3CollectionType
	{
		[Token(Token = "0x600097A")]
		[Address(RVA = "0x1C67A2C", Offset = "0x1C67A2C", VA = "0x1C67A2C")]
		public ES3HashSetType(Type type)
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x1C67A30", Offset = "0x1C67A30", VA = "0x1C67A30", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x600097C")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600097D")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000103")]
	public class ES3ListType : ES3CollectionType
	{
		[Token(Token = "0x600097E")]
		[Address(RVA = "0x1C6814C", Offset = "0x1C6814C", VA = "0x1C6814C")]
		public ES3ListType(Type type)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0x1C68150", Offset = "0x1C68150", VA = "0x1C68150")]
		public ES3ListType(Type type, ES3Type elementType)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0x1C68174", Offset = "0x1C68174", VA = "0x1C68174", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000981")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000982")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0x1C6862C", Offset = "0x1C6862C", VA = "0x1C6862C", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0x1C68854", Offset = "0x1C68854", VA = "0x1C68854", Slot = "11")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000104")]
	public class ES3QueueType : ES3CollectionType
	{
		[Token(Token = "0x6000985")]
		[Address(RVA = "0x1C68FF4", Offset = "0x1C68FF4", VA = "0x1C68FF4")]
		public ES3QueueType(Type type)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0x1C68FF8", Offset = "0x1C68FF8", VA = "0x1C68FF8", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x6000987")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000988")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0x1C69490", Offset = "0x1C69490", VA = "0x1C69490", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0x1C697D4", Offset = "0x1C697D4", VA = "0x1C697D4", Slot = "11")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000105")]
	public class ES3StackType : ES3CollectionType
	{
		[Token(Token = "0x600098B")]
		[Address(RVA = "0x1C6A954", Offset = "0x1C6A954", VA = "0x1C6A954")]
		public ES3StackType(Type type)
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0x1C6A958", Offset = "0x1C6A958", VA = "0x1C6A958", Slot = "7")]
		public override void Write(object obj, ES3Writer writer, ES3.ReferenceMode memberReferenceMode)
		{
		}

		[Token(Token = "0x600098D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x600098E")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0x1C6ADF0", Offset = "0x1C6ADF0", VA = "0x1C6ADF0", Slot = "10")]
		public override object Read(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0x1C6B134", Offset = "0x1C6B134", VA = "0x1C6B134", Slot = "11")]
		public override void ReadInto(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000106")]
	public abstract class ES3ComponentType : ES3UnityObjectType
	{
		[Token(Token = "0x4000820")]
		protected const string gameObjectPropertyName = "goID";

		[Token(Token = "0x6000991")]
		[Address(RVA = "0x1C6660C", Offset = "0x1C6660C", VA = "0x1C6660C")]
		public ES3ComponentType(Type type)
		{
		}

		[Token(Token = "0x6000992")]
		protected abstract void WriteComponent(object obj, ES3Writer writer);

		[Token(Token = "0x6000993")]
		protected abstract void ReadComponent<T>(ES3Reader reader, object obj);

		[Token(Token = "0x6000994")]
		[Address(RVA = "0x1C66614", Offset = "0x1C66614", VA = "0x1C66614", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000995")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000996")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0x1C668EC", Offset = "0x1C668EC", VA = "0x1C668EC")]
		private static Component GetOrAddComponent(GameObject go, Type type)
		{
			return null;
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0x1C66B58", Offset = "0x1C66B58", VA = "0x1C66B58")]
		public static Component CreateComponent(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0x1C66A88", Offset = "0x1C66A88", VA = "0x1C66A88")]
		public static Component GetOrCreateComponentIfNotExists(GameObject go, Type type)
		{
			return null;
		}
	}
	[Token(Token = "0x2000107")]
	public abstract class ES3ObjectType : ES3Type
	{
		[Token(Token = "0x600099A")]
		[Address(RVA = "0x1C68E4C", Offset = "0x1C68E4C", VA = "0x1C68E4C")]
		public ES3ObjectType(Type type)
		{
		}

		[Token(Token = "0x600099B")]
		protected abstract void WriteObject(object obj, ES3Writer writer);

		[Token(Token = "0x600099C")]
		protected abstract object ReadObject<T>(ES3Reader reader);

		[Token(Token = "0x600099D")]
		protected virtual void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0x1C68E50", Offset = "0x1C68E50", VA = "0x1C68E50", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x600099F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009A0")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000108")]
	public abstract class ES3ScriptableObjectType : ES3UnityObjectType
	{
		[Token(Token = "0x60009A1")]
		[Address(RVA = "0x1C6A068", Offset = "0x1C6A068", VA = "0x1C6A068")]
		public ES3ScriptableObjectType(Type type)
		{
		}

		[Token(Token = "0x60009A2")]
		protected abstract void WriteScriptableObject(object obj, ES3Writer writer);

		[Token(Token = "0x60009A3")]
		protected abstract void ReadScriptableObject<T>(ES3Reader reader, object obj);

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0x1C6A748", Offset = "0x1C6A748", VA = "0x1C6A748", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009A5")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009A6")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000109")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4F1B78", Offset = "0x4F1B78")]
	[ES3DoNotStrip]
	public abstract class ES3Type
	{
		[Token(Token = "0x4000821")]
		public const string typeFieldName = "__type";

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ES3Member[] members;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Type type;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isPrimitive;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool isValueType;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public bool isCollection;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public bool isDictionary;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public bool isES3TypeUnityObject;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public bool isReflectedType;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public bool isUnsupported;

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0x1C65F48", Offset = "0x1C65F48", VA = "0x1C65F48")]
		protected ES3Type(Type type)
		{
		}

		[Token(Token = "0x60009A8")]
		public abstract void Write(object obj, ES3Writer writer);

		[Token(Token = "0x60009A9")]
		public abstract object Read<T>(ES3Reader reader);

		[Token(Token = "0x60009AA")]
		public virtual void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0x1C68E94", Offset = "0x1C68E94", VA = "0x1C68E94")]
		protected bool WriteUsingDerivedType(object obj, ES3Writer writer)
		{
			return default(bool);
		}

		[Token(Token = "0x60009AC")]
		protected void ReadUsingDerivedType<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0x1C6B748", Offset = "0x1C6B748", VA = "0x1C6B748")]
		internal string ReadPropertyName(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0x1C69E24", Offset = "0x1C69E24", VA = "0x1C69E24")]
		protected void WriteProperties(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0x1C6B7B8", Offset = "0x1C6B7B8", VA = "0x1C6B7B8")]
		protected object ReadProperties(ES3Reader reader, object obj)
		{
			return null;
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0x1C69E18", Offset = "0x1C69E18", VA = "0x1C69E18")]
		protected void GetMembers(bool safe)
		{
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0x1C6A0C0", Offset = "0x1C6A0C0", VA = "0x1C6A0C0")]
		protected void GetMembers(bool safe, string[] memberNames)
		{
		}
	}
	[Token(Token = "0x200010A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x4F1BAC", Offset = "0x4F1BAC")]
	public class ES3PropertiesAttribute : Attribute
	{
		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly string[] members;

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0x1C68FD4", Offset = "0x1C68FD4", VA = "0x1C68FD4")]
		public ES3PropertiesAttribute(params string[] members)
		{
		}
	}
	[Token(Token = "0x200010B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x4F1BC0", Offset = "0x4F1BC0")]
	public class ES3DoNotStripAttribute : PreserveAttribute
	{
		[Token(Token = "0x60009B3")]
		[Address(RVA = "0x1C67A24", Offset = "0x1C67A24", VA = "0x1C67A24")]
		public ES3DoNotStripAttribute()
		{
		}
	}
	[Token(Token = "0x200010C")]
	public abstract class ES3UnityObjectType : ES3ObjectType
	{
		[Token(Token = "0x60009B4")]
		[Address(RVA = "0x1781120", Offset = "0x1781120", VA = "0x1781120")]
		public ES3UnityObjectType(Type type)
		{
		}

		[Token(Token = "0x60009B5")]
		protected abstract void WriteUnityObject(object obj, ES3Writer writer);

		[Token(Token = "0x60009B6")]
		protected abstract void ReadUnityObject<T>(ES3Reader reader, object obj);

		[Token(Token = "0x60009B7")]
		protected abstract object ReadUnityObject<T>(ES3Reader reader);

		[Token(Token = "0x60009B8")]
		[Address(RVA = "0x1788E20", Offset = "0x1788E20", VA = "0x1788E20", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0x1788E4C", Offset = "0x1788E4C", VA = "0x1788E4C", Slot = "13")]
		public virtual void WriteObject(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
		}

		[Token(Token = "0x60009BA")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x60009BB")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200010D")]
	public class ES3Type_DateTime : ES3Type
	{
		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0x1C702A8", Offset = "0x1C702A8", VA = "0x1C702A8")]
		public ES3Type_DateTime()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0x1C70378", Offset = "0x1C70378", VA = "0x1C70378", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009BE")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200010E")]
	public class ES3Type_DateTimeArray : ES3ArrayType
	{
		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0x1C704D0", Offset = "0x1C704D0", VA = "0x1C704D0")]
		public ES3Type_DateTimeArray()
		{
		}
	}
	[Token(Token = "0x200010F")]
	public class ES3Type_UIntPtr : ES3Type
	{
		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0x1784E0C", Offset = "0x1784E0C", VA = "0x1784E0C")]
		public ES3Type_UIntPtr()
		{
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0x1784EE8", Offset = "0x1784EE8", VA = "0x1784EE8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009C3")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000110")]
	public class ES3Type_UIntPtrArray : ES3ArrayType
	{
		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0x1784FA8", Offset = "0x1784FA8", VA = "0x1784FA8")]
		public ES3Type_UIntPtrArray()
		{
		}
	}
	[Token(Token = "0x2000111")]
	public class ES3Type_bool : ES3Type
	{
		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0x17869FC", Offset = "0x17869FC", VA = "0x17869FC")]
		public ES3Type_bool()
		{
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0x1786AD8", Offset = "0x1786AD8", VA = "0x1786AD8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009C8")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000112")]
	public class ES3Type_boolArray : ES3ArrayType
	{
		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009CA")]
		[Address(RVA = "0x1786B8C", Offset = "0x1786B8C", VA = "0x1786B8C")]
		public ES3Type_boolArray()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class ES3Type_byte : ES3Type
	{
		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0x1786C7C", Offset = "0x1786C7C", VA = "0x1786C7C")]
		public ES3Type_byte()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0x1786D58", Offset = "0x1786D58", VA = "0x1786D58", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009CD")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000114")]
	public class ES3Type_byteArray : ES3Type
	{
		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0x1786E0C", Offset = "0x1786E0C", VA = "0x1786E0C")]
		public ES3Type_byteArray()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0x1786EE8", Offset = "0x1786EE8", VA = "0x1786EE8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009D1")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000115")]
	public class ES3Type_char : ES3Type
	{
		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0x1786F98", Offset = "0x1786F98", VA = "0x1786F98")]
		public ES3Type_char()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0x1787074", Offset = "0x1787074", VA = "0x1787074", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009D5")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000116")]
	public class ES3Type_charArray : ES3ArrayType
	{
		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0x1787128", Offset = "0x1787128", VA = "0x1787128")]
		public ES3Type_charArray()
		{
		}
	}
	[Token(Token = "0x2000117")]
	public class ES3Type_decimal : ES3Type
	{
		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0x1787218", Offset = "0x1787218", VA = "0x1787218")]
		public ES3Type_decimal()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0x17872F4", Offset = "0x17872F4", VA = "0x17872F4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009DA")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000118")]
	public class ES3Type_decimalArray : ES3ArrayType
	{
		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x17873B8", Offset = "0x17873B8", VA = "0x17873B8")]
		public ES3Type_decimalArray()
		{
		}
	}
	[Token(Token = "0x2000119")]
	public class ES3Type_double : ES3Type
	{
		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x17874A8", Offset = "0x17874A8", VA = "0x17874A8")]
		public ES3Type_double()
		{
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x1787584", Offset = "0x1787584", VA = "0x1787584", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009DF")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200011A")]
	public class ES3Type_doubleArray : ES3ArrayType
	{
		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009E1")]
		[Address(RVA = "0x1787648", Offset = "0x1787648", VA = "0x1787648")]
		public ES3Type_doubleArray()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class ES3Type_enum : ES3Type
	{
		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009E2")]
		[Address(RVA = "0x1787738", Offset = "0x1787738", VA = "0x1787738")]
		public ES3Type_enum(Type type)
		{
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x17877D0", Offset = "0x17877D0", VA = "0x17877D0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009E4")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200011C")]
	public class ES3Type_float : ES3Type
	{
		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x1787884", Offset = "0x1787884", VA = "0x1787884")]
		public ES3Type_float()
		{
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x1787960", Offset = "0x1787960", VA = "0x1787960", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009E8")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200011D")]
	public class ES3Type_floatArray : ES3ArrayType
	{
		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1787A14", Offset = "0x1787A14", VA = "0x1787A14")]
		public ES3Type_floatArray()
		{
		}
	}
	[Token(Token = "0x200011E")]
	public class ES3Type_int : ES3Type
	{
		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1787B04", Offset = "0x1787B04", VA = "0x1787B04")]
		public ES3Type_int()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x1787BE0", Offset = "0x1787BE0", VA = "0x1787BE0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009ED")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200011F")]
	public class ES3Type_intArray : ES3ArrayType
	{
		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0x1787C94", Offset = "0x1787C94", VA = "0x1787C94")]
		public ES3Type_intArray()
		{
		}
	}
	[Token(Token = "0x2000120")]
	public class ES3Type_IntPtr : ES3Type
	{
		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0x1C73658", Offset = "0x1C73658", VA = "0x1C73658")]
		public ES3Type_IntPtr()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0x1C73730", Offset = "0x1C73730", VA = "0x1C73730", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009F2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000121")]
	public class ES3Type_IntPtrArray : ES3ArrayType
	{
		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0x1C73808", Offset = "0x1C73808", VA = "0x1C73808")]
		public ES3Type_IntPtrArray()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class ES3Type_long : ES3Type
	{
		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0x1787D84", Offset = "0x1787D84", VA = "0x1787D84")]
		public ES3Type_long()
		{
		}

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0x1787E60", Offset = "0x1787E60", VA = "0x1787E60", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009F7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000123")]
	public class ES3Type_longArray : ES3ArrayType
	{
		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0x1787F20", Offset = "0x1787F20", VA = "0x1787F20")]
		public ES3Type_longArray()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public class ES3Type_sbyte : ES3Type
	{
		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0x1788010", Offset = "0x1788010", VA = "0x1788010")]
		public ES3Type_sbyte()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0x17880EC", Offset = "0x17880EC", VA = "0x17880EC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x60009FC")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000125")]
	public class ES3Type_sbyteArray : ES3ArrayType
	{
		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0x17881A0", Offset = "0x17881A0", VA = "0x17881A0")]
		public ES3Type_sbyteArray()
		{
		}
	}
	[Token(Token = "0x2000126")]
	public class ES3Type_short : ES3Type
	{
		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0x1788290", Offset = "0x1788290", VA = "0x1788290")]
		public ES3Type_short()
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0x178836C", Offset = "0x178836C", VA = "0x178836C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A01")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000127")]
	public class ES3Type_shortArray : ES3ArrayType
	{
		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0x1788420", Offset = "0x1788420", VA = "0x1788420")]
		public ES3Type_shortArray()
		{
		}
	}
	[Token(Token = "0x2000128")]
	public class ES3Type_string : ES3Type
	{
		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0x1788510", Offset = "0x1788510", VA = "0x1788510")]
		public ES3Type_string()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0x17885EC", Offset = "0x17885EC", VA = "0x17885EC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A06")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000129")]
	public class ES3Type_StringArray : ES3ArrayType
	{
		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0x1782058", Offset = "0x1782058", VA = "0x1782058")]
		public ES3Type_StringArray()
		{
		}
	}
	[Token(Token = "0x200012A")]
	public class ES3Type_uint : ES3Type
	{
		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0x1788694", Offset = "0x1788694", VA = "0x1788694")]
		public ES3Type_uint()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0x1788770", Offset = "0x1788770", VA = "0x1788770", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A0B")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200012B")]
	public class ES3Type_uintArray : ES3ArrayType
	{
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0x1788824", Offset = "0x1788824", VA = "0x1788824")]
		public ES3Type_uintArray()
		{
		}
	}
	[Token(Token = "0x200012C")]
	public class ES3Type_ulong : ES3Type
	{
		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0x1788914", Offset = "0x1788914", VA = "0x1788914")]
		public ES3Type_ulong()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0x17889F0", Offset = "0x17889F0", VA = "0x17889F0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A10")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200012D")]
	public class ES3Type_ulongArray : ES3ArrayType
	{
		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0x1788AB0", Offset = "0x1788AB0", VA = "0x1788AB0")]
		public ES3Type_ulongArray()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class ES3Type_ushort : ES3Type
	{
		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0x1788BA0", Offset = "0x1788BA0", VA = "0x1788BA0")]
		public ES3Type_ushort()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0x1788C7C", Offset = "0x1788C7C", VA = "0x1788C7C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A15")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200012F")]
	public class ES3Type_ushortArray : ES3ArrayType
	{
		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0x1788D30", Offset = "0x1788D30", VA = "0x1788D30")]
		public ES3Type_ushortArray()
		{
		}
	}
	[Token(Token = "0x2000130")]
	internal class ES3ReflectedComponentType : ES3ComponentType
	{
		[Token(Token = "0x6000A18")]
		[Address(RVA = "0x1C69DE8", Offset = "0x1C69DE8", VA = "0x1C69DE8")]
		public ES3ReflectedComponentType(Type type)
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0x1C69E20", Offset = "0x1C69E20", VA = "0x1C69E20", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A1A")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000131")]
	internal class ES3ReflectedObjectType : ES3ObjectType
	{
		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0x1C6A008", Offset = "0x1C6A008", VA = "0x1C6A008")]
		public ES3ReflectedObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0x1C6A034", Offset = "0x1C6A034", VA = "0x1C6A034", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A1D")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A1E")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000132")]
	internal class ES3ReflectedScriptableObjectType : ES3ScriptableObjectType
	{
		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0x1C6A038", Offset = "0x1C6A038", VA = "0x1C6A038")]
		public ES3ReflectedScriptableObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0x1C6A070", Offset = "0x1C6A070", VA = "0x1C6A070", Slot = "14")]
		protected override void WriteScriptableObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A21")]
		protected override void ReadScriptableObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000133")]
	internal class ES3ReflectedType : ES3Type
	{
		[Token(Token = "0x6000A22")]
		[Address(RVA = "0x1C6A074", Offset = "0x1C6A074", VA = "0x1C6A074")]
		public ES3ReflectedType(Type type)
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0x1C6A090", Offset = "0x1C6A090", VA = "0x1C6A090")]
		public ES3ReflectedType(Type type, string[] members)
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0x1C6A270", Offset = "0x1C6A270", VA = "0x1C6A270", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A25")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A26")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000134")]
	internal class ES3ReflectedUnityObjectType : ES3UnityObjectType
	{
		[Token(Token = "0x6000A27")]
		[Address(RVA = "0x1C6A6E4", Offset = "0x1C6A6E4", VA = "0x1C6A6E4")]
		public ES3ReflectedUnityObjectType(Type type)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0x1C6A714", Offset = "0x1C6A714", VA = "0x1C6A714", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A29")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A2A")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000135")]
	internal class ES3ReflectedValueType : ES3Type
	{
		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0x1C6A718", Offset = "0x1C6A718", VA = "0x1C6A718")]
		public ES3ReflectedValueType(Type type)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0x1C6A744", Offset = "0x1C6A744", VA = "0x1C6A744", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A2D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A2E")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000136")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F1BEC", Offset = "0x4F1BEC")]
	public class ES3Type_BoxCollider : ES3ComponentType
	{
		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0x1C6CFDC", Offset = "0x1C6CFDC", VA = "0x1C6CFDC")]
		public ES3Type_BoxCollider()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0x1C6D0B0", Offset = "0x1C6D0B0", VA = "0x1C6D0B0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A31")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000137")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F1CEC", Offset = "0x4F1CEC")]
	public class ES3Type_BoxCollider2D : ES3ComponentType
	{
		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0x1C6D37C", Offset = "0x1C6D37C", VA = "0x1C6D37C")]
		public ES3Type_BoxCollider2D()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0x1C6D450", Offset = "0x1C6D450", VA = "0x1C6D450", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A35")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F1E04", Offset = "0x4F1E04")]
	public class ES3Type_Camera : ES3ComponentType
	{
		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0x1C6D818", Offset = "0x1C6D818", VA = "0x1C6D818")]
		public ES3Type_Camera()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0x1C6D8EC", Offset = "0x1C6D8EC", VA = "0x1C6D8EC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A39")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000139")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F218C", Offset = "0x4F218C")]
	public class ES3Type_CapsuleCollider : ES3ComponentType
	{
		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0x1C6E5F0", Offset = "0x1C6E5F0", VA = "0x1C6E5F0")]
		public ES3Type_CapsuleCollider()
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0x1C6E6C4", Offset = "0x1C6E6C4", VA = "0x1C6E6C4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A3D")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class ES3Type_EventSystem : ES3ComponentType
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0x1C70D1C", Offset = "0x1C70D1C", VA = "0x1C70D1C")]
		public ES3Type_EventSystem()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0x1C70DF0", Offset = "0x1C70DF0", VA = "0x1C70DF0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A41")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F22BC", Offset = "0x4F22BC")]
	public class ES3Type_MeshCollider : ES3ComponentType
	{
		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0x1C7F6CC", Offset = "0x1C7F6CC", VA = "0x1C7F6CC")]
		public ES3Type_MeshCollider()
		{
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0x1C7F7A0", Offset = "0x1C7F7A0", VA = "0x1C7F7A0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A45")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class ES3Type_MeshColliderArray : ES3ArrayType
	{
		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0x1C7FADC", Offset = "0x1C7FADC", VA = "0x1C7FADC")]
		public ES3Type_MeshColliderArray()
		{
		}
	}
	[Token(Token = "0x200013D")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F23EC", Offset = "0x4F23EC")]
	public class ES3Type_MeshFilter : ES3ComponentType
	{
		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0x1C7FBD4", Offset = "0x1C7FBD4", VA = "0x1C7FBD4")]
		public ES3Type_MeshFilter()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0x1C7FCA8", Offset = "0x1C7FCA8", VA = "0x1C7FCA8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A4A")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class ES3Type_MeshFilterArray : ES3ArrayType
	{
		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0x1C7FDB4", Offset = "0x1C7FDB4", VA = "0x1C7FDB4")]
		public ES3Type_MeshFilterArray()
		{
		}
	}
	[Token(Token = "0x200013F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F2474", Offset = "0x4F2474")]
	public class ES3Type_MeshRenderer : ES3ComponentType
	{
		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0x1C7FEAC", Offset = "0x1C7FEAC", VA = "0x1C7FEAC")]
		public ES3Type_MeshRenderer()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0x1C7FF80", Offset = "0x1C7FF80", VA = "0x1C7FF80", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A4F")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class ES3Type_MeshRendererArray : ES3ArrayType
	{
		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0x1C807E4", Offset = "0x1C807E4", VA = "0x1C807E4")]
		public ES3Type_MeshRendererArray()
		{
		}
	}
	[Token(Token = "0x2000141")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F267C", Offset = "0x4F267C")]
	public class ES3Type_ParticleSystem : ES3ComponentType
	{
		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0x1C81F18", Offset = "0x1C81F18", VA = "0x1C81F18")]
		public ES3Type_ParticleSystem()
		{
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0x1C81FEC", Offset = "0x1C81FEC", VA = "0x1C81FEC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A54")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000142")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F2974", Offset = "0x4F2974")]
	public class ES3Type_PolygonCollider2D : ES3ComponentType
	{
		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A56")]
		[Address(RVA = "0x1C83288", Offset = "0x1C83288", VA = "0x1C83288")]
		public ES3Type_PolygonCollider2D()
		{
		}

		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x1C8335C", Offset = "0x1C8335C", VA = "0x1C8335C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A58")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class ES3Type_PolygonCollider2DArray : ES3ArrayType
	{
		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0x1C83970", Offset = "0x1C83970", VA = "0x1C83970")]
		public ES3Type_PolygonCollider2DArray()
		{
		}
	}
	[Token(Token = "0x2000144")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F2ABC", Offset = "0x4F2ABC")]
	public class ES3Type_SphereCollider : ES3ComponentType
	{
		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0x1780BA8", Offset = "0x1780BA8", VA = "0x1780BA8")]
		public ES3Type_SphereCollider()
		{
		}

		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0x1780C7C", Offset = "0x1780C7C", VA = "0x1780C7C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A5D")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000145")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F2BBC", Offset = "0x4F2BBC")]
	public class ES3Type_Text : ES3ComponentType
	{
		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0x1782534", Offset = "0x1782534", VA = "0x1782534")]
		public ES3Type_Text()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x1782608", Offset = "0x1782608", VA = "0x1782608", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A61")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000146")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F2E6C", Offset = "0x4F2E6C")]
	public class ES3Type_Transform : ES3ComponentType
	{
		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0x17846EC", Offset = "0x17846EC", VA = "0x17846EC")]
		public ES3Type_Transform()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x17847C0", Offset = "0x17847C0", VA = "0x17847C0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A65")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000147")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F2F3C", Offset = "0x4F2F3C")]
	public class ES3Type_AnimationCurve : ES3Type
	{
		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0x1C6BF0C", Offset = "0x1C6BF0C", VA = "0x1C6BF0C")]
		public ES3Type_AnimationCurve()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0x1C6BFDC", Offset = "0x1C6BFDC", VA = "0x1C6BFDC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A69")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A6A")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000148")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F2FF4", Offset = "0x4F2FF4")]
	public class ES3Type_AudioClip : ES3UnityObjectType
	{
		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0x1C6C1A4", Offset = "0x1C6C1A4", VA = "0x1C6C1A4")]
		public ES3Type_AudioClip()
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0x1C6C278", Offset = "0x1C6C278", VA = "0x1C6C278", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A6E")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A6F")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000149")]
	public class ES3Type_AudioClipArray : ES3ArrayType
	{
		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0x1C6C508", Offset = "0x1C6C508", VA = "0x1C6C508")]
		public ES3Type_AudioClipArray()
		{
		}
	}
	[Token(Token = "0x200014A")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F30DC", Offset = "0x4F30DC")]
	public class ES3Type_BoneWeight : ES3Type
	{
		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0x1C6C600", Offset = "0x1C6C600", VA = "0x1C6C600")]
		public ES3Type_BoneWeight()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0x1C6C6D0", Offset = "0x1C6C6D0", VA = "0x1C6C6D0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A74")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200014B")]
	public class ES3Type_BoneWeightArray : ES3ArrayType
	{
		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0x1C6CB20", Offset = "0x1C6CB20", VA = "0x1C6CB20")]
		public ES3Type_BoneWeightArray()
		{
		}
	}
	[Token(Token = "0x200014C")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F320C", Offset = "0x4F320C")]
	public class ES3Type_Bounds : ES3Type
	{
		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0x1C6CC18", Offset = "0x1C6CC18", VA = "0x1C6CC18")]
		public ES3Type_Bounds()
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0x1C6CCE8", Offset = "0x1C6CCE8", VA = "0x1C6CCE8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A79")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200014D")]
	public class ES3Type_BoundsArray : ES3ArrayType
	{
		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0x1C6CEE4", Offset = "0x1C6CEE4", VA = "0x1C6CEE4")]
		public ES3Type_BoundsArray()
		{
		}
	}
	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F32AC", Offset = "0x4F32AC")]
	public class ES3Type_CollisionModule : ES3Type
	{
		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0x1C6EB84", Offset = "0x1C6EB84", VA = "0x1C6EB84")]
		public ES3Type_CollisionModule()
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0x1C6EC54", Offset = "0x1C6EC54", VA = "0x1C6EC54", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A7E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A7F")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F34CC", Offset = "0x4F34CC")]
	public class ES3Type_Color : ES3Type
	{
		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0x1C6F3C8", Offset = "0x1C6F3C8", VA = "0x1C6F3C8")]
		public ES3Type_Color()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0x1C6F498", Offset = "0x1C6F498", VA = "0x1C6F498", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A83")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000150")]
	public class ES3Type_ColorArray : ES3ArrayType
	{
		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0x1C6FB88", Offset = "0x1C6FB88", VA = "0x1C6FB88")]
		public ES3Type_ColorArray()
		{
		}
	}
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F359C", Offset = "0x4F359C")]
	public class ES3Type_Color32 : ES3Type
	{
		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0x1C6F700", Offset = "0x1C6F700", VA = "0x1C6F700")]
		public ES3Type_Color32()
		{
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0x1C6F7D0", Offset = "0x1C6F7D0", VA = "0x1C6F7D0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A88")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0x1C6FA40", Offset = "0x1C6FA40", VA = "0x1C6FA40")]
		public static bool Equals(Color32 a, Color32 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000152")]
	public class ES3Type_Color32Array : ES3ArrayType
	{
		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0x1C6FA90", Offset = "0x1C6FA90", VA = "0x1C6FA90")]
		public ES3Type_Color32Array()
		{
		}
	}
	[Token(Token = "0x2000153")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F366C", Offset = "0x4F366C")]
	public class ES3Type_ColorBySpeedModule : ES3Type
	{
		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0x1C6FC80", Offset = "0x1C6FC80", VA = "0x1C6FC80")]
		public ES3Type_ColorBySpeedModule()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0x1C6FD50", Offset = "0x1C6FD50", VA = "0x1C6FD50", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A8E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A8F")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000154")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F3724", Offset = "0x4F3724")]
	public class ES3Type_ColorOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0x1C6FFE4", Offset = "0x1C6FFE4", VA = "0x1C6FFE4")]
		public ES3Type_ColorOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0x1C700B4", Offset = "0x1C700B4", VA = "0x1C700B4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A93")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A94")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000155")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F37C4", Offset = "0x4F37C4")]
	public class ES3Type_EmissionModule : ES3Type
	{
		[Token(Token = "0x400086E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0x1C708F0", Offset = "0x1C708F0", VA = "0x1C708F0")]
		public ES3Type_EmissionModule()
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0x1C709C0", Offset = "0x1C709C0", VA = "0x1C709C0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A98")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A99")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000156")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F38AC", Offset = "0x4F38AC")]
	public class ES3Type_ExternalForcesModule : ES3Type
	{
		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0x1C70DF8", Offset = "0x1C70DF8", VA = "0x1C70DF8")]
		public ES3Type_ExternalForcesModule()
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0x1C70EC8", Offset = "0x1C70EC8", VA = "0x1C70EC8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A9D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000A9E")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000157")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F394C", Offset = "0x4F394C")]
	public class ES3Type_Flare : ES3Type
	{
		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0x1C710A8", Offset = "0x1C710A8", VA = "0x1C710A8")]
		public ES3Type_Flare()
		{
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0x1C71178", Offset = "0x1C71178", VA = "0x1C71178", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AA3")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class ES3Type_FlareArray : ES3ArrayType
	{
		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1C71264", Offset = "0x1C71264", VA = "0x1C71264")]
		public ES3Type_FlareArray()
		{
		}
	}
	[Token(Token = "0x2000159")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F39D4", Offset = "0x4F39D4")]
	public class ES3Type_Font : ES3UnityObjectType
	{
		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1C7135C", Offset = "0x1C7135C", VA = "0x1C7135C")]
		public ES3Type_Font()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x1C71430", Offset = "0x1C71430", VA = "0x1C71430", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA8")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000AA9")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200015A")]
	public class ES3Type_FontArray : ES3ArrayType
	{
		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x1C71580", Offset = "0x1C71580", VA = "0x1C71580")]
		public ES3Type_FontArray()
		{
		}
	}
	[Token(Token = "0x200015B")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F3A74", Offset = "0x4F3A74")]
	public class ES3Type_ForceOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x1C71678", Offset = "0x1C71678", VA = "0x1C71678")]
		public ES3Type_ForceOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1C71748", Offset = "0x1C71748", VA = "0x1C71748", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AAE")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AAF")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200015C")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F3BBC", Offset = "0x4F3BBC")]
	public class ES3Type_GameObject : ES3UnityObjectType
	{
		[Token(Token = "0x4000875")]
		private const string prefabPropertyName = "es3Prefab";

		[Token(Token = "0x4000876")]
		private const string transformPropertyName = "transformID";

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1C71C0C", Offset = "0x1C71C0C", VA = "0x1C71C0C")]
		public ES3Type_GameObject()
		{
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1C71CE0", Offset = "0x1C71CE0", VA = "0x1C71CE0", Slot = "13")]
		public override void WriteObject(object obj, ES3Writer writer, ES3.ReferenceMode mode)
		{
		}

		[Token(Token = "0x6000AB3")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AB4")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x1C72764", Offset = "0x1C72764", VA = "0x1C72764")]
		private GameObject CreateNewGameObject(ES3ReferenceMgrBase refMgr, long id)
		{
			return null;
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x1C72440", Offset = "0x1C72440", VA = "0x1C72440")]
		public static List<GameObject> GetChildren(GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x1C72820", Offset = "0x1C72820", VA = "0x1C72820", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AB8")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000AB9")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200015D")]
	public class ES3Type_GameObjectArray : ES3ArrayType
	{
		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x1C72828", Offset = "0x1C72828", VA = "0x1C72828")]
		public ES3Type_GameObjectArray()
		{
		}
	}
	[Token(Token = "0x200015E")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F3CD4", Offset = "0x4F3CD4")]
	public class ES3Type_Gradient : ES3Type
	{
		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1C72920", Offset = "0x1C72920", VA = "0x1C72920")]
		public ES3Type_Gradient()
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x1C729F0", Offset = "0x1C729F0", VA = "0x1C729F0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ABE")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ABF")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200015F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F3D8C", Offset = "0x4F3D8C")]
	public class ES3Type_GradientAlphaKey : ES3Type
	{
		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1C72BC0", Offset = "0x1C72BC0", VA = "0x1C72BC0")]
		public ES3Type_GradientAlphaKey()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1C72C90", Offset = "0x1C72C90", VA = "0x1C72C90", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC3")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000160")]
	public class ES3Type_GradientAlphaKeyArray : ES3ArrayType
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1C72E1C", Offset = "0x1C72E1C", VA = "0x1C72E1C")]
		public ES3Type_GradientAlphaKeyArray()
		{
		}
	}
	[Token(Token = "0x2000161")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F3E2C", Offset = "0x4F3E2C")]
	public class ES3Type_GradientColorKey : ES3Type
	{
		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x1C72F14", Offset = "0x1C72F14", VA = "0x1C72F14")]
		public ES3Type_GradientColorKey()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1C72FE4", Offset = "0x1C72FE4", VA = "0x1C72FE4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC8")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000162")]
	public class ES3Type_GradientColorKeyArray : ES3ArrayType
	{
		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1C731A4", Offset = "0x1C731A4", VA = "0x1C731A4")]
		public ES3Type_GradientColorKeyArray()
		{
		}
	}
	[Token(Token = "0x2000163")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F3ECC", Offset = "0x4F3ECC")]
	public class ES3Type_InheritVelocityModule : ES3Type
	{
		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1C7329C", Offset = "0x1C7329C", VA = "0x1C7329C")]
		public ES3Type_InheritVelocityModule()
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1C7336C", Offset = "0x1C7336C", VA = "0x1C7336C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ACD")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000ACE")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000164")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F3F9C", Offset = "0x4F3F9C")]
	public class ES3Type_Keyframe : ES3Type
	{
		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1C73900", Offset = "0x1C73900", VA = "0x1C73900")]
		public ES3Type_Keyframe()
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1C739D0", Offset = "0x1C739D0", VA = "0x1C739D0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AD2")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000165")]
	public class ES3Type_KeyframeArray : ES3ArrayType
	{
		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x1C73C88", Offset = "0x1C73C88", VA = "0x1C73C88")]
		public ES3Type_KeyframeArray()
		{
		}
	}
	[Token(Token = "0x2000166")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F406C", Offset = "0x4F406C")]
	public class ES3Type_LayerMask : ES3Type
	{
		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1C73D80", Offset = "0x1C73D80", VA = "0x1C73D80")]
		public ES3Type_LayerMask()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x1C73E50", Offset = "0x1C73E50", VA = "0x1C73E50", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AD7")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000167")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F4124", Offset = "0x4F4124")]
	public class ES3Type_Light : ES3ComponentType
	{
		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1C73F9C", Offset = "0x1C73F9C", VA = "0x1C73F9C")]
		public ES3Type_Light()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1C74070", Offset = "0x1C74070", VA = "0x1C74070", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ADB")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000168")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F43A4", Offset = "0x4F43A4")]
	public class ES3Type_LightsModule : ES3Type
	{
		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1C749DC", Offset = "0x1C749DC", VA = "0x1C749DC")]
		public ES3Type_LightsModule()
		{
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1C74AAC", Offset = "0x1C74AAC", VA = "0x1C74AAC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ADF")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AE0")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000169")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F4534", Offset = "0x4F4534")]
	public class ES3Type_LimitVelocityOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x1C75084", Offset = "0x1C75084", VA = "0x1C75084")]
		public ES3Type_LimitVelocityOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x1C75154", Offset = "0x1C75154", VA = "0x1C75154", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE4")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AE5")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016A")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F46C4", Offset = "0x4F46C4")]
	public class ES3Type_MainModule : ES3Type
	{
		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0x1C75748", Offset = "0x1C75748", VA = "0x1C75748")]
		public ES3Type_MainModule()
		{
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0x1C75818", Offset = "0x1C75818", VA = "0x1C75818", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE9")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AEA")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016B")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F4AAC", Offset = "0x4F4AAC")]
	public class ES3Type_Material : ES3UnityObjectType
	{
		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0x1C768D8", Offset = "0x1C768D8", VA = "0x1C768D8")]
		public ES3Type_Material()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0x1C769AC", Offset = "0x1C769AC", VA = "0x1C769AC", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AEE")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AEF")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200016C")]
	public class ES3Type_MaterialArray : ES3ArrayType
	{
		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0x1C7E9B8", Offset = "0x1C7E9B8", VA = "0x1C7E9B8")]
		public ES3Type_MaterialArray()
		{
		}
	}
	[Token(Token = "0x200016D")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F4B94", Offset = "0x4F4B94")]
	public class ES3Type_Matrix4x4 : ES3Type
	{
		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0x1C7EAB0", Offset = "0x1C7EAB0", VA = "0x1C7EAB0")]
		public ES3Type_Matrix4x4()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0x1C7EB80", Offset = "0x1C7EB80", VA = "0x1C7EB80", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF4")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200016E")]
	public class ES3Type_Matrix4x4Array : ES3ArrayType
	{
		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0x1C7EE7C", Offset = "0x1C7EE7C", VA = "0x1C7EE7C")]
		public ES3Type_Matrix4x4Array()
		{
		}
	}
	[Token(Token = "0x200016F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F4C64", Offset = "0x4F4C64")]
	public class ES3Type_Mesh : ES3UnityObjectType
	{
		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0x1C7EF74", Offset = "0x1C7EF74", VA = "0x1C7EF74")]
		public ES3Type_Mesh()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0x1C7F048", Offset = "0x1C7F048", VA = "0x1C7F048", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF9")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AFA")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000170")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F4E24", Offset = "0x4F4E24")]
	public class ES3Type_MinMaxCurve : ES3Type
	{
		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0x1C808DC", Offset = "0x1C808DC", VA = "0x1C808DC")]
		public ES3Type_MinMaxCurve()
		{
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0x1C809AC", Offset = "0x1C809AC", VA = "0x1C809AC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Preserve]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000AFF")]
		[Preserve]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000171")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F4F54", Offset = "0x4F4F54")]
	public class ES3Type_MinMaxGradient : ES3Type
	{
		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0x1C80D80", Offset = "0x1C80D80", VA = "0x1C80D80")]
		public ES3Type_MinMaxGradient()
		{
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0x1C80E50", Offset = "0x1C80E50", VA = "0x1C80E50", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B03")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000172")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F506C", Offset = "0x4F506C")]
	public class ES3Type_NoiseModule : ES3Type
	{
		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0x1C811E8", Offset = "0x1C811E8", VA = "0x1C811E8")]
		public ES3Type_NoiseModule()
		{
		}

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0x1C812B8", Offset = "0x1C812B8", VA = "0x1C812B8", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B07")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B08")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000173")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F5364", Offset = "0x4F5364")]
	public class ES3Type_PhysicMaterial : ES3ObjectType
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0x1C82A74", Offset = "0x1C82A74", VA = "0x1C82A74")]
		public ES3Type_PhysicMaterial()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0x1C82B44", Offset = "0x1C82B44", VA = "0x1C82B44", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B0C")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B0D")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000174")]
	public class ES3Type_PhysicMaterialArray : ES3ArrayType
	{
		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0x1C82E20", Offset = "0x1C82E20", VA = "0x1C82E20")]
		public ES3Type_PhysicMaterialArray()
		{
		}
	}
	[Token(Token = "0x2000175")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F544C", Offset = "0x4F544C")]
	public class ES3Type_PhysicsMaterial2D : ES3ObjectType
	{
		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0x1C82F18", Offset = "0x1C82F18", VA = "0x1C82F18")]
		public ES3Type_PhysicsMaterial2D()
		{
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0x1C82FE8", Offset = "0x1C82FE8", VA = "0x1C82FE8", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B12")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B13")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000176")]
	public class ES3Type_PhysicsMaterial2DArray : ES3ArrayType
	{
		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0x1C83190", Offset = "0x1C83190", VA = "0x1C83190")]
		public ES3Type_PhysicsMaterial2DArray()
		{
		}
	}
	[Token(Token = "0x2000177")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F54EC", Offset = "0x4F54EC")]
	public class ES3Type_Quaternion : ES3Type
	{
		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x1C83A68", Offset = "0x1C83A68", VA = "0x1C83A68")]
		public ES3Type_Quaternion()
		{
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x1C83B38", Offset = "0x1C83B38", VA = "0x1C83B38", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B18")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000178")]
	public class ES3Type_QuaternionArray : ES3ArrayType
	{
		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1C83DA0", Offset = "0x1C83DA0", VA = "0x1C83DA0")]
		public ES3Type_QuaternionArray()
		{
		}
	}
	[Token(Token = "0x2000179")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F55BC", Offset = "0x4F55BC")]
	public class ES3Type_Rect : ES3Type
	{
		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1C83E98", Offset = "0x1C83E98", VA = "0x1C83E98")]
		public ES3Type_Rect()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x1C83F68", Offset = "0x1C83F68", VA = "0x1C83F68", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B1D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200017A")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F568C", Offset = "0x4F568C")]
	public class ES3Type_RectTransform : ES3ComponentType
	{
		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x1C84204", Offset = "0x1C84204", VA = "0x1C84204")]
		public ES3Type_RectTransform()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x1C842D8", Offset = "0x1C842D8", VA = "0x1C842D8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B21")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017B")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F581C", Offset = "0x4F581C")]
	public class ES3Type_RotationBySpeedModule : ES3Type
	{
		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1C8497C", Offset = "0x1C8497C", VA = "0x1C8497C")]
		public ES3Type_RotationBySpeedModule()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1C84A4C", Offset = "0x1C84A4C", VA = "0x1C84A4C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B25")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B26")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017C")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F5964", Offset = "0x4F5964")]
	public class ES3Type_RotationOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x177E080", Offset = "0x177E080", VA = "0x177E080")]
		public ES3Type_RotationOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x177E154", Offset = "0x177E154", VA = "0x177E154", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B2A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B2B")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017D")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F5A94", Offset = "0x4F5A94")]
	public class ES3Type_Shader : ES3Type
	{
		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x177E5D8", Offset = "0x177E5D8", VA = "0x177E5D8")]
		public ES3Type_Shader()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x177E6AC", Offset = "0x177E6AC", VA = "0x177E6AC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B2F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B30")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class ES3Type_ShaderArray : ES3ArrayType
	{
		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x177E864", Offset = "0x177E864", VA = "0x177E864")]
		public ES3Type_ShaderArray()
		{
		}
	}
	[Token(Token = "0x200017F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F5B34", Offset = "0x4F5B34")]
	public class ES3Type_ShapeModule : ES3Type
	{
		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x177E954", Offset = "0x177E954", VA = "0x177E954")]
		public ES3Type_ShapeModule()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x177EA28", Offset = "0x177EA28", VA = "0x177EA28", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B35")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B36")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000180")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F5D6C", Offset = "0x4F5D6C")]
	public class ES3Type_SizeBySpeedModule : ES3Type
	{
		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x177F2D0", Offset = "0x177F2D0", VA = "0x177F2D0")]
		public ES3Type_SizeBySpeedModule()
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x177F3A4", Offset = "0x177F3A4", VA = "0x177F3A4", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B3A")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B3B")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000181")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F5EE4", Offset = "0x4F5EE4")]
	public class ES3Type_SizeOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x177F988", Offset = "0x177F988", VA = "0x177F988")]
		public ES3Type_SizeOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x177FA5C", Offset = "0x177FA5C", VA = "0x177FA5C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B3F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B40")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000182")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F6044", Offset = "0x4F6044")]
	public class ES3Type_SkinnedMeshRenderer : ES3ComponentType
	{
		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x177FFA0", Offset = "0x177FFA0", VA = "0x177FFA0")]
		public ES3Type_SkinnedMeshRenderer()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x1780074", Offset = "0x1780074", VA = "0x1780074", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B44")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class ES3Type_SkinnedMeshRendererArray : ES3ArrayType
	{
		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0x1780AB8", Offset = "0x1780AB8", VA = "0x1780AB8")]
		public ES3Type_SkinnedMeshRendererArray()
		{
		}
	}
	[Token(Token = "0x2000184")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F62DC", Offset = "0x4F62DC")]
	public class ES3Type_Sprite : ES3UnityObjectType
	{
		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0x178103C", Offset = "0x178103C", VA = "0x178103C")]
		public ES3Type_Sprite()
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0x1781148", Offset = "0x1781148", VA = "0x1781148", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B49")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B4A")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000185")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F63C4", Offset = "0x4F63C4")]
	public class ES3Type_SpriteRenderer : ES3ComponentType
	{
		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0x17814FC", Offset = "0x17814FC", VA = "0x17814FC")]
		public ES3Type_SpriteRenderer()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0x17815D0", Offset = "0x17815D0", VA = "0x17815D0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B4E")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000186")]
	public class ES3Type_SpriteRendererArray : ES3ArrayType
	{
		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B50")]
		[Address(RVA = "0x1781F68", Offset = "0x1781F68", VA = "0x1781F68")]
		public ES3Type_SpriteRendererArray()
		{
		}
	}
	[Token(Token = "0x2000187")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F6614", Offset = "0x4F6614")]
	public class ES3Type_SubEmittersModule : ES3Type
	{
		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x1782148", Offset = "0x1782148", VA = "0x1782148")]
		public ES3Type_SubEmittersModule()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x178221C", Offset = "0x178221C", VA = "0x178221C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B53")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B54")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000188")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F66CC", Offset = "0x4F66CC")]
	public class ES3Type_Texture : ES3Type
	{
		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x1782DC0", Offset = "0x1782DC0", VA = "0x1782DC0")]
		public ES3Type_Texture()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x1782E94", Offset = "0x1782E94", VA = "0x1782E94", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B58")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B59")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000189")]
	public class ES3Type_TextureArray : ES3ArrayType
	{
		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x17836D0", Offset = "0x17836D0", VA = "0x17836D0")]
		public ES3Type_TextureArray()
		{
		}
	}
	[Token(Token = "0x200018A")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F67B4", Offset = "0x4F67B4")]
	public class ES3Type_Texture2D : ES3UnityObjectType
	{
		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x1783040", Offset = "0x1783040", VA = "0x1783040")]
		public ES3Type_Texture2D()
		{
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x1783124", Offset = "0x1783124", VA = "0x1783124", Slot = "10")]
		protected override void WriteUnityObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B5E")]
		protected override void ReadUnityObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B5F")]
		protected override object ReadUnityObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200018B")]
	public class ES3Type_Texture2DArray : ES3ArrayType
	{
		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0x17835E0", Offset = "0x17835E0", VA = "0x17835E0")]
		public ES3Type_Texture2DArray()
		{
		}
	}
	[Token(Token = "0x200018C")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F689C", Offset = "0x4F689C")]
	public class ES3Type_TextureSheetAnimationModule : ES3Type
	{
		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0x17837C0", Offset = "0x17837C0", VA = "0x17837C0")]
		public ES3Type_TextureSheetAnimationModule()
		{
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0x1783894", Offset = "0x1783894", VA = "0x1783894", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B64")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B65")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200018D")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F6A5C", Offset = "0x4F6A5C")]
	public class ES3Type_TrailModule : ES3Type
	{
		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0x1783E9C", Offset = "0x1783E9C", VA = "0x1783E9C")]
		public ES3Type_TrailModule()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0x1783F70", Offset = "0x1783F70", VA = "0x1783F70", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B69")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B6A")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200018E")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F6C34", Offset = "0x4F6C34")]
	public class ES3Type_TriggerModule : ES3Type
	{
		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0x17849EC", Offset = "0x17849EC", VA = "0x17849EC")]
		public ES3Type_TriggerModule()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0x1784AC0", Offset = "0x1784AC0", VA = "0x1784AC0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B6E")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B6F")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200018F")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F6D34", Offset = "0x4F6D34")]
	public class ES3Type_Vector2 : ES3Type
	{
		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0x1785098", Offset = "0x1785098", VA = "0x1785098")]
		public ES3Type_Vector2()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0x178516C", Offset = "0x178516C", VA = "0x178516C", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B73")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000190")]
	public class ES3Type_Vector2Array : ES3ArrayType
	{
		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0x17852F8", Offset = "0x17852F8", VA = "0x17852F8")]
		public ES3Type_Vector2Array()
		{
		}
	}
	[Token(Token = "0x2000191")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F6DD4", Offset = "0x4F6DD4")]
	public class ES3Type_Vector2Int : ES3Type
	{
		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B76")]
		[Address(RVA = "0x17853E8", Offset = "0x17853E8", VA = "0x17853E8")]
		public ES3Type_Vector2Int()
		{
		}

		[Token(Token = "0x6000B77")]
		[Address(RVA = "0x17854BC", Offset = "0x17854BC", VA = "0x17854BC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B78")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000192")]
	public class ES3Type_Vector2IntArray : ES3ArrayType
	{
		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0x1785680", Offset = "0x1785680", VA = "0x1785680")]
		public ES3Type_Vector2IntArray()
		{
		}
	}
	[Token(Token = "0x2000193")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F6E74", Offset = "0x4F6E74")]
	public class ES3Type_Vector3 : ES3Type
	{
		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0x1785770", Offset = "0x1785770", VA = "0x1785770")]
		public ES3Type_Vector3()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0x1785844", Offset = "0x1785844", VA = "0x1785844", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B7D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000194")]
	public class ES3Type_Vector3Array : ES3ArrayType
	{
		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1785A44", Offset = "0x1785A44", VA = "0x1785A44")]
		public ES3Type_Vector3Array()
		{
		}
	}
	[Token(Token = "0x2000195")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F6F2C", Offset = "0x4F6F2C")]
	public class ES3Type_Vector3Int : ES3Type
	{
		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1785B34", Offset = "0x1785B34", VA = "0x1785B34")]
		public ES3Type_Vector3Int()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x1785C08", Offset = "0x1785C08", VA = "0x1785C08", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B82")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000196")]
	public class ES3Type_Vector3IntArray : ES3ArrayType
	{
		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1785E44", Offset = "0x1785E44", VA = "0x1785E44")]
		public ES3Type_Vector3IntArray()
		{
		}
	}
	[Token(Token = "0x2000197")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F6FE4", Offset = "0x4F6FE4")]
	public class ES3Type_Vector4 : ES3Type
	{
		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1785F34", Offset = "0x1785F34", VA = "0x1785F34")]
		public ES3Type_Vector4()
		{
		}

		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1786008", Offset = "0x1786008", VA = "0x1786008", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B87")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x178626C", Offset = "0x178626C", VA = "0x178626C")]
		public static bool Equals(Vector4 a, Vector4 b)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000198")]
	public class ES3Type_Vector4Array : ES3ArrayType
	{
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x17863CC", Offset = "0x17863CC", VA = "0x17863CC")]
		public ES3Type_Vector4Array()
		{
		}
	}
	[Token(Token = "0x2000199")]
	[AttributeAttribute(Name = "ES3PropertiesAttribute", RVA = "0x4F70B4", Offset = "0x4F70B4")]
	public class ES3Type_VelocityOverLifetimeModule : ES3Type
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x17864BC", Offset = "0x17864BC", VA = "0x17864BC")]
		public ES3Type_VelocityOverLifetimeModule()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x1786590", Offset = "0x1786590", VA = "0x1786590", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B8D")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}

		[Token(Token = "0x6000B8E")]
		public override void ReadInto<T>(ES3Reader reader, object obj)
		{
		}
	}
}
namespace ES3Internal
{
	[Token(Token = "0x200019A")]
	public static class ES3Hash
	{
		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xF76664", Offset = "0xF76664", VA = "0xF76664")]
		public static string SHA1Hash(string input)
		{
			return null;
		}
	}
	[Token(Token = "0x200019B")]
	public abstract class EncryptionAlgorithm
	{
		[Token(Token = "0x6000B91")]
		public abstract void Encrypt(Stream input, Stream output, string password, int bufferSize);

		[Token(Token = "0x6000B92")]
		public abstract void Decrypt(Stream input, Stream output, string password, int bufferSize);

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xF75B78", Offset = "0xF75B78", VA = "0xF75B78")]
		protected static void CopyStream(Stream input, Stream output, int bufferSize)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xF760D0", Offset = "0xF760D0", VA = "0xF760D0")]
		protected EncryptionAlgorithm()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class AESEncryptionAlgorithm : EncryptionAlgorithm
	{
		[Token(Token = "0x40008B5")]
		private const int ivSize = 16;

		[Token(Token = "0x40008B6")]
		private const int keySize = 16;

		[Token(Token = "0x40008B7")]
		private const int pwIterations = 100;

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xF756C8", Offset = "0xF756C8", VA = "0xF756C8", Slot = "4")]
		public override void Encrypt(Stream input, Stream output, string password, int bufferSize)
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xF75C58", Offset = "0xF75C58", VA = "0xF75C58", Slot = "5")]
		public override void Decrypt(Stream input, Stream output, string password, int bufferSize)
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xF760C8", Offset = "0xF760C8", VA = "0xF760C8")]
		public AESEncryptionAlgorithm()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class UnbufferedCryptoStream : MemoryStream
	{
		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private readonly Stream stream;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly bool isReadStream;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string password;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int bufferSize;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private EncryptionAlgorithm alg;

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xF7F79C", Offset = "0xF7F79C", VA = "0xF7F79C")]
		public UnbufferedCryptoStream(Stream stream, bool isReadStream, string password, int bufferSize, EncryptionAlgorithm alg)
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xF8156C", Offset = "0xF8156C", VA = "0xF8156C", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x200019E")]
	public struct ES3Data
	{
		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ES3Type type;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte[] bytes;

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0x6C855C", Offset = "0x6C855C", VA = "0x6C855C")]
		public ES3Data(Type type, byte[] bytes)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0x6C8564", Offset = "0x6C8564", VA = "0x6C8564")]
		public ES3Data(ES3Type type, byte[] bytes)
		{
		}
	}
	[Token(Token = "0x200019F")]
	public static class ES3IO
	{
		[Token(Token = "0x200027B")]
		public enum ES3FileMode
		{
			[Token(Token = "0x4000BDE")]
			Read,
			[Token(Token = "0x4000BDF")]
			Write,
			[Token(Token = "0x4000BE0")]
			Append
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xF6DB5C", Offset = "0xF6DB5C", VA = "0xF6DB5C")]
		public static DateTime GetTimestamp(string filePath)
		{
			return default(DateTime);
		}

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xF699A8", Offset = "0xF699A8", VA = "0xF699A8")]
		public static string GetExtension(string path)
		{
			return null;
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xF6AA4C", Offset = "0xF6AA4C", VA = "0xF6AA4C")]
		public static void DeleteFile(string filePath)
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xF6ADF4", Offset = "0xF6ADF4", VA = "0xF6ADF4")]
		public static bool FileExists(string filePath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xF6B1C0", Offset = "0xF6B1C0", VA = "0xF6B1C0")]
		public static void MoveFile(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xF6ADFC", Offset = "0xF6ADFC", VA = "0xF6ADFC")]
		public static void CopyFile(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xF6B538", Offset = "0xF6B538", VA = "0xF6B538")]
		public static void MoveDirectory(string sourcePath, string destPath)
		{
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xF76640", Offset = "0xF76640", VA = "0xF76640")]
		public static void CreateDirectory(string directoryPath)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xF6B500", Offset = "0xF6B500", VA = "0xF6B500")]
		public static bool DirectoryExists(string directoryPath)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xF764F4", Offset = "0xF764F4", VA = "0xF764F4")]
		public static string GetDirectoryPath(string path)
		{
			return null;
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xF6D17C", Offset = "0xF6D17C", VA = "0xF6D17C")]
		public static string[] GetDirectories(string path, bool getFullPaths = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xF6B508", Offset = "0xF6B508", VA = "0xF6B508")]
		public static void DeleteDirectory(string directoryPath)
		{
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xF6CDAC", Offset = "0xF6CDAC", VA = "0xF6CDAC")]
		public static string[] GetFiles(string path, bool getFullPaths = true)
		{
			return null;
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xF76820", Offset = "0xF76820", VA = "0xF76820")]
		public static byte[] ReadAllBytes(string path)
		{
			return null;
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xF76828", Offset = "0xF76828", VA = "0xF76828")]
		public static void WriteAllBytes(string path, byte[] bytes)
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xF68BB8", Offset = "0xF68BB8", VA = "0xF68BB8")]
		public static void CommitBackup(ES3Settings settings)
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class ES3Prefab : MonoBehaviour
	{
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public long prefabId;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ES3RefIdDictionary localRefs;

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xF7A294", Offset = "0xF7A294", VA = "0xF7A294")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xF7A778", Offset = "0xF7A778", VA = "0xF7A778")]
		public long Get(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xF7A820", Offset = "0xF7A820", VA = "0xF7A820")]
		public long Add(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xF7A978", Offset = "0xF7A978", VA = "0xF7A978")]
		public Dictionary<long, long> GetReferences()
		{
			return null;
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xF7ABB8", Offset = "0xF7ABB8", VA = "0xF7ABB8")]
		public void ApplyReferences(Dictionary<long, long> localToGlobal)
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xF7A908", Offset = "0xF7A908", VA = "0xF7A908")]
		public static long GetNewRefID()
		{
			return default(long);
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xF7B0FC", Offset = "0xF7B0FC", VA = "0xF7B0FC")]
		public ES3Prefab()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A1")]
	[DisallowMultipleComponent]
	public abstract class ES3ReferenceMgrBase : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200027C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F83F0", Offset = "0x4F83F0")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BE1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BE2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<KeyValuePair<long, UnityEngine.Object>, bool> <>9__26_0;

			[Token(Token = "0x4000BE3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<KeyValuePair<long, UnityEngine.Object>, long> <>9__26_1;

			[Token(Token = "0x6000E7C")]
			[Address(RVA = "0xF7C630", Offset = "0xF7C630", VA = "0xF7C630")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E7D")]
			[Address(RVA = "0xF7C638", Offset = "0xF7C638", VA = "0xF7C638")]
			internal bool <RemoveNullValues>b__26_0(KeyValuePair<long, UnityEngine.Object> pair)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E7E")]
			[Address(RVA = "0xF7C6B8", Offset = "0xF7C6B8", VA = "0xF7C6B8")]
			internal long <RemoveNullValues>b__26_1(KeyValuePair<long, UnityEngine.Object> pair)
			{
				return default(long);
			}
		}

		[Token(Token = "0x40008C1")]
		public const string referencePropertyName = "_ES3Ref";

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ES3ReferenceMgrBase _current;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		private static System.Random rng;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[HideInInspector]
		public bool openReferences;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
		[HideInInspector]
		public bool openPrefabs;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		public ES3IdRefDictionary idRef;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private ES3RefIdDictionary _refId;

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ES3Prefab> prefabs;

		[Token(Token = "0x170000A7")]
		public static ES3ReferenceMgrBase Current
		{
			[Token(Token = "0x6000BB3")]
			[Address(RVA = "0xF7A490", Offset = "0xF7A490", VA = "0xF7A490")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A8")]
		public bool IsInitialised
		{
			[Token(Token = "0x6000BB4")]
			[Address(RVA = "0xF7B274", Offset = "0xF7B274", VA = "0xF7B274")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000A9")]
		public ES3RefIdDictionary refId
		{
			[Token(Token = "0x6000BB5")]
			[Address(RVA = "0xF7B2F0", Offset = "0xF7B2F0", VA = "0xF7B2F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB6")]
			[Address(RVA = "0xF7B4E4", Offset = "0xF7B4E4", VA = "0xF7B4E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xF7B4EC", Offset = "0xF7B4EC", VA = "0xF7B4EC")]
		public void Awake()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xF7B724", Offset = "0xF7B724", VA = "0xF7B724")]
		public void Merge(ES3ReferenceMgrBase otherMgr)
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xF7B96C", Offset = "0xF7B96C", VA = "0xF7B96C")]
		public long Get(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xF7BA1C", Offset = "0xF7BA1C", VA = "0xF7BA1C")]
		public UnityEngine.Object Get(long id)
		{
			return null;
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xF7BAD0", Offset = "0xF7BAD0", VA = "0xF7BAD0")]
		public ES3Prefab GetPrefab(long id)
		{
			return null;
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xF7BBC8", Offset = "0xF7BBC8", VA = "0xF7BBC8")]
		public long GetPrefab(ES3Prefab prefab)
		{
			return default(long);
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xF7A688", Offset = "0xF7A688", VA = "0xF7A688")]
		public long Add(UnityEngine.Object obj)
		{
			return default(long);
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xF7AE1C", Offset = "0xF7AE1C", VA = "0xF7AE1C")]
		public void Add(UnityEngine.Object obj, long id)
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xF7BCF4", Offset = "0xF7BCF4", VA = "0xF7BCF4")]
		public void AddPrefab(ES3Prefab prefab)
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xF7BDA0", Offset = "0xF7BDA0", VA = "0xF7BDA0")]
		public void Remove(UnityEngine.Object obj)
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xF7BEAC", Offset = "0xF7BEAC", VA = "0xF7BEAC")]
		public void Remove(long referenceID)
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xF7BFB8", Offset = "0xF7BFB8", VA = "0xF7BFB8")]
		public void RemoveNullValues()
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xF7C2DC", Offset = "0xF7C2DC", VA = "0xF7C2DC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xF7C378", Offset = "0xF7C378", VA = "0xF7C378")]
		public bool Contains(UnityEngine.Object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xF7C3F4", Offset = "0xF7C3F4", VA = "0xF7C3F4")]
		public bool Contains(long referenceID)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xF7C47C", Offset = "0xF7C47C", VA = "0xF7C47C")]
		public void ChangeId(long oldId, long newId)
		{
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xF7AF30", Offset = "0xF7AF30", VA = "0xF7AF30")]
		internal static long GetNewRefID()
		{
			return default(long);
		}

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xF7C51C", Offset = "0xF7C51C", VA = "0xF7C51C")]
		protected ES3ReferenceMgrBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A2")]
	public class ES3IdRefDictionary : ES3SerializableDictionary<long, UnityEngine.Object>
	{
		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xF76830", Offset = "0xF76830", VA = "0xF76830", Slot = "43")]
		protected override bool KeysAreEqual(long a, long b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xF76850", Offset = "0xF76850", VA = "0xF76850", Slot = "44")]
		protected override bool ValuesAreEqual(UnityEngine.Object a, UnityEngine.Object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xF768D4", Offset = "0xF768D4", VA = "0xF768D4")]
		public ES3IdRefDictionary()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001A3")]
	[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4F71F4", Offset = "0x4F71F4")]
	public class ES3RefIdDictionary : ES3SerializableDictionary<UnityEngine.Object, long>
	{
		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xF7B1D0", Offset = "0xF7B1D0", VA = "0xF7B1D0", Slot = "43")]
		protected override bool KeysAreEqual(UnityEngine.Object a, UnityEngine.Object b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xF7B254", Offset = "0xF7B254", VA = "0xF7B254", Slot = "44")]
		protected override bool ValuesAreEqual(long a, long b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xF7B174", Offset = "0xF7B174", VA = "0xF7B174")]
		public ES3RefIdDictionary()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	public static class ES3Reflection
	{
		[Token(Token = "0x200027D")]
		public struct ES3ReflectedMember
		{
			[Token(Token = "0x4000BE4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			private FieldInfo fieldInfo;

			[Token(Token = "0x4000BE5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			private PropertyInfo propertyInfo;

			[Token(Token = "0x4000BE6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public bool isProperty;

			[Token(Token = "0x17000107")]
			public bool IsNull
			{
				[Token(Token = "0x6000E7F")]
				[Address(RVA = "0x6C85BC", Offset = "0x6C85BC", VA = "0x6C85BC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x17000108")]
			public string Name
			{
				[Token(Token = "0x6000E80")]
				[Address(RVA = "0x6C85C4", Offset = "0x6C85C4", VA = "0x6C85C4")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000109")]
			public Type MemberType
			{
				[Token(Token = "0x6000E81")]
				[Address(RVA = "0x6C85CC", Offset = "0x6C85CC", VA = "0x6C85CC")]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010A")]
			public bool IsPublic
			{
				[Token(Token = "0x6000E82")]
				[Address(RVA = "0x6C85D4", Offset = "0x6C85D4", VA = "0x6C85D4")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x1700010B")]
			public bool IsProtected
			{
				[Token(Token = "0x6000E83")]
				[Address(RVA = "0x6C85DC", Offset = "0x6C85DC", VA = "0x6C85DC")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000E84")]
			[Address(RVA = "0x6C85E4", Offset = "0x6C85E4", VA = "0x6C85E4")]
			public ES3ReflectedMember(object fieldPropertyInfo)
			{
			}

			[Token(Token = "0x6000E85")]
			[Address(RVA = "0x6C85EC", Offset = "0x6C85EC", VA = "0x6C85EC")]
			public void SetValue(object obj, object value)
			{
			}

			[Token(Token = "0x6000E86")]
			[Address(RVA = "0x6C85F4", Offset = "0x6C85F4", VA = "0x6C85F4")]
			public object GetValue(object obj)
			{
				return null;
			}
		}

		[Token(Token = "0x200027E")]
		public class ES3ReflectedMethod
		{
			[Token(Token = "0x4000BE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private MethodInfo method;

			[Token(Token = "0x6000E87")]
			[Address(RVA = "0xF7EC50", Offset = "0xF7EC50", VA = "0xF7EC50")]
			public ES3ReflectedMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes)
			{
			}

			[Token(Token = "0x6000E88")]
			[Address(RVA = "0xF7F5F4", Offset = "0xF7F5F4", VA = "0xF7F5F4")]
			public object Invoke(object obj, [Optional] object[] parameters)
			{
				return null;
			}
		}

		[Token(Token = "0x200027F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8400", Offset = "0x4F8400")]
		private sealed class <>c__DisplayClass24_0
		{
			[Token(Token = "0x4000BE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Type derivedType;

			[Token(Token = "0x6000E89")]
			[Address(RVA = "0xF7EB30", Offset = "0xF7EB30", VA = "0xF7EB30")]
			public <>c__DisplayClass24_0()
			{
			}

			[Token(Token = "0x6000E8A")]
			[Address(RVA = "0xF7F2BC", Offset = "0xF7F2BC", VA = "0xF7F2BC")]
			internal bool <GetDerivedTypes>b__2(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x2000280")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8410", Offset = "0x4F8410")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public static Func<Assembly, IEnumerable<Type>> <>9__24_0;

			[Token(Token = "0x4000BEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Assembly, Type, <>f__AnonymousType0<Assembly, Type>> <>9__24_1;

			[Token(Token = "0x4000BEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public static Func<<>f__AnonymousType0<Assembly, Type>, Type> <>9__24_3;

			[Token(Token = "0x6000E8C")]
			[Address(RVA = "0xF7F1AC", Offset = "0xF7F1AC", VA = "0xF7F1AC")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E8D")]
			[Address(RVA = "0xF7F1B4", Offset = "0xF7F1B4", VA = "0xF7F1B4")]
			internal IEnumerable<Type> <GetDerivedTypes>b__24_0(Assembly assembly)
			{
				return null;
			}

			[Token(Token = "0x6000E8E")]
			[Address(RVA = "0xF7F1E4", Offset = "0xF7F1E4", VA = "0xF7F1E4")]
			internal <>f__AnonymousType0<Assembly, Type> <GetDerivedTypes>b__24_1(Assembly assembly, Type type)
			{
				return null;
			}

			[Token(Token = "0x6000E8F")]
			[Address(RVA = "0xF7F268", Offset = "0xF7F268", VA = "0xF7F268")]
			internal Type <GetDerivedTypes>b__24_3(<>f__AnonymousType0<Assembly, Type> <>h__TransparentIdentifier0)
			{
				return null;
			}
		}

		[Token(Token = "0x40008C9")]
		public const string memberFieldPrefix = "m_";

		[Token(Token = "0x40008CA")]
		public const string componentTagFieldName = "tag";

		[Token(Token = "0x40008CB")]
		public const string componentNameFieldName = "name";

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Type serializableAttributeType;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly Type serializeFieldAttributeType;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static readonly Type obsoleteAttributeType;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static readonly Type nonSerializedAttributeType;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Type[] EmptyTypes;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static Assembly[] _assemblies;

		[Token(Token = "0x170000AA")]
		private static Assembly[] Assemblies
		{
			[Token(Token = "0x6000BD0")]
			[Address(RVA = "0xF7C708", Offset = "0xF7C708", VA = "0xF7C708")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xF7CA38", Offset = "0xF7CA38", VA = "0xF7CA38")]
		public static Type[] GetElementTypes(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xF7CC5C", Offset = "0xF7CC5C", VA = "0xF7CC5C")]
		public static List<FieldInfo> GetSerializableFields(Type type, bool safe = true, [Optional] string[] memberNames)
		{
			return null;
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xF7D4C4", Offset = "0xF7D4C4", VA = "0xF7D4C4")]
		public static List<PropertyInfo> GetSerializableProperties(Type type, bool safe = true, [Optional] string[] memberNames)
		{
			return null;
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xF7D0EC", Offset = "0xF7D0EC", VA = "0xF7D0EC")]
		public static bool TypeIsSerializable(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xF7DD04", Offset = "0xF7DD04", VA = "0xF7DD04")]
		public static object CreateInstance(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xF7DEA4", Offset = "0xF7DEA4", VA = "0xF7DEA4")]
		public static object CreateInstance(Type type, params object[] args)
		{
			return null;
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xF7E04C", Offset = "0xF7E04C", VA = "0xF7E04C")]
		public static Array ArrayCreateInstance(Type type, int length)
		{
			return null;
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xF7E0E8", Offset = "0xF7E0E8", VA = "0xF7E0E8")]
		public static Array ArrayCreateInstance(Type type, int[] dimensions)
		{
			return null;
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xF7E0F0", Offset = "0xF7E0F0", VA = "0xF7E0F0")]
		public static Type MakeGenericType(Type type, Type genericParam)
		{
			return null;
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xF7E1CC", Offset = "0xF7E1CC", VA = "0xF7E1CC")]
		public static ES3ReflectedMember[] GetSerializableMembers(Type type, bool safe = true, [Optional] string[] memberNames)
		{
			return null;
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xF7E5E4", Offset = "0xF7E5E4", VA = "0xF7E5E4")]
		public static ES3ReflectedMember GetES3ReflectedProperty(Type type, string propertyName)
		{
			return default(ES3ReflectedMember);
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xF7E6CC", Offset = "0xF7E6CC", VA = "0xF7E6CC")]
		public static ES3ReflectedMember GetES3ReflectedMember(Type type, string fieldName)
		{
			return default(ES3ReflectedMember);
		}

		[Token(Token = "0x6000BDD")]
		public static IList<T> GetInstances<T>()
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xF7E7C4", Offset = "0xF7E7C4", VA = "0xF7E7C4")]
		public static IList<Type> GetDerivedTypes(Type derivedType)
		{
			return null;
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xF7D0B4", Offset = "0xF7D0B4", VA = "0xF7D0B4")]
		public static bool IsAssignableFrom(Type a, Type b)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xF7EB38", Offset = "0xF7EB38", VA = "0xF7EB38")]
		public static Type GetGenericTypeDefinition(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xF7CBFC", Offset = "0xF7CBFC", VA = "0xF7CBFC")]
		public static Type[] GetGenericArguments(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xF7EB68", Offset = "0xF7EB68", VA = "0xF7EB68")]
		public static int GetArrayRank(Type type)
		{
			return default(int);
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xF7EB98", Offset = "0xF7EB98", VA = "0xF7EB98")]
		public static string GetAssemblyQualifiedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xF7EBC8", Offset = "0xF7EBC8", VA = "0xF7EBC8")]
		public static ES3ReflectedMethod GetMethod(Type type, string methodName, Type[] genericParameters, Type[] parameterTypes)
		{
			return null;
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xF7DBB0", Offset = "0xF7DBB0", VA = "0xF7DBB0")]
		public static bool TypeIsArray(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xF7CC2C", Offset = "0xF7CC2C", VA = "0xF7CC2C")]
		public static Type GetElementType(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xF7ECC4", Offset = "0xF7ECC4", VA = "0xF7ECC4")]
		public static bool IsAbstract(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xF7ECEC", Offset = "0xF7ECEC", VA = "0xF7ECEC")]
		public static bool IsInterface(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xF7CBCC", Offset = "0xF7CBCC", VA = "0xF7CBCC")]
		public static bool IsGenericType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xF7DB88", Offset = "0xF7DB88", VA = "0xF7DB88")]
		public static bool IsValueType(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xF7ED14", Offset = "0xF7ED14", VA = "0xF7ED14")]
		public static bool IsEnum(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xF7DBD8", Offset = "0xF7DBD8", VA = "0xF7DBD8")]
		public static bool HasParameterlessConstructor(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BED")]
		[Address(RVA = "0xF7ED44", Offset = "0xF7ED44", VA = "0xF7ED44")]
		public static ConstructorInfo GetParameterlessConstructor(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xF7EDDC", Offset = "0xF7EDDC", VA = "0xF7EDDC")]
		public static string GetShortAssemblyQualifiedName(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xF7E698", Offset = "0xF7E698", VA = "0xF7E698")]
		public static PropertyInfo GetProperty(Type type, string propertyName)
		{
			return null;
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xF7E788", Offset = "0xF7E788", VA = "0xF7E788")]
		public static FieldInfo GetField(Type type, string fieldName)
		{
			return null;
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xF7DA70", Offset = "0xF7DA70", VA = "0xF7DA70")]
		public static bool IsPrimitive(Type type)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xF7D0A8", Offset = "0xF7D0A8", VA = "0xF7D0A8")]
		public static bool AttributeIsDefined(MemberInfo info, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xF7EF00", Offset = "0xF7EF00", VA = "0xF7EF00")]
		public static bool AttributeIsDefined(Type type, Type attributeType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xF7EF3C", Offset = "0xF7EF3C", VA = "0xF7EF3C")]
		public static bool ImplementsInterface(Type type, Type interfaceType)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20001A5")]
	public abstract class ES3SerializableDictionary<TKey, TVal> : Dictionary<TKey, TVal>, ISerializationCallbackReceiver
	{
		[Serializable]
		[Token(Token = "0x2000281")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8420", Offset = "0x4F8420")]
		private sealed class <>c
		{
			[Token(Token = "0x4000BED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4000BEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<TKey, TVal>, bool> <>9__6_0;

			[Token(Token = "0x4000BEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static Func<KeyValuePair<TKey, TVal>, TKey> <>9__6_1;

			[Token(Token = "0x6000E91")]
			public <>c()
			{
			}

			[Token(Token = "0x6000E92")]
			internal bool <RemoveNullValues>b__6_0(KeyValuePair<TKey, TVal> pair)
			{
				return default(bool);
			}

			[Token(Token = "0x6000E93")]
			internal TKey <RemoveNullValues>b__6_1(KeyValuePair<TKey, TVal> pair)
			{
				return (TKey)null;
			}
		}

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TKey> _Keys;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private List<TVal> _Values;

		[Token(Token = "0x6000BF6")]
		protected abstract bool KeysAreEqual(TKey a, TKey b);

		[Token(Token = "0x6000BF7")]
		protected abstract bool ValuesAreEqual(TVal a, TVal b);

		[Token(Token = "0x6000BF8")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6000BF9")]
		public void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6000BFA")]
		public int RemoveNullValues()
		{
			return default(int);
		}

		[Token(Token = "0x6000BFB")]
		public bool ChangeKey(TKey oldKey, TKey newKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BFC")]
		protected ES3SerializableDictionary()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	public class ES3JSONReader : ES3Reader
	{
		[Token(Token = "0x40008D4")]
		private const char endOfStreamChar = '\uffff';

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public StreamReader baseReader;

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xF76930", Offset = "0xF76930", VA = "0xF76930")]
		internal ES3JSONReader(Stream stream, ES3Settings settings, bool readHeaderAndFooter = true)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xF76B68", Offset = "0xF76B68", VA = "0xF76B68", Slot = "20")]
		public override string ReadPropertyName()
		{
			return null;
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xF7708C", Offset = "0xF7708C", VA = "0xF7708C", Slot = "21")]
		protected override Type ReadKeyPrefix(bool ignoreType = false)
		{
			return null;
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xF77254", Offset = "0xF77254", VA = "0xF77254", Slot = "22")]
		protected override void ReadKeySuffix()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xF77264", Offset = "0xF77264", VA = "0xF77264", Slot = "26")]
		internal override bool StartReadObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xF77558", Offset = "0xF77558", VA = "0xF77558", Slot = "27")]
		internal override void EndReadObject()
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xF77560", Offset = "0xF77560", VA = "0xF77560", Slot = "28")]
		internal override bool StartReadDictionary()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xF77570", Offset = "0xF77570", VA = "0xF77570", Slot = "29")]
		internal override void EndReadDictionary()
		{
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xF77574", Offset = "0xF77574", VA = "0xF77574", Slot = "30")]
		internal override bool StartReadDictionaryKey()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xF775A4", Offset = "0xF775A4", VA = "0xF775A4", Slot = "31")]
		internal override void EndReadDictionaryKey()
		{
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xF775AC", Offset = "0xF775AC", VA = "0xF775AC", Slot = "32")]
		internal override void StartReadDictionaryValue()
		{
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xF775B0", Offset = "0xF775B0", VA = "0xF775B0", Slot = "33")]
		internal override bool EndReadDictionaryValue()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C09")]
		[Address(RVA = "0xF776A0", Offset = "0xF776A0", VA = "0xF776A0", Slot = "34")]
		internal override bool StartReadCollection()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xF776A8", Offset = "0xF776A8", VA = "0xF776A8", Slot = "35")]
		internal override void EndReadCollection()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xF776AC", Offset = "0xF776AC", VA = "0xF776AC", Slot = "36")]
		internal override bool StartReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xF776DC", Offset = "0xF776DC", VA = "0xF776DC", Slot = "37")]
		internal override bool EndReadCollectionItem()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xF777CC", Offset = "0xF777CC", VA = "0xF777CC", Slot = "24")]
		internal override bool Goto(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xF77880", Offset = "0xF77880", VA = "0xF77880")]
		protected void Reset()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xF77968", Offset = "0xF77968", VA = "0xF77968")]
		private void ReadString(StreamWriter writer, bool skip = false)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xF77AC4", Offset = "0xF77AC4", VA = "0xF77AC4", Slot = "23")]
		internal override byte[] ReadElement(bool skip = false)
		{
			return null;
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xF77A58", Offset = "0xF77A58", VA = "0xF77A58")]
		private char ReadOrSkipChar(StreamWriter writer, bool skip)
		{
			return default(char);
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xF76D90", Offset = "0xF76D90", VA = "0xF76D90")]
		private char ReadCharIgnoreWhitespace()
		{
			return default(char);
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xF7726C", Offset = "0xF7726C", VA = "0xF7726C")]
		private bool ReadNullOrCharIgnoreWhitespace(char expectedChar)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xF76E7C", Offset = "0xF76E7C", VA = "0xF76E7C")]
		private char ReadCharIgnoreWhitespace(char expectedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xF780C0", Offset = "0xF780C0", VA = "0xF780C0")]
		private bool ReadQuotationMarkOrNullIgnoreWhitespace()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xF782E4", Offset = "0xF782E4", VA = "0xF782E4")]
		private char PeekCharIgnoreWhitespace(char expectedChar)
		{
			return default(char);
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xF76CF8", Offset = "0xF76CF8", VA = "0xF76CF8")]
		private char PeekCharIgnoreWhitespace()
		{
			return default(char);
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xF784F4", Offset = "0xF784F4", VA = "0xF784F4")]
		private void SkipWhiteSpace()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xF76A90", Offset = "0xF76A90", VA = "0xF76A90")]
		private void SkipOpeningBraceOfFile()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xF7808C", Offset = "0xF7808C", VA = "0xF7808C")]
		private static bool IsWhiteSpace(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xF78024", Offset = "0xF78024", VA = "0xF78024")]
		private static bool IsOpeningBrace(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xF78038", Offset = "0xF78038", VA = "0xF78038")]
		private static bool IsEndOfValue(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xF76D7C", Offset = "0xF76D7C", VA = "0xF76D7C")]
		private static bool IsTerminator(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xF76E58", Offset = "0xF76E58", VA = "0xF76E58")]
		private static bool IsQuotationMark(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xF78574", Offset = "0xF78574", VA = "0xF78574")]
		private static bool IsEndOfStream(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xF78588", Offset = "0xF78588", VA = "0xF78588")]
		private string GetValueString()
		{
			return null;
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xF786D0", Offset = "0xF786D0", VA = "0xF786D0", Slot = "18")]
		internal override string Read_string()
		{
			return null;
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xF788B0", Offset = "0xF788B0", VA = "0xF788B0", Slot = "8")]
		internal override char Read_char()
		{
			return default(char);
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xF78944", Offset = "0xF78944", VA = "0xF78944", Slot = "6")]
		internal override float Read_float()
		{
			return default(float);
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xF789D8", Offset = "0xF789D8", VA = "0xF789D8", Slot = "5")]
		internal override int Read_int()
		{
			return default(int);
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xF789F0", Offset = "0xF789F0", VA = "0xF789F0", Slot = "7")]
		internal override bool Read_bool()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xF78A78", Offset = "0xF78A78", VA = "0xF78A78", Slot = "9")]
		internal override decimal Read_decimal()
		{
			return default(decimal);
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xF78B44", Offset = "0xF78B44", VA = "0xF78B44", Slot = "10")]
		internal override double Read_double()
		{
			return default(double);
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xF78C08", Offset = "0xF78C08", VA = "0xF78C08", Slot = "11")]
		internal override long Read_long()
		{
			return default(long);
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xF78C20", Offset = "0xF78C20", VA = "0xF78C20", Slot = "12")]
		internal override ulong Read_ulong()
		{
			return default(ulong);
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xF78C38", Offset = "0xF78C38", VA = "0xF78C38", Slot = "17")]
		internal override uint Read_uint()
		{
			return default(uint);
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xF78C50", Offset = "0xF78C50", VA = "0xF78C50", Slot = "13")]
		internal override byte Read_byte()
		{
			return default(byte);
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xF78C6C", Offset = "0xF78C6C", VA = "0xF78C6C", Slot = "14")]
		internal override sbyte Read_sbyte()
		{
			return default(sbyte);
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xF78C88", Offset = "0xF78C88", VA = "0xF78C88", Slot = "15")]
		internal override short Read_short()
		{
			return default(short);
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xF78CA4", Offset = "0xF78CA4", VA = "0xF78CA4", Slot = "16")]
		internal override ushort Read_ushort()
		{
			return default(ushort);
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xF78CC0", Offset = "0xF78CC0", VA = "0xF78CC0", Slot = "19")]
		internal override byte[] Read_byteArray()
		{
			return null;
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xF78D54", Offset = "0xF78D54", VA = "0xF78D54", Slot = "25")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class ES3DefaultSettings : MonoBehaviour
	{
		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[SerializeField]
		public ES3SerializableSettings settings;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool addMgrToSceneAutomatically;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool autoUpdateReferences;

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xF76304", Offset = "0xF76304", VA = "0xF76304")]
		public ES3DefaultSettings()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public enum ES3FileMode
	{
		[Token(Token = "0x40008DA")]
		Read,
		[Token(Token = "0x40008DB")]
		Write,
		[Token(Token = "0x40008DC")]
		Append
	}
	[Token(Token = "0x20001A9")]
	public class ES3FileStream : FileStream
	{
		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isDisposed;

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xF76314", Offset = "0xF76314", VA = "0xF76314")]
		public ES3FileStream(string path, ES3FileMode fileMode, int bufferSize, bool useAsync)
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xF763EC", Offset = "0xF763EC", VA = "0xF763EC")]
		protected static string GetPath(string path, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xF764C0", Offset = "0xF764C0", VA = "0xF764C0")]
		protected static FileMode GetFileMode(ES3FileMode fileMode)
		{
			return default(FileMode);
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xF764E0", Offset = "0xF764E0", VA = "0xF764E0")]
		protected static FileAccess GetFileAccess(ES3FileMode fileMode)
		{
			return default(FileAccess);
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xF76648", Offset = "0xF76648", VA = "0xF76648", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001AA")]
	internal class ES3PlayerPrefsStream : MemoryStream
	{
		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string path;

		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool append;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		private bool isWriteStream;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		private bool isDisposed;

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xF79DD0", Offset = "0xF79DD0", VA = "0xF79DD0")]
		public ES3PlayerPrefsStream(string path)
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xF79F1C", Offset = "0xF79F1C", VA = "0xF79F1C")]
		public ES3PlayerPrefsStream(string path, int bufferSize, bool append = false)
		{
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xF79E0C", Offset = "0xF79E0C", VA = "0xF79E0C")]
		private static byte[] GetData(string path, bool isWriteStream)
		{
			return null;
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xF79F50", Offset = "0xF79F50", VA = "0xF79F50", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001AB")]
	internal class ES3ResourcesStream : MemoryStream
	{
		[Token(Token = "0x170000AB")]
		public bool Exists
		{
			[Token(Token = "0x6000C3B")]
			[Address(RVA = "0xF7F62C", Offset = "0xF7F62C", VA = "0xF7F62C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xF7F65C", Offset = "0xF7F65C", VA = "0xF7F65C")]
		public ES3ResourcesStream(string path)
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xF7F684", Offset = "0xF7F684", VA = "0xF7F684")]
		private static byte[] GetData(string path)
		{
			return null;
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xF7F794", Offset = "0xF7F794", VA = "0xF7F794", Slot = "16")]
		protected override void Dispose(bool disposing)
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public static class ES3Stream
	{
		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xF687F8", Offset = "0xF687F8", VA = "0xF687F8")]
		public static Stream CreateStream(ES3Settings settings, ES3FileMode fileMode)
		{
			return null;
		}

		[Token(Token = "0x6000C40")]
		[Address(RVA = "0xF7515C", Offset = "0xF7515C", VA = "0xF7515C")]
		public static Stream CreateStream(Stream stream, ES3Settings settings, ES3FileMode fileMode)
		{
			return null;
		}
	}
	[Token(Token = "0x20001AD")]
	public class ES3Member
	{
		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public string name;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Type type;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isProperty;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public ES3Reflection.ES3ReflectedMember reflectedMember;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool useReflection;

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xF79C98", Offset = "0xF79C98", VA = "0xF79C98")]
		public ES3Member(string name, Type type, bool isProperty)
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xF79CC8", Offset = "0xF79CC8", VA = "0xF79CC8")]
		public ES3Member(ES3Reflection.ES3ReflectedMember reflectedMember)
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public static class ES3TypeMgr
	{
		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "EditorBrowsableAttribute", RVA = "0x4FD3B0", Offset = "0x4FD3B0")]
		public static Dictionary<Type, ES3Type> types;

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xF761B0", Offset = "0xF761B0", VA = "0xF761B0")]
		public static ES3Type GetOrCreateES3Type(Type type, bool throwException = true)
		{
			return null;
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xF802EC", Offset = "0xF802EC", VA = "0xF802EC")]
		public static ES3Type GetES3Type(Type type)
		{
			return null;
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xF80404", Offset = "0xF80404", VA = "0xF80404")]
		internal static void Add(Type type, ES3Type es3Type)
		{
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xF7F820", Offset = "0xF7F820", VA = "0xF7F820")]
		internal static ES3Type CreateES3Type(Type type, bool throwException = true)
		{
			return null;
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xF6DCA8", Offset = "0xF6DCA8", VA = "0xF6DCA8")]
		internal static void Init()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class ES3WebClass
	{
		[Token(Token = "0x2000282")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x4F8430", Offset = "0x4F8430")]
		private sealed class <SendWebRequest>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000BF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			private int <>1__state;

			[Token(Token = "0x4000BF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			private object <>2__current;

			[Token(Token = "0x4000BF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public ES3WebClass <>4__this;

			[Token(Token = "0x4000BF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public UnityWebRequest webRequest;

			[Token(Token = "0x1700010C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000E97")]
				[Address(RVA = "0xF806F8", Offset = "0xF806F8", VA = "0xF806F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700010D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000E99")]
				[Address(RVA = "0xF80778", Offset = "0xF80778", VA = "0xF80778", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6000E94")]
			[Address(RVA = "0xF80628", Offset = "0xF80628", VA = "0xF80628")]
			[DebuggerHidden]
			public <SendWebRequest>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6000E95")]
			[Address(RVA = "0xF80648", Offset = "0xF80648", VA = "0xF80648", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000E96")]
			[Address(RVA = "0xF8064C", Offset = "0xF8064C", VA = "0xF8064C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000E98")]
			[Address(RVA = "0xF80700", Offset = "0xF80700", VA = "0xF80700", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected string url;

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		protected string apiKey;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<KeyValuePair<string, string>> formData;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		protected UnityWebRequest _webRequest;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool isDone;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public string error;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public long errorCode;

		[Token(Token = "0x170000AC")]
		public float uploadProgress
		{
			[Token(Token = "0x6000C49")]
			[Address(RVA = "0xF80508", Offset = "0xF80508", VA = "0xF80508")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000AD")]
		public float downloadProgress
		{
			[Token(Token = "0x6000C4A")]
			[Address(RVA = "0xF80520", Offset = "0xF80520", VA = "0xF80520")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170000AE")]
		public bool isError
		{
			[Token(Token = "0x6000C4B")]
			[Address(RVA = "0xF80538", Offset = "0xF80538", VA = "0xF80538")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xF6E7C0", Offset = "0xF6E7C0", VA = "0xF6E7C0")]
		protected ES3WebClass(string url, string apiKey)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xF8057C", Offset = "0xF8057C", VA = "0xF8057C")]
		public void AddPOSTField(string fieldName, string value)
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xF71BFC", Offset = "0xF71BFC", VA = "0xF71BFC")]
		protected string GetUser(string user, string password)
		{
			return null;
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xF71A98", Offset = "0xF71A98", VA = "0xF71A98")]
		protected WWWForm CreateWWWForm()
		{
			return null;
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xF71D34", Offset = "0xF71D34", VA = "0xF71D34")]
		protected bool HandleError(UnityWebRequest webRequest, bool errorIfDataIsDownloaded)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xF71C9C", Offset = "0xF71C9C", VA = "0xF71C9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x5019E0", Offset = "0x5019E0")]
		protected IEnumerator SendWebRequest(UnityWebRequest webRequest)
		{
			return null;
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xF71758", Offset = "0xF71758", VA = "0xF71758", Slot = "4")]
		protected virtual void Reset()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	internal class ES3JSONWriter : ES3Writer
	{
		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal StreamWriter baseWriter;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool isFirstProperty;

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xF78D7C", Offset = "0xF78D7C", VA = "0xF78D7C")]
		public ES3JSONWriter(Stream stream, ES3Settings settings)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xF78DA0", Offset = "0xF78DA0", VA = "0xF78DA0")]
		internal ES3JSONWriter(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool mergeKeys)
		{
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xF78E5C", Offset = "0xF78E5C", VA = "0xF78E5C", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xF78E94", Offset = "0xF78E94", VA = "0xF78E94", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xF78F54", Offset = "0xF78F54", VA = "0xF78F54", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xF78FE8", Offset = "0xF78FE8", VA = "0xF78FE8", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xF790B4", Offset = "0xF790B4", VA = "0xF790B4", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xF79178", Offset = "0xF79178", VA = "0xF79178", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xF791C4", Offset = "0xF791C4", VA = "0xF791C4", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xF79210", Offset = "0xF79210", VA = "0xF79210", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xF79248", Offset = "0xF79248", VA = "0xF79248", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xF792F4", Offset = "0xF792F4", VA = "0xF792F4", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xF793A0", Offset = "0xF793A0", VA = "0xF793A0", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xF7944C", Offset = "0xF7944C", VA = "0xF7944C", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xF794F8", Offset = "0xF794F8", VA = "0xF794F8", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xF79538", Offset = "0xF79538", VA = "0xF79538", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xF795D0", Offset = "0xF795D0", VA = "0xF795D0", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xF79838", Offset = "0xF79838", VA = "0xF79838", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xF798B0", Offset = "0xF798B0", VA = "0xF798B0")]
		private static bool CharacterRequiresEscaping(char c)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xF798DC", Offset = "0xF798DC", VA = "0xF798DC")]
		private void WriteCommaIfRequired()
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xF79924", Offset = "0xF79924", VA = "0xF79924", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] value)
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xF799D0", Offset = "0xF799D0", VA = "0xF799D0", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xF79A10", Offset = "0xF79A10", VA = "0xF79A10", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xF79A50", Offset = "0xF79A50", VA = "0xF79A50", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xF79AAC", Offset = "0xF79AAC", VA = "0xF79AAC", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xF79AB0", Offset = "0xF79AB0", VA = "0xF79AB0", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xF79AEC", Offset = "0xF79AEC", VA = "0xF79AEC", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xF79B28", Offset = "0xF79B28", VA = "0xF79B28", Slot = "12")]
		internal override void StartWriteCollection(int length)
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xF79B5C", Offset = "0xF79B5C", VA = "0xF79B5C", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xF79B90", Offset = "0xF79B90", VA = "0xF79B90", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xF79BCC", Offset = "0xF79BCC", VA = "0xF79BCC", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xF79BD0", Offset = "0xF79BD0", VA = "0xF79BD0", Slot = "16")]
		internal override void StartWriteDictionary(int length)
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xF79BE4", Offset = "0xF79BE4", VA = "0xF79BE4", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xF79BF8", Offset = "0xF79BF8", VA = "0xF79BF8", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xF79C34", Offset = "0xF79C34", VA = "0xF79C34", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xF79C68", Offset = "0xF79C68", VA = "0xF79C68", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xF79C6C", Offset = "0xF79C6C", VA = "0xF79C6C", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xF79C70", Offset = "0xF79C70", VA = "0xF79C70", Slot = "22")]
		public override void Dispose()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	internal class ES3XMLWriter : ES3Writer
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		internal StreamWriter baseWriter;

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xF80780", Offset = "0xF80780", VA = "0xF80780")]
		public ES3XMLWriter(Stream stream, ES3Settings settings)
		{
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xF807A4", Offset = "0xF807A4", VA = "0xF807A4")]
		internal ES3XMLWriter(Stream stream, ES3Settings settings, bool writeHeaderAndFooter, bool overwriteKeys)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xF80858", Offset = "0xF80858", VA = "0xF80858", Slot = "24")]
		internal override void WritePrimitive(int value)
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xF80890", Offset = "0xF80890", VA = "0xF80890", Slot = "25")]
		internal override void WritePrimitive(float value)
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xF808C8", Offset = "0xF808C8", VA = "0xF808C8", Slot = "26")]
		internal override void WritePrimitive(bool value)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xF80900", Offset = "0xF80900", VA = "0xF80900", Slot = "36")]
		internal override void WritePrimitive(char value)
		{
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xF80938", Offset = "0xF80938", VA = "0xF80938", Slot = "27")]
		internal override void WritePrimitive(decimal value)
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xF80994", Offset = "0xF80994", VA = "0xF80994", Slot = "28")]
		internal override void WritePrimitive(double value)
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xF809E0", Offset = "0xF809E0", VA = "0xF809E0", Slot = "29")]
		internal override void WritePrimitive(long value)
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xF80A2C", Offset = "0xF80A2C", VA = "0xF80A2C", Slot = "30")]
		internal override void WritePrimitive(ulong value)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xF80A78", Offset = "0xF80A78", VA = "0xF80A78", Slot = "31")]
		internal override void WritePrimitive(uint value)
		{
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xF80AB0", Offset = "0xF80AB0", VA = "0xF80AB0", Slot = "37")]
		internal override void WritePrimitive(string value)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xF80AE8", Offset = "0xF80AE8", VA = "0xF80AE8", Slot = "32")]
		internal override void WritePrimitive(byte value)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xF80B94", Offset = "0xF80B94", VA = "0xF80B94", Slot = "33")]
		internal override void WritePrimitive(sbyte value)
		{
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xF80C40", Offset = "0xF80C40", VA = "0xF80C40", Slot = "34")]
		internal override void WritePrimitive(short value)
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xF80CEC", Offset = "0xF80CEC", VA = "0xF80CEC", Slot = "35")]
		internal override void WritePrimitive(ushort value)
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xF80D98", Offset = "0xF80D98", VA = "0xF80D98", Slot = "38")]
		internal override void WritePrimitive(byte[] value)
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xF80E30", Offset = "0xF80E30", VA = "0xF80E30", Slot = "23")]
		internal override void WriteRawProperty(string name, byte[] bytes)
		{
		}

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xF8132C", Offset = "0xF8132C", VA = "0xF8132C", Slot = "6")]
		internal override void StartWriteFile()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xF81330", Offset = "0xF81330", VA = "0xF81330", Slot = "7")]
		internal override void EndWriteFile()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xF81334", Offset = "0xF81334", VA = "0xF81334", Slot = "8")]
		internal override void StartWriteObject(string name)
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xF8133C", Offset = "0xF8133C", VA = "0xF8133C", Slot = "9")]
		internal override void EndWriteObject(string name)
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xF8134C", Offset = "0xF8134C", VA = "0xF8134C", Slot = "10")]
		internal override void StartWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xF80EEC", Offset = "0xF80EEC", VA = "0xF80EEC")]
		protected void StartWriteProperty(string name, [Optional] ICollection<KeyValuePair<string, object>> attributes)
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xF813D8", Offset = "0xF813D8", VA = "0xF813D8", Slot = "11")]
		internal override void EndWriteProperty(string name)
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xF814A4", Offset = "0xF814A4", VA = "0xF814A4", Slot = "12")]
		internal override void StartWriteCollection(int length)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xF814A8", Offset = "0xF814A8", VA = "0xF814A8", Slot = "13")]
		internal override void EndWriteCollection()
		{
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xF814AC", Offset = "0xF814AC", VA = "0xF814AC", Slot = "14")]
		internal override void StartWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xF814B0", Offset = "0xF814B0", VA = "0xF814B0", Slot = "15")]
		internal override void EndWriteCollectionItem(int index)
		{
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xF814B4", Offset = "0xF814B4", VA = "0xF814B4", Slot = "16")]
		internal override void StartWriteDictionary(int length)
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xF814B8", Offset = "0xF814B8", VA = "0xF814B8", Slot = "17")]
		internal override void EndWriteDictionary()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xF814BC", Offset = "0xF814BC", VA = "0xF814BC", Slot = "18")]
		internal override void StartWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xF814C0", Offset = "0xF814C0", VA = "0xF814C0", Slot = "19")]
		internal override void EndWriteDictionaryKey(int index)
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xF814C4", Offset = "0xF814C4", VA = "0xF814C4", Slot = "20")]
		internal override void StartWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xF814C8", Offset = "0xF814C8", VA = "0xF814C8", Slot = "21")]
		internal override void EndWriteDictionaryValue(int index)
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xF814CC", Offset = "0xF814CC", VA = "0xF814CC", Slot = "5")]
		internal override void WriteNull()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xF81544", Offset = "0xF81544", VA = "0xF81544", Slot = "22")]
		public override void Dispose()
		{
		}
	}
}
namespace ES3PlayMaker
{
	[Token(Token = "0x20001B2")]
	public abstract class ActionBase : FsmStateAction
	{
		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD3C4", Offset = "0x4FD3C4")]
		public FsmEvent errorEvent;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD3F8", Offset = "0x4FD3F8")]
		public FsmString errorMessage;

		[Token(Token = "0x6000C9E")]
		public abstract void Enter();

		[Token(Token = "0x6000C9F")]
		public abstract void OnReset();

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xF81610", Offset = "0xF81610", VA = "0xF81610", Slot = "32")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xF81784", Offset = "0xF81784", VA = "0xF81784", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xF8171C", Offset = "0xF8171C", VA = "0xF8171C")]
		public void HandleError(string msg)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xF81800", Offset = "0xF81800", VA = "0xF81800")]
		protected ActionBase()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public abstract class SettingsAction : ActionBase
	{
		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public FsmBool overrideDefaultSettings;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD42C", Offset = "0x4FD42C")]
		public FsmString path;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x4FD460", Offset = "0x4FD460")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD460", Offset = "0x4FD460")]
		public FsmEnum location;

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x4FD4F8", Offset = "0x4FD4F8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD4F8", Offset = "0x4FD4F8")]
		public FsmEnum encryptionType;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD590", Offset = "0x4FD590")]
		public FsmString encryptionPassword;

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x4FD5C4", Offset = "0x4FD5C4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD5C4", Offset = "0x4FD5C4")]
		public FsmEnum directory;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x4FD65C", Offset = "0x4FD65C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD65C", Offset = "0x4FD65C")]
		public FsmEnum format;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD6F4", Offset = "0x4FD6F4")]
		public FsmInt bufferSize;

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xF83F08", Offset = "0xF83F08", VA = "0xF83F08", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xF81A34", Offset = "0xF81A34", VA = "0xF81A34")]
		public ES3Settings GetSettings()
		{
			return null;
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xF81CE8", Offset = "0xF81CE8", VA = "0xF81CE8")]
		protected SettingsAction()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public abstract class ES3FileAction : ActionBase
	{
		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD728", Offset = "0x4FD728")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x4FD728", Offset = "0x4FD728")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x4FD728", Offset = "0x4FD728")]
		[RequiredField]
		public FsmObject fsmES3File;

		[Token(Token = "0x170000AF")]
		public ES3File es3File
		{
			[Token(Token = "0x6000CA7")]
			[Address(RVA = "0xF832EC", Offset = "0xF832EC", VA = "0xF832EC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xF833D0", Offset = "0xF833D0", VA = "0xF833D0", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xF833DC", Offset = "0xF833DC", VA = "0xF833DC")]
		protected ES3FileAction()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public abstract class ES3FileSettingsAction : SettingsAction
	{
		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD7F8", Offset = "0x4FD7F8")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x4FD7F8", Offset = "0x4FD7F8")]
		[AttributeAttribute(Name = "TitleAttribute", RVA = "0x4FD7F8", Offset = "0x4FD7F8")]
		[RequiredField]
		public FsmObject fsmES3File;

		[Token(Token = "0x170000B0")]
		public ES3File es3File
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xF83E18", Offset = "0xF83E18", VA = "0xF83E18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xF83EFC", Offset = "0xF83EFC", VA = "0xF83EFC", Slot = "28")]
		public override void Reset()
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xF835B0", Offset = "0xF835B0", VA = "0xF835B0")]
		protected ES3FileSettingsAction()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7208", Offset = "0x4F7208")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7208", Offset = "0x4F7208")]
	public class Save : SettingsAction
	{
		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD8C8", Offset = "0x4FD8C8")]
		public FsmString key;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD8FC", Offset = "0x4FD8FC")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x4FD8FC", Offset = "0x4FD8FC")]
		public FsmVar value;

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xF857E0", Offset = "0xF857E0", VA = "0xF857E0", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xF85848", Offset = "0xF85848", VA = "0xF85848", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xF85940", Offset = "0xF85940", VA = "0xF85940")]
		public Save()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7268", Offset = "0x4F7268")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7268", Offset = "0x4F7268")]
	public class SaveRaw : SettingsAction
	{
		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD948", Offset = "0x4FD948")]
		public FsmString str;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD97C", Offset = "0x4FD97C")]
		public FsmBool useBase64Encoding;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD9B0", Offset = "0x4FD9B0")]
		public FsmBool appendNewline;

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xF85AFC", Offset = "0xF85AFC", VA = "0xF85AFC", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xF85B7C", Offset = "0xF85B7C", VA = "0xF85B7C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xF85D28", Offset = "0xF85D28", VA = "0xF85D28")]
		public SaveRaw()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F72C8", Offset = "0x4F72C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F72C8", Offset = "0x4F72C8")]
	public class AppendRaw : SettingsAction
	{
		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FD9E4", Offset = "0x4FD9E4")]
		public FsmString str;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDA18", Offset = "0x4FDA18")]
		public FsmBool useBase64Encoding;

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDA4C", Offset = "0x4FDA4C")]
		public FsmBool appendNewline;

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xF81808", Offset = "0xF81808", VA = "0xF81808", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xF81888", Offset = "0xF81888", VA = "0xF81888", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xF81CBC", Offset = "0xF81CBC", VA = "0xF81CBC")]
		public AppendRaw()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7328", Offset = "0x4F7328")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7328", Offset = "0x4F7328")]
	public class SaveImage : SettingsAction
	{
		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDA80", Offset = "0x4FDA80")]
		public FsmString imagePath;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDAB4", Offset = "0x4FDAB4")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x4FDAB4", Offset = "0x4FDAB4")]
		public FsmTexture texture2D;

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xF8596C", Offset = "0xF8596C", VA = "0xF8596C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xF859D4", Offset = "0xF859D4", VA = "0xF859D4", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xF85AD0", Offset = "0xF85AD0", VA = "0xF85AD0")]
		public SaveImage()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7388", Offset = "0x4F7388")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7388", Offset = "0x4F7388")]
	public class Load : SettingsAction
	{
		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDB4C", Offset = "0x4FDB4C")]
		public FsmString key;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDB80", Offset = "0x4FDB80")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x4FDB80", Offset = "0x4FDB80")]
		public FsmVar value;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDBCC", Offset = "0x4FDBCC")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x4FDBCC", Offset = "0x4FDBCC")]
		public FsmVar defaultValue;

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xF84BC4", Offset = "0xF84BC4", VA = "0xF84BC4", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xF84C30", Offset = "0xF84C30", VA = "0xF84C30", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xF84E10", Offset = "0xF84E10", VA = "0xF84E10")]
		public Load()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F73E8", Offset = "0x4F73E8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F73E8", Offset = "0x4F73E8")]
	public class LoadInto : SettingsAction
	{
		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDC18", Offset = "0x4FDC18")]
		public FsmString key;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDC4C", Offset = "0x4FDC4C")]
		[RequiredField]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x4FDC4C", Offset = "0x4FDC4C")]
		public FsmVar value;

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xF8518C", Offset = "0xF8518C", VA = "0xF8518C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xF851F4", Offset = "0xF851F4", VA = "0xF851F4", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xF85350", Offset = "0xF85350", VA = "0xF85350")]
		public LoadInto()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7448", Offset = "0x4F7448")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7448", Offset = "0x4F7448")]
	public class LoadRawString : SettingsAction
	{
		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDCA8", Offset = "0x4FDCA8")]
		public FsmString str;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDCDC", Offset = "0x4FDCDC")]
		public FsmBool useBase64Encoding;

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xF8537C", Offset = "0xF8537C", VA = "0xF8537C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xF853A4", Offset = "0xF853A4", VA = "0xF853A4", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xF854CC", Offset = "0xF854CC", VA = "0xF854CC")]
		public LoadRawString()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F74A8", Offset = "0x4F74A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F74A8", Offset = "0x4F74A8")]
	public class LoadImage : SettingsAction
	{
		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDD10", Offset = "0x4FDD10")]
		public FsmString imagePath;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDD44", Offset = "0x4FDD44")]
		public FsmTexture texture2D;

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xF8502C", Offset = "0xF8502C", VA = "0xF8502C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xF85094", Offset = "0xF85094", VA = "0xF85094", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xF85160", Offset = "0xF85160", VA = "0xF85160")]
		public LoadImage()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7508", Offset = "0x4F7508")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7508", Offset = "0x4F7508")]
	public class LoadAudio : SettingsAction
	{
		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDD78", Offset = "0x4FDD78")]
		public FsmString audioFilePath;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x4FDDAC", Offset = "0x4FDDAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDDAC", Offset = "0x4FDDAC")]
		public FsmObject audioClip;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDE44", Offset = "0x4FDE44")]
		[AttributeAttribute(Name = "ObjectTypeAttribute", RVA = "0x4FDE44", Offset = "0x4FDE44")]
		public FsmEnum audioType;

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xF84E3C", Offset = "0xF84E3C", VA = "0xF84E3C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xF84ED8", Offset = "0xF84ED8", VA = "0xF84ED8", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xF85000", Offset = "0xF85000", VA = "0xF85000")]
		public LoadAudio()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7568", Offset = "0x4F7568")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7568", Offset = "0x4F7568")]
	public class KeyExists : SettingsAction
	{
		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDEDC", Offset = "0x4FDEDC")]
		public FsmString key;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDF10", Offset = "0x4FDF10")]
		public FsmBool exists;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDF44", Offset = "0x4FDF44")]
		public FsmEvent existsEvent;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDF78", Offset = "0x4FDF78")]
		public FsmEvent doesNotExistEvent;

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xF84A00", Offset = "0xF84A00", VA = "0xF84A00", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xF84A7C", Offset = "0xF84A7C", VA = "0xF84A7C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xF84B98", Offset = "0xF84B98", VA = "0xF84B98")]
		public KeyExists()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F75C8", Offset = "0x4F75C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F75C8", Offset = "0x4F75C8")]
	public class FileExists : SettingsAction
	{
		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDFAC", Offset = "0x4FDFAC")]
		public FsmString filePath;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FDFE0", Offset = "0x4FDFE0")]
		public FsmBool exists;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE014", Offset = "0x4FE014")]
		public FsmEvent existsEvent;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE048", Offset = "0x4FE048")]
		public FsmEvent doesNotExistEvent;

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xF84264", Offset = "0xF84264", VA = "0xF84264", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xF842E0", Offset = "0xF842E0", VA = "0xF842E0", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xF843FC", Offset = "0xF843FC", VA = "0xF843FC")]
		public FileExists()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7628", Offset = "0x4F7628")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7628", Offset = "0x4F7628")]
	public class DirectoryExists : SettingsAction
	{
		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE07C", Offset = "0x4FE07C")]
		public FsmString directoryPath;

		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE0B0", Offset = "0x4FE0B0")]
		public FsmBool exists;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE0E4", Offset = "0x4FE0E4")]
		public FsmEvent existsEvent;

		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE118", Offset = "0x4FE118")]
		public FsmEvent doesNotExistEvent;

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xF82370", Offset = "0xF82370", VA = "0xF82370", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xF823EC", Offset = "0xF823EC", VA = "0xF823EC", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xF82508", Offset = "0xF82508", VA = "0xF82508")]
		public DirectoryExists()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7688", Offset = "0x4F7688")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7688", Offset = "0x4F7688")]
	public class DeleteKey : SettingsAction
	{
		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE14C", Offset = "0x4FE14C")]
		public FsmString key;

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xF8223C", Offset = "0xF8223C", VA = "0xF8223C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xF8229C", Offset = "0xF8229C", VA = "0xF8229C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xF82344", Offset = "0xF82344", VA = "0xF82344")]
		public DeleteKey()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F76E8", Offset = "0x4F76E8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F76E8", Offset = "0x4F76E8")]
	public class DeleteFile : SettingsAction
	{
		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE180", Offset = "0x4FE180")]
		public FsmString filePath;

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xF82108", Offset = "0xF82108", VA = "0xF82108", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xF82168", Offset = "0xF82168", VA = "0xF82168", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xF82210", Offset = "0xF82210", VA = "0xF82210")]
		public DeleteFile()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7748", Offset = "0x4F7748")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7748", Offset = "0x4F7748")]
	public class DeleteDirectory : SettingsAction
	{
		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE1B4", Offset = "0x4FE1B4")]
		public FsmString directoryPath;

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xF81FD4", Offset = "0xF81FD4", VA = "0xF81FD4", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xF82034", Offset = "0xF82034", VA = "0xF82034", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xF820DC", Offset = "0xF820DC", VA = "0xF820DC")]
		public DeleteDirectory()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F77A8", Offset = "0x4F77A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F77A8", Offset = "0x4F77A8")]
	public class CreateBackup : SettingsAction
	{
		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE1E8", Offset = "0x4FE1E8")]
		public FsmString filePath;

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xF81EA0", Offset = "0xF81EA0", VA = "0xF81EA0", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xF81F00", Offset = "0xF81F00", VA = "0xF81F00", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xF81FA8", Offset = "0xF81FA8", VA = "0xF81FA8")]
		public CreateBackup()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7808", Offset = "0x4F7808")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7808", Offset = "0x4F7808")]
	public class RestoreBackup : SettingsAction
	{
		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE21C", Offset = "0x4FE21C")]
		public FsmString filePath;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE250", Offset = "0x4FE250")]
		public FsmBool backupWasRestored;

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xF85684", Offset = "0xF85684", VA = "0xF85684", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xF856F4", Offset = "0xF856F4", VA = "0xF856F4", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xF857B4", Offset = "0xF857B4", VA = "0xF857B4")]
		public RestoreBackup()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7868", Offset = "0x4F7868")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7868", Offset = "0x4F7868")]
	public class RenameFile : SettingsAction
	{
		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE284", Offset = "0x4FE284")]
		public FsmString oldFilePath;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE2B8", Offset = "0x4FE2B8")]
		public FsmString newFilePath;

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xF854F8", Offset = "0xF854F8", VA = "0xF854F8", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xF85574", Offset = "0xF85574", VA = "0xF85574", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xF85658", Offset = "0xF85658", VA = "0xF85658")]
		public RenameFile()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F78C8", Offset = "0x4F78C8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F78C8", Offset = "0x4F78C8")]
	public class CopyFile : SettingsAction
	{
		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE2EC", Offset = "0x4FE2EC")]
		public FsmString oldFilePath;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE320", Offset = "0x4FE320")]
		public FsmString newFilePath;

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xF81D14", Offset = "0xF81D14", VA = "0xF81D14", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0xF81D90", Offset = "0xF81D90", VA = "0xF81D90", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0xF81E74", Offset = "0xF81E74", VA = "0xF81E74")]
		public CopyFile()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7928", Offset = "0x4F7928")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7928", Offset = "0x4F7928")]
	public class GetKeys : SettingsAction
	{
		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE354", Offset = "0x4FE354")]
		public FsmString filePath;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE388", Offset = "0x4FE388")]
		[AttributeAttribute(Name = "ArrayEditorAttribute", RVA = "0x4FE388", Offset = "0x4FE388")]
		public FsmArray keys;

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0xF84884", Offset = "0xF84884", VA = "0xF84884", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0xF848EC", Offset = "0xF848EC", VA = "0xF848EC", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0xF849D4", Offset = "0xF849D4", VA = "0xF849D4")]
		public GetKeys()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7988", Offset = "0x4F7988")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7988", Offset = "0x4F7988")]
	public class GetKeyCount : SettingsAction
	{
		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE404", Offset = "0x4FE404")]
		public FsmString filePath;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE438", Offset = "0x4FE438")]
		public FsmInt keyCount;

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xF84720", Offset = "0xF84720", VA = "0xF84720", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xF84788", Offset = "0xF84788", VA = "0xF84788", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xF84858", Offset = "0xF84858", VA = "0xF84858")]
		public GetKeyCount()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F79E8", Offset = "0x4F79E8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F79E8", Offset = "0x4F79E8")]
	public class GetFiles : SettingsAction
	{
		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE46C", Offset = "0x4FE46C")]
		public FsmString directoryPath;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE4A0", Offset = "0x4FE4A0")]
		[AttributeAttribute(Name = "ArrayEditorAttribute", RVA = "0x4FE4A0", Offset = "0x4FE4A0")]
		public FsmArray files;

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xF845A4", Offset = "0xF845A4", VA = "0xF845A4", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xF8460C", Offset = "0xF8460C", VA = "0xF8460C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0xF846F4", Offset = "0xF846F4", VA = "0xF846F4")]
		public GetFiles()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7A48", Offset = "0x4F7A48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7A48", Offset = "0x4F7A48")]
	public class GetDirectories : SettingsAction
	{
		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE51C", Offset = "0x4FE51C")]
		public FsmString directoryPath;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE550", Offset = "0x4FE550")]
		[AttributeAttribute(Name = "ArrayEditorAttribute", RVA = "0x4FE550", Offset = "0x4FE550")]
		public FsmArray directories;

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0xF84428", Offset = "0xF84428", VA = "0xF84428", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0xF84490", Offset = "0xF84490", VA = "0xF84490", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0xF84578", Offset = "0xF84578", VA = "0xF84578")]
		public GetDirectories()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7AA8", Offset = "0x4F7AA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7AA8", Offset = "0x4F7AA8")]
	public class ES3FileCreate : ES3FileSettingsAction
	{
		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE5CC", Offset = "0x4FE5CC")]
		public FsmString filePath;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE600", Offset = "0x4FE600")]
		public FsmBool syncWithFile;

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0xF83418", Offset = "0xF83418", VA = "0xF83418", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0xF83488", Offset = "0xF83488", VA = "0xF83488", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xF83584", Offset = "0xF83584", VA = "0xF83584")]
		public ES3FileCreate()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7B08", Offset = "0x4F7B08")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7B08", Offset = "0x4F7B08")]
	public class ES3FileSync : ES3FileSettingsAction
	{
		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE634", Offset = "0x4FE634")]
		public FsmString filePath;

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0xF84154", Offset = "0xF84154", VA = "0xF84154", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0xF841B4", Offset = "0xF841B4", VA = "0xF841B4", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xF84238", Offset = "0xF84238", VA = "0xF84238")]
		public ES3FileSync()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7B68", Offset = "0x4F7B68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7B68", Offset = "0x4F7B68")]
	public class ES3FileSave : ES3FileAction
	{
		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE668", Offset = "0x4FE668")]
		public FsmString key;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE69C", Offset = "0x4FE69C")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x4FE69C", Offset = "0x4FE69C")]
		public FsmVar value;

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xF83CD0", Offset = "0xF83CD0", VA = "0xF83CD0", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xF83D38", Offset = "0xF83D38", VA = "0xF83D38", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xF83E10", Offset = "0xF83E10", VA = "0xF83E10")]
		public ES3FileSave()
		{
		}
	}
	[Token(Token = "0x20001D0")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7BC8", Offset = "0x4F7BC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7BC8", Offset = "0x4F7BC8")]
	public class ES3FileLoad : ES3FileAction
	{
		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE6E8", Offset = "0x4FE6E8")]
		public FsmString key;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE71C", Offset = "0x4FE71C")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x4FE71C", Offset = "0x4FE71C")]
		public FsmVar value;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE768", Offset = "0x4FE768")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x4FE768", Offset = "0x4FE768")]
		public FsmVar defaultValue;

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xF8385C", Offset = "0xF8385C", VA = "0xF8385C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xF838C8", Offset = "0xF838C8", VA = "0xF838C8", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xF83A68", Offset = "0xF83A68", VA = "0xF83A68")]
		public ES3FileLoad()
		{
		}
	}
	[Token(Token = "0x20001D1")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7C28", Offset = "0x4F7C28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7C28", Offset = "0x4F7C28")]
	public class ES3FileLoadInto : ES3FileAction
	{
		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE7B4", Offset = "0x4FE7B4")]
		public FsmString key;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE7E8", Offset = "0x4FE7E8")]
		[AttributeAttribute(Name = "UIHintAttribute", RVA = "0x4FE7E8", Offset = "0x4FE7E8")]
		public FsmVar value;

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xF83A70", Offset = "0xF83A70", VA = "0xF83A70", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xF83AD8", Offset = "0xF83AD8", VA = "0xF83AD8", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xF83BB0", Offset = "0xF83BB0", VA = "0xF83BB0")]
		public ES3FileLoadInto()
		{
		}
	}
	[Token(Token = "0x20001D2")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7C88", Offset = "0x4F7C88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7C88", Offset = "0x4F7C88")]
	public class ES3FileLoadRawString : ES3FileAction
	{
		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE834", Offset = "0x4FE834")]
		public FsmString str;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE868", Offset = "0x4FE868")]
		public FsmBool useBase64Encoding;

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xF83BB8", Offset = "0xF83BB8", VA = "0xF83BB8", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xF83BE0", Offset = "0xF83BE0", VA = "0xF83BE0", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xF83CC8", Offset = "0xF83CC8", VA = "0xF83CC8")]
		public ES3FileLoadRawString()
		{
		}
	}
	[Token(Token = "0x20001D3")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7CE8", Offset = "0x4F7CE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7CE8", Offset = "0x4F7CE8")]
	public class ES3FileDeleteKey : ES3FileAction
	{
		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE89C", Offset = "0x4FE89C")]
		public FsmString key;

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xF835DC", Offset = "0xF835DC", VA = "0xF835DC", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xF8363C", Offset = "0xF8363C", VA = "0xF8363C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xF8368C", Offset = "0xF8368C", VA = "0xF8368C")]
		public ES3FileDeleteKey()
		{
		}
	}
	[Token(Token = "0x20001D4")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7D48", Offset = "0x4F7D48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7D48", Offset = "0x4F7D48")]
	public class ES3FileKeyExists : ES3FileAction
	{
		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE8D0", Offset = "0x4FE8D0")]
		public FsmString key;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE904", Offset = "0x4FE904")]
		public FsmBool exists;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE938", Offset = "0x4FE938")]
		public FsmEvent existsEvent;

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE96C", Offset = "0x4FE96C")]
		public FsmEvent doesNotExistEvent;

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xF83714", Offset = "0xF83714", VA = "0xF83714", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xF83790", Offset = "0xF83790", VA = "0xF83790", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xF83854", Offset = "0xF83854", VA = "0xF83854")]
		public ES3FileKeyExists()
		{
		}
	}
	[Token(Token = "0x20001D5")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7DA8", Offset = "0x4F7DA8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7DA8", Offset = "0x4F7DA8")]
	public class ES3FileGetKeys : ES3FileAction
	{
		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FE9A0", Offset = "0x4FE9A0")]
		[AttributeAttribute(Name = "ArrayEditorAttribute", RVA = "0x4FE9A0", Offset = "0x4FE9A0")]
		public FsmArray keys;

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xF83694", Offset = "0xF83694", VA = "0xF83694", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D0B")]
		[Address(RVA = "0xF836A0", Offset = "0xF836A0", VA = "0xF836A0", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xF8370C", Offset = "0xF8370C", VA = "0xF8370C")]
		public ES3FileGetKeys()
		{
		}
	}
	[Token(Token = "0x20001D6")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7E08", Offset = "0x4F7E08")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7E08", Offset = "0x4F7E08")]
	public class ES3FileClear : ES3FileAction
	{
		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xF833E4", Offset = "0xF833E4", VA = "0xF833E4", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xF833E8", Offset = "0xF833E8", VA = "0xF833E8", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xF83410", Offset = "0xF83410", VA = "0xF83410")]
		public ES3FileClear()
		{
		}
	}
	[Token(Token = "0x20001D7")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7E68", Offset = "0x4F7E68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7E68", Offset = "0x4F7E68")]
	public class ES3FileSize : ES3FileAction
	{
		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEA1C", Offset = "0x4FEA1C")]
		public FsmInt size;

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xF840EC", Offset = "0xF840EC", VA = "0xF840EC", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xF8410C", Offset = "0xF8410C", VA = "0xF8410C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xF8414C", Offset = "0xF8414C", VA = "0xF8414C")]
		public ES3FileSize()
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public abstract class ES3CloudAction : SettingsAction
	{
		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEA50", Offset = "0x4FEA50")]
		[RequiredField]
		public FsmString url;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEA98", Offset = "0x4FEA98")]
		[RequiredField]
		public FsmString apiKey;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEAE0", Offset = "0x4FEAE0")]
		public FsmInt errorCode;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected ES3Cloud cloud;

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xF82534", Offset = "0xF82534", VA = "0xF82534", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xF825AC", Offset = "0xF825AC", VA = "0xF825AC", Slot = "32")]
		public override void OnEnter()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xF82770", Offset = "0xF82770", VA = "0xF82770", Slot = "34")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xF826B4", Offset = "0xF826B4", VA = "0xF826B4")]
		protected void CreateES3Cloud()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xF82A6C", Offset = "0xF82A6C", VA = "0xF82A6C")]
		protected ES3CloudAction()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public abstract class ES3CloudUserAction : ES3CloudAction
	{
		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public FsmString user;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public FsmString password;

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xF83274", Offset = "0xF83274", VA = "0xF83274", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xF82B7C", Offset = "0xF82B7C", VA = "0xF82B7C")]
		protected ES3CloudUserAction()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7EC8", Offset = "0x4F7EC8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7EC8", Offset = "0x4F7EC8")]
	public class ES3CloudSync : ES3CloudUserAction
	{
		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xF830FC", Offset = "0xF830FC", VA = "0xF830FC", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xF83164", Offset = "0xF83164", VA = "0xF83164")]
		public ES3CloudSync()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7F28", Offset = "0x4F7F28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7F28", Offset = "0x4F7F28")]
	public class ES3CloudUploadFile : ES3CloudUserAction
	{
		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xF83190", Offset = "0xF83190", VA = "0xF83190", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xF83248", Offset = "0xF83248", VA = "0xF83248")]
		public ES3CloudUploadFile()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7F88", Offset = "0x4F7F88")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7F88", Offset = "0x4F7F88")]
	public class ES3CloudDownloadFile : ES3CloudUserAction
	{
		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xF82BA8", Offset = "0xF82BA8", VA = "0xF82BA8", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xF82C60", Offset = "0xF82C60", VA = "0xF82C60")]
		public ES3CloudDownloadFile()
		{
		}
	}
	[Token(Token = "0x20001DD")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F7FE8", Offset = "0x4F7FE8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F7FE8", Offset = "0x4F7FE8")]
	public class ES3CloudDeleteFile : ES3CloudUserAction
	{
		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xF82A98", Offset = "0xF82A98", VA = "0xF82A98", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xF82B50", Offset = "0xF82B50", VA = "0xF82B50")]
		public ES3CloudDeleteFile()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F8048", Offset = "0x4F8048")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F8048", Offset = "0x4F8048")]
	public class ES3CloudRenameFile : ES3CloudUserAction
	{
		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEB14", Offset = "0x4FEB14")]
		public FsmString newFilename;

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xF82FF8", Offset = "0xF82FF8", VA = "0xF82FF8", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xF830D0", Offset = "0xF830D0", VA = "0xF830D0")]
		public ES3CloudRenameFile()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F80A8", Offset = "0x4F80A8")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F80A8", Offset = "0x4F80A8")]
	public class ES3CloudDownloadFilenames : ES3CloudUserAction
	{
		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEB48", Offset = "0x4FEB48")]
		[AttributeAttribute(Name = "ArrayEditorAttribute", RVA = "0x4FEB48", Offset = "0x4FEB48")]
		public FsmArray filenames;

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xF82C8C", Offset = "0xF82C8C", VA = "0xF82C8C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xF82C98", Offset = "0xF82C98", VA = "0xF82C98", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xF82D18", Offset = "0xF82D18", VA = "0xF82D18", Slot = "34")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xF82E10", Offset = "0xF82E10", VA = "0xF82E10")]
		public ES3CloudDownloadFilenames()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	[AttributeAttribute(Name = "ActionCategoryAttribute", RVA = "0x4F8108", Offset = "0x4F8108")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4F8108", Offset = "0x4F8108")]
	public class ES3CloudDownloadTimestamp : ES3CloudUserAction
	{
		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x4FEBC4", Offset = "0x4FEBC4")]
		public FsmString timestamp;

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xF82E3C", Offset = "0xF82E3C", VA = "0xF82E3C", Slot = "63")]
		public override void OnReset()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xF82E9C", Offset = "0xF82E9C", VA = "0xF82E9C", Slot = "62")]
		public override void Enter()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xF82F1C", Offset = "0xF82F1C", VA = "0xF82F1C", Slot = "34")]
		public override void OnUpdate()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xF82FCC", Offset = "0xF82FCC", VA = "0xF82FCC")]
		public ES3CloudDownloadTimestamp()
		{
		}
	}
}
