using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Diagnostics;
using System.IO;
using System.Reflection;
using System.Runtime.InteropServices;
using System.Text;
using Bhaptics.Tact;
using Bhaptics.Tact.Unity;
using BoneTool.Script.Runtime;
using CurvedUI;
using ExitGames.Client.Photon;
using Il2CppDummyDll;
using Oculus.Platform;
using Oculus.Platform.Models;
using Oculus.Spatializer.Propagation;
using Photon.Compression.Internal;
using Photon.Pun;
using Photon.Realtime;
using Photon.Utilities;
using Photon.Voice.PUN;
using Photon.Voice.Unity;
using RootMotion.Dynamics;
using TMPro;
using Unity.Labs.SuperScience;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.Networking;
using UnityEngine.Playables;
using UnityEngine.SpatialTracking;
using UnityEngine.UI;
using UnityEngine.Video;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.OpenXR.Features;
using Valve.VR;
using emotitron.Compression;
using s3DBakers.Buttons;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84725C", Offset = "0x84725C")]
internal sealed class <>f__AnonymousType0<<pose>j__TPar, <index>j__TPar>
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B670", Offset = "0x84B670")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B684", Offset = "0x84B684")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x17000001")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000001")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000002")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000002")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x6000003")]
	[DebuggerHidden]
	public <>f__AnonymousType0(<pose>j__TPar pose, <index>j__TPar index)
	{
	}

	[Token(Token = "0x6000004")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000005")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000006")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000003")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84726C", Offset = "0x84726C")]
internal sealed class <>f__AnonymousType1<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar>
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B698", Offset = "0x84B698")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B6AC", Offset = "0x84B6AC")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B6C0", Offset = "0x84B6C0")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x17000003")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x6000007")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000004")]
	public <index>j__TPar index
	{
		[Token(Token = "0x6000008")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000005")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000009")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x600000A")]
	[DebuggerHidden]
	public <>f__AnonymousType1(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass)
	{
	}

	[Token(Token = "0x600000B")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x600000C")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x600000D")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000004")]
[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84727C", Offset = "0x84727C")]
internal sealed class <>f__AnonymousType2<<pose>j__TPar, <index>j__TPar, <deviceClass>j__TPar, <deviceRole>j__TPar, <modelNumber>j__TPar, <renderModel>j__TPar>
{
	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B6D4", Offset = "0x84B6D4")]
	private readonly <pose>j__TPar <pose>i__Field;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B6E8", Offset = "0x84B6E8")]
	private readonly <index>j__TPar <index>i__Field;

	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B6FC", Offset = "0x84B6FC")]
	private readonly <deviceClass>j__TPar <deviceClass>i__Field;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B710", Offset = "0x84B710")]
	private readonly <deviceRole>j__TPar <deviceRole>i__Field;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B724", Offset = "0x84B724")]
	private readonly <modelNumber>j__TPar <modelNumber>i__Field;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	[AttributeAttribute(Name = "DebuggerBrowsableAttribute", RVA = "0x84B738", Offset = "0x84B738")]
	private readonly <renderModel>j__TPar <renderModel>i__Field;

	[Token(Token = "0x17000006")]
	public <pose>j__TPar pose
	{
		[Token(Token = "0x600000E")]
		get
		{
			return (<pose>j__TPar)null;
		}
	}

	[Token(Token = "0x17000007")]
	public <index>j__TPar index
	{
		[Token(Token = "0x600000F")]
		get
		{
			return (<index>j__TPar)null;
		}
	}

	[Token(Token = "0x17000008")]
	public <deviceClass>j__TPar deviceClass
	{
		[Token(Token = "0x6000010")]
		get
		{
			return (<deviceClass>j__TPar)null;
		}
	}

	[Token(Token = "0x17000009")]
	public <deviceRole>j__TPar deviceRole
	{
		[Token(Token = "0x6000011")]
		get
		{
			return (<deviceRole>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000A")]
	public <modelNumber>j__TPar modelNumber
	{
		[Token(Token = "0x6000012")]
		get
		{
			return (<modelNumber>j__TPar)null;
		}
	}

	[Token(Token = "0x1700000B")]
	public <renderModel>j__TPar renderModel
	{
		[Token(Token = "0x6000013")]
		get
		{
			return (<renderModel>j__TPar)null;
		}
	}

	[Token(Token = "0x6000014")]
	[DebuggerHidden]
	public <>f__AnonymousType2(<pose>j__TPar pose, <index>j__TPar index, <deviceClass>j__TPar deviceClass, <deviceRole>j__TPar deviceRole, <modelNumber>j__TPar modelNumber, <renderModel>j__TPar renderModel)
	{
	}

	[Token(Token = "0x6000015")]
	[DebuggerHidden]
	public override bool Equals(object value)
	{
		return default(bool);
	}

	[Token(Token = "0x6000016")]
	[DebuggerHidden]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x6000017")]
	[DebuggerHidden]
	public override string ToString()
	{
		return null;
	}
}
[Token(Token = "0x2000005")]
public class BhapticsAndroidBasicExample : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003A9")]
	public struct BhapticsAndroidExampleButtons
	{
		[Token(Token = "0x4001DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Button ping;

		[Token(Token = "0x4001DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Button toggle;
	}

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BhapticsAndroidExampleButtons talButtons;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public BhapticsAndroidExampleButtons suitButtons;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public BhapticsAndroidExampleButtons armsLeftButtons;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public BhapticsAndroidExampleButtons armsRightButtons;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Text pairedDevicesCount;

	[Token(Token = "0x6000018")]
	[Address(RVA = "0xF30FC8", Offset = "0xF30FC8", VA = "0xF30FC8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000019")]
	[Address(RVA = "0xF31110", Offset = "0xF31110", VA = "0xF31110")]
	private void Refresh()
	{
	}

	[Token(Token = "0x600001A")]
	[Address(RVA = "0xF3186C", Offset = "0xF3186C", VA = "0xF3186C")]
	public void PingTactal()
	{
	}

	[Token(Token = "0x600001B")]
	[Address(RVA = "0xF31930", Offset = "0xF31930", VA = "0xF31930")]
	public void PingTactSuit()
	{
	}

	[Token(Token = "0x600001C")]
	[Address(RVA = "0xF3198C", Offset = "0xF3198C", VA = "0xF3198C")]
	public void PingTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x600001D")]
	[Address(RVA = "0xF319FC", Offset = "0xF319FC", VA = "0xF319FC")]
	public void ToggleTactosyArms(bool isLeft)
	{
	}

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xF318C8", Offset = "0xF318C8", VA = "0xF318C8")]
	private void PingPairedDevice(PositionType deviceType)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xF31E24", Offset = "0xF31E24", VA = "0xF31E24")]
	public BhapticsAndroidBasicExample()
	{
	}
}
[Token(Token = "0x2000006")]
public class BhapticsAndroidScanExample : MonoBehaviour
{
	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_ControlButton[] controlButtons;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool open;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Button activeButton;

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xF33210", Offset = "0xF33210", VA = "0xF33210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xF33420", Offset = "0xF33420", VA = "0xF33420")]
	private void Refresh()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xF336D8", Offset = "0xF336D8", VA = "0xF336D8")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000023")]
	[Address(RVA = "0xF336F0", Offset = "0xF336F0", VA = "0xF336F0")]
	private void Open()
	{
	}

	[Token(Token = "0x6000024")]
	[Address(RVA = "0xF33328", Offset = "0xF33328", VA = "0xF33328")]
	private void Close()
	{
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xF337E8", Offset = "0xF337E8", VA = "0xF337E8")]
	public BhapticsAndroidScanExample()
	{
	}
}
[Token(Token = "0x2000007")]
public class BhapticsCharacterController : MonoBehaviour
{
	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float jumpSpeed;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float gravity;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float rotationSpeedH;

	[Token(Token = "0x4000018")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float rotationSpeedV;

	[Token(Token = "0x4000019")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isEnableControl;

	[Token(Token = "0x400001A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 moveDirection;

	[Token(Token = "0x400001B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private HapticSender tactSender;

	[Token(Token = "0x400001C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84B76C", Offset = "0x84B76C")]
	public bool IsRaycastingShooting;

	[Token(Token = "0x400001D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform shootingPoint;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84B7B4", Offset = "0x84B7B4")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private CharacterController characterController;

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xF337F0", Offset = "0xF337F0", VA = "0xF337F0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xF3396C", Offset = "0xF3396C", VA = "0xF3396C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000028")]
	[Address(RVA = "0xF33998", Offset = "0xF33998", VA = "0xF33998")]
	private void ShootPlayer()
	{
	}

	[Token(Token = "0x6000029")]
	[Address(RVA = "0xF34034", Offset = "0xF34034", VA = "0xF34034")]
	private void RotatePlayer()
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xF33ED0", Offset = "0xF33ED0", VA = "0xF33ED0")]
	private void MovePlayer()
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xF34284", Offset = "0xF34284", VA = "0xF34284")]
	public BhapticsCharacterController()
	{
	}
}
[Token(Token = "0x2000008")]
public class BhapticsCustomHapticReceiver : MonoBehaviour
{
	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool IsActive;

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public PositionTag PositionTag;

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xF342E8", Offset = "0xF342E8", VA = "0xF342E8")]
	private void Awake()
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xF34558", Offset = "0xF34558", VA = "0xF34558")]
	private void OnTriggerEnter(Collider bullet)
	{
	}

	[Token(Token = "0x600002E")]
	[Address(RVA = "0xF34718", Offset = "0xF34718", VA = "0xF34718")]
	private void OnCollisionEnter(Collision bullet)
	{
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xF34624", Offset = "0xF34624", VA = "0xF34624")]
	private void Handle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x6000030")]
	[Address(RVA = "0xF34168", Offset = "0xF34168", VA = "0xF34168")]
	public void ReflectHandle(Vector3 contactPoint, HapticSender tactSender)
	{
	}

	[Token(Token = "0x6000031")]
	[Address(RVA = "0xF34808", Offset = "0xF34808", VA = "0xF34808")]
	public BhapticsCustomHapticReceiver()
	{
	}
}
[Token(Token = "0x2000009")]
public class BhapticsDotPointControllerExample : MonoBehaviour
{
	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClipPositionType clipPositionType;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public List<DotPoint> dotPointList;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string key;

	[Token(Token = "0x4000026")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int duration;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xF34818", Offset = "0xF34818", VA = "0xF34818")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xF34898", Offset = "0xF34898", VA = "0xF34898")]
	private void Update()
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xF34A18", Offset = "0xF34A18", VA = "0xF34A18")]
	public void Toggle(DotPoint dot)
	{
	}

	[Token(Token = "0x6000035")]
	[Address(RVA = "0xF34B44", Offset = "0xF34B44", VA = "0xF34B44")]
	private bool AddToList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xF34AA4", Offset = "0xF34AA4", VA = "0xF34AA4")]
	private bool RemoveAtList(DotPoint dot)
	{
		return default(bool);
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xF34BE4", Offset = "0xF34BE4", VA = "0xF34BE4")]
	public BhapticsDotPointControllerExample()
	{
	}
}
[Token(Token = "0x200000A")]
public class BhapticsDotPointExample : MonoBehaviour
{
	[Token(Token = "0x4000027")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int motorIndex;

	[Token(Token = "0x4000028")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int motorIntensity;

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private BhapticsDotPointControllerExample controller;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DotPoint dotPoint;

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xF34C90", Offset = "0xF34C90", VA = "0xF34C90")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xF34D40", Offset = "0xF34D40", VA = "0xF34D40")]
	public void Toggle()
	{
	}

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xF34DDC", Offset = "0xF34DDC", VA = "0xF34DDC")]
	public BhapticsDotPointExample()
	{
	}
}
[Token(Token = "0x200000B")]
public class BhapticsFpsView : MonoBehaviour
{
	[Token(Token = "0x20003AA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8493AC", Offset = "0x8493AC")]
	private sealed class <FPS>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsFpsView <>4__this;

		[Token(Token = "0x4001DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float[] <buffer>5__2;

		[Token(Token = "0x4001DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int <index>5__3;

		[Token(Token = "0x4001DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <frequency>5__4;

		[Token(Token = "0x4001DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool <initial>5__5;

		[Token(Token = "0x4001DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int <lastFrameCount>5__6;

		[Token(Token = "0x4001DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float <lastTime>5__7;

		[Token(Token = "0x170001D8")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019D4")]
			[Address(RVA = "0x19AB9F0", Offset = "0x19AB9F0", VA = "0x19AB9F0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001D9")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019D6")]
			[Address(RVA = "0x19ABA38", Offset = "0x19ABA38", VA = "0x19ABA38", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D1")]
		[Address(RVA = "0x19AB4C8", Offset = "0x19AB4C8", VA = "0x19AB4C8")]
		[DebuggerHidden]
		public <FPS>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x60019D2")]
		[Address(RVA = "0x19AB4F4", Offset = "0x19AB4F4", VA = "0x19AB4F4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D3")]
		[Address(RVA = "0x19AB4F8", Offset = "0x19AB4F8", VA = "0x19AB4F8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019D5")]
		[Address(RVA = "0x19AB9F8", Offset = "0x19AB9F8", VA = "0x19AB9F8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Text fpsText;

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xF34DEC", Offset = "0xF34DEC", VA = "0xF34DEC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xF34E50", Offset = "0xF34E50", VA = "0xF34E50")]
	private void Start()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xF34E7C", Offset = "0xF34E7C", VA = "0xF34E7C")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85502C", Offset = "0x85502C")]
	private IEnumerator FPS()
	{
		return null;
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xF34EFC", Offset = "0xF34EFC", VA = "0xF34EFC")]
	private float Average(float[] floats)
	{
		return default(float);
	}

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xF34F70", Offset = "0xF34F70", VA = "0xF34F70")]
	public float Percentile(float[] sequence, float excelPercentile)
	{
		return default(float);
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xF350C4", Offset = "0xF350C4", VA = "0xF350C4")]
	public BhapticsFpsView()
	{
	}
}
[Token(Token = "0x200000C")]
public class BhapticsHapticBullet : MonoBehaviour
{
	[Token(Token = "0x6000041")]
	[Address(RVA = "0xF355C4", Offset = "0xF355C4", VA = "0xF355C4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xF35648", Offset = "0xF35648", VA = "0xF35648")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000043")]
	[Address(RVA = "0xF356C8", Offset = "0xF356C8", VA = "0xF356C8")]
	public BhapticsHapticBullet()
	{
	}
}
[Token(Token = "0x200000D")]
public class BhapticsHapticClipExample : MonoBehaviour
{
	[Token(Token = "0x400002C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public HapticClip hapticClip;

	[Token(Token = "0x6000044")]
	[Address(RVA = "0xF356D0", Offset = "0xF356D0", VA = "0xF356D0")]
	public void Play()
	{
	}

	[Token(Token = "0x6000045")]
	[Address(RVA = "0xF35770", Offset = "0xF35770", VA = "0xF35770")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000046")]
	[Address(RVA = "0xF35814", Offset = "0xF35814", VA = "0xF35814")]
	public BhapticsHapticClipExample()
	{
	}
}
[Token(Token = "0x200000E")]
public class BhapticsIdentifierPlayExample : MonoBehaviour
{
	[Token(Token = "0x20003AB")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8493BC", Offset = "0x8493BC")]
	private sealed class <PlayCor>d__8 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsIdentifierPlayExample <>4__this;

		[Token(Token = "0x4001DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int <bufferSize>5__2;

		[Token(Token = "0x4001DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private int <index>5__3;

		[Token(Token = "0x4001DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string <identifier>5__4;

		[Token(Token = "0x170001DA")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019DA")]
			[Address(RVA = "0x19ABCB0", Offset = "0x19ABCB0", VA = "0x19ABCB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DB")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019DC")]
			[Address(RVA = "0x19ABCF8", Offset = "0x19ABCF8", VA = "0x19ABCF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019D7")]
		[Address(RVA = "0x19ABA40", Offset = "0x19ABA40", VA = "0x19ABA40")]
		[DebuggerHidden]
		public <PlayCor>d__8(int <>1__state)
		{
		}

		[Token(Token = "0x60019D8")]
		[Address(RVA = "0x19ABA6C", Offset = "0x19ABA6C", VA = "0x19ABA6C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019D9")]
		[Address(RVA = "0x19ABA70", Offset = "0x19ABA70", VA = "0x19ABA70", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019DB")]
		[Address(RVA = "0x19ABCB8", Offset = "0x19ABCB8", VA = "0x19ABCB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400002D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip clip;

	[Token(Token = "0x400002E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text identifierText;

	[Token(Token = "0x400002F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Coroutine currentCoroutine;

	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool applyIdentifier;

	[Token(Token = "0x6000047")]
	[Address(RVA = "0xF3581C", Offset = "0xF3581C", VA = "0xF3581C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000048")]
	[Address(RVA = "0xF35894", Offset = "0xF35894", VA = "0xF35894")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xF358DC", Offset = "0xF358DC", VA = "0xF358DC")]
	private void Update()
	{
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xF35820", Offset = "0xF35820", VA = "0xF35820")]
	private void Play()
	{
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xF359DC", Offset = "0xF359DC", VA = "0xF359DC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855094", Offset = "0x855094")]
	private IEnumerator PlayCor()
	{
		return null;
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xF35A5C", Offset = "0xF35A5C", VA = "0xF35A5C")]
	public BhapticsIdentifierPlayExample()
	{
	}
}
[Token(Token = "0x200000F")]
public class BhapticsIsConnectIsPlayingExample : MonoBehaviour
{
	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public FileHapticClip[] clips;

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text isConnectText;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text clipText;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text isPlayingText;

	[Token(Token = "0x600004D")]
	[Address(RVA = "0xF35A64", Offset = "0xF35A64", VA = "0xF35A64")]
	private void Start()
	{
	}

	[Token(Token = "0x600004E")]
	[Address(RVA = "0xF35C50", Offset = "0xF35C50", VA = "0xF35C50")]
	private void Update()
	{
	}

	[Token(Token = "0x600004F")]
	[Address(RVA = "0xF366A4", Offset = "0xF366A4", VA = "0xF366A4")]
	private void PlayClips()
	{
	}

	[Token(Token = "0x6000050")]
	[Address(RVA = "0xF36714", Offset = "0xF36714", VA = "0xF36714")]
	public BhapticsIsConnectIsPlayingExample()
	{
	}
}
[Token(Token = "0x2000010")]
public class BhapticsLongTest : MonoBehaviour
{
	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x6000051")]
	[Address(RVA = "0xF3681C", Offset = "0xF3681C", VA = "0xF3681C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000052")]
	[Address(RVA = "0xF368A4", Offset = "0xF368A4", VA = "0xF368A4")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x6000053")]
	[Address(RVA = "0xF36914", Offset = "0xF36914", VA = "0xF36914")]
	private void ReloadScene()
	{
	}

	[Token(Token = "0x6000054")]
	[Address(RVA = "0xF36A7C", Offset = "0xF36A7C", VA = "0xF36A7C")]
	public BhapticsLongTest()
	{
	}
}
[Token(Token = "0x2000011")]
public class BhapticsProfiler : MonoBehaviour
{
	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int numOfTactClips;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HapticClip[] tactClips;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool hapticEnable;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int targetFrameRate;

	[Token(Token = "0x6000055")]
	[Address(RVA = "0xF37048", Offset = "0xF37048", VA = "0xF37048")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000056")]
	[Address(RVA = "0xF370B4", Offset = "0xF370B4", VA = "0xF370B4")]
	private void TriggerPlay()
	{
	}

	[Token(Token = "0x6000057")]
	[Address(RVA = "0xF372D8", Offset = "0xF372D8", VA = "0xF372D8")]
	public BhapticsProfiler()
	{
	}
}
[Token(Token = "0x2000012")]
public class BhapticsReflectExample : MonoBehaviour
{
	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ArmsHapticClip armsHapticClip;

	[Token(Token = "0x400003B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isReflect;

	[Token(Token = "0x6000058")]
	[Address(RVA = "0xF376AC", Offset = "0xF376AC", VA = "0xF376AC")]
	public void Play()
	{
	}

	[Token(Token = "0x6000059")]
	[Address(RVA = "0xF3774C", Offset = "0xF3774C", VA = "0xF3774C")]
	public void Stop()
	{
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xF377F0", Offset = "0xF377F0", VA = "0xF377F0")]
	public void OnClickToggle(Toggle toggle)
	{
	}

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xF378BC", Offset = "0xF378BC", VA = "0xF378BC")]
	public BhapticsReflectExample()
	{
	}
}
[Token(Token = "0x2000013")]
public class BhapticsRotate : MonoBehaviour
{
	[Token(Token = "0x400003C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool isRandom;

	[Token(Token = "0x400003D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float rotationSpeed;

	[Token(Token = "0x400003E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Vector3 axis;

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xF378C4", Offset = "0xF378C4", VA = "0xF378C4")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xF37924", Offset = "0xF37924", VA = "0xF37924")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600005E")]
	[Address(RVA = "0xF3797C", Offset = "0xF3797C", VA = "0xF3797C")]
	private void Update()
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xF379B4", Offset = "0xF379B4", VA = "0xF379B4")]
	private void RandomAxis()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xF37A2C", Offset = "0xF37A2C", VA = "0xF37A2C")]
	public BhapticsRotate()
	{
	}
}
[Token(Token = "0x2000014")]
public class BhapticsRotateExample : MonoBehaviour
{
	[Token(Token = "0x400003F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VestHapticClip vestHapticClip;

	[Token(Token = "0x4000040")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x84B860", Offset = "0x84B860")]
	public Text angleXText;

	[Token(Token = "0x4000041")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text offsetYText;

	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float angleX;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float offsetY;

	[Token(Token = "0x6000061")]
	[Address(RVA = "0xF37A44", Offset = "0xF37A44", VA = "0xF37A44")]
	public void PlayWithRotate()
	{
	}

	[Token(Token = "0x6000062")]
	[Address(RVA = "0xF37B04", Offset = "0xF37B04", VA = "0xF37B04")]
	public void Stop()
	{
	}

	[Token(Token = "0x6000063")]
	[Address(RVA = "0xF37BA8", Offset = "0xF37BA8", VA = "0xF37BA8")]
	public void OnAngleXChanged(Slider slider)
	{
	}

	[Token(Token = "0x6000064")]
	[Address(RVA = "0xF37C94", Offset = "0xF37C94", VA = "0xF37C94")]
	public void OnOffsetYChanged(Slider slider)
	{
	}

	[Token(Token = "0x6000065")]
	[Address(RVA = "0xF37D90", Offset = "0xF37D90", VA = "0xF37D90")]
	public BhapticsRotateExample()
	{
	}
}
[Token(Token = "0x2000015")]
public class BhapticsShootingCharacter : MonoBehaviour
{
	[Token(Token = "0x20003AC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8493CC", Offset = "0x8493CC")]
	private sealed class <RepeatShoot>d__13 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BhapticsShootingCharacter <>4__this;

		[Token(Token = "0x170001DC")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019E0")]
			[Address(RVA = "0x19ABE2C", Offset = "0x19ABE2C", VA = "0x19ABE2C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DD")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E2")]
			[Address(RVA = "0x19ABE74", Offset = "0x19ABE74", VA = "0x19ABE74", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019DD")]
		[Address(RVA = "0x19ABD00", Offset = "0x19ABD00", VA = "0x19ABD00")]
		[DebuggerHidden]
		public <RepeatShoot>d__13(int <>1__state)
		{
		}

		[Token(Token = "0x60019DE")]
		[Address(RVA = "0x19ABD2C", Offset = "0x19ABD2C", VA = "0x19ABD2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019DF")]
		[Address(RVA = "0x19ABD30", Offset = "0x19ABD30", VA = "0x19ABD30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E1")]
		[Address(RVA = "0x19ABE34", Offset = "0x19ABE34", VA = "0x19ABE34", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform target;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform shootPointLeft;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform shootPointRight;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private GameObject bulletPrefab;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x84B8B0", Offset = "0x84B8B0")]
	[SerializeField]
	private Transform[] lookingTransforms;

	[Token(Token = "0x4000049")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400004A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int shootCount;

	[Token(Token = "0x400004B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float shootDelay;

	[Token(Token = "0x400004C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float bulletSpeed;

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xF37D98", Offset = "0xF37D98", VA = "0xF37D98")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xF37DFC", Offset = "0xF37DFC", VA = "0xF37DFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000068")]
	[Address(RVA = "0xF37F9C", Offset = "0xF37F9C", VA = "0xF37F9C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xF38048", Offset = "0xF38048", VA = "0xF38048")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xF37FC8", Offset = "0xF37FC8", VA = "0xF37FC8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8550FC", Offset = "0x8550FC")]
	private IEnumerator RepeatShoot()
	{
		return null;
	}

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xF38050", Offset = "0xF38050", VA = "0xF38050")]
	private void ShootTarget(int hand)
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xF37E00", Offset = "0xF37E00", VA = "0xF37E00")]
	private void Looking()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xF382E4", Offset = "0xF382E4", VA = "0xF382E4")]
	public BhapticsShootingCharacter()
	{
	}
}
[Token(Token = "0x2000016")]
public class BhapticsStreamingTest : MonoBehaviour
{
	[Token(Token = "0x400004D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Button button;

	[Token(Token = "0x400004E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text text;

	[Token(Token = "0x400004F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private HapticClip clip;

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xF38300", Offset = "0xF38300", VA = "0xF38300")]
	private void Start()
	{
	}

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xF38360", Offset = "0xF38360", VA = "0xF38360")]
	private void Update()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xF38364", Offset = "0xF38364", VA = "0xF38364")]
	private void Check()
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xF38960", Offset = "0xF38960", VA = "0xF38960")]
	public void Toggle()
	{
	}

	[Token(Token = "0x6000072")]
	[Address(RVA = "0xF389B8", Offset = "0xF389B8", VA = "0xF389B8")]
	public BhapticsStreamingTest()
	{
	}
}
[Token(Token = "0x2000017")]
public class BhapticsTeleportPoint : MonoBehaviour
{
	[Token(Token = "0x6000073")]
	[Address(RVA = "0xF389C0", Offset = "0xF389C0", VA = "0xF389C0")]
	public BhapticsTeleportPoint()
	{
	}
}
[Token(Token = "0x2000018")]
public class BhapticsTestScript : MonoBehaviour
{
	[Token(Token = "0x4000050")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private HapticClip[] tactClips;

	[Token(Token = "0x4000051")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider intensitySlider;

	[Token(Token = "0x4000052")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider durationSlider;

	[Token(Token = "0x4000053")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider offsetXSlider;

	[Token(Token = "0x4000054")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Slider offsetYSlider;

	[Token(Token = "0x4000055")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle reflectToggle;

	[Token(Token = "0x4000056")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private Button openBluetoothSettingButton;

	[Token(Token = "0x4000057")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Button playButton;

	[Token(Token = "0x4000058")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Button toggleEnableAllButton;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xF389C8", Offset = "0xF389C8", VA = "0xF389C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xF38BC4", Offset = "0xF38BC4", VA = "0xF38BC4")]
	private void ToggleEnable()
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xF38D10", Offset = "0xF38D10", VA = "0xF38D10")]
	private void Open()
	{
	}

	[Token(Token = "0x6000077")]
	[Address(RVA = "0xF38D68", Offset = "0xF38D68", VA = "0xF38D68")]
	private void Play()
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xF38F50", Offset = "0xF38F50", VA = "0xF38F50")]
	public BhapticsTestScript()
	{
	}
}
[Token(Token = "0x2000019")]
public class BhapticsVisualFeedbackOnMotors : MonoBehaviour
{
	[Token(Token = "0x4000059")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public PositionType tactPositionType;

	[Token(Token = "0x400005A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject visualMotorsObject;

	[Token(Token = "0x400005B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Gradient hapticColor;

	[Token(Token = "0x400005C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject[] visualMotors;

	[Token(Token = "0x6000079")]
	[Address(RVA = "0xF39264", Offset = "0xF39264", VA = "0xF39264")]
	private void Start()
	{
	}

	[Token(Token = "0x600007A")]
	[Address(RVA = "0xF394E0", Offset = "0xF394E0", VA = "0xF394E0")]
	private void Update()
	{
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xF395E0", Offset = "0xF395E0", VA = "0xF395E0")]
	private void ShowFeedbackEffect(int[] feedback)
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xF39740", Offset = "0xF39740", VA = "0xF39740")]
	public BhapticsVisualFeedbackOnMotors()
	{
	}
}
[Token(Token = "0x200001A")]
public class BhapticsVRBody : MonoBehaviour
{
	[Token(Token = "0x400005D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform camera;

	[Token(Token = "0x400005E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float distance;

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xF39154", Offset = "0xF39154", VA = "0xF39154")]
	private void Update()
	{
	}

	[Token(Token = "0x600007E")]
	[Address(RVA = "0xF39158", Offset = "0xF39158", VA = "0xF39158")]
	private void FollowCamera()
	{
	}

	[Token(Token = "0x600007F")]
	[Address(RVA = "0xF3925C", Offset = "0xF3925C", VA = "0xF3925C")]
	public BhapticsVRBody()
	{
	}
}
[Token(Token = "0x200001B")]
public class BhapticsWidgetInstiate : MonoBehaviour
{
	[Token(Token = "0x400005F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AndroidWidget_UI widgetPrefab;

	[Token(Token = "0x6000080")]
	[Address(RVA = "0xF39950", Offset = "0xF39950", VA = "0xF39950")]
	private void Start()
	{
	}

	[Token(Token = "0x6000081")]
	[Address(RVA = "0xF399AC", Offset = "0xF399AC", VA = "0xF399AC")]
	private void CreateWidget()
	{
	}

	[Token(Token = "0x6000082")]
	[Address(RVA = "0xF39A30", Offset = "0xF39A30", VA = "0xF39A30")]
	public BhapticsWidgetInstiate()
	{
	}
}
[Token(Token = "0x200001C")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x84728C", Offset = "0x84728C")]
public class BhapticsConfig : ScriptableObject
{
	[Token(Token = "0x4000060")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84B9A8", Offset = "0x84B9A8")]
	public bool launchPlayerIfNotRunning;

	[Token(Token = "0x4000061")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84B9E0", Offset = "0x84B9E0")]
	public BhapticsAndroidManager AndroidManagerPrefab;

	[Token(Token = "0x4000062")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BA18", Offset = "0x84BA18")]
	public bool UseOnlyBackgroundMode;

	[Token(Token = "0x6000083")]
	[Address(RVA = "0xF342D8", Offset = "0xF342D8", VA = "0xF342D8")]
	public BhapticsConfig()
	{
	}
}
[Token(Token = "0x200001D")]
public class BhapticsLogger
{
	[Token(Token = "0x20003AD")]
	public enum LogLevel
	{
		[Token(Token = "0x4001DDE")]
		Debug,
		[Token(Token = "0x4001DDF")]
		Info,
		[Token(Token = "0x4001DE0")]
		Error
	}

	[Token(Token = "0x4000063")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static LogLevel level;

	[Token(Token = "0x6000084")]
	[Address(RVA = "0xF335EC", Offset = "0xF335EC", VA = "0xF335EC")]
	public static void LogDebug(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000085")]
	[Address(RVA = "0xF34468", Offset = "0xF34468", VA = "0xF34468")]
	public static void LogInfo(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000086")]
	[Address(RVA = "0xF3671C", Offset = "0xF3671C", VA = "0xF3671C")]
	public static void LogError(string format, params object[] args)
	{
	}

	[Token(Token = "0x6000087")]
	[Address(RVA = "0xF367C4", Offset = "0xF367C4", VA = "0xF367C4")]
	public BhapticsLogger()
	{
	}
}
[Token(Token = "0x200001E")]
public class BhapticsManager
{
	[Token(Token = "0x4000064")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IHaptic Haptic;

	[Token(Token = "0x4000065")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static bool Init;

	[Token(Token = "0x6000089")]
	[Address(RVA = "0xF3259C", Offset = "0xF3259C", VA = "0xF3259C")]
	public static IHaptic GetHaptic()
	{
		return null;
	}

	[Token(Token = "0x600008A")]
	[Address(RVA = "0xF36A84", Offset = "0xF36A84", VA = "0xF36A84")]
	public static void Initialize()
	{
	}

	[Token(Token = "0x600008B")]
	[Address(RVA = "0xF36ADC", Offset = "0xF36ADC", VA = "0xF36ADC")]
	public static void Dispose()
	{
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xF36D50", Offset = "0xF36D50", VA = "0xF36D50")]
	public BhapticsManager()
	{
	}
}
[Token(Token = "0x200001F")]
public class BhapticsVisualizer : MonoBehaviour
{
	[Token(Token = "0x4000066")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private VisualFeedback[] visualFeedback;

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xF39748", Offset = "0xF39748", VA = "0xF39748")]
	private void Awake()
	{
	}

	[Token(Token = "0x600008F")]
	[Address(RVA = "0xF397AC", Offset = "0xF397AC", VA = "0xF397AC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000090")]
	[Address(RVA = "0xF39948", Offset = "0xF39948", VA = "0xF39948")]
	public BhapticsVisualizer()
	{
	}
}
[Token(Token = "0x2000020")]
public class Bhaptics_Setup : MonoBehaviour
{
	[Token(Token = "0x4000067")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public BhapticsConfig Config;

	[Token(Token = "0x4000068")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static Bhaptics_Setup instance;

	[Token(Token = "0x6000091")]
	[Address(RVA = "0xF39A38", Offset = "0xF39A38", VA = "0xF39A38")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000092")]
	[Address(RVA = "0xF39EE8", Offset = "0xF39EE8", VA = "0xF39EE8")]
	private void OnApplicationQuit()
	{
	}

	[Token(Token = "0x6000093")]
	[Address(RVA = "0xF39B50", Offset = "0xF39B50", VA = "0xF39B50")]
	private void Initialize()
	{
	}

	[Token(Token = "0x6000094")]
	[Address(RVA = "0xF39F40", Offset = "0xF39F40", VA = "0xF39F40")]
	public Bhaptics_Setup()
	{
	}
}
[Token(Token = "0x2000021")]
public class CompileTexture : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003AE")]
	public class Label
	{
		[Token(Token = "0x4001DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Texture2D labelTexture;

		[Token(Token = "0x4001DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float posX;

		[Token(Token = "0x4001DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float posY;

		[Token(Token = "0x4001DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854278", Offset = "0x854278")]
		public float scale;

		[Token(Token = "0x60019E3")]
		[Address(RVA = "0x19AD7E4", Offset = "0x19AD7E4", VA = "0x19AD7E4")]
		public Label()
		{
		}
	}

	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Texture2D[] mainSkins;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public int mainTexOffsetX;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[HideInInspector]
	public int mainTexOffsetY;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Label[] labels;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Texture2D newSkin;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Texture2D newSkinSaved;

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Renderer objRenderer;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem fire;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Slider scaleSlider;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float scaleSaved;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Slider mainTexOffsetXSlider;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Slider mainTexOffsetYSlider;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private int x;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int y;

	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private int countX;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private int countY;

	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool alreadyPainted;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool alreadyPaintedSaved;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Shop shop;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private TabController tabController;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public bool labelSpawn;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private RaycastHit hit;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Vector2 pixelUV;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector2 pixelUVsaved;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public List<Label> labelsSaved;

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Texture2D countChengeLabel;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	public Texture2D cursorPaintLabel;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	public Texture2D cursor;

	[Token(Token = "0x4000085")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	public ComputeShader shader;

	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private int kiMainSkin;

	[Token(Token = "0x4000087")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private ComputeBuffer computeBuffer;

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	public bool changeMainSkin;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Texture2D newSkinTurnBack;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private int kernelHandleMain;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
	private int kernelHandle;

	[Token(Token = "0x6000095")]
	[Address(RVA = "0xC47FF8", Offset = "0xC47FF8", VA = "0xC47FF8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000096")]
	[Address(RVA = "0xC48350", Offset = "0xC48350", VA = "0xC48350")]
	private void Update()
	{
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xC48CC4", Offset = "0xC48CC4", VA = "0xC48CC4")]
	public void MainSkinMake()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xC48F18", Offset = "0xC48F18", VA = "0xC48F18")]
	public void TurnBack()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xC487E4", Offset = "0xC487E4", VA = "0xC487E4")]
	public void CompileTextureShader()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xC48C80", Offset = "0xC48C80", VA = "0xC48C80")]
	public void PaintLabel()
	{
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xC48F6C", Offset = "0xC48F6C", VA = "0xC48F6C")]
	public void LabelScaleSlider()
	{
	}

	[Token(Token = "0x600009C")]
	[Address(RVA = "0xC48FDC", Offset = "0xC48FDC", VA = "0xC48FDC")]
	public void MainTexOffsetYSlider()
	{
	}

	[Token(Token = "0x600009D")]
	[Address(RVA = "0xC4901C", Offset = "0xC4901C", VA = "0xC4901C")]
	public void MainTexOffsetXSlider()
	{
	}

	[Token(Token = "0x600009E")]
	[Address(RVA = "0xC48410", Offset = "0xC48410", VA = "0xC48410")]
	public void TextureCreate()
	{
	}

	[Token(Token = "0x600009F")]
	[Address(RVA = "0xC4905C", Offset = "0xC4905C", VA = "0xC4905C")]
	public CompileTexture()
	{
	}
}
[Token(Token = "0x2000022")]
public class LabelSpawner : MonoBehaviour
{
	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x60000A0")]
	[Address(RVA = "0xCE1EDC", Offset = "0xCE1EDC", VA = "0xCE1EDC")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A1")]
	[Address(RVA = "0xCE1F40", Offset = "0xCE1F40", VA = "0xCE1F40")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A2")]
	[Address(RVA = "0xCE2230", Offset = "0xCE2230", VA = "0xCE2230")]
	public LabelSpawner()
	{
	}
}
[Token(Token = "0x2000023")]
public class MeshCombiner : MonoBehaviour
{
	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xCEC520", Offset = "0xCEC520", VA = "0xCEC520")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xCED058", Offset = "0xCED058", VA = "0xCED058")]
	private int Contains(ArrayList searchList, string searchName)
	{
		return default(int);
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xCED15C", Offset = "0xCED15C", VA = "0xCED15C")]
	public MeshCombiner()
	{
	}
}
[Token(Token = "0x2000024")]
public class RotateObject : MonoBehaviour
{
	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float rotSpeed;

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xDD761C", Offset = "0xDD761C", VA = "0xDD761C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xDD7724", Offset = "0xDD7724", VA = "0xDD7724")]
	public RotateObject()
	{
	}
}
[Token(Token = "0x2000025")]
public class Shop : MonoBehaviour
{
	[Token(Token = "0x400008E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Transform target;

	[Token(Token = "0x400008F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform shopCamera;

	[Token(Token = "0x4000090")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform[] guns;

	[Token(Token = "0x4000091")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform[] newGunsArray;

	[Token(Token = "0x4000092")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject background;

	[Token(Token = "0x4000093")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float scrollingSpeed;

	[Token(Token = "0x4000094")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float z;

	[Token(Token = "0x4000095")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 newPosition;

	[Token(Token = "0x4000096")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private int currentIndex;

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool createOnce;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private CompileTexture compileTexture;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject embers;

	[Token(Token = "0x400009A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public RotateObject rotateTarget;

	[Token(Token = "0x400009B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private TabController tabController;

	[Token(Token = "0x400009C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject start;

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xDD84D4", Offset = "0xDD84D4", VA = "0xDD84D4")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xDD87F0", Offset = "0xDD87F0", VA = "0xDD87F0")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xDD8A7C", Offset = "0xDD8A7C", VA = "0xDD8A7C")]
	public void MoveRight()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xDD8B34", Offset = "0xDD8B34", VA = "0xDD8B34")]
	public void MoveLeft()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xDD8BE4", Offset = "0xDD8BE4", VA = "0xDD8BE4")]
	public void Enter()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xDD8E44", Offset = "0xDD8E44", VA = "0xDD8E44")]
	public void ActivateBackground()
	{
	}

	[Token(Token = "0x60000AE")]
	[Address(RVA = "0xDD8ED8", Offset = "0xDD8ED8", VA = "0xDD8ED8")]
	public Shop()
	{
	}
}
[Token(Token = "0x2000026")]
public class TabController : MonoBehaviour
{
	[Token(Token = "0x20003AF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8493DC", Offset = "0x8493DC")]
	private sealed class <OpenCloseTabCoroutine>d__18 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TabController <>4__this;

		[Token(Token = "0x170001DE")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60019E7")]
			[Address(RVA = "0xFD2EA4", Offset = "0xFD2EA4", VA = "0xFD2EA4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001DF")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019E9")]
			[Address(RVA = "0xFD2EEC", Offset = "0xFD2EEC", VA = "0xFD2EEC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019E4")]
		[Address(RVA = "0xFD2CC0", Offset = "0xFD2CC0", VA = "0xFD2CC0")]
		[DebuggerHidden]
		public <OpenCloseTabCoroutine>d__18(int <>1__state)
		{
		}

		[Token(Token = "0x60019E5")]
		[Address(RVA = "0xFD2CEC", Offset = "0xFD2CEC", VA = "0xFD2CEC", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019E6")]
		[Address(RVA = "0xFD2CF0", Offset = "0xFD2CF0", VA = "0xFD2CF0", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019E8")]
		[Address(RVA = "0xFD2EAC", Offset = "0xFD2EAC", VA = "0xFD2EAC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform tab;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool open;

	[Token(Token = "0x400009F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	private bool move;

	[Token(Token = "0x40000A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RectTransform skinsParent;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Texture2D[] skins;

	[Token(Token = "0x40000A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image skinPrefab;

	[Token(Token = "0x40000A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject[] skinsArray;

	[Token(Token = "0x40000A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Image skin;

	[Token(Token = "0x40000A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public int countChenge;

	[Token(Token = "0x40000A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[HideInInspector]
	public int countChengeLabel;

	[Token(Token = "0x40000A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CompileTexture compileTexture;

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Dropdown dropdownLabels;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Dropdown dropdownLabelsSaved;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool dontCallFunction;

	[Token(Token = "0x60000AF")]
	[Address(RVA = "0x105B168", Offset = "0x105B168", VA = "0x105B168")]
	private void Start()
	{
	}

	[Token(Token = "0x60000B0")]
	[Address(RVA = "0x105B6E4", Offset = "0x105B6E4", VA = "0x105B6E4")]
	public void ChangeLabelIndex()
	{
	}

	[Token(Token = "0x60000B1")]
	[Address(RVA = "0x105B708", Offset = "0x105B708", VA = "0x105B708")]
	public void SkinsChenge()
	{
	}

	[Token(Token = "0x60000B2")]
	[Address(RVA = "0x105B7B4", Offset = "0x105B7B4", VA = "0x105B7B4")]
	public void OpenCloseTab()
	{
	}

	[Token(Token = "0x60000B3")]
	[Address(RVA = "0x105B7F4", Offset = "0x105B7F4", VA = "0x105B7F4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855164", Offset = "0x855164")]
	public IEnumerator OpenCloseTabCoroutine()
	{
		return null;
	}

	[Token(Token = "0x60000B4")]
	[Address(RVA = "0x105B874", Offset = "0x105B874", VA = "0x105B874")]
	public TabController()
	{
	}
}
[Token(Token = "0x2000027")]
public class MLPForceSaveProbes : MonoBehaviour
{
	[Token(Token = "0x60000B5")]
	[Address(RVA = "0xCE766C", Offset = "0xCE766C", VA = "0xCE766C")]
	public MLPForceSaveProbes()
	{
	}
}
[Token(Token = "0x2000028")]
[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x8472F8", Offset = "0x8472F8")]
public class FastList<T>
{
	[Token(Token = "0x20003B0")]
	public delegate int CompareFunc(T left, T right);

	[Token(Token = "0x20003B1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8493EC", Offset = "0x8493EC")]
	private sealed class <GetEnumerator>d__25 : IEnumerator<T>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <>1__state;

		[Token(Token = "0x4001DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T <>2__current;

		[Token(Token = "0x4001DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public FastList<T> <>4__this;

		[Token(Token = "0x4001DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private int <i>5__2;

		[Token(Token = "0x170001E0")]
		private T System.Collections.Generic.IEnumerator<T>.Current
		{
			[Token(Token = "0x60019F1")]
			[DebuggerHidden]
			get
			{
				return (T)null;
			}
		}

		[Token(Token = "0x170001E1")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60019F3")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60019EE")]
		[DebuggerHidden]
		public <GetEnumerator>d__25(int <>1__state)
		{
		}

		[Token(Token = "0x60019EF")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60019F0")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60019F2")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public T[] array;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public int size;

	[Token(Token = "0x1700000C")]
	public int Count
	{
		[Token(Token = "0x60000B8")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x60000B9")]
		set
		{
		}
	}

	[Token(Token = "0x1700000D")]
	public T Item
	{
		[Token(Token = "0x60000BA")]
		get
		{
			return (T)null;
		}
		[Token(Token = "0x60000BB")]
		set
		{
		}
	}

	[Token(Token = "0x60000B6")]
	public FastList()
	{
	}

	[Token(Token = "0x60000B7")]
	public FastList(int size)
	{
	}

	[Token(Token = "0x60000BC")]
	public void Add(T item)
	{
	}

	[Token(Token = "0x60000BD")]
	public void AddUnique(T item)
	{
	}

	[Token(Token = "0x60000BE")]
	public void AddRange(IEnumerable<T> items)
	{
	}

	[Token(Token = "0x60000BF")]
	public void Insert(int index, T item)
	{
	}

	[Token(Token = "0x60000C0")]
	public bool Remove(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C1")]
	public void RemoveAt(int index)
	{
	}

	[Token(Token = "0x60000C2")]
	public bool RemoveFast(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C3")]
	public void RemoveAtFast(int index)
	{
	}

	[Token(Token = "0x60000C4")]
	public bool Contains(T item)
	{
		return default(bool);
	}

	[Token(Token = "0x60000C5")]
	public int IndexOf(T item)
	{
		return default(int);
	}

	[Token(Token = "0x60000C6")]
	public T Pop()
	{
		return (T)null;
	}

	[Token(Token = "0x60000C7")]
	public T[] ToArray()
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	public void Sort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000C9")]
	public void InsertionSort(CompareFunc comparer)
	{
	}

	[Token(Token = "0x60000CA")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8551CC", Offset = "0x8551CC")]
	public IEnumerator<T> GetEnumerator()
	{
		return null;
	}

	[Token(Token = "0x60000CB")]
	public T Find(Predicate<T> match)
	{
		return (T)null;
	}

	[Token(Token = "0x60000CC")]
	private void Allocate()
	{
	}

	[Token(Token = "0x60000CD")]
	private void Trim()
	{
	}

	[Token(Token = "0x60000CE")]
	public void Clear()
	{
	}

	[Token(Token = "0x60000CF")]
	public void Release()
	{
	}
}
[Token(Token = "0x2000029")]
public class InspectorNoteAttribute : PropertyAttribute
{
	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string header;

	[Token(Token = "0x40000AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public readonly string message;

	[Token(Token = "0x60000D0")]
	[Address(RVA = "0xBAD230", Offset = "0xBAD230", VA = "0xBAD230")]
	public InspectorNoteAttribute(string header, string message = "")
	{
	}
}
[Token(Token = "0x200002A")]
public class InspectorCommentAttribute : PropertyAttribute
{
	[Token(Token = "0x40000AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public readonly string message;

	[Token(Token = "0x60000D1")]
	[Address(RVA = "0xBAD1FC", Offset = "0xBAD1FC", VA = "0xBAD1FC")]
	public InspectorCommentAttribute(string message = "")
	{
	}
}
[Token(Token = "0x200002B")]
public class DebugUIBuilder : MonoBehaviour
{
	[Token(Token = "0x20003B2")]
	public delegate void OnClick();

	[Token(Token = "0x20003B3")]
	public delegate void OnToggleValueChange(Toggle t);

	[Token(Token = "0x20003B4")]
	public delegate void OnSlider(float f);

	[Token(Token = "0x20003B5")]
	public delegate bool ActiveUpdate();

	[Token(Token = "0x20003B6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8493FC", Offset = "0x8493FC")]
	private sealed class <>c__DisplayClass35_0
	{
		[Token(Token = "0x4001DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnClick handler;

		[Token(Token = "0x6001A04")]
		[Address(RVA = "0x19AE230", Offset = "0x19AE230", VA = "0x19AE230")]
		public <>c__DisplayClass35_0()
		{
		}

		[Token(Token = "0x6001A05")]
		[Address(RVA = "0x19AE238", Offset = "0x19AE238", VA = "0x19AE238")]
		internal void <AddButton>b__0()
		{
		}
	}

	[Token(Token = "0x20003B7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84940C", Offset = "0x84940C")]
	private sealed class <>c__DisplayClass37_0
	{
		[Token(Token = "0x4001DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnSlider onValueChanged;

		[Token(Token = "0x6001A06")]
		[Address(RVA = "0x19AE2FC", Offset = "0x19AE2FC", VA = "0x19AE2FC")]
		public <>c__DisplayClass37_0()
		{
		}

		[Token(Token = "0x6001A07")]
		[Address(RVA = "0x19AE304", Offset = "0x19AE304", VA = "0x19AE304")]
		internal void <AddSlider>b__0(float f)
		{
		}
	}

	[Token(Token = "0x20003B8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84941C", Offset = "0x84941C")]
	private sealed class <>c__DisplayClass39_0
	{
		[Token(Token = "0x4001DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001A08")]
		[Address(RVA = "0x19AE3E4", Offset = "0x19AE3E4", VA = "0x19AE3E4")]
		public <>c__DisplayClass39_0()
		{
		}

		[Token(Token = "0x6001A09")]
		[Address(RVA = "0x19AE3EC", Offset = "0x19AE3EC", VA = "0x19AE3EC")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20003B9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84942C", Offset = "0x84942C")]
	private sealed class <>c__DisplayClass40_0
	{
		[Token(Token = "0x4001DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange onValueChanged;

		[Token(Token = "0x4001DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle t;

		[Token(Token = "0x6001A0A")]
		[Address(RVA = "0x19AE60C", Offset = "0x19AE60C", VA = "0x19AE60C")]
		public <>c__DisplayClass40_0()
		{
		}

		[Token(Token = "0x6001A0B")]
		[Address(RVA = "0x19AE614", Offset = "0x19AE614", VA = "0x19AE614")]
		internal void <AddToggle>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x20003BA")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84943C", Offset = "0x84943C")]
	private sealed class <>c__DisplayClass41_0
	{
		[Token(Token = "0x4001DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public OnToggleValueChange handler;

		[Token(Token = "0x4001DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle tb;

		[Token(Token = "0x6001A0C")]
		[Address(RVA = "0x19AE638", Offset = "0x19AE638", VA = "0x19AE638")]
		public <>c__DisplayClass41_0()
		{
		}

		[Token(Token = "0x6001A0D")]
		[Address(RVA = "0x19AE640", Offset = "0x19AE640", VA = "0x19AE640")]
		internal void <AddRadio>b__0(bool <p0>)
		{
		}
	}

	[Token(Token = "0x40000B0")]
	public const int DEBUG_PANE_CENTER = 0;

	[Token(Token = "0x40000B1")]
	public const int DEBUG_PANE_RIGHT = 1;

	[Token(Token = "0x40000B2")]
	public const int DEBUG_PANE_LEFT = 2;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private RectTransform buttonPrefab;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform labelPrefab;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private RectTransform sliderPrefab;

	[Token(Token = "0x40000B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private RectTransform dividerPrefab;

	[Token(Token = "0x40000B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private RectTransform togglePrefab;

	[Token(Token = "0x40000B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private RectTransform radioPrefab;

	[Token(Token = "0x40000B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private GameObject uiHelpersToInstantiate;

	[Token(Token = "0x40000BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private Transform[] targetContentPanels;

	[Token(Token = "0x40000BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool[] reEnable;

	[Token(Token = "0x40000BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private List<GameObject> toEnable;

	[Token(Token = "0x40000BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private List<GameObject> toDisable;

	[Token(Token = "0x40000BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static DebugUIBuilder instance;

	[Token(Token = "0x40000BF")]
	private const float elementSpacing = 16f;

	[Token(Token = "0x40000C0")]
	private const float marginH = 16f;

	[Token(Token = "0x40000C1")]
	private const float marginV = 16f;

	[Token(Token = "0x40000C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector2[] insertPositions;

	[Token(Token = "0x40000C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private List<RectTransform>[] insertedElements;

	[Token(Token = "0x40000C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 menuOffset;

	[Token(Token = "0x40000C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private OVRCameraRig rig;

	[Token(Token = "0x40000C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Dictionary<string, ToggleGroup> radioGroups;

	[Token(Token = "0x40000C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private LaserPointer lp;

	[Token(Token = "0x40000C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private LineRenderer lr;

	[Token(Token = "0x40000C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public LaserPointer.LaserBeamBehavior laserBeamBehavior;

	[Token(Token = "0x60000D2")]
	[Address(RVA = "0xBFBB6C", Offset = "0xBFBB6C", VA = "0xBFBB6C")]
	public void Awake()
	{
	}

	[Token(Token = "0x60000D3")]
	[Address(RVA = "0xBFC098", Offset = "0xBFC098", VA = "0xBFC098")]
	public void Show()
	{
	}

	[Token(Token = "0x60000D4")]
	[Address(RVA = "0xBFC664", Offset = "0xBFC664", VA = "0xBFC664")]
	public void Hide()
	{
	}

	[Token(Token = "0x60000D5")]
	[Address(RVA = "0xBFC454", Offset = "0xBFC454", VA = "0xBFC454")]
	private void Relayout()
	{
	}

	[Token(Token = "0x60000D6")]
	[Address(RVA = "0xBFC820", Offset = "0xBFC820", VA = "0xBFC820")]
	private void AddRect(RectTransform r, int targetCanvas)
	{
	}

	[Token(Token = "0x60000D7")]
	[Address(RVA = "0xBFCB60", Offset = "0xBFCB60", VA = "0xBFCB60")]
	public RectTransform AddButton(string label, OnClick handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000D8")]
	[Address(RVA = "0xBFCDFC", Offset = "0xBFCDFC", VA = "0xBFCDFC")]
	public RectTransform AddLabel(string label, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xBFCF08", Offset = "0xBFCF08", VA = "0xBFCF08")]
	public RectTransform AddSlider(string label, float min, float max, OnSlider onValueChanged, bool wholeNumbersOnly = false, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xBFD0F4", Offset = "0xBFD0F4", VA = "0xBFD0F4")]
	public RectTransform AddDivider(int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000DB")]
	[Address(RVA = "0xBFD198", Offset = "0xBFD198", VA = "0xBFD198")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000DC")]
	[Address(RVA = "0xBFD390", Offset = "0xBFD390", VA = "0xBFD390")]
	public RectTransform AddToggle(string label, OnToggleValueChange onValueChanged, bool defaultValue, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000DD")]
	[Address(RVA = "0xBFD5A0", Offset = "0xBFD5A0", VA = "0xBFD5A0")]
	public RectTransform AddRadio(string label, string group, OnToggleValueChange handler, int targetCanvas = 0)
	{
		return null;
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xBFD8AC", Offset = "0xBFD8AC", VA = "0xBFD8AC")]
	public void ToggleLaserPointer(bool isOn)
	{
	}

	[Token(Token = "0x60000DF")]
	[Address(RVA = "0xBFD94C", Offset = "0xBFD94C", VA = "0xBFD94C")]
	public DebugUIBuilder()
	{
	}
}
[Token(Token = "0x200002C")]
public class HandedInputSelector : MonoBehaviour
{
	[Token(Token = "0x40000CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private OVRCameraRig m_CameraRig;

	[Token(Token = "0x40000CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private OVRInputModule m_InputModule;

	[Token(Token = "0x60000E0")]
	[Address(RVA = "0xBA4014", Offset = "0xBA4014", VA = "0xBA4014")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E1")]
	[Address(RVA = "0xBA40CC", Offset = "0xBA40CC", VA = "0xBA40CC")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E2")]
	[Address(RVA = "0xBA4184", Offset = "0xBA4184", VA = "0xBA4184")]
	private void SetActiveController(OVRInput.Controller c)
	{
	}

	[Token(Token = "0x60000E3")]
	[Address(RVA = "0xBA41C0", Offset = "0xBA41C0", VA = "0xBA41C0")]
	public HandedInputSelector()
	{
	}
}
[Token(Token = "0x200002D")]
public class LaserPointer : OVRCursor
{
	[Token(Token = "0x20003BB")]
	public enum LaserBeamBehavior
	{
		[Token(Token = "0x4001DF5")]
		On,
		[Token(Token = "0x4001DF6")]
		Off,
		[Token(Token = "0x4001DF7")]
		OnWhenHitTarget
	}

	[Token(Token = "0x40000CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cursorVisual;

	[Token(Token = "0x40000CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxLength;

	[Token(Token = "0x40000CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private LaserBeamBehavior _laserBeamBehavior;

	[Token(Token = "0x40000CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_restoreOnInputAcquired;

	[Token(Token = "0x40000D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 _startPoint;

	[Token(Token = "0x40000D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 _forward;

	[Token(Token = "0x40000D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 _endPoint;

	[Token(Token = "0x40000D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool _hitTarget;

	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x1700000E")]
	public LaserBeamBehavior laserBeamBehavior
	{
		[Token(Token = "0x60000E5")]
		[Address(RVA = "0xCE23A0", Offset = "0xCE23A0", VA = "0xCE23A0")]
		get
		{
			return default(LaserBeamBehavior);
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xCE235C", Offset = "0xCE235C", VA = "0xCE235C")]
		set
		{
		}
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xCE23A8", Offset = "0xCE23A8", VA = "0xCE23A8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xCE240C", Offset = "0xCE240C", VA = "0xCE240C")]
	private void Start()
	{
	}

	[Token(Token = "0x60000E8")]
	[Address(RVA = "0xCE2558", Offset = "0xCE2558", VA = "0xCE2558", Slot = "5")]
	public override void SetCursorStartDest(Vector3 start, Vector3 dest, Vector3 normal)
	{
	}

	[Token(Token = "0x60000E9")]
	[Address(RVA = "0xCE2574", Offset = "0xCE2574", VA = "0xCE2574", Slot = "4")]
	public override void SetCursorRay(Transform t)
	{
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xCE25C8", Offset = "0xCE25C8", VA = "0xCE25C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60000EB")]
	[Address(RVA = "0xCE277C", Offset = "0xCE277C", VA = "0xCE277C")]
	private void UpdateLaserBeam(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60000EC")]
	[Address(RVA = "0xCE2890", Offset = "0xCE2890", VA = "0xCE2890")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xCE292C", Offset = "0xCE292C", VA = "0xCE292C")]
	public void OnInputFocusLost()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xCE2A04", Offset = "0xCE2A04", VA = "0xCE2A04")]
	public void OnInputFocusAcquired()
	{
	}

	[Token(Token = "0x60000EF")]
	[Address(RVA = "0xCE2AB8", Offset = "0xCE2AB8", VA = "0xCE2AB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000F0")]
	[Address(RVA = "0xCE2BAC", Offset = "0xCE2BAC", VA = "0xCE2BAC")]
	public LaserPointer()
	{
	}
}
[Token(Token = "0x200002E")]
public class CharacterCameraConstraint : MonoBehaviour
{
	[Token(Token = "0x40000D5")]
	private const float FADE_RAY_LENGTH = 0.25f;

	[Token(Token = "0x40000D6")]
	private const float FADE_OVERLAP_MAXIMUM = 0.1f;

	[Token(Token = "0x40000D7")]
	private const float FADE_AMOUNT_MAXIMUM = 1f;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BBB0", Offset = "0x84BBB0")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BBE8", Offset = "0x84BBE8")]
	public LayerMask CollideLayers;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BC20", Offset = "0x84BC20")]
	public float HeightOffset;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BC58", Offset = "0x84BC58")]
	public float MinimumHeight;

	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BC90", Offset = "0x84BC90")]
	public float MaximumHeight;

	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CapsuleCollider _character;

	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private SimpleCapsuleWithStickMovement _simplePlayerController;

	[Token(Token = "0x60000F1")]
	[Address(RVA = "0xDC21D4", Offset = "0xDC21D4", VA = "0xDC21D4")]
	private CharacterCameraConstraint()
	{
	}

	[Token(Token = "0x60000F2")]
	[Address(RVA = "0xDC21DC", Offset = "0xDC21DC", VA = "0xDC21DC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F3")]
	[Address(RVA = "0xDC2270", Offset = "0xDC2270", VA = "0xDC2270")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xDC2304", Offset = "0xDC2304", VA = "0xDC2304")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000F5")]
	[Address(RVA = "0xDC2398", Offset = "0xDC2398", VA = "0xDC2398")]
	private void CameraUpdate()
	{
	}

	[Token(Token = "0x60000F6")]
	[Address(RVA = "0xDC26C0", Offset = "0xDC26C0", VA = "0xDC26C0")]
	private bool CheckCameraOverlapped()
	{
		return default(bool);
	}

	[Token(Token = "0x60000F7")]
	[Address(RVA = "0xDC28EC", Offset = "0xDC28EC", VA = "0xDC28EC")]
	private bool CheckCameraNearClipping([Out] float result)
	{
		return default(bool);
	}
}
[Token(Token = "0x200002F")]
public class LocomotionController : MonoBehaviour
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CapsuleCollider CharacterController;

	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public SimpleCapsuleWithStickMovement PlayerController;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xCE4DC8", Offset = "0xCE4DC8", VA = "0xCE4DC8")]
	private void Start()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xCE4E94", Offset = "0xCE4E94", VA = "0xCE4E94")]
	public LocomotionController()
	{
	}
}
[Token(Token = "0x2000030")]
public class LocomotionTeleport : MonoBehaviour
{
	[Token(Token = "0x20003BC")]
	public enum States
	{
		[Token(Token = "0x4001DF9")]
		Ready,
		[Token(Token = "0x4001DFA")]
		Aim,
		[Token(Token = "0x4001DFB")]
		CancelAim,
		[Token(Token = "0x4001DFC")]
		PreTeleport,
		[Token(Token = "0x4001DFD")]
		CancelTeleport,
		[Token(Token = "0x4001DFE")]
		Teleporting,
		[Token(Token = "0x4001DFF")]
		PostTeleport
	}

	[Token(Token = "0x20003BD")]
	public enum TeleportIntentions
	{
		[Token(Token = "0x4001E01")]
		None,
		[Token(Token = "0x4001E02")]
		Aim,
		[Token(Token = "0x4001E03")]
		PreTeleport,
		[Token(Token = "0x4001E04")]
		Teleport
	}

	[Token(Token = "0x20003BE")]
	public enum AimCollisionTypes
	{
		[Token(Token = "0x4001E06")]
		Point,
		[Token(Token = "0x4001E07")]
		Sphere,
		[Token(Token = "0x4001E08")]
		Capsule
	}

	[Token(Token = "0x20003BF")]
	public class AimData
	{
		[Token(Token = "0x4001E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public RaycastHit TargetHitInfo;

		[Token(Token = "0x4001E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool TargetValid;

		[Token(Token = "0x4001E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3? Destination;

		[Token(Token = "0x4001E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float Radius;

		[Token(Token = "0x4001E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x854290", Offset = "0x854290")]
		private List<Vector3> <Points>k__BackingField;

		[Token(Token = "0x170001E2")]
		public List<Vector3> Points
		{
			[Token(Token = "0x6001A0F")]
			[Address(RVA = "0x19D64C4", Offset = "0x19D64C4", VA = "0x19D64C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B9FC", Offset = "0x85B9FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001A10")]
			[Address(RVA = "0x19D64CC", Offset = "0x19D64CC", VA = "0x19D64CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85BA0C", Offset = "0x85BA0C")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A0E")]
		[Address(RVA = "0x19D6438", Offset = "0x19D6438", VA = "0x19D6438")]
		public AimData()
		{
		}

		[Token(Token = "0x6001A11")]
		[Address(RVA = "0x19D64D4", Offset = "0x19D64D4", VA = "0x19D64D4")]
		public void Reset()
		{
		}
	}

	[Token(Token = "0x20003C0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84944C", Offset = "0x84944C")]
	private sealed class <ReadyStateCoroutine>d__52 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001E3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A15")]
			[Address(RVA = "0x19D6284", Offset = "0x19D6284", VA = "0x19D6284", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A17")]
			[Address(RVA = "0x19D62CC", Offset = "0x19D62CC", VA = "0x19D62CC", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A12")]
		[Address(RVA = "0x19D6144", Offset = "0x19D6144", VA = "0x19D6144")]
		[DebuggerHidden]
		public <ReadyStateCoroutine>d__52(int <>1__state)
		{
		}

		[Token(Token = "0x6001A13")]
		[Address(RVA = "0x19D6170", Offset = "0x19D6170", VA = "0x19D6170", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A14")]
		[Address(RVA = "0x19D6174", Offset = "0x19D6174", VA = "0x19D6174", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A16")]
		[Address(RVA = "0x19D628C", Offset = "0x19D628C", VA = "0x19D628C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C1")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84945C", Offset = "0x84945C")]
	private sealed class <AimStateCoroutine>d__64 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001E5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A1B")]
			[Address(RVA = "0x19D5BB0", Offset = "0x19D5BB0", VA = "0x19D5BB0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A1D")]
			[Address(RVA = "0x19D5BF8", Offset = "0x19D5BF8", VA = "0x19D5BF8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A18")]
		[Address(RVA = "0x19D5A28", Offset = "0x19D5A28", VA = "0x19D5A28")]
		[DebuggerHidden]
		public <AimStateCoroutine>d__64(int <>1__state)
		{
		}

		[Token(Token = "0x6001A19")]
		[Address(RVA = "0x19D5A54", Offset = "0x19D5A54", VA = "0x19D5A54", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A1A")]
		[Address(RVA = "0x19D5A58", Offset = "0x19D5A58", VA = "0x19D5A58", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A1C")]
		[Address(RVA = "0x19D5BB8", Offset = "0x19D5BB8", VA = "0x19D5BB8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C2")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84946C", Offset = "0x84946C")]
	private sealed class <CancelAimStateCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001E7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A21")]
			[Address(RVA = "0x19D5CDC", Offset = "0x19D5CDC", VA = "0x19D5CDC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001E8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A23")]
			[Address(RVA = "0x19D5D24", Offset = "0x19D5D24", VA = "0x19D5D24", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A1E")]
		[Address(RVA = "0x19D5C00", Offset = "0x19D5C00", VA = "0x19D5C00")]
		[DebuggerHidden]
		public <CancelAimStateCoroutine>d__68(int <>1__state)
		{
		}

		[Token(Token = "0x6001A1F")]
		[Address(RVA = "0x19D5C2C", Offset = "0x19D5C2C", VA = "0x19D5C2C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A20")]
		[Address(RVA = "0x19D5C30", Offset = "0x19D5C30", VA = "0x19D5C30", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A22")]
		[Address(RVA = "0x19D5CE4", Offset = "0x19D5CE4", VA = "0x19D5CE4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C3")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84947C", Offset = "0x84947C")]
	private sealed class <PreTeleportStateCoroutine>d__72 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001E9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A27")]
			[Address(RVA = "0x19D60F4", Offset = "0x19D60F4", VA = "0x19D60F4", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A29")]
			[Address(RVA = "0x19D613C", Offset = "0x19D613C", VA = "0x19D613C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A24")]
		[Address(RVA = "0x19D5FD8", Offset = "0x19D5FD8", VA = "0x19D5FD8")]
		[DebuggerHidden]
		public <PreTeleportStateCoroutine>d__72(int <>1__state)
		{
		}

		[Token(Token = "0x6001A25")]
		[Address(RVA = "0x19D6004", Offset = "0x19D6004", VA = "0x19D6004", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A26")]
		[Address(RVA = "0x19D6008", Offset = "0x19D6008", VA = "0x19D6008", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A28")]
		[Address(RVA = "0x19D60FC", Offset = "0x19D60FC", VA = "0x19D60FC", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84948C", Offset = "0x84948C")]
	private sealed class <CancelTeleportStateCoroutine>d__76 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001EB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A2D")]
			[Address(RVA = "0x19D5E08", Offset = "0x19D5E08", VA = "0x19D5E08", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A2F")]
			[Address(RVA = "0x19D5E50", Offset = "0x19D5E50", VA = "0x19D5E50", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A2A")]
		[Address(RVA = "0x19D5D2C", Offset = "0x19D5D2C", VA = "0x19D5D2C")]
		[DebuggerHidden]
		public <CancelTeleportStateCoroutine>d__76(int <>1__state)
		{
		}

		[Token(Token = "0x6001A2B")]
		[Address(RVA = "0x19D5D58", Offset = "0x19D5D58", VA = "0x19D5D58", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A2C")]
		[Address(RVA = "0x19D5D5C", Offset = "0x19D5D5C", VA = "0x19D5D5C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A2E")]
		[Address(RVA = "0x19D5E10", Offset = "0x19D5E10", VA = "0x19D5E10", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84949C", Offset = "0x84949C")]
	private sealed class <TeleportingStateCoroutine>d__80 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001ED")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A33")]
			[Address(RVA = "0x19D63E8", Offset = "0x19D63E8", VA = "0x19D63E8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001EE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A35")]
			[Address(RVA = "0x19D6430", Offset = "0x19D6430", VA = "0x19D6430", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A30")]
		[Address(RVA = "0x19D62D4", Offset = "0x19D62D4", VA = "0x19D62D4")]
		[DebuggerHidden]
		public <TeleportingStateCoroutine>d__80(int <>1__state)
		{
		}

		[Token(Token = "0x6001A31")]
		[Address(RVA = "0x19D6300", Offset = "0x19D6300", VA = "0x19D6300", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A32")]
		[Address(RVA = "0x19D6304", Offset = "0x19D6304", VA = "0x19D6304", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A34")]
		[Address(RVA = "0x19D63F0", Offset = "0x19D63F0", VA = "0x19D63F0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8494AC", Offset = "0x8494AC")]
	private sealed class <PostTeleportStateCoroutine>d__84 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LocomotionTeleport <>4__this;

		[Token(Token = "0x170001EF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A39")]
			[Address(RVA = "0x19D5F88", Offset = "0x19D5F88", VA = "0x19D5F88", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F0")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A3B")]
			[Address(RVA = "0x19D5FD0", Offset = "0x19D5FD0", VA = "0x19D5FD0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A36")]
		[Address(RVA = "0x19D5E58", Offset = "0x19D5E58", VA = "0x19D5E58")]
		[DebuggerHidden]
		public <PostTeleportStateCoroutine>d__84(int <>1__state)
		{
		}

		[Token(Token = "0x6001A37")]
		[Address(RVA = "0x19D5E84", Offset = "0x19D5E84", VA = "0x19D5E84", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A38")]
		[Address(RVA = "0x19D5E88", Offset = "0x19D5E88", VA = "0x19D5E88", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A3A")]
		[Address(RVA = "0x19D5F90", Offset = "0x19D5F90", VA = "0x19D5F90", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BCC8", Offset = "0x84BCC8")]
	public bool EnableMovementDuringReady;

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BD00", Offset = "0x84BD00")]
	public bool EnableMovementDuringAim;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BD38", Offset = "0x84BD38")]
	public bool EnableMovementDuringPreTeleport;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BD70", Offset = "0x84BD70")]
	public bool EnableMovementDuringPostTeleport;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BDA8", Offset = "0x84BDA8")]
	public bool EnableRotationDuringReady;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BDE0", Offset = "0x84BDE0")]
	public bool EnableRotationDuringAim;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BE18", Offset = "0x84BE18")]
	public bool EnableRotationDuringPreTeleport;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BE50", Offset = "0x84BE50")]
	public bool EnableRotationDuringPostTeleport;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BE88", Offset = "0x84BE88")]
	private States <CurrentState>k__BackingField;

	[NonSerialized]
	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TeleportAimHandler AimHandler;

	[Token(Token = "0x40000EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BE98", Offset = "0x84BE98")]
	public TeleportDestination TeleportDestinationPrefab;

	[Token(Token = "0x40000ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BED0", Offset = "0x84BED0")]
	public int TeleportDestinationLayer;

	[NonSerialized]
	[Token(Token = "0x40000EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public TeleportInputHandler InputHandler;

	[NonSerialized]
	[Token(Token = "0x40000F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public TeleportIntentions CurrentIntention;

	[NonSerialized]
	[Token(Token = "0x40000F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public bool IsPreTeleportRequested;

	[NonSerialized]
	[Token(Token = "0x40000F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
	public bool IsTransitioning;

	[NonSerialized]
	[Token(Token = "0x40000F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
	public bool IsPostTeleportRequested;

	[Token(Token = "0x40000F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private TeleportDestination _teleportDestination;

	[Token(Token = "0x40000F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84BF18", Offset = "0x84BF18")]
	private LocomotionController <LocomotionController>k__BackingField;

	[Token(Token = "0x40000F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BF28", Offset = "0x84BF28")]
	public AimCollisionTypes AimCollisionType;

	[Token(Token = "0x40000F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BF60", Offset = "0x84BF60")]
	public bool UseCharacterCollisionData;

	[Token(Token = "0x40000F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BF98", Offset = "0x84BF98")]
	public float AimCollisionRadius;

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84BFD0", Offset = "0x84BFD0")]
	public float AimCollisionHeight;

	[Token(Token = "0x1700000F")]
	public States CurrentState
	{
		[Token(Token = "0x60000FC")]
		[Address(RVA = "0xCE5990", Offset = "0xCE5990", VA = "0xCE5990")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855234", Offset = "0x855234")]
		get
		{
			return default(States);
		}
		[Token(Token = "0x60000FD")]
		[Address(RVA = "0xCE5998", Offset = "0xCE5998", VA = "0xCE5998")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855244", Offset = "0x855244")]
		private set
		{
		}
	}

	[Token(Token = "0x17000010")]
	public Quaternion DestinationRotation
	{
		[Token(Token = "0x6000101")]
		[Address(RVA = "0xCE5BAC", Offset = "0xCE5BAC", VA = "0xCE5BAC")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x17000011")]
	public LocomotionController LocomotionController
	{
		[Token(Token = "0x6000102")]
		[Address(RVA = "0xCE5BD4", Offset = "0xCE5BD4", VA = "0xCE5BD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855274", Offset = "0x855274")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000103")]
		[Address(RVA = "0xCE5BDC", Offset = "0xCE5BDC", VA = "0xCE5BDC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855284", Offset = "0x855284")]
		private set
		{
		}
	}

	[Token(Token = "0x14000001")]
	public event Action<bool, Vector3?, Quaternion?, Quaternion?> UpdateTeleportDestination
	{
		[Token(Token = "0x60000FE")]
		[Address(RVA = "0xCE59A0", Offset = "0xCE59A0", VA = "0xCE59A0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855254", Offset = "0x855254")]
		add
		{
		}
		[Token(Token = "0x60000FF")]
		[Address(RVA = "0xCE5A40", Offset = "0xCE5A40", VA = "0xCE5A40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855264", Offset = "0x855264")]
		remove
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event Action EnterStateReady
	{
		[Token(Token = "0x600010D")]
		[Address(RVA = "0xCE6238", Offset = "0xCE6238", VA = "0xCE6238")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8552CC", Offset = "0x8552CC")]
		add
		{
		}
		[Token(Token = "0x600010E")]
		[Address(RVA = "0xCE62D8", Offset = "0xCE62D8", VA = "0xCE62D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8552DC", Offset = "0x8552DC")]
		remove
		{
		}
	}

	[Token(Token = "0x14000003")]
	public event Action EnterStateAim
	{
		[Token(Token = "0x6000110")]
		[Address(RVA = "0xCE6378", Offset = "0xCE6378", VA = "0xCE6378")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855354", Offset = "0x855354")]
		add
		{
		}
		[Token(Token = "0x6000111")]
		[Address(RVA = "0xCE6418", Offset = "0xCE6418", VA = "0xCE6418")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855364", Offset = "0x855364")]
		remove
		{
		}
	}

	[Token(Token = "0x14000004")]
	public event Action<AimData> UpdateAimData
	{
		[Token(Token = "0x6000112")]
		[Address(RVA = "0xCE64B8", Offset = "0xCE64B8", VA = "0xCE64B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855374", Offset = "0x855374")]
		add
		{
		}
		[Token(Token = "0x6000113")]
		[Address(RVA = "0xCE6558", Offset = "0xCE6558", VA = "0xCE6558")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855384", Offset = "0x855384")]
		remove
		{
		}
	}

	[Token(Token = "0x14000005")]
	public event Action ExitStateAim
	{
		[Token(Token = "0x6000115")]
		[Address(RVA = "0xCE6668", Offset = "0xCE6668", VA = "0xCE6668")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855394", Offset = "0x855394")]
		add
		{
		}
		[Token(Token = "0x6000116")]
		[Address(RVA = "0xCE6708", Offset = "0xCE6708", VA = "0xCE6708")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8553A4", Offset = "0x8553A4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000006")]
	public event Action EnterStateCancelAim
	{
		[Token(Token = "0x6000118")]
		[Address(RVA = "0xCE6828", Offset = "0xCE6828", VA = "0xCE6828")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85541C", Offset = "0x85541C")]
		add
		{
		}
		[Token(Token = "0x6000119")]
		[Address(RVA = "0xCE68C8", Offset = "0xCE68C8", VA = "0xCE68C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85542C", Offset = "0x85542C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000007")]
	public event Action EnterStatePreTeleport
	{
		[Token(Token = "0x600011B")]
		[Address(RVA = "0xCE69E8", Offset = "0xCE69E8", VA = "0xCE69E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8554A4", Offset = "0x8554A4")]
		add
		{
		}
		[Token(Token = "0x600011C")]
		[Address(RVA = "0xCE6A88", Offset = "0xCE6A88", VA = "0xCE6A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8554B4", Offset = "0x8554B4")]
		remove
		{
		}
	}

	[Token(Token = "0x14000008")]
	public event Action EnterStateCancelTeleport
	{
		[Token(Token = "0x600011E")]
		[Address(RVA = "0xCE6BA8", Offset = "0xCE6BA8", VA = "0xCE6BA8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85552C", Offset = "0x85552C")]
		add
		{
		}
		[Token(Token = "0x600011F")]
		[Address(RVA = "0xCE6C48", Offset = "0xCE6C48", VA = "0xCE6C48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85553C", Offset = "0x85553C")]
		remove
		{
		}
	}

	[Token(Token = "0x14000009")]
	public event Action EnterStateTeleporting
	{
		[Token(Token = "0x6000121")]
		[Address(RVA = "0xCE6D68", Offset = "0xCE6D68", VA = "0xCE6D68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8555B4", Offset = "0x8555B4")]
		add
		{
		}
		[Token(Token = "0x6000122")]
		[Address(RVA = "0xCE6E08", Offset = "0xCE6E08", VA = "0xCE6E08")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8555C4", Offset = "0x8555C4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000A")]
	public event Action EnterStatePostTeleport
	{
		[Token(Token = "0x6000124")]
		[Address(RVA = "0xCE6F28", Offset = "0xCE6F28", VA = "0xCE6F28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85563C", Offset = "0x85563C")]
		add
		{
		}
		[Token(Token = "0x6000125")]
		[Address(RVA = "0xCE6FC8", Offset = "0xCE6FC8", VA = "0xCE6FC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85564C", Offset = "0x85564C")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000B")]
	public event Action<Transform, Vector3, Quaternion> Teleported
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0xCE70E8", Offset = "0xCE70E8", VA = "0xCE70E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8556C4", Offset = "0x8556C4")]
		add
		{
		}
		[Token(Token = "0x6000128")]
		[Address(RVA = "0xCE7188", Offset = "0xCE7188", VA = "0xCE7188")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8556D4", Offset = "0x8556D4")]
		remove
		{
		}
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xCE5634", Offset = "0xCE5634", VA = "0xCE5634")]
	public void EnableMovement(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xCE5658", Offset = "0xCE5658", VA = "0xCE5658")]
	public void EnableRotation(bool ready, bool aim, bool pre, bool post)
	{
	}

	[Token(Token = "0x6000100")]
	[Address(RVA = "0xCE5AE0", Offset = "0xCE5AE0", VA = "0xCE5AE0")]
	public void OnUpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}

	[Token(Token = "0x6000104")]
	[Address(RVA = "0xCE5BE4", Offset = "0xCE5BE4", VA = "0xCE5BE4")]
	public bool AimCollisionTest(Vector3 start, Vector3 end, LayerMask aimCollisionLayerMask, [Out] RaycastHit hitInfo)
	{
		return default(bool);
	}

	[Token(Token = "0x6000105")]
	[Address(RVA = "0xCE5E30", Offset = "0xCE5E30", VA = "0xCE5E30")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x855294", Offset = "0x855294")]
	protected void LogState(string msg)
	{
	}

	[Token(Token = "0x6000106")]
	[Address(RVA = "0xCE5EEC", Offset = "0xCE5EEC", VA = "0xCE5EEC")]
	protected void CreateNewTeleportDestination()
	{
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xCE5FEC", Offset = "0xCE5FEC", VA = "0xCE5FEC")]
	private void DeactivateDestination()
	{
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xCE600C", Offset = "0xCE600C", VA = "0xCE600C")]
	public void RecycleTeleportDestination(TeleportDestination oldDestination)
	{
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xCE60D0", Offset = "0xCE60D0", VA = "0xCE60D0")]
	private void EnableMotion(bool enableLinear, bool enableRotation)
	{
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xCE6114", Offset = "0xCE6114", VA = "0xCE6114")]
	private void Awake()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xCE6180", Offset = "0xCE6180", VA = "0xCE6180", Slot = "4")]
	public virtual void OnEnable()
	{
	}

	[Token(Token = "0x600010C")]
	[Address(RVA = "0xCE6230", Offset = "0xCE6230", VA = "0xCE6230", Slot = "5")]
	public virtual void OnDisable()
	{
	}

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xCE61B0", Offset = "0xCE61B0", VA = "0xCE61B0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8552EC", Offset = "0x8552EC")]
	protected IEnumerator ReadyStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000114")]
	[Address(RVA = "0xCE65F8", Offset = "0xCE65F8", VA = "0xCE65F8")]
	public void OnUpdateAimData(AimData aimData)
	{
	}

	[Token(Token = "0x6000117")]
	[Address(RVA = "0xCE67A8", Offset = "0xCE67A8", VA = "0xCE67A8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8553B4", Offset = "0x8553B4")]
	protected IEnumerator AimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600011A")]
	[Address(RVA = "0xCE6968", Offset = "0xCE6968", VA = "0xCE6968")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85543C", Offset = "0x85543C")]
	protected IEnumerator CancelAimStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xCE6B28", Offset = "0xCE6B28", VA = "0xCE6B28")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8554C4", Offset = "0x8554C4")]
	protected IEnumerator PreTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xCE6CE8", Offset = "0xCE6CE8", VA = "0xCE6CE8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85554C", Offset = "0x85554C")]
	protected IEnumerator CancelTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xCE6EA8", Offset = "0xCE6EA8", VA = "0xCE6EA8")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8555D4", Offset = "0x8555D4")]
	protected IEnumerator TeleportingStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000126")]
	[Address(RVA = "0xCE7068", Offset = "0xCE7068", VA = "0xCE7068")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85565C", Offset = "0x85565C")]
	protected IEnumerator PostTeleportStateCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xCE7228", Offset = "0xCE7228", VA = "0xCE7228")]
	public void DoTeleport()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xCE7368", Offset = "0xCE7368", VA = "0xCE7368")]
	public Vector3 GetCharacterPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xCE739C", Offset = "0xCE739C", VA = "0xCE739C")]
	public Quaternion GetHeadRotationY()
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xCE7464", Offset = "0xCE7464", VA = "0xCE7464")]
	public void DoWarp(Vector3 startPos, float positionPercent)
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xCE755C", Offset = "0xCE755C", VA = "0xCE755C")]
	public LocomotionTeleport()
	{
	}
}
[Token(Token = "0x2000031")]
public class SimpleCapsuleWithStickMovement : MonoBehaviour
{
	[Token(Token = "0x4000104")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool EnableLinearMovement;

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool EnableRotation;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool HMDRotatesPlayer;

	[Token(Token = "0x4000107")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool RotationEitherThumbstick;

	[Token(Token = "0x4000108")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float RotationAngle;

	[Token(Token = "0x4000109")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig CameraRig;

	[Token(Token = "0x400010B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private bool ReadyToSnapTurn;

	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody _rigidbody;

	[Token(Token = "0x1400000C")]
	public event Action CameraUpdated
	{
		[Token(Token = "0x600012E")]
		[Address(RVA = "0xDD946C", Offset = "0xDD946C", VA = "0xDD946C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8556E4", Offset = "0x8556E4")]
		add
		{
		}
		[Token(Token = "0x600012F")]
		[Address(RVA = "0xDD950C", Offset = "0xDD950C", VA = "0xDD950C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8556F4", Offset = "0x8556F4")]
		remove
		{
		}
	}

	[Token(Token = "0x1400000D")]
	public event Action PreCharacterMove
	{
		[Token(Token = "0x6000130")]
		[Address(RVA = "0xDD95AC", Offset = "0xDD95AC", VA = "0xDD95AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855704", Offset = "0x855704")]
		add
		{
		}
		[Token(Token = "0x6000131")]
		[Address(RVA = "0xDD964C", Offset = "0xDD964C", VA = "0xDD964C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855714", Offset = "0x855714")]
		remove
		{
		}
	}

	[Token(Token = "0x6000132")]
	[Address(RVA = "0xDD96EC", Offset = "0xDD96EC", VA = "0xDD96EC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000133")]
	[Address(RVA = "0xDD97D8", Offset = "0xDD97D8", VA = "0xDD97D8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000134")]
	[Address(RVA = "0xDD97DC", Offset = "0xDD97DC", VA = "0xDD97DC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000135")]
	[Address(RVA = "0xDD9850", Offset = "0xDD9850", VA = "0xDD9850")]
	private void RotatePlayerToHMD()
	{
	}

	[Token(Token = "0x6000136")]
	[Address(RVA = "0xDD9974", Offset = "0xDD9974", VA = "0xDD9974")]
	private void StickMovement()
	{
	}

	[Token(Token = "0x6000137")]
	[Address(RVA = "0xDD9B5C", Offset = "0xDD9B5C", VA = "0xDD9B5C")]
	private void SnapTurn()
	{
	}

	[Token(Token = "0x6000138")]
	[Address(RVA = "0xDD9D24", Offset = "0xDD9D24", VA = "0xDD9D24")]
	public SimpleCapsuleWithStickMovement()
	{
	}
}
[Token(Token = "0x2000032")]
public abstract class TeleportAimHandler : TeleportSupport
{
	[Token(Token = "0x6000139")]
	[Address(RVA = "0x105BA24", Offset = "0x105BA24", VA = "0x105BA24", Slot = "4")]
	protected override void OnEnable()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0x105BACC", Offset = "0x105BACC", VA = "0x105BACC", Slot = "5")]
	protected override void OnDisable()
	{
	}

	[Token(Token = "0x600013B")]
	public abstract void GetPoints(List<Vector3> points);

	[Token(Token = "0x600013C")]
	[Address(RVA = "0x105BBBC", Offset = "0x105BBBC", VA = "0x105BBBC")]
	protected TeleportAimHandler()
	{
	}
}
[Token(Token = "0x2000033")]
public class TeleportAimHandlerLaser : TeleportAimHandler
{
	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C0C8", Offset = "0x84C0C8")]
	public float Range;

	[Token(Token = "0x600013D")]
	[Address(RVA = "0x105BBCC", Offset = "0x105BBCC", VA = "0x105BBCC", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0x105BCC8", Offset = "0x105BCC8", VA = "0x105BCC8")]
	public TeleportAimHandlerLaser()
	{
	}
}
[Token(Token = "0x2000034")]
public class TeleportAimHandlerParabolic : TeleportAimHandler
{
	[Token(Token = "0x4000110")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C100", Offset = "0x84C100")]
	public float Range;

	[Token(Token = "0x4000111")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C138", Offset = "0x84C138")]
	public float MinimumElevation;

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C170", Offset = "0x84C170")]
	public float Gravity;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C1A8", Offset = "0x84C1A8")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84C1A8", Offset = "0x84C1A8")]
	public float AimVelocity;

	[Token(Token = "0x4000114")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C204", Offset = "0x84C204")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84C204", Offset = "0x84C204")]
	public float AimStep;

	[Token(Token = "0x600013F")]
	[Address(RVA = "0x105BCD8", Offset = "0x105BCD8", VA = "0x105BCD8", Slot = "8")]
	public override void GetPoints(List<Vector3> points)
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0x105BE68", Offset = "0x105BE68", VA = "0x105BE68")]
	public TeleportAimHandlerParabolic()
	{
	}
}
[Token(Token = "0x2000035")]
public class TeleportAimVisualLaser : TeleportSupport
{
	[Token(Token = "0x4000115")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C25C", Offset = "0x84C25C")]
	public LineRenderer LaserPrefab;

	[Token(Token = "0x4000116")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _enterAimStateAction;

	[Token(Token = "0x4000117")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly Action _exitAimStateAction;

	[Token(Token = "0x4000118")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer _lineRenderer;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3[] _linePoints;

	[Token(Token = "0x6000141")]
	[Address(RVA = "0x105BE7C", Offset = "0x105BE7C", VA = "0x105BE7C")]
	public TeleportAimVisualLaser()
	{
	}

	[Token(Token = "0x6000142")]
	[Address(RVA = "0x105BFC8", Offset = "0x105BFC8", VA = "0x105BFC8")]
	private void EnterAimState()
	{
	}

	[Token(Token = "0x6000143")]
	[Address(RVA = "0x105BFF8", Offset = "0x105BFF8", VA = "0x105BFF8")]
	private void ExitAimState()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0x105C028", Offset = "0x105C028", VA = "0x105C028")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0x105C0E0", Offset = "0x105C0E0", VA = "0x105C0E0", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000146")]
	[Address(RVA = "0x105C14C", Offset = "0x105C14C", VA = "0x105C14C", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000147")]
	[Address(RVA = "0x105C1B4", Offset = "0x105C1B4", VA = "0x105C1B4")]
	private void UpdateAimData(LocomotionTeleport.AimData obj)
	{
	}
}
[Token(Token = "0x2000036")]
public class TeleportDestination : MonoBehaviour
{
	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C294", Offset = "0x84C294")]
	private bool <IsValidDestination>k__BackingField;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C2A4", Offset = "0x84C2A4")]
	public Transform PositionIndicator;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C2DC", Offset = "0x84C2DC")]
	public Transform OrientationIndicator;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C314", Offset = "0x84C314")]
	public Quaternion LandingRotation;

	[NonSerialized]
	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LocomotionTeleport LocomotionTeleport;

	[NonSerialized]
	[Token(Token = "0x4000120")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LocomotionTeleport.States TeleportState;

	[Token(Token = "0x4000121")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private readonly Action<bool, Vector3?, Quaternion?, Quaternion?> _updateTeleportDestinationAction;

	[Token(Token = "0x4000122")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool _eventsActive;

	[Token(Token = "0x17000012")]
	public bool IsValidDestination
	{
		[Token(Token = "0x6000148")]
		[Address(RVA = "0x105C2D8", Offset = "0x105C2D8", VA = "0x105C2D8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855724", Offset = "0x855724")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000149")]
		[Address(RVA = "0x105C2E0", Offset = "0x105C2E0", VA = "0x105C2E0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855734", Offset = "0x855734")]
		private set
		{
		}
	}

	[Token(Token = "0x1400000E")]
	public event Action<TeleportDestination> Deactivated
	{
		[Token(Token = "0x600014E")]
		[Address(RVA = "0x105C4A4", Offset = "0x105C4A4", VA = "0x105C4A4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855744", Offset = "0x855744")]
		add
		{
		}
		[Token(Token = "0x600014F")]
		[Address(RVA = "0x105C544", Offset = "0x105C544", VA = "0x105C544")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855754", Offset = "0x855754")]
		remove
		{
		}
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0x105C2EC", Offset = "0x105C2EC", VA = "0x105C2EC")]
	private TeleportDestination()
	{
	}

	[Token(Token = "0x600014B")]
	[Address(RVA = "0x105C38C", Offset = "0x105C38C", VA = "0x105C38C")]
	public void OnEnable()
	{
	}

	[Token(Token = "0x600014C")]
	[Address(RVA = "0x105C460", Offset = "0x105C460", VA = "0x105C460")]
	private void TryDisableEventHandlers()
	{
	}

	[Token(Token = "0x600014D")]
	[Address(RVA = "0x105C4A0", Offset = "0x105C4A0", VA = "0x105C4A0")]
	public void OnDisable()
	{
	}

	[Token(Token = "0x6000150")]
	[Address(RVA = "0x105C5E4", Offset = "0x105C5E4", VA = "0x105C5E4")]
	public void OnDeactivated()
	{
	}

	[Token(Token = "0x6000151")]
	[Address(RVA = "0x105C648", Offset = "0x105C648", VA = "0x105C648")]
	public void Recycle()
	{
	}

	[Token(Token = "0x6000152")]
	[Address(RVA = "0x105C66C", Offset = "0x105C66C", VA = "0x105C66C", Slot = "4")]
	public virtual void UpdateTeleportDestination(bool isValidDestination, Vector3? position, Quaternion? rotation, Quaternion? landingRotation)
	{
	}
}
[Token(Token = "0x2000037")]
public abstract class TeleportInputHandler : TeleportSupport
{
	[Token(Token = "0x20003C7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8494BC", Offset = "0x8494BC")]
	private sealed class <TeleportReadyCoroutine>d__5 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170001F1")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A3F")]
			[Address(RVA = "0xFD30D8", Offset = "0xFD30D8", VA = "0xFD30D8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F2")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A41")]
			[Address(RVA = "0xFD3120", Offset = "0xFD3120", VA = "0xFD3120", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A3C")]
		[Address(RVA = "0xFD3010", Offset = "0xFD3010", VA = "0xFD3010")]
		[DebuggerHidden]
		public <TeleportReadyCoroutine>d__5(int <>1__state)
		{
		}

		[Token(Token = "0x6001A3D")]
		[Address(RVA = "0xFD303C", Offset = "0xFD303C", VA = "0xFD303C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A3E")]
		[Address(RVA = "0xFD3040", Offset = "0xFD3040", VA = "0xFD3040", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A40")]
		[Address(RVA = "0xFD30E0", Offset = "0xFD30E0", VA = "0xFD30E0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003C8")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8494CC", Offset = "0x8494CC")]
	private sealed class <TeleportAimCoroutine>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportInputHandler <>4__this;

		[Token(Token = "0x170001F3")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A45")]
			[Address(RVA = "0xFD2FC0", Offset = "0xFD2FC0", VA = "0xFD2FC0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F4")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A47")]
			[Address(RVA = "0xFD3008", Offset = "0xFD3008", VA = "0xFD3008", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A42")]
		[Address(RVA = "0xFD2EF4", Offset = "0xFD2EF4", VA = "0xFD2EF4")]
		[DebuggerHidden]
		public <TeleportAimCoroutine>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001A43")]
		[Address(RVA = "0xFD2F20", Offset = "0xFD2F20", VA = "0xFD2F20", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A44")]
		[Address(RVA = "0xFD2F24", Offset = "0xFD2F24", VA = "0xFD2F24", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A46")]
		[Address(RVA = "0xFD2FC8", Offset = "0xFD2FC8", VA = "0xFD2FC8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000124")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _startReadyAction;

	[Token(Token = "0x4000125")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x6000153")]
	[Address(RVA = "0x105C878", Offset = "0x105C878", VA = "0x105C878")]
	protected TeleportInputHandler()
	{
	}

	[Token(Token = "0x6000154")]
	[Address(RVA = "0x105C954", Offset = "0x105C954", VA = "0x105C954", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000155")]
	[Address(RVA = "0x105C9B4", Offset = "0x105C9B4", VA = "0x105C9B4", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0x105CA74", Offset = "0x105CA74", VA = "0x105CA74")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855764", Offset = "0x855764")]
	private IEnumerator TeleportReadyCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0x105CAF4", Offset = "0x105CAF4", VA = "0x105CAF4")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8557CC", Offset = "0x8557CC")]
	private IEnumerator TeleportAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000158")]
	public abstract LocomotionTeleport.TeleportIntentions GetIntention();

	[Token(Token = "0x6000159")]
	public abstract void GetAimData([Out] Ray aimRay);

	[Token(Token = "0x600015A")]
	[Address(RVA = "0x105CB74", Offset = "0x105CB74", VA = "0x105CB74")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855834", Offset = "0x855834")]
	private void <.ctor>b__2_0()
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0x105CBA0", Offset = "0x105CBA0", VA = "0x105CBA0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855844", Offset = "0x855844")]
	private void <.ctor>b__2_1()
	{
	}
}
[Token(Token = "0x2000038")]
public class TeleportInputHandlerHMD : TeleportInputHandler
{
	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C35C", Offset = "0x84C35C")]
	private Transform <Pointer>k__BackingField;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C36C", Offset = "0x84C36C")]
	public OVRInput.RawButton AimButton;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C3A4", Offset = "0x84C3A4")]
	public OVRInput.RawButton TeleportButton;

	[Token(Token = "0x4000129")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C3DC", Offset = "0x84C3DC")]
	public bool FastTeleport;

	[Token(Token = "0x17000013")]
	public Transform Pointer
	{
		[Token(Token = "0x600015C")]
		[Address(RVA = "0x105CBCC", Offset = "0x105CBCC", VA = "0x105CBCC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855854", Offset = "0x855854")]
		get
		{
			return null;
		}
		[Token(Token = "0x600015D")]
		[Address(RVA = "0x105CBD4", Offset = "0x105CBD4", VA = "0x105CBD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855864", Offset = "0x855864")]
		private set
		{
		}
	}

	[Token(Token = "0x600015E")]
	[Address(RVA = "0x105CBDC", Offset = "0x105CBDC", VA = "0x105CBDC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0x105CD2C", Offset = "0x105CD2C", VA = "0x105CD2C", Slot = "9")]
	public override void GetAimData([Out] Ray aimRay)
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0x105CDE4", Offset = "0x105CDE4", VA = "0x105CDE4")]
	public TeleportInputHandlerHMD()
	{
	}
}
[Token(Token = "0x2000039")]
public class TeleportInputHandlerTouch : TeleportInputHandlerHMD
{
	[Token(Token = "0x20003C9")]
	public enum InputModes
	{
		[Token(Token = "0x4001E2A")]
		CapacitiveButtonForAimAndTeleport,
		[Token(Token = "0x4001E2B")]
		SeparateButtonsForAimAndTeleport,
		[Token(Token = "0x4001E2C")]
		ThumbstickTeleport,
		[Token(Token = "0x4001E2D")]
		ThumbstickTeleportForwardBackOnly
	}

	[Token(Token = "0x20003CA")]
	public enum AimCapTouchButtons
	{
		[Token(Token = "0x4001E2F")]
		A,
		[Token(Token = "0x4001E30")]
		B,
		[Token(Token = "0x4001E31")]
		LeftTrigger,
		[Token(Token = "0x4001E32")]
		LeftThumbstick,
		[Token(Token = "0x4001E33")]
		RightTrigger,
		[Token(Token = "0x4001E34")]
		RightThumbstick,
		[Token(Token = "0x4001E35")]
		X,
		[Token(Token = "0x4001E36")]
		Y
	}

	[Token(Token = "0x400012A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform LeftHand;

	[Token(Token = "0x400012B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform RightHand;

	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C414", Offset = "0x84C414")]
	public InputModes InputMode;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private readonly OVRInput.RawButton[] _rawButtons;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private readonly OVRInput.RawTouch[] _rawTouch;

	[Token(Token = "0x400012F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C44C", Offset = "0x84C44C")]
	public OVRInput.Controller AimingController;

	[Token(Token = "0x4000130")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private OVRInput.Controller InitiatingController;

	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C484", Offset = "0x84C484")]
	public AimCapTouchButtons CapacitiveAimAndTeleportButton;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C4BC", Offset = "0x84C4BC")]
	public float ThumbstickTeleportThreshold;

	[Token(Token = "0x6000161")]
	[Address(RVA = "0x105CDE8", Offset = "0x105CDE8", VA = "0x105CDE8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000162")]
	[Address(RVA = "0x105CDEC", Offset = "0x105CDEC", VA = "0x105CDEC", Slot = "8")]
	public override LocomotionTeleport.TeleportIntentions GetIntention()
	{
		return default(LocomotionTeleport.TeleportIntentions);
	}

	[Token(Token = "0x6000163")]
	[Address(RVA = "0x105D1BC", Offset = "0x105D1BC", VA = "0x105D1BC", Slot = "9")]
	public override void GetAimData([Out] Ray aimRay)
	{
	}

	[Token(Token = "0x6000164")]
	[Address(RVA = "0x105D27C", Offset = "0x105D27C", VA = "0x105D27C")]
	public TeleportInputHandlerTouch()
	{
	}
}
[Token(Token = "0x200003A")]
public abstract class TeleportOrientationHandler : TeleportSupport
{
	[Token(Token = "0x20003CB")]
	public enum OrientationModes
	{
		[Token(Token = "0x4001E38")]
		HeadRelative,
		[Token(Token = "0x4001E39")]
		ForwardFacing
	}

	[Token(Token = "0x20003CC")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8494DC", Offset = "0x8494DC")]
	private sealed class <UpdateOrientationCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportOrientationHandler <>4__this;

		[Token(Token = "0x170001F5")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A4B")]
			[Address(RVA = "0xFD3208", Offset = "0xFD3208", VA = "0xFD3208", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F6")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A4D")]
			[Address(RVA = "0xFD3250", Offset = "0xFD3250", VA = "0xFD3250", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A48")]
		[Address(RVA = "0xFD3128", Offset = "0xFD3128", VA = "0xFD3128")]
		[DebuggerHidden]
		public <UpdateOrientationCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001A49")]
		[Address(RVA = "0xFD3154", Offset = "0xFD3154", VA = "0xFD3154", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A4A")]
		[Address(RVA = "0xFD3158", Offset = "0xFD3158", VA = "0xFD3158", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A4C")]
		[Address(RVA = "0xFD3210", Offset = "0xFD3210", VA = "0xFD3210", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private readonly Action _updateOrientationAction;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action<LocomotionTeleport.AimData> _updateAimDataAction;

	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected LocomotionTeleport.AimData AimData;

	[Token(Token = "0x6000165")]
	[Address(RVA = "0x105D370", Offset = "0x105D370", VA = "0x105D370")]
	protected TeleportOrientationHandler()
	{
	}

	[Token(Token = "0x6000166")]
	[Address(RVA = "0x105D47C", Offset = "0x105D47C", VA = "0x105D47C")]
	private void UpdateAimData(LocomotionTeleport.AimData aimData)
	{
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0x105D484", Offset = "0x105D484", VA = "0x105D484", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0x105D4D0", Offset = "0x105D4D0", VA = "0x105D4D0", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0x105D518", Offset = "0x105D518", VA = "0x105D518")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855874", Offset = "0x855874")]
	private IEnumerator UpdateOrientationCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600016A")]
	protected abstract void InitializeTeleportDestination();

	[Token(Token = "0x600016B")]
	protected abstract void UpdateTeleportDestination();

	[Token(Token = "0x600016C")]
	[Address(RVA = "0x105D598", Offset = "0x105D598", VA = "0x105D598")]
	protected Quaternion GetLandingOrientation(OrientationModes mode, Quaternion rotation)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0x105D654", Offset = "0x105D654", VA = "0x105D654")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8558DC", Offset = "0x8558DC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x200003B")]
public class TeleportOrientationHandler360 : TeleportOrientationHandler
{
	[Token(Token = "0x600016E")]
	[Address(RVA = "0x105D680", Offset = "0x105D680", VA = "0x105D680", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x600016F")]
	[Address(RVA = "0x105D684", Offset = "0x105D684", VA = "0x105D684", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000170")]
	[Address(RVA = "0x105D700", Offset = "0x105D700", VA = "0x105D700")]
	public TeleportOrientationHandler360()
	{
	}
}
[Token(Token = "0x200003C")]
public class TeleportOrientationHandlerHMD : TeleportOrientationHandler
{
	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C4F4", Offset = "0x84C4F4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C52C", Offset = "0x84C52C")]
	public bool UpdateOrientationDuringAim;

	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C564", Offset = "0x84C564")]
	public float AimDistanceThreshold;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C59C", Offset = "0x84C59C")]
	public float AimDistanceMaxRange;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Quaternion _initialRotation;

	[Token(Token = "0x6000171")]
	[Address(RVA = "0x105D704", Offset = "0x105D704", VA = "0x105D704", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0x105D730", Offset = "0x105D730", VA = "0x105D730", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0x105DAD8", Offset = "0x105DAD8", VA = "0x105DAD8")]
	public TeleportOrientationHandlerHMD()
	{
	}
}
[Token(Token = "0x200003D")]
public class TeleportOrientationHandlerThumbstick : TeleportOrientationHandler
{
	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C5D4", Offset = "0x84C5D4")]
	public OrientationModes OrientationMode;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C60C", Offset = "0x84C60C")]
	public OVRInput.Controller Thumbstick;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C644", Offset = "0x84C644")]
	public float RotateStickThreshold;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private Quaternion _initialRotation;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Quaternion _currentRotation;

	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector2 _lastValidDirection;

	[Token(Token = "0x6000174")]
	[Address(RVA = "0x105DADC", Offset = "0x105DADC", VA = "0x105DADC", Slot = "8")]
	protected override void InitializeTeleportDestination()
	{
	}

	[Token(Token = "0x6000175")]
	[Address(RVA = "0x105DB20", Offset = "0x105DB20", VA = "0x105DB20", Slot = "9")]
	protected override void UpdateTeleportDestination()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0x105DEC0", Offset = "0x105DEC0", VA = "0x105DEC0")]
	public TeleportOrientationHandlerThumbstick()
	{
	}
}
[Token(Token = "0x200003E")]
public class TeleportPoint : MonoBehaviour
{
	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dimmingSpeed;

	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float fullIntensity;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float lowIntensity;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform destTransform;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float lastLookAtTime;

	[Token(Token = "0x6000177")]
	[Address(RVA = "0x105DED0", Offset = "0x105DED0", VA = "0x105DED0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0x105DED4", Offset = "0x105DED4", VA = "0x105DED4")]
	public Transform GetDestTransform()
	{
		return null;
	}

	[Token(Token = "0x6000179")]
	[Address(RVA = "0x105DEDC", Offset = "0x105DEDC", VA = "0x105DEDC")]
	private void Update()
	{
	}

	[Token(Token = "0x600017A")]
	[Address(RVA = "0x105DFA0", Offset = "0x105DFA0", VA = "0x105DFA0")]
	public void OnLookAt()
	{
	}

	[Token(Token = "0x600017B")]
	[Address(RVA = "0x105DFC8", Offset = "0x105DFC8", VA = "0x105DFC8")]
	public TeleportPoint()
	{
	}
}
[Token(Token = "0x200003F")]
public abstract class TeleportSupport : MonoBehaviour
{
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C67C", Offset = "0x84C67C")]
	private LocomotionTeleport <LocomotionTeleport>k__BackingField;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool _eventsActive;

	[Token(Token = "0x17000014")]
	protected LocomotionTeleport LocomotionTeleport
	{
		[Token(Token = "0x600017C")]
		[Address(RVA = "0x105DFE0", Offset = "0x105DFE0", VA = "0x105DFE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8558EC", Offset = "0x8558EC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017D")]
		[Address(RVA = "0x105DFE8", Offset = "0x105DFE8", VA = "0x105DFE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8558FC", Offset = "0x8558FC")]
		private set
		{
		}
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0x105BA58", Offset = "0x105BA58", VA = "0x105BA58", Slot = "4")]
	protected virtual void OnEnable()
	{
	}

	[Token(Token = "0x600017F")]
	[Address(RVA = "0x105BB88", Offset = "0x105BB88", VA = "0x105BB88", Slot = "5")]
	protected virtual void OnDisable()
	{
	}

	[Token(Token = "0x6000180")]
	[Address(RVA = "0x105DFF0", Offset = "0x105DFF0", VA = "0x105DFF0")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x85590C", Offset = "0x85590C")]
	private void LogEventHandler(string msg)
	{
	}

	[Token(Token = "0x6000181")]
	[Address(RVA = "0x105C140", Offset = "0x105C140", VA = "0x105C140", Slot = "6")]
	protected virtual void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000182")]
	[Address(RVA = "0x105C1AC", Offset = "0x105C1AC", VA = "0x105C1AC", Slot = "7")]
	protected virtual void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000183")]
	[Address(RVA = "0x105BBC4", Offset = "0x105BBC4", VA = "0x105BBC4")]
	protected TeleportSupport()
	{
	}
}
[Token(Token = "0x2000040")]
public abstract class TeleportTargetHandler : TeleportSupport
{
	[Token(Token = "0x20003CD")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8494EC", Offset = "0x8494EC")]
	private sealed class <TargetAimCoroutine>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTargetHandler <>4__this;

		[Token(Token = "0x170001F7")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A51")]
			[Address(RVA = "0xFD3528", Offset = "0xFD3528", VA = "0xFD3528", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001F8")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A53")]
			[Address(RVA = "0xFD3570", Offset = "0xFD3570", VA = "0xFD3570", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A4E")]
		[Address(RVA = "0xFD3258", Offset = "0xFD3258", VA = "0xFD3258")]
		[DebuggerHidden]
		public <TargetAimCoroutine>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6001A4F")]
		[Address(RVA = "0xFD3284", Offset = "0xFD3284", VA = "0xFD3284", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A50")]
		[Address(RVA = "0xFD3288", Offset = "0xFD3288", VA = "0xFD3288", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A52")]
		[Address(RVA = "0xFD3530", Offset = "0xFD3530", VA = "0xFD3530", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C68C", Offset = "0x84C68C")]
	public LayerMask AimCollisionLayerMask;

	[Token(Token = "0x4000149")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	protected readonly LocomotionTeleport.AimData AimData;

	[Token(Token = "0x400014A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private readonly Action _startAimAction;

	[Token(Token = "0x400014B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private readonly List<Vector3> _aimPoints;

	[Token(Token = "0x400014C")]
	private const float ERROR_MARGIN = 0.1f;

	[Token(Token = "0x6000184")]
	[Address(RVA = "0x105E0CC", Offset = "0x105E0CC", VA = "0x105E0CC")]
	protected TeleportTargetHandler()
	{
	}

	[Token(Token = "0x6000185")]
	[Address(RVA = "0x105E1F4", Offset = "0x105E1F4", VA = "0x105E1F4", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000186")]
	[Address(RVA = "0x105E224", Offset = "0x105E224", VA = "0x105E224", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000187")]
	[Address(RVA = "0x105E250", Offset = "0x105E250", VA = "0x105E250")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855944", Offset = "0x855944")]
	private IEnumerator TargetAimCoroutine()
	{
		return null;
	}

	[Token(Token = "0x6000188")]
	[Address(RVA = "0x105E2D0", Offset = "0x105E2D0", VA = "0x105E2D0", Slot = "8")]
	protected virtual void ResetAimData()
	{
	}

	[Token(Token = "0x6000189")]
	protected abstract bool ConsiderTeleport(Vector3 start, Vector3 end);

	[Token(Token = "0x600018A")]
	[Address(RVA = "0x105E2F0", Offset = "0x105E2F0", VA = "0x105E2F0", Slot = "10")]
	public virtual Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0x105E410", Offset = "0x105E410", VA = "0x105E410")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8559AC", Offset = "0x8559AC")]
	private void <.ctor>b__3_0()
	{
	}
}
[Token(Token = "0x2000041")]
public class TeleportTargetHandlerNavMesh : TeleportTargetHandler
{
	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int NavMeshAreaMask;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath _path;

	[Token(Token = "0x600018C")]
	[Address(RVA = "0x105E43C", Offset = "0x105E43C", VA = "0x105E43C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0x105E4A8", Offset = "0x105E4A8", VA = "0x105E4A8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0x105E5A0", Offset = "0x105E5A0", VA = "0x105E5A0", Slot = "10")]
	public override Vector3? ConsiderDestination(Vector3 location)
	{
		return null;
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0x105E698", Offset = "0x105E698", VA = "0x105E698")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x8559BC", Offset = "0x8559BC")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0x105E69C", Offset = "0x105E69C", VA = "0x105E69C")]
	public TeleportTargetHandlerNavMesh()
	{
	}
}
[Token(Token = "0x2000042")]
public class TeleportTargetHandlerNode : TeleportTargetHandler
{
	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C6C4", Offset = "0x84C6C4")]
	public float LOSOffset;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C6FC", Offset = "0x84C6FC")]
	public LayerMask TeleportLayerMask;

	[Token(Token = "0x6000191")]
	[Address(RVA = "0x105E6A8", Offset = "0x105E6A8", VA = "0x105E6A8", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000192")]
	[Address(RVA = "0x105E8B4", Offset = "0x105E8B4", VA = "0x105E8B4")]
	public TeleportTargetHandlerNode()
	{
	}
}
[Token(Token = "0x2000043")]
public class TeleportTargetHandlerPhysical : TeleportTargetHandler
{
	[Token(Token = "0x6000193")]
	[Address(RVA = "0x105E8C0", Offset = "0x105E8C0", VA = "0x105E8C0", Slot = "9")]
	protected override bool ConsiderTeleport(Vector3 start, Vector3 end)
	{
		return default(bool);
	}

	[Token(Token = "0x6000194")]
	[Address(RVA = "0x105E9B8", Offset = "0x105E9B8", VA = "0x105E9B8")]
	public TeleportTargetHandlerPhysical()
	{
	}
}
[Token(Token = "0x2000044")]
public abstract class TeleportTransition : TeleportSupport
{
	[Token(Token = "0x6000195")]
	[Address(RVA = "0x105E9BC", Offset = "0x105E9BC", VA = "0x105E9BC", Slot = "6")]
	protected override void AddEventHandlers()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0x105EA50", Offset = "0x105EA50", VA = "0x105EA50", Slot = "7")]
	protected override void RemoveEventHandlers()
	{
	}

	[Token(Token = "0x6000197")]
	protected abstract void LocomotionTeleportOnEnterStateTeleporting();

	[Token(Token = "0x6000198")]
	[Address(RVA = "0x105EAE0", Offset = "0x105EAE0", VA = "0x105EAE0")]
	protected TeleportTransition()
	{
	}
}
[Token(Token = "0x2000045")]
public class TeleportTransitionBlink : TeleportTransition
{
	[Token(Token = "0x20003CE")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8494FC", Offset = "0x8494FC")]
	private sealed class <BlinkCoroutine>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionBlink <>4__this;

		[Token(Token = "0x4001E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float <elapsedTime>5__2;

		[Token(Token = "0x4001E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float <teleportTime>5__3;

		[Token(Token = "0x4001E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool <teleported>5__4;

		[Token(Token = "0x170001F9")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A57")]
			[Address(RVA = "0xFD36B0", Offset = "0xFD36B0", VA = "0xFD36B0", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FA")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A59")]
			[Address(RVA = "0xFD36F8", Offset = "0xFD36F8", VA = "0xFD36F8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A54")]
		[Address(RVA = "0xFD3578", Offset = "0xFD3578", VA = "0xFD3578")]
		[DebuggerHidden]
		public <BlinkCoroutine>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6001A55")]
		[Address(RVA = "0xFD35A4", Offset = "0xFD35A4", VA = "0xFD35A4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A56")]
		[Address(RVA = "0xFD35A8", Offset = "0xFD35A8", VA = "0xFD35A8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A58")]
		[Address(RVA = "0xFD36B8", Offset = "0xFD36B8", VA = "0xFD36B8", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C734", Offset = "0x84C734")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84C734", Offset = "0x84C734")]
	public float TransitionDuration;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C78C", Offset = "0x84C78C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84C78C", Offset = "0x84C78C")]
	public float TeleportDelay;

	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C7E0", Offset = "0x84C7E0")]
	public AnimationCurve FadeLevels;

	[Token(Token = "0x6000199")]
	[Address(RVA = "0x105EAE8", Offset = "0x105EAE8", VA = "0x105EAE8", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0x105EB14", Offset = "0x105EB14", VA = "0x105EB14")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8559F4", Offset = "0x8559F4")]
	protected IEnumerator BlinkCoroutine()
	{
		return null;
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0x105EB94", Offset = "0x105EB94", VA = "0x105EB94")]
	public TeleportTransitionBlink()
	{
	}
}
[Token(Token = "0x2000046")]
public class TeleportTransitionInstant : TeleportTransition
{
	[Token(Token = "0x600019C")]
	[Address(RVA = "0x105ED40", Offset = "0x105ED40", VA = "0x105ED40", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0x105ED60", Offset = "0x105ED60", VA = "0x105ED60")]
	public TeleportTransitionInstant()
	{
	}
}
[Token(Token = "0x2000047")]
public class TeleportTransitionWarp : TeleportTransition
{
	[Token(Token = "0x20003CF")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84950C", Offset = "0x84950C")]
	private sealed class <DoWarp>d__3 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TeleportTransitionWarp <>4__this;

		[Token(Token = "0x4001E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 <startPosition>5__2;

		[Token(Token = "0x4001E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float <elapsedTime>5__3;

		[Token(Token = "0x170001FB")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A5D")]
			[Address(RVA = "0xFD385C", Offset = "0xFD385C", VA = "0xFD385C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FC")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A5F")]
			[Address(RVA = "0xFD38A4", Offset = "0xFD38A4", VA = "0xFD38A4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A5A")]
		[Address(RVA = "0xFD3700", Offset = "0xFD3700", VA = "0xFD3700")]
		[DebuggerHidden]
		public <DoWarp>d__3(int <>1__state)
		{
		}

		[Token(Token = "0x6001A5B")]
		[Address(RVA = "0xFD372C", Offset = "0xFD372C", VA = "0xFD372C", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A5C")]
		[Address(RVA = "0xFD3730", Offset = "0xFD3730", VA = "0xFD3730", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A5E")]
		[Address(RVA = "0xFD3864", Offset = "0xFD3864", VA = "0xFD3864", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C818", Offset = "0x84C818")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84C818", Offset = "0x84C818")]
	public float TransitionDuration;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public AnimationCurve PositionLerp;

	[Token(Token = "0x600019E")]
	[Address(RVA = "0x105ED68", Offset = "0x105ED68", VA = "0x105ED68", Slot = "8")]
	protected override void LocomotionTeleportOnEnterStateTeleporting()
	{
	}

	[Token(Token = "0x600019F")]
	[Address(RVA = "0x105ED94", Offset = "0x105ED94", VA = "0x105ED94")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855A5C", Offset = "0x855A5C")]
	private IEnumerator DoWarp()
	{
		return null;
	}

	[Token(Token = "0x60001A0")]
	[Address(RVA = "0x105EE14", Offset = "0x105EE14", VA = "0x105EE14")]
	public TeleportTransitionWarp()
	{
	}
}
[Token(Token = "0x2000048")]
public static class NativeVideoPlayer
{
	[Token(Token = "0x20003D0")]
	public enum PlabackState
	{
		[Token(Token = "0x4001E4C")]
		Idle = 1,
		[Token(Token = "0x4001E4D")]
		Preparing,
		[Token(Token = "0x4001E4E")]
		Buffering,
		[Token(Token = "0x4001E4F")]
		Ready,
		[Token(Token = "0x4001E50")]
		Ended
	}

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static IntPtr? _Activity;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static IntPtr? _VideoPlayerClass;

	[Token(Token = "0x4000158")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static readonly jvalue[] EmptyParams;

	[Token(Token = "0x4000159")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static IntPtr getIsPlayingMethodId;

	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static IntPtr getCurrentPlaybackStateMethodId;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static IntPtr getDurationMethodId;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static IntPtr getPlaybackPositionMethodId;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private static IntPtr setPlaybackPositionMethodId;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private static jvalue[] setPlaybackPositionParams;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private static IntPtr playVideoMethodId;

	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private static jvalue[] playVideoParams;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static IntPtr stopMethodId;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static IntPtr resumeMethodId;

	[Token(Token = "0x4000163")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static IntPtr pauseMethodId;

	[Token(Token = "0x4000164")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static IntPtr setPlaybackSpeedMethodId;

	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static jvalue[] setPlaybackSpeedParams;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static IntPtr setLoopingMethodId;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private static jvalue[] setLoopingParams;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private static IntPtr setListenerRotationQuaternionMethodId;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private static jvalue[] setListenerRotationQuaternionParams;

	[Token(Token = "0x17000015")]
	private static IntPtr VideoPlayerClass
	{
		[Token(Token = "0x60001A1")]
		[Address(RVA = "0x1563E14", Offset = "0x1563E14", VA = "0x1563E14")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000016")]
	private static IntPtr Activity
	{
		[Token(Token = "0x60001A2")]
		[Address(RVA = "0x1564144", Offset = "0x1564144", VA = "0x1564144")]
		get
		{
			return default(IntPtr);
		}
	}

	[Token(Token = "0x17000017")]
	public static bool IsAvailable
	{
		[Token(Token = "0x60001A3")]
		[Address(RVA = "0x1564414", Offset = "0x1564414", VA = "0x1564414")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000018")]
	public static bool IsPlaying
	{
		[Token(Token = "0x60001A4")]
		[Address(RVA = "0x1564484", Offset = "0x1564484", VA = "0x1564484")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000019")]
	public static PlabackState CurrentPlaybackState
	{
		[Token(Token = "0x60001A5")]
		[Address(RVA = "0x156459C", Offset = "0x156459C", VA = "0x156459C")]
		get
		{
			return default(PlabackState);
		}
	}

	[Token(Token = "0x1700001A")]
	public static long Duration
	{
		[Token(Token = "0x60001A6")]
		[Address(RVA = "0x15646B8", Offset = "0x15646B8", VA = "0x15646B8")]
		get
		{
			return default(long);
		}
	}

	[Token(Token = "0x1700001B")]
	public static long PlaybackPosition
	{
		[Token(Token = "0x60001A7")]
		[Address(RVA = "0x15647D4", Offset = "0x15647D4", VA = "0x15647D4")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001A8")]
		[Address(RVA = "0x15648F0", Offset = "0x15648F0", VA = "0x15648F0")]
		set
		{
		}
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0x1564A74", Offset = "0x1564A74", VA = "0x1564A74")]
	public static void PlayVideo(string path, string drmLicenseUrl, IntPtr surfaceObj)
	{
	}

	[Token(Token = "0x60001AA")]
	[Address(RVA = "0x1564CA8", Offset = "0x1564CA8", VA = "0x1564CA8")]
	public static void Stop()
	{
	}

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0x1564DC4", Offset = "0x1564DC4", VA = "0x1564DC4")]
	public static void Play()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0x1564EE0", Offset = "0x1564EE0", VA = "0x1564EE0")]
	public static void Pause()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0x1564FFC", Offset = "0x1564FFC", VA = "0x1564FFC")]
	public static void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0x1565180", Offset = "0x1565180", VA = "0x1565180")]
	public static void SetLooping(bool looping)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0x1565308", Offset = "0x1565308", VA = "0x1565308")]
	public static void SetListenerRotation(Quaternion rotation)
	{
	}
}
[Token(Token = "0x2000049")]
public class ButtonDownListener : MonoBehaviour, IPointerDownHandler, IEventSystemHandler
{
	[Token(Token = "0x1400000F")]
	public event Action onButtonDown
	{
		[Token(Token = "0x60001B1")]
		[Address(RVA = "0xF4A27C", Offset = "0xF4A27C", VA = "0xF4A27C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855AC4", Offset = "0x855AC4")]
		add
		{
		}
		[Token(Token = "0x60001B2")]
		[Address(RVA = "0xF4A31C", Offset = "0xF4A31C", VA = "0xF4A31C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855AD4", Offset = "0x855AD4")]
		remove
		{
		}
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xF4A3BC", Offset = "0xF4A3BC", VA = "0xF4A3BC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xF4A3D0", Offset = "0xF4A3D0", VA = "0xF4A3D0")]
	public ButtonDownListener()
	{
	}
}
[Token(Token = "0x200004A")]
public class MediaPlayerImage : Image
{
	[Token(Token = "0x20003D1")]
	public enum ButtonType
	{
		[Token(Token = "0x4001E52")]
		Play,
		[Token(Token = "0x4001E53")]
		Pause,
		[Token(Token = "0x4001E54")]
		FastForward,
		[Token(Token = "0x4001E55")]
		Rewind,
		[Token(Token = "0x4001E56")]
		SkipForward,
		[Token(Token = "0x4001E57")]
		SkipBack,
		[Token(Token = "0x4001E58")]
		Stop
	}

	[Token(Token = "0x400016B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private ButtonType m_ButtonType;

	[Token(Token = "0x1700001C")]
	public ButtonType buttonType
	{
		[Token(Token = "0x60001B5")]
		[Address(RVA = "0xCEAD6C", Offset = "0xCEAD6C", VA = "0xCEAD6C")]
		get
		{
			return default(ButtonType);
		}
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xCEAD74", Offset = "0xCEAD74", VA = "0xCEAD74")]
		set
		{
		}
	}

	[Token(Token = "0x60001B7")]
	[Address(RVA = "0xCEAD98", Offset = "0xCEAD98", VA = "0xCEAD98", Slot = "44")]
	protected override void OnPopulateMesh(VertexHelper toFill)
	{
	}

	[Token(Token = "0x60001B8")]
	[Address(RVA = "0xCEC234", Offset = "0xCEC234", VA = "0xCEC234")]
	public MediaPlayerImage()
	{
	}
}
[Token(Token = "0x200004B")]
public class MoviePlayerSample : MonoBehaviour
{
	[Token(Token = "0x20003D2")]
	public enum VideoShape
	{
		[Token(Token = "0x4001E5A")]
		_360,
		[Token(Token = "0x4001E5B")]
		_180,
		[Token(Token = "0x4001E5C")]
		Quad
	}

	[Token(Token = "0x20003D3")]
	public enum VideoStereo
	{
		[Token(Token = "0x4001E5E")]
		Mono,
		[Token(Token = "0x4001E5F")]
		TopBottom,
		[Token(Token = "0x4001E60")]
		LeftRight,
		[Token(Token = "0x4001E61")]
		BottomTop
	}

	[Token(Token = "0x20003D4")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84951C", Offset = "0x84951C")]
	private sealed class <Start>d__32 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x170001FD")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A63")]
			[Address(RVA = "0x19D6BFC", Offset = "0x19D6BFC", VA = "0x19D6BFC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001FE")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A65")]
			[Address(RVA = "0x19D6C44", Offset = "0x19D6C44", VA = "0x19D6C44", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A60")]
		[Address(RVA = "0x19D6A08", Offset = "0x19D6A08", VA = "0x19D6A08")]
		[DebuggerHidden]
		public <Start>d__32(int <>1__state)
		{
		}

		[Token(Token = "0x6001A61")]
		[Address(RVA = "0x19D6A34", Offset = "0x19D6A34", VA = "0x19D6A34", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A62")]
		[Address(RVA = "0x19D6A38", Offset = "0x19D6A38", VA = "0x19D6A38", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A64")]
		[Address(RVA = "0x19D6C04", Offset = "0x19D6C04", VA = "0x19D6C04", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x20003D5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84952C", Offset = "0x84952C")]
	private sealed class <>c__DisplayClass33_0
	{
		[Token(Token = "0x4001E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string moviePath;

		[Token(Token = "0x4001E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string drmLicencesUrl;

		[Token(Token = "0x4001E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MoviePlayerSample <>4__this;

		[Token(Token = "0x6001A66")]
		[Address(RVA = "0x19D6910", Offset = "0x19D6910", VA = "0x19D6910")]
		public <>c__DisplayClass33_0()
		{
		}

		[Token(Token = "0x6001A67")]
		[Address(RVA = "0x19D6918", Offset = "0x19D6918", VA = "0x19D6918")]
		internal void <Play>b__0()
		{
		}
	}

	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool videoPausedBeforeAppPause;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private VideoPlayer videoPlayer;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVROverlay overlay;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Renderer mediaRenderer;

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C8A0", Offset = "0x84C8A0")]
	private bool <IsPlaying>k__BackingField;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C8B0", Offset = "0x84C8B0")]
	private long <Duration>k__BackingField;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C8C0", Offset = "0x84C8C0")]
	private long <PlaybackPosition>k__BackingField;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RenderTexture copyTexture;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material externalTex2DMaterial;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public string MovieName;

	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public string DrmLicenseUrl;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public bool LoopVideo;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public VideoShape Shape;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public VideoStereo Stereo;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool DisplayMono;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private VideoShape _LastShape;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private VideoStereo _LastStereo;

	[Token(Token = "0x400017D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool _LastDisplayMono;

	[Token(Token = "0x1700001D")]
	public bool IsPlaying
	{
		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xCEF42C", Offset = "0xCEF42C", VA = "0xCEF42C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855AE4", Offset = "0x855AE4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xCEF434", Offset = "0xCEF434", VA = "0xCEF434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855AF4", Offset = "0x855AF4")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001E")]
	public long Duration
	{
		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xCEF440", Offset = "0xCEF440", VA = "0xCEF440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855B04", Offset = "0x855B04")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xCEF448", Offset = "0xCEF448", VA = "0xCEF448")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855B14", Offset = "0x855B14")]
		private set
		{
		}
	}

	[Token(Token = "0x1700001F")]
	public long PlaybackPosition
	{
		[Token(Token = "0x60001BD")]
		[Address(RVA = "0xCEF450", Offset = "0xCEF450", VA = "0xCEF450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855B24", Offset = "0x855B24")]
		get
		{
			return default(long);
		}
		[Token(Token = "0x60001BE")]
		[Address(RVA = "0xCEF458", Offset = "0xCEF458", VA = "0xCEF458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855B34", Offset = "0x855B34")]
		private set
		{
		}
	}

	[Token(Token = "0x60001BF")]
	[Address(RVA = "0xCEF460", Offset = "0xCEF460", VA = "0xCEF460")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001C0")]
	[Address(RVA = "0xCEF714", Offset = "0xCEF714", VA = "0xCEF714")]
	private bool IsLocalVideo(string movieName)
	{
		return default(bool);
	}

	[Token(Token = "0x60001C1")]
	[Address(RVA = "0xCEF778", Offset = "0xCEF778", VA = "0xCEF778")]
	private void UpdateShapeAndStereo()
	{
	}

	[Token(Token = "0x60001C2")]
	[Address(RVA = "0xCEF9EC", Offset = "0xCEF9EC", VA = "0xCEF9EC")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855B44", Offset = "0x855B44")]
	private IEnumerator Start()
	{
		return null;
	}

	[Token(Token = "0x60001C3")]
	[Address(RVA = "0xCEFA6C", Offset = "0xCEFA6C", VA = "0xCEFA6C")]
	public void Play(string moviePath, string drmLicencesUrl)
	{
	}

	[Token(Token = "0x60001C4")]
	[Address(RVA = "0xCEFD58", Offset = "0xCEFD58", VA = "0xCEFD58")]
	public void Play()
	{
	}

	[Token(Token = "0x60001C5")]
	[Address(RVA = "0xCEFDEC", Offset = "0xCEFDEC", VA = "0xCEFDEC")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001C6")]
	[Address(RVA = "0xCEFE7C", Offset = "0xCEFE7C", VA = "0xCEFE7C")]
	public void SeekTo(long position)
	{
	}

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xCEFF80", Offset = "0xCEFF80", VA = "0xCEFF80")]
	private void Update()
	{
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xCF04E4", Offset = "0xCF04E4", VA = "0xCF04E4")]
	public void SetPlaybackSpeed(float speed)
	{
	}

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xCF059C", Offset = "0xCF059C", VA = "0xCF059C")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xCF062C", Offset = "0xCF062C", VA = "0xCF062C")]
	private void OnApplicationPause(bool appWasPaused)
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xCF0720", Offset = "0xCF0720", VA = "0xCF0720")]
	public MoviePlayerSample()
	{
	}
}
[Token(Token = "0x200004C")]
public class MoviePlayerSampleControls : MonoBehaviour
{
	[Token(Token = "0x20003D6")]
	private enum PlaybackState
	{
		[Token(Token = "0x4001E69")]
		Playing,
		[Token(Token = "0x4001E6A")]
		Paused,
		[Token(Token = "0x4001E6B")]
		Rewinding,
		[Token(Token = "0x4001E6C")]
		FastForwarding
	}

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MoviePlayerSample Player;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVRInputModule InputModule;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRGazePointer GazePointer;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject LeftHand;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject RightHand;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Canvas Canvas;

	[Token(Token = "0x4000184")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ButtonDownListener PlayPause;

	[Token(Token = "0x4000185")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MediaPlayerImage PlayPauseImage;

	[Token(Token = "0x4000186")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Slider ProgressBar;

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public ButtonDownListener FastForward;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public MediaPlayerImage FastForwardImage;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ButtonDownListener Rewind;

	[Token(Token = "0x400018A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public MediaPlayerImage RewindImage;

	[Token(Token = "0x400018B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public float TimeoutTime;

	[Token(Token = "0x400018C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool _isVisible;

	[Token(Token = "0x400018D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float _lastButtonTime;

	[Token(Token = "0x400018E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private bool _didSeek;

	[Token(Token = "0x400018F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private long _seekPreviousPosition;

	[Token(Token = "0x4000190")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private long _rewindStartPosition;

	[Token(Token = "0x4000191")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float _rewindStartTime;

	[Token(Token = "0x4000192")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private PlaybackState _state;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xCF0730", Offset = "0xCF0730", VA = "0xCF0730")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xCF0A8C", Offset = "0xCF0A8C", VA = "0xCF0A8C")]
	private void OnPlayPauseClicked()
	{
	}

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xCF0C6C", Offset = "0xCF0C6C", VA = "0xCF0C6C")]
	private void OnFastForwardClicked()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xCF0DA8", Offset = "0xCF0DA8", VA = "0xCF0DA8")]
	private void OnRewindClicked()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xCF0EB4", Offset = "0xCF0EB4", VA = "0xCF0EB4")]
	private void OnSeekBarMoved(float value)
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xCF0D78", Offset = "0xCF0D78", VA = "0xCF0D78")]
	private void Seek(long pos)
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xCF0F04", Offset = "0xCF0F04", VA = "0xCF0F04")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xCF0978", Offset = "0xCF0978", VA = "0xCF0978")]
	private void SetVisible(bool visible)
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xCF1268", Offset = "0xCF1268", VA = "0xCF1268")]
	public MoviePlayerSampleControls()
	{
	}
}
[Token(Token = "0x200004D")]
public static class VectorUtil
{
	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xC3563C", Offset = "0xC3563C", VA = "0xC3563C")]
	public static Vector4 ToVector(this Rect rect)
	{
		return default(Vector4);
	}
}
[Token(Token = "0x200004E")]
public class DebugUISample : MonoBehaviour
{
	[Token(Token = "0x4000193")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool inMenu;

	[Token(Token = "0x4000194")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text sliderText;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xBFD9D8", Offset = "0xBFD9D8", VA = "0xBFD9D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xBFDEEC", Offset = "0xBFDEEC", VA = "0xBFDEEC")]
	public void TogglePressed(Toggle t)
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xBFDFAC", Offset = "0xBFDFAC", VA = "0xBFDFAC")]
	public void RadioPressed(string radioLabel, string group, Toggle t)
	{
	}

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xBFE24C", Offset = "0xBFE24C", VA = "0xBFE24C")]
	public void SliderPressed(float f)
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xBFE334", Offset = "0xBFE334", VA = "0xBFE334")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xBFE420", Offset = "0xBFE420", VA = "0xBFE420")]
	private void LogButtonPressed()
	{
	}

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xBFE494", Offset = "0xBFE494", VA = "0xBFE494")]
	public DebugUISample()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xBFE49C", Offset = "0xBFE49C", VA = "0xBFE49C")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855BBC", Offset = "0x855BBC")]
	private void <Start>b__2_0(Toggle t)
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xBFE508", Offset = "0xBFE508", VA = "0xBFE508")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855BCC", Offset = "0x855BCC")]
	private void <Start>b__2_1(Toggle t)
	{
	}

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xBFE574", Offset = "0xBFE574", VA = "0xBFE574")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855BDC", Offset = "0x855BDC")]
	private void <Start>b__2_2(Toggle t)
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xBFE5E0", Offset = "0xBFE5E0", VA = "0xBFE5E0")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855BEC", Offset = "0x855BEC")]
	private void <Start>b__2_3(Toggle t)
	{
	}
}
[Token(Token = "0x200004F")]
public class HandsActiveChecker : MonoBehaviour
{
	[Token(Token = "0x20003D7")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84953C", Offset = "0x84953C")]
	private sealed class <GetCenterEye>d__6 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HandsActiveChecker <>4__this;

		[Token(Token = "0x170001FF")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001A6B")]
			[Address(RVA = "0x19B0F14", Offset = "0x19B0F14", VA = "0x19B0F14", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000200")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001A6D")]
			[Address(RVA = "0x19B0F5C", Offset = "0x19B0F5C", VA = "0x19B0F5C", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001A68")]
		[Address(RVA = "0x19B0D98", Offset = "0x19B0D98", VA = "0x19B0D98")]
		[DebuggerHidden]
		public <GetCenterEye>d__6(int <>1__state)
		{
		}

		[Token(Token = "0x6001A69")]
		[Address(RVA = "0x19B0DC4", Offset = "0x19B0DC4", VA = "0x19B0DC4", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001A6A")]
		[Address(RVA = "0x19B0DC8", Offset = "0x19B0DC8", VA = "0x19B0DC8", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001A6C")]
		[Address(RVA = "0x19B0F1C", Offset = "0x19B0F1C", VA = "0x19B0F1C", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000195")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private GameObject _notificationPrefab;

	[Token(Token = "0x4000196")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private GameObject _notification;

	[Token(Token = "0x4000197")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private OVRCameraRig _cameraRig;

	[Token(Token = "0x4000198")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform _centerEye;

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xBA41C8", Offset = "0xBA41C8", VA = "0xBA41C8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xBA42F4", Offset = "0xBA42F4", VA = "0xBA42F4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E3")]
	[Address(RVA = "0xBA4274", Offset = "0xBA4274", VA = "0xBA4274")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855BFC", Offset = "0x855BFC")]
	private IEnumerator GetCenterEye()
	{
		return null;
	}

	[Token(Token = "0x60001E4")]
	[Address(RVA = "0xBA44B0", Offset = "0xBA44B0", VA = "0xBA44B0")]
	public HandsActiveChecker()
	{
	}
}
[Token(Token = "0x2000050")]
[ExecuteInEditMode]
public class CharacterCapsule : MonoBehaviour
{
	[Token(Token = "0x4000199")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterController _character;

	[Token(Token = "0x400019A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MeshFilter _meshFilter;

	[Token(Token = "0x400019B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _height;

	[Token(Token = "0x400019C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _radius;

	[Token(Token = "0x400019D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84C8E0", Offset = "0x84C8E0")]
	public int SubdivisionsU;

	[Token(Token = "0x400019E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84C8FC", Offset = "0x84C8FC")]
	public int SubdivisionsV;

	[Token(Token = "0x400019F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int _subdivisionU;

	[Token(Token = "0x40001A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int _subdivisionV;

	[Token(Token = "0x40001A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3[] _vertices;

	[Token(Token = "0x40001A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int[] _triangles;

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xDC2DAC", Offset = "0xDC2DAC", VA = "0xDC2DAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xDC37F8", Offset = "0xDC37F8", VA = "0xDC37F8")]
	public CharacterCapsule()
	{
	}
}
[Token(Token = "0x2000051")]
public class LocomotionSampleSupport : MonoBehaviour
{
	[Token(Token = "0x40001A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LocomotionController lc;

	[Token(Token = "0x40001A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool inMenu;

	[Token(Token = "0x17000020")]
	private LocomotionTeleport TeleportController
	{
		[Token(Token = "0x60001E7")]
		[Address(RVA = "0xCE4E9C", Offset = "0xCE4E9C", VA = "0xCE4E9C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xCE4EF0", Offset = "0xCE4EF0", VA = "0xCE4EF0")]
	public void Start()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xCE52F8", Offset = "0xCE52F8", VA = "0xCE52F8")]
	public void Update()
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xCE53EC", Offset = "0xCE53EC", VA = "0xCE53EC")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x855C64", Offset = "0x855C64")]
	private static void Log(string msg)
	{
	}

	[Token(Token = "0x60001EB")]
	public static TActivate ActivateCategory<TCategory, TActivate>(GameObject target) where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001EC")]
	protected void ActivateHandlers<TInput, TAim, TTarget, TOrientation, TTransition>() where TInput : TeleportInputHandler where TAim : TeleportAimHandler where TTarget : TeleportTargetHandler where TOrientation : TeleportOrientationHandler where TTransition : TeleportTransition
	{
	}

	[Token(Token = "0x60001ED")]
	protected void ActivateInput<TActivate>() where TActivate : TeleportInputHandler
	{
	}

	[Token(Token = "0x60001EE")]
	protected void ActivateAim<TActivate>() where TActivate : TeleportAimHandler
	{
	}

	[Token(Token = "0x60001EF")]
	protected void ActivateTarget<TActivate>() where TActivate : TeleportTargetHandler
	{
	}

	[Token(Token = "0x60001F0")]
	protected void ActivateOrientation<TActivate>() where TActivate : TeleportOrientationHandler
	{
	}

	[Token(Token = "0x60001F1")]
	protected void ActivateTransition<TActivate>() where TActivate : TeleportTransition
	{
	}

	[Token(Token = "0x60001F2")]
	protected TActivate ActivateCategory<TCategory, TActivate>() where TCategory : MonoBehaviour where TActivate : MonoBehaviour
	{
		return null;
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xCE5458", Offset = "0xCE5458", VA = "0xCE5458")]
	protected void UpdateToggle(Toggle toggle, bool enabled)
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xCE549C", Offset = "0xCE549C", VA = "0xCE549C")]
	private void SetupNonCap()
	{
	}

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xCE550C", Offset = "0xCE550C", VA = "0xCE550C")]
	private void SetupTeleportDefaults()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xCE567C", Offset = "0xCE567C", VA = "0xCE567C")]
	protected GameObject AddInstance(GameObject template, string label)
	{
		return null;
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xCE5760", Offset = "0xCE5760", VA = "0xCE5760")]
	private void SetupNodeTeleport()
	{
	}

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xCE51F0", Offset = "0xCE51F0", VA = "0xCE51F0")]
	private void SetupTwoStickTeleport()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xCE5828", Offset = "0xCE5828", VA = "0xCE5828")]
	private void SetupWalkOnly()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xCE5890", Offset = "0xCE5890", VA = "0xCE5890")]
	private void SetupLeftStrafeRightTeleport()
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xCE5988", Offset = "0xCE5988", VA = "0xCE5988")]
	public LocomotionSampleSupport()
	{
	}
}
[Token(Token = "0x2000052")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x847350", Offset = "0x847350")]
public class OVROverlayCanvas : MonoBehaviour
{
	[Token(Token = "0x20003D8")]
	public enum DrawMode
	{
		[Token(Token = "0x4001E71")]
		Opaque,
		[Token(Token = "0x4001E72")]
		OpaqueWithClip,
		[Token(Token = "0x4001E73")]
		TransparentDefaultAlpha,
		[Token(Token = "0x4001E74")]
		TransparentCorrectAlpha
	}

	[Token(Token = "0x40001A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[HideInInspector]
	private Shader _transparentShader;

	[Token(Token = "0x40001A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[HideInInspector]
	private Shader _opaqueShader;

	[Token(Token = "0x40001A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform _rectTransform;

	[Token(Token = "0x40001A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Canvas _canvas;

	[Token(Token = "0x40001A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Camera _camera;

	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private OVROverlay _overlay;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RenderTexture _renderTexture;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private MeshRenderer _meshRenderer;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Mesh _quad;

	[Token(Token = "0x40001AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material _defaultMat;

	[Token(Token = "0x40001AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public int MaxTextureSize;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public int MinTextureSize;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float PixelsPerUnit;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public int DrawRate;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public int DrawFrameOffset;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public bool Expensive;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public int Layer;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public DrawMode Opacity;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private bool ScaleViewport;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly Plane[] _FrustumPlanes;

	[Token(Token = "0x17000021")]
	public bool overlayEnabled
	{
		[Token(Token = "0x6000202")]
		[Address(RVA = "0x1576490", Offset = "0x1576490", VA = "0x1576490")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000203")]
		[Address(RVA = "0x157652C", Offset = "0x157652C", VA = "0x157652C")]
		set
		{
		}
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0x1574EFC", Offset = "0x1574EFC", VA = "0x1574EFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0x1575AE0", Offset = "0x1575AE0", VA = "0x1575AE0")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0x1575B68", Offset = "0x1575B68", VA = "0x1575B68")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0x1575C58", Offset = "0x1575C58", VA = "0x1575C58")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000200")]
	[Address(RVA = "0x1575D48", Offset = "0x1575D48", VA = "0x1575D48", Slot = "4")]
	protected virtual bool ShouldRender()
	{
		return default(bool);
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0x1575F68", Offset = "0x1575F68", VA = "0x1575F68")]
	private void Update()
	{
	}

	[Token(Token = "0x6000204")]
	[Address(RVA = "0x15765F8", Offset = "0x15765F8", VA = "0x15765F8")]
	public OVROverlayCanvas()
	{
	}
}
[Token(Token = "0x2000053")]
public class StartMenu : MonoBehaviour
{
	[Token(Token = "0x20003D9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84954C", Offset = "0x84954C")]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4001E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int sceneIndex;

		[Token(Token = "0x4001E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public StartMenu <>4__this;

		[Token(Token = "0x6001A6E")]
		[Address(RVA = "0xFD2C74", Offset = "0xFD2C74", VA = "0xFD2C74")]
		public <>c__DisplayClass3_0()
		{
		}

		[Token(Token = "0x6001A6F")]
		[Address(RVA = "0xFD2C7C", Offset = "0xFD2C7C", VA = "0xFD2C7C")]
		internal void <Start>b__0()
		{
		}
	}

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public OVROverlay overlay;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OVROverlay text;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public OVRCameraRig vrRig;

	[Token(Token = "0x6000206")]
	[Address(RVA = "0x10547C8", Offset = "0x10547C8", VA = "0x10547C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0x10549DC", Offset = "0x10549DC", VA = "0x10549DC")]
	private void LoadScene(int idx)
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0x1054AF4", Offset = "0x1054AF4", VA = "0x1054AF4")]
	public StartMenu()
	{
	}
}
[Token(Token = "0x2000054")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8473B8", Offset = "0x8473B8")]
public class DemoPlayerController : MonoBehaviour
{
	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mainCamera;

	[Token(Token = "0x40001BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CharacterController characterController;

	[Token(Token = "0x40001BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float movementSpeed;

	[Token(Token = "0x40001BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float rotationX;

	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotationY;

	[Token(Token = "0x40001C1")]
	private const float clampAngleDegrees = 80f;

	[Token(Token = "0x40001C2")]
	private const float sensitivity = 2f;

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xBFE7B4", Offset = "0xBFE7B4", VA = "0xBFE7B4")]
	private void Start()
	{
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xBFE864", Offset = "0xBFE864", VA = "0xBFE864")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600020B")]
	[Address(RVA = "0xBFEA60", Offset = "0xBFEA60", VA = "0xBFEA60")]
	private void SetCursorLock(bool lockCursor)
	{
	}

	[Token(Token = "0x600020C")]
	[Address(RVA = "0xBFEA90", Offset = "0xBFEA90", VA = "0xBFEA90")]
	public DemoPlayerController()
	{
	}
}
[Token(Token = "0x2000055")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x847420", Offset = "0x847420")]
public class ResonanceAudioDemoCubeController : MonoBehaviour
{
	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material material;

	[Token(Token = "0x600020D")]
	[Address(RVA = "0xDD2E6C", Offset = "0xDD2E6C", VA = "0xDD2E6C")]
	private void Start()
	{
	}

	[Token(Token = "0x600020E")]
	[Address(RVA = "0xDD2EEC", Offset = "0xDD2EEC", VA = "0xDD2EEC")]
	public void SetGazedAt(bool gazedAt)
	{
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xDD2F30", Offset = "0xDD2F30", VA = "0xDD2F30")]
	public void TeleportRandomly()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xDD2FC0", Offset = "0xDD2FC0", VA = "0xDD2FC0")]
	public ResonanceAudioDemoCubeController()
	{
	}
}
[Token(Token = "0x2000056")]
public class ResonanceAudioDemoManager : MonoBehaviour
{
	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera mainCamera;

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ResonanceAudioDemoCubeController cube;

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xDD2FC8", Offset = "0xDD2FC8", VA = "0xDD2FC8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xDD2FD4", Offset = "0xDD2FD4", VA = "0xDD2FD4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xDD31C0", Offset = "0xDD31C0", VA = "0xDD31C0")]
	public ResonanceAudioDemoManager()
	{
	}
}
[Token(Token = "0x2000057")]
public static class ResonanceAudio
{
	[StructLayout(0)]
	[Token(Token = "0x20003DA")]
	private class RoomProperties
	{
		[Token(Token = "0x4001E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float positionX;

		[Token(Token = "0x4001E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float positionY;

		[Token(Token = "0x4001E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float positionZ;

		[Token(Token = "0x4001E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rotationX;

		[Token(Token = "0x4001E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float rotationY;

		[Token(Token = "0x4001E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float rotationZ;

		[Token(Token = "0x4001E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float rotationW;

		[Token(Token = "0x4001E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float dimensionsX;

		[Token(Token = "0x4001E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float dimensionsY;

		[Token(Token = "0x4001E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float dimensionsZ;

		[Token(Token = "0x4001E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialLeft;

		[Token(Token = "0x4001E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialRight;

		[Token(Token = "0x4001E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialBottom;

		[Token(Token = "0x4001E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialTop;

		[Token(Token = "0x4001E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialFront;

		[Token(Token = "0x4001E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public ResonanceAudioRoomManager.SurfaceMaterial materialBack;

		[Token(Token = "0x4001E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float reflectionScalar;

		[Token(Token = "0x4001E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float reverbGain;

		[Token(Token = "0x4001E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float reverbTime;

		[Token(Token = "0x4001E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float reverbBrightness;

		[Token(Token = "0x6001A70")]
		[Address(RVA = "0x19E1A88", Offset = "0x19E1A88", VA = "0x19E1A88")]
		public RoomProperties()
		{
		}
	}

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Transform listenerTransform;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static readonly Color listenerDirectivityColor;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public static readonly Color sourceDirectivityColor;

	[Token(Token = "0x40001C9")]
	public const float distanceEpsilon = 0.01f;

	[Token(Token = "0x40001CA")]
	public const float maxDistanceLimit = 1000000f;

	[Token(Token = "0x40001CB")]
	public const float minDistanceLimit = 990099f;

	[Token(Token = "0x40001CC")]
	public const float maxGainDb = 24f;

	[Token(Token = "0x40001CD")]
	public const float minGainDb = -24f;

	[Token(Token = "0x40001CE")]
	public const float maxReverbBrightness = 1f;

	[Token(Token = "0x40001CF")]
	public const float minReverbBrightness = -1f;

	[Token(Token = "0x40001D0")]
	public const float maxReverbTime = 10f;

	[Token(Token = "0x40001D1")]
	public const float maxReflectivity = 2f;

	[Token(Token = "0x40001D2")]
	public const int maxNumOcclusionHits = 12;

	[Token(Token = "0x40001D3")]
	public const float occlusionDetectionInterval = 0.2f;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static readonly Matrix4x4 flipZ;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private static RaycastHit[] occlusionHits;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private static int occlusionMaskValue;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private static float[] roomPosition;

	[Token(Token = "0x40001D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private static RoomProperties roomProperties;

	[Token(Token = "0x40001D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private static IntPtr roomPropertiesPtr;

	[Token(Token = "0x40001DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private static Matrix4x4 transformMatrix;

	[Token(Token = "0x40001DB")]
	private const string pluginName = "audiopluginresonanceaudio";

	[Token(Token = "0x17000022")]
	public static Transform ListenerTransform
	{
		[Token(Token = "0x6000214")]
		[Address(RVA = "0xDCFB7C", Offset = "0xDCFB7C", VA = "0xDCFB7C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xDCFCE0", Offset = "0xDCFCE0", VA = "0xDCFCE0")]
	public static void UpdateAudioListener(ResonanceAudioListener listener)
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xDCFEA4", Offset = "0xDCFEA4", VA = "0xDCFEA4")]
	public static void DisableRoomEffects()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xDD0034", Offset = "0xDD0034", VA = "0xDD0034")]
	public static void UpdateRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x6000218")]
	[Address(RVA = "0xDD0384", Offset = "0xDD0384", VA = "0xDD0384")]
	public static void UpdateReverbProbe(ResonanceAudioReverbProbe reverbPobe)
	{
	}

	[Token(Token = "0x6000219")]
	[Address(RVA = "0xDD0674", Offset = "0xDD0674", VA = "0xDD0674")]
	public static bool StartRecording()
	{
		return default(bool);
	}

	[Token(Token = "0x600021A")]
	[Address(RVA = "0xDD067C", Offset = "0xDD067C", VA = "0xDD067C")]
	public static bool StopRecordingAndSaveToFile(string filePath, bool seamless)
	{
		return default(bool);
	}

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xDD0684", Offset = "0xDD0684", VA = "0xDD0684")]
	public static void InitializeReverbComputer(float[] vertices, int[] triangles, int[] materialIndices, float scatteringCoefficient)
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xDD0688", Offset = "0xDD0688", VA = "0xDD0688")]
	public static bool ComputeRt60sAndProxyRoom(ResonanceAudioReverbProbe reverbProbe, int totalNumPaths, int numPathsPerBatch, int maxDepth, float energyThreshold, float listenerSphereRadius)
	{
		return default(bool);
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xDD0690", Offset = "0xDD0690", VA = "0xDD0690")]
	public static float ComputeOcclusion(Transform sourceTransform)
	{
		return default(float);
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xDCFD8C", Offset = "0xDCFD8C", VA = "0xDCFD8C")]
	public static float ConvertAmplitudeFromDb(float db)
	{
		return default(float);
	}

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xDD096C", Offset = "0xDD096C", VA = "0xDD096C")]
	public static Vector2[] Generate2dPolarPattern(float alpha, float order, int resolution)
	{
		return null;
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xDD0A98", Offset = "0xDD0A98", VA = "0xDD0A98")]
	private static void ConvertAudioTransformFromUnity(Vector3 position, Quaternion rotation)
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xDD0CF4", Offset = "0xDD0CF4", VA = "0xDD0CF4")]
	private static void SetProxyRoomProperties(ResonanceAudioReverbProbe reverbProbe, RoomProperties proxyRoomProperties)
	{
	}

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xDD0240", Offset = "0xDD0240", VA = "0xDD0240")]
	private static void UpdateRoomProperties(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xDD0590", Offset = "0xDD0590", VA = "0xDD0590")]
	private static void UpdateRoomProperties(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xDD0D90", Offset = "0xDD0D90", VA = "0xDD0D90")]
	private static void FillGeometryOfRoomProperties(Vector3 position, Quaternion rotation, Vector3 scale)
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xDD0EDC", Offset = "0xDD0EDC", VA = "0xDD0EDC")]
	private static void FillWallMaterialsOfRoomProperties(ResonanceAudioRoomManager.SurfaceMaterial leftWall, ResonanceAudioRoomManager.SurfaceMaterial rightWall, ResonanceAudioRoomManager.SurfaceMaterial floor, ResonanceAudioRoomManager.SurfaceMaterial ceiling, ResonanceAudioRoomManager.SurfaceMaterial frontWall, ResonanceAudioRoomManager.SurfaceMaterial backWall)
	{
	}

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xDD0FCC", Offset = "0xDD0FCC", VA = "0xDD0FCC")]
	private static void FillModifiersOfRoomProperties(float reverbGainDb, float reverbTime, float reverbBrightness, float reflectivity)
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000227")]
	[Address(RVA = "0xDCFDA0", Offset = "0xDCFDA0", VA = "0xDCFDA0")]
	private static extern void SetListenerGain(float gain);

	[PreserveSig]
	[Token(Token = "0x6000228")]
	[Address(RVA = "0xDCFE24", Offset = "0xDCFE24", VA = "0xDCFE24")]
	private static extern void SetListenerStereoSpeakerMode(bool enableStereoSpeakerMode);

	[PreserveSig]
	[Token(Token = "0x6000229")]
	[Address(RVA = "0xDCFF9C", Offset = "0xDCFF9C", VA = "0xDCFF9C")]
	private static extern void SetRoomProperties(IntPtr roomProperties, float[] rt60s);
}
[Token(Token = "0x2000058")]
public class ResonanceAudioAcousticMesh
{
	[Token(Token = "0x40001DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C988", Offset = "0x84C988")]
	private Mesh <mesh>k__BackingField;

	[Token(Token = "0x40001DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84C998", Offset = "0x84C998")]
	private GameObject <sourceObject>k__BackingField;

	[Token(Token = "0x40001DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool isIncludedByObjectFiltering;

	[Token(Token = "0x40001DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ResonanceAudioRoomManager.SurfaceMaterial[] surfaceMaterialsFromSubMesh;

	[Token(Token = "0x40001E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RangeInt[] triangleRangesFromSubMesh;

	[Token(Token = "0x40001E1")]
	private const int unityMaxNumVerticesPerMesh = 65000;

	[Token(Token = "0x40001E2")]
	private const int maxNumSubMeshes = 256;

	[Token(Token = "0x40001E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Material visualizationMaterial;

	[Token(Token = "0x17000023")]
	public Mesh mesh
	{
		[Token(Token = "0x600022B")]
		[Address(RVA = "0xDD12E8", Offset = "0xDD12E8", VA = "0xDD12E8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855C9C", Offset = "0x855C9C")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022C")]
		[Address(RVA = "0xDD12F0", Offset = "0xDD12F0", VA = "0xDD12F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855CAC", Offset = "0x855CAC")]
		private set
		{
		}
	}

	[Token(Token = "0x17000024")]
	public GameObject sourceObject
	{
		[Token(Token = "0x600022D")]
		[Address(RVA = "0xDD12F8", Offset = "0xDD12F8", VA = "0xDD12F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855CBC", Offset = "0x855CBC")]
		get
		{
			return null;
		}
		[Token(Token = "0x600022E")]
		[Address(RVA = "0xDD1300", Offset = "0xDD1300", VA = "0xDD1300")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855CCC", Offset = "0x855CCC")]
		private set
		{
		}
	}

	[Token(Token = "0x600022F")]
	[Address(RVA = "0xDD1308", Offset = "0xDD1308", VA = "0xDD1308")]
	public static ResonanceAudioAcousticMesh GenerateFromMeshFilter(MeshFilter meshFilter, Shader surfaceMaterialShader)
	{
		return null;
	}

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xDD1C84", Offset = "0xDD1C84", VA = "0xDD1C84")]
	public static ResonanceAudioAcousticMesh GenerateFromTerrain(Terrain terrain, Shader surfaceMaterialShader)
	{
		return null;
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xDD22A4", Offset = "0xDD22A4", VA = "0xDD22A4")]
	public int[] GetSurfaceMaterialIndicesFromTriangle()
	{
		return null;
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xDD23F8", Offset = "0xDD23F8", VA = "0xDD23F8")]
	public void SetSurfaceMaterialToAllSubMeshes(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial)
	{
	}

	[Token(Token = "0x6000233")]
	[Address(RVA = "0xDD2560", Offset = "0xDD2560", VA = "0xDD2560")]
	public void SetSurfaceMaterialToSubMesh(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, int subMeshIndex)
	{
	}

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xDD2824", Offset = "0xDD2824", VA = "0xDD2824")]
	public bool Render()
	{
		return default(bool);
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xDD293C", Offset = "0xDD293C", VA = "0xDD293C")]
	public bool IsIncluded()
	{
		return default(bool);
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xDD2A14", Offset = "0xDD2A14", VA = "0xDD2A14")]
	public bool IsSubMeshTriangular(int subMeshIndex)
	{
		return default(bool);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xDD1550", Offset = "0xDD1550", VA = "0xDD1550")]
	private static int CountTriangleIndices(Mesh sourceMesh)
	{
		return default(int);
	}

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xDD1EF4", Offset = "0xDD1EF4", VA = "0xDD1EF4")]
	private static void SubSampleHeightMap(int originalM, int originalN, [Out] int m, [Out] int n, [Out] int subSampleStep, [Out] int subSampledNumTriangleIndices)
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xDD15E8", Offset = "0xDD15E8", VA = "0xDD15E8")]
	private void InitializeMesh(int numTriangleIndices, int numVertices, [Out] int[] triangles, [Out] Vector3[] vertices)
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xDD1AF0", Offset = "0xDD1AF0", VA = "0xDD1AF0")]
	private void InitializeSubMeshMaterials()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xDD1BB8", Offset = "0xDD1BB8", VA = "0xDD1BB8")]
	private void InitializeVisualizationMaterial(Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xDD1744", Offset = "0xDD1744", VA = "0xDD1744")]
	private void FillVerticesAndTrianglesFromMesh(Mesh sourceMesh, Transform sourceObjectTransform, Vector3[] vertices, int[] triangles)
	{
	}

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xDD1FA0", Offset = "0xDD1FA0", VA = "0xDD1FA0")]
	private void FillTrianglesAndVerticesFromHeightMap(Vector3 terrainPosition, Vector3 terrainSize, float[,] heightMap, int m, int n, int subSampleStep, int[] triangles, Vector3[] vertices)
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xDD2A58", Offset = "0xDD2A58", VA = "0xDD2A58")]
	private void SetSubMeshEnds()
	{
	}

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xDD244C", Offset = "0xDD244C", VA = "0xDD244C")]
	private void SetSubMeshSurfaceMaterials()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xDD15E0", Offset = "0xDD15E0", VA = "0xDD15E0")]
	public ResonanceAudioAcousticMesh()
	{
	}
}
[Token(Token = "0x2000059")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847488", Offset = "0x847488")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x847488", Offset = "0x847488")]
[ExecuteInEditMode]
public class ResonanceAudioListener : MonoBehaviour
{
	[Token(Token = "0x40001E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C9A8", Offset = "0x84C9A8")]
	public float globalGainDb;

	[Token(Token = "0x40001E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84C9E0", Offset = "0x84C9E0")]
	public LayerMask occlusionMask;

	[Token(Token = "0x40001E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CA18", Offset = "0x84CA18")]
	public bool stereoSpeakerModeEnabled;

	[Token(Token = "0x40001E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CA50", Offset = "0x84CA50")]
	public bool recorderSeamless;

	[Token(Token = "0x40001E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CA88", Offset = "0x84CA88")]
	public string recorderSourceTag;

	[Token(Token = "0x40001E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84CAC0", Offset = "0x84CAC0")]
	private bool <IsRecording>k__BackingField;

	[Token(Token = "0x40001EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	[SerializeField]
	private bool recorderFoldout;

	[Token(Token = "0x40001EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<AudioSource> recorderTaggedSources;

	[Token(Token = "0x40001EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private double recorderStartTime;

	[Token(Token = "0x17000025")]
	public bool IsRecording
	{
		[Token(Token = "0x6000241")]
		[Address(RVA = "0xDD31C8", Offset = "0xDD31C8", VA = "0xDD31C8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855CDC", Offset = "0x855CDC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000242")]
		[Address(RVA = "0xDD31D0", Offset = "0xDD31D0", VA = "0xDD31D0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855CEC", Offset = "0x855CEC")]
		private set
		{
		}
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xDD31DC", Offset = "0xDD31DC", VA = "0xDD31DC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xDD3280", Offset = "0xDD3280", VA = "0xDD3280")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xDD34F4", Offset = "0xDD34F4", VA = "0xDD34F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xDD3734", Offset = "0xDD3734", VA = "0xDD3734")]
	public double GetCurrentRecordDuration()
	{
		return default(double);
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xDD3770", Offset = "0xDD3770", VA = "0xDD3770")]
	public void StartSoundfieldRecorder()
	{
	}

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xDD332C", Offset = "0xDD332C", VA = "0xDD332C")]
	public void StopSoundfieldRecorder(string filePath)
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xDD3584", Offset = "0xDD3584", VA = "0xDD3584")]
	private void UpdateTaggedSources()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xDD39EC", Offset = "0xDD39EC", VA = "0xDD39EC")]
	public ResonanceAudioListener()
	{
	}
}
[Token(Token = "0x200005A")]
[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x847524", Offset = "0x847524")]
public class ResonanceAudioMaterialMap : ScriptableObject
{
	[Token(Token = "0x40001ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static readonly Color[] surfaceMaterialColors;

	[Token(Token = "0x40001EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ResonanceAudioRoomManager.SurfaceMaterialDictionary surfaceMaterialFromGuid;

	[Token(Token = "0x40001EF")]
	private const ResonanceAudioRoomManager.SurfaceMaterial defaultSurfaceMaterial = ResonanceAudioRoomManager.SurfaceMaterial.Transparent;

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xDD3A60", Offset = "0xDD3A60", VA = "0xDD3A60")]
	public List<string> GuidList()
	{
		return null;
	}

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xDD3AD0", Offset = "0xDD3AD0", VA = "0xDD3AD0")]
	public ResonanceAudioRoomManager.SurfaceMaterial GetMaterialFromGuid(string guid)
	{
		return default(ResonanceAudioRoomManager.SurfaceMaterial);
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xDD3B34", Offset = "0xDD3B34", VA = "0xDD3B34")]
	public void AddDefaultMaterialIfGuidUnmapped(string guid)
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xDD3BD8", Offset = "0xDD3BD8", VA = "0xDD3BD8")]
	public ResonanceAudioMaterialMap()
	{
	}
}
[Token(Token = "0x200005B")]
public class ResonanceAudioMaterialMapper : ScriptableObject
{
	[Token(Token = "0x20003DB")]
	private class UnityMaterialAcousticMeshData
	{
		[Token(Token = "0x4001E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ResonanceAudioAcousticMesh> acousticMeshes;

		[Token(Token = "0x4001E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> subMeshIndices;

		[Token(Token = "0x6001A71")]
		[Address(RVA = "0x19E1B1C", Offset = "0x19E1B1C", VA = "0x19E1B1C")]
		public UnityMaterialAcousticMeshData()
		{
		}
	}

	[Token(Token = "0x20003DC")]
	private class TerrainAcousticMeshData
	{
		[Token(Token = "0x4001E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<ResonanceAudioAcousticMesh> acousticMeshes;

		[Token(Token = "0x6001A72")]
		[Address(RVA = "0x19E1A90", Offset = "0x19E1A90", VA = "0x19E1A90")]
		public TerrainAcousticMeshData()
		{
		}
	}

	[Token(Token = "0x40001F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private ResonanceAudioMaterialMap materialMap;

	[Token(Token = "0x40001F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Dictionary<string, UnityMaterialAcousticMeshData> unityMaterialAcousticMeshDataFromGuid;

	[Token(Token = "0x40001F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Dictionary<string, TerrainAcousticMeshData> terrainAcousticMeshDataFromGuid;

	[Token(Token = "0x40001F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private LayerMask reverbLayerMask;

	[Token(Token = "0x40001F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool includeNonStaticGameObjects;

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xDD41E8", Offset = "0xDD41E8", VA = "0xDD41E8")]
	public void Initialize()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xDD42BC", Offset = "0xDD42BC", VA = "0xDD42BC")]
	public void ApplyMaterialMapping(MeshRenderer[] meshRenderers, List<string>[] guidsForMeshRenderers, Terrain[] activeTerrains, string[] guidsForTerrains, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xDD4BF8", Offset = "0xDD4BF8", VA = "0xDD4BF8")]
	public void RenderAcousticMeshes()
	{
	}

	[Token(Token = "0x6000253")]
	[Address(RVA = "0xDD4C98", Offset = "0xDD4C98", VA = "0xDD4C98")]
	public List<ResonanceAudioAcousticMesh> GetIncludedAcousticMeshes()
	{
		return null;
	}

	[Token(Token = "0x6000254")]
	[Address(RVA = "0xDD4328", Offset = "0xDD4328", VA = "0xDD4328")]
	private void BuildUnityMaterialData(MeshRenderer[] meshRenderers, List<string>[] guidsForMeshRenderers, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xDD464C", Offset = "0xDD464C", VA = "0xDD464C")]
	private void BuildTerrainData(Terrain[] activeTerrains, string[] guidsForTerrains, Shader surfaceMaterialShader)
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xDD4868", Offset = "0xDD4868", VA = "0xDD4868")]
	private void ApplyMaterialMappingToGuids(List<string> guids)
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xDD50A0", Offset = "0xDD50A0", VA = "0xDD50A0")]
	private void ApplySurfaceMaterialToGameObjects(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, string guid)
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xDD5430", Offset = "0xDD5430", VA = "0xDD5430")]
	private void ApplySurfaceMaterialToTerrains(ResonanceAudioRoomManager.SurfaceMaterial surfaceMaterial, string guid)
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xDD49A4", Offset = "0xDD49A4", VA = "0xDD49A4")]
	private void ApplyObjectFiltering()
	{
	}

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xDD5528", Offset = "0xDD5528", VA = "0xDD5528")]
	private bool IsIncludedByObjectFiltering(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xDD55B0", Offset = "0xDD55B0", VA = "0xDD55B0")]
	public ResonanceAudioMaterialMapper()
	{
	}
}
[Token(Token = "0x200005C")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847590", Offset = "0x847590")]
[ExecuteInEditMode]
public class ResonanceAudioMaterialMapperUpdater : MonoBehaviour
{
	[Token(Token = "0x20003DD")]
	public delegate void RefreshMaterialMapperDelegate();

	[Token(Token = "0x40001F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RefreshMaterialMapperDelegate RefreshMaterialMapper;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xDD55EC", Offset = "0xDD55EC", VA = "0xDD55EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xDD5638", Offset = "0xDD5638", VA = "0xDD5638")]
	public ResonanceAudioMaterialMapperUpdater()
	{
	}
}
[Token(Token = "0x200005D")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8475DC", Offset = "0x8475DC")]
[ExecuteInEditMode]
public class ResonanceAudioReverbProbe : MonoBehaviour
{
	[Token(Token = "0x20003DE")]
	public enum RegionShape
	{
		[Token(Token = "0x4001E8F")]
		Sphere,
		[Token(Token = "0x4001E90")]
		Box
	}

	[Token(Token = "0x40001F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CB20", Offset = "0x84CB20")]
	public float[] rt60s;

	[Token(Token = "0x40001F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CB58", Offset = "0x84CB58")]
	public float reverbGainDb;

	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CB90", Offset = "0x84CB90")]
	public float reverbBrightness;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CBC8", Offset = "0x84CBC8")]
	public float reverbTime;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CC00", Offset = "0x84CC00")]
	public RegionShape regionShape;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CC38", Offset = "0x84CC38")]
	public Vector3 boxRegionSize;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CC70", Offset = "0x84CC70")]
	public float sphereRegionRadius;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CCA8", Offset = "0x84CCA8")]
	public bool onlyApplyWhenVisible;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 proxyRoomPosition;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Quaternion proxyRoomRotation;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Vector3 proxyRoomSize;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomLeftWall;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomRightWall;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomFloor;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomCeiling;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomBackWall;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public ResonanceAudioRoomManager.SurfaceMaterial proxyRoomFrontWall;

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xDD5640", Offset = "0xDD5640", VA = "0xDD5640")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xDD5720", Offset = "0xDD5720", VA = "0xDD5720")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xDD57F8", Offset = "0xDD57F8", VA = "0xDD57F8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xDD5860", Offset = "0xDD5860", VA = "0xDD5860")]
	public float GetScaledSphericalRegionRadius()
	{
		return default(float);
	}

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xDD58BC", Offset = "0xDD58BC", VA = "0xDD58BC")]
	public Vector3 GetScaledBoxRegionSize()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xDD5904", Offset = "0xDD5904", VA = "0xDD5904")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xDD5A0C", Offset = "0xDD5A0C", VA = "0xDD5A0C")]
	public ResonanceAudioReverbProbe()
	{
	}
}
[Token(Token = "0x200005E")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847628", Offset = "0x847628")]
public class ResonanceAudioRoom : MonoBehaviour
{
	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CCE0", Offset = "0x84CCE0")]
	public ResonanceAudioRoomManager.SurfaceMaterial leftWall;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CD18", Offset = "0x84CD18")]
	public ResonanceAudioRoomManager.SurfaceMaterial rightWall;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CD50", Offset = "0x84CD50")]
	public ResonanceAudioRoomManager.SurfaceMaterial floor;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CD88", Offset = "0x84CD88")]
	public ResonanceAudioRoomManager.SurfaceMaterial ceiling;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CDC0", Offset = "0x84CDC0")]
	public ResonanceAudioRoomManager.SurfaceMaterial backWall;

	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CDF8", Offset = "0x84CDF8")]
	public ResonanceAudioRoomManager.SurfaceMaterial frontWall;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CE30", Offset = "0x84CE30")]
	public float reflectivity;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CE68", Offset = "0x84CE68")]
	public float reverbGainDb;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CEA0", Offset = "0x84CEA0")]
	public float reverbBrightness;

	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CED8", Offset = "0x84CED8")]
	public float reverbTime;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CF10", Offset = "0x84CF10")]
	public Vector3 size;

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xDD5AD8", Offset = "0xDD5AD8", VA = "0xDD5AD8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xDD5BB8", Offset = "0xDD5BB8", VA = "0xDD5BB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xDD5C90", Offset = "0xDD5C90", VA = "0xDD5C90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xDD5CF8", Offset = "0xDD5CF8", VA = "0xDD5CF8")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xDD5D88", Offset = "0xDD5D88", VA = "0xDD5D88")]
	public ResonanceAudioRoom()
	{
	}
}
[Token(Token = "0x200005F")]
public static class ResonanceAudioRoomManager
{
	[Token(Token = "0x20003DF")]
	public enum SurfaceMaterial
	{
		[Token(Token = "0x4001E92")]
		Transparent,
		[Token(Token = "0x4001E93")]
		AcousticCeilingTiles,
		[Token(Token = "0x4001E94")]
		BrickBare,
		[Token(Token = "0x4001E95")]
		BrickPainted,
		[Token(Token = "0x4001E96")]
		ConcreteBlockCoarse,
		[Token(Token = "0x4001E97")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001E98")]
		CurtainHeavy,
		[Token(Token = "0x4001E99")]
		FiberglassInsulation,
		[Token(Token = "0x4001E9A")]
		GlassThin,
		[Token(Token = "0x4001E9B")]
		GlassThick,
		[Token(Token = "0x4001E9C")]
		Grass,
		[Token(Token = "0x4001E9D")]
		LinoleumOnConcrete,
		[Token(Token = "0x4001E9E")]
		Marble,
		[Token(Token = "0x4001E9F")]
		Metal,
		[Token(Token = "0x4001EA0")]
		ParquetOnConcrete,
		[Token(Token = "0x4001EA1")]
		PlasterRough,
		[Token(Token = "0x4001EA2")]
		PlasterSmooth,
		[Token(Token = "0x4001EA3")]
		PlywoodPanel,
		[Token(Token = "0x4001EA4")]
		PolishedConcreteOrTile,
		[Token(Token = "0x4001EA5")]
		Sheetrock,
		[Token(Token = "0x4001EA6")]
		WaterOrIceSurface,
		[Token(Token = "0x4001EA7")]
		WoodCeiling,
		[Token(Token = "0x4001EA8")]
		WoodPanel
	}

	[Serializable]
	[Token(Token = "0x20003E0")]
	public class SurfaceMaterialDictionary : Dictionary<string, SurfaceMaterial>, ISerializationCallbackReceiver
	{
		[Token(Token = "0x4001EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private List<string> guids;

		[Token(Token = "0x4001EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<SurfaceMaterial> surfaceMaterials;

		[Token(Token = "0x6001A77")]
		[Address(RVA = "0x19E1D24", Offset = "0x19E1D24", VA = "0x19E1D24")]
		public SurfaceMaterialDictionary()
		{
		}

		[Token(Token = "0x6001A78")]
		[Address(RVA = "0x19E1E20", Offset = "0x19E1E20", VA = "0x19E1E20", Slot = "46")]
		public void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001A79")]
		[Address(RVA = "0x19E1FEC", Offset = "0x19E1FEC", VA = "0x19E1FEC", Slot = "47")]
		public void OnAfterDeserialize()
		{
		}
	}

	[Token(Token = "0x20003E1")]
	private struct RoomEffectsRegion
	{
		[Token(Token = "0x4001EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ResonanceAudioRoom room;

		[Token(Token = "0x4001EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ResonanceAudioReverbProbe reverbProbe;

		[Token(Token = "0x6001A7A")]
		[Address(RVA = "0x19E1CF0", Offset = "0x19E1CF0", VA = "0x19E1CF0")]
		public RoomEffectsRegion(ResonanceAudioRoom room, ResonanceAudioReverbProbe reverbProbe)
		{
		}
	}

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static List<RoomEffectsRegion> roomEffectsRegions;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static Bounds bounds;

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xDD5DDC", Offset = "0xDD5DDC", VA = "0xDD5DDC")]
	public static float ComputeRoomEffectsGain(Vector3 sourcePosition)
	{
		return default(float);
	}

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xDD5B40", Offset = "0xDD5B40", VA = "0xDD5B40")]
	public static void UpdateRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xDD5C20", Offset = "0xDD5C20", VA = "0xDD5C20")]
	public static void RemoveRoom(ResonanceAudioRoom room)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xDD56A8", Offset = "0xDD56A8", VA = "0xDD56A8")]
	public static void UpdateReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xDD5788", Offset = "0xDD5788", VA = "0xDD5788")]
	public static void RemoveReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xDD6394", Offset = "0xDD6394", VA = "0xDD6394")]
	private static void UpdateRoomEffectsRegions(ResonanceAudioRoom room, bool isEnabled)
	{
	}

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xDD69C8", Offset = "0xDD69C8", VA = "0xDD69C8")]
	private static void UpdateRoomEffectsRegions(ResonanceAudioReverbProbe reverbProbe, bool isEnabled)
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xDD65CC", Offset = "0xDD65CC", VA = "0xDD65CC")]
	private static void UpdateRoomEffects()
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xDD6158", Offset = "0xDD6158", VA = "0xDD6158")]
	private static float ComputeRoomEffectsAttenuation(float distanceToRoom)
	{
		return default(float);
	}

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xDD616C", Offset = "0xDD616C", VA = "0xDD616C")]
	private static bool IsListenerInsideRoom(ResonanceAudioRoom room)
	{
		return default(bool);
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xDD6768", Offset = "0xDD6768", VA = "0xDD6768")]
	private static bool IsListenerInsideVisibleReverbProbe(ResonanceAudioReverbProbe reverbProbe)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000060")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847660", Offset = "0x847660")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x847660", Offset = "0x847660")]
[ExecuteInEditMode]
public class ResonanceAudioSource : MonoBehaviour
{
	[Token(Token = "0x20003E2")]
	public enum Quality
	{
		[Token(Token = "0x4001EAE")]
		Stereo,
		[Token(Token = "0x4001EAF")]
		Low,
		[Token(Token = "0x4001EB0")]
		High
	}

	[Token(Token = "0x20003E3")]
	private enum EffectData
	{
		[Token(Token = "0x4001EB2")]
		Id,
		[Token(Token = "0x4001EB3")]
		DistanceAttenuation,
		[Token(Token = "0x4001EB4")]
		RoomEffectsGain,
		[Token(Token = "0x4001EB5")]
		Gain,
		[Token(Token = "0x4001EB6")]
		DirectivityAlpha,
		[Token(Token = "0x4001EB7")]
		DirectivitySharpness,
		[Token(Token = "0x4001EB8")]
		ListenerDirectivityAlpha,
		[Token(Token = "0x4001EB9")]
		ListenerDirectivitySharpness,
		[Token(Token = "0x4001EBA")]
		Occlusion,
		[Token(Token = "0x4001EBB")]
		Quality,
		[Token(Token = "0x4001EBC")]
		NearFieldEffectGain,
		[Token(Token = "0x4001EBD")]
		Volume
	}

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CF48", Offset = "0x84CF48")]
	public bool bypassRoomEffects;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84CF80", Offset = "0x84CF80")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CF80", Offset = "0x84CF80")]
	public float directivityAlpha;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84CFD4", Offset = "0x84CFD4")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84CFD4", Offset = "0x84CFD4")]
	public float directivitySharpness;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84D028", Offset = "0x84D028")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D028", Offset = "0x84D028")]
	public float listenerDirectivityAlpha;

	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84D07C", Offset = "0x84D07C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D07C", Offset = "0x84D07C")]
	public float listenerDirectivitySharpness;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D0D0", Offset = "0x84D0D0")]
	public float gainDb;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D108", Offset = "0x84D108")]
	public bool nearFieldEffectEnabled;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84D140", Offset = "0x84D140")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D140", Offset = "0x84D140")]
	public float nearFieldEffectGain;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D194", Offset = "0x84D194")]
	public bool occlusionEnabled;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84D1CC", Offset = "0x84D1CC")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D1CC", Offset = "0x84D1CC")]
	public float occlusionIntensity;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D220", Offset = "0x84D220")]
	public Quality quality;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84D258", Offset = "0x84D258")]
	private AudioSource <audioSource>k__BackingField;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float currentOcclusion;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float nextOcclusionUpdate;

	[Token(Token = "0x17000026")]
	public AudioSource audioSource
	{
		[Token(Token = "0x6000276")]
		[Address(RVA = "0xDD6D10", Offset = "0xDD6D10", VA = "0xDD6D10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855CFC", Offset = "0x855CFC")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000277")]
		[Address(RVA = "0xDD6D18", Offset = "0xDD6D18", VA = "0xDD6D18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x855D0C", Offset = "0x855D0C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xDD6D20", Offset = "0xDD6D20", VA = "0xDD6D20")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xDD6D84", Offset = "0xDD6D84", VA = "0xDD6D84")]
	private void Update()
	{
	}

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xDD6E50", Offset = "0xDD6E50", VA = "0xDD6E50")]
	private void UpdateSource()
	{
	}

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xDD71A4", Offset = "0xDD71A4", VA = "0xDD71A4")]
	public ResonanceAudioSource()
	{
	}
}
[Token(Token = "0x2000061")]
public class Skeleton : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public PuppetMaster puppetMaster;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ConfigurableJoint[] leftLeg;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigurableJoint[] rightLeg;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool leftLegRemoved;

	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool rightLegRemoved;

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xDDACAC", Offset = "0xDDACAC", VA = "0xDDACAC")]
	private void Start()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xDDADDC", Offset = "0xDDADDC", VA = "0xDDADDC")]
	public void OnRebuild()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xDDAE70", Offset = "0xDDAE70", VA = "0xDDAE70")]
	private void OnMuscleDisconnected(Muscle m)
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xDDAF34", Offset = "0xDDAF34", VA = "0xDDAF34")]
	private bool IsLegMuscle(Muscle m, [Out] bool isLeft)
	{
		return default(bool);
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xDDB0B0", Offset = "0xDDB0B0", VA = "0xDDB0B0")]
	public Skeleton()
	{
	}
}
[Token(Token = "0x2000062")]
[AttributeAttribute(Name = "RequireComponent", RVA = "0x8476FC", Offset = "0x8476FC")]
public class CameraCapture : MonoBehaviour
{
	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int id;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool use_gameview_size;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int width;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int height;

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xDBEC24", Offset = "0xDBEC24", VA = "0xDBEC24")]
	public void TakeScreenshot()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xDBEFC8", Offset = "0xDBEFC8", VA = "0xDBEFC8")]
	private Texture2D Screenshot(Camera camera, int resWidth, int resHeight)
	{
		return null;
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xDBF158", Offset = "0xDBF158", VA = "0xDBF158")]
	private void Start()
	{
	}

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xDBF2A8", Offset = "0xDBF2A8", VA = "0xDBF2A8")]
	public CameraCapture()
	{
	}
}
[Token(Token = "0x2000063")]
public static class ExtDebug
{
	[Token(Token = "0x20003E4")]
	public struct Box
	{
		[Token(Token = "0x4001EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8542C0", Offset = "0x8542C0")]
		private Vector3 <localFrontTopLeft>k__BackingField;

		[Token(Token = "0x4001EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8542D0", Offset = "0x8542D0")]
		private Vector3 <localFrontTopRight>k__BackingField;

		[Token(Token = "0x4001EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8542E0", Offset = "0x8542E0")]
		private Vector3 <localFrontBottomLeft>k__BackingField;

		[Token(Token = "0x4001EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8542F0", Offset = "0x8542F0")]
		private Vector3 <localFrontBottomRight>k__BackingField;

		[Token(Token = "0x4001EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x854300", Offset = "0x854300")]
		private Vector3 <origin>k__BackingField;

		[Token(Token = "0x17000201")]
		public Vector3 localFrontTopLeft
		{
			[Token(Token = "0x6001A7B")]
			[Address(RVA = "0x19AFDB4", Offset = "0x19AFDB4", VA = "0x19AFDB4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85BECC", Offset = "0x85BECC")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A7C")]
			[Address(RVA = "0x19AFDC0", Offset = "0x19AFDC0", VA = "0x19AFDC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85BF04", Offset = "0x85BF04")]
			private set
			{
			}
		}

		[Token(Token = "0x17000202")]
		public Vector3 localFrontTopRight
		{
			[Token(Token = "0x6001A7D")]
			[Address(RVA = "0x19AFDCC", Offset = "0x19AFDCC", VA = "0x19AFDCC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85BF14", Offset = "0x85BF14")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A7E")]
			[Address(RVA = "0x19AFDD8", Offset = "0x19AFDD8", VA = "0x19AFDD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85BF4C", Offset = "0x85BF4C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000203")]
		public Vector3 localFrontBottomLeft
		{
			[Token(Token = "0x6001A7F")]
			[Address(RVA = "0x19AFDE4", Offset = "0x19AFDE4", VA = "0x19AFDE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85BF5C", Offset = "0x85BF5C")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A80")]
			[Address(RVA = "0x19AFDF0", Offset = "0x19AFDF0", VA = "0x19AFDF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85BF94", Offset = "0x85BF94")]
			private set
			{
			}
		}

		[Token(Token = "0x17000204")]
		public Vector3 localFrontBottomRight
		{
			[Token(Token = "0x6001A81")]
			[Address(RVA = "0x19AFDFC", Offset = "0x19AFDFC", VA = "0x19AFDFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85BFA4", Offset = "0x85BFA4")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A82")]
			[Address(RVA = "0x19AFE08", Offset = "0x19AFE08", VA = "0x19AFE08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85BFDC", Offset = "0x85BFDC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000205")]
		public Vector3 localBackTopLeft
		{
			[Token(Token = "0x6001A83")]
			[Address(RVA = "0x19AFE14", Offset = "0x19AFE14", VA = "0x19AFE14")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000206")]
		public Vector3 localBackTopRight
		{
			[Token(Token = "0x6001A84")]
			[Address(RVA = "0x19AFE2C", Offset = "0x19AFE2C", VA = "0x19AFE2C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000207")]
		public Vector3 localBackBottomLeft
		{
			[Token(Token = "0x6001A85")]
			[Address(RVA = "0x19AFE44", Offset = "0x19AFE44", VA = "0x19AFE44")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000208")]
		public Vector3 localBackBottomRight
		{
			[Token(Token = "0x6001A86")]
			[Address(RVA = "0x19AFE5C", Offset = "0x19AFE5C", VA = "0x19AFE5C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000209")]
		public Vector3 frontTopLeft
		{
			[Token(Token = "0x6001A87")]
			[Address(RVA = "0x19AFE74", Offset = "0x19AFE74", VA = "0x19AFE74")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700020A")]
		public Vector3 frontTopRight
		{
			[Token(Token = "0x6001A88")]
			[Address(RVA = "0x19AFE94", Offset = "0x19AFE94", VA = "0x19AFE94")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700020B")]
		public Vector3 frontBottomLeft
		{
			[Token(Token = "0x6001A89")]
			[Address(RVA = "0x19AFEB4", Offset = "0x19AFEB4", VA = "0x19AFEB4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700020C")]
		public Vector3 frontBottomRight
		{
			[Token(Token = "0x6001A8A")]
			[Address(RVA = "0x19AFED4", Offset = "0x19AFED4", VA = "0x19AFED4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700020D")]
		public Vector3 backTopLeft
		{
			[Token(Token = "0x6001A8B")]
			[Address(RVA = "0x19AFEF4", Offset = "0x19AFEF4", VA = "0x19AFEF4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700020E")]
		public Vector3 backTopRight
		{
			[Token(Token = "0x6001A8C")]
			[Address(RVA = "0x19AFF14", Offset = "0x19AFF14", VA = "0x19AFF14")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x1700020F")]
		public Vector3 backBottomLeft
		{
			[Token(Token = "0x6001A8D")]
			[Address(RVA = "0x19AFF34", Offset = "0x19AFF34", VA = "0x19AFF34")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000210")]
		public Vector3 backBottomRight
		{
			[Token(Token = "0x6001A8E")]
			[Address(RVA = "0x19AFF54", Offset = "0x19AFF54", VA = "0x19AFF54")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000211")]
		public Vector3 origin
		{
			[Token(Token = "0x6001A8F")]
			[Address(RVA = "0x19AFF74", Offset = "0x19AFF74", VA = "0x19AFF74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85BFEC", Offset = "0x85BFEC")]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001A90")]
			[Address(RVA = "0x19AFF80", Offset = "0x19AFF80", VA = "0x19AFF80")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C024", Offset = "0x85C024")]
			private set
			{
			}
		}

		[Token(Token = "0x6001A91")]
		[Address(RVA = "0x19AFF8C", Offset = "0x19AFF8C", VA = "0x19AFF8C")]
		public Box(Vector3 origin, Vector3 halfExtents, Quaternion orientation)
		{
		}

		[Token(Token = "0x6001A92")]
		[Address(RVA = "0x19AFFD4", Offset = "0x19AFFD4", VA = "0x19AFFD4")]
		public Box(Vector3 origin, Vector3 halfExtents)
		{
		}

		[Token(Token = "0x6001A93")]
		[Address(RVA = "0x19B0004", Offset = "0x19B0004", VA = "0x19B0004")]
		public void Rotate(Quaternion orientation)
		{
		}
	}

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xB9C51C", Offset = "0xB9C51C", VA = "0xB9C51C")]
	public static void DrawBoxCastOnHit(Vector3 origin, Vector3 halfExtents, Quaternion orientation, Vector3 direction, float hitInfoDistance, Color color)
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xB9C6C8", Offset = "0xB9C6C8", VA = "0xB9C6C8")]
	public static void DrawBoxCastBox(Vector3 origin, Vector3 halfExtents, Quaternion orientation, Vector3 direction, float distance, Color color)
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xB9C644", Offset = "0xB9C644", VA = "0xB9C644")]
	public static void DrawBox(Vector3 origin, Vector3 halfExtents, Quaternion orientation, Color color)
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xB9CB1C", Offset = "0xB9CB1C", VA = "0xB9CB1C")]
	public static void DrawBox(Box box, Color color)
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xB9C5E0", Offset = "0xB9C5E0", VA = "0xB9C5E0")]
	private static Vector3 CastCenterOnCollision(Vector3 origin, Vector3 direction, float hitInfoDistance)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xB9CF54", Offset = "0xB9CF54", VA = "0xB9CF54")]
	private static Vector3 RotatePointAroundPivot(Vector3 point, Vector3 pivot, Quaternion rotation)
	{
		return default(Vector3);
	}
}
[Token(Token = "0x2000064")]
public class MathParabola
{
	[Token(Token = "0x20003E5")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84955C", Offset = "0x84955C")]
	private sealed class <>c__DisplayClass0_0
	{
		[Token(Token = "0x4001EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float height;

		[Token(Token = "0x6001A94")]
		[Address(RVA = "0x19D65A8", Offset = "0x19D65A8", VA = "0x19D65A8")]
		public <>c__DisplayClass0_0()
		{
		}

		[Token(Token = "0x6001A95")]
		[Address(RVA = "0x19D65B0", Offset = "0x19D65B0", VA = "0x19D65B0")]
		internal float <Parabola>b__0(float x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x20003E6")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84956C", Offset = "0x84956C")]
	private sealed class <>c__DisplayClass1_0
	{
		[Token(Token = "0x4001EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float height;

		[Token(Token = "0x6001A96")]
		[Address(RVA = "0x19D65D8", Offset = "0x19D65D8", VA = "0x19D65D8")]
		public <>c__DisplayClass1_0()
		{
		}

		[Token(Token = "0x6001A97")]
		[Address(RVA = "0x19D65E0", Offset = "0x19D65E0", VA = "0x19D65E0")]
		internal float <Parabola>b__0(float x)
		{
			return default(float);
		}
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xCE8BC8", Offset = "0xCE8BC8", VA = "0xCE8BC8")]
	public static Vector3 Parabola(Vector3 start, Vector3 end, float height, float t)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xCE8D38", Offset = "0xCE8D38", VA = "0xCE8D38")]
	public static Vector2 Parabola(Vector2 start, Vector2 end, float height, float t)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xCE8E88", Offset = "0xCE8E88", VA = "0xCE8E88")]
	public MathParabola()
	{
	}
}
[Token(Token = "0x2000065")]
public class ParabolaController : MonoBehaviour
{
	[Token(Token = "0x20003E7")]
	public class ParabolaFly
	{
		[Serializable]
		[Token(Token = "0x200064D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B650", Offset = "0x84B650")]
		private sealed class <>c
		{
			[Token(Token = "0x40024F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40024F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Converter<Component, Transform> <>9__4_0;

			[Token(Token = "0x40024F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Transform> <>9__4_1;

			[Token(Token = "0x60023D9")]
			[Address(RVA = "0x192B9D8", Offset = "0x192B9D8", VA = "0x192B9D8")]
			public <>c()
			{
			}

			[Token(Token = "0x60023DA")]
			[Address(RVA = "0x192B9E0", Offset = "0x192B9E0", VA = "0x192B9E0")]
			internal Transform <.ctor>b__4_0(Component c)
			{
				return null;
			}

			[Token(Token = "0x60023DB")]
			[Address(RVA = "0x192BA60", Offset = "0x192BA60", VA = "0x192BA60")]
			internal int <.ctor>b__4_1(Transform a, Transform b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4001EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform[] Points;

		[Token(Token = "0x4001EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Parabola3D[] parabolas;

		[Token(Token = "0x4001EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected float[] partDuration;

		[Token(Token = "0x4001EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected float completeDuration;

		[Token(Token = "0x6001A98")]
		[Address(RVA = "0x19DE514", Offset = "0x19DE514", VA = "0x19DE514")]
		public ParabolaFly(Transform ParabolaRoot)
		{
		}

		[Token(Token = "0x6001A99")]
		[Address(RVA = "0x19DE960", Offset = "0x19DE960", VA = "0x19DE960")]
		public Vector3 GetPositionAtTime(float time)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A9A")]
		[Address(RVA = "0x19DEA78", Offset = "0x19DEA78", VA = "0x19DEA78")]
		public void GetParabolaIndexAtTime(float time, [Out] int parabolaIndex)
		{
		}

		[Token(Token = "0x6001A9B")]
		[Address(RVA = "0x19DE9F0", Offset = "0x19DE9F0", VA = "0x19DE9F0")]
		public void GetParabolaIndexAtTime(float time, [Out] int parabolaIndex, [Out] float timeInParabola)
		{
		}

		[Token(Token = "0x6001A9C")]
		[Address(RVA = "0x19DEA9C", Offset = "0x19DEA9C", VA = "0x19DEA9C")]
		public float GetDuration()
		{
			return default(float);
		}

		[Token(Token = "0x6001A9D")]
		[Address(RVA = "0x19DEAA4", Offset = "0x19DEAA4", VA = "0x19DEAA4")]
		public Vector3 getHighestPoint(int parabolaIndex)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001A9E")]
		[Address(RVA = "0x19DEAE4", Offset = "0x19DEAE4", VA = "0x19DEAE4")]
		public void RefreshTransforms(float speed)
		{
		}
	}

	[Token(Token = "0x20003E8")]
	public class Parabola3D
	{
		[Token(Token = "0x4001EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x854310", Offset = "0x854310")]
		private float <Length>k__BackingField;

		[Token(Token = "0x4001ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 A;

		[Token(Token = "0x4001ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 B;

		[Token(Token = "0x4001ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 C;

		[Token(Token = "0x4001ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected Parabola2D parabola2D;

		[Token(Token = "0x4001ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Vector3 h;

		[Token(Token = "0x4001ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		protected bool tooClose;

		[Token(Token = "0x17000212")]
		public float Length
		{
			[Token(Token = "0x6001A9F")]
			[Address(RVA = "0x19DDE6C", Offset = "0x19DDE6C", VA = "0x19DDE6C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C034", Offset = "0x85C034")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AA0")]
			[Address(RVA = "0x19DDE74", Offset = "0x19DDE74", VA = "0x19DDE74")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C044", Offset = "0x85C044")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AA1")]
		[Address(RVA = "0x19DDE7C", Offset = "0x19DDE7C", VA = "0x19DDE7C")]
		public Parabola3D()
		{
		}

		[Token(Token = "0x6001AA2")]
		[Address(RVA = "0x19DDE84", Offset = "0x19DDE84", VA = "0x19DDE84")]
		public Parabola3D(Vector3 A, Vector3 B, Vector3 C)
		{
		}

		[Token(Token = "0x6001AA3")]
		[Address(RVA = "0x19DDF0C", Offset = "0x19DDF0C", VA = "0x19DDF0C")]
		public void Set(Vector3 A, Vector3 B, Vector3 C)
		{
		}

		[Token(Token = "0x6001AA4")]
		[Address(RVA = "0x19DDFF4", Offset = "0x19DDFF4", VA = "0x19DDFF4")]
		public Vector3 getHighestPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AA5")]
		[Address(RVA = "0x19DE0F4", Offset = "0x19DE0F4", VA = "0x19DE0F4")]
		public Vector3 GetPositionAtLength(float length)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001AA6")]
		[Address(RVA = "0x19DDF2C", Offset = "0x19DDF2C", VA = "0x19DDF2C")]
		private void refreshCurve()
		{
		}

		[Token(Token = "0x6001AA7")]
		[Address(RVA = "0x19DE228", Offset = "0x19DE228", VA = "0x19DE228")]
		private void refreshCurveNormal()
		{
		}

		[Token(Token = "0x6001AA8")]
		[Address(RVA = "0x19DE3FC", Offset = "0x19DE3FC", VA = "0x19DE3FC")]
		private void refreshCurveClose()
		{
		}
	}

	[Token(Token = "0x20003E9")]
	public class Parabola2D
	{
		[Token(Token = "0x4001ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x854320", Offset = "0x854320")]
		private float <a>k__BackingField;

		[Token(Token = "0x4001ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x854330", Offset = "0x854330")]
		private float <b>k__BackingField;

		[Token(Token = "0x4001ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x854340", Offset = "0x854340")]
		private float <c>k__BackingField;

		[Token(Token = "0x4001ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x854350", Offset = "0x854350")]
		private Vector2 <E>k__BackingField;

		[Token(Token = "0x4001ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x854360", Offset = "0x854360")]
		private float <Length>k__BackingField;

		[Token(Token = "0x17000213")]
		public float a
		{
			[Token(Token = "0x6001AA9")]
			[Address(RVA = "0x19DDBE8", Offset = "0x19DDBE8", VA = "0x19DDBE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C054", Offset = "0x85C054")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AAA")]
			[Address(RVA = "0x19DDBF0", Offset = "0x19DDBF0", VA = "0x19DDBF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C064", Offset = "0x85C064")]
			private set
			{
			}
		}

		[Token(Token = "0x17000214")]
		public float b
		{
			[Token(Token = "0x6001AAB")]
			[Address(RVA = "0x19DDBF8", Offset = "0x19DDBF8", VA = "0x19DDBF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C074", Offset = "0x85C074")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AAC")]
			[Address(RVA = "0x19DDC00", Offset = "0x19DDC00", VA = "0x19DDC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C084", Offset = "0x85C084")]
			private set
			{
			}
		}

		[Token(Token = "0x17000215")]
		public float c
		{
			[Token(Token = "0x6001AAD")]
			[Address(RVA = "0x19DDC08", Offset = "0x19DDC08", VA = "0x19DDC08")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C094", Offset = "0x85C094")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AAE")]
			[Address(RVA = "0x19DDC10", Offset = "0x19DDC10", VA = "0x19DDC10")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C0A4", Offset = "0x85C0A4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000216")]
		public Vector2 E
		{
			[Token(Token = "0x6001AAF")]
			[Address(RVA = "0x19DDC18", Offset = "0x19DDC18", VA = "0x19DDC18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C0B4", Offset = "0x85C0B4")]
			get
			{
				return default(Vector2);
			}
			[Token(Token = "0x6001AB0")]
			[Address(RVA = "0x19DDC20", Offset = "0x19DDC20", VA = "0x19DDC20")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C0C4", Offset = "0x85C0C4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000217")]
		public float Length
		{
			[Token(Token = "0x6001AB1")]
			[Address(RVA = "0x19DDC28", Offset = "0x19DDC28", VA = "0x19DDC28")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C0D4", Offset = "0x85C0D4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001AB2")]
			[Address(RVA = "0x19DDC30", Offset = "0x19DDC30", VA = "0x19DDC30")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85C0E4", Offset = "0x85C0E4")]
			private set
			{
			}
		}

		[Token(Token = "0x6001AB3")]
		[Address(RVA = "0x19DDC38", Offset = "0x19DDC38", VA = "0x19DDC38")]
		public Parabola2D(float a, float b, float c, float length)
		{
		}

		[Token(Token = "0x6001AB4")]
		[Address(RVA = "0x19DDCD8", Offset = "0x19DDCD8", VA = "0x19DDCD8")]
		public Parabola2D(Vector2 A, Vector2 B, Vector2 C)
		{
		}

		[Token(Token = "0x6001AB5")]
		[Address(RVA = "0x19DDE4C", Offset = "0x19DDE4C", VA = "0x19DDE4C")]
		public float f(float x)
		{
			return default(float);
		}

		[Token(Token = "0x6001AB6")]
		[Address(RVA = "0x19DDCA8", Offset = "0x19DDCA8", VA = "0x19DDCA8")]
		private void setMetadata()
		{
		}
	}

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ParabolaRoot;

	[Token(Token = "0x400022E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Autostart;

	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Animation;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	internal bool nextParbola;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	protected float animationTime;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected ParabolaFly gizmo;

	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	protected ParabolaFly parabolaFly;

	[Token(Token = "0x600028E")]
	[Address(RVA = "0x1B65660", Offset = "0x1B65660", VA = "0x1B65660")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0x1B65868", Offset = "0x1B65868", VA = "0x1B65868")]
	private void Start()
	{
	}

	[Token(Token = "0x6000290")]
	[Address(RVA = "0x1B659E0", Offset = "0x1B659E0", VA = "0x1B659E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0x1B6594C", Offset = "0x1B6594C", VA = "0x1B6594C")]
	public void FollowParabola()
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0x1B65AD0", Offset = "0x1B65AD0", VA = "0x1B65AD0")]
	public Vector3 getHighestPoint(int parabolaIndex)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0x1B65AF0", Offset = "0x1B65AF0", VA = "0x1B65AF0")]
	public Transform[] getPoints()
	{
		return null;
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0x1B65B10", Offset = "0x1B65B10", VA = "0x1B65B10")]
	public Vector3 GetPositionAtTime(float time)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000295")]
	[Address(RVA = "0x1B65B30", Offset = "0x1B65B30", VA = "0x1B65B30")]
	public float GetDuration()
	{
		return default(float);
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0x1B65B50", Offset = "0x1B65B50", VA = "0x1B65B50")]
	public void StopFollow()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0x1B6592C", Offset = "0x1B6592C", VA = "0x1B6592C")]
	public void RefreshTransforms(float speed)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0x1B65B5C", Offset = "0x1B65B5C", VA = "0x1B65B5C")]
	public static float DistanceToLine(Ray ray, Vector3 point)
	{
		return default(float);
	}

	[Token(Token = "0x6000299")]
	[Address(RVA = "0x1B65BF8", Offset = "0x1B65BF8", VA = "0x1B65BF8")]
	public static Vector3 ClosestPointInLine(Ray ray, Vector3 point)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600029A")]
	[Address(RVA = "0x1B65CDC", Offset = "0x1B65CDC", VA = "0x1B65CDC")]
	public ParabolaController()
	{
	}
}
[Token(Token = "0x2000066")]
public struct safe_int
{
	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private int value;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private int offset;

	[Token(Token = "0x600029B")]
	[Address(RVA = "0x1005284", Offset = "0x1005284", VA = "0x1005284")]
	public safe_int(int value = 0)
	{
	}

	[Token(Token = "0x600029C")]
	[Address(RVA = "0x1005310", Offset = "0x1005310", VA = "0x1005310")]
	public static implicit operator safe_int(int v)
	{
		return default(safe_int);
	}

	[Token(Token = "0x600029D")]
	[Address(RVA = "0x100533C", Offset = "0x100533C", VA = "0x100533C")]
	public static explicit operator int(safe_int v)
	{
		return default(int);
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0x1005348", Offset = "0x1005348", VA = "0x1005348")]
	public int GetValue()
	{
		return default(int);
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0x1005354", Offset = "0x1005354", VA = "0x1005354")]
	public int GetValueInMemory()
	{
		return default(int);
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0x100535C", Offset = "0x100535C", VA = "0x100535C")]
	public int SetValue(int value)
	{
		return default(int);
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0x10053EC", Offset = "0x10053EC", VA = "0x10053EC")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0x10053F4", Offset = "0x10053F4", VA = "0x10053F4", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0x1005464", Offset = "0x1005464", VA = "0x1005464", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0x10054E8", Offset = "0x10054E8", VA = "0x10054E8", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0x1005518", Offset = "0x1005518", VA = "0x1005518")]
	public static safe_int operator +(safe_int v1, safe_int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0x1005554", Offset = "0x1005554", VA = "0x1005554")]
	public static safe_int operator +(safe_int v1, int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0x1005588", Offset = "0x1005588", VA = "0x1005588")]
	public static safe_int operator +(int v1, safe_int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0x10055BC", Offset = "0x10055BC", VA = "0x10055BC")]
	public static safe_int operator -(safe_int v1, safe_int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0x10055F8", Offset = "0x10055F8", VA = "0x10055F8")]
	public static safe_int operator -(safe_int v1, int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0x100562C", Offset = "0x100562C", VA = "0x100562C")]
	public static safe_int operator -(int v1, safe_int v2)
	{
		return default(safe_int);
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0x1005660", Offset = "0x1005660", VA = "0x1005660")]
	public static bool operator <(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0x1005674", Offset = "0x1005674", VA = "0x1005674")]
	public static bool operator >(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0x1005688", Offset = "0x1005688", VA = "0x1005688")]
	public static bool operator <=(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0x100569C", Offset = "0x100569C", VA = "0x100569C")]
	public static bool operator >=(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0x10056B0", Offset = "0x10056B0", VA = "0x10056B0")]
	public static bool operator ==(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0x10056C4", Offset = "0x10056C4", VA = "0x10056C4")]
	public static bool operator !=(safe_int v1, int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B1")]
	[Address(RVA = "0x10056D8", Offset = "0x10056D8", VA = "0x10056D8")]
	public static bool operator <(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B2")]
	[Address(RVA = "0x10056EC", Offset = "0x10056EC", VA = "0x10056EC")]
	public static bool operator >(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B3")]
	[Address(RVA = "0x1005700", Offset = "0x1005700", VA = "0x1005700")]
	public static bool operator <=(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0x1005714", Offset = "0x1005714", VA = "0x1005714")]
	public static bool operator >=(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B5")]
	[Address(RVA = "0x1005728", Offset = "0x1005728", VA = "0x1005728")]
	public static bool operator ==(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B6")]
	[Address(RVA = "0x100573C", Offset = "0x100573C", VA = "0x100573C")]
	public static bool operator !=(int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0x1005750", Offset = "0x1005750", VA = "0x1005750")]
	public static bool operator <(safe_int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0x100576C", Offset = "0x100576C", VA = "0x100576C")]
	public static bool operator >(safe_int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002B9")]
	[Address(RVA = "0x1005788", Offset = "0x1005788", VA = "0x1005788")]
	public static bool operator <=(safe_int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BA")]
	[Address(RVA = "0x10057A4", Offset = "0x10057A4", VA = "0x10057A4")]
	public static bool operator >=(safe_int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0x10057C0", Offset = "0x10057C0", VA = "0x10057C0")]
	public static bool operator ==(safe_int v1, safe_int v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0x10057DC", Offset = "0x10057DC", VA = "0x10057DC")]
	public static bool operator !=(safe_int v1, safe_int v2)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000067")]
public struct safe_string
{
	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private string value;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private string offset;

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0x10057F8", Offset = "0x10057F8", VA = "0x10057F8")]
	public safe_string(string value = "")
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0x10058C8", Offset = "0x10058C8", VA = "0x10058C8")]
	public static string encode(string plainText, string offset)
	{
		return null;
	}

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0x1005990", Offset = "0x1005990", VA = "0x1005990")]
	public static string decode(string base64EncodedData, string offset)
	{
		return null;
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0x1005B30", Offset = "0x1005B30", VA = "0x1005B30")]
	public static implicit operator safe_string(string v)
	{
		return default(safe_string);
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0x1005B5C", Offset = "0x1005B5C", VA = "0x1005B5C")]
	public static explicit operator string(safe_string v)
	{
		return null;
	}

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0x1005B60", Offset = "0x1005B60", VA = "0x1005B60")]
	public string GetValue()
	{
		return null;
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0x1005B6C", Offset = "0x1005B6C", VA = "0x1005B6C")]
	public string GetValueInMemory()
	{
		return null;
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0x1005B74", Offset = "0x1005B74", VA = "0x1005B74")]
	public string SetValue(string value)
	{
		return null;
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0x1005C50", Offset = "0x1005C50", VA = "0x1005C50")]
	public void Dispose()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0x1005CB8", Offset = "0x1005CB8", VA = "0x1005CB8", Slot = "2")]
	public override int GetHashCode()
	{
		return default(int);
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0x1005D30", Offset = "0x1005D30", VA = "0x1005D30", Slot = "0")]
	public override bool Equals(object obj)
	{
		return default(bool);
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0x1005DB4", Offset = "0x1005DB4", VA = "0x1005DB4", Slot = "3")]
	public override string ToString()
	{
		return null;
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0x1005DE0", Offset = "0x1005DE0", VA = "0x1005DE0")]
	public static safe_string operator +(safe_string v1, safe_string v2)
	{
		return default(safe_string);
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0x1005E48", Offset = "0x1005E48", VA = "0x1005E48")]
	public static safe_string operator +(safe_string v1, string v2)
	{
		return default(safe_string);
	}

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0x1005E90", Offset = "0x1005E90", VA = "0x1005E90")]
	public static safe_string operator +(string v1, safe_string v2)
	{
		return default(safe_string);
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0x1005EE4", Offset = "0x1005EE4", VA = "0x1005EE4")]
	public static bool operator ==(safe_string v1, string v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0x1005F0C", Offset = "0x1005F0C", VA = "0x1005F0C")]
	public static bool operator !=(safe_string v1, string v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0x1005F34", Offset = "0x1005F34", VA = "0x1005F34")]
	public static bool operator ==(string v1, safe_string v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0x1005F68", Offset = "0x1005F68", VA = "0x1005F68")]
	public static bool operator !=(string v1, safe_string v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0x1005F9C", Offset = "0x1005F9C", VA = "0x1005F9C")]
	public static bool operator ==(safe_string v1, safe_string v2)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0x1005FE4", Offset = "0x1005FE4", VA = "0x1005FE4")]
	public static bool operator !=(safe_string v1, safe_string v2)
	{
		return default(bool);
	}
}
[Token(Token = "0x2000068")]
public class PlayerPrefsSecure
{
	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static readonly string PRIVATE_KEY_PREFIX;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static readonly string PRIVATE_KEY_RAND;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private static readonly string PRIVATE_KEY_SUFFIX;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private static bool enabled;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private static string privateKey;

	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private static bool isInit;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private static readonly string RAND_KEY;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private static bool logErrorsEnabled;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private static Dictionary<string, string> cache;

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0x1B6A1DC", Offset = "0x1B6A1DC", VA = "0x1B6A1DC")]
	public static void Init()
	{
	}

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0x1B6A690", Offset = "0x1B6A690", VA = "0x1B6A690")]
	public static bool isInitialized()
	{
		return default(bool);
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0x1B6A6F4", Offset = "0x1B6A6F4", VA = "0x1B6A6F4")]
	public static bool Sync(string key, string val, string type)
	{
		return default(bool);
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0x1B6ADEC", Offset = "0x1B6ADEC", VA = "0x1B6ADEC")]
	public static Dictionary<string, string> GetMap()
	{
		return null;
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0x1B6B04C", Offset = "0x1B6B04C", VA = "0x1B6B04C")]
	private static void AddToMap(string key)
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0x1B6B1B8", Offset = "0x1B6B1B8", VA = "0x1B6B1B8")]
	private static void securePlayerPrefs(string[,] keynames, bool deleteOldKeys)
	{
	}

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0x1B6BF34", Offset = "0x1B6BF34", VA = "0x1B6BF34")]
	public static void setLogErrorsEnabled(bool state)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0x1B6A9A0", Offset = "0x1B6A9A0", VA = "0x1B6A9A0")]
	public static void SetString(string key, string val)
	{
	}

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0x1B6AC2C", Offset = "0x1B6AC2C", VA = "0x1B6AC2C")]
	public static void SetFloat(string key, float val)
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0x1B6A5D0", Offset = "0x1B6A5D0", VA = "0x1B6A5D0")]
	public static void SetInt(string key, int val)
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0x1B6AD5C", Offset = "0x1B6AD5C", VA = "0x1B6AD5C")]
	public static void SetBool(string key, bool val)
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0x1B6C620", Offset = "0x1B6C620", VA = "0x1B6C620")]
	public static string GetString(string key, string defaultValue)
	{
		return null;
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0x1B6A54C", Offset = "0x1B6A54C", VA = "0x1B6A54C")]
	public static string GetString(string key)
	{
		return null;
	}

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0x1B6CD4C", Offset = "0x1B6CD4C", VA = "0x1B6CD4C")]
	public static int GetInt(string key, int defaultValue)
	{
		return default(int);
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0x1B6AB4C", Offset = "0x1B6AB4C", VA = "0x1B6AB4C")]
	public static int GetInt(string key)
	{
		return default(int);
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0x1B6CFE4", Offset = "0x1B6CFE4", VA = "0x1B6CFE4")]
	public static float GetFloat(string key, float defaultValue)
	{
		return default(float);
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0x1B6ABBC", Offset = "0x1B6ABBC", VA = "0x1B6ABBC")]
	public static float GetFloat(string key)
	{
		return default(float);
	}

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0x1B6D284", Offset = "0x1B6D284", VA = "0x1B6D284")]
	public static bool GetBool(string key, bool defaultValue)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0x1B6ACEC", Offset = "0x1B6ACEC", VA = "0x1B6ACEC")]
	public static bool GetBool(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0x1B6D308", Offset = "0x1B6D308", VA = "0x1B6D308")]
	public static void DeleteKey(string key)
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0x1B6D40C", Offset = "0x1B6D40C", VA = "0x1B6D40C")]
	public static void DeleteAll()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0x1B6A4E0", Offset = "0x1B6A4E0", VA = "0x1B6A4E0")]
	public static bool HasKey(string key)
	{
		return default(bool);
	}

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0x1B6BED8", Offset = "0x1B6BED8", VA = "0x1B6BED8")]
	public static void Save()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0x1B6C900", Offset = "0x1B6C900", VA = "0x1B6C900")]
	private static string Decrypt(string encryptedString)
	{
		return null;
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0x1B6BFA8", Offset = "0x1B6BFA8", VA = "0x1B6BFA8")]
	private static string Encrypt(string plainText)
	{
		return null;
	}

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0x1B6A424", Offset = "0x1B6A424", VA = "0x1B6A424")]
	private static void wrapInit()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0x1B6C38C", Offset = "0x1B6C38C", VA = "0x1B6C38C")]
	private static void wrapSetString(string k, string v)
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0x1B6BC28", Offset = "0x1B6BC28", VA = "0x1B6BC28")]
	private static string wrapGetString(string k, string d = "")
	{
		return null;
	}

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0x1B6B5D4", Offset = "0x1B6B5D4", VA = "0x1B6B5D4")]
	private static int wrapGetInt(string k, int d = 0)
	{
		return default(int);
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0x1B6B980", Offset = "0x1B6B980", VA = "0x1B6B980")]
	private static float wrapGetFloat(string k, float d = 0f)
	{
		return default(float);
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0x1B6D558", Offset = "0x1B6D558", VA = "0x1B6D558")]
	private static bool wrapHasKey(string k)
	{
		return default(bool);
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0x1B6B87C", Offset = "0x1B6B87C", VA = "0x1B6B87C")]
	private static void wrapDeleteKey(string k)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0x1B6D498", Offset = "0x1B6D498", VA = "0x1B6D498")]
	private static void wrapDeleteAll()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0x1B6D664", Offset = "0x1B6D664", VA = "0x1B6D664")]
	private static void wrapSave()
	{
	}

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0x1B6D724", Offset = "0x1B6D724", VA = "0x1B6D724")]
	public PlayerPrefsSecure()
	{
	}
}
[Token(Token = "0x2000069")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847764", Offset = "0x847764")]
public class MouseLook : MonoBehaviour
{
	[Token(Token = "0x20003EA")]
	public enum RotationAxes
	{
		[Token(Token = "0x4001ED6")]
		MouseXAndY,
		[Token(Token = "0x4001ED7")]
		MouseX,
		[Token(Token = "0x4001ED8")]
		MouseY
	}

	[Token(Token = "0x4000241")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RotationAxes axes;

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sensitivityX;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensitivityY;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minimumX;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maximumX;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minimumY;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maximumY;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float rotationY;

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xCEEC34", Offset = "0xCEEC34", VA = "0xCEEC34")]
	private void Update()
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xCEEE08", Offset = "0xCEEE08", VA = "0xCEEE08")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xCEEED0", Offset = "0xCEEED0", VA = "0xCEEED0")]
	public MouseLook()
	{
	}
}
[Token(Token = "0x200006A")]
public struct ReflectionSnapshot
{
	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400024A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public float fadeTime;
}
[Token(Token = "0x200006B")]
public class ONSPReflectionZone : MonoBehaviour
{
	[Token(Token = "0x400024B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioMixerSnapshot mixerSnapshot;

	[Token(Token = "0x400024C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float fadeTime;

	[Token(Token = "0x400024D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static Stack<ReflectionSnapshot> snapshotList;

	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static ReflectionSnapshot currentSnapshot;

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0x1574674", Offset = "0x1574674", VA = "0x1574674")]
	private void Start()
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0x1574678", Offset = "0x1574678", VA = "0x1574678")]
	private void Update()
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0x157467C", Offset = "0x157467C", VA = "0x157467C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0x15747FC", Offset = "0x15747FC", VA = "0x15747FC")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0x15746C8", Offset = "0x15746C8", VA = "0x15746C8")]
	private bool CheckForAudioListener(GameObject gameObject)
	{
		return default(bool);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0x1574760", Offset = "0x1574760", VA = "0x1574760")]
	private void PushCurrentMixerShapshot()
	{
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0x1574848", Offset = "0x1574848", VA = "0x1574848")]
	private void PopCurrentMixerSnapshot()
	{
	}

	[Token(Token = "0x6000300")]
	[Address(RVA = "0x15748E8", Offset = "0x15748E8", VA = "0x15748E8")]
	private void SetReflectionValues()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0x1574A88", Offset = "0x1574A88", VA = "0x1574A88")]
	private void SetReflectionValues(ReflectionSnapshot mss)
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0x1574C28", Offset = "0x1574C28", VA = "0x1574C28")]
	public ONSPReflectionZone()
	{
	}
}
[Token(Token = "0x200006C")]
public class OculusSpatializerUnity : MonoBehaviour
{
	[Token(Token = "0x20003EB")]
	public delegate void AudioRaycastCallback(Vector3 origin, Vector3 direction, [Out] Vector3 point, [Out] Vector3 normal, IntPtr data);

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool visualizeRoom;

	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	private bool roomVisualizationInitialized;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int raysPerSecond;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float roomInterpSpeed;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxWallDistance;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int rayCacheSize;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool dynamicReflectionsEnabled;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float particleSize;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float particleOffset;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject room;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] wallRenderer;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float[] dims;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float[] coefs;

	[Token(Token = "0x400025D")]
	private const int HIT_COUNT = 2048;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3[] points;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3[] normals;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private ParticleSystem sys;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private ParticleSystem.Particle[] particles;

	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static LayerMask gLayerMask;

	[Token(Token = "0x4000263")]
	private const string strOSP = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000304")]
	[Address(RVA = "0x1B5FC20", Offset = "0x1B5FC20", VA = "0x1B5FC20")]
	private static Vector3 swapHandedness(Vector3 vec)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0x1B5FAB4", Offset = "0x1B5FAB4", VA = "0x1B5FAB4")]
	[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x855D1C", Offset = "0x855D1C")]
	private static void AudioRaycast(Vector3 origin, Vector3 direction, [Out] Vector3 point, [Out] Vector3 normal, IntPtr data)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0x1B5FC28", Offset = "0x1B5FC28", VA = "0x1B5FC28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0x1B5FD74", Offset = "0x1B5FD74", VA = "0x1B5FD74")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0x1B5FE70", Offset = "0x1B5FE70", VA = "0x1B5FE70")]
	private void Update()
	{
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0x1B60770", Offset = "0x1B60770", VA = "0x1B60770")]
	private void inititalizeRoomVisualization()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600030A")]
	[Address(RVA = "0x1B5FCE0", Offset = "0x1B5FCE0", VA = "0x1B5FCE0")]
	private static extern int OSP_Unity_AssignRaycastCallback(AudioRaycastCallback callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600030B")]
	[Address(RVA = "0x1B5FDE0", Offset = "0x1B5FDE0", VA = "0x1B5FDE0")]
	private static extern int OSP_Unity_AssignRaycastCallback(IntPtr callback, IntPtr data);

	[PreserveSig]
	[Token(Token = "0x600030C")]
	[Address(RVA = "0x1B604D8", Offset = "0x1B604D8", VA = "0x1B604D8")]
	private static extern int OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond);

	[PreserveSig]
	[Token(Token = "0x600030D")]
	[Address(RVA = "0x1B60558", Offset = "0x1B60558", VA = "0x1B60558")]
	private static extern int OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed);

	[PreserveSig]
	[Token(Token = "0x600030E")]
	[Address(RVA = "0x1B605E0", Offset = "0x1B605E0", VA = "0x1B605E0")]
	private static extern int OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance);

	[PreserveSig]
	[Token(Token = "0x600030F")]
	[Address(RVA = "0x1B60668", Offset = "0x1B60668", VA = "0x1B60668")]
	private static extern int OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize);

	[PreserveSig]
	[Token(Token = "0x6000310")]
	[Address(RVA = "0x1B606E8", Offset = "0x1B606E8", VA = "0x1B606E8")]
	private static extern int OSP_Unity_UpdateRoomModel(float wetLevel);

	[PreserveSig]
	[Token(Token = "0x6000311")]
	[Address(RVA = "0x1B61464", Offset = "0x1B61464", VA = "0x1B61464")]
	private static extern int OSP_Unity_GetRoomDimensions(float[] roomDimensions, float[] reflectionsCoefs, [Out] Vector3 position);

	[PreserveSig]
	[Token(Token = "0x6000312")]
	[Address(RVA = "0x1B6150C", Offset = "0x1B6150C", VA = "0x1B6150C")]
	private static extern int OSP_Unity_GetRaycastHits(Vector3[] points, Vector3[] normals, int length);

	[Token(Token = "0x6000313")]
	[Address(RVA = "0x1B615B4", Offset = "0x1B615B4", VA = "0x1B615B4")]
	public OculusSpatializerUnity()
	{
	}
}
[Token(Token = "0x200006D")]
public class ONSPAmbisonicsNative : MonoBehaviour
{
	[Token(Token = "0x20003EC")]
	public enum ovrAmbisonicsNativeStatus
	{
		[Token(Token = "0x4001EDA")]
		Uninitialized = -1,
		[Token(Token = "0x4001EDB")]
		NotEnabled,
		[Token(Token = "0x4001EDC")]
		Success,
		[Token(Token = "0x4001EDD")]
		StreamError,
		[Token(Token = "0x4001EDE")]
		ProcessError,
		[Token(Token = "0x4001EDF")]
		MaxStatValue
	}

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static int numFOAChannels;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	private static int paramVSpeakerMode;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static int paramAmbiStat;

	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ovrAmbisonicsNativeStatus currentStatus;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private bool useVirtualSpeakers;

	[Token(Token = "0x17000027")]
	public bool UseVirtualSpeakers
	{
		[Token(Token = "0x6000315")]
		[Address(RVA = "0x1566870", Offset = "0x1566870", VA = "0x1566870")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000316")]
		[Address(RVA = "0x1566878", Offset = "0x1566878", VA = "0x1566878")]
		set
		{
		}
	}

	[Token(Token = "0x6000317")]
	[Address(RVA = "0x1566884", Offset = "0x1566884", VA = "0x1566884")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0x1566AFC", Offset = "0x1566AFC", VA = "0x1566AFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0x1566D4C", Offset = "0x1566D4C", VA = "0x1566D4C")]
	public ONSPAmbisonicsNative()
	{
	}
}
[Token(Token = "0x200006E")]
public class ONSPAudioSource : MonoBehaviour
{
	[Token(Token = "0x20003ED")]
	private enum Parameters
	{
		[Token(Token = "0x4001EE1")]
		P_GAIN,
		[Token(Token = "0x4001EE2")]
		P_USEINVSQR,
		[Token(Token = "0x4001EE3")]
		P_NEAR,
		[Token(Token = "0x4001EE4")]
		P_FAR,
		[Token(Token = "0x4001EE5")]
		P_RADIUS,
		[Token(Token = "0x4001EE6")]
		P_DISABLE_RFL,
		[Token(Token = "0x4001EE7")]
		P_VSPEAKERMODE,
		[Token(Token = "0x4001EE8")]
		P_AMBISTAT,
		[Token(Token = "0x4001EE9")]
		P_READONLY_GLOBAL_RFL_ENABLED,
		[Token(Token = "0x4001EEA")]
		P_READONLY_NUM_VOICES,
		[Token(Token = "0x4001EEB")]
		P_SENDLEVEL,
		[Token(Token = "0x4001EEC")]
		P_NUM
	}

	[Token(Token = "0x400026A")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool enableSpatialization;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float gain;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private bool useInvSqr;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float near;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float far;

	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float volumetricRadius;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float reverbSend;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[SerializeField]
	private bool enableRfl;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPAudioSource RoomReflectionGizmoAS;

	[Token(Token = "0x17000028")]
	public bool EnableSpatialization
	{
		[Token(Token = "0x600031D")]
		[Address(RVA = "0x15670F4", Offset = "0x15670F4", VA = "0x15670F4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600031E")]
		[Address(RVA = "0x15670FC", Offset = "0x15670FC", VA = "0x15670FC")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	public float Gain
	{
		[Token(Token = "0x600031F")]
		[Address(RVA = "0x1567108", Offset = "0x1567108", VA = "0x1567108")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000320")]
		[Address(RVA = "0x1567110", Offset = "0x1567110", VA = "0x1567110")]
		set
		{
		}
	}

	[Token(Token = "0x1700002A")]
	public bool UseInvSqr
	{
		[Token(Token = "0x6000321")]
		[Address(RVA = "0x1567140", Offset = "0x1567140", VA = "0x1567140")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000322")]
		[Address(RVA = "0x1567148", Offset = "0x1567148", VA = "0x1567148")]
		set
		{
		}
	}

	[Token(Token = "0x1700002B")]
	public float Near
	{
		[Token(Token = "0x6000323")]
		[Address(RVA = "0x1567154", Offset = "0x1567154", VA = "0x1567154")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000324")]
		[Address(RVA = "0x156715C", Offset = "0x156715C", VA = "0x156715C")]
		set
		{
		}
	}

	[Token(Token = "0x1700002C")]
	public float Far
	{
		[Token(Token = "0x6000325")]
		[Address(RVA = "0x1567190", Offset = "0x1567190", VA = "0x1567190")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000326")]
		[Address(RVA = "0x1567198", Offset = "0x1567198", VA = "0x1567198")]
		set
		{
		}
	}

	[Token(Token = "0x1700002D")]
	public float VolumetricRadius
	{
		[Token(Token = "0x6000327")]
		[Address(RVA = "0x15671CC", Offset = "0x15671CC", VA = "0x15671CC")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000328")]
		[Address(RVA = "0x15671D4", Offset = "0x15671D4", VA = "0x15671D4")]
		set
		{
		}
	}

	[Token(Token = "0x1700002E")]
	public float ReverbSend
	{
		[Token(Token = "0x6000329")]
		[Address(RVA = "0x1567208", Offset = "0x1567208", VA = "0x1567208")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x600032A")]
		[Address(RVA = "0x1567210", Offset = "0x1567210", VA = "0x1567210")]
		set
		{
		}
	}

	[Token(Token = "0x1700002F")]
	public bool EnableRfl
	{
		[Token(Token = "0x600032B")]
		[Address(RVA = "0x1567244", Offset = "0x1567244", VA = "0x1567244")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600032C")]
		[Address(RVA = "0x156724C", Offset = "0x156724C", VA = "0x156724C")]
		set
		{
		}
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0x1566DCC", Offset = "0x1566DCC", VA = "0x1566DCC")]
	[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x855D84", Offset = "0x855D84")]
	private static void OnBeforeSceneLoadRuntimeMethod()
	{
	}

	[PreserveSig]
	[Token(Token = "0x600031C")]
	[Address(RVA = "0x1567014", Offset = "0x1567014", VA = "0x1567014")]
	private static extern void ONSP_GetGlobalRoomReflectionValues(bool reflOn, bool reverbOn, float width, float height, float length);

	[Token(Token = "0x600032D")]
	[Address(RVA = "0x1567258", Offset = "0x1567258", VA = "0x1567258")]
	private void Awake()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0x15673C4", Offset = "0x15673C4", VA = "0x15673C4")]
	private void Start()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0x15673C8", Offset = "0x15673C8", VA = "0x15673C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0x15672C0", Offset = "0x15672C0", VA = "0x15672C0")]
	public void SetParameters(AudioSource source)
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0x156748C", Offset = "0x156748C", VA = "0x156748C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0x1567884", Offset = "0x1567884", VA = "0x1567884")]
	private void OnDestroy()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000333")]
	[Address(RVA = "0x1566F94", Offset = "0x1566F94", VA = "0x1566F94")]
	private static extern int OSP_SetGlobalVoiceLimit(int VoiceLimit);

	[Token(Token = "0x6000334")]
	[Address(RVA = "0x1567970", Offset = "0x1567970", VA = "0x1567970")]
	public ONSPAudioSource()
	{
	}
}
[Token(Token = "0x200006F")]
public class ONSPProfiler : MonoBehaviour
{
	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool profilerEnabled;

	[Token(Token = "0x4000275")]
	private const int DEFAULT_PORT = 2121;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int port;

	[Token(Token = "0x4000277")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[Token(Token = "0x6000336")]
	[Address(RVA = "0x1567990", Offset = "0x1567990", VA = "0x1567990")]
	private void Start()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0x156799C", Offset = "0x156799C", VA = "0x156799C")]
	private void Update()
	{
	}

	[PreserveSig]
	[Token(Token = "0x6000338")]
	[Address(RVA = "0x1567A54", Offset = "0x1567A54", VA = "0x1567A54")]
	private static extern int ONSP_SetProfilerEnabled(bool enabled);

	[PreserveSig]
	[Token(Token = "0x6000339")]
	[Address(RVA = "0x15679D4", Offset = "0x15679D4", VA = "0x15679D4")]
	private static extern int ONSP_SetProfilerPort(int port);

	[Token(Token = "0x600033A")]
	[Address(RVA = "0x1567AD4", Offset = "0x1567AD4", VA = "0x1567AD4")]
	public ONSPProfiler()
	{
	}
}
[Token(Token = "0x2000070")]
public class ONSPPropagationGeometry : MonoBehaviour
{
	[Token(Token = "0x20003EE")]
	private struct MeshMaterial
	{
		[Token(Token = "0x4001EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public MeshFilter meshFilter;

		[Token(Token = "0x4001EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;
	}

	[Token(Token = "0x20003EF")]
	private struct TerrainMaterial
	{
		[Token(Token = "0x4001EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Terrain terrain;

		[Token(Token = "0x4001EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ONSPPropagationMaterial[] materials;

		[Token(Token = "0x4001EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mesh[] treePrototypeMeshes;
	}

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static string GeometryAssetDirectory;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string filePathRelative;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool fileEnabled;

	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool includeChildMeshes;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private IntPtr geometryHandle;

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	public static int OSPSuccess;

	[Token(Token = "0x400027E")]
	public const string GEOMETRY_FILE_EXTENSION = "ovramesh";

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	private static int terrainDecimation;

	[Token(Token = "0x17000030")]
	public static string GeometryAssetPath
	{
		[Token(Token = "0x600033B")]
		[Address(RVA = "0x1567DDC", Offset = "0x1567DDC", VA = "0x1567DDC")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x17000031")]
	public string filePath
	{
		[Token(Token = "0x600033C")]
		[Address(RVA = "0x1567E78", Offset = "0x1567E78", VA = "0x1567E78")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600033D")]
	[Address(RVA = "0x1567F00", Offset = "0x1567F00", VA = "0x1567F00")]
	private static string GetPath(Transform current)
	{
		return null;
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0x1568058", Offset = "0x1568058", VA = "0x1568058")]
	private void Awake()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0x156805C", Offset = "0x156805C", VA = "0x156805C")]
	private void CreatePropagationGeometry()
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0x1568630", Offset = "0x1568630", VA = "0x1568630")]
	private void Update()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0x15689DC", Offset = "0x15689DC", VA = "0x15689DC")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000342")]
	[Address(RVA = "0x1568B50", Offset = "0x1568B50", VA = "0x1568B50")]
	private static void traverseMeshHierarchy(GameObject obj, ONSPPropagationMaterial[] currentMaterials, bool includeChildren, List<MeshMaterial> meshMaterials, List<TerrainMaterial> terrainMaterials, bool ignoreStatic, int ignoredMeshCount)
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0x1569348", Offset = "0x1569348", VA = "0x1569348")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal)
	{
		return default(int);
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0x1569384", Offset = "0x1569384", VA = "0x1569384")]
	private int uploadMesh(IntPtr geometryHandle, GameObject meshObject, Matrix4x4 worldToLocal, bool ignoreStatic, int ignoredMeshCount)
	{
		return default(int);
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0x156ABF4", Offset = "0x156ABF4", VA = "0x156ABF4")]
	private static void uploadMeshFilter(List<Vector3> tempVertices, List<int> tempIndices, MeshGroup[] groups, float[] vertices, int[] indices, int vertexOffset, int indexOffset, int groupOffset, Mesh mesh, ONSPPropagationMaterial[] materials, Matrix4x4 matrix)
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0x156AACC", Offset = "0x156AACC", VA = "0x156AACC")]
	private static void updateCountsForMesh(int totalVertexCount, uint totalIndexCount, int totalFaceCount, int totalMaterialCount, Mesh mesh)
	{
	}

	[Token(Token = "0x6000347")]
	[Address(RVA = "0x156843C", Offset = "0x156843C", VA = "0x156843C")]
	public void UploadGeometry()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0x156824C", Offset = "0x156824C", VA = "0x156824C")]
	public bool ReadFile()
	{
		return default(bool);
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0x156B274", Offset = "0x156B274", VA = "0x156B274")]
	public bool WriteToObj()
	{
		return default(bool);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0x156B6EC", Offset = "0x156B6EC", VA = "0x156B6EC")]
	public ONSPPropagationGeometry()
	{
	}
}
[Token(Token = "0x2000071")]
internal class ONSPPropagation
{
	[Token(Token = "0x20003F0")]
	public enum ovrAudioScalarType : uint
	{
		[Token(Token = "0x4001EF3")]
		Int8,
		[Token(Token = "0x4001EF4")]
		UInt8,
		[Token(Token = "0x4001EF5")]
		Int16,
		[Token(Token = "0x4001EF6")]
		UInt16,
		[Token(Token = "0x4001EF7")]
		Int32,
		[Token(Token = "0x4001EF8")]
		UInt32,
		[Token(Token = "0x4001EF9")]
		Int64,
		[Token(Token = "0x4001EFA")]
		UInt64,
		[Token(Token = "0x4001EFB")]
		Float16,
		[Token(Token = "0x4001EFC")]
		Float32,
		[Token(Token = "0x4001EFD")]
		Float64
	}

	[Token(Token = "0x20003F1")]
	public class ClientType
	{
		[Token(Token = "0x4001EFE")]
		public const uint OVRA_CLIENT_TYPE_NATIVE = 0u;

		[Token(Token = "0x4001EFF")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2016 = 1u;

		[Token(Token = "0x4001F00")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_1 = 2u;

		[Token(Token = "0x4001F01")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2017_2 = 3u;

		[Token(Token = "0x4001F02")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2018_1 = 4u;

		[Token(Token = "0x4001F03")]
		public const uint OVRA_CLIENT_TYPE_FMOD = 5u;

		[Token(Token = "0x4001F04")]
		public const uint OVRA_CLIENT_TYPE_UNITY = 6u;

		[Token(Token = "0x4001F05")]
		public const uint OVRA_CLIENT_TYPE_UE4 = 7u;

		[Token(Token = "0x4001F06")]
		public const uint OVRA_CLIENT_TYPE_VST = 8u;

		[Token(Token = "0x4001F07")]
		public const uint OVRA_CLIENT_TYPE_AAX = 9u;

		[Token(Token = "0x4001F08")]
		public const uint OVRA_CLIENT_TYPE_TEST = 10u;

		[Token(Token = "0x4001F09")]
		public const uint OVRA_CLIENT_TYPE_OTHER = 11u;

		[Token(Token = "0x4001F0A")]
		public const uint OVRA_CLIENT_TYPE_WWISE_UNKNOWN = 12u;

		[Token(Token = "0x4001F0B")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_1 = 13u;

		[Token(Token = "0x4001F0C")]
		public const uint OVRA_CLIENT_TYPE_WWISE_2019_2 = 14u;

		[Token(Token = "0x6001ABB")]
		[Address(RVA = "0x19D70D4", Offset = "0x19D70D4", VA = "0x19D70D4")]
		public ClientType()
		{
		}
	}

	[Token(Token = "0x20003F2")]
	public interface PropagationInterface
	{
		[Token(Token = "0x6001ABC")]
		int SetPropagationQuality(float quality);

		[Token(Token = "0x6001ABD")]
		int SetPropagationThreadAffinity(ulong cpuMask);

		[Token(Token = "0x6001ABE")]
		int CreateAudioGeometry([Out] IntPtr geometry);

		[Token(Token = "0x6001ABF")]
		int DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001AC0")]
		int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount);

		[Token(Token = "0x6001AC1")]
		int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001AC2")]
		int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x6001AC3")]
		int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001AC4")]
		int AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001AC5")]
		int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001AC6")]
		int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x6001AC7")]
		int CreateAudioMaterial([Out] IntPtr material);

		[Token(Token = "0x6001AC8")]
		int DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001AC9")]
		int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001ACA")]
		int AudioMaterialReset(IntPtr material, MaterialProperty property);
	}

	[Token(Token = "0x20003F3")]
	public class UnityNativeInterface : PropagationInterface
	{
		[Token(Token = "0x4001F0D")]
		public const string strOSPS = "AudioPluginOculusSpatializer";

		[Token(Token = "0x4001F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000218")]
		private IntPtr context
		{
			[Token(Token = "0x6001ACB")]
			[Address(RVA = "0x19D7E20", Offset = "0x19D7E20", VA = "0x19D7E20")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001ACC")]
		[Address(RVA = "0x19D7E80", Offset = "0x19D7E80", VA = "0x19D7E80")]
		public static extern int ovrAudio_GetPluginContext([Out] IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001ACD")]
		[Address(RVA = "0x19D7F10", Offset = "0x19D7F10", VA = "0x19D7F10")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001ACE")]
		[Address(RVA = "0x19D7FA0", Offset = "0x19D7FA0", VA = "0x19D7FA0", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001ACF")]
		[Address(RVA = "0x19D7FC4", Offset = "0x19D7FC4", VA = "0x19D7FC4")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001AD0")]
		[Address(RVA = "0x19D8054", Offset = "0x19D8054", VA = "0x19D8054", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD1")]
		[Address(RVA = "0x19D8078", Offset = "0x19D8078", VA = "0x19D8078")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, [Out] IntPtr geometry);

		[Token(Token = "0x6001AD2")]
		[Address(RVA = "0x19D8104", Offset = "0x19D8104", VA = "0x19D8104", Slot = "6")]
		public int CreateAudioGeometry([Out] IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD3")]
		[Address(RVA = "0x19D8128", Offset = "0x19D8128", VA = "0x19D8128")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001AD4")]
		[Address(RVA = "0x19D81A8", Offset = "0x19D81A8", VA = "0x19D81A8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD5")]
		[Address(RVA = "0x19D81B0", Offset = "0x19D81B0", VA = "0x19D81B0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001AD6")]
		[Address(RVA = "0x19D82D0", Offset = "0x19D82D0", VA = "0x19D82D0", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD7")]
		[Address(RVA = "0x19D83CC", Offset = "0x19D83CC", VA = "0x19D83CC")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001AD8")]
		[Address(RVA = "0x19D8464", Offset = "0x19D8464", VA = "0x19D8464", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AD9")]
		[Address(RVA = "0x19D8470", Offset = "0x19D8470", VA = "0x19D8470")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x6001ADA")]
		[Address(RVA = "0x19D85A0", Offset = "0x19D85A0", VA = "0x19D85A0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADB")]
		[Address(RVA = "0x19D85AC", Offset = "0x19D85AC", VA = "0x19D85AC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001ADC")]
		[Address(RVA = "0x19D8658", Offset = "0x19D8658", VA = "0x19D8658", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADD")]
		[Address(RVA = "0x19D8664", Offset = "0x19D8664", VA = "0x19D8664")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001ADE")]
		[Address(RVA = "0x19D8710", Offset = "0x19D8710", VA = "0x19D8710", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001ADF")]
		[Address(RVA = "0x19D871C", Offset = "0x19D871C", VA = "0x19D871C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001AE0")]
		[Address(RVA = "0x19D87C8", Offset = "0x19D87C8", VA = "0x19D87C8", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AE1")]
		[Address(RVA = "0x19D87D4", Offset = "0x19D87D4", VA = "0x19D87D4")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, [Out] IntPtr material);

		[Token(Token = "0x6001AE2")]
		[Address(RVA = "0x19D8860", Offset = "0x19D8860", VA = "0x19D8860", Slot = "15")]
		public int CreateAudioMaterial([Out] IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AE3")]
		[Address(RVA = "0x19D8884", Offset = "0x19D8884", VA = "0x19D8884")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001AE4")]
		[Address(RVA = "0x19D8904", Offset = "0x19D8904", VA = "0x19D8904", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AE5")]
		[Address(RVA = "0x19D890C", Offset = "0x19D890C", VA = "0x19D890C")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001AE6")]
		[Address(RVA = "0x19D89B4", Offset = "0x19D89B4", VA = "0x19D89B4", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AE7")]
		[Address(RVA = "0x19D89C0", Offset = "0x19D89C0", VA = "0x19D89C0")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x6001AE8")]
		[Address(RVA = "0x19D8A68", Offset = "0x19D8A68", VA = "0x19D8A68", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AE9")]
		[Address(RVA = "0x19D8A78", Offset = "0x19D8A78", VA = "0x19D8A78")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001AEA")]
		[Address(RVA = "0x19D8B08", Offset = "0x19D8B08", VA = "0x19D8B08", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001AEB")]
		[Address(RVA = "0x19D8B14", Offset = "0x19D8B14", VA = "0x19D8B14")]
		public UnityNativeInterface()
		{
		}
	}

	[Token(Token = "0x20003F4")]
	public class WwisePluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001F0F")]
		public const string strOSPS = "OculusSpatializerWwise";

		[Token(Token = "0x4001F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x17000219")]
		private IntPtr context
		{
			[Token(Token = "0x6001AEC")]
			[Address(RVA = "0x19D8B5C", Offset = "0x19D8B5C", VA = "0x19D8B5C")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001AED")]
		[Address(RVA = "0x19D8BBC", Offset = "0x19D8BBC", VA = "0x19D8BBC")]
		public static extern int ovrAudio_GetPluginContext([Out] IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001AEE")]
		[Address(RVA = "0x19D8C4C", Offset = "0x19D8C4C", VA = "0x19D8C4C")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001AEF")]
		[Address(RVA = "0x19D8CDC", Offset = "0x19D8CDC", VA = "0x19D8CDC", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AF0")]
		[Address(RVA = "0x19D8D00", Offset = "0x19D8D00", VA = "0x19D8D00")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001AF1")]
		[Address(RVA = "0x19D8D90", Offset = "0x19D8D90", VA = "0x19D8D90", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AF2")]
		[Address(RVA = "0x19D8DB4", Offset = "0x19D8DB4", VA = "0x19D8DB4")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, [Out] IntPtr geometry);

		[Token(Token = "0x6001AF3")]
		[Address(RVA = "0x19D8E44", Offset = "0x19D8E44", VA = "0x19D8E44", Slot = "6")]
		public int CreateAudioGeometry([Out] IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AF4")]
		[Address(RVA = "0x19D8E68", Offset = "0x19D8E68", VA = "0x19D8E68")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001AF5")]
		[Address(RVA = "0x19D8EE8", Offset = "0x19D8EE8", VA = "0x19D8EE8", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AF6")]
		[Address(RVA = "0x19D8EF0", Offset = "0x19D8EF0", VA = "0x19D8EF0")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001AF7")]
		[Address(RVA = "0x19D9010", Offset = "0x19D9010", VA = "0x19D9010", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AF8")]
		[Address(RVA = "0x19D910C", Offset = "0x19D910C", VA = "0x19D910C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001AF9")]
		[Address(RVA = "0x19D91A4", Offset = "0x19D91A4", VA = "0x19D91A4", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AFA")]
		[Address(RVA = "0x19D91B0", Offset = "0x19D91B0", VA = "0x19D91B0")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x6001AFB")]
		[Address(RVA = "0x19D92E0", Offset = "0x19D92E0", VA = "0x19D92E0", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AFC")]
		[Address(RVA = "0x19D92EC", Offset = "0x19D92EC", VA = "0x19D92EC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001AFD")]
		[Address(RVA = "0x19D9398", Offset = "0x19D9398", VA = "0x19D9398", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001AFE")]
		[Address(RVA = "0x19D93A4", Offset = "0x19D93A4", VA = "0x19D93A4")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001AFF")]
		[Address(RVA = "0x19D9450", Offset = "0x19D9450", VA = "0x19D9450", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B00")]
		[Address(RVA = "0x19D945C", Offset = "0x19D945C", VA = "0x19D945C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B01")]
		[Address(RVA = "0x19D9508", Offset = "0x19D9508", VA = "0x19D9508", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B02")]
		[Address(RVA = "0x19D9514", Offset = "0x19D9514", VA = "0x19D9514")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, [Out] IntPtr material);

		[Token(Token = "0x6001B03")]
		[Address(RVA = "0x19D95A4", Offset = "0x19D95A4", VA = "0x19D95A4", Slot = "15")]
		public int CreateAudioMaterial([Out] IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B04")]
		[Address(RVA = "0x19D95C8", Offset = "0x19D95C8", VA = "0x19D95C8")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001B05")]
		[Address(RVA = "0x19D9648", Offset = "0x19D9648", VA = "0x19D9648", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B06")]
		[Address(RVA = "0x19D9650", Offset = "0x19D9650", VA = "0x19D9650")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001B07")]
		[Address(RVA = "0x19D96F8", Offset = "0x19D96F8", VA = "0x19D96F8", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B08")]
		[Address(RVA = "0x19D9704", Offset = "0x19D9704", VA = "0x19D9704")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x6001B09")]
		[Address(RVA = "0x19D97AC", Offset = "0x19D97AC", VA = "0x19D97AC", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B0A")]
		[Address(RVA = "0x19D97BC", Offset = "0x19D97BC", VA = "0x19D97BC")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001B0B")]
		[Address(RVA = "0x19D984C", Offset = "0x19D984C", VA = "0x19D984C", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001B0C")]
		[Address(RVA = "0x19D9858", Offset = "0x19D9858", VA = "0x19D9858")]
		public WwisePluginInterface()
		{
		}
	}

	[Token(Token = "0x20003F5")]
	public class FMODPluginInterface : PropagationInterface
	{
		[Token(Token = "0x4001F11")]
		public const string strOSPS = "OculusSpatializerFMOD";

		[Token(Token = "0x4001F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IntPtr context_;

		[Token(Token = "0x1700021A")]
		private IntPtr context
		{
			[Token(Token = "0x6001B0D")]
			[Address(RVA = "0x19D70DC", Offset = "0x19D70DC", VA = "0x19D70DC")]
			get
			{
				return default(IntPtr);
			}
		}

		[PreserveSig]
		[Token(Token = "0x6001B0E")]
		[Address(RVA = "0x19D713C", Offset = "0x19D713C", VA = "0x19D713C")]
		public static extern int ovrAudio_GetPluginContext([Out] IntPtr context, uint clientType);

		[PreserveSig]
		[Token(Token = "0x6001B0F")]
		[Address(RVA = "0x19D71CC", Offset = "0x19D71CC", VA = "0x19D71CC")]
		private static extern int ovrAudio_SetPropagationQuality(IntPtr context, float quality);

		[Token(Token = "0x6001B10")]
		[Address(RVA = "0x19D725C", Offset = "0x19D725C", VA = "0x19D725C", Slot = "4")]
		public int SetPropagationQuality(float quality)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B11")]
		[Address(RVA = "0x19D7280", Offset = "0x19D7280", VA = "0x19D7280")]
		private static extern int ovrAudio_SetPropagationThreadAffinity(IntPtr context, ulong cpuMask);

		[Token(Token = "0x6001B12")]
		[Address(RVA = "0x19D7310", Offset = "0x19D7310", VA = "0x19D7310", Slot = "5")]
		public int SetPropagationThreadAffinity(ulong cpuMask)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B13")]
		[Address(RVA = "0x19D7334", Offset = "0x19D7334", VA = "0x19D7334")]
		private static extern int ovrAudio_CreateAudioGeometry(IntPtr context, [Out] IntPtr geometry);

		[Token(Token = "0x6001B14")]
		[Address(RVA = "0x19D73C4", Offset = "0x19D73C4", VA = "0x19D73C4", Slot = "6")]
		public int CreateAudioGeometry([Out] IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B15")]
		[Address(RVA = "0x19D73E8", Offset = "0x19D73E8", VA = "0x19D73E8")]
		private static extern int ovrAudio_DestroyAudioGeometry(IntPtr geometry);

		[Token(Token = "0x6001B16")]
		[Address(RVA = "0x19D7468", Offset = "0x19D7468", VA = "0x19D7468", Slot = "7")]
		public int DestroyAudioGeometry(IntPtr geometry)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B17")]
		[Address(RVA = "0x19D7470", Offset = "0x19D7470", VA = "0x19D7470")]
		private static extern int ovrAudio_AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, UIntPtr verticesBytesOffset, UIntPtr vertexCount, UIntPtr vertexStride, ovrAudioScalarType vertexType, int[] indices, UIntPtr indicesByteOffset, UIntPtr indexCount, ovrAudioScalarType indexType, MeshGroup[] groups, UIntPtr groupCount);

		[Token(Token = "0x6001B18")]
		[Address(RVA = "0x19D7590", Offset = "0x19D7590", VA = "0x19D7590", Slot = "8")]
		public int AudioGeometryUploadMeshArrays(IntPtr geometry, float[] vertices, int vertexCount, int[] indices, int indexCount, MeshGroup[] groups, int groupCount)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B19")]
		[Address(RVA = "0x19D768C", Offset = "0x19D768C", VA = "0x19D768C")]
		private static extern int ovrAudio_AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4);

		[Token(Token = "0x6001B1A")]
		[Address(RVA = "0x19D7724", Offset = "0x19D7724", VA = "0x19D7724", Slot = "9")]
		public int AudioGeometrySetTransform(IntPtr geometry, float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B1B")]
		[Address(RVA = "0x19D7730", Offset = "0x19D7730", VA = "0x19D7730")]
		private static extern int ovrAudio_AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4);

		[Token(Token = "0x6001B1C")]
		[Address(RVA = "0x19D7860", Offset = "0x19D7860", VA = "0x19D7860", Slot = "10")]
		public int AudioGeometryGetTransform(IntPtr geometry, [Out] float[] matrix4x4)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B1D")]
		[Address(RVA = "0x19D786C", Offset = "0x19D786C", VA = "0x19D786C")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B1E")]
		[Address(RVA = "0x19D7918", Offset = "0x19D7918", VA = "0x19D7918", Slot = "11")]
		public int AudioGeometryWriteMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B1F")]
		[Address(RVA = "0x19D7924", Offset = "0x19D7924", VA = "0x19D7924")]
		private static extern int ovrAudio_AudioGeometryReadMeshFile(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B20")]
		[Address(RVA = "0x19D79D0", Offset = "0x19D79D0", VA = "0x19D79D0", Slot = "12")]
		public int AudioGeometryReadMeshFile(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B21")]
		[Address(RVA = "0x19D79DC", Offset = "0x19D79DC", VA = "0x19D79DC")]
		private static extern int ovrAudio_AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath);

		[Token(Token = "0x6001B22")]
		[Address(RVA = "0x19D7A88", Offset = "0x19D7A88", VA = "0x19D7A88", Slot = "13")]
		public int AudioGeometryWriteMeshFileObj(IntPtr geometry, string filePath)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B23")]
		[Address(RVA = "0x19D7A94", Offset = "0x19D7A94", VA = "0x19D7A94")]
		private static extern int ovrAudio_CreateAudioMaterial(IntPtr context, [Out] IntPtr material);

		[Token(Token = "0x6001B24")]
		[Address(RVA = "0x19D7B24", Offset = "0x19D7B24", VA = "0x19D7B24", Slot = "15")]
		public int CreateAudioMaterial([Out] IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B25")]
		[Address(RVA = "0x19D7B48", Offset = "0x19D7B48", VA = "0x19D7B48")]
		private static extern int ovrAudio_DestroyAudioMaterial(IntPtr material);

		[Token(Token = "0x6001B26")]
		[Address(RVA = "0x19D7BC8", Offset = "0x19D7BC8", VA = "0x19D7BC8", Slot = "16")]
		public int DestroyAudioMaterial(IntPtr material)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B27")]
		[Address(RVA = "0x19D7BD0", Offset = "0x19D7BD0", VA = "0x19D7BD0")]
		private static extern int ovrAudio_AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value);

		[Token(Token = "0x6001B28")]
		[Address(RVA = "0x19D7C78", Offset = "0x19D7C78", VA = "0x19D7C78", Slot = "17")]
		public int AudioMaterialSetFrequency(IntPtr material, MaterialProperty property, float frequency, float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B29")]
		[Address(RVA = "0x19D7C84", Offset = "0x19D7C84", VA = "0x19D7C84")]
		private static extern int ovrAudio_AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value);

		[Token(Token = "0x6001B2A")]
		[Address(RVA = "0x19D7D2C", Offset = "0x19D7D2C", VA = "0x19D7D2C", Slot = "14")]
		public int AudioMaterialGetFrequency(IntPtr material, MaterialProperty property, float frequency, [Out] float value)
		{
			return default(int);
		}

		[PreserveSig]
		[Token(Token = "0x6001B2B")]
		[Address(RVA = "0x19D7D3C", Offset = "0x19D7D3C", VA = "0x19D7D3C")]
		private static extern int ovrAudio_AudioMaterialReset(IntPtr material, MaterialProperty property);

		[Token(Token = "0x6001B2C")]
		[Address(RVA = "0x19D7DCC", Offset = "0x19D7DCC", VA = "0x19D7DCC", Slot = "18")]
		public int AudioMaterialReset(IntPtr material, MaterialProperty property)
		{
			return default(int);
		}

		[Token(Token = "0x6001B2D")]
		[Address(RVA = "0x19D7DD8", Offset = "0x19D7DD8", VA = "0x19D7DD8")]
		public FMODPluginInterface()
		{
		}
	}

	[Token(Token = "0x4000280")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static PropagationInterface CachedInterface;

	[Token(Token = "0x17000032")]
	public static PropagationInterface Interface
	{
		[Token(Token = "0x600034C")]
		[Address(RVA = "0x1567AE4", Offset = "0x1567AE4", VA = "0x1567AE4")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0x1567B5C", Offset = "0x1567B5C", VA = "0x1567B5C")]
	private static PropagationInterface FindInterface()
	{
		return null;
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0x1567DD4", Offset = "0x1567DD4", VA = "0x1567DD4")]
	public ONSPPropagation()
	{
	}
}
[Token(Token = "0x2000072")]
public sealed class ONSPPropagationMaterial : MonoBehaviour
{
	[Token(Token = "0x20003F6")]
	public enum Preset
	{
		[Token(Token = "0x4001F14")]
		Custom,
		[Token(Token = "0x4001F15")]
		AcousticTile,
		[Token(Token = "0x4001F16")]
		Brick,
		[Token(Token = "0x4001F17")]
		BrickPainted,
		[Token(Token = "0x4001F18")]
		Carpet,
		[Token(Token = "0x4001F19")]
		CarpetHeavy,
		[Token(Token = "0x4001F1A")]
		CarpetHeavyPadded,
		[Token(Token = "0x4001F1B")]
		CeramicTile,
		[Token(Token = "0x4001F1C")]
		Concrete,
		[Token(Token = "0x4001F1D")]
		ConcreteRough,
		[Token(Token = "0x4001F1E")]
		ConcreteBlock,
		[Token(Token = "0x4001F1F")]
		ConcreteBlockPainted,
		[Token(Token = "0x4001F20")]
		Curtain,
		[Token(Token = "0x4001F21")]
		Foliage,
		[Token(Token = "0x4001F22")]
		Glass,
		[Token(Token = "0x4001F23")]
		GlassHeavy,
		[Token(Token = "0x4001F24")]
		Grass,
		[Token(Token = "0x4001F25")]
		Gravel,
		[Token(Token = "0x4001F26")]
		GypsumBoard,
		[Token(Token = "0x4001F27")]
		PlasterOnBrick,
		[Token(Token = "0x4001F28")]
		PlasterOnConcreteBlock,
		[Token(Token = "0x4001F29")]
		Soil,
		[Token(Token = "0x4001F2A")]
		SoundProof,
		[Token(Token = "0x4001F2B")]
		Snow,
		[Token(Token = "0x4001F2C")]
		Steel,
		[Token(Token = "0x4001F2D")]
		Water,
		[Token(Token = "0x4001F2E")]
		WoodThin,
		[Token(Token = "0x4001F2F")]
		WoodThick,
		[Token(Token = "0x4001F30")]
		WoodFloor,
		[Token(Token = "0x4001F31")]
		WoodOnConcrete
	}

	[Serializable]
	[Token(Token = "0x20003F7")]
	public sealed class Point
	{
		[Token(Token = "0x4001F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float frequency;

		[Token(Token = "0x4001F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float data;

		[Token(Token = "0x6001B2E")]
		[Address(RVA = "0x19D98A0", Offset = "0x19D98A0", VA = "0x19D98A0")]
		public Point(float frequency = 0f, float data = 0f)
		{
		}

		[Token(Token = "0x6001B2F")]
		[Address(RVA = "0x19D98D8", Offset = "0x19D98D8", VA = "0x19D98D8")]
		public static implicit operator Point(Vector2 v)
		{
			return null;
		}

		[Token(Token = "0x6001B30")]
		[Address(RVA = "0x19D9944", Offset = "0x19D9944", VA = "0x19D9944")]
		public static implicit operator Vector2(Point point)
		{
			return default(Vector2);
		}
	}

	[Serializable]
	[Token(Token = "0x20003F8")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x84957C", Offset = "0x84957C")]
	public sealed class Spectrum
	{
		[Serializable]
		[Token(Token = "0x200064E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B660", Offset = "0x84B660")]
		private sealed class <>c
		{
			[Token(Token = "0x40024F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40024F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Point, float> <>9__3_0;

			[Token(Token = "0x40024F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<Point, float> <>9__3_1;

			[Token(Token = "0x60023DD")]
			[Address(RVA = "0x192B934", Offset = "0x192B934", VA = "0x192B934")]
			public <>c()
			{
			}

			[Token(Token = "0x60023DE")]
			[Address(RVA = "0x192B93C", Offset = "0x192B93C", VA = "0x192B93C")]
			internal float <get_Item>b__3_0(Point p)
			{
				return default(float);
			}

			[Token(Token = "0x60023DF")]
			[Address(RVA = "0x192B958", Offset = "0x192B958", VA = "0x192B958")]
			internal float <get_Item>b__3_1(Point p)
			{
				return default(float);
			}
		}

		[Token(Token = "0x4001F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int selection;

		[Token(Token = "0x4001F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Point> points;

		[Token(Token = "0x1700021B")]
		public float Item
		{
			[Token(Token = "0x6001B31")]
			[Address(RVA = "0x19D9960", Offset = "0x19D9960", VA = "0x19D9960")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001B32")]
		[Address(RVA = "0x19D9DCC", Offset = "0x19D9DCC", VA = "0x19D9DCC")]
		public Spectrum()
		{
		}
	}

	[Token(Token = "0x4000281")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public IntPtr materialHandle;

	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D308", Offset = "0x84D308")]
	public Spectrum absorption;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D340", Offset = "0x84D340")]
	public Spectrum transmission;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D378", Offset = "0x84D378")]
	public Spectrum scattering;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Preset preset_;

	[Token(Token = "0x17000033")]
	public Preset preset
	{
		[Token(Token = "0x600034F")]
		[Address(RVA = "0x156B7F0", Offset = "0x156B7F0", VA = "0x156B7F0")]
		get
		{
			return default(Preset);
		}
		[Token(Token = "0x6000350")]
		[Address(RVA = "0x156B7F8", Offset = "0x156B7F8", VA = "0x156B7F8")]
		set
		{
		}
	}

	[Token(Token = "0x6000351")]
	[Address(RVA = "0x156B820", Offset = "0x156B820", VA = "0x156B820")]
	private void Start()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0x156B0F0", Offset = "0x156B0F0", VA = "0x156B0F0")]
	public void StartInternal()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0x156BE34", Offset = "0x156BE34", VA = "0x156BE34")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0x156BE38", Offset = "0x156BE38", VA = "0x156BE38")]
	public void DestroyInternal()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0x156B824", Offset = "0x156B824", VA = "0x156B824")]
	public void UploadMaterial()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0x156A934", Offset = "0x156A934", VA = "0x156A934")]
	public void SetPreset(Preset preset)
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0x156BF1C", Offset = "0x156BF1C", VA = "0x156BF1C")]
	private static void AcousticTile(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000358")]
	[Address(RVA = "0x156C3FC", Offset = "0x156C3FC", VA = "0x156C3FC")]
	private static void Brick(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0x156C8E8", Offset = "0x156C8E8", VA = "0x156C8E8")]
	private static void BrickPainted(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0x156CDC8", Offset = "0x156CDC8", VA = "0x156CDC8")]
	private static void Carpet(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0x156D2BC", Offset = "0x156D2BC", VA = "0x156D2BC")]
	private static void CarpetHeavy(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0x156D79C", Offset = "0x156D79C", VA = "0x156D79C")]
	private static void CarpetHeavyPadded(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0x156DC7C", Offset = "0x156DC7C", VA = "0x156DC7C")]
	private static void CeramicTile(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600035E")]
	[Address(RVA = "0x156E164", Offset = "0x156E164", VA = "0x156E164")]
	private static void Concrete(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0x156E64C", Offset = "0x156E64C", VA = "0x156E64C")]
	private static void ConcreteRough(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0x156EB38", Offset = "0x156EB38", VA = "0x156EB38")]
	private static void ConcreteBlock(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0x156F020", Offset = "0x156F020", VA = "0x156F020")]
	private static void ConcreteBlockPainted(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0x156F510", Offset = "0x156F510", VA = "0x156F510")]
	private static void Curtain(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000363")]
	[Address(RVA = "0x156F9F0", Offset = "0x156F9F0", VA = "0x156F9F0")]
	private static void Foliage(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0x156FEDC", Offset = "0x156FEDC", VA = "0x156FEDC")]
	private static void Glass(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0x15703AC", Offset = "0x15703AC", VA = "0x15703AC")]
	private static void GlassHeavy(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0x1570888", Offset = "0x1570888", VA = "0x1570888")]
	private static void Grass(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000367")]
	[Address(RVA = "0x1570C38", Offset = "0x1570C38", VA = "0x1570C38")]
	private static void Gravel(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000368")]
	[Address(RVA = "0x1570FE0", Offset = "0x1570FE0", VA = "0x1570FE0")]
	private static void GypsumBoard(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0x15714D0", Offset = "0x15714D0", VA = "0x15714D0")]
	private static void PlasterOnBrick(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0x15719BC", Offset = "0x15719BC", VA = "0x15719BC")]
	private static void PlasterOnConcreteBlock(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0x1571EA8", Offset = "0x1571EA8", VA = "0x1571EA8")]
	private static void Soil(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0x157225C", Offset = "0x157225C", VA = "0x157225C")]
	private static void SoundProof(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0x15723F8", Offset = "0x15723F8", VA = "0x15723F8")]
	private static void Snow(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0x157279C", Offset = "0x157279C", VA = "0x157279C")]
	private static void Steel(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0x1572C6C", Offset = "0x1572C6C", VA = "0x1572C6C")]
	private static void Water(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0x157314C", Offset = "0x157314C", VA = "0x157314C")]
	private static void WoodThin(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000371")]
	[Address(RVA = "0x1573624", Offset = "0x1573624", VA = "0x1573624")]
	private static void WoodThick(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0x1573B04", Offset = "0x1573B04", VA = "0x1573B04")]
	private static void WoodFloor(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0x1573FEC", Offset = "0x1573FEC", VA = "0x1573FEC")]
	private static void WoodOnConcrete(ONSPPropagationMaterial material)
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0x15744D0", Offset = "0x15744D0", VA = "0x15744D0")]
	public ONSPPropagationMaterial()
	{
	}
}
[Token(Token = "0x2000073")]
public class ONSPPropagationSettings : MonoBehaviour
{
	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float quality;

	[Token(Token = "0x6000375")]
	[Address(RVA = "0x15745A0", Offset = "0x15745A0", VA = "0x15745A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000376")]
	[Address(RVA = "0x1574664", Offset = "0x1574664", VA = "0x1574664")]
	public ONSPPropagationSettings()
	{
	}
}
[Token(Token = "0x2000074")]
public sealed class ONSPSettings : ScriptableObject
{
	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public int voiceLimit;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static ONSPSettings instance;

	[Token(Token = "0x17000034")]
	public static ONSPSettings Instance
	{
		[Token(Token = "0x6000377")]
		[Address(RVA = "0x1566E3C", Offset = "0x1566E3C", VA = "0x1566E3C")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0x1574CD4", Offset = "0x1574CD4", VA = "0x1574CD4")]
	public ONSPSettings()
	{
	}
}
[Token(Token = "0x2000075")]
public class ONSPVersion : MonoBehaviour
{
	[Token(Token = "0x4000289")]
	public const string strONSPS = "AudioPluginOculusSpatializer";

	[PreserveSig]
	[Token(Token = "0x6000379")]
	[Address(RVA = "0x1574CE4", Offset = "0x1574CE4", VA = "0x1574CE4")]
	private static extern void ONSP_GetVersion(int Major, int Minor, int Patch);

	[Token(Token = "0x600037A")]
	[Address(RVA = "0x1574D7C", Offset = "0x1574D7C", VA = "0x1574D7C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600037B")]
	[Address(RVA = "0x1574EA0", Offset = "0x1574EA0", VA = "0x1574EA0")]
	private void Start()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0x1574EA4", Offset = "0x1574EA4", VA = "0x1574EA4")]
	private void Update()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0x1574EA8", Offset = "0x1574EA8", VA = "0x1574EA8")]
	public ONSPVersion()
	{
	}
}
[Token(Token = "0x2000076")]
public class test_moving_points : MonoBehaviour
{
	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] points;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private int next;

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float arrive;

	[Token(Token = "0x600037E")]
	[Address(RVA = "0x100E2A0", Offset = "0x100E2A0", VA = "0x100E2A0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0x100E450", Offset = "0x100E450", VA = "0x100E450")]
	public test_moving_points()
	{
	}
}
[Token(Token = "0x2000077")]
public class s3DBButton_password : MonoBehaviour
{
	[Token(Token = "0x20003F9")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8495B4", Offset = "0x8495B4")]
	private sealed class <animInformer>d__23 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4001F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4001F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x4001F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public s3DBButton_password <>4__this;

		[Token(Token = "0x4001F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool b;

		[Token(Token = "0x1700021C")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6001B36")]
			[Address(RVA = "0xD305CC", Offset = "0xD305CC", VA = "0xD305CC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700021D")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6001B38")]
			[Address(RVA = "0xD30614", Offset = "0xD30614", VA = "0xD30614", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001B33")]
		[Address(RVA = "0xD302FC", Offset = "0xD302FC", VA = "0xD302FC")]
		[DebuggerHidden]
		public <animInformer>d__23(int <>1__state)
		{
		}

		[Token(Token = "0x6001B34")]
		[Address(RVA = "0xD30328", Offset = "0xD30328", VA = "0xD30328", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6001B35")]
		[Address(RVA = "0xD3032C", Offset = "0xD3032C", VA = "0xD3032C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6001B37")]
		[Address(RVA = "0xD305D4", Offset = "0xD305D4", VA = "0xD305D4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x84D3D0", Offset = "0x84D3D0")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D3D0", Offset = "0x84D3D0")]
	public string secret;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x84D420", Offset = "0x84D420")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D420", Offset = "0x84D420")]
	public bool debug;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject button0;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject button1;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject button2;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject button3;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject button4;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject button5;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject button6;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject button7;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public GameObject button8;

	[Token(Token = "0x4000299")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject button9;

	[Token(Token = "0x400029A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public GameObject generalButton;

	[Token(Token = "0x400029B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x84D470", Offset = "0x84D470")]
	public str3DBbScreenInfo informer;

	[Token(Token = "0x400029C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public str3DdBbReceiver2[] sendToOpen;

	[Token(Token = "0x400029D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private GameObject[] buttons;

	[Token(Token = "0x400029E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool iWait;

	[Token(Token = "0x400029F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private string nSecret;

	[Token(Token = "0x6000380")]
	[Address(RVA = "0x1003538", Offset = "0x1003538", VA = "0x1003538")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0x10039AC", Offset = "0x10039AC", VA = "0x10039AC")]
	private bool testSecret()
	{
		return default(bool);
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0x1003A70", Offset = "0x1003A70", VA = "0x1003A70")]
	public void button(str3DBbMessage msg)
	{
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0x1003D3C", Offset = "0x1003D3C", VA = "0x1003D3C")]
	private void Locker()
	{
	}

	[Token(Token = "0x6000384")]
	[Address(RVA = "0x1003F88", Offset = "0x1003F88", VA = "0x1003F88")]
	private void informerUpdate(int length, int sybol)
	{
	}

	[Token(Token = "0x6000385")]
	[Address(RVA = "0x1003CB0", Offset = "0x1003CB0", VA = "0x1003CB0")]
	[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855D98", Offset = "0x855D98")]
	private IEnumerator animInformer(bool b)
	{
		return null;
	}

	[Token(Token = "0x6000386")]
	[Address(RVA = "0x10047E8", Offset = "0x10047E8", VA = "0x10047E8")]
	private void showElements(bool n, bool d, bool m)
	{
	}

	[Token(Token = "0x6000387")]
	[Address(RVA = "0x1004A98", Offset = "0x1004A98", VA = "0x1004A98")]
	public s3DBButton_password()
	{
	}
}
[Token(Token = "0x2000078")]
public class s3DBButton_receiver : MonoBehaviour
{
	[Token(Token = "0x40002A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool debug;

	[Token(Token = "0x40002A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84D484", Offset = "0x84D484")]
	public enum3dBbType position;

	[Token(Token = "0x40002A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 position0;

	[Token(Token = "0x40002A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 position1;

	[Token(Token = "0x40002A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84D4BC", Offset = "0x84D4BC")]
	public enum3dBbType rotation;

	[Token(Token = "0x40002A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 rotation0;

	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Vector3 rotation1;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84D4F4", Offset = "0x84D4F4")]
	public enum3dBbType objects;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject[] objects0;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject[] objects1;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84D52C", Offset = "0x84D52C")]
	public enum3dBbType materials;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public ste3DBbMats[] materials0;

	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public ste3DBbMats[] materials1;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool statePosition;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	private bool stateRotation;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x82")]
	private bool stateObjects;

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x83")]
	private bool stateMaterials;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private bool stateMessage;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private enum3DBbState3 state;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private str3DBbMessage msg;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0x1004B2C", Offset = "0x1004B2C", VA = "0x1004B2C")]
	public void button(str3DBbMessage msg)
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0x1004B98", Offset = "0x1004B98", VA = "0x1004B98")]
	private void switchPosition()
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0x1004C8C", Offset = "0x1004C8C", VA = "0x1004C8C")]
	private void switchRotation()
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0x1004DA0", Offset = "0x1004DA0", VA = "0x1004DA0")]
	private void switchObjects()
	{
	}

	[Token(Token = "0x600038C")]
	[Address(RVA = "0x1004E70", Offset = "0x1004E70", VA = "0x1004E70")]
	private void switchMaterials()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0x1005004", Offset = "0x1005004", VA = "0x1005004")]
	private void setMaterials(ste3DBbMats[] m)
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0x1004F38", Offset = "0x1004F38", VA = "0x1004F38")]
	private void setObjects(bool a, bool b)
	{
	}

	[Token(Token = "0x600038F")]
	[Address(RVA = "0x100515C", Offset = "0x100515C", VA = "0x100515C")]
	public s3DBButton_receiver()
	{
	}
}
[Token(Token = "0x2000079")]
public class s3DBButton_sender : MonoBehaviour
{
	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public str3DdBbReceiver[] SendToGameObjects;

	[Token(Token = "0x6000390")]
	[Address(RVA = "0x1005164", Offset = "0x1005164", VA = "0x1005164")]
	public void SendToObjects()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0x100527C", Offset = "0x100527C", VA = "0x100527C")]
	public s3DBButton_sender()
	{
	}
}
[Token(Token = "0x200007A")]
public class TestG06 : MonoBehaviour
{
	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int currentAnimIndex;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int totalAnimations;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<string> animationNames;

	[Token(Token = "0x6000392")]
	[Address(RVA = "0x1060860", Offset = "0x1060860", VA = "0x1060860")]
	private void Start()
	{
	}

	[Token(Token = "0x6000393")]
	[Address(RVA = "0x1060B80", Offset = "0x1060B80", VA = "0x1060B80")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0x1060E30", Offset = "0x1060E30", VA = "0x1060E30")]
	private void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0x1060E34", Offset = "0x1060E34", VA = "0x1060E34")]
	public TestG06()
	{
	}
}
[Token(Token = "0x200007B")]
public class TestAnimations : MonoBehaviour
{
	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int weaponIndex;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	public WeaponState[] weapons;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int currentAnimIndex;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int totalAnimations;

	[Token(Token = "0x40002BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<string> animationNames;

	[Token(Token = "0x6000396")]
	[Address(RVA = "0x105EE68", Offset = "0x105EE68", VA = "0x105EE68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0x106058C", Offset = "0x106058C", VA = "0x106058C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0x1060854", Offset = "0x1060854", VA = "0x1060854")]
	private void Update()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0x1060208", Offset = "0x1060208", VA = "0x1060208")]
	private void ChangeWeaponState()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0x1060858", Offset = "0x1060858", VA = "0x1060858")]
	public TestAnimations()
	{
	}
}
[Token(Token = "0x200007C")]
public class WeaponState
{
	[Token(Token = "0x40002BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x40002BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> weaponModels;

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xC368B4", Offset = "0xC368B4", VA = "0xC368B4")]
	public WeaponState()
	{
	}
}
[Token(Token = "0x200007D")]
public class AvatarEditor : MonoBehaviour
{
	[Token(Token = "0x40002BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool AvatarInit;

	[Token(Token = "0x40002C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject renderPlate;

	[Token(Token = "0x40002C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture avatarRTD;

	[Token(Token = "0x40002C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material avatarMat;

	[Token(Token = "0x40002C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Camera avatarCam;

	[Token(Token = "0x40002C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public TextureSwapper[] swappers;

	[Token(Token = "0x40002C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<SkinnedMeshRenderer> hairModels;

	[Token(Token = "0x40002C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public int currentHairModel;

	[Token(Token = "0x40002C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public int oldHairModel;

	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public SkinColors skincolors;

	[Token(Token = "0x600039C")]
	[Address(RVA = "0x1198DE4", Offset = "0x1198DE4", VA = "0x1198DE4")]
	public void Start()
	{
	}

	[Token(Token = "0x600039D")]
	[Address(RVA = "0x11992F8", Offset = "0x11992F8", VA = "0x11992F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0x11992FC", Offset = "0x11992FC", VA = "0x11992FC")]
	public AvatarEditor()
	{
	}
}
[Token(Token = "0x200007E")]
public class AvatarLODSystem : MonoBehaviour
{
	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SkinnedMeshRenderer> bodies;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<float> ratios;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float screenRatio;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int currentBodyIndex;

	[Token(Token = "0x600039F")]
	[Address(RVA = "0x1199304", Offset = "0x1199304", VA = "0x1199304")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0x119930C", Offset = "0x119930C", VA = "0x119930C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0x119959C", Offset = "0x119959C", VA = "0x119959C")]
	public AvatarLODSystem()
	{
	}
}
[Token(Token = "0x200007F")]
public class CamTarget : MonoBehaviour
{
	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float camSpeed;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 lerpPos;

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xDBEB40", Offset = "0xDBEB40", VA = "0xDBEB40")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xDBEC14", Offset = "0xDBEC14", VA = "0xDBEC14")]
	public CamTarget()
	{
	}
}
[Token(Token = "0x2000080")]
public class CharacterDemoController : MonoBehaviour
{
	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject floorPlane;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WeaponState;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool wasAttacking;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotateSpeed;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 movementTargetPosition;

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 attackPos;

	[Token(Token = "0x40002D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 lookAtPos;

	[Token(Token = "0x40002D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RaycastHit hit;

	[Token(Token = "0x40002D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Ray ray;

	[Token(Token = "0x40002DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public bool rightButtonDown;

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xDC3800", Offset = "0xDC3800", VA = "0xDC3800")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xDC388C", Offset = "0xDC388C", VA = "0xDC388C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xDC430C", Offset = "0xDC430C", VA = "0xDC430C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xDC43C4", Offset = "0xDC43C4", VA = "0xDC43C4")]
	public CharacterDemoController()
	{
	}
}
[Token(Token = "0x2000081")]
public class LOD_Holder : MonoBehaviour
{
	[Token(Token = "0x40002DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int level;

	[Token(Token = "0x40002DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ratio;

	[Token(Token = "0x40002DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<SkinnedMeshRenderer> models;

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xCE1ED4", Offset = "0xCE1ED4", VA = "0xCE1ED4")]
	public LOD_Holder()
	{
	}
}
[Token(Token = "0x2000082")]
public class MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x40002DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x40002DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x40002E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float xSpeed;

	[Token(Token = "0x40002E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float ySpeed;

	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float x;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float y;

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xCEEEF0", Offset = "0xCEEEF0", VA = "0xCEEEF0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xCEEFD4", Offset = "0xCEEFD4", VA = "0xCEEFD4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xCEF324", Offset = "0xCEF324", VA = "0xCEF324")]
	private float ClampAngle(float angle)
	{
		return default(float);
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xCEF350", Offset = "0xCEF350", VA = "0xCEF350")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xCEF408", Offset = "0xCEF408", VA = "0xCEF408")]
	public MouseOrbit()
	{
	}
}
[Serializable]
[Token(Token = "0x2000083")]
public class Outfitter : MonoBehaviour
{
	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private CharacterDemoController ac;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int oldWeaponIndex;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<WeaponSlot> weapons;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0x1B62554", Offset = "0x1B62554", VA = "0x1B62554")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0x1B627BC", Offset = "0x1B627BC", VA = "0x1B627BC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0x1B629D4", Offset = "0x1B629D4", VA = "0x1B629D4")]
	public Outfitter()
	{
	}
}
[Serializable]
[Token(Token = "0x2000084")]
public class WeaponSlot
{
	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[SerializeField]
	public List<Renderer> models;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xC36828", Offset = "0xC36828", VA = "0xC36828")]
	public WeaponSlot()
	{
	}
}
[Token(Token = "0x2000085")]
public class PhysicsCharacterController : MonoBehaviour
{
	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Animator animator;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject floorPlane;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int WeaponState;

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool wasAttacking;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	public bool nonCombat;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float rotateSpeed;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public Vector3 movementTargetPosition;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 attackPos;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 lookAtPos;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float gravity;

	[Token(Token = "0x40002F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private RaycastHit hit;

	[Token(Token = "0x40002F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Ray ray;

	[Token(Token = "0x40002F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public bool rightButtonDown;

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0x1B67EC4", Offset = "0x1B67EC4", VA = "0x1B67EC4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0x1B67F50", Offset = "0x1B67F50", VA = "0x1B67F50")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0x1B68A60", Offset = "0x1B68A60", VA = "0x1B68A60")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0x1B68B18", Offset = "0x1B68B18", VA = "0x1B68B18")]
	public PhysicsCharacterController()
	{
	}
}
[Serializable]
[Token(Token = "0x2000086")]
public class PhysicsCharacterOutfitter : MonoBehaviour
{
	[Token(Token = "0x40002F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private PhysicsCharacterController cpc;

	[Token(Token = "0x40002F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int oldWeaponIndex;

	[Token(Token = "0x40002F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	public List<WeaponSlot> weapons;

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0x1B68B30", Offset = "0x1B68B30", VA = "0x1B68B30")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0x1B68D98", Offset = "0x1B68D98", VA = "0x1B68D98")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0x1B68FB0", Offset = "0x1B68FB0", VA = "0x1B68FB0")]
	public PhysicsCharacterOutfitter()
	{
	}
}
[Token(Token = "0x2000087")]
public class RootMotionOff : StateMachineBehaviour
{
	[Token(Token = "0x40002F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ColliderTestTime;

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xDD7568", Offset = "0xDD7568", VA = "0xDD7568", Slot = "4")]
	public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xDD7588", Offset = "0xDD7588", VA = "0xDD7588", Slot = "6")]
	public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xDD75A8", Offset = "0xDD75A8", VA = "0xDD75A8")]
	public RootMotionOff()
	{
	}
}
[Token(Token = "0x2000088")]
public class SkinColors : MonoBehaviour
{
	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer skinPlate;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer facePlate;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Material skinMat;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Material faceMat;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material[] skinColors;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	public int skinColorCurrentIndex;

	[Token(Token = "0x40002FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int skinColorOldIndex;

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xDDB7E8", Offset = "0xDDB7E8", VA = "0xDDB7E8")]
	public void Start()
	{
	}

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xDDB8AC", Offset = "0xDDB8AC", VA = "0xDDB8AC")]
	public void Update()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xDDBA24", Offset = "0xDDBA24", VA = "0xDDBA24")]
	public SkinColors()
	{
	}
}
[Token(Token = "0x2000089")]
public class SkinnedMeshCombiner : MonoBehaviour
{
	[Token(Token = "0x4000300")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Material baseMat;

	[Token(Token = "0x4000301")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private SkinnedMeshRenderer newSkin;

	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private List<SkinnedMeshRenderer> smRenderers;

	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<LOD_Holder> holders;

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xDDBA2C", Offset = "0xDDBA2C", VA = "0xDDBA2C")]
	public void Start()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xDDC54C", Offset = "0xDDC54C", VA = "0xDDC54C")]
	public SkinnedMeshCombiner()
	{
	}
}
[Token(Token = "0x200008A")]
public class TextureSwapper : MonoBehaviour
{
	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string dirPath;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer mesh;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material mat;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material oldMat;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Texture2D currentTexture;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int currentIndex;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public int oldIndex;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string[] names;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0x1061510", Offset = "0x1061510", VA = "0x1061510")]
	public void Start()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0x1061788", Offset = "0x1061788", VA = "0x1061788")]
	public void Update()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0x10617C8", Offset = "0x10617C8", VA = "0x10617C8")]
	private void UpdateTexture()
	{
	}

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0x10617CC", Offset = "0x10617CC", VA = "0x10617CC")]
	public TextureSwapper()
	{
	}
}
[Token(Token = "0x200008B")]
public class CopsAutoRotate : MonoBehaviour
{
	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xC4F6FC", Offset = "0xC4F6FC", VA = "0xC4F6FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xC4F770", Offset = "0xC4F770", VA = "0xC4F770")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xC4F7A8", Offset = "0xC4F7A8", VA = "0xC4F7A8")]
	public CopsAutoRotate()
	{
	}
}
[Token(Token = "0x200008C")]
public class FatGangsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xB9F110", Offset = "0xB9F110", VA = "0xB9F110")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xB9F184", Offset = "0xB9F184", VA = "0xB9F184")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xB9F1BC", Offset = "0xB9F1BC", VA = "0xB9F1BC")]
	public FatGangsterAutoRotate()
	{
	}
}
[Token(Token = "0x200008D")]
public class FatMobsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xB9F1C4", Offset = "0xB9F1C4", VA = "0xB9F1C4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xB9F238", Offset = "0xB9F238", VA = "0xB9F238")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xB9F270", Offset = "0xB9F270", VA = "0xB9F270")]
	public FatMobsterAutoRotate()
	{
	}
}
[Token(Token = "0x200008E")]
public class FemaleCopsAutoRotate : MonoBehaviour
{
	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xB9F280", Offset = "0xB9F280", VA = "0xB9F280")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xB9F2F4", Offset = "0xB9F2F4", VA = "0xB9F2F4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xB9F32C", Offset = "0xB9F32C", VA = "0xB9F32C")]
	public FemaleCopsAutoRotate()
	{
	}
}
[Token(Token = "0x200008F")]
public class GangsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xBA1F4C", Offset = "0xBA1F4C", VA = "0xBA1F4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xBA1FC0", Offset = "0xBA1FC0", VA = "0xBA1FC0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xBA1FF8", Offset = "0xBA1FF8", VA = "0xBA1FF8")]
	public GangsterAutoRotate()
	{
	}
}
[Token(Token = "0x2000090")]
public class GothicGirlAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xBA2704", Offset = "0xBA2704", VA = "0xBA2704")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xBA2778", Offset = "0xBA2778", VA = "0xBA2778")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xBA27B0", Offset = "0xBA27B0", VA = "0xBA27B0")]
	public GothicGirlAutoRotate()
	{
	}
}
[Token(Token = "0x2000091")]
public class GothicGuysAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xBA27B8", Offset = "0xBA27B8", VA = "0xBA27B8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xBA282C", Offset = "0xBA282C", VA = "0xBA282C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xBA2864", Offset = "0xBA2864", VA = "0xBA2864")]
	public GothicGuysAutoRotate()
	{
	}
}
[Token(Token = "0x2000092")]
public class GothicHeaviesAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xBA286C", Offset = "0xBA286C", VA = "0xBA286C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xBA28E0", Offset = "0xBA28E0", VA = "0xBA28E0")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xBA2918", Offset = "0xBA2918", VA = "0xBA2918")]
	public GothicHeaviesAutoRotate()
	{
	}
}
[Token(Token = "0x2000093")]
public class HeavyCopAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xBA8CD8", Offset = "0xBA8CD8", VA = "0xBA8CD8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xBA8D4C", Offset = "0xBA8D4C", VA = "0xBA8D4C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xBA8D84", Offset = "0xBA8D84", VA = "0xBA8D84")]
	public HeavyCopAutoRotate()
	{
	}
}
[Token(Token = "0x2000094")]
public class HeavyGangsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xBA8D8C", Offset = "0xBA8D8C", VA = "0xBA8D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xBA8E00", Offset = "0xBA8E00", VA = "0xBA8E00")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xBA8E38", Offset = "0xBA8E38", VA = "0xBA8E38")]
	public HeavyGangsterAutoRotate()
	{
	}
}
[Token(Token = "0x2000095")]
public class HeavyMobsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xBA8E40", Offset = "0xBA8E40", VA = "0xBA8E40")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xBA8EB4", Offset = "0xBA8EB4", VA = "0xBA8EB4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xBA8EEC", Offset = "0xBA8EEC", VA = "0xBA8EEC")]
	public HeavyMobsterAutoRotate()
	{
	}
}
[Token(Token = "0x2000096")]
public class MobsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xCEEB80", Offset = "0xCEEB80", VA = "0xCEEB80")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xCEEBF4", Offset = "0xCEEBF4", VA = "0xCEEBF4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xCEEC2C", Offset = "0xCEEC2C", VA = "0xCEEC2C")]
	public MobsterAutoRotate()
	{
	}
}
[Token(Token = "0x2000097")]
public class ThinGangsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0x1061830", Offset = "0x1061830", VA = "0x1061830")]
	private void Start()
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0x10618A4", Offset = "0x10618A4", VA = "0x10618A4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0x10618DC", Offset = "0x10618DC", VA = "0x10618DC")]
	public ThinGangsterAutoRotate()
	{
	}
}
[Token(Token = "0x2000098")]
public class ThinMobsterAutoRotate : MonoBehaviour
{
	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0x10618E4", Offset = "0x10618E4", VA = "0x10618E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0x1061958", Offset = "0x1061958", VA = "0x1061958")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0x1061990", Offset = "0x1061990", VA = "0x1061990")]
	public ThinMobsterAutoRotate()
	{
	}
}
[Token(Token = "0x2000099")]
public class UrbanWeaponsAutoRotate : MonoBehaviour
{
	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 rotation;

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xC339B0", Offset = "0xC339B0", VA = "0xC339B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xC33A24", Offset = "0xC33A24", VA = "0xC33A24")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xC33A5C", Offset = "0xC33A5C", VA = "0xC33A5C")]
	public UrbanWeaponsAutoRotate()
	{
	}
}
[Token(Token = "0x200009A")]
public class CameraShake : MonoBehaviour
{
	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform camTransform;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static float shakeDuration;

	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
	public static float shakeAmount;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float decreaseFactor;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 originalPos;

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xDBFED8", Offset = "0xDBFED8", VA = "0xDBFED8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xDC001C", Offset = "0xDC001C", VA = "0xDC001C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xDC0054", Offset = "0xDC0054", VA = "0xDC0054")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xDC0250", Offset = "0xDC0250", VA = "0xDC0250")]
	public CameraShake()
	{
	}
}
[Token(Token = "0x200009B")]
public class CameraShakeCaller : MonoBehaviour
{
	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float ProjectileShakeDuration;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float ProjectileShakeAmount;

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xDC02C0", Offset = "0xDC02C0", VA = "0xDC02C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xDC0344", Offset = "0xDC0344", VA = "0xDC0344")]
	private void Update()
	{
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xDC0348", Offset = "0xDC0348", VA = "0xDC0348")]
	public CameraShakeCaller()
	{
	}
}
[Token(Token = "0x200009C")]
public class CameraShakeProjectile : MonoBehaviour
{
	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator CamerShakeAnimator;

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xDC035C", Offset = "0xDC035C", VA = "0xDC035C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xDC0360", Offset = "0xDC0360", VA = "0xDC0360")]
	private void Update()
	{
	}

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xDC0364", Offset = "0xDC0364", VA = "0xDC0364")]
	public void ShakeCamera()
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xDC03BC", Offset = "0xDC03BC", VA = "0xDC03BC")]
	public CameraShakeProjectile()
	{
	}
}
[Token(Token = "0x200009D")]
public class EffectActor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003FA")]
	public class projectile
	{
		[Token(Token = "0x4001F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject bombPrefab;

		[Token(Token = "0x4001F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform bombPrefabTransform;

		[Token(Token = "0x6001B39")]
		[Address(RVA = "0x19AF664", Offset = "0x19AF664", VA = "0x19AF664")]
		public projectile()
		{
		}
	}

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocator;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public projectile[] bombList;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private string FauxName;

	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text UiText;

	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public int bombType;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float min;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float max;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public bool MinorRotate;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
	public bool MajorRotate;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int seq;

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xC01A5C", Offset = "0xC01A5C", VA = "0xC01A5C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xC01B64", Offset = "0xC01B64", VA = "0xC01B64")]
	private void Update()
	{
	}

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xC01C24", Offset = "0xC01C24", VA = "0xC01C24")]
	public void Switch(int value)
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xC01D74", Offset = "0xC01D74", VA = "0xC01D74")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xC01F08", Offset = "0xC01F08", VA = "0xC01F08")]
	private void RandomizeRotation()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xC0200C", Offset = "0xC0200C", VA = "0xC0200C")]
	private void Major_RandomizeRotation()
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xC020F0", Offset = "0xC020F0", VA = "0xC020F0")]
	public EffectActor()
	{
	}
}
[Token(Token = "0x200009E")]
public class ExplodingProjectile : MonoBehaviour
{
	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject impactPrefab;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject explosionPrefab;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float thrust;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody thisRigidbody;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject particleKillGroup;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider thisCollider;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool LookRotation;

	[Token(Token = "0x4000334")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool Missile;

	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform missileTarget;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float projectileSpeed;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float projectileSpeedMultiplier;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool ignorePrevRotation;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
	public bool explodeOnTimer;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	public float explosionTimer;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float timer;

	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Vector3 previousPosition;

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xB9BBD4", Offset = "0xB9BBD4", VA = "0xB9BBD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xB9BCD8", Offset = "0xB9BCD8", VA = "0xB9BCD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xB9BE64", Offset = "0xB9BE64", VA = "0xB9BE64")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xB9BF7C", Offset = "0xB9BF7C", VA = "0xB9BF7C")]
	private void CheckCollision(Vector3 prevPos)
	{
	}

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xB9C260", Offset = "0xB9C260", VA = "0xB9C260")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xB9BD38", Offset = "0xB9BD38", VA = "0xB9BD38")]
	private void Explode()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xB9C50C", Offset = "0xB9C50C", VA = "0xB9C50C")]
	public ExplodingProjectile()
	{
	}
}
[Token(Token = "0x200009F")]
public class Projectile : MonoBehaviour
{
	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float disappearAfterTime;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float disappearTimer;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool isActive;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 direction;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startPosition;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float movementSpeed;

	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 targetPosition;

	[Token(Token = "0x4000344")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float distanceToTarget;

	[Token(Token = "0x4000345")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float movementValue;

	[Token(Token = "0x600040C")]
	[Address(RVA = "0x1B6DE98", Offset = "0x1B6DE98", VA = "0x1B6DE98")]
	private void Start()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0x1B6DE9C", Offset = "0x1B6DE9C", VA = "0x1B6DE9C")]
	private void Update()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0x1B6DF5C", Offset = "0x1B6DF5C", VA = "0x1B6DF5C")]
	private void Move()
	{
	}

	[Token(Token = "0x600040F")]
	[Address(RVA = "0x1B6DFDC", Offset = "0x1B6DFDC", VA = "0x1B6DFDC")]
	private void MoveWithoutTargetHit()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0x1B6E060", Offset = "0x1B6E060", VA = "0x1B6E060")]
	public void Fire(Vector3 target, Vector3 spawnPosition, Vector3 Direction, float speed)
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0x1B6DF50", Offset = "0x1B6DF50", VA = "0x1B6DF50")]
	private void Explode()
	{
	}

	[Token(Token = "0x6000412")]
	[Address(RVA = "0x1B6E170", Offset = "0x1B6E170", VA = "0x1B6E170")]
	public bool GetIsActive()
	{
		return default(bool);
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0x1B6E178", Offset = "0x1B6E178", VA = "0x1B6E178")]
	public Projectile()
	{
	}
}
[Token(Token = "0x20000A0")]
public class projectileActor : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003FB")]
	public class projectile
	{
		[Token(Token = "0x4001F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody bombPrefab;

		[Token(Token = "0x4001F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject muzzleflare;

		[Token(Token = "0x4001F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float min;

		[Token(Token = "0x4001F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float max;

		[Token(Token = "0x4001F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool rapidFire;

		[Token(Token = "0x4001F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rapidFireCooldown;

		[Token(Token = "0x4001F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool shotgunBehavior;

		[Token(Token = "0x4001F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int shotgunPellets;

		[Token(Token = "0x4001F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject shellPrefab;

		[Token(Token = "0x4001F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool hasShells;

		[Token(Token = "0x6001B3A")]
		[Address(RVA = "0xD2F084", Offset = "0xD2F084", VA = "0xD2F084")]
		public projectile()
		{
		}
	}

	[Token(Token = "0x4000346")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform spawnLocator;

	[Token(Token = "0x4000347")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnLocatorMuzzleFlare;

	[Token(Token = "0x4000348")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform shellLocator;

	[Token(Token = "0x4000349")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Animator recoilAnimator;

	[Token(Token = "0x400034A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] shotgunLocator;

	[Token(Token = "0x400034B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public projectile[] bombList;

	[Token(Token = "0x400034C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private string FauxName;

	[Token(Token = "0x400034D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Text UiText;

	[Token(Token = "0x400034E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool UImaster;

	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	public bool CameraShake;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float rapidFireDelay;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public CameraShakeProjectile CameraShakeCaller;

	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float firingTimer;

	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public bool firing;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public int bombType;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public bool swarmMissileLauncher;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
	public bool Torque;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float Tor_min;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float Tor_max;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public bool MinorRotate;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
	public bool MajorRotate;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private int seq;

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xFFBDB4", Offset = "0xFFBDB4", VA = "0xFFBDB4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xFFBE48", Offset = "0xFFBE48", VA = "0xFFBE48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xFFC058", Offset = "0xFFC058", VA = "0xFFC058")]
	public void Switch(int value)
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xFFC11C", Offset = "0xFFC11C", VA = "0xFFC11C")]
	public void Fire()
	{
	}

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xFFC6B4", Offset = "0xFFC6B4", VA = "0xFFC6B4")]
	private void RandomizeRotation()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xFFC7B8", Offset = "0xFFC7B8", VA = "0xFFC7B8")]
	private void Major_RandomizeRotation()
	{
	}

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xFFC89C", Offset = "0xFFC89C", VA = "0xFFC89C")]
	public projectileActor()
	{
	}
}
[Token(Token = "0x20000A1")]
public class destroyMe : MonoBehaviour
{
	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private float timer;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float deathtimer;

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xC3D020", Offset = "0xC3D020", VA = "0xC3D020")]
	private void Start()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xC3D024", Offset = "0xC3D024", VA = "0xC3D024")]
	private void Update()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xC3D0D4", Offset = "0xC3D0D4", VA = "0xC3D0D4")]
	public destroyMe()
	{
	}
}
[Token(Token = "0x20000A2")]
[ExecuteInEditMode]
public class particleColorChangerMaster : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20003FC")]
	public class colorChange
	{
		[Token(Token = "0x4001F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string Name;

		[Token(Token = "0x4001F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ParticleSystem[] colored_ParticleSystem;

		[Token(Token = "0x4001F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Gradient Gradient_custom;

		[Token(Token = "0x6001B3B")]
		[Address(RVA = "0xD2E684", Offset = "0xD2E684", VA = "0xD2E684")]
		public colorChange()
		{
		}
	}

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Speed_custom;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public colorChange[] colorChangeList;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool applyChanges;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool Keep_applyChanges;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xFF40EC", Offset = "0xFF40EC", VA = "0xFF40EC")]
	private void Start()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xFF40F0", Offset = "0xFF40F0", VA = "0xFF40F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xFF42A4", Offset = "0xFF42A4", VA = "0xFF42A4")]
	public particleColorChangerMaster()
	{
	}
}
[Token(Token = "0x20000A3")]
public class LightFlickerEffect : MonoBehaviour
{
	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D5B4", Offset = "0x84D5B4")]
	public Light _light;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D5EC", Offset = "0x84D5EC")]
	public float minIntensity;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D624", Offset = "0x84D624")]
	public float maxIntensity;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D65C", Offset = "0x84D65C")]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84D65C", Offset = "0x84D65C")]
	public int smoothing;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Queue<float> smoothQueue;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float lastSum;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xCE3CD8", Offset = "0xCE3CD8", VA = "0xCE3CD8")]
	public void Reset()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xCE3D34", Offset = "0xCE3D34", VA = "0xCE3D34")]
	private void Start()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xCE3E50", Offset = "0xCE3E50", VA = "0xCE3E50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xCE3FA0", Offset = "0xCE3FA0", VA = "0xCE3FA0")]
	public LightFlickerEffect()
	{
	}
}
[Token(Token = "0x20000A4")]
public class NextPrefab : MonoBehaviour
{
	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] m_PrefabList;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int m_CurrentElementIndex;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private int m_CurrentParticleIndex;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject[] m_CurrentElementList;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject m_CurrentParticle;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text m_ParticleName;

	[Token(Token = "0x6000425")]
	[Address(RVA = "0x1565FEC", Offset = "0x1565FEC", VA = "0x1565FEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0x15661BC", Offset = "0x15661BC", VA = "0x15661BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0x156601C", Offset = "0x156601C", VA = "0x156601C")]
	private void ShowParticle()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0x1566248", Offset = "0x1566248", VA = "0x1566248")]
	public NextPrefab()
	{
	}
}
[Token(Token = "0x20000A5")]
[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8477AC", Offset = "0x8477AC")]
public class UserCamera : MonoBehaviour
{
	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float yOffset;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float distance;

	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float xSpeed;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float ySpeed;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMinLimit;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float yMaxLimit;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float distanceMin;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float distanceMax;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float x;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float y;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xC33A64", Offset = "0xC33A64", VA = "0xC33A64")]
	private void Start()
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xC33A9C", Offset = "0xC33A9C", VA = "0xC33A9C")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xC33D94", Offset = "0xC33D94", VA = "0xC33D94")]
	public static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xC33DC4", Offset = "0xC33DC4", VA = "0xC33DC4")]
	public UserCamera()
	{
	}
}
[Token(Token = "0x20000A6")]
public class MuzzleFlash : MonoBehaviour
{
	[Token(Token = "0x600042D")]
	[Address(RVA = "0x1563AEC", Offset = "0x1563AEC", VA = "0x1563AEC")]
	private void Update()
	{
	}

	[Token(Token = "0x600042E")]
	[Address(RVA = "0x1563BE0", Offset = "0x1563BE0", VA = "0x1563BE0")]
	public MuzzleFlash()
	{
	}
}
[Token(Token = "0x20000A7")]
public class CUI_MoveAlong : MonoBehaviour
{
	[Token(Token = "0x600042F")]
	[Address(RVA = "0xDB779C", Offset = "0xDB779C", VA = "0xDB779C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xDB77A0", Offset = "0xDB77A0", VA = "0xDB77A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xDB79C8", Offset = "0xDB79C8", VA = "0xDB79C8")]
	public CUI_MoveAlong()
	{
	}
}
[Token(Token = "0x20000A8")]
public class CUI_MoveHeartbeat : MonoBehaviour
{
	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float speed;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool wrapAroundParent;

	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform rectie;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RectTransform parentRectie;

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xDB79D0", Offset = "0xDB79D0", VA = "0xDB79D0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xDB7A88", Offset = "0xDB7A88", VA = "0xDB7A88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xDB7BAC", Offset = "0xDB7BAC", VA = "0xDB7BAC")]
	public CUI_MoveHeartbeat()
	{
	}
}
[Token(Token = "0x20000A9")]
public class CUI_rotation_anim : MonoBehaviour
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Rotation;

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xDB933C", Offset = "0xDB933C", VA = "0xDB933C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xDB9340", Offset = "0xDB9340", VA = "0xDB9340")]
	private void Update()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xDB9528", Offset = "0xDB9528", VA = "0xDB9528")]
	public CUI_rotation_anim()
	{
	}
}
[Token(Token = "0x20000AA")]
public class CUI_ShowParentCoordinates : MonoBehaviour
{
	[Token(Token = "0x6000438")]
	[Address(RVA = "0xDB8518", Offset = "0xDB8518", VA = "0xDB8518")]
	private void Start()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xDB85EC", Offset = "0xDB85EC", VA = "0xDB85EC")]
	private void Update()
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xDB85F0", Offset = "0xDB85F0", VA = "0xDB85F0")]
	public CUI_ShowParentCoordinates()
	{
	}
}
[Token(Token = "0x20000AB")]
public class CUI_touchpad : MonoBehaviour
{
	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private RectTransform container;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private RectTransform dot;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xDB9530", Offset = "0xDB9530", VA = "0xDB9530")]
	private void Awake()
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xDB95A4", Offset = "0xDB95A4", VA = "0xDB95A4")]
	private void MoveDotOnTouchpadAxisChanged(object o, ViveInputArgs args)
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xDB9664", Offset = "0xDB9664", VA = "0xDB9664")]
	public CUI_touchpad()
	{
	}
}
[Token(Token = "0x20000AC")]
[ExecuteInEditMode]
public class CurvedUIInputModule : BaseInputModule
{
	[Token(Token = "0x20003FD")]
	public enum CUIControlMethod
	{
		[Token(Token = "0x4001F4C")]
		MOUSE = 0,
		[Token(Token = "0x4001F4D")]
		GAZE = 1,
		[Token(Token = "0x4001F4E")]
		WORLD_MOUSE = 2,
		[Token(Token = "0x4001F4F")]
		CUSTOM_RAY = 3,
		[Token(Token = "0x4001F50")]
		STEAMVR_LEGACY = 4,
		[Token(Token = "0x4001F51")]
		OCULUSVR = 5,
		[Token(Token = "0x4001F52")]
		STEAMVR_2 = 8,
		[Token(Token = "0x4001F53")]
		UNITY_XR = 9
	}

	[Token(Token = "0x20003FE")]
	public enum Hand
	{
		[Token(Token = "0x4001F55")]
		Both,
		[Token(Token = "0x4001F56")]
		Right,
		[Token(Token = "0x4001F57")]
		Left
	}

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private CUIControlMethod controlMethod;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	private string submitButtonName;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Camera mainEventCamera;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private LayerMask raycastLayerMask;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[SerializeField]
	private bool gazeUseTimedClick;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private float gazeClickTimer;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[SerializeField]
	private float gazeClickTimerDelay;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[SerializeField]
	private Image gazeTimedClickProgressImage;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	private float worldSpaceMouseSensitivity;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[SerializeField]
	private Hand usedHand;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private Transform pointerTransformOverride;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static bool disableOtherInputModulesOnStart;

	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static CurvedUIInputModule instance;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private GameObject currentDragging;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private GameObject currentPointedAt;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private GameObject m_rightController;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private GameObject m_leftController;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float gazeTimerProgress;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private Ray customControllerRay;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
	private float dragThreshold;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private bool pressedDown;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
	private bool pressedLastFrame;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private Vector2 lastEventDataPosition;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private PointerInputModule.MouseButtonEventData storedData;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Vector3 lastMouseOnScreenPos;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private Vector2 worldSpaceMouseInCanvasSpace;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector2 lastWorldSpaceMouseOnCanvas;

	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector2 worldSpaceMouseOnCanvasDelta;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	[SerializeField]
	private XRBaseController rightXRController;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	[SerializeField]
	private XRBaseController leftXRController;

	[Token(Token = "0x17000035")]
	public static CurvedUIInputModule Instance
	{
		[Token(Token = "0x6000452")]
		[Address(RVA = "0xC4FE60", Offset = "0xC4FE60", VA = "0xC4FE60")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000453")]
		[Address(RVA = "0xC53390", Offset = "0xC53390", VA = "0xC53390")]
		private set
		{
		}
	}

	[Token(Token = "0x17000036")]
	public static bool CanInstanceBeAccessed
	{
		[Token(Token = "0x6000454")]
		[Address(RVA = "0xC53404", Offset = "0xC53404", VA = "0xC53404")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public static CUIControlMethod ControlMethod
	{
		[Token(Token = "0x6000455")]
		[Address(RVA = "0xC5045C", Offset = "0xC5045C", VA = "0xC5045C")]
		get
		{
			return default(CUIControlMethod);
		}
		[Token(Token = "0x6000456")]
		[Address(RVA = "0xC534A0", Offset = "0xC534A0", VA = "0xC534A0")]
		set
		{
		}
	}

	[Token(Token = "0x17000038")]
	public LayerMask RaycastLayerMask
	{
		[Token(Token = "0x6000457")]
		[Address(RVA = "0xC53540", Offset = "0xC53540", VA = "0xC53540")]
		get
		{
			return default(LayerMask);
		}
		[Token(Token = "0x6000458")]
		[Address(RVA = "0xC53548", Offset = "0xC53548", VA = "0xC53548")]
		set
		{
		}
	}

	[Token(Token = "0x17000039")]
	public Hand UsedHand
	{
		[Token(Token = "0x6000459")]
		[Address(RVA = "0xC53550", Offset = "0xC53550", VA = "0xC53550")]
		get
		{
			return default(Hand);
		}
		[Token(Token = "0x600045A")]
		[Address(RVA = "0xC53558", Offset = "0xC53558", VA = "0xC53558")]
		set
		{
		}
	}

	[Token(Token = "0x1700003A")]
	public Transform ControllerTransform
	{
		[Token(Token = "0x600045B")]
		[Address(RVA = "0xC50684", Offset = "0xC50684", VA = "0xC50684")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003B")]
	public Vector3 ControllerPointingDirection
	{
		[Token(Token = "0x600045C")]
		[Address(RVA = "0xC507BC", Offset = "0xC507BC", VA = "0xC507BC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700003C")]
	public Vector3 ControllerPointingOrigin
	{
		[Token(Token = "0x600045D")]
		[Address(RVA = "0xC535D0", Offset = "0xC535D0", VA = "0xC535D0")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700003D")]
	public Transform PointerTransformOverride
	{
		[Token(Token = "0x600045E")]
		[Address(RVA = "0xC53560", Offset = "0xC53560", VA = "0xC53560")]
		get
		{
			return null;
		}
		[Token(Token = "0x600045F")]
		[Address(RVA = "0xC5073C", Offset = "0xC5073C", VA = "0xC5073C")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public GameObject CurrentPointedAt
	{
		[Token(Token = "0x6000460")]
		[Address(RVA = "0xC535F0", Offset = "0xC535F0", VA = "0xC535F0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700003F")]
	public Camera EventCamera
	{
		[Token(Token = "0x6000461")]
		[Address(RVA = "0xC535F8", Offset = "0xC535F8", VA = "0xC535F8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000462")]
		[Address(RVA = "0xC51418", Offset = "0xC51418", VA = "0xC51418")]
		set
		{
		}
	}

	[Token(Token = "0x17000040")]
	public static Vector2 MousePosition
	{
		[Token(Token = "0x6000464")]
		[Address(RVA = "0xC5387C", Offset = "0xC5387C", VA = "0xC5387C")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000041")]
	public static bool LeftMouseButton
	{
		[Token(Token = "0x6000465")]
		[Address(RVA = "0xC53984", Offset = "0xC53984", VA = "0xC53984")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000042")]
	public static Ray CustomControllerRay
	{
		[Token(Token = "0x6000466")]
		[Address(RVA = "0xC53904", Offset = "0xC53904", VA = "0xC53904")]
		get
		{
			return default(Ray);
		}
		[Token(Token = "0x6000467")]
		[Address(RVA = "0xC530DC", Offset = "0xC530DC", VA = "0xC530DC")]
		set
		{
		}
	}

	[Token(Token = "0x17000043")]
	public static bool CustomControllerButtonState
	{
		[Token(Token = "0x6000468")]
		[Address(RVA = "0xC539E4", Offset = "0xC539E4", VA = "0xC539E4")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000469")]
		[Address(RVA = "0xC53064", Offset = "0xC53064", VA = "0xC53064")]
		set
		{
		}
	}

	[Token(Token = "0x17000044")]
	[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85EBF4", Offset = "0x85EBF4")]
	public static bool CustomControllerButtonDown
	{
		[Token(Token = "0x600046A")]
		[Address(RVA = "0xC53A4C", Offset = "0xC53A4C", VA = "0xC53A4C")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600046B")]
		[Address(RVA = "0xC53AA4", Offset = "0xC53AA4", VA = "0xC53AA4")]
		set
		{
		}
	}

	[Token(Token = "0x17000045")]
	public Vector2 WorldSpaceMouseInCanvasSpace
	{
		[Token(Token = "0x600046C")]
		[Address(RVA = "0xC53B0C", Offset = "0xC53B0C", VA = "0xC53B0C")]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600046D")]
		[Address(RVA = "0xC53B14", Offset = "0xC53B14", VA = "0xC53B14")]
		set
		{
		}
	}

	[Token(Token = "0x17000046")]
	public Vector2 WorldSpaceMouseInCanvasSpaceDelta
	{
		[Token(Token = "0x600046E")]
		[Address(RVA = "0xC53B20", Offset = "0xC53B20", VA = "0xC53B20")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x17000047")]
	public float WorldSpaceMouseSensitivity
	{
		[Token(Token = "0x600046F")]
		[Address(RVA = "0xC53B34", Offset = "0xC53B34", VA = "0xC53B34")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000470")]
		[Address(RVA = "0xC53B3C", Offset = "0xC53B3C", VA = "0xC53B3C")]
		set
		{
		}
	}

	[Token(Token = "0x17000048")]
	public bool GazeUseTimedClick
	{
		[Token(Token = "0x6000471")]
		[Address(RVA = "0xC53B44", Offset = "0xC53B44", VA = "0xC53B44")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000472")]
		[Address(RVA = "0xC53B4C", Offset = "0xC53B4C", VA = "0xC53B4C")]
		set
		{
		}
	}

	[Token(Token = "0x17000049")]
	public float GazeClickTimer
	{
		[Token(Token = "0x6000473")]
		[Address(RVA = "0xC53B58", Offset = "0xC53B58", VA = "0xC53B58")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000474")]
		[Address(RVA = "0xC53B60", Offset = "0xC53B60", VA = "0xC53B60")]
		set
		{
		}
	}

	[Token(Token = "0x1700004A")]
	public float GazeClickTimerDelay
	{
		[Token(Token = "0x6000475")]
		[Address(RVA = "0xC53B8C", Offset = "0xC53B8C", VA = "0xC53B8C")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000476")]
		[Address(RVA = "0xC53B94", Offset = "0xC53B94", VA = "0xC53B94")]
		set
		{
		}
	}

	[Token(Token = "0x1700004B")]
	public float GazeTimerProgress
	{
		[Token(Token = "0x6000477")]
		[Address(RVA = "0xC53BC0", Offset = "0xC53BC0", VA = "0xC53BC0")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x1700004C")]
	public Image GazeTimedClickProgressImage
	{
		[Token(Token = "0x6000478")]
		[Address(RVA = "0xC53BC8", Offset = "0xC53BC8", VA = "0xC53BC8")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000479")]
		[Address(RVA = "0xC53BD0", Offset = "0xC53BD0", VA = "0xC53BD0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004D")]
	public XRBaseController RightXRController
	{
		[Token(Token = "0x600047A")]
		[Address(RVA = "0xC53BD8", Offset = "0xC53BD8", VA = "0xC53BD8")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047B")]
		[Address(RVA = "0xC53BE0", Offset = "0xC53BE0", VA = "0xC53BE0")]
		set
		{
		}
	}

	[Token(Token = "0x1700004E")]
	public XRBaseController LeftXRController
	{
		[Token(Token = "0x600047C")]
		[Address(RVA = "0xC53BF0", Offset = "0xC53BF0", VA = "0xC53BF0")]
		get
		{
			return null;
		}
		[Token(Token = "0x600047D")]
		[Address(RVA = "0xC53BF8", Offset = "0xC53BF8", VA = "0xC53BF8")]
		set
		{
		}
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xC51270", Offset = "0xC51270", VA = "0xC51270", Slot = "4")]
	protected override void Awake()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xC516B8", Offset = "0xC516B8", VA = "0xC516B8", Slot = "6")]
	protected override void Start()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xC516F4", Offset = "0xC516F4", VA = "0xC516F4", Slot = "27")]
	protected virtual void Update()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xC514D4", Offset = "0xC514D4", VA = "0xC514D4")]
	private void SetupUnityXrControllers()
	{
	}

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xC5192C", Offset = "0xC5192C", VA = "0xC5192C", Slot = "17")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xC51AC8", Offset = "0xC51AC8", VA = "0xC51AC8")]
	protected PointerInputModule.MouseButtonEventData GetEventData()
	{
		return null;
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xC51D6C", Offset = "0xC51D6C", VA = "0xC51D6C")]
	private void ProcessMove(PointerEventData eventData, GameObject currentRaycastTarget)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xC52388", Offset = "0xC52388", VA = "0xC52388")]
	private void ProcessButton(PointerInputModule.MouseButtonEventData button, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xC52AC8", Offset = "0xC52AC8", VA = "0xC52AC8")]
	private void ProcessDrag(PointerInputModule.MouseButtonEventData button, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xC52DC4", Offset = "0xC52DC4", VA = "0xC52DC4")]
	private static void ProcessScroll(PointerInputModule.MouseButtonEventData button, PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xC52EF0", Offset = "0xC52EF0", VA = "0xC52EF0")]
	private void ProcessUnityXrController()
	{
	}

	[Token(Token = "0x6000449")]
	[Address(RVA = "0xC53174", Offset = "0xC53174", VA = "0xC53174", Slot = "28")]
	protected virtual void ProcessMouseController()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xC532C0", Offset = "0xC532C0", VA = "0xC532C0", Slot = "29")]
	protected virtual void ProcessCustomRayController()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xC532C4", Offset = "0xC532C4", VA = "0xC532C4", Slot = "30")]
	protected virtual void ProcessGaze()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xC504C4", Offset = "0xC504C4", VA = "0xC504C4")]
	public void GetXrControllerButtonState(bool pressed, Hand checkHand)
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xC53038", Offset = "0xC53038", VA = "0xC53038")]
	private PointerEventData.FramePressState CustomRayFramePressedState()
	{
		return default(PointerEventData.FramePressState);
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xC53384", Offset = "0xC53384", VA = "0xC53384", Slot = "31")]
	protected virtual void ProcessViveControllers()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xC53388", Offset = "0xC53388", VA = "0xC53388", Slot = "32")]
	protected virtual void ProcessOculusVRController()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xC5338C", Offset = "0xC5338C", VA = "0xC5338C")]
	private void ProcessSteamVR2Controllers()
	{
	}

	[Token(Token = "0x6000451")]
	private static T EnableInputModule<T>() where T : BaseInputModule
	{
		return null;
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xC53600", Offset = "0xC53600", VA = "0xC53600")]
	public Ray GetEventRay([Optional] Camera eventCam)
	{
		return default(Ray);
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xC53C08", Offset = "0xC53C08", VA = "0xC53C08")]
	public CurvedUIInputModule()
	{
	}
}
[Token(Token = "0x20000AD")]
[DisallowMultipleComponent]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x20003FF")]
	public enum Mode
	{
		[Token(Token = "0x4001F59")]
		OutlineAll,
		[Token(Token = "0x4001F5A")]
		OutlineVisible,
		[Token(Token = "0x4001F5B")]
		OutlineHidden,
		[Token(Token = "0x4001F5C")]
		OutlineAndSilhouette,
		[Token(Token = "0x4001F5D")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x2000400")]
	private class ListVector3
	{
		[Token(Token = "0x4001F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x6001B3C")]
		[Address(RVA = "0x19DB080", Offset = "0x19DB080", VA = "0x19DB080")]
		public ListVector3()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000401")]
	[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8495C4", Offset = "0x8495C4")]
	private sealed class <>c
	{
		[Token(Token = "0x4001F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly <>c <>9;

		[Token(Token = "0x4001F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Func<Vector3, int, KeyValuePair<Vector3, int>> <>9__33_0;

		[Token(Token = "0x4001F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Func<KeyValuePair<Vector3, int>, Vector3> <>9__33_1;

		[Token(Token = "0x6001B3E")]
		[Address(RVA = "0x19DAF80", Offset = "0x19DAF80", VA = "0x19DAF80")]
		public <>c()
		{
		}

		[Token(Token = "0x6001B3F")]
		[Address(RVA = "0x19DAF88", Offset = "0x19DAF88", VA = "0x19DAF88")]
		internal KeyValuePair<Vector3, int> <SmoothNormals>b__33_0(Vector3 vertex, int index)
		{
			return default(KeyValuePair<Vector3, int>);
		}

		[Token(Token = "0x6001B40")]
		[Address(RVA = "0x19DB01C", Offset = "0x19DB01C", VA = "0x19DB01C")]
		internal Vector3 <SmoothNormals>b__33_1(KeyValuePair<Vector3, int> pair)
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool onlyTeleports;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84D7B4", Offset = "0x84D7B4")]
	private float outlineWidth;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84D7F4", Offset = "0x84D7F4")]
	[SerializeField]
	[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84D7F4", Offset = "0x84D7F4")]
	private bool precomputeOutline;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	[HideInInspector]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<Renderer> renderers;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x1700004F")]
	public Mode OutlineMode
	{
		[Token(Token = "0x6000480")]
		[Address(RVA = "0x1B629DC", Offset = "0x1B629DC", VA = "0x1B629DC")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x6000481")]
		[Address(RVA = "0x1B629E4", Offset = "0x1B629E4", VA = "0x1B629E4")]
		set
		{
		}
	}

	[Token(Token = "0x17000050")]
	public Color OutlineColor
	{
		[Token(Token = "0x6000482")]
		[Address(RVA = "0x1B629F4", Offset = "0x1B629F4", VA = "0x1B629F4")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000483")]
		[Address(RVA = "0x1B62A00", Offset = "0x1B62A00", VA = "0x1B62A00")]
		set
		{
		}
	}

	[Token(Token = "0x17000051")]
	public float OutlineWidth
	{
		[Token(Token = "0x6000484")]
		[Address(RVA = "0x1B62A14", Offset = "0x1B62A14", VA = "0x1B62A14")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000485")]
		[Address(RVA = "0x1B62A1C", Offset = "0x1B62A1C", VA = "0x1B62A1C")]
		set
		{
		}
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0x1B62A2C", Offset = "0x1B62A2C", VA = "0x1B62A2C")]
	public void Test()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0x1B62B4C", Offset = "0x1B62B4C", VA = "0x1B62B4C")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0x1B63188", Offset = "0x1B63188", VA = "0x1B63188")]
	public void ReCache()
	{
	}

	[Token(Token = "0x6000489")]
	[Address(RVA = "0x1B63824", Offset = "0x1B63824", VA = "0x1B63824")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0x1B63A00", Offset = "0x1B63A00", VA = "0x1B63A00")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0x1B63AF8", Offset = "0x1B63AF8", VA = "0x1B63AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0x1B63CC8", Offset = "0x1B63CC8", VA = "0x1B63CC8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0x1B63EA4", Offset = "0x1B63EA4", VA = "0x1B63EA4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600048E")]
	[Address(RVA = "0x1B6363C", Offset = "0x1B6363C", VA = "0x1B6363C")]
	private void Bake()
	{
	}

	[Token(Token = "0x600048F")]
	[Address(RVA = "0x1B62E64", Offset = "0x1B62E64", VA = "0x1B62E64")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x6000490")]
	[Address(RVA = "0x1B63F20", Offset = "0x1B63F20", VA = "0x1B63F20")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x6000491")]
	[Address(RVA = "0x1B63B0C", Offset = "0x1B63B0C", VA = "0x1B63B0C")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0x1B649AC", Offset = "0x1B649AC", VA = "0x1B649AC")]
	public Outline()
	{
	}
}
namespace ReachableGames.AutoProbe
{
	[Token(Token = "0x20000AE")]
	[ExecuteInEditMode]
	public class AutoProbe : MonoBehaviour
	{
		[Token(Token = "0x6000494")]
		[Address(RVA = "0x1198DDC", Offset = "0x1198DDC", VA = "0x1198DDC")]
		public AutoProbe()
		{
		}
	}
	[Token(Token = "0x20000AF")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x847814", Offset = "0x847814")]
	public class ForceLightProbeHere : MonoBehaviour
	{
		[Token(Token = "0x6000495")]
		[Address(RVA = "0xBA1CF4", Offset = "0xBA1CF4", VA = "0xBA1CF4")]
		public ForceLightProbeHere()
		{
		}
	}
	[Token(Token = "0x20000B0")]
	public class FlyCamera : MonoBehaviour
	{
		[Token(Token = "0x40003AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x40003AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float MouseSensitivity;

		[Token(Token = "0x40003AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool InvertMouse;

		[Token(Token = "0x6000496")]
		[Address(RVA = "0xBA1968", Offset = "0xBA1968", VA = "0xBA1968")]
		private void Start()
		{
		}

		[Token(Token = "0x6000497")]
		[Address(RVA = "0xBA198C", Offset = "0xBA198C", VA = "0xBA198C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000498")]
		[Address(RVA = "0xBA1CB0", Offset = "0xBA1CB0", VA = "0xBA1CB0")]
		private float MakeRelative(float euler)
		{
			return default(float);
		}

		[Token(Token = "0x6000499")]
		[Address(RVA = "0xBA1CE4", Offset = "0xBA1CE4", VA = "0xBA1CE4")]
		public FlyCamera()
		{
		}
	}
	[Token(Token = "0x20000B1")]
	public class RotationPerFrame : MonoBehaviour
	{
		[Token(Token = "0x40003AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 rotPerFrame;

		[Token(Token = "0x600049A")]
		[Address(RVA = "0xDD77D4", Offset = "0xDD77D4", VA = "0xDD77D4")]
		private void Update()
		{
		}

		[Token(Token = "0x600049B")]
		[Address(RVA = "0xDD780C", Offset = "0xDD780C", VA = "0xDD780C")]
		public RotationPerFrame()
		{
		}
	}
	[Token(Token = "0x20000B2")]
	public class ToggleOnAndOff : MonoBehaviour
	{
		[Token(Token = "0x40003AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float frequency;

		[Token(Token = "0x600049C")]
		[Address(RVA = "0x1061998", Offset = "0x1061998", VA = "0x1061998")]
		private void Start()
		{
		}

		[Token(Token = "0x600049D")]
		[Address(RVA = "0x10619F8", Offset = "0x10619F8", VA = "0x10619F8")]
		public void Toggling()
		{
		}

		[Token(Token = "0x600049E")]
		[Address(RVA = "0x1061A4C", Offset = "0x1061A4C", VA = "0x1061A4C")]
		public ToggleOnAndOff()
		{
		}
	}
}
namespace Sirenix.Serialization
{
	[Token(Token = "0x20000B3")]
	public class Vector2IntFormatter : MinimalBaseFormatter<Vector2Int>
	{
		[Token(Token = "0x40003AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Serializer<int> Serializer;

		[Token(Token = "0x600049F")]
		[Address(RVA = "0xC35088", Offset = "0xC35088", VA = "0xC35088", Slot = "10")]
		protected override void Read(Vector2Int value, IDataReader reader)
		{
		}

		[Token(Token = "0x60004A0")]
		[Address(RVA = "0xC3513C", Offset = "0xC3513C", VA = "0xC3513C", Slot = "11")]
		protected override void Write(Vector2Int value, IDataWriter writer)
		{
		}

		[Token(Token = "0x60004A1")]
		[Address(RVA = "0xC351F8", Offset = "0xC351F8", VA = "0xC351F8")]
		public Vector2IntFormatter()
		{
		}
	}
	[Token(Token = "0x20000B4")]
	public class Vector3IntFormatter : MinimalBaseFormatter<Vector3Int>
	{
		[Token(Token = "0x40003B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Serializer<int> Serializer;

		[Token(Token = "0x60004A3")]
		[Address(RVA = "0xC35314", Offset = "0xC35314", VA = "0xC35314", Slot = "10")]
		protected override void Read(Vector3Int value, IDataReader reader)
		{
		}

		[Token(Token = "0x60004A4")]
		[Address(RVA = "0xC3540C", Offset = "0xC3540C", VA = "0xC3540C", Slot = "11")]
		protected override void Write(Vector3Int value, IDataWriter writer)
		{
		}

		[Token(Token = "0x60004A5")]
		[Address(RVA = "0xC35520", Offset = "0xC35520", VA = "0xC35520")]
		public Vector3IntFormatter()
		{
		}
	}
}
namespace CurvedUI
{
	[Token(Token = "0x20000B5")]
	public class CUI_AnimateCurvedFillOnStart : MonoBehaviour
	{
		[Token(Token = "0x60004A7")]
		[Address(RVA = "0xF4A4F4", Offset = "0xF4A4F4", VA = "0xF4A4F4")]
		private void Update()
		{
		}

		[Token(Token = "0x60004A8")]
		[Address(RVA = "0xF4A690", Offset = "0xF4A690", VA = "0xF4A690")]
		public CUI_AnimateCurvedFillOnStart()
		{
		}
	}
	[Token(Token = "0x20000B6")]
	public class CUI_CameraController : MonoBehaviour
	{
		[Token(Token = "0x40003B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform CameraObject;

		[Token(Token = "0x40003B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float rotationMargin;

		[Token(Token = "0x40003B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private bool runInEditorOnly;

		[Token(Token = "0x40003B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CUI_CameraController Instance;

		[Token(Token = "0x60004A9")]
		[Address(RVA = "0xF4A698", Offset = "0xF4A698", VA = "0xF4A698")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004AA")]
		[Address(RVA = "0xF4A6F4", Offset = "0xF4A6F4", VA = "0xF4A6F4")]
		public CUI_CameraController()
		{
		}
	}
	[Token(Token = "0x20000B7")]
	public class CUI_CameraRotationOnButtonHeld : MonoBehaviour
	{
		[Token(Token = "0x40003B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float Sensitivity;

		[Token(Token = "0x40003B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector2 _oldMousePos;

		[Token(Token = "0x60004AB")]
		[Address(RVA = "0xF4A70C", Offset = "0xF4A70C", VA = "0xF4A70C")]
		private void Start()
		{
		}

		[Token(Token = "0x60004AC")]
		[Address(RVA = "0xF4A77C", Offset = "0xF4A77C", VA = "0xF4A77C")]
		public CUI_CameraRotationOnButtonHeld()
		{
		}
	}
	[Token(Token = "0x20000B8")]
	public class CUI_ChangeColor : MonoBehaviour
	{
		[Token(Token = "0x60004AD")]
		[Address(RVA = "0xF4A78C", Offset = "0xF4A78C", VA = "0xF4A78C")]
		public void ChangeColorToBlue()
		{
		}

		[Token(Token = "0x60004AE")]
		[Address(RVA = "0xF4A80C", Offset = "0xF4A80C", VA = "0xF4A80C")]
		public void ChangeColorToCyan()
		{
		}

		[Token(Token = "0x60004AF")]
		[Address(RVA = "0xF4A88C", Offset = "0xF4A88C", VA = "0xF4A88C")]
		public void ChangeColorToWhite()
		{
		}

		[Token(Token = "0x60004B0")]
		[Address(RVA = "0xF4A90C", Offset = "0xF4A90C", VA = "0xF4A90C")]
		public CUI_ChangeColor()
		{
		}
	}
	[Token(Token = "0x20000B9")]
	public class CUI_ChangeValueOnHold : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x40003B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool pressed;

		[Token(Token = "0x40003B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool selected;

		[Token(Token = "0x40003B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Image bg;

		[Token(Token = "0x40003BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color SelectedColor;

		[Token(Token = "0x40003BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Color NormalColor;

		[Token(Token = "0x40003BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private CanvasGroup IntroCG;

		[Token(Token = "0x40003BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CanvasGroup MenuCG;

		[Token(Token = "0x60004B1")]
		[Address(RVA = "0xF4A914", Offset = "0xF4A914", VA = "0xF4A914")]
		private void Update()
		{
		}

		[Token(Token = "0x60004B2")]
		[Address(RVA = "0xF4A994", Offset = "0xF4A994", VA = "0xF4A994")]
		private void ChangeVal()
		{
		}

		[Token(Token = "0x60004B3")]
		[Address(RVA = "0xF4AAF0", Offset = "0xF4AAF0", VA = "0xF4AAF0", Slot = "4")]
		public void OnPointerEnter(PointerEventData data)
		{
		}

		[Token(Token = "0x60004B4")]
		[Address(RVA = "0xF4AB80", Offset = "0xF4AB80", VA = "0xF4AB80", Slot = "5")]
		public void OnPointerExit(PointerEventData data)
		{
		}

		[Token(Token = "0x60004B5")]
		[Address(RVA = "0xF4AC0C", Offset = "0xF4AC0C", VA = "0xF4AC0C")]
		public CUI_ChangeValueOnHold()
		{
		}
	}
	[Token(Token = "0x20000BA")]
	public class CUI_DragBetweenCanvases : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x40003BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 dragPoint;

		[Token(Token = "0x60004B6")]
		[Address(RVA = "0xDB6A48", Offset = "0xDB6A48", VA = "0xDB6A48", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60004B7")]
		[Address(RVA = "0xDB6D34", Offset = "0xDB6D34", VA = "0xDB6D34", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60004B8")]
		[Address(RVA = "0xDB70FC", Offset = "0xDB70FC", VA = "0xDB70FC", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60004B9")]
		[Address(RVA = "0xDB6B70", Offset = "0xDB6B70", VA = "0xDB6B70")]
		private void RaycastPosition([Out] Vector2 newPos)
		{
		}

		[Token(Token = "0x60004BA")]
		[Address(RVA = "0xDB7170", Offset = "0xDB7170", VA = "0xDB7170")]
		public CUI_DragBetweenCanvases()
		{
		}
	}
	[Token(Token = "0x20000BB")]
	public class CUI_draggable : MonoBehaviour, IBeginDragHandler, IEventSystemHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x40003BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector2 savedVector;

		[Token(Token = "0x40003C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool isDragged;

		[Token(Token = "0x60004BB")]
		[Address(RVA = "0xDB8BF4", Offset = "0xDB8BF4", VA = "0xDB8BF4", Slot = "4")]
		public void OnBeginDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60004BC")]
		[Address(RVA = "0xDB8EE8", Offset = "0xDB8EE8", VA = "0xDB8EE8", Slot = "6")]
		public void OnDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60004BD")]
		[Address(RVA = "0xDB8EEC", Offset = "0xDB8EEC", VA = "0xDB8EEC", Slot = "5")]
		public void OnEndDrag(PointerEventData data)
		{
		}

		[Token(Token = "0x60004BE")]
		[Address(RVA = "0xDB8F74", Offset = "0xDB8F74", VA = "0xDB8F74")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60004BF")]
		[Address(RVA = "0xDB8D24", Offset = "0xDB8D24", VA = "0xDB8D24")]
		private void RaycastPosition([Out] Vector2 newPos)
		{
		}

		[Token(Token = "0x60004C0")]
		[Address(RVA = "0xDB9070", Offset = "0xDB9070", VA = "0xDB9070")]
		public CUI_draggable()
		{
		}
	}
	[Token(Token = "0x20000BC")]
	public class CUI_GunController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000402")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8495D4", Offset = "0x8495D4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F62")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F63")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__2_0;

			[Token(Token = "0x6001B42")]
			[Address(RVA = "0x19AC14C", Offset = "0x19AC14C", VA = "0x19AC14C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B43")]
			[Address(RVA = "0x19AC154", Offset = "0x19AC154", VA = "0x19AC154")]
			internal bool <Update>b__2_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40003C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings ControlledCanvas;

		[Token(Token = "0x40003C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x60004C1")]
		[Address(RVA = "0xDB7178", Offset = "0xDB7178", VA = "0xDB7178")]
		private void Update()
		{
		}

		[Token(Token = "0x60004C2")]
		[Address(RVA = "0xDB7590", Offset = "0xDB7590", VA = "0xDB7590")]
		public CUI_GunController()
		{
		}
	}
	[Token(Token = "0x20000BD")]
	public class CUI_GunMovement : MonoBehaviour
	{
		[Token(Token = "0x40003C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40003C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform pivot;

		[Token(Token = "0x40003C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x40003C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector2 lastMouse;

		[Token(Token = "0x60004C3")]
		[Address(RVA = "0xDB7598", Offset = "0xDB7598", VA = "0xDB7598")]
		private void Start()
		{
		}

		[Token(Token = "0x60004C4")]
		[Address(RVA = "0xDB7608", Offset = "0xDB7608", VA = "0xDB7608")]
		private void Update()
		{
		}

		[Token(Token = "0x60004C5")]
		[Address(RVA = "0xDB7788", Offset = "0xDB7788", VA = "0xDB7788")]
		public CUI_GunMovement()
		{
		}
	}
	[Token(Token = "0x20000BE")]
	public class CUI_inventory_paralax : MonoBehaviour
	{
		[Token(Token = "0x40003C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform front;

		[Token(Token = "0x40003C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform back;

		[Token(Token = "0x40003C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 initFG;

		[Token(Token = "0x40003CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 initBG;

		[Token(Token = "0x40003CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float change;

		[Token(Token = "0x60004C6")]
		[Address(RVA = "0xDB9078", Offset = "0xDB9078", VA = "0xDB9078")]
		private void Start()
		{
		}

		[Token(Token = "0x60004C7")]
		[Address(RVA = "0xDB90C8", Offset = "0xDB90C8", VA = "0xDB90C8")]
		private void Update()
		{
		}

		[Token(Token = "0x60004C8")]
		[Address(RVA = "0xDB932C", Offset = "0xDB932C", VA = "0xDB932C")]
		public CUI_inventory_paralax()
		{
		}
	}
	[Token(Token = "0x20000BF")]
	public class CUI_OrientOnCurvedSpace : MonoBehaviour
	{
		[Token(Token = "0x40003CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings mySettings;

		[Token(Token = "0x60004C9")]
		[Address(RVA = "0xDB7BBC", Offset = "0xDB7BBC", VA = "0xDB7BBC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60004CA")]
		[Address(RVA = "0xDB7C20", Offset = "0xDB7C20", VA = "0xDB7C20")]
		private void Update()
		{
		}

		[Token(Token = "0x60004CB")]
		[Address(RVA = "0xDB7DC8", Offset = "0xDB7DC8", VA = "0xDB7DC8")]
		public CUI_OrientOnCurvedSpace()
		{
		}
	}
	[Token(Token = "0x20000C0")]
	public class CUI_PerlinNoisePosition : MonoBehaviour
	{
		[Token(Token = "0x40003CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x40003CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector2 Range;

		[Token(Token = "0x40003CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private RectTransform rectie;

		[Token(Token = "0x60004CC")]
		[Address(RVA = "0xDB7DD0", Offset = "0xDB7DD0", VA = "0xDB7DD0")]
		private void Start()
		{
		}

		[Token(Token = "0x60004CD")]
		[Address(RVA = "0xDB7E44", Offset = "0xDB7E44", VA = "0xDB7E44")]
		private void Update()
		{
		}

		[Token(Token = "0x60004CE")]
		[Address(RVA = "0xDB7F38", Offset = "0xDB7F38", VA = "0xDB7F38")]
		public CUI_PerlinNoisePosition()
		{
		}
	}
	[Token(Token = "0x20000C1")]
	public class CUI_PerlinNoiseRotation : MonoBehaviour
	{
		[Token(Token = "0x40003D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float samplingSpeed;

		[Token(Token = "0x40003D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxrotation;

		[Token(Token = "0x40003D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform rectie;

		[Token(Token = "0x60004CF")]
		[Address(RVA = "0xDB7F48", Offset = "0xDB7F48", VA = "0xDB7F48")]
		private void Start()
		{
		}

		[Token(Token = "0x60004D0")]
		[Address(RVA = "0xDB7FBC", Offset = "0xDB7FBC", VA = "0xDB7FBC")]
		private void Update()
		{
		}

		[Token(Token = "0x60004D1")]
		[Address(RVA = "0xDB8048", Offset = "0xDB8048", VA = "0xDB8048")]
		public CUI_PerlinNoiseRotation()
		{
		}
	}
	[Token(Token = "0x20000C2")]
	public class CUI_PickImageFromSet : MonoBehaviour
	{
		[Token(Token = "0x40003D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static CUI_PickImageFromSet picked;

		[Token(Token = "0x60004D2")]
		[Address(RVA = "0xDB805C", Offset = "0xDB805C", VA = "0xDB805C")]
		public void PickThis()
		{
		}

		[Token(Token = "0x60004D3")]
		[Address(RVA = "0xDB8254", Offset = "0xDB8254", VA = "0xDB8254")]
		public CUI_PickImageFromSet()
		{
		}
	}
	[Token(Token = "0x20000C3")]
	public class CUI_RaycastToCanvas : MonoBehaviour
	{
		[Token(Token = "0x40003D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x60004D5")]
		[Address(RVA = "0xDB8260", Offset = "0xDB8260", VA = "0xDB8260")]
		private void Start()
		{
		}

		[Token(Token = "0x60004D6")]
		[Address(RVA = "0xDB82C4", Offset = "0xDB82C4", VA = "0xDB82C4")]
		private void Update()
		{
		}

		[Token(Token = "0x60004D7")]
		[Address(RVA = "0xDB8384", Offset = "0xDB8384", VA = "0xDB8384")]
		public CUI_RaycastToCanvas()
		{
		}
	}
	[Token(Token = "0x20000C4")]
	public class CUI_RiseChildrenOverTime : MonoBehaviour
	{
		[Token(Token = "0x40003D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float current;

		[Token(Token = "0x40003D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Speed;

		[Token(Token = "0x40003D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float RiseBy;

		[Token(Token = "0x60004D8")]
		[Address(RVA = "0xDB838C", Offset = "0xDB838C", VA = "0xDB838C")]
		private void Start()
		{
		}

		[Token(Token = "0x60004D9")]
		[Address(RVA = "0xDB8390", Offset = "0xDB8390", VA = "0xDB8390")]
		private void Update()
		{
		}

		[Token(Token = "0x60004DA")]
		[Address(RVA = "0xDB8504", Offset = "0xDB8504", VA = "0xDB8504")]
		public CUI_RiseChildrenOverTime()
		{
		}
	}
	[Token(Token = "0x20000C5")]
	public class CUI_TMPChecker : MonoBehaviour
	{
		[Token(Token = "0x40003D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject testMsg;

		[Token(Token = "0x40003D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject enabledMsg;

		[Token(Token = "0x40003DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject disabledMsg;

		[Token(Token = "0x60004DB")]
		[Address(RVA = "0xDB85F8", Offset = "0xDB85F8", VA = "0xDB85F8")]
		private void Start()
		{
		}

		[Token(Token = "0x60004DC")]
		[Address(RVA = "0xDB8674", Offset = "0xDB8674", VA = "0xDB8674")]
		public CUI_TMPChecker()
		{
		}
	}
	[Token(Token = "0x20000C6")]
	public class CUI_ViveButtonState : MonoBehaviour
	{
		[Token(Token = "0x2000403")]
		private enum ViveButton
		{
			[Token(Token = "0x4001F65")]
			Trigger,
			[Token(Token = "0x4001F66")]
			TouchpadTouch,
			[Token(Token = "0x4001F67")]
			TouchpadPress,
			[Token(Token = "0x4001F68")]
			Grip,
			[Token(Token = "0x4001F69")]
			Menu
		}

		[Token(Token = "0x40003DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Color ActiveColor;

		[Token(Token = "0x40003DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Color InActiveColor;

		[Token(Token = "0x40003DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ViveButton ShowStateFor;

		[Token(Token = "0x60004DD")]
		[Address(RVA = "0xDB867C", Offset = "0xDB867C", VA = "0xDB867C")]
		public CUI_ViveButtonState()
		{
		}
	}
	[Token(Token = "0x20000C7")]
	public class CUI_ViveHapticPulse : MonoBehaviour
	{
		[Token(Token = "0x40003DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float PulseStrength;

		[Token(Token = "0x60004DE")]
		[Address(RVA = "0xDB86C0", Offset = "0xDB86C0", VA = "0xDB86C0")]
		private void Start()
		{
		}

		[Token(Token = "0x60004DF")]
		[Address(RVA = "0xDB86CC", Offset = "0xDB86CC", VA = "0xDB86CC")]
		public void SetPulseStrength(float newStr)
		{
		}

		[Token(Token = "0x60004E0")]
		[Address(RVA = "0xDB86FC", Offset = "0xDB86FC", VA = "0xDB86FC")]
		public void TriggerPulse()
		{
		}

		[Token(Token = "0x60004E1")]
		[Address(RVA = "0xDB8700", Offset = "0xDB8700", VA = "0xDB8700")]
		public CUI_ViveHapticPulse()
		{
		}
	}
	[Token(Token = "0x20000C8")]
	public class CUI_WorldSpaceCursorFollow : MonoBehaviour
	{
		[Token(Token = "0x40003DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x60004E2")]
		[Address(RVA = "0xDB8708", Offset = "0xDB8708", VA = "0xDB8708")]
		private void Start()
		{
		}

		[Token(Token = "0x60004E3")]
		[Address(RVA = "0xDB883C", Offset = "0xDB883C", VA = "0xDB883C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004E4")]
		[Address(RVA = "0xDB88D8", Offset = "0xDB88D8", VA = "0xDB88D8")]
		public CUI_WorldSpaceCursorFollow()
		{
		}
	}
	[Token(Token = "0x20000C9")]
	public class CUI_WorldSpaceMouseMultipleCanvases : MonoBehaviour
	{
		[Token(Token = "0x40003E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<CurvedUISettings> ControlledCanvases;

		[Token(Token = "0x40003E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform WorldSpaceMouse;

		[Token(Token = "0x40003E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private CurvedUISettings MouseCanvas;

		[Token(Token = "0x60004E5")]
		[Address(RVA = "0xDB88E0", Offset = "0xDB88E0", VA = "0xDB88E0")]
		private void Update()
		{
		}

		[Token(Token = "0x60004E6")]
		[Address(RVA = "0xDB8BEC", Offset = "0xDB8BEC", VA = "0xDB8BEC")]
		public CUI_WorldSpaceMouseMultipleCanvases()
		{
		}
	}
	[Token(Token = "0x20000CA")]
	public class CurvedUIEventSystem : EventSystem
	{
		[Token(Token = "0x40003E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CurvedUIEventSystem instance;

		[Token(Token = "0x60004E7")]
		[Address(RVA = "0xC4FB94", Offset = "0xC4FB94", VA = "0xC4FB94", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60004E8")]
		[Address(RVA = "0xC4FBFC", Offset = "0xC4FBFC", VA = "0xC4FBFC")]
		public CurvedUIEventSystem()
		{
		}
	}
	[Token(Token = "0x20000CB")]
	public static class CurvedUIExtensionMethods
	{
		[Token(Token = "0x60004E9")]
		[Address(RVA = "0xC4FC68", Offset = "0xC4FC68", VA = "0xC4FC68")]
		public static bool AlmostEqual(this Vector3 a, Vector3 b, double accuracy = 0.01)
		{
			return default(bool);
		}

		[Token(Token = "0x60004EA")]
		[Address(RVA = "0xC4FC98", Offset = "0xC4FC98", VA = "0xC4FC98")]
		public static float Remap(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60004EB")]
		[Address(RVA = "0xC4FCB4", Offset = "0xC4FCB4", VA = "0xC4FCB4")]
		public static float RemapAndClamp(this float value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60004EC")]
		[Address(RVA = "0xC4FCE4", Offset = "0xC4FCE4", VA = "0xC4FCE4")]
		public static float Remap(this int value, float from1, float to1, float from2, float to2)
		{
			return default(float);
		}

		[Token(Token = "0x60004ED")]
		[Address(RVA = "0xC4FD04", Offset = "0xC4FD04", VA = "0xC4FD04")]
		public static double Remap(this double value, double from1, double to1, double from2, double to2)
		{
			return default(double);
		}

		[Token(Token = "0x60004EE")]
		[Address(RVA = "0xC4FCDC", Offset = "0xC4FCDC", VA = "0xC4FCDC")]
		public static float Clamp(this float value, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x60004EF")]
		[Address(RVA = "0xC4FD20", Offset = "0xC4FD20", VA = "0xC4FD20")]
		public static float Clamp(this int value, int min, int max)
		{
			return default(float);
		}

		[Token(Token = "0x60004F0")]
		[Address(RVA = "0xC4FD3C", Offset = "0xC4FD3C", VA = "0xC4FD3C")]
		public static int Abs(this int value)
		{
			return default(int);
		}

		[Token(Token = "0x60004F1")]
		[Address(RVA = "0xC4FD44", Offset = "0xC4FD44", VA = "0xC4FD44")]
		public static float Abs(this float value)
		{
			return default(float);
		}

		[Token(Token = "0x60004F2")]
		[Address(RVA = "0xC4FD4C", Offset = "0xC4FD4C", VA = "0xC4FD4C")]
		public static int ToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60004F3")]
		[Address(RVA = "0xC4FD54", Offset = "0xC4FD54", VA = "0xC4FD54")]
		public static int FloorToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60004F4")]
		[Address(RVA = "0xC4FD5C", Offset = "0xC4FD5C", VA = "0xC4FD5C")]
		public static int CeilToInt(this float value)
		{
			return default(int);
		}

		[Token(Token = "0x60004F5")]
		[Address(RVA = "0xC4FD64", Offset = "0xC4FD64", VA = "0xC4FD64")]
		public static Vector3 ModifyX(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004F6")]
		[Address(RVA = "0xC4FD6C", Offset = "0xC4FD6C", VA = "0xC4FD6C")]
		public static Vector3 ModifyY(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004F7")]
		[Address(RVA = "0xC4FD74", Offset = "0xC4FD74", VA = "0xC4FD74")]
		public static Vector3 ModifyZ(this Vector3 trans, float newVal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60004F8")]
		[Address(RVA = "0xC4FD7C", Offset = "0xC4FD7C", VA = "0xC4FD7C")]
		public static Vector2 ModifyVectorX(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004F9")]
		[Address(RVA = "0xC4FD84", Offset = "0xC4FD84", VA = "0xC4FD84")]
		public static Vector2 ModifyVectorY(this Vector2 trans, float newVal)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60004FA")]
		[Address(RVA = "0xC4FD8C", Offset = "0xC4FD8C", VA = "0xC4FD8C")]
		public static void ResetTransform(this Transform trans)
		{
		}

		[Token(Token = "0x60004FB")]
		public static T AddComponentIfMissing<T>(this GameObject go) where T : Component
		{
			return null;
		}

		[Token(Token = "0x60004FC")]
		public static T AddComponentIfMissing<T>(this Component go) where T : Component
		{
			return null;
		}
	}
	[Token(Token = "0x20000CC")]
	public class CurvedUIHandSwitcher : MonoBehaviour
	{
		[Token(Token = "0x40003E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject LaserBeam;

		[Token(Token = "0x40003E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84DA74", Offset = "0x84DA74")]
		private bool autoSwitchHands;

		[Token(Token = "0x40003E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84DAC0", Offset = "0x84DAC0")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84DAC0", Offset = "0x84DAC0")]
		private Transform leftHandOverride;

		[Token(Token = "0x40003E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84DB30", Offset = "0x84DB30")]
		private Transform rightHandOverride;

		[Token(Token = "0x60004FD")]
		[Address(RVA = "0xC4FDE8", Offset = "0xC4FDE8", VA = "0xC4FDE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60004FE")]
		[Address(RVA = "0xC5023C", Offset = "0xC5023C", VA = "0xC5023C")]
		private void Update()
		{
		}

		[Token(Token = "0x60004FF")]
		[Address(RVA = "0xC4FF78", Offset = "0xC4FF78", VA = "0xC4FF78")]
		private void SwitchHandTo(CurvedUIInputModule.Hand newHand)
		{
		}

		[Token(Token = "0x6000500")]
		[Address(RVA = "0xC507DC", Offset = "0xC507DC", VA = "0xC507DC")]
		public CurvedUIHandSwitcher()
		{
		}
	}
	[Token(Token = "0x20000CD")]
	public class CurvedUIInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000404")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8495E4", Offset = "0x8495E4")]
		private sealed class <CaretBlinker>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F6A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F6B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F6C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUIInputFieldCaret <>4__this;

			[Token(Token = "0x1700021E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B47")]
				[Address(RVA = "0x19AD944", Offset = "0x19AD944", VA = "0x19AD944", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700021F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B49")]
				[Address(RVA = "0x19AD98C", Offset = "0x19AD98C", VA = "0x19AD98C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B44")]
			[Address(RVA = "0x19AD7F4", Offset = "0x19AD7F4", VA = "0x19AD7F4")]
			[DebuggerHidden]
			public <CaretBlinker>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001B45")]
			[Address(RVA = "0x19AD820", Offset = "0x19AD820", VA = "0x19AD820", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B46")]
			[Address(RVA = "0x19AD824", Offset = "0x19AD824", VA = "0x19AD824", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B48")]
			[Address(RVA = "0x19AD94C", Offset = "0x19AD94C", VA = "0x19AD94C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40003E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private InputField myField;

		[Token(Token = "0x40003E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x40003EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x40003EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x40003EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x40003ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x40003EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private int lastCharDist;

		[Token(Token = "0x17000052")]
		public Color CaretColor
		{
			[Token(Token = "0x6000509")]
			[Address(RVA = "0xC511F0", Offset = "0xC511F0", VA = "0xC511F0")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600050A")]
			[Address(RVA = "0xC511FC", Offset = "0xC511FC", VA = "0xC511FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000053")]
		public Color SelectionColor
		{
			[Token(Token = "0x600050B")]
			[Address(RVA = "0xC51208", Offset = "0xC51208", VA = "0xC51208")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x600050C")]
			[Address(RVA = "0xC51214", Offset = "0xC51214", VA = "0xC51214")]
			set
			{
			}
		}

		[Token(Token = "0x17000054")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x600050D")]
			[Address(RVA = "0xC51220", Offset = "0xC51220", VA = "0xC51220")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600050E")]
			[Address(RVA = "0xC51240", Offset = "0xC51240", VA = "0xC51240")]
			set
			{
			}
		}

		[Token(Token = "0x6000501")]
		[Address(RVA = "0xC507EC", Offset = "0xC507EC", VA = "0xC507EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000502")]
		[Address(RVA = "0xC50850", Offset = "0xC50850", VA = "0xC50850")]
		private void Update()
		{
		}

		[Token(Token = "0x6000503")]
		[Address(RVA = "0xC50B20", Offset = "0xC50B20", VA = "0xC50B20", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000504")]
		[Address(RVA = "0xC50F88", Offset = "0xC50F88", VA = "0xC50F88", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x6000505")]
		[Address(RVA = "0xC50F08", Offset = "0xC50F08", VA = "0xC50F08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855F40", Offset = "0x855F40")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x6000506")]
		[Address(RVA = "0xC50BE4", Offset = "0xC50BE4", VA = "0xC50BE4")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x6000507")]
		[Address(RVA = "0xC50860", Offset = "0xC50860", VA = "0xC50860")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x6000508")]
		[Address(RVA = "0xC50FC0", Offset = "0xC50FC0", VA = "0xC50FC0")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x600050F")]
		[Address(RVA = "0xC51260", Offset = "0xC51260", VA = "0xC51260")]
		public CurvedUIInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x20000CE")]
	public class CurvedUILaserBeam : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000405")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8495F4", Offset = "0x8495F4")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F6D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F6E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__3_0;

			[Token(Token = "0x6001B4B")]
			[Address(RVA = "0x19AD9F8", Offset = "0x19AD9F8", VA = "0x19AD9F8")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B4C")]
			[Address(RVA = "0x19ADA00", Offset = "0x19ADA00", VA = "0x19ADA00")]
			internal bool <Update>b__3_0(GameObject x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40003EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform LaserBeamTransform;

		[Token(Token = "0x40003F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform LaserBeamDot;

		[Token(Token = "0x40003F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool hideWhenNotAimingAtCanvas;

		[Token(Token = "0x6000510")]
		[Address(RVA = "0xC53D20", Offset = "0xC53D20", VA = "0xC53D20")]
		protected void Update()
		{
		}

		[Token(Token = "0x6000511")]
		[Address(RVA = "0xC54160", Offset = "0xC54160", VA = "0xC54160")]
		public CurvedUILaserBeam()
		{
		}
	}
	[Token(Token = "0x20000CF")]
	public class CurvedUIPhysicsRaycaster : BaseRaycaster
	{
		[Token(Token = "0x40003F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected int sortOrder;

		[Token(Token = "0x40003F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private RaycastHit hitInfo;

		[Token(Token = "0x40003F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastResult result;

		[Token(Token = "0x17000055")]
		public int CompoundEventMask
		{
			[Token(Token = "0x6000514")]
			[Address(RVA = "0xC54470", Offset = "0xC54470", VA = "0xC54470")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000056")]
		public override Camera eventCamera
		{
			[Token(Token = "0x6000515")]
			[Address(RVA = "0xC5457C", Offset = "0xC5457C", VA = "0xC5457C", Slot = "18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000057")]
		public virtual int Depth
		{
			[Token(Token = "0x6000516")]
			[Address(RVA = "0xC5464C", Offset = "0xC5464C", VA = "0xC5464C", Slot = "22")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000058")]
		public override int sortOrderPriority
		{
			[Token(Token = "0x6000517")]
			[Address(RVA = "0xC54710", Offset = "0xC54710", VA = "0xC54710", Slot = "20")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000512")]
		[Address(RVA = "0xC54168", Offset = "0xC54168", VA = "0xC54168")]
		protected CurvedUIPhysicsRaycaster()
		{
		}

		[Token(Token = "0x6000513")]
		[Address(RVA = "0xC54178", Offset = "0xC54178", VA = "0xC54178", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}
	}
	[Token(Token = "0x20000D0")]
	public class CurvedUIPointerEventData : PointerEventData
	{
		[Token(Token = "0x2000406")]
		public enum ControllerType
		{
			[Token(Token = "0x4001F70")]
			NONE = -1,
			[Token(Token = "0x4001F71")]
			VIVE
		}

		[Token(Token = "0x40003F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public GameObject Controller;

		[Token(Token = "0x40003F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public Vector2 TouchPadAxis;

		[Token(Token = "0x6000518")]
		[Address(RVA = "0xC54718", Offset = "0xC54718", VA = "0xC54718")]
		public CurvedUIPointerEventData(EventSystem eventSystem)
		{
		}
	}
	[Token(Token = "0x20000D1")]
	public class CurvedUIRaycaster : GraphicRaycaster
	{
		[Serializable]
		[Token(Token = "0x2000407")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849604", Offset = "0x849604")]
		private sealed class <>c
		{
			[Token(Token = "0x4001F72")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4001F73")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<GameObject> <>9__21_0;

			[Token(Token = "0x4001F74")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<Graphic> <>9__32_0;

			[Token(Token = "0x4001F75")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Comparison<Graphic> <>9__55_0;

			[Token(Token = "0x6001B4E")]
			[Address(RVA = "0x19ADB60", Offset = "0x19ADB60", VA = "0x19ADB60")]
			public <>c()
			{
			}

			[Token(Token = "0x6001B4F")]
			[Address(RVA = "0x19ADB68", Offset = "0x19ADB68", VA = "0x19ADB68")]
			internal bool <Update>b__21_0(GameObject obj)
			{
				return default(bool);
			}

			[Token(Token = "0x6001B50")]
			[Address(RVA = "0x19ADC34", Offset = "0x19ADC34", VA = "0x19ADC34")]
			internal int <FlatRaycastAndSort>b__32_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}

			[Token(Token = "0x6001B51")]
			[Address(RVA = "0x19ADC8C", Offset = "0x19ADC8C", VA = "0x19ADC8C")]
			internal int <GetObjectsHitByRay>b__55_0(Graphic g1, Graphic g2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40003F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private bool showDebug;

		[Token(Token = "0x40003F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		private bool overrideEventData;

		[Token(Token = "0x40003F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Canvas myCanvas;

		[Token(Token = "0x40003FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x40003FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 cyllinderMidPoint;

		[Token(Token = "0x40003FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<GameObject> objectsUnderPointer;

		[Token(Token = "0x40003FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector2 lastCanvasPos;

		[Token(Token = "0x40003FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private GameObject colliderContainer;

		[Token(Token = "0x40003FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private PointerEventData lastFrameEventData;

		[Token(Token = "0x4000400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private PointerEventData curEventData;

		[Token(Token = "0x4000401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private PointerEventData eventDataToUse;

		[Token(Token = "0x4000402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Ray cachedRay;

		[Token(Token = "0x4000403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Graphic gph;

		[Token(Token = "0x4000404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private List<GameObject> selectablesUnderGaze;

		[Token(Token = "0x4000405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private List<GameObject> selectablesUnderGazeLastFrame;

		[Token(Token = "0x4000406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private float objectsUnderGazeLastChangeTime;

		[Token(Token = "0x4000407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private bool gazeClickExecuted;

		[Token(Token = "0x4000408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		private bool pointingAtCanvas;

		[Token(Token = "0x4000409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCE")]
		private bool pointingAtCanvasLastFrame;

		[NonSerialized]
		[Token(Token = "0x400040A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private List<Graphic> m_RaycastResults;

		[NonSerialized]
		[Token(Token = "0x400040B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<Graphic> s_SortedGraphics;

		[Token(Token = "0x17000059")]
		private Image GazeProgressImage
		{
			[Token(Token = "0x600052C")]
			[Address(RVA = "0xC55624", Offset = "0xC55624", VA = "0xC55624")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005A")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x6000535")]
			[Address(RVA = "0xC5B8C8", Offset = "0xC5B8C8", VA = "0xC5B8C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000519")]
		[Address(RVA = "0xC54754", Offset = "0xC54754", VA = "0xC54754", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600051A")]
		[Address(RVA = "0xC5486C", Offset = "0xC5486C", VA = "0xC5486C", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600051B")]
		[Address(RVA = "0xC55050", Offset = "0xC55050", VA = "0xC55050", Slot = "22")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x600051C")]
		[Address(RVA = "0xC55460", Offset = "0xC55460", VA = "0xC55460")]
		private void ProcessGazeTimedClick()
		{
		}

		[Token(Token = "0x600051D")]
		[Address(RVA = "0xC55434", Offset = "0xC55434", VA = "0xC55434")]
		private void ResetGazeTimedClick()
		{
		}

		[Token(Token = "0x600051E")]
		[Address(RVA = "0xC55C20", Offset = "0xC55C20", VA = "0xC55C20", Slot = "17")]
		public override void Raycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x600051F")]
		[Address(RVA = "0xC56EE0", Offset = "0xC56EE0", VA = "0xC56EE0", Slot = "23")]
		public virtual bool RaycastToCyllinderCanvas(Ray ray3D, [Out] Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000520")]
		[Address(RVA = "0xC575EC", Offset = "0xC575EC", VA = "0xC575EC", Slot = "24")]
		public virtual bool RaycastToCyllinderVerticalCanvas(Ray ray3D, [Out] Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000521")]
		[Address(RVA = "0xC57BF0", Offset = "0xC57BF0", VA = "0xC57BF0", Slot = "25")]
		public virtual bool RaycastToRingCanvas(Ray ray3D, [Out] Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000522")]
		[Address(RVA = "0xC58100", Offset = "0xC58100", VA = "0xC58100", Slot = "26")]
		public virtual bool RaycastToSphereCanvas(Ray ray3D, [Out] Vector2 o_canvasPos, bool OutputInCanvasSpace = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000523")]
		[Address(RVA = "0xC5694C", Offset = "0xC5694C", VA = "0xC5694C")]
		private void FlatRaycast(PointerEventData eventData, List<RaycastResult> resultAppendList)
		{
		}

		[Token(Token = "0x6000524")]
		[Address(RVA = "0xC58AAC", Offset = "0xC58AAC", VA = "0xC58AAC")]
		private static void FlatRaycastAndSort(Canvas canvas, Camera eventCamera, Vector2 pointerPosition, IList<Graphic> foundGraphics, List<Graphic> results)
		{
		}

		[Token(Token = "0x6000525")]
		[Address(RVA = "0xC54B0C", Offset = "0xC54B0C", VA = "0xC54B0C")]
		protected void CreateCollider()
		{
		}

		[Token(Token = "0x6000526")]
		[Address(RVA = "0xC5A544", Offset = "0xC5A544", VA = "0xC5A544")]
		private void SetupMeshColliderUsingMesh(Mesh meshie)
		{
		}

		[Token(Token = "0x6000527")]
		[Address(RVA = "0xC58FDC", Offset = "0xC58FDC", VA = "0xC58FDC")]
		private GameObject CreateConvexCyllinderCollider(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6000528")]
		[Address(RVA = "0xC59BC0", Offset = "0xC59BC0", VA = "0xC59BC0")]
		private Mesh CreateCyllinderColliderMesh(bool vertical = false)
		{
			return null;
		}

		[Token(Token = "0x6000529")]
		[Address(RVA = "0xC5A5FC", Offset = "0xC5A5FC", VA = "0xC5A5FC")]
		private Mesh CreateSphereColliderMesh()
		{
			return null;
		}

		[Token(Token = "0x600052A")]
		[Address(RVA = "0xC5AF18", Offset = "0xC5AF18", VA = "0xC5AF18")]
		private bool IsInLayerMask(int layer, LayerMask layermask)
		{
			return default(bool);
		}

		[Token(Token = "0x600052B")]
		[Address(RVA = "0xC574E0", Offset = "0xC574E0", VA = "0xC574E0")]
		private LayerMask GetRaycastLayerMask()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x600052D")]
		[Address(RVA = "0xC57548", Offset = "0xC57548", VA = "0xC57548")]
		private float AngleSigned(Vector3 v1, Vector3 v2, Vector3 n)
		{
			return default(float);
		}

		[Token(Token = "0x600052E")]
		[Address(RVA = "0xC5AF70", Offset = "0xC5AF70", VA = "0xC5AF70")]
		private bool ShouldStartDrag(Vector2 pressPos, Vector2 currentPos, float threshold, bool useDragThreshold)
		{
			return default(bool);
		}

		[Token(Token = "0x600052F")]
		[Address(RVA = "0xC5AFC0", Offset = "0xC5AFC0", VA = "0xC5AFC0", Slot = "27")]
		protected virtual void ProcessMove(PointerEventData pointerEvent)
		{
		}

		[Token(Token = "0x6000530")]
		[Address(RVA = "0xC563AC", Offset = "0xC563AC", VA = "0xC563AC")]
		protected void UpdateSelectedObjects(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xC5AFDC", Offset = "0xC5AFDC", VA = "0xC5AFDC")]
		protected void HandlePointerExitAndEnter(PointerEventData currentPointerData, GameObject newEnterTarget)
		{
		}

		[Token(Token = "0x6000532")]
		[Address(RVA = "0xC5B610", Offset = "0xC5B610", VA = "0xC5B610")]
		protected static GameObject FindCommonRoot(GameObject g1, GameObject g2)
		{
			return null;
		}

		[Token(Token = "0x6000533")]
		[Address(RVA = "0xC5B7B0", Offset = "0xC5B7B0", VA = "0xC5B7B0")]
		private bool GetScreenSpacePointByRay(Ray ray, [Out] Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x6000534")]
		[Address(RVA = "0xC54904", Offset = "0xC54904", VA = "0xC54904")]
		private bool CheckEventCamera()
		{
			return default(bool);
		}

		[Token(Token = "0x6000536")]
		[Address(RVA = "0xC5B8D0", Offset = "0xC5B8D0", VA = "0xC5B8D0")]
		public void RebuildCollider()
		{
		}

		[Token(Token = "0x6000537")]
		[Address(RVA = "0xC5B910", Offset = "0xC5B910", VA = "0xC5B910")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6000538")]
		[Address(RVA = "0xC5B998", Offset = "0xC5B998", VA = "0xC5B998")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 screenPos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6000539")]
		[Address(RVA = "0xC5BA80", Offset = "0xC5BA80", VA = "0xC5BA80")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x600053A")]
		[Address(RVA = "0xC5568C", Offset = "0xC5568C", VA = "0xC5568C")]
		public void Click()
		{
		}

		[Token(Token = "0x600053B")]
		[Address(RVA = "0xC5ABFC", Offset = "0xC5ABFC", VA = "0xC5ABFC")]
		private void ModifyQuad(List<Vector3> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x600053C")]
		[Address(RVA = "0xC5BF7C", Offset = "0xC5BF7C", VA = "0xC5BF7C")]
		private Vector3 TesselateQuad(List<Vector3> quad, float x, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600053D")]
		[Address(RVA = "0xC5C130", Offset = "0xC5C130", VA = "0xC5C130")]
		public CurvedUIRaycaster()
		{
		}
	}
	[Token(Token = "0x20000D2")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x84789C", Offset = "0x84789C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x84789C", Offset = "0x84789C")]
	public class CurvedUISettings : MonoBehaviour
	{
		[Token(Token = "0x2000408")]
		public enum CurvedUIShape
		{
			[Token(Token = "0x4001F77")]
			CYLINDER,
			[Token(Token = "0x4001F78")]
			RING,
			[Token(Token = "0x4001F79")]
			SPHERE,
			[Token(Token = "0x4001F7A")]
			CYLINDER_VERTICAL
		}

		[Token(Token = "0x400040C")]
		public const string Version = "3.3";

		[Token(Token = "0x400040D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CurvedUIShape shape;

		[Token(Token = "0x400040E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float quality;

		[Token(Token = "0x400040F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private bool interactable;

		[Token(Token = "0x4000410")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[SerializeField]
		private bool blocksRaycasts;

		[Token(Token = "0x4000411")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[SerializeField]
		private bool forceUseBoxCollider;

		[Token(Token = "0x4000412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int angle;

		[Token(Token = "0x4000413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool preserveAspect;

		[Token(Token = "0x4000414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private int vertAngle;

		[Token(Token = "0x4000415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float ringFill;

		[Token(Token = "0x4000416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private int ringExternalDiamater;

		[Token(Token = "0x4000417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool ringFlipVertical;

		[Token(Token = "0x4000418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int baseCircleSegments;

		[Token(Token = "0x4000419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector2 savedRectSize;

		[Token(Token = "0x400041A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float savedRadius;

		[Token(Token = "0x400041B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Canvas myCanvas;

		[Token(Token = "0x400041C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RectTransform m_rectTransform;

		[Token(Token = "0x1700005B")]
		private RectTransform RectTransform
		{
			[Token(Token = "0x6000549")]
			[Address(RVA = "0xBF3A7C", Offset = "0xBF3A7C", VA = "0xBF3A7C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700005C")]
		public int BaseCircleSegments
		{
			[Token(Token = "0x6000552")]
			[Address(RVA = "0xBF53DC", Offset = "0xBF53DC", VA = "0xBF53DC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700005D")]
		public int Angle
		{
			[Token(Token = "0x6000553")]
			[Address(RVA = "0xBF53E4", Offset = "0xBF53E4", VA = "0xBF53E4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000554")]
			[Address(RVA = "0xBF53EC", Offset = "0xBF53EC", VA = "0xBF53EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700005E")]
		public float Quality
		{
			[Token(Token = "0x6000555")]
			[Address(RVA = "0xBF5400", Offset = "0xBF5400", VA = "0xBF5400")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000556")]
			[Address(RVA = "0xBF5408", Offset = "0xBF5408", VA = "0xBF5408")]
			set
			{
			}
		}

		[Token(Token = "0x1700005F")]
		public CurvedUIShape Shape
		{
			[Token(Token = "0x6000557")]
			[Address(RVA = "0xBF5424", Offset = "0xBF5424", VA = "0xBF5424")]
			get
			{
				return default(CurvedUIShape);
			}
			[Token(Token = "0x6000558")]
			[Address(RVA = "0xBF542C", Offset = "0xBF542C", VA = "0xBF542C")]
			set
			{
			}
		}

		[Token(Token = "0x17000060")]
		public int VerticalAngle
		{
			[Token(Token = "0x6000559")]
			[Address(RVA = "0xBF544C", Offset = "0xBF544C", VA = "0xBF544C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600055A")]
			[Address(RVA = "0xBF5454", Offset = "0xBF5454", VA = "0xBF5454")]
			set
			{
			}
		}

		[Token(Token = "0x17000061")]
		public float RingFill
		{
			[Token(Token = "0x600055B")]
			[Address(RVA = "0xBF5474", Offset = "0xBF5474", VA = "0xBF5474")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600055C")]
			[Address(RVA = "0xBF547C", Offset = "0xBF547C", VA = "0xBF547C")]
			set
			{
			}
		}

		[Token(Token = "0x17000062")]
		public float SavedRadius
		{
			[Token(Token = "0x600055D")]
			[Address(RVA = "0xBF45F0", Offset = "0xBF45F0", VA = "0xBF45F0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000063")]
		public int RingExternalDiameter
		{
			[Token(Token = "0x600055E")]
			[Address(RVA = "0xBF5498", Offset = "0xBF5498", VA = "0xBF5498")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x600055F")]
			[Address(RVA = "0xBF54A0", Offset = "0xBF54A0", VA = "0xBF54A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000064")]
		public bool RingFlipVertical
		{
			[Token(Token = "0x6000560")]
			[Address(RVA = "0xBF54C0", Offset = "0xBF54C0", VA = "0xBF54C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000561")]
			[Address(RVA = "0xBF54C8", Offset = "0xBF54C8", VA = "0xBF54C8")]
			set
			{
			}
		}

		[Token(Token = "0x17000065")]
		public bool PreserveAspect
		{
			[Token(Token = "0x6000562")]
			[Address(RVA = "0xBF54F4", Offset = "0xBF54F4", VA = "0xBF54F4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000563")]
			[Address(RVA = "0xBF54FC", Offset = "0xBF54FC", VA = "0xBF54FC")]
			set
			{
			}
		}

		[Token(Token = "0x17000066")]
		public bool Interactable
		{
			[Token(Token = "0x6000564")]
			[Address(RVA = "0xBF5528", Offset = "0xBF5528", VA = "0xBF5528")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000565")]
			[Address(RVA = "0xBF5530", Offset = "0xBF5530", VA = "0xBF5530")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public bool ForceUseBoxCollider
		{
			[Token(Token = "0x6000566")]
			[Address(RVA = "0xBF553C", Offset = "0xBF553C", VA = "0xBF553C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000567")]
			[Address(RVA = "0xBF5544", Offset = "0xBF5544", VA = "0xBF5544")]
			set
			{
			}
		}

		[Token(Token = "0x17000068")]
		public bool BlocksRaycasts
		{
			[Token(Token = "0x6000568")]
			[Address(RVA = "0xBF5550", Offset = "0xBF5550", VA = "0xBF5550")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000569")]
			[Address(RVA = "0xBF5558", Offset = "0xBF5558", VA = "0xBF5558")]
			set
			{
			}
		}

		[Token(Token = "0x17000069")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85EC2C", Offset = "0x85EC2C")]
		public bool RaycastMyLayerOnly
		{
			[Token(Token = "0x600056A")]
			[Address(RVA = "0xBF564C", Offset = "0xBF564C", VA = "0xBF564C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600056B")]
			[Address(RVA = "0xBF5654", Offset = "0xBF5654", VA = "0xBF5654")]
			set
			{
			}
		}

		[Token(Token = "0x1700006A")]
		public bool PointingAtCanvas
		{
			[Token(Token = "0x600056D")]
			[Address(RVA = "0xBF5710", Offset = "0xBF5710", VA = "0xBF5710")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006B")]
		public CurvedUIInputModule.CUIControlMethod ControlMethod
		{
			[Token(Token = "0x600056F")]
			[Address(RVA = "0xBF58EC", Offset = "0xBF58EC", VA = "0xBF58EC")]
			get
			{
				return default(CurvedUIInputModule.CUIControlMethod);
			}
			[Token(Token = "0x6000570")]
			[Address(RVA = "0xBF5948", Offset = "0xBF5948", VA = "0xBF5948")]
			set
			{
			}
		}

		[Token(Token = "0x1700006C")]
		public bool GazeUseTimedClick
		{
			[Token(Token = "0x6000574")]
			[Address(RVA = "0xBF5D64", Offset = "0xBF5D64", VA = "0xBF5D64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000575")]
			[Address(RVA = "0xBF5DD0", Offset = "0xBF5DD0", VA = "0xBF5DD0")]
			set
			{
			}
		}

		[Token(Token = "0x1700006D")]
		public float GazeClickTimer
		{
			[Token(Token = "0x6000576")]
			[Address(RVA = "0xBF5E4C", Offset = "0xBF5E4C", VA = "0xBF5E4C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000577")]
			[Address(RVA = "0xBF5EB8", Offset = "0xBF5EB8", VA = "0xBF5EB8")]
			set
			{
			}
		}

		[Token(Token = "0x1700006E")]
		public float GazeClickTimerDelay
		{
			[Token(Token = "0x6000578")]
			[Address(RVA = "0xBF5F34", Offset = "0xBF5F34", VA = "0xBF5F34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000579")]
			[Address(RVA = "0xBF5FA0", Offset = "0xBF5FA0", VA = "0xBF5FA0")]
			set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public float GazeTimerProgress
		{
			[Token(Token = "0x600057A")]
			[Address(RVA = "0xBF601C", Offset = "0xBF601C", VA = "0xBF601C")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600053F")]
		[Address(RVA = "0xBF39F0", Offset = "0xBF39F0", VA = "0xBF39F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000540")]
		[Address(RVA = "0xBF3B48", Offset = "0xBF3B48", VA = "0xBF3B48")]
		private void Start()
		{
		}

		[Token(Token = "0x6000541")]
		[Address(RVA = "0xBF4034", Offset = "0xBF4034", VA = "0xBF4034")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000542")]
		[Address(RVA = "0xBF40E8", Offset = "0xBF40E8", VA = "0xBF40E8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000543")]
		[Address(RVA = "0xBF419C", Offset = "0xBF419C", VA = "0xBF419C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000544")]
		[Address(RVA = "0xBF42C8", Offset = "0xBF42C8", VA = "0xBF42C8")]
		private void SetUIAngle(int newAngle)
		{
		}

		[Token(Token = "0x6000545")]
		[Address(RVA = "0xBF450C", Offset = "0xBF450C", VA = "0xBF450C")]
		private Vector3 CanvasToCyllinder(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000546")]
		[Address(RVA = "0xBF4620", Offset = "0xBF4620", VA = "0xBF4620")]
		private Vector3 CanvasToCyllinderVertical(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000547")]
		[Address(RVA = "0xBF4704", Offset = "0xBF4704", VA = "0xBF4704")]
		private Vector3 CanvasToRing(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000548")]
		[Address(RVA = "0xBF47F8", Offset = "0xBF47F8", VA = "0xBF47F8")]
		private Vector3 CanvasToSphere(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600054A")]
		[Address(RVA = "0xBF4984", Offset = "0xBF4984", VA = "0xBF4984")]
		public void AddEffectToChildren()
		{
		}

		[Token(Token = "0x600054B")]
		[Address(RVA = "0xBF4D34", Offset = "0xBF4D34", VA = "0xBF4D34")]
		public Vector3 VertexPositionToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600054C")]
		[Address(RVA = "0xBF4D70", Offset = "0xBF4D70", VA = "0xBF4D70")]
		public Vector3 CanvasToCurvedCanvas(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600054D")]
		[Address(RVA = "0xBF4E38", Offset = "0xBF4E38", VA = "0xBF4E38")]
		public Vector3 CanvasToCurvedCanvasNormal(Vector3 pos)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600054E")]
		[Address(RVA = "0xBF5034", Offset = "0xBF5034", VA = "0xBF5034")]
		public bool RaycastToCanvasSpace(Ray ray, [Out] Vector2 o_positionOnCanvas)
		{
			return default(bool);
		}

		[Token(Token = "0x600054F")]
		[Address(RVA = "0xBF3EFC", Offset = "0xBF3EFC", VA = "0xBF3EFC")]
		public float GetCyllinderRadiusInCanvasSpace()
		{
			return default(float);
		}

		[Token(Token = "0x6000550")]
		[Address(RVA = "0xBF51C8", Offset = "0xBF51C8", VA = "0xBF51C8")]
		public Vector2 GetTesslationSize(bool modifiedByQuality = true)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000551")]
		[Address(RVA = "0xBF5334", Offset = "0xBF5334", VA = "0xBF5334")]
		private float GetSegmentsByAngle(float angle)
		{
			return default(float);
		}

		[Token(Token = "0x600056C")]
		[Address(RVA = "0xBF5658", Offset = "0xBF5658", VA = "0xBF5658")]
		public void SetAllChildrenDirty(bool recalculateCurveOnly = false)
		{
		}

		[Token(Token = "0x600056E")]
		[Address(RVA = "0xBF5824", Offset = "0xBF5824", VA = "0xBF5824")]
		public void Click()
		{
		}

		[Token(Token = "0x6000571")]
		[Address(RVA = "0xBF59B4", Offset = "0xBF59B4", VA = "0xBF59B4")]
		public List<GameObject> GetObjectsUnderPointer()
		{
			return null;
		}

		[Token(Token = "0x6000572")]
		[Address(RVA = "0xBF5ABC", Offset = "0xBF5ABC", VA = "0xBF5ABC")]
		public List<GameObject> GetObjectsUnderScreenPos(Vector2 pos, [Optional] Camera eventCamera)
		{
			return null;
		}

		[Token(Token = "0x6000573")]
		[Address(RVA = "0xBF5C28", Offset = "0xBF5C28", VA = "0xBF5C28")]
		public List<GameObject> GetObjectsHitByRay(Ray ray)
		{
			return null;
		}

		[Token(Token = "0x600057B")]
		[Address(RVA = "0xBF6088", Offset = "0xBF6088", VA = "0xBF6088")]
		public CurvedUISettings()
		{
		}
	}
	[Token(Token = "0x20000D3")]
	public class CurvedUIVertexEffect : BaseMeshEffect
	{
		[Token(Token = "0x400041D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84DC7C", Offset = "0x84DC7C")]
		public bool DoNotTesselate;

		[Token(Token = "0x400041E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Canvas myCanvas;

		[Token(Token = "0x400041F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Graphic myGraphic;

		[Token(Token = "0x4000421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Text myText;

		[Token(Token = "0x4000422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TextMeshProUGUI myTMP;

		[Token(Token = "0x4000423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private CurvedUITMPSubmesh myTMPSubMesh;

		[Token(Token = "0x4000424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool m_tesselationRequired;

		[Token(Token = "0x4000425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		private bool curvingRequired;

		[Token(Token = "0x4000426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		private bool TransformMisaligned;

		[Token(Token = "0x4000427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Matrix4x4 CanvasToWorld;

		[Token(Token = "0x4000428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Matrix4x4 CanvasToLocal;

		[Token(Token = "0x4000429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Matrix4x4 MyToWorld;

		[Token(Token = "0x400042A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private Matrix4x4 MyToLocal;

		[Token(Token = "0x400042B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<UIVertex> m_tesselatedVerts;

		[Token(Token = "0x400042C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<UIVertex> m_curvedVerts;

		[Token(Token = "0x400042D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<UIVertex> m_vertsInQuads;

		[Token(Token = "0x400042E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private UIVertex m_ret;

		[Token(Token = "0x400042F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private UIVertex[] m_quad;

		[Token(Token = "0x4000430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float[] m_weights;

		[Token(Token = "0x4000431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedPos;

		[Token(Token = "0x4000432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[SerializeField]
		[HideInInspector]
		private Vector3 savedUp;

		[Token(Token = "0x4000433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		[SerializeField]
		[HideInInspector]
		private Vector2 savedRectSize;

		[Token(Token = "0x4000434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[SerializeField]
		[HideInInspector]
		private Color savedColor;

		[Token(Token = "0x4000435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		[SerializeField]
		[HideInInspector]
		private Vector4 savedTextUV0;

		[Token(Token = "0x4000436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		[SerializeField]
		[HideInInspector]
		private float savedFill;

		[Token(Token = "0x4000437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Vector4 _uv0;

		[Token(Token = "0x4000438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Vector4 _uv1;

		[Token(Token = "0x4000439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Vector3 _pos;

		[Token(Token = "0x17000070")]
		private bool tesselationRequired
		{
			[Token(Token = "0x600057C")]
			[Address(RVA = "0xBF88B8", Offset = "0xBF88B8", VA = "0xBF88B8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600057D")]
			[Address(RVA = "0xBF88C0", Offset = "0xBF88C0", VA = "0xBF88C0")]
			set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public bool TesselationRequired
		{
			[Token(Token = "0x6000590")]
			[Address(RVA = "0xBFB568", Offset = "0xBFB568", VA = "0xBFB568")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000591")]
			[Address(RVA = "0xBFB55C", Offset = "0xBFB55C", VA = "0xBFB55C")]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public bool CurvingRequired
		{
			[Token(Token = "0x6000592")]
			[Address(RVA = "0xBFB570", Offset = "0xBFB570", VA = "0xBFB570")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000593")]
			[Address(RVA = "0xBFB578", Offset = "0xBFB578", VA = "0xBFB578")]
			set
			{
			}
		}

		[Token(Token = "0x600057E")]
		[Address(RVA = "0xBF88CC", Offset = "0xBF88CC", VA = "0xBF88CC", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600057F")]
		[Address(RVA = "0xBF89D4", Offset = "0xBF89D4", VA = "0xBF89D4", Slot = "5")]
		protected override void OnEnable()
		{
		}

		[Token(Token = "0x6000580")]
		[Address(RVA = "0xBF8CE0", Offset = "0xBF8CE0", VA = "0xBF8CE0", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000581")]
		[Address(RVA = "0xBF93B8", Offset = "0xBF93B8", VA = "0xBF93B8", Slot = "7")]
		protected override void OnDisable()
		{
		}

		[Token(Token = "0x6000582")]
		[Address(RVA = "0xBF956C", Offset = "0xBF956C", VA = "0xBF956C")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x6000583")]
		[Address(RVA = "0xBF9578", Offset = "0xBF9578", VA = "0xBF9578")]
		private void FontTextureRebuiltCallback(Font fontie)
		{
		}

		[Token(Token = "0x6000584")]
		[Address(RVA = "0xBF9618", Offset = "0xBF9618", VA = "0xBF9618")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000585")]
		[Address(RVA = "0xBF9B88", Offset = "0xBF9B88", VA = "0xBF9B88", Slot = "20")]
		public override void ModifyMesh(VertexHelper vh)
		{
		}

		[Token(Token = "0x6000586")]
		[Address(RVA = "0xBF70FC", Offset = "0xBF70FC", VA = "0xBF70FC")]
		public void ModifyTMPMesh(List<UIVertex> vertexList)
		{
		}

		[Token(Token = "0x6000587")]
		[Address(RVA = "0xBFA22C", Offset = "0xBFA22C", VA = "0xBFA22C")]
		private bool ShouldModify()
		{
			return default(bool);
		}

		[Token(Token = "0x6000588")]
		[Address(RVA = "0xBFA32C", Offset = "0xBFA32C", VA = "0xBFA32C")]
		private void CheckTextFontMaterial()
		{
		}

		[Token(Token = "0x6000589")]
		[Address(RVA = "0xBF8BAC", Offset = "0xBF8BAC", VA = "0xBF8BAC")]
		public CurvedUISettings FindParentSettings(bool forceNew = false)
		{
			return null;
		}

		[Token(Token = "0x600058A")]
		[Address(RVA = "0xBFA790", Offset = "0xBFA790", VA = "0xBFA790")]
		private UIVertex CurveVertex(UIVertex input, float cylinder_angle, float radius, Vector2 canvasSize)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x600058B")]
		[Address(RVA = "0xBFA5B8", Offset = "0xBFA5B8", VA = "0xBFA5B8")]
		private void TesselateGeometry(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x600058C")]
		[Address(RVA = "0xBFAD3C", Offset = "0xBFAD3C", VA = "0xBFAD3C")]
		private void ModifyQuad(List<UIVertex> verts, int vertexIndex, Vector2 requiredSize)
		{
		}

		[Token(Token = "0x600058D")]
		[Address(RVA = "0xBFAAA4", Offset = "0xBFAAA4", VA = "0xBFAAA4")]
		private void TrisToQuads(List<UIVertex> verts)
		{
		}

		[Token(Token = "0x600058E")]
		[Address(RVA = "0xBFB208", Offset = "0xBFB208", VA = "0xBFB208")]
		private UIVertex TesselateQuad(float x, float y)
		{
			return default(UIVertex);
		}

		[Token(Token = "0x600058F")]
		[Address(RVA = "0xBF4500", Offset = "0xBF4500", VA = "0xBF4500")]
		public void SetDirty()
		{
		}

		[Token(Token = "0x6000594")]
		[Address(RVA = "0xBFB584", Offset = "0xBFB584", VA = "0xBFB584")]
		public CurvedUIVertexEffect()
		{
		}
	}
	[Token(Token = "0x20000D4")]
	public class CurvedUIViveController : MonoBehaviour
	{
		[Token(Token = "0x6000595")]
		[Address(RVA = "0xBFB6C8", Offset = "0xBFB6C8", VA = "0xBFB6C8")]
		public CurvedUIViveController()
		{
		}
	}
	[Token(Token = "0x20000D5")]
	public struct ViveInputArgs
	{
		[Token(Token = "0x400043A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint controllerIndex;

		[Token(Token = "0x400043B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float buttonPressure;

		[Token(Token = "0x400043C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector2 touchpadAxis;
	}
	[Token(Token = "0x20000D6")]
	public delegate void ViveInputEvent(object sender, ViveInputArgs e);
	[Token(Token = "0x20000D7")]
	public delegate void ViveEvent(object sender);
	[Token(Token = "0x20000D8")]
	[ExecuteInEditMode]
	public class CurvedUITMP : MonoBehaviour
	{
		[Token(Token = "0x400043D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x400043E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private TextMeshProUGUI tmpText;

		[Token(Token = "0x400043F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CurvedUISettings mySettings;

		[Token(Token = "0x4000440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<UIVertex> m_UIVerts;

		[Token(Token = "0x4000441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private UIVertex m_tempVertex;

		[Token(Token = "0x4000442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CurvedUITMPSubmesh m_tempSubMsh;

		[Token(Token = "0x4000443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 savedSize;

		[Token(Token = "0x4000444")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector3 savedUp;

		[Token(Token = "0x4000445")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private Vector3 savedPos;

		[Token(Token = "0x4000446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Vector3 savedLocalScale;

		[Token(Token = "0x4000447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 savedGlobalScale;

		[Token(Token = "0x4000448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private List<CurvedUITMPSubmesh> subMeshes;

		[Token(Token = "0x4000449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public bool Dirty;

		[Token(Token = "0x400044A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool curvingRequired;

		[Token(Token = "0x400044B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool tesselationRequired;

		[Token(Token = "0x400044C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool quitting;

		[Token(Token = "0x400044D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Vector3[] vertices;

		[Token(Token = "0x600059E")]
		[Address(RVA = "0xBF60CC", Offset = "0xBF60CC", VA = "0xBF60CC")]
		private void Start()
		{
		}

		[Token(Token = "0x600059F")]
		[Address(RVA = "0xBF6188", Offset = "0xBF6188", VA = "0xBF6188")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60005A0")]
		[Address(RVA = "0xBF64F0", Offset = "0xBF64F0", VA = "0xBF64F0")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60005A1")]
		[Address(RVA = "0xBF66A4", Offset = "0xBF66A4", VA = "0xBF66A4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60005A2")]
		[Address(RVA = "0xBF66B0", Offset = "0xBF66B0", VA = "0xBF66B0")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60005A3")]
		[Address(RVA = "0xBF6EA0", Offset = "0xBF6EA0", VA = "0xBF6EA0")]
		private void CreateUIVertexList(Mesh mesh)
		{
		}

		[Token(Token = "0x60005A4")]
		[Address(RVA = "0xBF7AAC", Offset = "0xBF7AAC", VA = "0xBF7AAC")]
		private void GetUIVertexFromMesh(UIVertex vert, int i)
		{
		}

		[Token(Token = "0x60005A5")]
		[Address(RVA = "0xBF73DC", Offset = "0xBF73DC", VA = "0xBF73DC")]
		private void FillMeshWithUIVertexList(Mesh mesh, List<UIVertex> list)
		{
		}

		[Token(Token = "0x60005A6")]
		[Address(RVA = "0xBF6374", Offset = "0xBF6374", VA = "0xBF6374")]
		private void FindTMP()
		{
		}

		[Token(Token = "0x60005A7")]
		[Address(RVA = "0xBF7550", Offset = "0xBF7550", VA = "0xBF7550")]
		private void FindSubmeshes()
		{
		}

		[Token(Token = "0x60005A8")]
		[Address(RVA = "0xBF6BBC", Offset = "0xBF6BBC", VA = "0xBF6BBC")]
		private bool ShouldTesselate()
		{
			return default(bool);
		}

		[Token(Token = "0x60005A9")]
		[Address(RVA = "0xBF7AFC", Offset = "0xBF7AFC", VA = "0xBF7AFC")]
		private void TMPTextChangedCallback(object obj)
		{
		}

		[Token(Token = "0x60005AA")]
		[Address(RVA = "0xBF7B18", Offset = "0xBF7B18", VA = "0xBF7B18")]
		private void TesselationRequiredCallback()
		{
		}

		[Token(Token = "0x60005AB")]
		[Address(RVA = "0xBF7B24", Offset = "0xBF7B24", VA = "0xBF7B24")]
		public CurvedUITMP()
		{
		}
	}
	[Token(Token = "0x20000D9")]
	[ExecuteInEditMode]
	public class CurvedUITMPInputFieldCaret : MonoBehaviour, ISelectHandler, IEventSystemHandler, IDeselectHandler
	{
		[Token(Token = "0x2000409")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849614", Offset = "0x849614")]
		private sealed class <CaretBlinker>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001F7B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001F7C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001F7D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CurvedUITMPInputFieldCaret <>4__this;

			[Token(Token = "0x17000220")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B55")]
				[Address(RVA = "0x19ADE34", Offset = "0x19ADE34", VA = "0x19ADE34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000221")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B57")]
				[Address(RVA = "0x19ADE7C", Offset = "0x19ADE7C", VA = "0x19ADE7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B52")]
			[Address(RVA = "0x19ADCE4", Offset = "0x19ADCE4", VA = "0x19ADCE4")]
			[DebuggerHidden]
			public <CaretBlinker>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001B53")]
			[Address(RVA = "0x19ADD10", Offset = "0x19ADD10", VA = "0x19ADD10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B54")]
			[Address(RVA = "0x19ADD14", Offset = "0x19ADD14", VA = "0x19ADD14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B56")]
			[Address(RVA = "0x19ADE3C", Offset = "0x19ADE3C", VA = "0x19ADE3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400044E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private TMP_InputField myField;

		[Token(Token = "0x400044F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private RectTransform myCaret;

		[Token(Token = "0x4000450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color origCaretColor;

		[Token(Token = "0x4000451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Color origSelectionColor;

		[Token(Token = "0x4000452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool selected;

		[Token(Token = "0x4000453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool selectingText;

		[Token(Token = "0x17000073")]
		public Color CaretColor
		{
			[Token(Token = "0x60005B5")]
			[Address(RVA = "0xBF8838", Offset = "0xBF8838", VA = "0xBF8838")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60005B6")]
			[Address(RVA = "0xBF8844", Offset = "0xBF8844", VA = "0xBF8844")]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public Color SelectionColor
		{
			[Token(Token = "0x60005B7")]
			[Address(RVA = "0xBF8850", Offset = "0xBF8850", VA = "0xBF8850")]
			get
			{
				return default(Color);
			}
			[Token(Token = "0x60005B8")]
			[Address(RVA = "0xBF885C", Offset = "0xBF885C", VA = "0xBF885C")]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public float CaretBlinkRate
		{
			[Token(Token = "0x60005B9")]
			[Address(RVA = "0xBF8868", Offset = "0xBF8868", VA = "0xBF8868")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005BA")]
			[Address(RVA = "0xBF8888", Offset = "0xBF8888", VA = "0xBF8888")]
			set
			{
			}
		}

		[Token(Token = "0x60005AC")]
		[Address(RVA = "0xBF7C04", Offset = "0xBF7C04", VA = "0xBF7C04")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005AD")]
		[Address(RVA = "0xBF8040", Offset = "0xBF8040", VA = "0xBF8040")]
		private void Update()
		{
		}

		[Token(Token = "0x60005AE")]
		[Address(RVA = "0xBF82F8", Offset = "0xBF82F8", VA = "0xBF82F8", Slot = "4")]
		public void OnSelect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60005AF")]
		[Address(RVA = "0xBF8780", Offset = "0xBF8780", VA = "0xBF8780", Slot = "5")]
		public void OnDeselect(BaseEventData eventData)
		{
		}

		[Token(Token = "0x60005B0")]
		[Address(RVA = "0xBF8700", Offset = "0xBF8700", VA = "0xBF8700")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x855FA8", Offset = "0x855FA8")]
		private IEnumerator CaretBlinker()
		{
			return null;
		}

		[Token(Token = "0x60005B1")]
		[Address(RVA = "0xBF83BC", Offset = "0xBF83BC", VA = "0xBF83BC")]
		private void CreateCaret()
		{
		}

		[Token(Token = "0x60005B2")]
		[Address(RVA = "0xBF8050", Offset = "0xBF8050", VA = "0xBF8050")]
		private void UpdateCaret()
		{
		}

		[Token(Token = "0x60005B3")]
		[Address(RVA = "0xBF87B8", Offset = "0xBF87B8", VA = "0xBF87B8")]
		private Vector2 GetLocalPositionInText(int charNo)
		{
			return default(Vector2);
		}

		[Token(Token = "0x60005B4")]
		[Address(RVA = "0xBF7CC4", Offset = "0xBF7CC4", VA = "0xBF7CC4")]
		private void CheckAndConvertMask()
		{
		}

		[Token(Token = "0x60005BB")]
		[Address(RVA = "0xBF88A8", Offset = "0xBF88A8", VA = "0xBF88A8")]
		public CurvedUITMPInputFieldCaret()
		{
		}
	}
	[Token(Token = "0x20000DA")]
	[ExecuteInEditMode]
	public class CurvedUITMPSubmesh : MonoBehaviour
	{
		[Token(Token = "0x4000454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private VertexHelper vh;

		[Token(Token = "0x4000455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Mesh straightMesh;

		[Token(Token = "0x4000456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Mesh curvedMesh;

		[Token(Token = "0x4000457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private CurvedUIVertexEffect crvdVE;

		[Token(Token = "0x4000458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TMP_SubMeshUI TMPsub;

		[Token(Token = "0x4000459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TextMeshProUGUI TMPtext;

		[Token(Token = "0x60005BC")]
		[Address(RVA = "0xBF7690", Offset = "0xBF7690", VA = "0xBF7690")]
		public void UpdateSubmesh(bool tesselate, bool curve)
		{
		}

		[Token(Token = "0x60005BD")]
		[Address(RVA = "0xBF88B0", Offset = "0xBF88B0", VA = "0xBF88B0")]
		public CurvedUITMPSubmesh()
		{
		}
	}
	[Token(Token = "0x20000DB")]
	[AttributeAttribute(Name = "ConditionalAttribute", RVA = "0x847958", Offset = "0x847958")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x847958", Offset = "0x847958")]
	public class OptionalDependencyAttribute : Attribute
	{
		[Token(Token = "0x400045A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string dependentClass;

		[Token(Token = "0x400045B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string define;

		[Token(Token = "0x60005BE")]
		[Address(RVA = "0x1B62504", Offset = "0x1B62504", VA = "0x1B62504")]
		public OptionalDependencyAttribute(string dependentClass, string define)
		{
		}
	}
}
namespace BoneTool.Script.Runtime
{
	[Token(Token = "0x20000DC")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8479B8", Offset = "0x8479B8")]
	public class BonePoseLib : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200040A")]
		public class ArmaturePose
		{
			[Token(Token = "0x4001F7E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string Name;

			[Token(Token = "0x4001F7F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public List<BonePose> BonePoses;

			[Token(Token = "0x6001B58")]
			[Address(RVA = "0x19ABF48", Offset = "0x19ABF48", VA = "0x19ABF48")]
			public ArmaturePose()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200040B")]
		public struct BonePose
		{
			[Token(Token = "0x4001F80")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 SavedPos;

			[Token(Token = "0x4001F81")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 SavedRot;

			[Token(Token = "0x4001F82")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 SavedSca;

			[Token(Token = "0x4001F83")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform TargetTransform;

			[Token(Token = "0x6001B59")]
			[Address(RVA = "0x19ABFAC", Offset = "0x19ABFAC", VA = "0x19ABFAC")]
			public BonePose(Transform targetTransform)
			{
			}

			[Token(Token = "0x6001B5A")]
			[Address(RVA = "0x19AC030", Offset = "0x19AC030", VA = "0x19AC030")]
			public void Apply()
			{
			}
		}

		[Token(Token = "0x400045C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<ArmaturePose> Poses;

		[Token(Token = "0x400045D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string last_pose;

		[Token(Token = "0x400045E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<BonePose> AnimateToPose;

		[Token(Token = "0x400045F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float AnimateSpeed;

		[Token(Token = "0x4000460")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Dictionary<string, ArmaturePose> cache;

		[Token(Token = "0x4000461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<string, int> cacheindex;

		[Token(Token = "0x4000462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string lastpose;

		[Token(Token = "0x4000463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public int lastpose_index;

		[Token(Token = "0x60005BF")]
		[Address(RVA = "0xF46F64", Offset = "0xF46F64", VA = "0xF46F64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005C0")]
		[Address(RVA = "0xF470B8", Offset = "0xF470B8", VA = "0xF470B8")]
		public void AddPose(ArmaturePose pose)
		{
		}

		[Token(Token = "0x60005C1")]
		[Address(RVA = "0xF4711C", Offset = "0xF4711C", VA = "0xF4711C")]
		public void RemovePose(string poseName)
		{
		}

		[Token(Token = "0x60005C2")]
		[Address(RVA = "0xF47210", Offset = "0xF47210", VA = "0xF47210")]
		public void SetPose(int index)
		{
		}

		[Token(Token = "0x60005C3")]
		[Address(RVA = "0xF47414", Offset = "0xF47414", VA = "0xF47414")]
		public void ApplyPose(int index)
		{
		}

		[Token(Token = "0x60005C4")]
		[Address(RVA = "0xF475BC", Offset = "0xF475BC", VA = "0xF475BC")]
		public void AnimatePose(int index)
		{
		}

		[Token(Token = "0x60005C5")]
		[Address(RVA = "0xF47674", Offset = "0xF47674", VA = "0xF47674")]
		public void AnimatePose(string name)
		{
		}

		[Token(Token = "0x60005C6")]
		[Address(RVA = "0xF47770", Offset = "0xF47770", VA = "0xF47770")]
		public void SetPoseImmediate(string name)
		{
		}

		[Token(Token = "0x60005C7")]
		[Address(RVA = "0xF479C0", Offset = "0xF479C0", VA = "0xF479C0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60005C8")]
		[Address(RVA = "0xF47CB8", Offset = "0xF47CB8", VA = "0xF47CB8")]
		public BonePoseLib()
		{
		}
	}
	[Token(Token = "0x20000DD")]
	[ExecuteInEditMode]
	public class BoneVisualiser : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200040C")]
		private struct BoneTransform
		{
			[Token(Token = "0x4001F84")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Transform Target;

			[Token(Token = "0x4001F85")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 LocalPosition;

			[Token(Token = "0x6001B5B")]
			[Address(RVA = "0x19AC094", Offset = "0x19AC094", VA = "0x19AC094")]
			public BoneTransform(Transform target, Vector3 localPosition)
			{
			}

			[Token(Token = "0x6001B5C")]
			[Address(RVA = "0x19AC0DC", Offset = "0x19AC0DC", VA = "0x19AC0DC")]
			public void SetLocalPosition(Vector3 position)
			{
			}
		}

		[Token(Token = "0x4000464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform RootNode;

		[Token(Token = "0x4000465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float BoneGizmosSize;

		[Token(Token = "0x4000466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Color BoneColor;

		[Token(Token = "0x4000467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool HideRoot;

		[Token(Token = "0x4000468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool EnableConstraint;

		[Token(Token = "0x4000469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool IsHandbone;

		[Token(Token = "0x400046A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform _preRootNode;

		[Token(Token = "0x400046B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform[] _childNodes;

		[Token(Token = "0x400046C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private BoneTransform[] _previousTransforms;

		[Token(Token = "0x60005C9")]
		[Address(RVA = "0xF47DD4", Offset = "0xF47DD4", VA = "0xF47DD4")]
		public Transform[] GetChildNodes()
		{
			return null;
		}

		[Token(Token = "0x60005CA")]
		[Address(RVA = "0xF47DDC", Offset = "0xF47DDC", VA = "0xF47DDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60005CB")]
		[Address(RVA = "0xF47F24", Offset = "0xF47F24", VA = "0xF47F24")]
		public void PopulateChildren()
		{
		}

		[Token(Token = "0x60005CC")]
		[Address(RVA = "0xF481E4", Offset = "0xF481E4", VA = "0xF481E4")]
		public BoneVisualiser()
		{
		}
	}
}
namespace s3DBakers.Buttons
{
	[Serializable]
	[Token(Token = "0x20000DE")]
	public struct str3DdBbReceiver
	{
		[Token(Token = "0x400046D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject receiver;

		[Token(Token = "0x400046E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public enum3DBbState3 Switch;

		[Token(Token = "0x400046F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public str3DBbActions actions;
	}
	[Serializable]
	[Token(Token = "0x20000DF")]
	public struct str3DdBbReceiver2
	{
		[Token(Token = "0x4000470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject receiver;

		[Token(Token = "0x4000471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x84DE14", Offset = "0x84DE14")]
		public bool position;

		[Token(Token = "0x4000472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public bool rotation;

		[Token(Token = "0x4000473")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA")]
		public bool objects;

		[Token(Token = "0x4000474")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB")]
		public bool materials;
	}
	[Serializable]
	[Token(Token = "0x20000E0")]
	public struct str3DBbActions
	{
		[Token(Token = "0x4000475")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool position;

		[Token(Token = "0x4000476")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public bool rotation;

		[Token(Token = "0x4000477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public bool objects;

		[Token(Token = "0x4000478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public bool materials;
	}
	[Serializable]
	[Token(Token = "0x20000E1")]
	public struct str3DBbScreenInfo
	{
		[Token(Token = "0x4000479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x84DE28", Offset = "0x84DE28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84DE28", Offset = "0x84DE28")]
		public bool hidePassword;

		[Token(Token = "0x400047A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x84DE78", Offset = "0x84DE78")]
		public GameObject[] number1;

		[Token(Token = "0x400047B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public GameObject[] number2;

		[Token(Token = "0x400047C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] number3;

		[Token(Token = "0x400047D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject[] number4;

		[Token(Token = "0x400047E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x84DE8C", Offset = "0x84DE8C")]
		public GameObject[] dot1;

		[Token(Token = "0x400047F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject[] dot2;

		[Token(Token = "0x4000480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject[] dot3;

		[Token(Token = "0x4000481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject[] dot4;

		[Token(Token = "0x4000482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x84DEA0", Offset = "0x84DEA0")]
		public GameObject messageClosed;

		[Token(Token = "0x4000483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject messageOpened;
	}
	[Serializable]
	[Token(Token = "0x20000E2")]
	public struct ste3DBbMats
	{
		[Token(Token = "0x4000484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int materialID;

		[Token(Token = "0x4000485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Material material;
	}
	[Token(Token = "0x20000E3")]
	public enum enum3dBbType
	{
		[Token(Token = "0x4000487")]
		button,
		[Token(Token = "0x4000488")]
		toggle
	}
	[Token(Token = "0x20000E4")]
	public enum enum3DBbState2
	{
		[Token(Token = "0x400048A")]
		turn0,
		[Token(Token = "0x400048B")]
		turn1
	}
	[Token(Token = "0x20000E5")]
	public enum enum3DBbState3
	{
		[Token(Token = "0x400048D")]
		auto,
		[Token(Token = "0x400048E")]
		turn0,
		[Token(Token = "0x400048F")]
		turn1
	}
	[Token(Token = "0x20000E6")]
	public enum enum3DBbActions
	{
		[Token(Token = "0x4000491")]
		auto,
		[Token(Token = "0x4000492")]
		position,
		[Token(Token = "0x4000493")]
		rotation,
		[Token(Token = "0x4000494")]
		objects,
		[Token(Token = "0x4000495")]
		materials
	}
	[Token(Token = "0x20000E7")]
	public struct str3DBbMessage
	{
		[Token(Token = "0x4000496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public GameObject GO;

		[Token(Token = "0x4000497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public enum3DBbState3 state;

		[Token(Token = "0x4000498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public str3DBbActions actions;
	}
}
namespace Oculus.Spatializer.Propagation
{
	[Token(Token = "0x20000E8")]
	public enum FaceType : uint
	{
		[Token(Token = "0x400049A")]
		TRIANGLES,
		[Token(Token = "0x400049B")]
		QUADS
	}
	[Token(Token = "0x20000E9")]
	public enum MaterialProperty : uint
	{
		[Token(Token = "0x400049D")]
		ABSORPTION,
		[Token(Token = "0x400049E")]
		TRANSMISSION,
		[Token(Token = "0x400049F")]
		SCATTERING
	}
	[Token(Token = "0x20000EA")]
	public struct MeshGroup
	{
		[Token(Token = "0x40004A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public UIntPtr indexOffset;

		[Token(Token = "0x40004A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public UIntPtr faceCount;

		[Token(Token = "0x40004A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FaceType faceType;

		[Token(Token = "0x40004A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public IntPtr material;
	}
}
namespace Unity.Labs.SuperScience
{
	[Serializable]
	[Token(Token = "0x20000EB")]
	public class PhysicsTracker
	{
		[Token(Token = "0x200040D")]
		private struct Sample
		{
			[Token(Token = "0x4001F86")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float distance;

			[Token(Token = "0x4001F87")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float angle;

			[Token(Token = "0x4001F88")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Vector3 offset;

			[Token(Token = "0x4001F89")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public Vector3 axisOffset;

			[Token(Token = "0x4001F8A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float speed;

			[Token(Token = "0x4001F8B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float angularSpeed;

			[Token(Token = "0x4001F8C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float time;

			[Token(Token = "0x6001B5D")]
			[Address(RVA = "0x19DFADC", Offset = "0x19DFADC", VA = "0x19DFADC")]
			public void Accumulate(Sample other, float scalar, Vector3 directionAnchor, Vector3 axisAnchor)
			{
			}
		}

		[Token(Token = "0x40004A4")]
		private const float k_Period = 0.125f;

		[Token(Token = "0x40004A5")]
		private const float k_HalfPeriod = 0.0625f;

		[Token(Token = "0x40004A6")]
		private const int k_Steps = 4;

		[Token(Token = "0x40004A7")]
		private const float k_SamplePeriod = 1f / 32f;

		[Token(Token = "0x40004A8")]
		private const float k_NewSampleWeight = 2f;

		[Token(Token = "0x40004A9")]
		private const float k_AdditiveWeight = 1f;

		[Token(Token = "0x40004AA")]
		private const float k_PredictedPeriod = 5f / 32f;

		[Token(Token = "0x40004AB")]
		private const int k_SampleLength = 5;

		[Token(Token = "0x40004AC")]
		private const float k_MinOffset = 0.001f;

		[Token(Token = "0x40004AD")]
		private const float k_MinAngle = 0.5f;

		[Token(Token = "0x40004AE")]
		private const float k_MinLength = 1E-05f;

		[Token(Token = "0x40004AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int m_CurrentSampleIndex;

		[Token(Token = "0x40004B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Sample[] m_Samples;

		[Token(Token = "0x40004B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 m_LastOffsetPosition;

		[Token(Token = "0x40004B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 m_LastDirectionPosition;

		[Token(Token = "0x40004B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Quaternion m_LastRotation;

		[Token(Token = "0x40004B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DEB4", Offset = "0x84DEB4")]
		private float <Speed>k__BackingField;

		[Token(Token = "0x40004B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DEC4", Offset = "0x84DEC4")]
		private float <AccelerationStrength>k__BackingField;

		[Token(Token = "0x40004B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DED4", Offset = "0x84DED4")]
		private Vector3 <Direction>k__BackingField;

		[Token(Token = "0x40004B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DEE4", Offset = "0x84DEE4")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x40004B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DEF4", Offset = "0x84DEF4")]
		private Vector3 <Acceleration>k__BackingField;

		[Token(Token = "0x40004B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DF04", Offset = "0x84DF04")]
		private float <AngularSpeed>k__BackingField;

		[Token(Token = "0x40004BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DF14", Offset = "0x84DF14")]
		private Vector3 <AngularAxis>k__BackingField;

		[Token(Token = "0x40004BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DF24", Offset = "0x84DF24")]
		private Vector3 <AngularVelocity>k__BackingField;

		[Token(Token = "0x40004BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DF34", Offset = "0x84DF34")]
		private float <AngularAccelerationStrength>k__BackingField;

		[Token(Token = "0x40004BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84DF44", Offset = "0x84DF44")]
		private Vector3 <AngularAcceleration>k__BackingField;

		[Token(Token = "0x17000076")]
		public float Speed
		{
			[Token(Token = "0x60005CD")]
			[Address(RVA = "0x1B68FB8", Offset = "0x1B68FB8", VA = "0x1B68FB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856010", Offset = "0x856010")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005CE")]
			[Address(RVA = "0x1B68FC0", Offset = "0x1B68FC0", VA = "0x1B68FC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856020", Offset = "0x856020")]
			private set
			{
			}
		}

		[Token(Token = "0x17000077")]
		public float AccelerationStrength
		{
			[Token(Token = "0x60005CF")]
			[Address(RVA = "0x1B68FC8", Offset = "0x1B68FC8", VA = "0x1B68FC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856030", Offset = "0x856030")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005D0")]
			[Address(RVA = "0x1B68FD0", Offset = "0x1B68FD0", VA = "0x1B68FD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856040", Offset = "0x856040")]
			private set
			{
			}
		}

		[Token(Token = "0x17000078")]
		public Vector3 Direction
		{
			[Token(Token = "0x60005D1")]
			[Address(RVA = "0x1B68FD8", Offset = "0x1B68FD8", VA = "0x1B68FD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856050", Offset = "0x856050")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005D2")]
			[Address(RVA = "0x1B68FE4", Offset = "0x1B68FE4", VA = "0x1B68FE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856060", Offset = "0x856060")]
			private set
			{
			}
		}

		[Token(Token = "0x17000079")]
		public Vector3 Velocity
		{
			[Token(Token = "0x60005D3")]
			[Address(RVA = "0x1B68FF0", Offset = "0x1B68FF0", VA = "0x1B68FF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856070", Offset = "0x856070")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005D4")]
			[Address(RVA = "0x1B68FFC", Offset = "0x1B68FFC", VA = "0x1B68FFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856080", Offset = "0x856080")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public Vector3 Acceleration
		{
			[Token(Token = "0x60005D5")]
			[Address(RVA = "0x1B69008", Offset = "0x1B69008", VA = "0x1B69008")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856090", Offset = "0x856090")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005D6")]
			[Address(RVA = "0x1B69014", Offset = "0x1B69014", VA = "0x1B69014")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8560A0", Offset = "0x8560A0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public float AngularSpeed
		{
			[Token(Token = "0x60005D7")]
			[Address(RVA = "0x1B69020", Offset = "0x1B69020", VA = "0x1B69020")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8560B0", Offset = "0x8560B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005D8")]
			[Address(RVA = "0x1B69028", Offset = "0x1B69028", VA = "0x1B69028")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8560C0", Offset = "0x8560C0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public Vector3 AngularAxis
		{
			[Token(Token = "0x60005D9")]
			[Address(RVA = "0x1B69030", Offset = "0x1B69030", VA = "0x1B69030")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8560D0", Offset = "0x8560D0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005DA")]
			[Address(RVA = "0x1B6903C", Offset = "0x1B6903C", VA = "0x1B6903C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8560E0", Offset = "0x8560E0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public Vector3 AngularVelocity
		{
			[Token(Token = "0x60005DB")]
			[Address(RVA = "0x1B69048", Offset = "0x1B69048", VA = "0x1B69048")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8560F0", Offset = "0x8560F0")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005DC")]
			[Address(RVA = "0x1B69054", Offset = "0x1B69054", VA = "0x1B69054")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856100", Offset = "0x856100")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public float AngularAccelerationStrength
		{
			[Token(Token = "0x60005DD")]
			[Address(RVA = "0x1B69060", Offset = "0x1B69060", VA = "0x1B69060")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856110", Offset = "0x856110")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005DE")]
			[Address(RVA = "0x1B69068", Offset = "0x1B69068", VA = "0x1B69068")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856120", Offset = "0x856120")]
			private set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public Vector3 AngularAcceleration
		{
			[Token(Token = "0x60005DF")]
			[Address(RVA = "0x1B69070", Offset = "0x1B69070", VA = "0x1B69070")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856130", Offset = "0x856130")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60005E0")]
			[Address(RVA = "0x1B6907C", Offset = "0x1B6907C", VA = "0x1B6907C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856140", Offset = "0x856140")]
			private set
			{
			}
		}

		[Token(Token = "0x60005E1")]
		[Address(RVA = "0x1B69088", Offset = "0x1B69088", VA = "0x1B69088")]
		public void Reset(Vector3 currentPosition, Quaternion currentRotation, Vector3 currentVelocity, Vector3 currentAngularVelocity)
		{
		}

		[Token(Token = "0x60005E2")]
		[Address(RVA = "0x1B691DC", Offset = "0x1B691DC", VA = "0x1B691DC")]
		public void Update(Vector3 newPosition, Quaternion newRotation, float timeSlice)
		{
		}

		[Token(Token = "0x60005E3")]
		[Address(RVA = "0x1B699F8", Offset = "0x1B699F8", VA = "0x1B699F8")]
		public PhysicsTracker()
		{
		}
	}
}
namespace RootMotion
{
	[Token(Token = "0x20000EC")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x847A30", Offset = "0x847A30")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847A30", Offset = "0x847A30")]
	public abstract class Baker : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200040E")]
		public enum Mode
		{
			[Token(Token = "0x4001F8E")]
			AnimationClips,
			[Token(Token = "0x4001F8F")]
			AnimationStates,
			[Token(Token = "0x4001F90")]
			PlayableDirector,
			[Token(Token = "0x4001F91")]
			Realtime
		}

		[Token(Token = "0x40004BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84DF54", Offset = "0x84DF54")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84DF54", Offset = "0x84DF54")]
		public int frameRate;

		[Token(Token = "0x40004BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84DFAC", Offset = "0x84DFAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84DFAC", Offset = "0x84DFAC")]
		public float keyReductionError;

		[Token(Token = "0x40004C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E004", Offset = "0x84E004")]
		public Mode mode;

		[Token(Token = "0x40004C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E03C", Offset = "0x84E03C")]
		public AnimationClip[] animationClips;

		[Token(Token = "0x40004C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E074", Offset = "0x84E074")]
		public string[] animationStates;

		[Token(Token = "0x40004C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E0AC", Offset = "0x84E0AC")]
		public bool loop;

		[Token(Token = "0x40004C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E0E4", Offset = "0x84E0E4")]
		public string saveToFolder;

		[Token(Token = "0x40004C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E11C", Offset = "0x84E11C")]
		public string appendName;

		[Token(Token = "0x40004C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E154", Offset = "0x84E154")]
		public string saveName;

		[Token(Token = "0x40004C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84E18C", Offset = "0x84E18C")]
		private bool <isBaking>k__BackingField;

		[Token(Token = "0x40004C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84E19C", Offset = "0x84E19C")]
		private float <bakingProgress>k__BackingField;

		[Token(Token = "0x40004C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		[HideInInspector]
		public Animator animator;

		[Token(Token = "0x40004CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		public PlayableDirector director;

		[Token(Token = "0x40004CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84E21C", Offset = "0x84E21C")]
		private float <clipLength>k__BackingField;

		[Token(Token = "0x17000080")]
		public bool isBaking
		{
			[Token(Token = "0x60005E8")]
			[Address(RVA = "0x119A2E8", Offset = "0x119A2E8", VA = "0x119A2E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856230", Offset = "0x856230")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60005E9")]
			[Address(RVA = "0x119A2F0", Offset = "0x119A2F0", VA = "0x119A2F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856240", Offset = "0x856240")]
			private set
			{
			}
		}

		[Token(Token = "0x17000081")]
		public float bakingProgress
		{
			[Token(Token = "0x60005EA")]
			[Address(RVA = "0x119A2FC", Offset = "0x119A2FC", VA = "0x119A2FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856250", Offset = "0x856250")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005EB")]
			[Address(RVA = "0x119A304", Offset = "0x119A304", VA = "0x119A304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856260", Offset = "0x856260")]
			private set
			{
			}
		}

		[Token(Token = "0x17000082")]
		protected float clipLength
		{
			[Token(Token = "0x60005F1")]
			[Address(RVA = "0x119A30C", Offset = "0x119A30C", VA = "0x119A30C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856270", Offset = "0x856270")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60005F2")]
			[Address(RVA = "0x119A314", Offset = "0x119A314", VA = "0x119A314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856280", Offset = "0x856280")]
			private set
			{
			}
		}

		[Token(Token = "0x60005E4")]
		[Address(RVA = "0x119A1C8", Offset = "0x119A1C8", VA = "0x119A1C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856150", Offset = "0x856150")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60005E5")]
		[Address(RVA = "0x119A210", Offset = "0x119A210", VA = "0x119A210")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856188", Offset = "0x856188")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60005E6")]
		[Address(RVA = "0x119A258", Offset = "0x119A258", VA = "0x119A258")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8561C0", Offset = "0x8561C0")]
		private void SupportGroup()
		{
		}

		[Token(Token = "0x60005E7")]
		[Address(RVA = "0x119A2A0", Offset = "0x119A2A0", VA = "0x119A2A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8561F8", Offset = "0x8561F8")]
		private void ASThread()
		{
		}

		[Token(Token = "0x60005EC")]
		protected abstract Transform GetCharacterRoot();

		[Token(Token = "0x60005ED")]
		protected abstract void OnStartBaking();

		[Token(Token = "0x60005EE")]
		protected abstract void OnSetLoopFrame(float time);

		[Token(Token = "0x60005EF")]
		protected abstract void OnSetCurves(AnimationClip clip);

		[Token(Token = "0x60005F0")]
		protected abstract void OnSetKeyframes(float time, bool lastFrame);

		[Token(Token = "0x60005F3")]
		[Address(RVA = "0x119A31C", Offset = "0x119A31C", VA = "0x119A31C")]
		public void BakeClip()
		{
		}

		[Token(Token = "0x60005F4")]
		[Address(RVA = "0x119A320", Offset = "0x119A320", VA = "0x119A320")]
		public void StartBaking()
		{
		}

		[Token(Token = "0x60005F5")]
		[Address(RVA = "0x119A324", Offset = "0x119A324", VA = "0x119A324")]
		public void StopBaking()
		{
		}

		[Token(Token = "0x60005F6")]
		[Address(RVA = "0x119A328", Offset = "0x119A328", VA = "0x119A328")]
		protected Baker()
		{
		}
	}
	[Token(Token = "0x20000ED")]
	public class GenericBaker : Baker
	{
		[Token(Token = "0x40004CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E22C", Offset = "0x84E22C")]
		public bool markAsLegacy;

		[Token(Token = "0x40004CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E264", Offset = "0x84E264")]
		public Transform root;

		[Token(Token = "0x40004CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E29C", Offset = "0x84E29C")]
		public Transform rootNode;

		[Token(Token = "0x40004CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E2D4", Offset = "0x84E2D4")]
		public Transform[] ignoreList;

		[Token(Token = "0x40004D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E30C", Offset = "0x84E30C")]
		public Transform[] bakePositionList;

		[Token(Token = "0x40004D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerTransform[] children;

		[Token(Token = "0x40004D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerTransform rootChild;

		[Token(Token = "0x40004D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int rootChildIndex;

		[Token(Token = "0x60005F7")]
		[Address(RVA = "0xBA2000", Offset = "0xBA2000", VA = "0xBA2000")]
		private void Awake()
		{
		}

		[Token(Token = "0x60005F8")]
		[Address(RVA = "0xBA2400", Offset = "0xBA2400", VA = "0xBA2400", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x60005F9")]
		[Address(RVA = "0xBA2408", Offset = "0xBA2408", VA = "0xBA2408", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x60005FA")]
		[Address(RVA = "0xBA2518", Offset = "0xBA2518", VA = "0xBA2518", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x60005FB")]
		[Address(RVA = "0xBA2594", Offset = "0xBA2594", VA = "0xBA2594", Slot = "7")]
		protected override void OnSetCurves(AnimationClip clip)
		{
		}

		[Token(Token = "0x60005FC")]
		[Address(RVA = "0xBA2610", Offset = "0xBA2610", VA = "0xBA2610", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x60005FD")]
		[Address(RVA = "0xBA2258", Offset = "0xBA2258", VA = "0xBA2258")]
		private bool IsIgnored(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60005FE")]
		[Address(RVA = "0xBA232C", Offset = "0xBA232C", VA = "0xBA232C")]
		private bool BakePosition(Transform t)
		{
			return default(bool);
		}

		[Token(Token = "0x60005FF")]
		[Address(RVA = "0xBA268C", Offset = "0xBA268C", VA = "0xBA268C")]
		public GenericBaker()
		{
		}
	}
	[Token(Token = "0x20000EE")]
	public class TQ
	{
		[Token(Token = "0x40004D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 t;

		[Token(Token = "0x40004D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion q;

		[Token(Token = "0x6000600")]
		[Address(RVA = "0x105B0F8", Offset = "0x105B0F8", VA = "0x105B0F8")]
		public TQ(Vector3 translation, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20000EF")]
	public class AvatarUtility
	{
		[Token(Token = "0x6000601")]
		[Address(RVA = "0x11995A4", Offset = "0x11995A4", VA = "0x11995A4")]
		public static Quaternion GetPostRotation(UnityEngine.Avatar avatar, AvatarIKGoal avatarIKGoal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000602")]
		[Address(RVA = "0x1199808", Offset = "0x1199808", VA = "0x1199808")]
		public static TQ GetIKGoalTQ(UnityEngine.Avatar avatar, float humanScale, AvatarIKGoal avatarIKGoal, TQ bodyPositionRotation, TQ boneTQ)
		{
			return null;
		}

		[Token(Token = "0x6000603")]
		[Address(RVA = "0x11997E8", Offset = "0x11997E8", VA = "0x11997E8")]
		public static HumanBodyBones HumanIDFromAvatarIKGoal(AvatarIKGoal avatarIKGoal)
		{
			return default(HumanBodyBones);
		}

		[Token(Token = "0x6000604")]
		[Address(RVA = "0x1199DC8", Offset = "0x1199DC8", VA = "0x1199DC8")]
		public AvatarUtility()
		{
		}
	}
	[Token(Token = "0x20000F0")]
	public static class BakerUtilities
	{
		[Token(Token = "0x6000605")]
		[Address(RVA = "0x119B644", Offset = "0x119B644", VA = "0x119B644")]
		public static void ReduceKeyframes(AnimationCurve curve, float maxError)
		{
		}

		[Token(Token = "0x6000606")]
		[Address(RVA = "0x119CF60", Offset = "0x119CF60", VA = "0x119CF60")]
		public static Keyframe[] GetReducedKeyframes(AnimationCurve curve, float maxError)
		{
			return null;
		}

		[Token(Token = "0x6000607")]
		[Address(RVA = "0x119B098", Offset = "0x119B098", VA = "0x119B098")]
		public static void SetLoopFrame(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000608")]
		[Address(RVA = "0x119B68C", Offset = "0x119B68C", VA = "0x119B68C")]
		public static void SetTangentMode(AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000609")]
		[Address(RVA = "0x119ABBC", Offset = "0x119ABBC", VA = "0x119ABBC")]
		public static Quaternion EnsureQuaternionContinuity(Quaternion lastQ, Quaternion q)
		{
			return default(Quaternion);
		}
	}
	[Serializable]
	[Token(Token = "0x20000F1")]
	public class BakerHumanoidQT
	{
		[Token(Token = "0x40004D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Transform transform;

		[Token(Token = "0x40004D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string Qx;

		[Token(Token = "0x40004D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string Qy;

		[Token(Token = "0x40004D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string Qz;

		[Token(Token = "0x40004DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string Qw;

		[Token(Token = "0x40004DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string Tx;

		[Token(Token = "0x40004DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string Ty;

		[Token(Token = "0x40004DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string Tz;

		[Token(Token = "0x40004DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AnimationCurve rotX;

		[Token(Token = "0x40004DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public AnimationCurve rotY;

		[Token(Token = "0x40004E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public AnimationCurve rotZ;

		[Token(Token = "0x40004E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public AnimationCurve rotW;

		[Token(Token = "0x40004E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve posX;

		[Token(Token = "0x40004E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public AnimationCurve posY;

		[Token(Token = "0x40004E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AnimationCurve posZ;

		[Token(Token = "0x40004E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private AvatarIKGoal goal;

		[Token(Token = "0x40004E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Quaternion lastQ;

		[Token(Token = "0x40004E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool lastQSet;

		[Token(Token = "0x600060A")]
		[Address(RVA = "0x119A45C", Offset = "0x119A45C", VA = "0x119A45C")]
		public BakerHumanoidQT(string name)
		{
		}

		[Token(Token = "0x600060B")]
		[Address(RVA = "0x119A788", Offset = "0x119A788", VA = "0x119A788")]
		public BakerHumanoidQT(Transform transform, AvatarIKGoal goal, string name)
		{
		}

		[Token(Token = "0x600060C")]
		[Address(RVA = "0x119A62C", Offset = "0x119A62C", VA = "0x119A62C")]
		public void Reset()
		{
		}

		[Token(Token = "0x600060D")]
		[Address(RVA = "0x119A974", Offset = "0x119A974", VA = "0x119A974")]
		public void SetIKKeyframes(float time, UnityEngine.Avatar avatar, float humanScale, Vector3 bodyPosition, Quaternion bodyRotation)
		{
		}

		[Token(Token = "0x600060E")]
		[Address(RVA = "0x119AE2C", Offset = "0x119AE2C", VA = "0x119AE2C")]
		public void SetKeyframes(float time, Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x600060F")]
		[Address(RVA = "0x119AF28", Offset = "0x119AF28", VA = "0x119AF28")]
		public void MoveLastKeyframes(float time)
		{
		}

		[Token(Token = "0x6000610")]
		[Address(RVA = "0x119B024", Offset = "0x119B024", VA = "0x119B024")]
		public void SetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000611")]
		[Address(RVA = "0x119AF9C", Offset = "0x119AF9C", VA = "0x119AF9C")]
		private void MoveLastKeyframe(float time, AnimationCurve curve)
		{
		}

		[Token(Token = "0x6000612")]
		[Address(RVA = "0x119B290", Offset = "0x119B290", VA = "0x119B290")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000613")]
		[Address(RVA = "0x119B344", Offset = "0x119B344", VA = "0x119B344")]
		public void SetCurves(AnimationClip clip, float maxError, float lengthMlp)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F2")]
	public class BakerMuscle
	{
		[Token(Token = "0x40004E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AnimationCurve curve;

		[Token(Token = "0x40004E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int muscleIndex;

		[Token(Token = "0x40004EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string propertyName;

		[Token(Token = "0x6000614")]
		[Address(RVA = "0x119B690", Offset = "0x119B690", VA = "0x119B690")]
		public BakerMuscle(int muscleIndex)
		{
		}

		[Token(Token = "0x6000615")]
		[Address(RVA = "0x119B70C", Offset = "0x119B70C", VA = "0x119B70C")]
		private string MuscleNameToPropertyName(string n)
		{
			return null;
		}

		[Token(Token = "0x6000616")]
		[Address(RVA = "0x119C1B8", Offset = "0x119C1B8", VA = "0x119C1B8")]
		public void MultiplyLength(AnimationCurve curve, float mlp)
		{
		}

		[Token(Token = "0x6000617")]
		[Address(RVA = "0x119C26C", Offset = "0x119C26C", VA = "0x119C26C")]
		public void SetCurves(AnimationClip clip, float maxError, float lengthMlp)
		{
		}

		[Token(Token = "0x6000618")]
		[Address(RVA = "0x119C14C", Offset = "0x119C14C", VA = "0x119C14C")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000619")]
		[Address(RVA = "0x119C36C", Offset = "0x119C36C", VA = "0x119C36C")]
		public void SetKeyframe(float time, float[] muscles)
		{
		}

		[Token(Token = "0x600061A")]
		[Address(RVA = "0x119C3B4", Offset = "0x119C3B4", VA = "0x119C3B4")]
		public void SetLoopFrame(float time)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F3")]
	public class BakerTransform
	{
		[Token(Token = "0x40004EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x40004EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve posX;

		[Token(Token = "0x40004ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AnimationCurve posY;

		[Token(Token = "0x40004EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve posZ;

		[Token(Token = "0x40004EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AnimationCurve rotX;

		[Token(Token = "0x40004F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AnimationCurve rotY;

		[Token(Token = "0x40004F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public AnimationCurve rotZ;

		[Token(Token = "0x40004F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public AnimationCurve rotW;

		[Token(Token = "0x40004F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string relativePath;

		[Token(Token = "0x40004F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool recordPosition;

		[Token(Token = "0x40004F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 relativePosition;

		[Token(Token = "0x40004F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isRootNode;

		[Token(Token = "0x40004F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Quaternion relativeRotation;

		[Token(Token = "0x600061B")]
		[Address(RVA = "0x119C3BC", Offset = "0x119C3BC", VA = "0x119C3BC")]
		public BakerTransform(Transform transform, Transform root, bool recordPosition, bool isRootNode)
		{
		}

		[Token(Token = "0x600061C")]
		[Address(RVA = "0x119C5AC", Offset = "0x119C5AC", VA = "0x119C5AC")]
		public void SetRelativeSpace(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600061D")]
		[Address(RVA = "0x119C5C0", Offset = "0x119C5C0", VA = "0x119C5C0")]
		public void SetCurves(AnimationClip clip)
		{
		}

		[Token(Token = "0x600061E")]
		[Address(RVA = "0x119C890", Offset = "0x119C890", VA = "0x119C890")]
		private void AddRootMotionCurves(AnimationClip clip)
		{
		}

		[Token(Token = "0x600061F")]
		[Address(RVA = "0x119C468", Offset = "0x119C468", VA = "0x119C468")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000620")]
		[Address(RVA = "0x119CB34", Offset = "0x119CB34", VA = "0x119CB34")]
		public void ReduceKeyframes(float maxError)
		{
		}

		[Token(Token = "0x6000621")]
		[Address(RVA = "0x119CBA8", Offset = "0x119CBA8", VA = "0x119CBA8")]
		public void SetKeyframes(float time)
		{
		}

		[Token(Token = "0x6000622")]
		[Address(RVA = "0x119CD5C", Offset = "0x119CD5C", VA = "0x119CD5C")]
		public void AddLoopFrame(float time)
		{
		}
	}
	[Token(Token = "0x20000F4")]
	public class HumanoidBaker : Baker
	{
		[Token(Token = "0x40004F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E344", Offset = "0x84E344")]
		public bool bakeHandIK;

		[Token(Token = "0x40004F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E37C", Offset = "0x84E37C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84E37C", Offset = "0x84E37C")]
		public float IKKeyReductionError;

		[Token(Token = "0x40004FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E3D4", Offset = "0x84E3D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84E3D4", Offset = "0x84E3D4")]
		public int muscleFrameRateDiv;

		[Token(Token = "0x40004FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BakerMuscle[] bakerMuscles;

		[Token(Token = "0x40004FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private BakerHumanoidQT rootQT;

		[Token(Token = "0x40004FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BakerHumanoidQT leftFootQT;

		[Token(Token = "0x40004FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BakerHumanoidQT rightFootQT;

		[Token(Token = "0x40004FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private BakerHumanoidQT leftHandQT;

		[Token(Token = "0x4000500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private BakerHumanoidQT rightHandQT;

		[Token(Token = "0x4000501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float[] muscles;

		[Token(Token = "0x4000502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private HumanPose pose;

		[Token(Token = "0x4000503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private HumanPoseHandler handler;

		[Token(Token = "0x4000504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 bodyPosition;

		[Token(Token = "0x4000505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Quaternion bodyRotation;

		[Token(Token = "0x4000506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int mN;

		[Token(Token = "0x4000507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion lastBodyRotation;

		[Token(Token = "0x6000623")]
		[Address(RVA = "0xBA9DC0", Offset = "0xBA9DC0", VA = "0xBA9DC0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000624")]
		[Address(RVA = "0xBAA348", Offset = "0xBAA348", VA = "0xBAA348", Slot = "4")]
		protected override Transform GetCharacterRoot()
		{
			return null;
		}

		[Token(Token = "0x6000625")]
		[Address(RVA = "0xBAA368", Offset = "0xBAA368", VA = "0xBAA368", Slot = "5")]
		protected override void OnStartBaking()
		{
		}

		[Token(Token = "0x6000626")]
		[Address(RVA = "0xBAA444", Offset = "0xBAA444", VA = "0xBAA444", Slot = "6")]
		protected override void OnSetLoopFrame(float time)
		{
		}

		[Token(Token = "0x6000627")]
		[Address(RVA = "0xBAA520", Offset = "0xBAA520", VA = "0xBAA520", Slot = "7")]
		protected override void OnSetCurves(AnimationClip clip)
		{
		}

		[Token(Token = "0x6000628")]
		[Address(RVA = "0xBAA6F0", Offset = "0xBAA6F0", VA = "0xBAA6F0", Slot = "8")]
		protected override void OnSetKeyframes(float time, bool lastFrame)
		{
		}

		[Token(Token = "0x6000629")]
		[Address(RVA = "0xBAA9B8", Offset = "0xBAA9B8", VA = "0xBAA9B8")]
		private void UpdateHumanPose()
		{
		}

		[Token(Token = "0x600062A")]
		[Address(RVA = "0xBAAA94", Offset = "0xBAAA94", VA = "0xBAAA94")]
		public HumanoidBaker()
		{
		}
	}
	[Token(Token = "0x20000F5")]
	public class CameraController : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200040F")]
		public enum UpdateMode
		{
			[Token(Token = "0x4001F93")]
			Update,
			[Token(Token = "0x4001F94")]
			FixedUpdate,
			[Token(Token = "0x4001F95")]
			LateUpdate,
			[Token(Token = "0x4001F96")]
			FixedLateUpdate
		}

		[Token(Token = "0x4000508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform target;

		[Token(Token = "0x4000509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationSpace;

		[Token(Token = "0x400050A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UpdateMode updateMode;

		[Token(Token = "0x400050B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool lockCursor;

		[Token(Token = "0x400050C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84E428", Offset = "0x84E428")]
		public bool smoothFollow;

		[Token(Token = "0x400050D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Vector3 offset;

		[Token(Token = "0x400050E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float followSpeed;

		[Token(Token = "0x400050F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84E460", Offset = "0x84E460")]
		public float rotationSensitivity;

		[Token(Token = "0x4000510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float yMinLimit;

		[Token(Token = "0x4000511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float yMaxLimit;

		[Token(Token = "0x4000512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool rotateAlways;

		[Token(Token = "0x4000513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool rotateOnLeftButton;

		[Token(Token = "0x4000514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4E")]
		public bool rotateOnRightButton;

		[Token(Token = "0x4000515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4F")]
		public bool rotateOnMiddleButton;

		[Token(Token = "0x4000516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84E498", Offset = "0x84E498")]
		public float distance;

		[Token(Token = "0x4000517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float minDistance;

		[Token(Token = "0x4000518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float maxDistance;

		[Token(Token = "0x4000519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float zoomSpeed;

		[Token(Token = "0x400051A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float zoomSensitivity;

		[Token(Token = "0x400051B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x84E4D0", Offset = "0x84E4D0")]
		public LayerMask blockingLayers;

		[Token(Token = "0x400051C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float blockingRadius;

		[Token(Token = "0x400051D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float blockingSmoothTime;

		[Token(Token = "0x400051E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84E508", Offset = "0x84E508")]
		public float blockedOffset;

		[Token(Token = "0x400051F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84E520", Offset = "0x84E520")]
		private float <x>k__BackingField;

		[Token(Token = "0x4000520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84E530", Offset = "0x84E530")]
		private float <y>k__BackingField;

		[Token(Token = "0x4000521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84E540", Offset = "0x84E540")]
		private float <distanceTarget>k__BackingField;

		[Token(Token = "0x4000522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 targetDistance;

		[Token(Token = "0x4000523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 position;

		[Token(Token = "0x4000524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Quaternion rotation;

		[Token(Token = "0x4000525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 smoothPosition;

		[Token(Token = "0x4000526")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Camera cam;

		[Token(Token = "0x4000527")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool fixedFrame;

		[Token(Token = "0x4000528")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private float fixedDeltaTime;

		[Token(Token = "0x4000529")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Quaternion r;

		[Token(Token = "0x400052A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastUp;

		[Token(Token = "0x400052B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float blockedDistance;

		[Token(Token = "0x400052C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float blockedDistanceV;

		[Token(Token = "0x17000083")]
		public float x
		{
			[Token(Token = "0x600062B")]
			[Address(RVA = "0xDBF2BC", Offset = "0xDBF2BC", VA = "0xDBF2BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856290", Offset = "0x856290")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600062C")]
			[Address(RVA = "0xDBF2C4", Offset = "0xDBF2C4", VA = "0xDBF2C4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8562A0", Offset = "0x8562A0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000084")]
		public float y
		{
			[Token(Token = "0x600062D")]
			[Address(RVA = "0xDBF2CC", Offset = "0xDBF2CC", VA = "0xDBF2CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8562B0", Offset = "0x8562B0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600062E")]
			[Address(RVA = "0xDBF2D4", Offset = "0xDBF2D4", VA = "0xDBF2D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8562C0", Offset = "0x8562C0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public float distanceTarget
		{
			[Token(Token = "0x600062F")]
			[Address(RVA = "0xDBF2DC", Offset = "0xDBF2DC", VA = "0xDBF2DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8562D0", Offset = "0x8562D0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000630")]
			[Address(RVA = "0xDBF2E4", Offset = "0xDBF2E4", VA = "0xDBF2E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8562E0", Offset = "0x8562E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000086")]
		private float zoomAdd
		{
			[Token(Token = "0x600063A")]
			[Address(RVA = "0xDBFB88", Offset = "0xDBFB88", VA = "0xDBFB88")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6000631")]
		[Address(RVA = "0xDBF2EC", Offset = "0xDBF2EC", VA = "0xDBF2EC")]
		public void SetAngles(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000632")]
		[Address(RVA = "0xDBF328", Offset = "0xDBF328", VA = "0xDBF328")]
		public void SetAngles(float yaw, float pitch)
		{
		}

		[Token(Token = "0x6000633")]
		[Address(RVA = "0xDBF330", Offset = "0xDBF330", VA = "0xDBF330", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000634")]
		[Address(RVA = "0xDBF44C", Offset = "0xDBF44C", VA = "0xDBF44C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000635")]
		[Address(RVA = "0xDBF4B0", Offset = "0xDBF4B0", VA = "0xDBF4B0", Slot = "6")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000636")]
		[Address(RVA = "0xDBF518", Offset = "0xDBF518", VA = "0xDBF518", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000637")]
		[Address(RVA = "0xDBF57C", Offset = "0xDBF57C", VA = "0xDBF57C")]
		public void UpdateInput()
		{
		}

		[Token(Token = "0x6000638")]
		[Address(RVA = "0xDBF488", Offset = "0xDBF488", VA = "0xDBF488")]
		public void UpdateTransform()
		{
		}

		[Token(Token = "0x6000639")]
		[Address(RVA = "0xDBF6FC", Offset = "0xDBF6FC", VA = "0xDBF6FC")]
		public void UpdateTransform(float deltaTime)
		{
		}

		[Token(Token = "0x600063B")]
		[Address(RVA = "0xDBFB58", Offset = "0xDBFB58", VA = "0xDBFB58")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x600063C")]
		[Address(RVA = "0xDBFC00", Offset = "0xDBFC00", VA = "0xDBFC00")]
		public CameraController()
		{
		}
	}
	[Token(Token = "0x20000F6")]
	public class CameraControllerFPS : MonoBehaviour
	{
		[Token(Token = "0x400052D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rotationSensitivity;

		[Token(Token = "0x400052E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float yMinLimit;

		[Token(Token = "0x400052F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float yMaxLimit;

		[Token(Token = "0x4000530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float x;

		[Token(Token = "0x4000531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float y;

		[Token(Token = "0x600063D")]
		[Address(RVA = "0xDBFCA4", Offset = "0xDBFCA4", VA = "0xDBFCA4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600063E")]
		[Address(RVA = "0xDBFCDC", Offset = "0xDBFCDC", VA = "0xDBFCDC")]
		public void LateUpdate()
		{
		}

		[Token(Token = "0x600063F")]
		[Address(RVA = "0xDBFE8C", Offset = "0xDBFE8C", VA = "0xDBFE8C")]
		private float ClampAngle(float angle, float min, float max)
		{
			return default(float);
		}

		[Token(Token = "0x6000640")]
		[Address(RVA = "0xDBFEBC", Offset = "0xDBFEBC", VA = "0xDBFEBC")]
		public CameraControllerFPS()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F7")]
	public enum Axis
	{
		[Token(Token = "0x4000533")]
		X,
		[Token(Token = "0x4000534")]
		Y,
		[Token(Token = "0x4000535")]
		Z
	}
	[Token(Token = "0x20000F8")]
	public class AxisTools
	{
		[Token(Token = "0x6000641")]
		[Address(RVA = "0x1199DD0", Offset = "0x1199DD0", VA = "0x1199DD0")]
		public static Vector3 ToVector3(Axis axis)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000642")]
		[Address(RVA = "0x1199DF4", Offset = "0x1199DF4", VA = "0x1199DF4")]
		public static Axis ToAxis(Vector3 v)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000643")]
		[Address(RVA = "0x1199E2C", Offset = "0x1199E2C", VA = "0x1199E2C")]
		public static Axis GetAxisToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000644")]
		[Address(RVA = "0x1199F1C", Offset = "0x1199F1C", VA = "0x1199F1C")]
		public static Axis GetAxisToDirection(Transform t, Vector3 direction)
		{
			return default(Axis);
		}

		[Token(Token = "0x6000645")]
		[Address(RVA = "0x1199EC4", Offset = "0x1199EC4", VA = "0x1199EC4")]
		public static Vector3 GetAxisVectorToPoint(Transform t, Vector3 worldPosition)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000646")]
		[Address(RVA = "0x1199FB4", Offset = "0x1199FB4", VA = "0x1199FB4")]
		public static Vector3 GetAxisVectorToDirection(Transform t, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000647")]
		[Address(RVA = "0x1199FFC", Offset = "0x1199FFC", VA = "0x1199FFC")]
		public static Vector3 GetAxisVectorToDirection(Quaternion r, Vector3 direction)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000648")]
		[Address(RVA = "0x119A1C0", Offset = "0x119A1C0", VA = "0x119A1C0")]
		public AxisTools()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20000F9")]
	public class BipedLimbOrientations
	{
		[Serializable]
		[Token(Token = "0x2000410")]
		public class LimbOrientation
		{
			[Token(Token = "0x4001F97")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 upperBoneForwardAxis;

			[Token(Token = "0x4001F98")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 lowerBoneForwardAxis;

			[Token(Token = "0x4001F99")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 lastBoneLeftAxis;

			[Token(Token = "0x6001B5E")]
			[Address(RVA = "0x19ABE7C", Offset = "0x19ABE7C", VA = "0x19ABE7C")]
			public LimbOrientation(Vector3 upperBoneForwardAxis, Vector3 lowerBoneForwardAxis, Vector3 lastBoneLeftAxis)
			{
			}
		}

		[Token(Token = "0x4000536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public LimbOrientation leftArm;

		[Token(Token = "0x4000537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LimbOrientation rightArm;

		[Token(Token = "0x4000538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LimbOrientation leftLeg;

		[Token(Token = "0x4000539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LimbOrientation rightLeg;

		[Token(Token = "0x17000087")]
		public static BipedLimbOrientations UMA
		{
			[Token(Token = "0x600064A")]
			[Address(RVA = "0xF3A138", Offset = "0xF3A138", VA = "0xF3A138")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000088")]
		public static BipedLimbOrientations MaxBiped
		{
			[Token(Token = "0x600064B")]
			[Address(RVA = "0xF3A3A8", Offset = "0xF3A3A8", VA = "0xF3A3A8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000649")]
		[Address(RVA = "0xF3A0B8", Offset = "0xF3A0B8", VA = "0xF3A0B8")]
		public BipedLimbOrientations(LimbOrientation leftArm, LimbOrientation rightArm, LimbOrientation leftLeg, LimbOrientation rightLeg)
		{
		}
	}
	[Token(Token = "0x20000FA")]
	public static class BipedNaming
	{
		[Serializable]
		[Token(Token = "0x2000411")]
		public enum BoneType
		{
			[Token(Token = "0x4001F9B")]
			Unassigned,
			[Token(Token = "0x4001F9C")]
			Spine,
			[Token(Token = "0x4001F9D")]
			Head,
			[Token(Token = "0x4001F9E")]
			Arm,
			[Token(Token = "0x4001F9F")]
			Leg,
			[Token(Token = "0x4001FA0")]
			Tail,
			[Token(Token = "0x4001FA1")]
			Eye
		}

		[Serializable]
		[Token(Token = "0x2000412")]
		public enum BoneSide
		{
			[Token(Token = "0x4001FA3")]
			Center,
			[Token(Token = "0x4001FA4")]
			Left,
			[Token(Token = "0x4001FA5")]
			Right
		}

		[Token(Token = "0x400053A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string[] typeLeft;

		[Token(Token = "0x400053B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string[] typeRight;

		[Token(Token = "0x400053C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static string[] typeSpine;

		[Token(Token = "0x400053D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string[] typeHead;

		[Token(Token = "0x400053E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string[] typeArm;

		[Token(Token = "0x400053F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static string[] typeLeg;

		[Token(Token = "0x4000540")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static string[] typeTail;

		[Token(Token = "0x4000541")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static string[] typeEye;

		[Token(Token = "0x4000542")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string[] typeExclude;

		[Token(Token = "0x4000543")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string[] typeExcludeSpine;

		[Token(Token = "0x4000544")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static string[] typeExcludeHead;

		[Token(Token = "0x4000545")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public static string[] typeExcludeArm;

		[Token(Token = "0x4000546")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static string[] typeExcludeLeg;

		[Token(Token = "0x4000547")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public static string[] typeExcludeTail;

		[Token(Token = "0x4000548")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public static string[] typeExcludeEye;

		[Token(Token = "0x4000549")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public static string[] pelvis;

		[Token(Token = "0x400054A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static string[] hand;

		[Token(Token = "0x400054B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static string[] foot;

		[Token(Token = "0x600064C")]
		[Address(RVA = "0xF3A618", Offset = "0xF3A618", VA = "0xF3A618")]
		public static Transform[] GetBonesOfType(BoneType boneType, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600064D")]
		[Address(RVA = "0xF3A940", Offset = "0xF3A940", VA = "0xF3A940")]
		public static Transform[] GetBonesOfSide(BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600064E")]
		[Address(RVA = "0xF3ABB8", Offset = "0xF3ABB8", VA = "0xF3ABB8")]
		public static Transform[] GetBonesOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x600064F")]
		[Address(RVA = "0xF3AC40", Offset = "0xF3AC40", VA = "0xF3AC40")]
		public static Transform GetFirstBoneOfTypeAndSide(BoneType boneType, BoneSide boneSide, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000650")]
		[Address(RVA = "0xF3ACF0", Offset = "0xF3ACF0", VA = "0xF3ACF0")]
		public static Transform GetNamingMatch(Transform[] transforms, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000651")]
		[Address(RVA = "0xF3A7EC", Offset = "0xF3A7EC", VA = "0xF3A7EC")]
		public static BoneType GetBoneType(string boneName)
		{
			return default(BoneType);
		}

		[Token(Token = "0x6000652")]
		[Address(RVA = "0xF3AB14", Offset = "0xF3AB14", VA = "0xF3AB14")]
		public static BoneSide GetBoneSide(string boneName)
		{
			return default(BoneSide);
		}

		[Token(Token = "0x6000653")]
		[Address(RVA = "0xF3B550", Offset = "0xF3B550", VA = "0xF3B550")]
		public static Transform GetBone(Transform[] transforms, BoneType boneType, BoneSide boneSide = BoneSide.Center, params string[][] namings)
		{
			return null;
		}

		[Token(Token = "0x6000654")]
		[Address(RVA = "0xF3B358", Offset = "0xF3B358", VA = "0xF3B358")]
		private static bool isLeft(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000655")]
		[Address(RVA = "0xF3B454", Offset = "0xF3B454", VA = "0xF3B454")]
		private static bool isRight(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000656")]
		[Address(RVA = "0xF3AF08", Offset = "0xF3AF08", VA = "0xF3AF08")]
		private static bool isSpine(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000657")]
		[Address(RVA = "0xF3AFC0", Offset = "0xF3AFC0", VA = "0xF3AFC0")]
		private static bool isHead(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000658")]
		[Address(RVA = "0xF3B078", Offset = "0xF3B078", VA = "0xF3B078")]
		private static bool isArm(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x6000659")]
		[Address(RVA = "0xF3B130", Offset = "0xF3B130", VA = "0xF3B130")]
		private static bool isLeg(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600065A")]
		[Address(RVA = "0xF3B1E8", Offset = "0xF3B1E8", VA = "0xF3B1E8")]
		private static bool isTail(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600065B")]
		[Address(RVA = "0xF3B2A0", Offset = "0xF3B2A0", VA = "0xF3B2A0")]
		private static bool isEye(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xF3B758", Offset = "0xF3B758", VA = "0xF3B758")]
		private static bool isTypeExclude(string boneName)
		{
			return default(bool);
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xF3AE20", Offset = "0xF3AE20", VA = "0xF3AE20")]
		private static bool matchesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xF3B6C8", Offset = "0xF3B6C8", VA = "0xF3B6C8")]
		private static bool excludesNaming(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xF3B7CC", Offset = "0xF3B7CC", VA = "0xF3B7CC")]
		private static bool matchesLastLetter(string boneName, string[] namingConvention)
		{
			return default(bool);
		}

		[Token(Token = "0x6000660")]
		[Address(RVA = "0xF3B8A0", Offset = "0xF3B8A0", VA = "0xF3B8A0")]
		private static bool LastLetterIs(string boneName, string letter)
		{
			return default(bool);
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xF3B650", Offset = "0xF3B650", VA = "0xF3B650")]
		private static string firstLetter(string boneName)
		{
			return null;
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xF3B5DC", Offset = "0xF3B5DC", VA = "0xF3B5DC")]
		private static string lastLetter(string boneName)
		{
			return null;
		}
	}
	[Serializable]
	[Token(Token = "0x20000FB")]
	public class BipedReferences
	{
		[Token(Token = "0x2000413")]
		public struct AutoDetectParams
		{
			[Token(Token = "0x4001FA6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool legsParentInSpine;

			[Token(Token = "0x4001FA7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool includeEyes;

			[Token(Token = "0x17000222")]
			public static AutoDetectParams Default
			{
				[Token(Token = "0x6001B60")]
				[Address(RVA = "0x19ABF40", Offset = "0x19ABF40", VA = "0x19ABF40")]
				get
				{
					return default(AutoDetectParams);
				}
			}

			[Token(Token = "0x6001B5F")]
			[Address(RVA = "0x19ABF2C", Offset = "0x19ABF2C", VA = "0x19ABF2C")]
			public AutoDetectParams(bool legsParentInSpine, bool includeEyes)
			{
			}
		}

		[Token(Token = "0x400054C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform root;

		[Token(Token = "0x400054D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pelvis;

		[Token(Token = "0x400054E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftThigh;

		[Token(Token = "0x400054F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftCalf;

		[Token(Token = "0x4000550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftFoot;

		[Token(Token = "0x4000551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightThigh;

		[Token(Token = "0x4000552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightCalf;

		[Token(Token = "0x4000553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x4000554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftUpperArm;

		[Token(Token = "0x4000555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftForearm;

		[Token(Token = "0x4000556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftHand;

		[Token(Token = "0x4000557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightUpperArm;

		[Token(Token = "0x4000558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightForearm;

		[Token(Token = "0x4000559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightHand;

		[Token(Token = "0x400055A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform head;

		[Token(Token = "0x400055B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform[] spine;

		[Token(Token = "0x400055C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform[] eyes;

		[Token(Token = "0x17000089")]
		public virtual bool isFilled
		{
			[Token(Token = "0x6000664")]
			[Address(RVA = "0xF42AC0", Offset = "0xF42AC0", VA = "0xF42AC0", Slot = "4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008A")]
		public bool isEmpty
		{
			[Token(Token = "0x6000665")]
			[Address(RVA = "0xF42EA8", Offset = "0xF42EA8", VA = "0xF42EA8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000666")]
		[Address(RVA = "0xF42EB8", Offset = "0xF42EB8", VA = "0xF42EB8", Slot = "5")]
		public virtual bool IsEmpty(bool includeRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000667")]
		[Address(RVA = "0xF432D8", Offset = "0xF432D8", VA = "0xF432D8", Slot = "6")]
		public virtual bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000668")]
		[Address(RVA = "0xF43704", Offset = "0xF43704", VA = "0xF43704")]
		public static bool AutoDetectReferences(BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000669")]
		[Address(RVA = "0xF43E64", Offset = "0xF43E64", VA = "0xF43E64")]
		public static void DetectReferencesByNaming(BipedReferences references, Transform root, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x600066A")]
		[Address(RVA = "0xF439BC", Offset = "0xF439BC", VA = "0xF439BC")]
		public static void AssignHumanoidReferences(BipedReferences references, Animator animator, AutoDetectParams autoDetectParams)
		{
		}

		[Token(Token = "0x600066B")]
		[Address(RVA = "0xF446D8", Offset = "0xF446D8", VA = "0xF446D8")]
		public static bool SetupError(BipedReferences references, string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600066C")]
		[Address(RVA = "0xF447D4", Offset = "0xF447D4", VA = "0xF447D4")]
		public static bool SetupWarning(BipedReferences references, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600066D")]
		[Address(RVA = "0xF44D8C", Offset = "0xF44D8C", VA = "0xF44D8C")]
		private static bool IsNeckBone(Transform bone, Transform leftUpperArm)
		{
			return default(bool);
		}

		[Token(Token = "0x600066E")]
		[Address(RVA = "0xF44B70", Offset = "0xF44B70", VA = "0xF44B70")]
		private static bool AddBoneToEyes(Transform bone, BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x600066F")]
		[Address(RVA = "0xF449EC", Offset = "0xF449EC", VA = "0xF449EC")]
		private static bool AddBoneToSpine(Transform bone, BipedReferences references, AutoDetectParams autoDetectParams)
		{
			return default(bool);
		}

		[Token(Token = "0x6000670")]
		[Address(RVA = "0xF44874", Offset = "0xF44874", VA = "0xF44874")]
		private static void DetectLimb(BipedNaming.BoneType boneType, BipedNaming.BoneSide boneSide, Transform firstBone, Transform secondBone, Transform lastBone, Transform[] transforms)
		{
		}

		[Token(Token = "0x6000671")]
		[Address(RVA = "0xF44C7C", Offset = "0xF44C7C", VA = "0xF44C7C")]
		private static void AddBoneToHierarchy(Transform[] bones, Transform transform)
		{
		}

		[Token(Token = "0x6000672")]
		[Address(RVA = "0xF44E84", Offset = "0xF44E84", VA = "0xF44E84")]
		private static bool LimbError(Transform bone1, Transform bone2, Transform bone3, string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000673")]
		[Address(RVA = "0xF45A94", Offset = "0xF45A94", VA = "0xF45A94")]
		private static bool LimbWarning(Transform bone1, Transform bone2, Transform bone3, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000674")]
		[Address(RVA = "0xF454FC", Offset = "0xF454FC", VA = "0xF454FC")]
		private static bool SpineError(BipedReferences references, string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000675")]
		[Address(RVA = "0xF45DB0", Offset = "0xF45DB0", VA = "0xF45DB0")]
		private static bool SpineWarning(BipedReferences references, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000676")]
		[Address(RVA = "0xF4587C", Offset = "0xF4587C", VA = "0xF4587C")]
		private static bool EyesError(BipedReferences references, string errorMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000677")]
		[Address(RVA = "0xF45DB8", Offset = "0xF45DB8", VA = "0xF45DB8")]
		private static bool EyesWarning(BipedReferences references, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000678")]
		[Address(RVA = "0xF45DC0", Offset = "0xF45DC0", VA = "0xF45DC0")]
		private static bool RootHeightWarning(BipedReferences references, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x6000679")]
		[Address(RVA = "0xF45F94", Offset = "0xF45F94", VA = "0xF45F94")]
		private static bool FacingAxisWarning(BipedReferences references, string warningMessage)
		{
			return default(bool);
		}

		[Token(Token = "0x600067A")]
		[Address(RVA = "0xF4615C", Offset = "0xF4615C", VA = "0xF4615C")]
		private static float GetVerticalOffset(Vector3 p1, Vector3 p2, Quaternion rotation)
		{
			return default(float);
		}

		[Token(Token = "0x600067B")]
		[Address(RVA = "0xF43930", Offset = "0xF43930", VA = "0xF43930")]
		public BipedReferences()
		{
		}
	}
	[Token(Token = "0x20000FC")]
	public class Comments : MonoBehaviour
	{
		[Token(Token = "0x400055D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Multiline]
		public string text;

		[Token(Token = "0x600067C")]
		[Address(RVA = "0xC47FF0", Offset = "0xC47FF0", VA = "0xC47FF0")]
		public Comments()
		{
		}
	}
	[Token(Token = "0x20000FD")]
	public class DemoGUIMessage : MonoBehaviour
	{
		[Token(Token = "0x400055E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x400055F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color color;

		[Token(Token = "0x600067D")]
		[Address(RVA = "0xBFE64C", Offset = "0xBFE64C", VA = "0xBFE64C")]
		private void OnGUI()
		{
		}

		[Token(Token = "0x600067E")]
		[Address(RVA = "0xBFE780", Offset = "0xBFE780", VA = "0xBFE780")]
		public DemoGUIMessage()
		{
		}
	}
	[Token(Token = "0x20000FE")]
	public class Hierarchy
	{
		[Token(Token = "0x600067F")]
		[Address(RVA = "0xBA8F28", Offset = "0xBA8F28", VA = "0xBA8F28")]
		public static bool HierarchyIsValid(Transform[] bones)
		{
			return default(bool);
		}

		[Token(Token = "0x6000680")]
		[Address(RVA = "0xBA9114", Offset = "0xBA9114", VA = "0xBA9114")]
		public static UnityEngine.Object ContainsDuplicate(UnityEngine.Object[] objects)
		{
			return null;
		}

		[Token(Token = "0x6000681")]
		[Address(RVA = "0xBA8FC0", Offset = "0xBA8FC0", VA = "0xBA8FC0")]
		public static bool IsAncestor(Transform transform, Transform ancestor)
		{
			return default(bool);
		}

		[Token(Token = "0x6000682")]
		[Address(RVA = "0xBA9234", Offset = "0xBA9234", VA = "0xBA9234")]
		public static bool ContainsChild(Transform transform, Transform child)
		{
			return default(bool);
		}

		[Token(Token = "0x6000683")]
		[Address(RVA = "0xBA9360", Offset = "0xBA9360", VA = "0xBA9360")]
		public static void AddAncestors(Transform transform, Transform blocker, Transform[] array)
		{
		}

		[Token(Token = "0x6000684")]
		[Address(RVA = "0xBA95B0", Offset = "0xBA95B0", VA = "0xBA95B0")]
		public static Transform GetAncestor(Transform transform, int minChildCount)
		{
			return null;
		}

		[Token(Token = "0x6000685")]
		[Address(RVA = "0xBA96B8", Offset = "0xBA96B8", VA = "0xBA96B8")]
		public static Transform GetFirstCommonAncestor(Transform t1, Transform t2)
		{
			return null;
		}

		[Token(Token = "0x6000686")]
		[Address(RVA = "0xBA982C", Offset = "0xBA982C", VA = "0xBA982C")]
		public static Transform GetFirstCommonAncestor(Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000687")]
		[Address(RVA = "0xBA9BF4", Offset = "0xBA9BF4", VA = "0xBA9BF4")]
		public static Transform GetFirstCommonAncestorRecursive(Transform transform, Transform[] transforms)
		{
			return null;
		}

		[Token(Token = "0x6000688")]
		[Address(RVA = "0xBA99B8", Offset = "0xBA99B8", VA = "0xBA99B8")]
		public static bool IsCommonAncestor(Transform transform, Transform[] transforms)
		{
			return default(bool);
		}

		[Token(Token = "0x6000689")]
		[Address(RVA = "0xBA9DA8", Offset = "0xBA9DA8", VA = "0xBA9DA8")]
		public Hierarchy()
		{
		}
	}
	[Token(Token = "0x20000FF")]
	public class InspectorComment : PropertyAttribute
	{
		[Token(Token = "0x4000560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x600068A")]
		[Address(RVA = "0xBAD0D8", Offset = "0xBAD0D8", VA = "0xBAD0D8")]
		public InspectorComment(string name)
		{
		}

		[Token(Token = "0x600068B")]
		[Address(RVA = "0xBAD164", Offset = "0xBAD164", VA = "0xBAD164")]
		public InspectorComment(string name, string color)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000100")]
	public enum InterpolationMode
	{
		[Token(Token = "0x4000563")]
		None,
		[Token(Token = "0x4000564")]
		InOutCubic,
		[Token(Token = "0x4000565")]
		InOutQuintic,
		[Token(Token = "0x4000566")]
		InOutSine,
		[Token(Token = "0x4000567")]
		InQuintic,
		[Token(Token = "0x4000568")]
		InQuartic,
		[Token(Token = "0x4000569")]
		InCubic,
		[Token(Token = "0x400056A")]
		InQuadratic,
		[Token(Token = "0x400056B")]
		InElastic,
		[Token(Token = "0x400056C")]
		InElasticSmall,
		[Token(Token = "0x400056D")]
		InElasticBig,
		[Token(Token = "0x400056E")]
		InSine,
		[Token(Token = "0x400056F")]
		InBack,
		[Token(Token = "0x4000570")]
		OutQuintic,
		[Token(Token = "0x4000571")]
		OutQuartic,
		[Token(Token = "0x4000572")]
		OutCubic,
		[Token(Token = "0x4000573")]
		OutInCubic,
		[Token(Token = "0x4000574")]
		OutInQuartic,
		[Token(Token = "0x4000575")]
		OutElastic,
		[Token(Token = "0x4000576")]
		OutElasticSmall,
		[Token(Token = "0x4000577")]
		OutElasticBig,
		[Token(Token = "0x4000578")]
		OutSine,
		[Token(Token = "0x4000579")]
		OutBack,
		[Token(Token = "0x400057A")]
		OutBackCubic,
		[Token(Token = "0x400057B")]
		OutBackQuartic,
		[Token(Token = "0x400057C")]
		BackInCubic,
		[Token(Token = "0x400057D")]
		BackInQuartic
	}
	[Token(Token = "0x2000101")]
	public class Interp
	{
		[Token(Token = "0x600068C")]
		[Address(RVA = "0xBAFA50", Offset = "0xBAFA50", VA = "0xBAFA50")]
		public static float Float(float t, InterpolationMode mode)
		{
			return default(float);
		}

		[Token(Token = "0x600068D")]
		[Address(RVA = "0xBB03EC", Offset = "0xBB03EC", VA = "0xBB03EC")]
		public static Vector3 V3(Vector3 v1, Vector3 v2, float t, InterpolationMode mode)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600068E")]
		[Address(RVA = "0xBB0460", Offset = "0xBB0460", VA = "0xBB0460")]
		public static float LerpValue(float value, float target, float increaseSpeed, float decreaseSpeed)
		{
			return default(float);
		}

		[Token(Token = "0x600068F")]
		[Address(RVA = "0xBAFE54", Offset = "0xBAFE54", VA = "0xBAFE54")]
		private static float None(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000690")]
		[Address(RVA = "0xBAFE60", Offset = "0xBAFE60", VA = "0xBAFE60")]
		private static float InOutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000691")]
		[Address(RVA = "0xBAFE84", Offset = "0xBAFE84", VA = "0xBAFE84")]
		private static float InOutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000692")]
		[Address(RVA = "0xBAFEC0", Offset = "0xBAFEC0", VA = "0xBAFEC0")]
		private static float InQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000693")]
		[Address(RVA = "0xBAFED8", Offset = "0xBAFED8", VA = "0xBAFED8")]
		private static float InQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000694")]
		[Address(RVA = "0xBAFEEC", Offset = "0xBAFEEC", VA = "0xBAFEEC")]
		private static float InCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000695")]
		[Address(RVA = "0xBAFF00", Offset = "0xBAFF00", VA = "0xBAFF00")]
		private static float InQuadratic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000696")]
		[Address(RVA = "0xBAFF10", Offset = "0xBAFF10", VA = "0xBAFF10")]
		private static float OutQuintic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000697")]
		[Address(RVA = "0xBAFF58", Offset = "0xBAFF58", VA = "0xBAFF58")]
		private static float OutQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000698")]
		[Address(RVA = "0xBAFF90", Offset = "0xBAFF90", VA = "0xBAFF90")]
		private static float OutCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x6000699")]
		[Address(RVA = "0xBAFFB8", Offset = "0xBAFFB8", VA = "0xBAFFB8")]
		private static float OutInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600069A")]
		[Address(RVA = "0xBB04EC", Offset = "0xBB04EC", VA = "0xBB04EC")]
		private static float OutInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600069B")]
		[Address(RVA = "0xBAFFEC", Offset = "0xBAFFEC", VA = "0xBAFFEC")]
		private static float BackInCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600069C")]
		[Address(RVA = "0xBB0014", Offset = "0xBB0014", VA = "0xBB0014")]
		private static float BackInQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600069D")]
		[Address(RVA = "0xBB0044", Offset = "0xBB0044", VA = "0xBB0044")]
		private static float OutBackCubic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600069E")]
		[Address(RVA = "0xBB0078", Offset = "0xBB0078", VA = "0xBB0078")]
		private static float OutBackQuartic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x600069F")]
		[Address(RVA = "0xBB00BC", Offset = "0xBB00BC", VA = "0xBB00BC")]
		private static float OutElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006A0")]
		[Address(RVA = "0xBB0120", Offset = "0xBB0120", VA = "0xBB0120")]
		private static float OutElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006A1")]
		[Address(RVA = "0xBB0184", Offset = "0xBB0184", VA = "0xBB0184")]
		private static float InElasticSmall(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006A2")]
		[Address(RVA = "0xBB01D8", Offset = "0xBB01D8", VA = "0xBB01D8")]
		private static float InElasticBig(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006A3")]
		[Address(RVA = "0xBB022C", Offset = "0xBB022C", VA = "0xBB022C")]
		private static float InSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006A4")]
		[Address(RVA = "0xBB0268", Offset = "0xBB0268", VA = "0xBB0268")]
		private static float OutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006A5")]
		[Address(RVA = "0xBB02A0", Offset = "0xBB02A0", VA = "0xBB02A0")]
		private static float InOutSine(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006A6")]
		[Address(RVA = "0xBB0520", Offset = "0xBB0520", VA = "0xBB0520")]
		private static float InElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006A7")]
		[Address(RVA = "0xBB02E8", Offset = "0xBB02E8", VA = "0xBB02E8")]
		private static float OutElastic(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006A8")]
		[Address(RVA = "0xBB037C", Offset = "0xBB037C", VA = "0xBB037C")]
		private static float InBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006A9")]
		[Address(RVA = "0xBB03AC", Offset = "0xBB03AC", VA = "0xBB03AC")]
		private static float OutBack(float t, float b, float c)
		{
			return default(float);
		}

		[Token(Token = "0x60006AA")]
		[Address(RVA = "0xBB05B4", Offset = "0xBB05B4", VA = "0xBB05B4")]
		public Interp()
		{
		}
	}
	[Token(Token = "0x2000102")]
	public class LargeHeader : PropertyAttribute
	{
		[Token(Token = "0x400057E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400057F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string color;

		[Token(Token = "0x60006AB")]
		[Address(RVA = "0xCE2238", Offset = "0xCE2238", VA = "0xCE2238")]
		public LargeHeader(string name)
		{
		}

		[Token(Token = "0x60006AC")]
		[Address(RVA = "0xCE22C4", Offset = "0xCE22C4", VA = "0xCE22C4")]
		public LargeHeader(string name, string color)
		{
		}
	}
	[Token(Token = "0x2000103")]
	public static class LayerMaskExtensions
	{
		[Token(Token = "0x60006AD")]
		[Address(RVA = "0xCE2BBC", Offset = "0xCE2BBC", VA = "0xCE2BBC")]
		public static bool Contains(LayerMask mask, int layer)
		{
			return default(bool);
		}

		[Token(Token = "0x60006AE")]
		[Address(RVA = "0xCE2C14", Offset = "0xCE2C14", VA = "0xCE2C14")]
		public static LayerMask Create(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60006AF")]
		[Address(RVA = "0xCE2CE0", Offset = "0xCE2CE0", VA = "0xCE2CE0")]
		public static LayerMask Create(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60006B0")]
		[Address(RVA = "0xCE2C2C", Offset = "0xCE2C2C", VA = "0xCE2C2C")]
		public static LayerMask NamesToMask(params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60006B1")]
		[Address(RVA = "0xCE2CF8", Offset = "0xCE2CF8", VA = "0xCE2CF8")]
		public static LayerMask LayerNumbersToMask(params int[] layerNumbers)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60006B2")]
		[Address(RVA = "0xCE2D9C", Offset = "0xCE2D9C", VA = "0xCE2D9C")]
		public static LayerMask Inverse(this LayerMask original)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60006B3")]
		[Address(RVA = "0xCE2DC8", Offset = "0xCE2DC8", VA = "0xCE2DC8")]
		public static LayerMask AddToMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60006B4")]
		[Address(RVA = "0xCE2E18", Offset = "0xCE2E18", VA = "0xCE2E18")]
		public static LayerMask RemoveFromMask(this LayerMask original, params string[] layerNames)
		{
			return default(LayerMask);
		}

		[Token(Token = "0x60006B5")]
		[Address(RVA = "0xCE2E84", Offset = "0xCE2E84", VA = "0xCE2E84")]
		public static string[] MaskToNames(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60006B6")]
		[Address(RVA = "0xCE2FA0", Offset = "0xCE2FA0", VA = "0xCE2FA0")]
		public static int[] MaskToNumbers(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60006B7")]
		[Address(RVA = "0xCE30A0", Offset = "0xCE30A0", VA = "0xCE30A0")]
		public static string MaskToString(this LayerMask original)
		{
			return null;
		}

		[Token(Token = "0x60006B8")]
		[Address(RVA = "0xCE3104", Offset = "0xCE3104", VA = "0xCE3104")]
		public static string MaskToString(this LayerMask original, string delimiter)
		{
			return null;
		}
	}
	[Token(Token = "0x2000104")]
	public static class QuaTools
	{
		[Token(Token = "0x60006B9")]
		[Address(RVA = "0xDCAA5C", Offset = "0xDCAA5C", VA = "0xDCAA5C")]
		public static Quaternion Lerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006BA")]
		[Address(RVA = "0xDCAAAC", Offset = "0xDCAAAC", VA = "0xDCAAAC")]
		public static Quaternion Slerp(Quaternion fromRotation, Quaternion toRotation, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006BB")]
		[Address(RVA = "0xDCAAFC", Offset = "0xDCAAFC", VA = "0xDCAAFC")]
		public static Quaternion LinearBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006BC")]
		[Address(RVA = "0xDCABA4", Offset = "0xDCABA4", VA = "0xDCABA4")]
		public static Quaternion SphericalBlend(Quaternion q, float weight)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006BD")]
		[Address(RVA = "0xDCAC4C", Offset = "0xDCAC4C", VA = "0xDCAC4C")]
		public static Quaternion FromToAroundAxis(Vector3 fromDirection, Vector3 toDirection, Vector3 axis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006BE")]
		[Address(RVA = "0xDCAD2C", Offset = "0xDCAD2C", VA = "0xDCAD2C")]
		public static Quaternion RotationToLocalSpace(Quaternion space, Quaternion rotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006BF")]
		[Address(RVA = "0xDCAD80", Offset = "0xDCAD80", VA = "0xDCAD80")]
		public static Quaternion FromToRotation(Quaternion from, Quaternion to)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006C0")]
		[Address(RVA = "0xDCAE54", Offset = "0xDCAE54", VA = "0xDCAE54")]
		public static Vector3 GetAxis(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C1")]
		[Address(RVA = "0xDCAF64", Offset = "0xDCAF64", VA = "0xDCAF64")]
		public static Quaternion ClampRotation(Quaternion rotation, float clampWeight, int clampSmoothing)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006C2")]
		[Address(RVA = "0xDCB0FC", Offset = "0xDCB0FC", VA = "0xDCB0FC")]
		public static float ClampAngle(float angle, float clampWeight, int clampSmoothing)
		{
			return default(float);
		}

		[Token(Token = "0x60006C3")]
		[Address(RVA = "0xDCB1F0", Offset = "0xDCB1F0", VA = "0xDCB1F0")]
		public static Quaternion MatchRotation(Quaternion targetRotation, Vector3 targetforwardAxis, Vector3 targetUpAxis, Vector3 forwardAxis, Vector3 upAxis)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60006C4")]
		[Address(RVA = "0xDCB2FC", Offset = "0xDCB2FC", VA = "0xDCB2FC")]
		public static Vector3 ToBiPolar(Vector3 euler)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006C5")]
		[Address(RVA = "0xDCB40C", Offset = "0xDCB40C", VA = "0xDCB40C")]
		public static float ToBiPolar(float angle)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000105")]
	public abstract class Singleton<T> : MonoBehaviour where T : Singleton<T>
	{
		[Token(Token = "0x4000580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static T sInstance;

		[Token(Token = "0x1700008B")]
		public static T instance
		{
			[Token(Token = "0x60006C6")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60006C7")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60006C8")]
		protected Singleton()
		{
		}
	}
	[Token(Token = "0x2000106")]
	public class SolverManager : MonoBehaviour
	{
		[Token(Token = "0x4000581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E560", Offset = "0x84E560")]
		public bool fixTransforms;

		[Token(Token = "0x4000582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4000583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Animation legacy;

		[Token(Token = "0x4000584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool updateFrame;

		[Token(Token = "0x4000585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool componentInitiated;

		[Token(Token = "0x4000586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool skipSolverUpdate;

		[Token(Token = "0x1700008C")]
		private bool animatePhysics
		{
			[Token(Token = "0x60006D0")]
			[Address(RVA = "0x1051F04", Offset = "0x1051F04", VA = "0x1051F04")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700008D")]
		private bool isAnimated
		{
			[Token(Token = "0x60006D4")]
			[Address(RVA = "0x1052250", Offset = "0x1052250", VA = "0x1052250")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60006CA")]
		[Address(RVA = "0x1051DC0", Offset = "0x1051DC0", VA = "0x1051DC0")]
		public void Disable()
		{
		}

		[Token(Token = "0x60006CB")]
		[Address(RVA = "0x1051E68", Offset = "0x1051E68", VA = "0x1051E68", Slot = "4")]
		protected virtual void InitiateSolver()
		{
		}

		[Token(Token = "0x60006CC")]
		[Address(RVA = "0x1051E6C", Offset = "0x1051E6C", VA = "0x1051E6C", Slot = "5")]
		protected virtual void UpdateSolver()
		{
		}

		[Token(Token = "0x60006CD")]
		[Address(RVA = "0x1051E70", Offset = "0x1051E70", VA = "0x1051E70", Slot = "6")]
		protected virtual void FixTransforms()
		{
		}

		[Token(Token = "0x60006CE")]
		[Address(RVA = "0x1051E74", Offset = "0x1051E74", VA = "0x1051E74")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60006CF")]
		[Address(RVA = "0x1051F00", Offset = "0x1051F00", VA = "0x1051F00")]
		private void Start()
		{
		}

		[Token(Token = "0x60006D1")]
		[Address(RVA = "0x1051EAC", Offset = "0x1051EAC", VA = "0x1051EAC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x60006D2")]
		[Address(RVA = "0x1052204", Offset = "0x1052204", VA = "0x1052204")]
		private void Update()
		{
		}

		[Token(Token = "0x60006D3")]
		[Address(RVA = "0x1051FF0", Offset = "0x1051FF0", VA = "0x1051FF0")]
		private void FindAnimatorRecursive(Transform t, bool findInChildren)
		{
		}

		[Token(Token = "0x60006D5")]
		[Address(RVA = "0x1052308", Offset = "0x1052308", VA = "0x1052308")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60006D6")]
		[Address(RVA = "0x1052364", Offset = "0x1052364", VA = "0x1052364")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006D7")]
		[Address(RVA = "0x10523C0", Offset = "0x10523C0", VA = "0x10523C0")]
		public void UpdateSolverExternal()
		{
		}

		[Token(Token = "0x60006D8")]
		[Address(RVA = "0x1052408", Offset = "0x1052408", VA = "0x1052408")]
		public SolverManager()
		{
		}
	}
	[Token(Token = "0x2000107")]
	public class TriggerEventBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x4000587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject target;

		[Token(Token = "0x60006D9")]
		[Address(RVA = "0xC33440", Offset = "0xC33440", VA = "0xC33440")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x60006DA")]
		[Address(RVA = "0xC33500", Offset = "0xC33500", VA = "0xC33500")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x60006DB")]
		[Address(RVA = "0xC335C0", Offset = "0xC335C0", VA = "0xC335C0")]
		private void OnTriggerExit(Collider collider)
		{
		}

		[Token(Token = "0x60006DC")]
		[Address(RVA = "0xC33680", Offset = "0xC33680", VA = "0xC33680")]
		public TriggerEventBroadcaster()
		{
		}
	}
	[Token(Token = "0x2000108")]
	public static class V3Tools
	{
		[Token(Token = "0x60006DD")]
		[Address(RVA = "0xC346A4", Offset = "0xC346A4", VA = "0xC346A4")]
		public static Vector3 Lerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006DE")]
		[Address(RVA = "0xC34744", Offset = "0xC34744", VA = "0xC34744")]
		public static Vector3 Slerp(Vector3 fromVector, Vector3 toVector, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006DF")]
		[Address(RVA = "0xC34780", Offset = "0xC34780", VA = "0xC34780")]
		public static Vector3 ExtractVertical(Vector3 v, Vector3 verticalAxis, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E0")]
		[Address(RVA = "0xC347C4", Offset = "0xC347C4", VA = "0xC347C4")]
		public static Vector3 ExtractHorizontal(Vector3 v, Vector3 normal, float weight)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E1")]
		[Address(RVA = "0xC34860", Offset = "0xC34860", VA = "0xC34860")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E2")]
		[Address(RVA = "0xC349BC", Offset = "0xC349BC", VA = "0xC349BC")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, [Out] bool changed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E3")]
		[Address(RVA = "0xC34B38", Offset = "0xC34B38", VA = "0xC34B38")]
		public static Vector3 ClampDirection(Vector3 direction, Vector3 normalDirection, float clampWeight, int clampSmoothing, [Out] float clampValue)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E4")]
		[Address(RVA = "0xC34CBC", Offset = "0xC34CBC", VA = "0xC34CBC")]
		public static Vector3 LineToPlane(Vector3 origin, Vector3 direction, Vector3 planeNormal, Vector3 planePoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E5")]
		[Address(RVA = "0xC34D78", Offset = "0xC34D78", VA = "0xC34D78")]
		public static Vector3 PointToPlane(Vector3 point, Vector3 planePosition, Vector3 planeNormal)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E6")]
		[Address(RVA = "0xC34E78", Offset = "0xC34E78", VA = "0xC34E78")]
		public static Vector3 TransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60006E7")]
		[Address(RVA = "0xC34F00", Offset = "0xC34F00", VA = "0xC34F00")]
		public static Vector3 InverseTransformPointUnscaled(Transform t, Vector3 point)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000109")]
	public static class Warning
	{
		[Token(Token = "0x2000414")]
		public delegate void Logger(string message);

		[Token(Token = "0x4000588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool logged;

		[Token(Token = "0x60006E8")]
		[Address(RVA = "0xC366D0", Offset = "0xC366D0", VA = "0xC366D0")]
		public static void Log(string message, Logger logger, bool logInEditMode = false)
		{
		}

		[Token(Token = "0x60006E9")]
		[Address(RVA = "0xC36768", Offset = "0xC36768", VA = "0xC36768")]
		public static void Log(string message, Transform context, bool logInEditMode = false)
		{
		}
	}
}
namespace RootMotion.Dynamics
{
	[Token(Token = "0x200010A")]
	public class AnimationBlocker : MonoBehaviour
	{
		[Token(Token = "0x60006EA")]
		[Address(RVA = "0x119251C", Offset = "0x119251C", VA = "0x119251C")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60006EB")]
		[Address(RVA = "0x1192584", Offset = "0x1192584", VA = "0x1192584")]
		public AnimationBlocker()
		{
		}
	}
	[Token(Token = "0x200010B")]
	public abstract class BehaviourBase : MonoBehaviour
	{
		[Token(Token = "0x2000415")]
		public delegate void BehaviourDelegate();

		[Token(Token = "0x2000416")]
		public delegate void HitDelegate(MuscleHit hit);

		[Token(Token = "0x2000417")]
		public delegate void CollisionDelegate(MuscleCollision collision);

		[Serializable]
		[Token(Token = "0x2000418")]
		public struct PuppetEvent
		{
			[Token(Token = "0x4001FA8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854370", Offset = "0x854370")]
			public string switchToBehaviour;

			[Token(Token = "0x4001FA9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8543A8", Offset = "0x8543A8")]
			public AnimatorEvent[] animations;

			[Token(Token = "0x4001FAA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8543E0", Offset = "0x8543E0")]
			public UnityEvent unityEvent;

			[Token(Token = "0x4001FAB")]
			private const string empty = "";

			[Token(Token = "0x17000223")]
			public bool switchBehaviour
			{
				[Token(Token = "0x6001B71")]
				[Address(RVA = "0x19AAD4C", Offset = "0x19AAD4C", VA = "0x19AAD4C")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6001B72")]
			[Address(RVA = "0x19AADE8", Offset = "0x19AADE8", VA = "0x19AADE8")]
			public void Trigger(PuppetMaster puppetMaster, bool switchBehaviourEnabled = true)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000419")]
		public class AnimatorEvent
		{
			[Token(Token = "0x4001FAC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string animationState;

			[Token(Token = "0x4001FAD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float crossfadeTime;

			[Token(Token = "0x4001FAE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int layer;

			[Token(Token = "0x4001FAF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool resetNormalizedTime;

			[Token(Token = "0x4001FB0")]
			private const string empty = "";

			[Token(Token = "0x6001B73")]
			[Address(RVA = "0x19AA62C", Offset = "0x19AA62C", VA = "0x19AA62C")]
			public void Activate(Animator animator, Animation animation)
			{
			}

			[Token(Token = "0x6001B74")]
			[Address(RVA = "0x19AA708", Offset = "0x19AA708", VA = "0x19AA708")]
			private void Activate(Animator animator)
			{
			}

			[Token(Token = "0x6001B75")]
			[Address(RVA = "0x19AA808", Offset = "0x19AA808", VA = "0x19AA808")]
			private void Activate(Animation animation)
			{
			}

			[Token(Token = "0x6001B76")]
			[Address(RVA = "0x19AA8E4", Offset = "0x19AA8E4", VA = "0x19AA8E4")]
			public AnimatorEvent()
			{
			}
		}

		[Token(Token = "0x4000589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400058A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BehaviourDelegate OnPreActivate;

		[Token(Token = "0x400058B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public BehaviourDelegate OnPreInitiate;

		[Token(Token = "0x400058C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public BehaviourDelegate OnPreFixedUpdate;

		[Token(Token = "0x400058D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BehaviourDelegate OnPreUpdate;

		[Token(Token = "0x400058E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BehaviourDelegate OnPreLateUpdate;

		[Token(Token = "0x400058F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourDelegate OnPreDeactivate;

		[Token(Token = "0x4000590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public BehaviourDelegate OnPreFixTransforms;

		[Token(Token = "0x4000591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public BehaviourDelegate OnPreRead;

		[Token(Token = "0x4000592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public BehaviourDelegate OnPreWrite;

		[Token(Token = "0x4000593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public HitDelegate OnPreMuscleHit;

		[Token(Token = "0x4000594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public CollisionDelegate OnPreMuscleCollision;

		[Token(Token = "0x4000595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CollisionDelegate OnPreMuscleCollisionExit;

		[Token(Token = "0x4000596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BehaviourDelegate OnHierarchyChanged;

		[Token(Token = "0x4000597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public BehaviourDelegate OnPostActivate;

		[Token(Token = "0x4000598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public BehaviourDelegate OnPostInitiate;

		[Token(Token = "0x4000599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public BehaviourDelegate OnPostFixedUpdate;

		[Token(Token = "0x400059A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public BehaviourDelegate OnPostUpdate;

		[Token(Token = "0x400059B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public BehaviourDelegate OnPostLateUpdate;

		[Token(Token = "0x400059C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public BehaviourDelegate OnPostDeactivate;

		[Token(Token = "0x400059D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public BehaviourDelegate OnPostDrawGizmos;

		[Token(Token = "0x400059E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public BehaviourDelegate OnPostFixTransforms;

		[Token(Token = "0x400059F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public BehaviourDelegate OnPostRead;

		[Token(Token = "0x40005A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public BehaviourDelegate OnPostWrite;

		[Token(Token = "0x40005A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public HitDelegate OnPostMuscleHit;

		[Token(Token = "0x40005A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public CollisionDelegate OnPostMuscleCollision;

		[Token(Token = "0x40005A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public CollisionDelegate OnPostMuscleCollisionExit;

		[Token(Token = "0x40005A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public bool deactivated;

		[Token(Token = "0x40005A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84E5B8", Offset = "0x84E5B8")]
		private bool <forceActive>k__BackingField;

		[Token(Token = "0x40005A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		private bool initiated;

		[Token(Token = "0x1700008E")]
		public bool forceActive
		{
			[Token(Token = "0x6000704")]
			[Address(RVA = "0x119D600", Offset = "0x119D600", VA = "0x119D600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856360", Offset = "0x856360")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000705")]
			[Address(RVA = "0x119D608", Offset = "0x119D608", VA = "0x119D608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856370", Offset = "0x856370")]
			protected set
			{
			}
		}

		[Token(Token = "0x60006EC")]
		public abstract void OnReactivate();

		[Token(Token = "0x60006ED")]
		[Address(RVA = "0x119D584", Offset = "0x119D584", VA = "0x119D584", Slot = "5")]
		public virtual void Resurrect()
		{
		}

		[Token(Token = "0x60006EE")]
		[Address(RVA = "0x119D588", Offset = "0x119D588", VA = "0x119D588", Slot = "6")]
		public virtual void Freeze()
		{
		}

		[Token(Token = "0x60006EF")]
		[Address(RVA = "0x119D58C", Offset = "0x119D58C", VA = "0x119D58C", Slot = "7")]
		public virtual void Unfreeze()
		{
		}

		[Token(Token = "0x60006F0")]
		[Address(RVA = "0x119D590", Offset = "0x119D590", VA = "0x119D590", Slot = "8")]
		public virtual void KillStart()
		{
		}

		[Token(Token = "0x60006F1")]
		[Address(RVA = "0x119D594", Offset = "0x119D594", VA = "0x119D594", Slot = "9")]
		public virtual void KillEnd()
		{
		}

		[Token(Token = "0x60006F2")]
		[Address(RVA = "0x119D598", Offset = "0x119D598", VA = "0x119D598", Slot = "10")]
		public virtual void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x60006F3")]
		[Address(RVA = "0x119D59C", Offset = "0x119D59C", VA = "0x119D59C", Slot = "11")]
		public virtual void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x60006F4")]
		[Address(RVA = "0x119D5A0", Offset = "0x119D5A0", VA = "0x119D5A0", Slot = "12")]
		public virtual void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x60006F5")]
		[Address(RVA = "0x119D5A4", Offset = "0x119D5A4", VA = "0x119D5A4", Slot = "13")]
		public virtual void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x60006F6")]
		[Address(RVA = "0x119D5B8", Offset = "0x119D5B8", VA = "0x119D5B8", Slot = "14")]
		public virtual void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x60006F7")]
		[Address(RVA = "0x119D5CC", Offset = "0x119D5CC", VA = "0x119D5CC", Slot = "15")]
		protected virtual void OnActivate()
		{
		}

		[Token(Token = "0x60006F8")]
		[Address(RVA = "0x119D5D0", Offset = "0x119D5D0", VA = "0x119D5D0", Slot = "16")]
		protected virtual void OnDeactivate()
		{
		}

		[Token(Token = "0x60006F9")]
		[Address(RVA = "0x119D5D4", Offset = "0x119D5D4", VA = "0x119D5D4", Slot = "17")]
		protected virtual void OnInitiate()
		{
		}

		[Token(Token = "0x60006FA")]
		[Address(RVA = "0x119D5D8", Offset = "0x119D5D8", VA = "0x119D5D8", Slot = "18")]
		protected virtual void OnFixedUpdate()
		{
		}

		[Token(Token = "0x60006FB")]
		[Address(RVA = "0x119D5DC", Offset = "0x119D5DC", VA = "0x119D5DC", Slot = "19")]
		protected virtual void OnUpdate()
		{
		}

		[Token(Token = "0x60006FC")]
		[Address(RVA = "0x119D5E0", Offset = "0x119D5E0", VA = "0x119D5E0", Slot = "20")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x60006FD")]
		[Address(RVA = "0x119D5E4", Offset = "0x119D5E4", VA = "0x119D5E4", Slot = "21")]
		protected virtual void OnDrawGizmosBehaviour()
		{
		}

		[Token(Token = "0x60006FE")]
		[Address(RVA = "0x119D5E8", Offset = "0x119D5E8", VA = "0x119D5E8", Slot = "22")]
		protected virtual void OnFixTransformsBehaviour()
		{
		}

		[Token(Token = "0x60006FF")]
		[Address(RVA = "0x119D5EC", Offset = "0x119D5EC", VA = "0x119D5EC", Slot = "23")]
		protected virtual void OnReadBehaviour()
		{
		}

		[Token(Token = "0x6000700")]
		[Address(RVA = "0x119D5F0", Offset = "0x119D5F0", VA = "0x119D5F0", Slot = "24")]
		protected virtual void OnWriteBehaviour()
		{
		}

		[Token(Token = "0x6000701")]
		[Address(RVA = "0x119D5F4", Offset = "0x119D5F4", VA = "0x119D5F4", Slot = "25")]
		protected virtual void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000702")]
		[Address(RVA = "0x119D5F8", Offset = "0x119D5F8", VA = "0x119D5F8", Slot = "26")]
		protected virtual void OnMuscleCollisionBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x6000703")]
		[Address(RVA = "0x119D5FC", Offset = "0x119D5FC", VA = "0x119D5FC", Slot = "27")]
		protected virtual void OnMuscleCollisionExitBehaviour(MuscleCollision collision)
		{
		}

		[Token(Token = "0x6000706")]
		[Address(RVA = "0x119D614", Offset = "0x119D614", VA = "0x119D614")]
		public void Initiate()
		{
		}

		[Token(Token = "0x6000707")]
		[Address(RVA = "0x119D674", Offset = "0x119D674", VA = "0x119D674")]
		public void OnFixTransforms()
		{
		}

		[Token(Token = "0x6000708")]
		[Address(RVA = "0x119D6E0", Offset = "0x119D6E0", VA = "0x119D6E0")]
		public void OnRead()
		{
		}

		[Token(Token = "0x6000709")]
		[Address(RVA = "0x119D74C", Offset = "0x119D74C", VA = "0x119D74C")]
		public void OnWrite()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0x119D7B8", Offset = "0x119D7B8", VA = "0x119D7B8")]
		public void OnMuscleHit(MuscleHit hit)
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0x119D844", Offset = "0x119D844", VA = "0x119D844")]
		public void OnMuscleCollision(MuscleCollision collision)
		{
		}

		[Token(Token = "0x600070C")]
		[Address(RVA = "0x119D8EC", Offset = "0x119D8EC", VA = "0x119D8EC")]
		public void OnMuscleCollisionExit(MuscleCollision collision)
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0x119D994", Offset = "0x119D994", VA = "0x119D994")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0x119D9A4", Offset = "0x119D9A4", VA = "0x119D9A4")]
		public void Activate()
		{
		}

		[Token(Token = "0x600070F")]
		[Address(RVA = "0x119DAC8", Offset = "0x119DAC8", VA = "0x119DAC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0x119DB28", Offset = "0x119DB28", VA = "0x119DB28")]
		public void FixedUpdateB()
		{
		}

		[Token(Token = "0x6000711")]
		[Address(RVA = "0x119DBE0", Offset = "0x119DBE0", VA = "0x119DBE0")]
		public void UpdateB()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0x119DC98", Offset = "0x119DC98", VA = "0x119DC98")]
		public void LateUpdateB()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0x119DD50", Offset = "0x119DD50", VA = "0x119DD50", Slot = "28")]
		protected virtual void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000714")]
		[Address(RVA = "0x119DD9C", Offset = "0x119DD9C", VA = "0x119DD9C")]
		protected void RotateTargetToRootMuscle()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0x119DED0", Offset = "0x119DED0", VA = "0x119DED0")]
		protected void TranslateTargetToRootMuscle(float maintainY)
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0x119E004", Offset = "0x119E004", VA = "0x119E004")]
		protected void RemovePropMuscles()
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0x119E124", Offset = "0x119E124", VA = "0x119E124", Slot = "29")]
		protected virtual void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0x119E0B0", Offset = "0x119E0B0", VA = "0x119E0B0")]
		protected bool ContainsRemovablePropMuscle()
		{
			return default(bool);
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0x119E32C", Offset = "0x119E32C", VA = "0x119E32C")]
		protected BehaviourBase()
		{
		}
	}
	[Token(Token = "0x200010C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x847AA0", Offset = "0x847AA0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847AA0", Offset = "0x847AA0")]
	public class BehaviourFall : BehaviourBase
	{
		[Token(Token = "0x200041A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849624", Offset = "0x849624")]
		private sealed class <SmoothActivate>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4001FB1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4001FB2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4001FB3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public BehaviourFall <>4__this;

			[Token(Token = "0x4001FB4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <fader>5__2;

			[Token(Token = "0x17000224")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B7A")]
				[Address(RVA = "0x19AB264", Offset = "0x19AB264", VA = "0x19AB264", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000225")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B7C")]
				[Address(RVA = "0x19AB2AC", Offset = "0x19AB2AC", VA = "0x19AB2AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B77")]
			[Address(RVA = "0x19AB050", Offset = "0x19AB050", VA = "0x19AB050")]
			[DebuggerHidden]
			public <SmoothActivate>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001B78")]
			[Address(RVA = "0x19AB07C", Offset = "0x19AB07C", VA = "0x19AB07C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B79")]
			[Address(RVA = "0x19AB080", Offset = "0x19AB080", VA = "0x19AB080", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B7B")]
			[Address(RVA = "0x19AB26C", Offset = "0x19AB26C", VA = "0x19AB26C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40005A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84E5C8", Offset = "0x84E5C8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E5C8", Offset = "0x84E5C8")]
		public string stateName;

		[Token(Token = "0x40005A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E628", Offset = "0x84E628")]
		public float transitionDuration;

		[Token(Token = "0x40005A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E660", Offset = "0x84E660")]
		public int layer;

		[Token(Token = "0x40005AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E698", Offset = "0x84E698")]
		public float fixedTime;

		[Token(Token = "0x40005AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84E6D0", Offset = "0x84E6D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E6D0", Offset = "0x84E6D0")]
		public LayerMask raycastLayers;

		[Token(Token = "0x40005AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E730", Offset = "0x84E730")]
		public string blendParameter;

		[Token(Token = "0x40005AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E768", Offset = "0x84E768")]
		public float writheHeight;

		[Token(Token = "0x40005AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E7A0", Offset = "0x84E7A0")]
		public float writheYVelocity;

		[Token(Token = "0x40005AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E7D8", Offset = "0x84E7D8")]
		public float blendSpeed;

		[Token(Token = "0x40005B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E810", Offset = "0x84E810")]
		public float blendMappingSpeed;

		[Token(Token = "0x40005B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84E848", Offset = "0x84E848")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E848", Offset = "0x84E848")]
		public bool canEnd;

		[Token(Token = "0x40005B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E8A8", Offset = "0x84E8A8")]
		public float minTime;

		[Token(Token = "0x40005B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E8E0", Offset = "0x84E8E0")]
		public float maxEndVelocity;

		[Token(Token = "0x40005B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E918", Offset = "0x84E918")]
		public PuppetEvent onEnd;

		[Token(Token = "0x40005B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private float timer;

		[Token(Token = "0x40005B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private bool endTriggered;

		[Token(Token = "0x600071A")]
		[Address(RVA = "0x119E334", Offset = "0x119E334", VA = "0x119E334")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856380", Offset = "0x856380")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0x119E37C", Offset = "0x119E37C", VA = "0x119E37C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8563B8", Offset = "0x8563B8")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0x119E3C4", Offset = "0x119E3C4", VA = "0x119E3C4", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0x119E484", Offset = "0x119E484", VA = "0x119E484", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0x119E48C", Offset = "0x119E48C", VA = "0x119E48C", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0x119E404", Offset = "0x119E404", VA = "0x119E404")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8563F0", Offset = "0x8563F0")]
		private IEnumerator SmoothActivate()
		{
			return null;
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0x119E498", Offset = "0x119E498", VA = "0x119E498", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0x119E900", Offset = "0x119E900", VA = "0x119E900", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000722")]
		[Address(RVA = "0x119EA10", Offset = "0x119EA10", VA = "0x119EA10", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x6000723")]
		[Address(RVA = "0x119E7B4", Offset = "0x119E7B4", VA = "0x119E7B4")]
		private float GetBlendTarget(float groundHeight)
		{
			return default(float);
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0x119E6A4", Offset = "0x119E6A4", VA = "0x119E6A4")]
		private float GetGroundHeight()
		{
			return default(float);
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0x119EA78", Offset = "0x119EA78", VA = "0x119EA78", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x6000726")]
		[Address(RVA = "0x119EAA4", Offset = "0x119EAA4", VA = "0x119EAA4")]
		public BehaviourFall()
		{
		}
	}
	[Token(Token = "0x200010D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x847B00", Offset = "0x847B00")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847B00", Offset = "0x847B00")]
	public class BehaviourPuppet : BehaviourBase
	{
		[Serializable]
		[Token(Token = "0x200041B")]
		public enum State
		{
			[Token(Token = "0x4001FB6")]
			Puppet,
			[Token(Token = "0x4001FB7")]
			Unpinned,
			[Token(Token = "0x4001FB8")]
			GetUp
		}

		[Serializable]
		[Token(Token = "0x200041C")]
		public enum NormalMode
		{
			[Token(Token = "0x4001FBA")]
			Active,
			[Token(Token = "0x4001FBB")]
			Unmapped,
			[Token(Token = "0x4001FBC")]
			Kinematic
		}

		[Serializable]
		[Token(Token = "0x200041D")]
		public class MasterProps
		{
			[Token(Token = "0x4001FBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public NormalMode normalMode;

			[Token(Token = "0x4001FBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float mappingBlendSpeed;

			[Token(Token = "0x4001FBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool activateOnStaticCollisions;

			[Token(Token = "0x4001FC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float activateOnImpulse;

			[Token(Token = "0x6001B7D")]
			[Address(RVA = "0x19AB4B8", Offset = "0x19AB4B8", VA = "0x19AB4B8")]
			public MasterProps()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200041E")]
		public struct MuscleProps
		{
			[Token(Token = "0x4001FC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854418", Offset = "0x854418")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854418", Offset = "0x854418")]
			public float unpinParents;

			[Token(Token = "0x4001FC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85446C", Offset = "0x85446C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85446C", Offset = "0x85446C")]
			public float unpinChildren;

			[Token(Token = "0x4001FC3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8544C0", Offset = "0x8544C0")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8544C0", Offset = "0x8544C0")]
			public float unpinGroup;

			[Token(Token = "0x4001FC4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854514", Offset = "0x854514")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854514", Offset = "0x854514")]
			public float minMappingWeight;

			[Token(Token = "0x4001FC5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854568", Offset = "0x854568")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854568", Offset = "0x854568")]
			public float maxMappingWeight;

			[Token(Token = "0x4001FC6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8545BC", Offset = "0x8545BC")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8545BC", Offset = "0x8545BC")]
			public float minPinWeight;

			[Token(Token = "0x4001FC7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854610", Offset = "0x854610")]
			public bool disableColliders;

			[Token(Token = "0x4001FC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854648", Offset = "0x854648")]
			public float regainPinSpeed;

			[Token(Token = "0x4001FC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854680", Offset = "0x854680")]
			public float collisionResistance;

			[Token(Token = "0x4001FCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8546B8", Offset = "0x8546B8")]
			public float knockOutDistance;

			[Token(Token = "0x4001FCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8546F0", Offset = "0x8546F0")]
			public PhysicMaterial puppetMaterial;

			[Token(Token = "0x4001FCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854728", Offset = "0x854728")]
			public PhysicMaterial unpinnedMaterial;
		}

		[Serializable]
		[Token(Token = "0x200041F")]
		public struct MusclePropsGroup
		{
			[Token(Token = "0x4001FCD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4001FCE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854770", Offset = "0x854770")]
			public Muscle.Group[] groups;

			[Token(Token = "0x4001FCF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8547A8", Offset = "0x8547A8")]
			public MuscleProps props;
		}

		[Serializable]
		[Token(Token = "0x2000420")]
		public struct CollisionResistanceMultiplier
		{
			[Token(Token = "0x4001FD0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public LayerMask layers;

			[Token(Token = "0x4001FD1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8547E0", Offset = "0x8547E0")]
			public float multiplier;

			[Token(Token = "0x4001FD2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854818", Offset = "0x854818")]
			public float collisionThreshold;
		}

		[Token(Token = "0x2000421")]
		public delegate void CollisionImpulseDelegate(MuscleCollision m, float impulse);

		[Token(Token = "0x40005B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84E950", Offset = "0x84E950")]
		public MasterProps masterProps;

		[Token(Token = "0x40005B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E988", Offset = "0x84E988")]
		public LayerMask groundLayers;

		[Token(Token = "0x40005B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E9C0", Offset = "0x84E9C0")]
		public LayerMask collisionLayers;

		[Token(Token = "0x40005BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84E9F8", Offset = "0x84E9F8")]
		public float collisionThreshold;

		[Token(Token = "0x40005BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Weight collisionResistance;

		[Token(Token = "0x40005BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EA30", Offset = "0x84EA30")]
		public CollisionResistanceMultiplier[] collisionResistanceMultipliers;

		[Token(Token = "0x40005BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EA68", Offset = "0x84EA68")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84EA68", Offset = "0x84EA68")]
		public int maxCollisions;

		[Token(Token = "0x40005BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EABC", Offset = "0x84EABC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84EABC", Offset = "0x84EABC")]
		public float regainPinSpeed;

		[Token(Token = "0x40005BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EB14", Offset = "0x84EB14")]
		public float boostFalloff;

		[Token(Token = "0x40005C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84EB4C", Offset = "0x84EB4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EB4C", Offset = "0x84EB4C")]
		public MuscleProps defaults;

		[Token(Token = "0x40005C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EBAC", Offset = "0x84EBAC")]
		public MusclePropsGroup[] groupOverrides;

		[Token(Token = "0x40005C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84EBE4", Offset = "0x84EBE4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EBE4", Offset = "0x84EBE4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84EBE4", Offset = "0x84EBE4")]
		public float knockOutDistance;

		[Token(Token = "0x40005C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EC60", Offset = "0x84EC60")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84EC60", Offset = "0x84EC60")]
		public float unpinnedMuscleWeightMlp;

		[Token(Token = "0x40005C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84ECB4", Offset = "0x84ECB4")]
		public float maxRigidbodyVelocity;

		[Token(Token = "0x40005C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84ECEC", Offset = "0x84ECEC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84ECEC", Offset = "0x84ECEC")]
		public float pinWeightThreshold;

		[Token(Token = "0x40005C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84ED40", Offset = "0x84ED40")]
		public bool unpinnedMuscleKnockout;

		[Token(Token = "0x40005C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84ED78", Offset = "0x84ED78")]
		public bool dropProps;

		[Token(Token = "0x40005C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x182")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84EDB0", Offset = "0x84EDB0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EDB0", Offset = "0x84EDB0")]
		public bool canGetUp;

		[Token(Token = "0x40005C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EE10", Offset = "0x84EE10")]
		public float getUpDelay;

		[Token(Token = "0x40005CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EE48", Offset = "0x84EE48")]
		public float blendToAnimationTime;

		[Token(Token = "0x40005CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EE80", Offset = "0x84EE80")]
		public float maxGetUpVelocity;

		[Token(Token = "0x40005CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EEB8", Offset = "0x84EEB8")]
		public float minGetUpDuration;

		[Token(Token = "0x40005CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EEF0", Offset = "0x84EEF0")]
		public float getUpCollisionResistanceMlp;

		[Token(Token = "0x40005CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EF28", Offset = "0x84EF28")]
		public float getUpRegainPinSpeedMlp;

		[Token(Token = "0x40005CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EF60", Offset = "0x84EF60")]
		public float getUpKnockOutDistanceMlp;

		[Token(Token = "0x40005D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EF98", Offset = "0x84EF98")]
		public Vector3 getUpOffsetProne;

		[Token(Token = "0x40005D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84EFD0", Offset = "0x84EFD0")]
		public Vector3 getUpOffsetSupine;

		[Token(Token = "0x40005D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84F008", Offset = "0x84F008")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F008", Offset = "0x84F008")]
		public PuppetEvent onGetUpProne;

		[Token(Token = "0x40005D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F068", Offset = "0x84F068")]
		public PuppetEvent onGetUpSupine;

		[Token(Token = "0x40005D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F0A0", Offset = "0x84F0A0")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x40005D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F0D8", Offset = "0x84F0D8")]
		public PuppetEvent onLoseBalanceFromPuppet;

		[Token(Token = "0x40005D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F110", Offset = "0x84F110")]
		public PuppetEvent onLoseBalanceFromGetUp;

		[Token(Token = "0x40005D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F148", Offset = "0x84F148")]
		public PuppetEvent onRegainBalance;

		[Token(Token = "0x40005D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public CollisionDelegate OnCollision;

		[Token(Token = "0x40005D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public CollisionImpulseDelegate OnCollisionImpulse;

		[Token(Token = "0x40005DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F180", Offset = "0x84F180")]
		private State <state>k__BackingField;

		[Token(Token = "0x40005DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		[HideInInspector]
		public bool canMoveTarget;

		[Token(Token = "0x40005DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private float unpinnedTimer;

		[Token(Token = "0x40005DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x264")]
		private float getUpTimer;

		[Token(Token = "0x40005DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		private Vector3 hipsForward;

		[Token(Token = "0x40005DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		private Vector3 hipsUp;

		[Token(Token = "0x40005E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private float getupAnimationBlendWeight;

		[Token(Token = "0x40005E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x284")]
		private float getupAnimationBlendWeightV;

		[Token(Token = "0x40005E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private bool getUpTargetFixed;

		[Token(Token = "0x40005E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private NormalMode lastNormalMode;

		[Token(Token = "0x40005E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private int collisions;

		[Token(Token = "0x40005E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool eventsEnabled;

		[Token(Token = "0x40005E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private float lastKnockOutDistance;

		[Token(Token = "0x40005E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float knockOutDistanceSqr;

		[Token(Token = "0x40005E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool getupDisabled;

		[Token(Token = "0x40005E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
		private bool hasCollidedSinceGetUp;

		[Token(Token = "0x40005EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A2")]
		private bool hasBoosted;

		[Token(Token = "0x40005EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x40005EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private Vector3 getUpPosition;

		[Token(Token = "0x40005ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private bool dropPropFlag;

		[Token(Token = "0x1700008F")]
		public State state
		{
			[Token(Token = "0x6000729")]
			[Address(RVA = "0x119EBEC", Offset = "0x119EBEC", VA = "0x119EBEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8564C8", Offset = "0x8564C8")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x600072A")]
			[Address(RVA = "0x119EBF4", Offset = "0x119EBF4", VA = "0x119EBF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8564D8", Offset = "0x8564D8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0x119EB5C", Offset = "0x119EB5C", VA = "0x119EB5C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856458", Offset = "0x856458")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0x119EBA4", Offset = "0x119EBA4", VA = "0x119EBA4")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856490", Offset = "0x856490")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0x119EBFC", Offset = "0x119EBFC", VA = "0x119EBFC", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x600072C")]
		[Address(RVA = "0x119EEA4", Offset = "0x119EEA4", VA = "0x119EEA4")]
		public void Reset(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600072D")]
		[Address(RVA = "0x119EF18", Offset = "0x119EF18", VA = "0x119EF18", Slot = "10")]
		public override void OnTeleport(Quaternion deltaRotation, Vector3 deltaPosition, Vector3 pivot, bool moveToTarget)
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0x119EFB4", Offset = "0x119EFB4", VA = "0x119EFB4", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0x119F574", Offset = "0x119F574", VA = "0x119F574", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0x119FC58", Offset = "0x119FC58", VA = "0x119FC58", Slot = "8")]
		public override void KillStart()
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0x119FCFC", Offset = "0x119FCFC", VA = "0x119FCFC", Slot = "9")]
		public override void KillEnd()
		{
		}

		[Token(Token = "0x6000732")]
		[Address(RVA = "0x119FD04", Offset = "0x119FD04", VA = "0x119FD04", Slot = "5")]
		public override void Resurrect()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0x119FD90", Offset = "0x119FD90", VA = "0x119FD90", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0x119FD9C", Offset = "0x119FD9C", VA = "0x119FD9C", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0x11A04E0", Offset = "0x11A04E0", VA = "0x11A04E0", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0x11A07B8", Offset = "0x11A07B8", VA = "0x11A07B8")]
		private bool SetKinematic()
		{
			return default(bool);
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0x11A088C", Offset = "0x11A088C", VA = "0x11A088C", Slot = "23")]
		protected override void OnReadBehaviour()
		{
		}

		[Token(Token = "0x6000738")]
		[Address(RVA = "0x11A0670", Offset = "0x11A0670", VA = "0x11A0670")]
		private void BlendMuscleMapping(int muscleIndex, bool to)
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0x11A0B74", Offset = "0x11A0B74", VA = "0x11A0B74", Slot = "13")]
		public override void OnMuscleAdded(Muscle m)
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0x11A0BB8", Offset = "0x11A0BB8", VA = "0x11A0BB8", Slot = "14")]
		public override void OnMuscleRemoved(Muscle m)
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0x11A0B3C", Offset = "0x11A0B3C", VA = "0x11A0B3C")]
		protected void MoveTarget(Vector3 position)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0x11A0BF4", Offset = "0x11A0BF4", VA = "0x11A0BF4")]
		protected void RotateTarget(Quaternion rotation)
		{
		}

		[Token(Token = "0x600073D")]
		[Address(RVA = "0x11A0C2C", Offset = "0x11A0C2C", VA = "0x11A0C2C", Slot = "29")]
		protected override void GroundTarget(LayerMask layers)
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0x11A0C40", Offset = "0x11A0C40", VA = "0x11A0C40")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0x11A0E58", Offset = "0x11A0E58", VA = "0x11A0E58")]
		public void Boost(float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0x11A0EE8", Offset = "0x11A0EE8", VA = "0x11A0EE8")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0x11A1000", Offset = "0x11A1000", VA = "0x11A1000")]
		public void Boost(int muscleIndex, float immunity, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0x11A11C4", Offset = "0x11A11C4", VA = "0x11A11C4")]
		public void BoostImmunity(float immunity)
		{
		}

		[Token(Token = "0x6000743")]
		[Address(RVA = "0x11A0F2C", Offset = "0x11A0F2C", VA = "0x11A0F2C")]
		public void BoostImmunity(int muscleIndex, float immunity)
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0x11A123C", Offset = "0x11A123C", VA = "0x11A123C")]
		public void BoostImmunity(int muscleIndex, float immunity, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0x11A12E0", Offset = "0x11A12E0", VA = "0x11A12E0")]
		public void BoostImpulseMlp(float impulseMlp)
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0x11A0F98", Offset = "0x11A0F98", VA = "0x11A0F98")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp)
		{
		}

		[Token(Token = "0x6000747")]
		[Address(RVA = "0x11A1350", Offset = "0x11A1350", VA = "0x11A1350")]
		public void BoostImpulseMlp(int muscleIndex, float impulseMlp, float boostParents, float boostChildren)
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0x11A13F4", Offset = "0x11A13F4", VA = "0x11A13F4")]
		public void Unpin()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0x11A1480", Offset = "0x11A1480", VA = "0x11A1480", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0x11A1658", Offset = "0x11A1658", VA = "0x11A1658", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0x11A1AB0", Offset = "0x11A1AB0", VA = "0x11A1AB0")]
		private float GetImpulse(MuscleCollision m, float layerThreshold)
		{
			return default(float);
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0x11A155C", Offset = "0x11A155C", VA = "0x11A155C")]
		private void UnPin(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0x11A1DB4", Offset = "0x11A1DB4", VA = "0x11A1DB4")]
		private void UnPinMuscle(int muscleIndex, float unpin)
		{
		}

		[Token(Token = "0x600074E")]
		[Address(RVA = "0x11A1C38", Offset = "0x11A1C38", VA = "0x11A1C38")]
		private bool Activate(Collision collision, float impulse)
		{
			return default(bool);
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0x11A1F8C", Offset = "0x11A1F8C", VA = "0x11A1F8C")]
		public bool IsProne()
		{
			return default(bool);
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0x11A1120", Offset = "0x11A1120", VA = "0x11A1120")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren)
		{
			return default(float);
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0x11A1CD0", Offset = "0x11A1CD0", VA = "0x11A1CD0")]
		private float GetFalloff(int i, int muscleIndex, float falloffParents, float falloffChildren, float falloffGroup)
		{
			return default(float);
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0x11A204C", Offset = "0x11A204C", VA = "0x11A204C")]
		private bool InGroup(Muscle.Group group1, Muscle.Group group2)
		{
			return default(bool);
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0x11A0414", Offset = "0x11A0414", VA = "0x11A0414")]
		private MuscleProps GetProps(Muscle.Group group)
		{
			return default(MuscleProps);
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0x119F60C", Offset = "0x119F60C", VA = "0x119F60C")]
		public void SetState(State newState)
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0x11A2124", Offset = "0x11A2124", VA = "0x11A2124")]
		public void SetColliders(bool unpinned)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0x119ECDC", Offset = "0x119ECDC", VA = "0x119ECDC")]
		public void SetColliders(Muscle m, bool unpinned)
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0x11A21B4", Offset = "0x11A21B4", VA = "0x11A21B4", Slot = "11")]
		public override void OnMuscleDisconnected(Muscle m)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0x11A21BC", Offset = "0x11A21BC", VA = "0x11A21BC", Slot = "12")]
		public override void OnMuscleReconnected(Muscle m)
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0x11A225C", Offset = "0x11A225C", VA = "0x11A225C")]
		public BehaviourPuppet()
		{
		}
	}
	[Token(Token = "0x200010E")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847B60", Offset = "0x847B60")]
	public class BehaviourTemplate : BehaviourBase
	{
		[Token(Token = "0x40005EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public SubBehaviourCOM centerOfMass;

		[Token(Token = "0x40005EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask groundLayers;

		[Token(Token = "0x40005F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public PuppetEvent onLoseBalance;

		[Token(Token = "0x40005F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public float loseBalanceAngle;

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xF30F2C", Offset = "0xF30F2C", VA = "0xF30F2C", Slot = "17")]
		protected override void OnInitiate()
		{
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xF30F54", Offset = "0xF30F54", VA = "0xF30F54", Slot = "15")]
		protected override void OnActivate()
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xF30F58", Offset = "0xF30F58", VA = "0xF30F58", Slot = "4")]
		public override void OnReactivate()
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xF30F5C", Offset = "0xF30F5C", VA = "0xF30F5C", Slot = "16")]
		protected override void OnDeactivate()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xF30F60", Offset = "0xF30F60", VA = "0xF30F60", Slot = "18")]
		protected override void OnFixedUpdate()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xF30FA4", Offset = "0xF30FA4", VA = "0xF30FA4", Slot = "20")]
		protected override void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xF30FA8", Offset = "0xF30FA8", VA = "0xF30FA8", Slot = "25")]
		protected override void OnMuscleHitBehaviour(MuscleHit hit)
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xF30FB0", Offset = "0xF30FB0", VA = "0xF30FB0", Slot = "26")]
		protected override void OnMuscleCollisionBehaviour(MuscleCollision m)
		{
		}

		[Token(Token = "0x6000762")]
		[Address(RVA = "0xF30FB8", Offset = "0xF30FB8", VA = "0xF30FB8")]
		public BehaviourTemplate()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200010F")]
	public class SubBehaviourBalancer : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x2000422")]
		public class Settings
		{
			[Token(Token = "0x4001FD3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854850", Offset = "0x854850")]
			public float damperForSpring;

			[Token(Token = "0x4001FD4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854888", Offset = "0x854888")]
			public float maxForceMlp;

			[Token(Token = "0x4001FD5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8548C0", Offset = "0x8548C0")]
			public float IMlp;

			[Token(Token = "0x4001FD6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8548F8", Offset = "0x8548F8")]
			public float velocityF;

			[Token(Token = "0x4001FD7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854930", Offset = "0x854930")]
			public Vector3 copOffset;

			[Token(Token = "0x4001FD8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854968", Offset = "0x854968")]
			public float torqueMlp;

			[Token(Token = "0x4001FD9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8549A0", Offset = "0x8549A0")]
			public float maxTorqueMag;

			[Token(Token = "0x6001B82")]
			[Address(RVA = "0xFD2CA4", Offset = "0xFD2CA4", VA = "0xFD2CA4")]
			public Settings()
			{
			}
		}

		[Token(Token = "0x40005F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F1A0", Offset = "0x84F1A0")]
		private ConfigurableJoint <joint>k__BackingField;

		[Token(Token = "0x40005F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F1B0", Offset = "0x84F1B0")]
		private Vector3 <dir>k__BackingField;

		[Token(Token = "0x40005F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F1C0", Offset = "0x84F1C0")]
		private Vector3 <dirVel>k__BackingField;

		[Token(Token = "0x40005F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F1D0", Offset = "0x84F1D0")]
		private Vector3 <cop>k__BackingField;

		[Token(Token = "0x40005F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F1E0", Offset = "0x84F1E0")]
		private Vector3 <com>k__BackingField;

		[Token(Token = "0x40005F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F1F0", Offset = "0x84F1F0")]
		private Vector3 <comV>k__BackingField;

		[Token(Token = "0x40005F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Settings settings;

		[Token(Token = "0x40005F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody[] rigidbodies;

		[Token(Token = "0x40005FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Transform[] copPoints;

		[Token(Token = "0x40005FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PressureSensor pressureSensor;

		[Token(Token = "0x40005FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody Ibody;

		[Token(Token = "0x40005FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 I;

		[Token(Token = "0x40005FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private Quaternion toJointSpace;

		[Token(Token = "0x17000090")]
		public ConfigurableJoint joint
		{
			[Token(Token = "0x6000763")]
			[Address(RVA = "0x1055198", Offset = "0x1055198", VA = "0x1055198")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8564E8", Offset = "0x8564E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000764")]
			[Address(RVA = "0x10551A0", Offset = "0x10551A0", VA = "0x10551A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8564F8", Offset = "0x8564F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000091")]
		public Vector3 dir
		{
			[Token(Token = "0x6000765")]
			[Address(RVA = "0x10551A8", Offset = "0x10551A8", VA = "0x10551A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856508", Offset = "0x856508")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000766")]
			[Address(RVA = "0x10551B4", Offset = "0x10551B4", VA = "0x10551B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856518", Offset = "0x856518")]
			private set
			{
			}
		}

		[Token(Token = "0x17000092")]
		public Vector3 dirVel
		{
			[Token(Token = "0x6000767")]
			[Address(RVA = "0x10551C0", Offset = "0x10551C0", VA = "0x10551C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856528", Offset = "0x856528")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000768")]
			[Address(RVA = "0x10551CC", Offset = "0x10551CC", VA = "0x10551CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856538", Offset = "0x856538")]
			private set
			{
			}
		}

		[Token(Token = "0x17000093")]
		public Vector3 cop
		{
			[Token(Token = "0x6000769")]
			[Address(RVA = "0x10551D8", Offset = "0x10551D8", VA = "0x10551D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856548", Offset = "0x856548")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600076A")]
			[Address(RVA = "0x10551E4", Offset = "0x10551E4", VA = "0x10551E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856558", Offset = "0x856558")]
			private set
			{
			}
		}

		[Token(Token = "0x17000094")]
		public Vector3 com
		{
			[Token(Token = "0x600076B")]
			[Address(RVA = "0x10551F0", Offset = "0x10551F0", VA = "0x10551F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856568", Offset = "0x856568")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600076C")]
			[Address(RVA = "0x10551FC", Offset = "0x10551FC", VA = "0x10551FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856578", Offset = "0x856578")]
			private set
			{
			}
		}

		[Token(Token = "0x17000095")]
		public Vector3 comV
		{
			[Token(Token = "0x600076D")]
			[Address(RVA = "0x1055208", Offset = "0x1055208", VA = "0x1055208")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856588", Offset = "0x856588")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600076E")]
			[Address(RVA = "0x1055214", Offset = "0x1055214", VA = "0x1055214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856598", Offset = "0x856598")]
			private set
			{
			}
		}

		[Token(Token = "0x600076F")]
		[Address(RVA = "0x1055220", Offset = "0x1055220", VA = "0x1055220")]
		public void Initiate(BehaviourBase behaviour, Settings settings, Rigidbody Ibody, Rigidbody[] rigidbodies, ConfigurableJoint joint, Transform[] copPoints, PressureSensor pressureSensor)
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0x10553A0", Offset = "0x10553A0", VA = "0x10553A0")]
		private void Solve()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0x10557C0", Offset = "0x10557C0", VA = "0x10557C0")]
		public SubBehaviourBalancer()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000110")]
	public abstract class SubBehaviourBase
	{
		[Token(Token = "0x40005FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected BehaviourBase behaviour;

		[Token(Token = "0x6000772")]
		[Address(RVA = "0x1055878", Offset = "0x1055878", VA = "0x1055878")]
		protected static Vector2 XZ(Vector3 v)
		{
			return default(Vector2);
		}

		[Token(Token = "0x6000773")]
		[Address(RVA = "0x1055880", Offset = "0x1055880", VA = "0x1055880")]
		protected static Vector3 XYZ(Vector2 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0x105588C", Offset = "0x105588C", VA = "0x105588C")]
		protected static Vector3 Flatten(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0x1055894", Offset = "0x1055894", VA = "0x1055894")]
		protected static Vector3 SetY(Vector3 v, float y)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0x1055870", Offset = "0x1055870", VA = "0x1055870")]
		protected SubBehaviourBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000111")]
	public class SubBehaviourCOM : SubBehaviourBase
	{
		[Serializable]
		[Token(Token = "0x2000423")]
		public enum Mode
		{
			[Token(Token = "0x4001FDB")]
			FeetCentroid,
			[Token(Token = "0x4001FDC")]
			CenterOfPressure
		}

		[Token(Token = "0x4000600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Mode mode;

		[Token(Token = "0x4000601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float velocityDamper;

		[Token(Token = "0x4000602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float velocityLerpSpeed;

		[Token(Token = "0x4000603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float velocityMax;

		[Token(Token = "0x4000604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float centerOfPressureSpeed;

		[Token(Token = "0x4000605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Vector3 offset;

		[Token(Token = "0x4000606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F200", Offset = "0x84F200")]
		private Vector3 <position>k__BackingField;

		[Token(Token = "0x4000607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F210", Offset = "0x84F210")]
		private Vector3 <direction>k__BackingField;

		[Token(Token = "0x4000608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F220", Offset = "0x84F220")]
		private float <angle>k__BackingField;

		[Token(Token = "0x4000609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F230", Offset = "0x84F230")]
		private Vector3 <velocity>k__BackingField;

		[Token(Token = "0x400060A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F240", Offset = "0x84F240")]
		private Vector3 <centerOfPressure>k__BackingField;

		[Token(Token = "0x400060B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F250", Offset = "0x84F250")]
		private Quaternion <rotation>k__BackingField;

		[Token(Token = "0x400060C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F260", Offset = "0x84F260")]
		private Quaternion <inverseRotation>k__BackingField;

		[Token(Token = "0x400060D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F270", Offset = "0x84F270")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x400060E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F280", Offset = "0x84F280")]
		private float <lastGroundedTime>k__BackingField;

		[Token(Token = "0x400060F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public bool[] groundContacts;

		[Token(Token = "0x4000610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3[] groundContactPoints;

		[Token(Token = "0x4000611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private LayerMask groundLayers;

		[Token(Token = "0x17000096")]
		public Vector3 position
		{
			[Token(Token = "0x6000777")]
			[Address(RVA = "0x105589C", Offset = "0x105589C", VA = "0x105589C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8565A8", Offset = "0x8565A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000778")]
			[Address(RVA = "0x10558A8", Offset = "0x10558A8", VA = "0x10558A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8565B8", Offset = "0x8565B8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000097")]
		public Vector3 direction
		{
			[Token(Token = "0x6000779")]
			[Address(RVA = "0x10558B4", Offset = "0x10558B4", VA = "0x10558B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8565C8", Offset = "0x8565C8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600077A")]
			[Address(RVA = "0x10558C0", Offset = "0x10558C0", VA = "0x10558C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8565D8", Offset = "0x8565D8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000098")]
		public float angle
		{
			[Token(Token = "0x600077B")]
			[Address(RVA = "0x10558CC", Offset = "0x10558CC", VA = "0x10558CC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8565E8", Offset = "0x8565E8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600077C")]
			[Address(RVA = "0x10558D4", Offset = "0x10558D4", VA = "0x10558D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8565F8", Offset = "0x8565F8")]
			private set
			{
			}
		}

		[Token(Token = "0x17000099")]
		public Vector3 velocity
		{
			[Token(Token = "0x600077D")]
			[Address(RVA = "0x10558DC", Offset = "0x10558DC", VA = "0x10558DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856608", Offset = "0x856608")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600077E")]
			[Address(RVA = "0x10558E8", Offset = "0x10558E8", VA = "0x10558E8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856618", Offset = "0x856618")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009A")]
		public Vector3 centerOfPressure
		{
			[Token(Token = "0x600077F")]
			[Address(RVA = "0x10558F4", Offset = "0x10558F4", VA = "0x10558F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856628", Offset = "0x856628")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000780")]
			[Address(RVA = "0x1055900", Offset = "0x1055900", VA = "0x1055900")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856638", Offset = "0x856638")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009B")]
		public Quaternion rotation
		{
			[Token(Token = "0x6000781")]
			[Address(RVA = "0x105590C", Offset = "0x105590C", VA = "0x105590C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856648", Offset = "0x856648")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000782")]
			[Address(RVA = "0x1055918", Offset = "0x1055918", VA = "0x1055918")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856658", Offset = "0x856658")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009C")]
		public Quaternion inverseRotation
		{
			[Token(Token = "0x6000783")]
			[Address(RVA = "0x1055924", Offset = "0x1055924", VA = "0x1055924")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856668", Offset = "0x856668")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6000784")]
			[Address(RVA = "0x1055930", Offset = "0x1055930", VA = "0x1055930")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856678", Offset = "0x856678")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009D")]
		public bool isGrounded
		{
			[Token(Token = "0x6000785")]
			[Address(RVA = "0x105593C", Offset = "0x105593C", VA = "0x105593C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856688", Offset = "0x856688")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000786")]
			[Address(RVA = "0x1055944", Offset = "0x1055944", VA = "0x1055944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856698", Offset = "0x856698")]
			private set
			{
			}
		}

		[Token(Token = "0x1700009E")]
		public float lastGroundedTime
		{
			[Token(Token = "0x6000787")]
			[Address(RVA = "0x1055950", Offset = "0x1055950", VA = "0x1055950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8566A8", Offset = "0x8566A8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000788")]
			[Address(RVA = "0x1055958", Offset = "0x1055958", VA = "0x1055958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8566B8", Offset = "0x8566B8")]
			private set
			{
			}
		}

		[Token(Token = "0x6000789")]
		[Address(RVA = "0x1055960", Offset = "0x1055960", VA = "0x1055960")]
		public void Initiate(BehaviourBase behaviour, LayerMask groundLayers)
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0x1055D24", Offset = "0x1055D24", VA = "0x1055D24")]
		private void OnHierarchyChanged()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0x1055DCC", Offset = "0x1055DCC", VA = "0x1055DCC")]
		private void OnPreMuscleCollision(MuscleCollision c)
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0x1055FA8", Offset = "0x1055FA8", VA = "0x1055FA8")]
		private void OnPreMuscleCollisionExit(MuscleCollision c)
		{
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0x1056068", Offset = "0x1056068", VA = "0x1056068")]
		private void OnPreActivate()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0x1056314", Offset = "0x1056314", VA = "0x1056314")]
		private void OnPreLateUpdate()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0x1056834", Offset = "0x1056834", VA = "0x1056834")]
		private void OnPreDeactivate()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0x1055EC4", Offset = "0x1055EC4", VA = "0x1055EC4")]
		private Vector3 GetCollisionCOP(Collision collision)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0x105657C", Offset = "0x105657C", VA = "0x105657C")]
		private bool IsGrounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0x1056108", Offset = "0x1056108", VA = "0x1056108")]
		private Vector3 GetCenterOfMass()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0x10566A8", Offset = "0x10566A8", VA = "0x10566A8")]
		private Vector3 GetCenterOfMassVelocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0x1056860", Offset = "0x1056860", VA = "0x1056860")]
		private Vector3 GetMomentum()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0x10565E0", Offset = "0x10565E0", VA = "0x10565E0")]
		private Vector3 GetCenterOfPressure()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0x105622C", Offset = "0x105622C", VA = "0x105622C")]
		private Vector3 GetFeetCentroid()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0x1056984", Offset = "0x1056984", VA = "0x1056984")]
		public SubBehaviourCOM()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000112")]
	public class Booster
	{
		[Token(Token = "0x4000612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F2B0", Offset = "0x84F2B0")]
		public bool fullBody;

		[Token(Token = "0x4000613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F2E8", Offset = "0x84F2E8")]
		public ConfigurableJoint[] muscles;

		[Token(Token = "0x4000614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F320", Offset = "0x84F320")]
		public Muscle.Group[] groups;

		[Token(Token = "0x4000615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F358", Offset = "0x84F358")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84F358", Offset = "0x84F358")]
		public float immunity;

		[Token(Token = "0x4000616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F3AC", Offset = "0x84F3AC")]
		public float impulseMlp;

		[Token(Token = "0x4000617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F3E4", Offset = "0x84F3E4")]
		public float boostParents;

		[Token(Token = "0x4000618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F41C", Offset = "0x84F41C")]
		public float boostChildren;

		[Token(Token = "0x4000619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F454", Offset = "0x84F454")]
		public float delay;

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xF4822C", Offset = "0xF4822C", VA = "0xF4822C")]
		public void Boost(BehaviourPuppet puppet)
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xF48440", Offset = "0xF48440", VA = "0xF48440")]
		public Booster()
		{
		}
	}
	[Token(Token = "0x2000113")]
	public class JointBreakBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x400061A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400061B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xCDFE2C", Offset = "0xCDFE2C", VA = "0xCDFE2C")]
		private void OnJointBreak()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xCDFEB0", Offset = "0xCDFEB0", VA = "0xCDFEB0")]
		public JointBreakBroadcaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000114")]
	public class Muscle
	{
		[Serializable]
		[Token(Token = "0x2000424")]
		public enum Group
		{
			[Token(Token = "0x4001FDE")]
			Hips,
			[Token(Token = "0x4001FDF")]
			Spine,
			[Token(Token = "0x4001FE0")]
			Head,
			[Token(Token = "0x4001FE1")]
			Arm,
			[Token(Token = "0x4001FE2")]
			Hand,
			[Token(Token = "0x4001FE3")]
			Leg,
			[Token(Token = "0x4001FE4")]
			Foot,
			[Token(Token = "0x4001FE5")]
			Tail,
			[Token(Token = "0x4001FE6")]
			Prop
		}

		[Serializable]
		[Token(Token = "0x2000425")]
		public class InternalCollisionIgnoreSettings
		{
			[Token(Token = "0x4001FE7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8549D8", Offset = "0x8549D8")]
			public bool ignoreAll;

			[Token(Token = "0x4001FE8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854A10", Offset = "0x854A10")]
			public ConfigurableJoint[] muscles;

			[Token(Token = "0x4001FE9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854A48", Offset = "0x854A48")]
			public Group[] groups;

			[Token(Token = "0x6001B83")]
			[Address(RVA = "0x19D6C4C", Offset = "0x19D6C4C", VA = "0x19D6C4C")]
			public InternalCollisionIgnoreSettings()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000426")]
		public class Props
		{
			[Token(Token = "0x4001FEA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854A80", Offset = "0x854A80")]
			public Group group;

			[Token(Token = "0x4001FEB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854AB8", Offset = "0x854AB8")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854AB8", Offset = "0x854AB8")]
			public float mappingWeight;

			[Token(Token = "0x4001FEC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854B0C", Offset = "0x854B0C")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854B0C", Offset = "0x854B0C")]
			public float pinWeight;

			[Token(Token = "0x4001FED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854B60", Offset = "0x854B60")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854B60", Offset = "0x854B60")]
			public float muscleWeight;

			[Token(Token = "0x4001FEE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854BB4", Offset = "0x854BB4")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854BB4", Offset = "0x854BB4")]
			public float muscleDamper;

			[Token(Token = "0x4001FEF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854C08", Offset = "0x854C08")]
			public bool mapPosition;

			[Token(Token = "0x4001FF0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854C40", Offset = "0x854C40")]
			public InternalCollisionIgnoreSettings internalCollisionIgnores;

			[Token(Token = "0x4001FF1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854C78", Offset = "0x854C78")]
			public Transform[] animatedTargetChildren;

			[Token(Token = "0x6001B84")]
			[Address(RVA = "0x19D6CEC", Offset = "0x19D6CEC", VA = "0x19D6CEC")]
			public Props()
			{
			}

			[Token(Token = "0x6001B85")]
			[Address(RVA = "0x19D6DB0", Offset = "0x19D6DB0", VA = "0x19D6DB0")]
			public Props(float pinWeight, float muscleWeight, float mappingWeight, float muscleDamper, bool mapPosition, Group group = Group.Hips)
			{
			}

			[Token(Token = "0x6001B86")]
			[Address(RVA = "0x19D6EA4", Offset = "0x19D6EA4", VA = "0x19D6EA4")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x2000427")]
		public struct State
		{
			[Token(Token = "0x4001FF2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float mappingWeightMlp;

			[Token(Token = "0x4001FF3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float pinWeightMlp;

			[Token(Token = "0x4001FF4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float muscleWeightMlp;

			[Token(Token = "0x4001FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float maxForceMlp;

			[Token(Token = "0x4001FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float muscleDamperMlp;

			[Token(Token = "0x4001FF7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float muscleDamperAdd;

			[Token(Token = "0x4001FF8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float immunity;

			[Token(Token = "0x4001FF9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float impulseMlp;

			[Token(Token = "0x4001FFA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Vector3 velocity;

			[Token(Token = "0x4001FFB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public Vector3 angularVelocity;

			[Token(Token = "0x4001FFC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool isDisconnected;

			[Token(Token = "0x4001FFD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
			public bool resetFlag;

			[Token(Token = "0x17000226")]
			public static State Default
			{
				[Token(Token = "0x6001B87")]
				[Address(RVA = "0x19D6F38", Offset = "0x19D6F38", VA = "0x19D6F38")]
				get
				{
					return default(State);
				}
			}

			[Token(Token = "0x6001B88")]
			[Address(RVA = "0x19D6F58", Offset = "0x19D6F58", VA = "0x19D6F58")]
			public void Clamp()
			{
			}
		}

		[Token(Token = "0x2000428")]
		public class TargetChild
		{
			[Token(Token = "0x4001FFE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform t;

			[Token(Token = "0x4001FFF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 defaultLocalPosition;

			[Token(Token = "0x4002000")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Quaternion defaultLocalRotation;

			[Token(Token = "0x6001B89")]
			[Address(RVA = "0x19D7000", Offset = "0x19D7000", VA = "0x19D7000")]
			public TargetChild(Transform t)
			{
			}

			[Token(Token = "0x6001B8A")]
			[Address(RVA = "0x19D707C", Offset = "0x19D707C", VA = "0x19D707C")]
			public void Map()
			{
			}
		}

		[Token(Token = "0x400061C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[HideInInspector]
		public string name;

		[Token(Token = "0x400061D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConfigurableJoint joint;

		[Token(Token = "0x400061E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform target;

		[Token(Token = "0x400061F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Props props;

		[Token(Token = "0x4000620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public State state;

		[Token(Token = "0x4000621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public int[] parentIndexes;

		[Token(Token = "0x4000622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public int[] childIndexes;

		[Token(Token = "0x4000623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public bool[] childFlags;

		[Token(Token = "0x4000624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[HideInInspector]
		public int[] kinshipDegrees;

		[Token(Token = "0x4000625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public MuscleCollisionBroadcaster broadcaster;

		[Token(Token = "0x4000626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public JointBreakBroadcaster jointBreakBroadcaster;

		[Token(Token = "0x4000627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Vector3 positionOffset;

		[Token(Token = "0x4000628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F57C", Offset = "0x84F57C")]
		private Transform <transform>k__BackingField;

		[Token(Token = "0x4000629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F58C", Offset = "0x84F58C")]
		private Rigidbody <rigidbody>k__BackingField;

		[Token(Token = "0x400062A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F59C", Offset = "0x84F59C")]
		private Transform <connectedBodyTarget>k__BackingField;

		[Token(Token = "0x400062B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F5AC", Offset = "0x84F5AC")]
		private Vector3 <targetAnimatedPosition>k__BackingField;

		[Token(Token = "0x400062C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F5BC", Offset = "0x84F5BC")]
		private Quaternion <targetAnimatedWorldRotation>k__BackingField;

		[Token(Token = "0x400062D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F5CC", Offset = "0x84F5CC")]
		private Vector3 <targetVelocity>k__BackingField;

		[Token(Token = "0x400062E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F5DC", Offset = "0x84F5DC")]
		private Rigidbody <additionalRigidbody>k__BackingField;

		[Token(Token = "0x400062F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[SerializeField]
		[HideInInspector]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x4000630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		[SerializeField]
		[HideInInspector]
		public Transform additionalPinTarget;

		[Token(Token = "0x4000631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		[SerializeField]
		[HideInInspector]
		public float additionalPinWeight;

		[Token(Token = "0x4000632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		[HideInInspector]
		public Vector3 mappedVelocity;

		[Token(Token = "0x4000633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Vector3 mappedAngularVelocity;

		[Token(Token = "0x4000634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		[HideInInspector]
		public bool isPropMuscle;

		[Token(Token = "0x4000635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		[SerializeField]
		[HideInInspector]
		public int index;

		[Token(Token = "0x4000636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F6FC", Offset = "0x84F6FC")]
		private Quaternion <targetRotationRelative>k__BackingField;

		[Token(Token = "0x4000637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F70C", Offset = "0x84F70C")]
		private Rigidbody <rebuildConnectedBody>k__BackingField;

		[Token(Token = "0x4000638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F71C", Offset = "0x84F71C")]
		private Transform <rebuildTargetParent>k__BackingField;

		[Token(Token = "0x4000639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F72C", Offset = "0x84F72C")]
		private Vector3 <defaultTargetPosRelToMuscle>k__BackingField;

		[Token(Token = "0x400063A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F73C", Offset = "0x84F73C")]
		private Quaternion <defaultTargetRotRelToMuscle>k__BackingField;

		[Token(Token = "0x400063B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F74C", Offset = "0x84F74C")]
		private Quaternion <defaultMuscleRotRelToTarget>k__BackingField;

		[Token(Token = "0x400063C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Transform rebuildParent;

		[Token(Token = "0x400063D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private Vector3 rebuildPosition;

		[Token(Token = "0x400063E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private Quaternion rebuildRotation;

		[Token(Token = "0x400063F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private Vector3 rebuildTargetPosition;

		[Token(Token = "0x4000640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Quaternion rebuildTargetRotation;

		[Token(Token = "0x4000641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private ConfigurableJointMotion rebuildAngularXMotion;

		[Token(Token = "0x4000642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private ConfigurableJointMotion rebuildAngularYMotion;

		[Token(Token = "0x4000643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private ConfigurableJointMotion rebuildAngularZMotion;

		[Token(Token = "0x4000644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		[HideInInspector]
		public Vector3 targetMappedPosition;

		[Token(Token = "0x4000645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		[HideInInspector]
		public Quaternion targetMappedRotation;

		[Token(Token = "0x4000646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public Vector3 targetSampledPosition;

		[Token(Token = "0x4000647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		[HideInInspector]
		public Quaternion targetSampledRotation;

		[Token(Token = "0x4000648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private JointDrive slerpDrive;

		[Token(Token = "0x4000649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float lastJointDriveRotationWeight;

		[Token(Token = "0x400064A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float lastRotationDamper;

		[Token(Token = "0x400064B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private Vector3 defaultPosition;

		[Token(Token = "0x400064C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 defaultTargetLocalPosition;

		[Token(Token = "0x400064D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Vector3 lastMappedPosition;

		[Token(Token = "0x400064E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private Quaternion defaultLocalRotation;

		[Token(Token = "0x400064F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Quaternion localRotationConvert;

		[Token(Token = "0x4000650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private Quaternion toParentSpace;

		[Token(Token = "0x4000651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Quaternion toJointSpaceInverse;

		[Token(Token = "0x4000652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27C")]
		private Quaternion toJointSpaceDefault;

		[Token(Token = "0x4000653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private Quaternion targetAnimatedRotation;

		[Token(Token = "0x4000654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private Quaternion rotationRelativeToTarget;

		[Token(Token = "0x4000656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private Quaternion defaultTargetLocalRotation;

		[Token(Token = "0x4000657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private Quaternion lastMappedRotation;

		[Token(Token = "0x4000658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private Transform targetParent;

		[Token(Token = "0x4000659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private Transform connectedBodyTransform;

		[Token(Token = "0x400065A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private ConfigurableJointMotion angularXMotionDefault;

		[Token(Token = "0x400065B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private ConfigurableJointMotion angularYMotionDefault;

		[Token(Token = "0x400065C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		private ConfigurableJointMotion angularZMotionDefault;

		[Token(Token = "0x400065D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FC")]
		private bool directTargetParent;

		[Token(Token = "0x400065E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2FD")]
		private bool initiated;

		[Token(Token = "0x400065F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private Collider[] _colliders;

		[Token(Token = "0x4000660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private float lastReadTime;

		[Token(Token = "0x4000661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30C")]
		private float lastWriteTime;

		[Token(Token = "0x4000662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private bool[] disabledColliders;

		[Token(Token = "0x4000663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private TargetChild[] targetChildren;

		[Token(Token = "0x4000664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private Vector3 additionalTargetVelocity;

		[Token(Token = "0x4000665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private Vector3 targetAnimatedCenterOfMass;

		[Token(Token = "0x4000666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private Vector3 additionalPinTargetAnimatedCenterOfMass;

		[Token(Token = "0x4000667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x344")]
		private Quaternion defaultTargetRotRelToMuscleInverse;

		[Token(Token = "0x1700009F")]
		public Transform transform
		{
			[Token(Token = "0x600079C")]
			[Address(RVA = "0xCF1304", Offset = "0xCF1304", VA = "0xCF1304")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8566C8", Offset = "0x8566C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079D")]
			[Address(RVA = "0xCF130C", Offset = "0xCF130C", VA = "0xCF130C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8566D8", Offset = "0x8566D8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A0")]
		public Rigidbody rigidbody
		{
			[Token(Token = "0x600079E")]
			[Address(RVA = "0xCF1314", Offset = "0xCF1314", VA = "0xCF1314")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8566E8", Offset = "0x8566E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x600079F")]
			[Address(RVA = "0xCF131C", Offset = "0xCF131C", VA = "0xCF131C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8566F8", Offset = "0x8566F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public Transform connectedBodyTarget
		{
			[Token(Token = "0x60007A0")]
			[Address(RVA = "0xCF1324", Offset = "0xCF1324", VA = "0xCF1324")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856708", Offset = "0x856708")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007A1")]
			[Address(RVA = "0xCF132C", Offset = "0xCF132C", VA = "0xCF132C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856718", Offset = "0x856718")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public Vector3 targetAnimatedPosition
		{
			[Token(Token = "0x60007A2")]
			[Address(RVA = "0xCF1334", Offset = "0xCF1334", VA = "0xCF1334")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856728", Offset = "0x856728")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007A3")]
			[Address(RVA = "0xCF1340", Offset = "0xCF1340", VA = "0xCF1340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856738", Offset = "0x856738")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A3")]
		public Quaternion targetAnimatedWorldRotation
		{
			[Token(Token = "0x60007A4")]
			[Address(RVA = "0xCF134C", Offset = "0xCF134C", VA = "0xCF134C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856748", Offset = "0x856748")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60007A5")]
			[Address(RVA = "0xCF1358", Offset = "0xCF1358", VA = "0xCF1358")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856758", Offset = "0x856758")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A4")]
		public Collider[] colliders
		{
			[Token(Token = "0x60007A6")]
			[Address(RVA = "0xCF1364", Offset = "0xCF1364", VA = "0xCF1364")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007A7")]
			[Address(RVA = "0xCF136C", Offset = "0xCF136C", VA = "0xCF136C")]
			set
			{
			}
		}

		[Token(Token = "0x170000A5")]
		public Vector3 targetVelocity
		{
			[Token(Token = "0x60007A8")]
			[Address(RVA = "0xCF137C", Offset = "0xCF137C", VA = "0xCF137C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856768", Offset = "0x856768")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007A9")]
			[Address(RVA = "0xCF1388", Offset = "0xCF1388", VA = "0xCF1388")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856778", Offset = "0x856778")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A6")]
		public Rigidbody additionalRigidbody
		{
			[Token(Token = "0x60007AA")]
			[Address(RVA = "0xCF1394", Offset = "0xCF1394", VA = "0xCF1394")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856788", Offset = "0x856788")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007AB")]
			[Address(RVA = "0xCF139C", Offset = "0xCF139C", VA = "0xCF139C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856798", Offset = "0x856798")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public Quaternion targetRotationRelative
		{
			[Token(Token = "0x60007AC")]
			[Address(RVA = "0xCF13A4", Offset = "0xCF13A4", VA = "0xCF13A4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8567A8", Offset = "0x8567A8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60007AD")]
			[Address(RVA = "0xCF13B8", Offset = "0xCF13B8", VA = "0xCF13B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8567B8", Offset = "0x8567B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public Rigidbody rebuildConnectedBody
		{
			[Token(Token = "0x60007AF")]
			[Address(RVA = "0xCF15D8", Offset = "0xCF15D8", VA = "0xCF15D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8567C8", Offset = "0x8567C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007B0")]
			[Address(RVA = "0xCF15E0", Offset = "0xCF15E0", VA = "0xCF15E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8567D8", Offset = "0x8567D8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000A9")]
		public Transform rebuildTargetParent
		{
			[Token(Token = "0x60007B1")]
			[Address(RVA = "0xCF15F0", Offset = "0xCF15F0", VA = "0xCF15F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8567E8", Offset = "0x8567E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007B2")]
			[Address(RVA = "0xCF15F8", Offset = "0xCF15F8", VA = "0xCF15F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8567F8", Offset = "0x8567F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public Vector3 defaultTargetPosRelToMuscle
		{
			[Token(Token = "0x60007B3")]
			[Address(RVA = "0xCF1608", Offset = "0xCF1608", VA = "0xCF1608")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856808", Offset = "0x856808")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007B4")]
			[Address(RVA = "0xCF1618", Offset = "0xCF1618", VA = "0xCF1618")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856818", Offset = "0x856818")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public Quaternion defaultTargetRotRelToMuscle
		{
			[Token(Token = "0x60007B5")]
			[Address(RVA = "0xCF1628", Offset = "0xCF1628", VA = "0xCF1628")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856828", Offset = "0x856828")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60007B6")]
			[Address(RVA = "0xCF163C", Offset = "0xCF163C", VA = "0xCF163C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856838", Offset = "0x856838")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AC")]
		public Quaternion defaultMuscleRotRelToTarget
		{
			[Token(Token = "0x60007B7")]
			[Address(RVA = "0xCF1650", Offset = "0xCF1650", VA = "0xCF1650")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856848", Offset = "0x856848")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x60007B8")]
			[Address(RVA = "0xCF1664", Offset = "0xCF1664", VA = "0xCF1664")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856858", Offset = "0x856858")]
			private set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		private Quaternion localRotation
		{
			[Token(Token = "0x60007D7")]
			[Address(RVA = "0xCF2BB0", Offset = "0xCF2BB0", VA = "0xCF2BB0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170000AE")]
		private Quaternion parentRotation
		{
			[Token(Token = "0x60007D8")]
			[Address(RVA = "0xCF2CD0", Offset = "0xCF2CD0", VA = "0xCF2CD0")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170000AF")]
		private Quaternion targetParentRotation
		{
			[Token(Token = "0x60007D9")]
			[Address(RVA = "0xCF2C30", Offset = "0xCF2C30", VA = "0xCF2C30")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170000B0")]
		private Quaternion targetLocalRotation
		{
			[Token(Token = "0x60007DA")]
			[Address(RVA = "0xCF2DFC", Offset = "0xCF2DFC", VA = "0xCF2DFC")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xCF13CC", Offset = "0xCF13CC", VA = "0xCF13CC")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xCF1678", Offset = "0xCF1678", VA = "0xCF1678")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xCF17D8", Offset = "0xCF17D8", VA = "0xCF17D8", Slot = "4")]
		public virtual void Initiate(Muscle[] colleagues)
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xCF2864", Offset = "0xCF2864", VA = "0xCF2864")]
		public void InitiateAdditionalPin()
		{
		}

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xCF2A84", Offset = "0xCF2A84", VA = "0xCF2A84")]
		public void UpdateColliders()
		{
		}

		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xCF3474", Offset = "0xCF3474", VA = "0xCF3474")]
		public void DisableColliders()
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xCF357C", Offset = "0xCF357C", VA = "0xCF357C")]
		public void EnableColliders()
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xCF3104", Offset = "0xCF3104", VA = "0xCF3104")]
		private void AddColliders(Transform t, Collider[] C, bool includeMeshColliders)
		{
		}

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xCF3364", Offset = "0xCF3364", VA = "0xCF3364")]
		private void AddCompoundColliders(Transform t, Collider[] colliders)
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xCF3628", Offset = "0xCF3628", VA = "0xCF3628")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xCF37FC", Offset = "0xCF37FC", VA = "0xCF37FC")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xCF39F8", Offset = "0xCF39F8", VA = "0xCF39F8")]
		private bool ForceIgnore(Muscle otherMuscle)
		{
			return default(bool);
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xCF3C58", Offset = "0xCF3C58", VA = "0xCF3C58")]
		public void IgnoreAngularLimits(bool ignore)
		{
		}

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xCF3CF8", Offset = "0xCF3CF8", VA = "0xCF3CF8")]
		public void FixTargetTransforms()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xCF3D64", Offset = "0xCF3D64", VA = "0xCF3D64")]
		public void Reset()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xCF3F1C", Offset = "0xCF3F1C", VA = "0xCF3F1C")]
		public void MoveToTarget()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xCF29B4", Offset = "0xCF29B4", VA = "0xCF29B4")]
		public void SetKinematic(bool to)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xCF2E94", Offset = "0xCF2E94", VA = "0xCF2E94")]
		public void Read()
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xCF40A8", Offset = "0xCF40A8", VA = "0xCF40A8")]
		public void ClearVelocities()
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xCF4230", Offset = "0xCF4230", VA = "0xCF4230")]
		public void UpdateAnchor(bool supportTranslationAnimation)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xCF4498", Offset = "0xCF4498", VA = "0xCF4498", Slot = "5")]
		public virtual void Update(float pinWeightMaster, float muscleWeightMaster, float muscleSpring, float muscleDamper, float pinPow, float pinDistanceFalloff, bool rotationTargetChanged, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xCF4A14", Offset = "0xCF4A14", VA = "0xCF4A14")]
		public void StoreTargetMappedPosition()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xCF4A50", Offset = "0xCF4A50", VA = "0xCF4A50")]
		public void StoreTargetMappedRotation()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xCF4A90", Offset = "0xCF4A90", VA = "0xCF4A90")]
		public void Map(float mappingWeightMaster)
		{
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xCF4E3C", Offset = "0xCF4E3C", VA = "0xCF4E3C")]
		public void ResetTargetLocalPosition()
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xCF4E6C", Offset = "0xCF4E6C", VA = "0xCF4E6C")]
		public void CalculateMappedVelocity()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xCF4FD8", Offset = "0xCF4FD8", VA = "0xCF4FD8")]
		public void MapDisconnected()
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xCF45C0", Offset = "0xCF45C0", VA = "0xCF45C0")]
		private void Pin(float pinWeightMaster, float pinPow, float pinDistanceFalloff, bool angularPinning, float deltaTime)
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xCF50C4", Offset = "0xCF50C4", VA = "0xCF50C4")]
		private void Pin(Rigidbody r, Vector3 posOffset, Vector3 targetVel, float w, float pinDistanceFalloff, float deltaTime)
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xCF4854", Offset = "0xCF4854", VA = "0xCF4854")]
		private void MuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xCF5258", Offset = "0xCF5258", VA = "0xCF5258")]
		public void SetMuscleRotation(float muscleWeightMaster, float muscleSpring, float muscleDamper)
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xCF51D8", Offset = "0xCF51D8", VA = "0xCF51D8")]
		private Quaternion LocalToJointSpace(Quaternion localRotation)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xCF4434", Offset = "0xCF4434", VA = "0xCF4434")]
		private static Vector3 InverseTransformPointUnscaled(Vector3 position, Quaternion rotation, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xCF53C4", Offset = "0xCF53C4", VA = "0xCF53C4")]
		public Muscle()
		{
		}
	}
	[Token(Token = "0x2000115")]
	public struct MuscleCollision
	{
		[Token(Token = "0x4000668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x4000669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Collision collision;

		[Token(Token = "0x400066A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool isStay;

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0x15632AC", Offset = "0x15632AC", VA = "0x15632AC")]
		public MuscleCollision(int muscleIndex, Collision collision, bool isStay = false)
		{
		}
	}
	[Token(Token = "0x2000116")]
	public struct MuscleHit
	{
		[Token(Token = "0x400066B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int muscleIndex;

		[Token(Token = "0x400066C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float unPin;

		[Token(Token = "0x400066D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Vector3 force;

		[Token(Token = "0x400066E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector3 position;

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0x15633D0", Offset = "0x15633D0", VA = "0x15633D0")]
		public MuscleHit(int muscleIndex, float unPin, Vector3 force, Vector3 position)
		{
		}
	}
	[Token(Token = "0x2000117")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847B98", Offset = "0x847B98")]
	public class MuscleCollisionBroadcaster : MonoBehaviour
	{
		[Token(Token = "0x400066F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[HideInInspector]
		public int muscleIndex;

		[Token(Token = "0x4000671")]
		private const string onMuscleHit = "OnMuscleHit";

		[Token(Token = "0x4000672")]
		private const string onMuscleCollision = "OnMuscleCollision";

		[Token(Token = "0x4000673")]
		private const string onMuscleCollisionExit = "OnMuscleCollisionExit";

		[Token(Token = "0x4000674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private MuscleCollisionBroadcaster otherBroadcaster;

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0x15632E4", Offset = "0x15632E4", VA = "0x15632E4")]
		public void Hit(float unPin, Vector3 force, Vector3 position)
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0x15633E8", Offset = "0x15633E8", VA = "0x15633E8")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0x15635C8", Offset = "0x15635C8", VA = "0x15635C8")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0x156385C", Offset = "0x156385C", VA = "0x156385C")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0x1563AE4", Offset = "0x1563AE4", VA = "0x1563AE4")]
		public MuscleCollisionBroadcaster()
		{
		}
	}
	[Token(Token = "0x2000118")]
	public static class PhysXTools
	{
		[Token(Token = "0x60007E5")]
		[Address(RVA = "0x1B66CF4", Offset = "0x1B66CF4", VA = "0x1B66CF4")]
		public static void Predict(Rigidbody r, int steps, [Out] Vector3 position, [Out] Quaternion rotation)
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0x1B66D90", Offset = "0x1B66D90", VA = "0x1B66D90")]
		public static void Predict(Rigidbody r, int steps, [Out] Vector3 position, [Out] Quaternion rotation, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0x1B66E90", Offset = "0x1B66E90", VA = "0x1B66E90")]
		public static void Predict(Vector3 position, Quaternion rotation, Vector3 velocity, Vector3 angularVelocity, Vector3 gravity, float drag, float angularDrag)
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0x1B67024", Offset = "0x1B67024", VA = "0x1B67024")]
		public static Vector3 GetCenterOfMass(PuppetMaster puppet)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0x1B671B4", Offset = "0x1B671B4", VA = "0x1B671B4")]
		public static Vector3 GetCenterOfMass(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0x1B67300", Offset = "0x1B67300", VA = "0x1B67300")]
		public static Vector3 GetCenterOfMassVelocity(Rigidbody[] rigidbodies)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0x1B6744C", Offset = "0x1B6744C", VA = "0x1B6744C")]
		public static void DivByInertia(Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0x1B674F8", Offset = "0x1B674F8", VA = "0x1B674F8")]
		public static void ScaleByInertia(Vector3 v, Quaternion rotation, Vector3 inertiaTensor)
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0x1B67594", Offset = "0x1B67594", VA = "0x1B67594")]
		public static Vector3 GetFromToAcceleration(Vector3 fromV, Vector3 toV)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0x1B67660", Offset = "0x1B67660", VA = "0x1B67660")]
		public static Vector3 GetAngularAcceleration(Quaternion fromR, Quaternion toR)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0x1B678A4", Offset = "0x1B678A4", VA = "0x1B678A4")]
		public static void AddFromToTorque(Rigidbody r, Quaternion toR, ForceMode forceMode)
		{
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0x1B67A78", Offset = "0x1B67A78", VA = "0x1B67A78")]
		public static void AddFromToTorque(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0x1B67C24", Offset = "0x1B67C24", VA = "0x1B67C24")]
		public static void AddFromToForce(Rigidbody r, Vector3 fromV, Vector3 toV, ForceMode forceMode)
		{
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0x1B67D84", Offset = "0x1B67D84", VA = "0x1B67D84")]
		public static Vector3 GetLinearAcceleration(Vector3 fromPoint, Vector3 toPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0x1B67DC8", Offset = "0x1B67DC8", VA = "0x1B67DC8")]
		public static Quaternion ToJointSpace(ConfigurableJoint joint)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0x1B67E90", Offset = "0x1B67E90", VA = "0x1B67E90")]
		public static Vector3 CalculateInertiaTensorCuboid(Vector3 size, float mass)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007F5")]
		[Address(RVA = "0x1B674E8", Offset = "0x1B674E8", VA = "0x1B674E8")]
		public static Vector3 Div(Vector3 v, Vector3 v2)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x2000119")]
	public class PressureSensor : MonoBehaviour
	{
		[Token(Token = "0x4000675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool visualize;

		[Token(Token = "0x4000676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public LayerMask layers;

		[Token(Token = "0x4000677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F80C", Offset = "0x84F80C")]
		private Vector3 <center>k__BackingField;

		[Token(Token = "0x4000678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F81C", Offset = "0x84F81C")]
		private bool <inContact>k__BackingField;

		[Token(Token = "0x4000679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F82C", Offset = "0x84F82C")]
		private Vector3 <bottom>k__BackingField;

		[Token(Token = "0x400067A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84F83C", Offset = "0x84F83C")]
		private Rigidbody <r>k__BackingField;

		[Token(Token = "0x400067B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool fixedFrame;

		[Token(Token = "0x400067C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 P;

		[Token(Token = "0x400067D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int count;

		[Token(Token = "0x170000B1")]
		public Vector3 center
		{
			[Token(Token = "0x60007F6")]
			[Address(RVA = "0x1B6D938", Offset = "0x1B6D938", VA = "0x1B6D938")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856868", Offset = "0x856868")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007F7")]
			[Address(RVA = "0x1B6D944", Offset = "0x1B6D944", VA = "0x1B6D944")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856878", Offset = "0x856878")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B2")]
		public bool inContact
		{
			[Token(Token = "0x60007F8")]
			[Address(RVA = "0x1B6D950", Offset = "0x1B6D950", VA = "0x1B6D950")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856888", Offset = "0x856888")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60007F9")]
			[Address(RVA = "0x1B6D958", Offset = "0x1B6D958", VA = "0x1B6D958")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856898", Offset = "0x856898")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B3")]
		public Vector3 bottom
		{
			[Token(Token = "0x60007FA")]
			[Address(RVA = "0x1B6D964", Offset = "0x1B6D964", VA = "0x1B6D964")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8568A8", Offset = "0x8568A8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60007FB")]
			[Address(RVA = "0x1B6D970", Offset = "0x1B6D970", VA = "0x1B6D970")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8568B8", Offset = "0x8568B8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B4")]
		public Rigidbody r
		{
			[Token(Token = "0x60007FC")]
			[Address(RVA = "0x1B6D97C", Offset = "0x1B6D97C", VA = "0x1B6D97C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8568C8", Offset = "0x8568C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60007FD")]
			[Address(RVA = "0x1B6D984", Offset = "0x1B6D984", VA = "0x1B6D984")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8568D8", Offset = "0x8568D8")]
			private set
			{
			}
		}

		[Token(Token = "0x60007FE")]
		[Address(RVA = "0x1B6D98C", Offset = "0x1B6D98C", VA = "0x1B6D98C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60007FF")]
		[Address(RVA = "0x1B6DA18", Offset = "0x1B6DA18", VA = "0x1B6DA18")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000800")]
		[Address(RVA = "0x1B6DB7C", Offset = "0x1B6DB7C", VA = "0x1B6DB7C")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x6000801")]
		[Address(RVA = "0x1B6DB80", Offset = "0x1B6DB80", VA = "0x1B6DB80")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x6000802")]
		[Address(RVA = "0x1B6DB88", Offset = "0x1B6DB88", VA = "0x1B6DB88")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000803")]
		[Address(RVA = "0x1B6DBD8", Offset = "0x1B6DBD8", VA = "0x1B6DBD8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000804")]
		[Address(RVA = "0x1B6DA1C", Offset = "0x1B6DA1C", VA = "0x1B6DA1C")]
		private void ProcessCollision(Collision c)
		{
		}

		[Token(Token = "0x6000805")]
		[Address(RVA = "0x1B6DC14", Offset = "0x1B6DC14", VA = "0x1B6DC14")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0x1B6DC38", Offset = "0x1B6DC38", VA = "0x1B6DC38")]
		public PressureSensor()
		{
		}
	}
	[Token(Token = "0x200011A")]
	public abstract class Prop : MonoBehaviour
	{
		[Token(Token = "0x400067E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F84C", Offset = "0x84F84C")]
		public int propType;

		[Token(Token = "0x400067F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84F884", Offset = "0x84F884")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F884", Offset = "0x84F884")]
		public ConfigurableJoint muscle;

		[Token(Token = "0x4000680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F8E4", Offset = "0x84F8E4")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x4000681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F91C", Offset = "0x84F91C")]
		public bool forceLayers;

		[Token(Token = "0x4000682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84F954", Offset = "0x84F954")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F954", Offset = "0x84F954")]
		public ConfigurableJoint additionalPin;

		[Token(Token = "0x4000683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F9B4", Offset = "0x84F9B4")]
		public Transform additionalPinTarget;

		[Token(Token = "0x4000684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84F9EC", Offset = "0x84F9EC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84F9EC", Offset = "0x84F9EC")]
		public float additionalPinWeight;

		[Token(Token = "0x4000685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84FA40", Offset = "0x84FA40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FA40", Offset = "0x84FA40")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x4000686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FAA0", Offset = "0x84FAA0")]
		public PhysicMaterial droppedMaterial;

		[Token(Token = "0x4000687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84FAD8", Offset = "0x84FAD8")]
		private PropRoot <propRoot>k__BackingField;

		[Token(Token = "0x4000688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84FAE8", Offset = "0x84FAE8")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x4000689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private ConfigurableJointMotion xMotion;

		[Token(Token = "0x400068A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private ConfigurableJointMotion yMotion;

		[Token(Token = "0x400068B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private ConfigurableJointMotion zMotion;

		[Token(Token = "0x400068C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private ConfigurableJointMotion angularXMotion;

		[Token(Token = "0x400068D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private ConfigurableJointMotion angularYMotion;

		[Token(Token = "0x400068E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private ConfigurableJointMotion angularZMotion;

		[Token(Token = "0x400068F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] colliders;

		[Token(Token = "0x170000B5")]
		public bool isPickedUp
		{
			[Token(Token = "0x6000807")]
			[Address(RVA = "0x1B6E190", Offset = "0x1B6E190", VA = "0x1B6E190")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000B6")]
		public PropRoot propRoot
		{
			[Token(Token = "0x6000808")]
			[Address(RVA = "0x1B6E204", Offset = "0x1B6E204", VA = "0x1B6E204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8568E8", Offset = "0x8568E8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000809")]
			[Address(RVA = "0x1B6E20C", Offset = "0x1B6E20C", VA = "0x1B6E20C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8568F8", Offset = "0x8568F8")]
			private set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public bool initiated
		{
			[Token(Token = "0x600080D")]
			[Address(RVA = "0x1B6E4F0", Offset = "0x1B6E4F0", VA = "0x1B6E4F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856908", Offset = "0x856908")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600080E")]
			[Address(RVA = "0x1B6E4F8", Offset = "0x1B6E4F8", VA = "0x1B6E4F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856918", Offset = "0x856918")]
			private set
			{
			}
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0x1B6E214", Offset = "0x1B6E214", VA = "0x1B6E214")]
		public void PickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0x1B6E4A8", Offset = "0x1B6E4A8", VA = "0x1B6E4A8")]
		public void Drop()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0x1B6E4E8", Offset = "0x1B6E4E8", VA = "0x1B6E4E8")]
		public void StartPickedUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0x1B6E504", Offset = "0x1B6E504", VA = "0x1B6E504", Slot = "4")]
		protected virtual void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000810")]
		[Address(RVA = "0x1B6E508", Offset = "0x1B6E508", VA = "0x1B6E508", Slot = "5")]
		protected virtual void OnDrop()
		{
		}

		[Token(Token = "0x6000811")]
		[Address(RVA = "0x1B6E50C", Offset = "0x1B6E50C", VA = "0x1B6E50C", Slot = "6")]
		protected virtual void OnStart()
		{
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0x1B6E510", Offset = "0x1B6E510", VA = "0x1B6E510")]
		private void Start()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0x1B6E764", Offset = "0x1B6E764", VA = "0x1B6E764")]
		private void ReleaseJoint()
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0x1B6E3D4", Offset = "0x1B6E3D4", VA = "0x1B6E3D4")]
		private void SetMaterial(PhysicMaterial material)
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0x1B6E86C", Offset = "0x1B6E86C", VA = "0x1B6E86C")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000816")]
		[Address(RVA = "0x1B6EA18", Offset = "0x1B6EA18", VA = "0x1B6EA18")]
		protected Prop()
		{
		}
	}
	[Token(Token = "0x200011B")]
	public class PropMuscle : MonoBehaviour
	{
		[Token(Token = "0x2000429")]
		public delegate void PropDelegate(PuppetMasterProp prop);

		[Token(Token = "0x4000690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FB30", Offset = "0x84FB30")]
		public PuppetMasterProp currentProp;

		[Token(Token = "0x4000692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84FB68", Offset = "0x84FB68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FB68", Offset = "0x84FB68")]
		public Vector3 additionalPinOffset;

		[Token(Token = "0x4000693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84FBC8", Offset = "0x84FBC8")]
		private PuppetMasterProp <activeProp>k__BackingField;

		[Token(Token = "0x4000694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PropDelegate OnPickUpProp;

		[Token(Token = "0x4000695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PropDelegate OnDropProp;

		[Token(Token = "0x4000696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Muscle _muscle;

		[Token(Token = "0x4000697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private PuppetMasterProp lastProp;

		[Token(Token = "0x4000698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 targetDefaultLocalPos;

		[Token(Token = "0x4000699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 lastAdditionalPinOffset;

		[Token(Token = "0x170000B8")]
		public Muscle muscle
		{
			[Token(Token = "0x6000817")]
			[Address(RVA = "0x1B6EEC4", Offset = "0x1B6EEC4", VA = "0x1B6EEC4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000B9")]
		public PuppetMasterProp activeProp
		{
			[Token(Token = "0x6000818")]
			[Address(RVA = "0x1B6EFB0", Offset = "0x1B6EFB0", VA = "0x1B6EFB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856928", Offset = "0x856928")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000819")]
			[Address(RVA = "0x1B6EFB8", Offset = "0x1B6EFB8", VA = "0x1B6EFB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856938", Offset = "0x856938")]
			private set
			{
			}
		}

		[Token(Token = "0x600081A")]
		[Address(RVA = "0x1B6EFC0", Offset = "0x1B6EFC0", VA = "0x1B6EFC0")]
		public bool AddAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x600081B")]
		[Address(RVA = "0x1B6F44C", Offset = "0x1B6F44C", VA = "0x1B6F44C")]
		public bool RemoveAdditionalPin()
		{
			return default(bool);
		}

		[Token(Token = "0x600081C")]
		[Address(RVA = "0x1B6F600", Offset = "0x1B6F600", VA = "0x1B6F600")]
		public void OnInitiate()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0x1B6F860", Offset = "0x1B6F860", VA = "0x1B6F860")]
		public void TakeOver()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0x1B6F8D0", Offset = "0x1B6F8D0", VA = "0x1B6F8D0")]
		public void OnUpdate()
		{
		}

		[Token(Token = "0x600081F")]
		[Address(RVA = "0x1B70108", Offset = "0x1B70108", VA = "0x1B70108")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000820")]
		[Address(RVA = "0x1B70398", Offset = "0x1B70398", VA = "0x1B70398")]
		public PropMuscle()
		{
		}
	}
	[Token(Token = "0x200011C")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x847BD0", Offset = "0x847BD0")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847BD0", Offset = "0x847BD0")]
	public class PropRoot : MonoBehaviour
	{
		[Token(Token = "0x400069A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FBD8", Offset = "0x84FBD8")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400069B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FC10", Offset = "0x84FC10")]
		public Rigidbody connectTo;

		[Token(Token = "0x400069C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FC48", Offset = "0x84FC48")]
		public Prop currentProp;

		[Token(Token = "0x400069D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Prop lastProp;

		[Token(Token = "0x400069E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool fixedUpdateCalled;

		[Token(Token = "0x6000821")]
		[Address(RVA = "0x1B70580", Offset = "0x1B70580", VA = "0x1B70580")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856948", Offset = "0x856948")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0x1B705C8", Offset = "0x1B705C8", VA = "0x1B705C8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856980", Offset = "0x856980")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0x1B70610", Offset = "0x1B70610", VA = "0x1B70610")]
		public void DropImmediate()
		{
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0x1B71408", Offset = "0x1B71408", VA = "0x1B71408")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0x1B7150C", Offset = "0x1B7150C", VA = "0x1B7150C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000826")]
		[Address(RVA = "0x1B7165C", Offset = "0x1B7165C", VA = "0x1B7165C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000827")]
		[Address(RVA = "0x1B7187C", Offset = "0x1B7187C", VA = "0x1B7187C")]
		private void AttachProp(Prop prop)
		{
		}

		[Token(Token = "0x6000828")]
		[Address(RVA = "0x1B72478", Offset = "0x1B72478", VA = "0x1B72478")]
		public PropRoot()
		{
		}
	}
	[Token(Token = "0x200011D")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x847C30", Offset = "0x847C30")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847C30", Offset = "0x847C30")]
	public class PropTemplate : Prop
	{
		[Token(Token = "0x6000829")]
		[Address(RVA = "0x1B72480", Offset = "0x1B72480", VA = "0x1B72480", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x600082A")]
		[Address(RVA = "0x1B72484", Offset = "0x1B72484", VA = "0x1B72484", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x600082B")]
		[Address(RVA = "0x1B72488", Offset = "0x1B72488", VA = "0x1B72488", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x600082C")]
		[Address(RVA = "0x1B7248C", Offset = "0x1B7248C", VA = "0x1B7248C")]
		public PropTemplate()
		{
		}
	}
	[Token(Token = "0x200011E")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x847C90", Offset = "0x847C90")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847C90", Offset = "0x847C90")]
	public class PuppetMaster : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200042A")]
		public enum Mode
		{
			[Token(Token = "0x4002002")]
			Active,
			[Token(Token = "0x4002003")]
			Kinematic,
			[Token(Token = "0x4002004")]
			Disabled
		}

		[Token(Token = "0x200042B")]
		public delegate void UpdateDelegate();

		[Token(Token = "0x200042C")]
		public delegate void MuscleDelegate(Muscle muscle);

		[Serializable]
		[Token(Token = "0x200042D")]
		public enum UpdateMode
		{
			[Token(Token = "0x4002006")]
			Normal,
			[Token(Token = "0x4002007")]
			AnimatePhysics,
			[Token(Token = "0x4002008")]
			FixedUpdate
		}

		[Serializable]
		[Token(Token = "0x200042E")]
		public enum State
		{
			[Token(Token = "0x400200A")]
			Alive,
			[Token(Token = "0x400200B")]
			Dead,
			[Token(Token = "0x400200C")]
			Frozen
		}

		[Serializable]
		[Token(Token = "0x200042F")]
		public struct StateSettings
		{
			[Token(Token = "0x400200D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854CB0", Offset = "0x854CB0")]
			public float killDuration;

			[Token(Token = "0x400200E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854CE8", Offset = "0x854CE8")]
			public float deadMuscleWeight;

			[Token(Token = "0x400200F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854D20", Offset = "0x854D20")]
			public float deadMuscleDamper;

			[Token(Token = "0x4002010")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854D58", Offset = "0x854D58")]
			public float maxFreezeSqrVelocity;

			[Token(Token = "0x4002011")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854D90", Offset = "0x854D90")]
			public bool freezePermanently;

			[Token(Token = "0x4002012")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854DC8", Offset = "0x854DC8")]
			public bool enableAngularLimitsOnKill;

			[Token(Token = "0x4002013")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
			[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x854E00", Offset = "0x854E00")]
			public bool enableInternalCollisionsOnKill;

			[Token(Token = "0x17000227")]
			public static StateSettings Default
			{
				[Token(Token = "0x6001B98")]
				[Address(RVA = "0x19E10C4", Offset = "0x19E10C4", VA = "0x19E10C4")]
				get
				{
					return default(StateSettings);
				}
			}

			[Token(Token = "0x6001B97")]
			[Address(RVA = "0x19E10A0", Offset = "0x19E10A0", VA = "0x19E10A0")]
			public StateSettings(float killDuration, float deadMuscleWeight = 0.01f, float deadMuscleDamper = 2f, float maxFreezeSqrVelocity = 0.02f, bool freezePermanently = false, bool enableAngularLimitsOnKill = true, bool enableInternalCollisionsOnKill = true)
			{
			}
		}

		[Token(Token = "0x2000430")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849634", Offset = "0x849634")]
		private sealed class <DisabledToActive>d__173 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002016")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x17000228")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001B9C")]
				[Address(RVA = "0x19E0BAC", Offset = "0x19E0BAC", VA = "0x19E0BAC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000229")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001B9E")]
				[Address(RVA = "0x19E0BF4", Offset = "0x19E0BF4", VA = "0x19E0BF4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B99")]
			[Address(RVA = "0x19E0920", Offset = "0x19E0920", VA = "0x19E0920")]
			[DebuggerHidden]
			public <DisabledToActive>d__173(int <>1__state)
			{
			}

			[Token(Token = "0x6001B9A")]
			[Address(RVA = "0x19E094C", Offset = "0x19E094C", VA = "0x19E094C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001B9B")]
			[Address(RVA = "0x19E0950", Offset = "0x19E0950", VA = "0x19E0950", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001B9D")]
			[Address(RVA = "0x19E0BB4", Offset = "0x19E0BB4", VA = "0x19E0BB4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000431")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849644", Offset = "0x849644")]
		private sealed class <KinematicToActive>d__175 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002017")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002018")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002019")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x1700022A")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BA2")]
				[Address(RVA = "0x19E0E10", Offset = "0x19E0E10", VA = "0x19E0E10", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022B")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BA4")]
				[Address(RVA = "0x19E0E58", Offset = "0x19E0E58", VA = "0x19E0E58", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001B9F")]
			[Address(RVA = "0x19E0BFC", Offset = "0x19E0BFC", VA = "0x19E0BFC")]
			[DebuggerHidden]
			public <KinematicToActive>d__175(int <>1__state)
			{
			}

			[Token(Token = "0x6001BA0")]
			[Address(RVA = "0x19E0C28", Offset = "0x19E0C28", VA = "0x19E0C28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BA1")]
			[Address(RVA = "0x19E0C2C", Offset = "0x19E0C2C", VA = "0x19E0C2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BA3")]
			[Address(RVA = "0x19E0E18", Offset = "0x19E0E18", VA = "0x19E0E18", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000432")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849654", Offset = "0x849654")]
		private sealed class <ActiveToDisabled>d__176 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400201A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400201B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400201C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x1700022C")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BA8")]
				[Address(RVA = "0x19E0264", Offset = "0x19E0264", VA = "0x19E0264", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022D")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BAA")]
				[Address(RVA = "0x19E02AC", Offset = "0x19E02AC", VA = "0x19E02AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BA5")]
			[Address(RVA = "0x19E00F0", Offset = "0x19E00F0", VA = "0x19E00F0")]
			[DebuggerHidden]
			public <ActiveToDisabled>d__176(int <>1__state)
			{
			}

			[Token(Token = "0x6001BA6")]
			[Address(RVA = "0x19E011C", Offset = "0x19E011C", VA = "0x19E011C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BA7")]
			[Address(RVA = "0x19E0120", Offset = "0x19E0120", VA = "0x19E0120", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BA9")]
			[Address(RVA = "0x19E026C", Offset = "0x19E026C", VA = "0x19E026C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000433")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849664", Offset = "0x849664")]
		private sealed class <ActiveToKinematic>d__177 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400201D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400201E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400201F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x1700022E")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BAE")]
				[Address(RVA = "0x19E0460", Offset = "0x19E0460", VA = "0x19E0460", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700022F")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BB0")]
				[Address(RVA = "0x19E04A8", Offset = "0x19E04A8", VA = "0x19E04A8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BAB")]
			[Address(RVA = "0x19E02B4", Offset = "0x19E02B4", VA = "0x19E02B4")]
			[DebuggerHidden]
			public <ActiveToKinematic>d__177(int <>1__state)
			{
			}

			[Token(Token = "0x6001BAC")]
			[Address(RVA = "0x19E02E0", Offset = "0x19E02E0", VA = "0x19E02E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BAD")]
			[Address(RVA = "0x19E02E4", Offset = "0x19E02E4", VA = "0x19E02E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BAF")]
			[Address(RVA = "0x19E0468", Offset = "0x19E0468", VA = "0x19E0468", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000434")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849674", Offset = "0x849674")]
		private sealed class <AliveToDead>d__228 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002020")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002021")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002022")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMaster <>4__this;

			[Token(Token = "0x4002023")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool freeze;

			[Token(Token = "0x4002024")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <range>5__2;

			[Token(Token = "0x4002025")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <mW>5__3;

			[Token(Token = "0x17000230")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BB4")]
				[Address(RVA = "0x19E08D0", Offset = "0x19E08D0", VA = "0x19E08D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000231")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BB6")]
				[Address(RVA = "0x19E0918", Offset = "0x19E0918", VA = "0x19E0918", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BB1")]
			[Address(RVA = "0x19E04B0", Offset = "0x19E04B0", VA = "0x19E04B0")]
			[DebuggerHidden]
			public <AliveToDead>d__228(int <>1__state)
			{
			}

			[Token(Token = "0x6001BB2")]
			[Address(RVA = "0x19E04DC", Offset = "0x19E04DC", VA = "0x19E04DC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BB3")]
			[Address(RVA = "0x19E04E0", Offset = "0x19E04E0", VA = "0x19E04E0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BB5")]
			[Address(RVA = "0x19E08D8", Offset = "0x19E08D8", VA = "0x19E08D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400069F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FC80", Offset = "0x84FC80")]
		public PuppetMasterHumanoidConfig humanoidConfig;

		[Token(Token = "0x40006A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform targetRoot;

		[Token(Token = "0x40006A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84FCB8", Offset = "0x84FCB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FCB8", Offset = "0x84FCB8")]
		public State state;

		[Token(Token = "0x40006A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "ContextMenuItemAttribute", RVA = "0x84FD18", Offset = "0x84FD18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FD18", Offset = "0x84FD18")]
		public StateSettings stateSettings;

		[Token(Token = "0x40006A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FD94", Offset = "0x84FD94")]
		public Mode mode;

		[Token(Token = "0x40006A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FDCC", Offset = "0x84FDCC")]
		public float blendTime;

		[Token(Token = "0x40006A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FE04", Offset = "0x84FE04")]
		public bool fixTargetTransforms;

		[Token(Token = "0x40006A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FE3C", Offset = "0x84FE3C")]
		public int solverIterationCount;

		[Token(Token = "0x40006A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FE74", Offset = "0x84FE74")]
		public bool visualizeTargetPose;

		[Token(Token = "0x40006A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84FEAC", Offset = "0x84FEAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FEAC", Offset = "0x84FEAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84FEAC", Offset = "0x84FEAC")]
		public float mappingWeight;

		[Token(Token = "0x40006A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FF24", Offset = "0x84FF24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84FF24", Offset = "0x84FF24")]
		public float pinWeight;

		[Token(Token = "0x40006AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FF78", Offset = "0x84FF78")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x84FF78", Offset = "0x84FF78")]
		public float muscleWeight;

		[Token(Token = "0x40006AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x84FFCC", Offset = "0x84FFCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x84FFCC", Offset = "0x84FFCC")]
		public float muscleSpring;

		[Token(Token = "0x40006AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85002C", Offset = "0x85002C")]
		public float muscleDamper;

		[Token(Token = "0x40006AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850064", Offset = "0x850064")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x850064", Offset = "0x850064")]
		public float pinPow;

		[Token(Token = "0x40006AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8500B8", Offset = "0x8500B8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8500B8", Offset = "0x8500B8")]
		public float pinDistanceFalloff;

		[Token(Token = "0x40006AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850110", Offset = "0x850110")]
		public bool angularPinning;

		[Token(Token = "0x40006B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850148", Offset = "0x850148")]
		public bool updateJointAnchors;

		[Token(Token = "0x40006B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x72")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850180", Offset = "0x850180")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x40006B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x73")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8501B8", Offset = "0x8501B8")]
		public bool angularLimits;

		[Token(Token = "0x40006B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8501F0", Offset = "0x8501F0")]
		public bool internalCollisions;

		[Token(Token = "0x40006B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x850228", Offset = "0x850228")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850228", Offset = "0x850228")]
		public Muscle[] muscles;

		[Token(Token = "0x40006B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[HideInInspector]
		public PropMuscle[] propMuscles;

		[Token(Token = "0x40006B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UpdateDelegate OnPostInitiate;

		[Token(Token = "0x40006B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UpdateDelegate OnRead;

		[Token(Token = "0x40006B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UpdateDelegate OnWrite;

		[Token(Token = "0x40006B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public UpdateDelegate OnPostLateUpdate;

		[Token(Token = "0x40006BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public UpdateDelegate OnFixTransforms;

		[Token(Token = "0x40006BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public UpdateDelegate OnHierarchyChanged;

		[Token(Token = "0x40006BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public MuscleDelegate OnMuscleRemoved;

		[Token(Token = "0x40006BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public MuscleDelegate OnMuscleDisconnected;

		[Token(Token = "0x40006BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public MuscleDelegate OnMuscleReconnected;

		[Token(Token = "0x40006BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Animator _targetAnimator;

		[Token(Token = "0x40006C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8502C0", Offset = "0x8502C0")]
		private Animation <targetAnimation>k__BackingField;

		[Token(Token = "0x40006C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8502D0", Offset = "0x8502D0")]
		private BehaviourBase[] <behaviours>k__BackingField;

		[Token(Token = "0x40006C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8502E0", Offset = "0x8502E0")]
		private bool <initiated>k__BackingField;

		[Token(Token = "0x40006C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		[HideInInspector]
		public List<SolverManager> solvers;

		[NonSerialized]
		[Token(Token = "0x40006C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		[HideInInspector]
		public bool manualInternalCollisionControl;

		[NonSerialized]
		[Token(Token = "0x40006C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		[HideInInspector]
		public bool manualAngularLimitControl;

		[Token(Token = "0x40006C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFA")]
		[SerializeField]
		[HideInInspector]
		public bool mapDisconnectedMuscles;

		[Token(Token = "0x40006C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFB")]
		private bool internalCollisionsEnabled;

		[Token(Token = "0x40006C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private bool angularLimitsEnabled;

		[Token(Token = "0x40006C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFD")]
		private bool fixedFrame;

		[Token(Token = "0x40006CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int lastSolverIterationCount;

		[Token(Token = "0x40006CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private bool isLegacy;

		[Token(Token = "0x40006CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x105")]
		private bool animatorDisabled;

		[Token(Token = "0x40006CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x106")]
		private bool awakeFailed;

		[Token(Token = "0x40006CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x107")]
		private bool interpolated;

		[Token(Token = "0x40006CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private bool freezeFlag;

		[Token(Token = "0x40006D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		private bool hasBeenDisabled;

		[Token(Token = "0x40006D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10A")]
		private bool hierarchyIsFlat;

		[Token(Token = "0x40006D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10B")]
		private bool teleport;

		[Token(Token = "0x40006D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private Vector3 teleportPosition;

		[Token(Token = "0x40006D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Quaternion teleportRotation;

		[Token(Token = "0x40006D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private bool teleportMoveToTarget;

		[Token(Token = "0x40006D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		private bool rebuildFlag;

		[Token(Token = "0x40006D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		private bool onPostRebuildFlag;

		[Token(Token = "0x40006D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private bool[] disconnectMuscleFlags;

		[Token(Token = "0x40006D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private MuscleDisconnectMode[] muscleDisconnectModes;

		[Token(Token = "0x40006DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool[] disconnectDeactivateFlags;

		[Token(Token = "0x40006DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool[] reconnectMuscleFlags;

		[Token(Token = "0x40006DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private Muscle[] defaultMuscles;

		[Token(Token = "0x40006DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private Vector3 rebuildPelvisPos;

		[Token(Token = "0x40006DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private Quaternion rebuildPelvisRot;

		[Token(Token = "0x40006DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool readInFixedUpdate;

		[Token(Token = "0x40006E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x850358", Offset = "0x850358")]
		private bool <isSwitchingMode>k__BackingField;

		[Token(Token = "0x40006E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Mode activeMode;

		[Token(Token = "0x40006E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private Mode lastMode;

		[Token(Token = "0x40006E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float mappingBlend;

		[Token(Token = "0x40006E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x850368", Offset = "0x850368")]
		private bool <isKilling>k__BackingField;

		[Token(Token = "0x40006E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public UpdateDelegate OnFreeze;

		[Token(Token = "0x40006E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public UpdateDelegate OnUnfreeze;

		[Token(Token = "0x40006E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public UpdateDelegate OnDeath;

		[Token(Token = "0x40006E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public UpdateDelegate OnResurrection;

		[Token(Token = "0x40006E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private State activeState;

		[Token(Token = "0x40006EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private State lastState;

		[Token(Token = "0x40006EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool angularLimitsEnabledOnKill;

		[Token(Token = "0x40006EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		private bool internalCollisionsEnabledOnKill;

		[Token(Token = "0x40006ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B2")]
		private bool animationDisabledbyStates;

		[Token(Token = "0x40006EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B3")]
		[HideInInspector]
		public bool storeTargetMappedState;

		[Token(Token = "0x40006EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private bool targetMappedStateStored;

		[Token(Token = "0x40006F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B5")]
		private bool targetMappedStateSampled;

		[Token(Token = "0x40006F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B6")]
		private bool sampleTargetMappedState;

		[Token(Token = "0x40006F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B7")]
		private bool hasProp;

		[Token(Token = "0x170000BA")]
		public Animator targetAnimator
		{
			[Token(Token = "0x6000834")]
			[Address(RVA = "0x1B728C8", Offset = "0x1B728C8", VA = "0x1B728C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000835")]
			[Address(RVA = "0x1B72A2C", Offset = "0x1B72A2C", VA = "0x1B72A2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000BB")]
		public Animation targetAnimation
		{
			[Token(Token = "0x6000836")]
			[Address(RVA = "0x1B72A34", Offset = "0x1B72A34", VA = "0x1B72A34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856B08", Offset = "0x856B08")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000837")]
			[Address(RVA = "0x1B72A3C", Offset = "0x1B72A3C", VA = "0x1B72A3C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856B18", Offset = "0x856B18")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BC")]
		public BehaviourBase[] behaviours
		{
			[Token(Token = "0x6000838")]
			[Address(RVA = "0x1B72A44", Offset = "0x1B72A44", VA = "0x1B72A44")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856B28", Offset = "0x856B28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000839")]
			[Address(RVA = "0x1B72A4C", Offset = "0x1B72A4C", VA = "0x1B72A4C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856B38", Offset = "0x856B38")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BD")]
		public bool isActive
		{
			[Token(Token = "0x600083A")]
			[Address(RVA = "0x1B72A54", Offset = "0x1B72A54", VA = "0x1B72A54")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000BE")]
		public bool initiated
		{
			[Token(Token = "0x600083B")]
			[Address(RVA = "0x1B72AE8", Offset = "0x1B72AE8", VA = "0x1B72AE8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856B48", Offset = "0x856B48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600083C")]
			[Address(RVA = "0x1B72AF0", Offset = "0x1B72AF0", VA = "0x1B72AF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856B58", Offset = "0x856B58")]
			private set
			{
			}
		}

		[Token(Token = "0x170000BF")]
		public UpdateMode updateMode
		{
			[Token(Token = "0x600083D")]
			[Address(RVA = "0x1B72AFC", Offset = "0x1B72AFC", VA = "0x1B72AFC")]
			get
			{
				return default(UpdateMode);
			}
		}

		[Token(Token = "0x170000C0")]
		public bool controlsAnimator
		{
			[Token(Token = "0x600083E")]
			[Address(RVA = "0x1B72C34", Offset = "0x1B72C34", VA = "0x1B72C34")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C1")]
		public bool isBlending
		{
			[Token(Token = "0x600083F")]
			[Address(RVA = "0x1B72AC4", Offset = "0x1B72AC4", VA = "0x1B72AC4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C2")]
		private bool autoSimulate
		{
			[Token(Token = "0x6000843")]
			[Address(RVA = "0x1B735DC", Offset = "0x1B735DC", VA = "0x1B735DC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C3")]
		private AnimatorUpdateMode targetUpdateMode
		{
			[Token(Token = "0x6000857")]
			[Address(RVA = "0x1B72B3C", Offset = "0x1B72B3C", VA = "0x1B72B3C")]
			get
			{
				return default(AnimatorUpdateMode);
			}
		}

		[Token(Token = "0x170000C4")]
		public bool isSwitchingMode
		{
			[Token(Token = "0x6000881")]
			[Address(RVA = "0x1B7A9F4", Offset = "0x1B7A9F4", VA = "0x1B7A9F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856C48", Offset = "0x856C48")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000882")]
			[Address(RVA = "0x1B7A9FC", Offset = "0x1B7A9FC", VA = "0x1B7A9FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856C58", Offset = "0x856C58")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C5")]
		public bool isSwitchingState
		{
			[Token(Token = "0x60008A2")]
			[Address(RVA = "0x1B72C94", Offset = "0x1B72C94", VA = "0x1B72C94")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C6")]
		public bool isKilling
		{
			[Token(Token = "0x60008A3")]
			[Address(RVA = "0x1B7E36C", Offset = "0x1B7E36C", VA = "0x1B7E36C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856E08", Offset = "0x856E08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008A4")]
			[Address(RVA = "0x1B7E374", Offset = "0x1B7E374", VA = "0x1B7E374")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856E18", Offset = "0x856E18")]
			private set
			{
			}
		}

		[Token(Token = "0x170000C7")]
		public bool isAlive
		{
			[Token(Token = "0x60008A5")]
			[Address(RVA = "0x1B77C74", Offset = "0x1B77C74", VA = "0x1B77C74")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C8")]
		public bool isFrozen
		{
			[Token(Token = "0x60008A6")]
			[Address(RVA = "0x1B7692C", Offset = "0x1B7692C", VA = "0x1B7692C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600082D")]
		[Address(RVA = "0x1B726D0", Offset = "0x1B726D0", VA = "0x1B726D0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8569B8", Offset = "0x8569B8")]
		private void OpenUserManualSetup()
		{
		}

		[Token(Token = "0x600082E")]
		[Address(RVA = "0x1B72718", Offset = "0x1B72718", VA = "0x1B72718")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x8569F0", Offset = "0x8569F0")]
		private void OpenUserManualComponent()
		{
		}

		[Token(Token = "0x600082F")]
		[Address(RVA = "0x1B72760", Offset = "0x1B72760", VA = "0x1B72760")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856A28", Offset = "0x856A28")]
		private void OpenUserManualPerformance()
		{
		}

		[Token(Token = "0x6000830")]
		[Address(RVA = "0x1B727A8", Offset = "0x1B727A8", VA = "0x1B727A8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856A60", Offset = "0x856A60")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0x1B727F0", Offset = "0x1B727F0", VA = "0x1B727F0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856A98", Offset = "0x856A98")]
		private void OpenSetupTutorial()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0x1B72838", Offset = "0x1B72838", VA = "0x1B72838")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856AD0", Offset = "0x856AD0")]
		private void OpenComponentTutorial()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0x1B72880", Offset = "0x1B72880", VA = "0x1B72880")]
		private void ResetStateSettings()
		{
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0x1B72CA8", Offset = "0x1B72CA8", VA = "0x1B72CA8")]
		public void Teleport(Vector3 position, Quaternion rotation, bool moveToTarget)
		{
		}

		[Token(Token = "0x6000841")]
		[Address(RVA = "0x1B73468", Offset = "0x1B73468", VA = "0x1B73468")]
		public void SetInternalCollisionsManual(bool collide, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x6000842")]
		[Address(RVA = "0x1B73554", Offset = "0x1B73554", VA = "0x1B73554")]
		public void SetAngularLimitsManual(bool limited)
		{
		}

		[Token(Token = "0x6000844")]
		[Address(RVA = "0x1B735E4", Offset = "0x1B735E4", VA = "0x1B735E4")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000845")]
		[Address(RVA = "0x1B73690", Offset = "0x1B73690", VA = "0x1B73690")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0x1B73DA8", Offset = "0x1B73DA8", VA = "0x1B73DA8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0x1B748F0", Offset = "0x1B748F0", VA = "0x1B748F0")]
		public void Start()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0x1B749A0", Offset = "0x1B749A0", VA = "0x1B749A0")]
		public Transform FindTargetRootRecursive(Transform t)
		{
			return null;
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0x1B73DEC", Offset = "0x1B73DEC", VA = "0x1B73DEC")]
		private void Initiate()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0x1B75BAC", Offset = "0x1B75BAC", VA = "0x1B75BAC")]
		private void ActivateBehaviour(BehaviourBase behaviour)
		{
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0x1B75CA4", Offset = "0x1B75CA4", VA = "0x1B75CA4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0x1B75DAC", Offset = "0x1B75DAC", VA = "0x1B75DAC")]
		private bool IsInterpolated()
		{
			return default(bool);
		}

		[Token(Token = "0x600084D")]
		[Address(RVA = "0x1B75E38", Offset = "0x1B75E38", VA = "0x1B75E38")]
		private void OnRebuild()
		{
		}

		[Token(Token = "0x600084E")]
		[Address(RVA = "0x1B76170", Offset = "0x1B76170", VA = "0x1B76170")]
		public void OnPreSimulate(float deltaTime)
		{
		}

		[Token(Token = "0x600084F")]
		[Address(RVA = "0x1B76A24", Offset = "0x1B76A24", VA = "0x1B76A24")]
		public void OnPostSimulate()
		{
		}

		[Token(Token = "0x6000850")]
		[Address(RVA = "0x1B77188", Offset = "0x1B77188", VA = "0x1B77188", Slot = "4")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000851")]
		[Address(RVA = "0x1B7770C", Offset = "0x1B7770C", VA = "0x1B7770C", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000852")]
		[Address(RVA = "0x1B777F0", Offset = "0x1B777F0", VA = "0x1B777F0", Slot = "6")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000853")]
		[Address(RVA = "0x1B7797C", Offset = "0x1B7797C", VA = "0x1B7797C", Slot = "7")]
		protected virtual void OnLateUpdate()
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0x1B76D60", Offset = "0x1B76D60", VA = "0x1B76D60")]
		private void MoveToTarget()
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0x1B72CE8", Offset = "0x1B72CE8", VA = "0x1B72CE8")]
		private void Read()
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0x1B767E8", Offset = "0x1B767E8", VA = "0x1B767E8")]
		private void FixTargetTransforms()
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0x1B77C84", Offset = "0x1B77C84", VA = "0x1B77C84")]
		private void VisualizeTargetPose()
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0x1B77F34", Offset = "0x1B77F34", VA = "0x1B77F34")]
		private void VisualizeHierarchy(Transform t, Color color)
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0x1B75AB8", Offset = "0x1B75AB8", VA = "0x1B75AB8")]
		public void FlagInternalCollisionsForUpdate()
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0x1B7693C", Offset = "0x1B7693C", VA = "0x1B7693C")]
		private void UpdateInternalCollisions()
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0x1B78268", Offset = "0x1B78268", VA = "0x1B78268")]
		public void UpdateInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0x1B78190", Offset = "0x1B78190", VA = "0x1B78190")]
		private void IgnoreInternalCollisions()
		{
		}

		[Token(Token = "0x600085E")]
		[Address(RVA = "0x1B78320", Offset = "0x1B78320", VA = "0x1B78320")]
		public void IgnoreInternalCollisions(Muscle m)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0x1B780B0", Offset = "0x1B780B0", VA = "0x1B780B0")]
		private void ResetInternalCollisions()
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0x1B783B0", Offset = "0x1B783B0", VA = "0x1B783B0")]
		public void ResetInternalCollisions(Muscle m, bool useInternalCollisionIgnores)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0x1B75AD4", Offset = "0x1B75AD4", VA = "0x1B75AD4")]
		public void FlagAngularLimitsForUpdate()
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0x1B76974", Offset = "0x1B76974", VA = "0x1B76974")]
		private void UpdateAngularLimits()
		{
		}

		[Token(Token = "0x6000863")]
		[Address(RVA = "0x1B78450", Offset = "0x1B78450", VA = "0x1B78450")]
		public bool AddPropMuscle(ConfigurableJoint addPropMuscleTo, Vector3 position, Quaternion rotation, Vector3 additionalPinOffset, [Optional] Transform targetParent, [Optional] PuppetMasterProp initiateWithProp)
		{
			return default(bool);
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0x1B6FE80", Offset = "0x1B6FE80", VA = "0x1B6FE80")]
		public bool IsDisconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0x1B6FEBC", Offset = "0x1B6FEBC", VA = "0x1B6FEBC")]
		public bool IsReconnecting(int muscleIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0x1B6F6F8", Offset = "0x1B6F6F8", VA = "0x1B6F6F8")]
		public void DisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0x1B6FEF8", Offset = "0x1B6FEF8", VA = "0x1B6FEF8")]
		public void ReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0x1B71AD0", Offset = "0x1B71AD0", VA = "0x1B71AD0")]
		public void AddMuscle(ConfigurableJoint joint, Transform target, Rigidbody connectTo, Transform targetParent, [Optional] Muscle.Props muscleProps, bool forceTreeHierarchy = false, bool forceLayers = true)
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0x1B79050", Offset = "0x1B79050", VA = "0x1B79050")]
		public void Rebuild()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0x1B706F0", Offset = "0x1B706F0", VA = "0x1B706F0")]
		public void RemoveMuscleRecursive(ConfigurableJoint joint, bool attachTarget, bool blockTargetAnimation = false, MuscleRemoveMode removeMode = MuscleRemoveMode.Sever)
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0x1B793A0", Offset = "0x1B793A0", VA = "0x1B793A0")]
		public void ReplaceMuscle(ConfigurableJoint oldJoint, ConfigurableJoint newJoint)
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0x1B79454", Offset = "0x1B79454", VA = "0x1B79454")]
		public void SetMuscles(Muscle[] newMuscles)
		{
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0x1B79508", Offset = "0x1B79508", VA = "0x1B79508")]
		public void DisableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0x1B795BC", Offset = "0x1B795BC", VA = "0x1B795BC")]
		public void EnableMuscleRecursive(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x600086F")]
		[Address(RVA = "0x1B79670", Offset = "0x1B79670", VA = "0x1B79670")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856B68", Offset = "0x856B68")]
		public void FlattenHierarchy()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0x1B7977C", Offset = "0x1B7977C", VA = "0x1B7977C")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856BA0", Offset = "0x856BA0")]
		public void TreeHierarchy()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0x1B798EC", Offset = "0x1B798EC", VA = "0x1B798EC")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856BD8", Offset = "0x856BD8")]
		public void FixMusclePositions()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0x1B79A24", Offset = "0x1B79A24", VA = "0x1B79A24")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856C10", Offset = "0x856C10")]
		public void FixMusclePositionsAndRotations()
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0x1B759AC", Offset = "0x1B759AC", VA = "0x1B759AC")]
		public bool HierarchyIsFlat()
		{
			return default(bool);
		}

		[Token(Token = "0x6000874")]
		[Address(RVA = "0x1B78B28", Offset = "0x1B78B28", VA = "0x1B78B28")]
		private int GetHighestDisconnectedParentIndex(int index)
		{
			return default(int);
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0x1B76644", Offset = "0x1B76644", VA = "0x1B76644")]
		private void ProcessDisconnects()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0x1B76740", Offset = "0x1B76740", VA = "0x1B76740")]
		private void ProcessReconnects()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0x1B79B94", Offset = "0x1B79B94", VA = "0x1B79B94")]
		private void OnDisconnectMuscleRecursive(int index, MuscleDisconnectMode disconnectMode = MuscleDisconnectMode.Sever, bool deactivate = false)
		{
		}

		[Token(Token = "0x6000878")]
		[Address(RVA = "0x1B79FDC", Offset = "0x1B79FDC", VA = "0x1B79FDC")]
		private void DisconnectMuscle(Muscle m, bool sever, bool deactivate)
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0x1B79E58", Offset = "0x1B79E58", VA = "0x1B79E58")]
		private void OnReconnectMuscleRecursive(int index)
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0x1B7A480", Offset = "0x1B7A480", VA = "0x1B7A480")]
		private void ReconnectMuscle(Muscle m)
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0x1B7A868", Offset = "0x1B7A868", VA = "0x1B7A868")]
		private void AddIndexesRecursive(int index, int[] indexes)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0x1B79254", Offset = "0x1B79254", VA = "0x1B79254")]
		private void DisconnectJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x600087D")]
		[Address(RVA = "0x1B7931C", Offset = "0x1B7931C", VA = "0x1B7931C")]
		private void KillJoint(ConfigurableJoint joint)
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0x1B7A9D4", Offset = "0x1B7A9D4", VA = "0x1B7A9D4")]
		public void SwitchToActiveMode()
		{
		}

		[Token(Token = "0x600087F")]
		[Address(RVA = "0x1B7A9DC", Offset = "0x1B7A9DC", VA = "0x1B7A9DC")]
		public void SwitchToKinematicMode()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0x1B7A9E8", Offset = "0x1B7A9E8", VA = "0x1B7A9E8")]
		public void SwitchToDisabledMode()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0x1B7AA08", Offset = "0x1B7AA08", VA = "0x1B7AA08")]
		public void DisableImmediately()
		{
		}

		[Token(Token = "0x6000884")]
		[Address(RVA = "0x1B7AAA4", Offset = "0x1B7AAA4", VA = "0x1B7AAA4", Slot = "8")]
		protected virtual void SwitchModes()
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0x1B7ABF4", Offset = "0x1B7ABF4", VA = "0x1B7ABF4")]
		private void DisabledToKinematic()
		{
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0x1B7AD54", Offset = "0x1B7AD54", VA = "0x1B7AD54")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x856C68", Offset = "0x856C68")]
		private IEnumerator DisabledToActive()
		{
			return null;
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0x1B7ADD4", Offset = "0x1B7ADD4", VA = "0x1B7ADD4")]
		private void KinematicToDisabled()
		{
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0x1B7AE78", Offset = "0x1B7AE78", VA = "0x1B7AE78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x856CD0", Offset = "0x856CD0")]
		private IEnumerator KinematicToActive()
		{
			return null;
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0x1B7AEF8", Offset = "0x1B7AEF8", VA = "0x1B7AEF8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x856D38", Offset = "0x856D38")]
		private IEnumerator ActiveToDisabled()
		{
			return null;
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0x1B7AF78", Offset = "0x1B7AF78", VA = "0x1B7AF78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x856DA0", Offset = "0x856DA0")]
		private IEnumerator ActiveToKinematic()
		{
			return null;
		}

		[Token(Token = "0x600088B")]
		[Address(RVA = "0x1B7AFF8", Offset = "0x1B7AFF8", VA = "0x1B7AFF8")]
		public void SetMuscleWeights(Muscle.Group group, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0x1B7B0C8", Offset = "0x1B7B0C8", VA = "0x1B7B0C8")]
		public void SetMuscleWeights(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0x1B7B53C", Offset = "0x1B7B53C", VA = "0x1B7B53C")]
		public void SetMuscleWeights(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0x1B7B810", Offset = "0x1B7B810", VA = "0x1B7B810")]
		public void SetMuscleWeightsRecursive(Transform target, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x600088F")]
		[Address(RVA = "0x1B7B940", Offset = "0x1B7B940", VA = "0x1B7B940")]
		public void SetMuscleWeightsRecursive(int muscleIndex, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0x1B7BA2C", Offset = "0x1B7BA2C", VA = "0x1B7BA2C")]
		public void SetMuscleWeightsRecursive(HumanBodyBones humanBodyBone, float muscleWeight, float pinWeight = 1f, float mappingWeight = 1f, float muscleDamper = 1f)
		{
		}

		[Token(Token = "0x6000891")]
		[Address(RVA = "0x1B7B354", Offset = "0x1B7B354", VA = "0x1B7B354")]
		public void SetMuscleWeights(int muscleIndex, float muscleWeight, float pinWeight, float mappingWeight, float muscleDamper)
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0x1B7BAB4", Offset = "0x1B7BAB4", VA = "0x1B7BAB4")]
		public Muscle GetMuscle(Transform target)
		{
			return null;
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0x1B78C50", Offset = "0x1B78C50", VA = "0x1B78C50")]
		public Muscle GetMuscle(Rigidbody rigidbody)
		{
			return null;
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0x1B6EF54", Offset = "0x1B6EF54", VA = "0x1B6EF54")]
		public Muscle GetMuscle(ConfigurableJoint joint)
		{
			return null;
		}

		[Token(Token = "0x6000895")]
		[Address(RVA = "0x1B76084", Offset = "0x1B76084", VA = "0x1B76084")]
		public bool ContainsJoint(ConfigurableJoint joint)
		{
			return default(bool);
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0x1B7B5C4", Offset = "0x1B7B5C4", VA = "0x1B7B5C4")]
		public int GetMuscleIndex(HumanBodyBones humanBodyBone)
		{
			return default(int);
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0x1B7B150", Offset = "0x1B7B150", VA = "0x1B7B150")]
		public int GetMuscleIndex(Transform target)
		{
			return default(int);
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0x1B7BB10", Offset = "0x1B7BB10", VA = "0x1B7BB10")]
		public int GetMuscleIndex(Rigidbody rigidbody)
		{
			return default(int);
		}

		[Token(Token = "0x6000899")]
		[Address(RVA = "0x1B7905C", Offset = "0x1B7905C", VA = "0x1B7905C")]
		public int GetMuscleIndex(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0x1B7BD14", Offset = "0x1B7BD14", VA = "0x1B7BD14")]
		public static PuppetMaster SetUp(Transform target, Transform ragdoll, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x600089B")]
		[Address(RVA = "0x1B7CA04", Offset = "0x1B7CA04", VA = "0x1B7CA04")]
		public static PuppetMaster SetUp(Transform target, int characterControllerLayer, int ragdollLayer)
		{
			return null;
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0x1B7BE10", Offset = "0x1B7BE10", VA = "0x1B7BE10")]
		public void SetUpTo(Transform setUpTo, int characterControllerLayer, int ragdollLayer)
		{
		}

		[Token(Token = "0x600089D")]
		[Address(RVA = "0x1B7CB80", Offset = "0x1B7CB80", VA = "0x1B7CB80")]
		public static void RemoveRagdollComponents(Transform target, int characterControllerLayer)
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0x1B7D428", Offset = "0x1B7D428", VA = "0x1B7D428")]
		private void SetUpMuscles(Transform setUpTo)
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0x1B7DEC8", Offset = "0x1B7DEC8", VA = "0x1B7DEC8")]
		private static Muscle.Group FindGroup(Animator animator, Transform t)
		{
			return default(Muscle.Group);
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0x1B7CFEC", Offset = "0x1B7CFEC", VA = "0x1B7CFEC")]
		private void RemoveUnnecessaryBones()
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0x1B7DBB8", Offset = "0x1B7DBB8", VA = "0x1B7DBB8")]
		private static bool IsClothCollider(Collider collider, Cloth[] cloths)
		{
			return default(bool);
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0x1B7E380", Offset = "0x1B7E380", VA = "0x1B7E380")]
		public void Kill()
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0x1B7E38C", Offset = "0x1B7E38C", VA = "0x1B7E38C")]
		public void Kill(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0x1B7E3A8", Offset = "0x1B7E3A8", VA = "0x1B7E3A8")]
		public void Freeze()
		{
		}

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0x1B7E3B4", Offset = "0x1B7E3B4", VA = "0x1B7E3B4")]
		public void Freeze(StateSettings stateSettings)
		{
		}

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0x1B7E3D0", Offset = "0x1B7E3D0", VA = "0x1B7E3D0")]
		public void Resurrect()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0x1B7E3D8", Offset = "0x1B7E3D8", VA = "0x1B7E3D8", Slot = "9")]
		protected virtual void SwitchStates()
		{
		}

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0x1B7E4D8", Offset = "0x1B7E4D8", VA = "0x1B7E4D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x856E28", Offset = "0x856E28")]
		private IEnumerator AliveToDead(bool freeze)
		{
			return null;
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0x1B76F10", Offset = "0x1B76F10", VA = "0x1B76F10")]
		private void OnFreezeFlag()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0x1B7E564", Offset = "0x1B7E564", VA = "0x1B7E564")]
		private void DeadToAlive()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0x1B73B0C", Offset = "0x1B73B0C", VA = "0x1B73B0C")]
		private void SetAnimationEnabled(bool to)
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0x1B7E674", Offset = "0x1B7E674", VA = "0x1B7E674")]
		private void DeadToFrozen()
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0x1B7E680", Offset = "0x1B7E680", VA = "0x1B7E680")]
		private void FrozenToAlive()
		{
		}

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0x1B7E89C", Offset = "0x1B7E89C", VA = "0x1B7E89C")]
		private void FrozenToDead()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0x1B73C08", Offset = "0x1B73C08", VA = "0x1B73C08")]
		private void ActivateRagdoll(bool kinematic = false)
		{
		}

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0x1B7E970", Offset = "0x1B7E970", VA = "0x1B7E970")]
		private bool CanFreeze()
		{
			return default(bool);
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0x1B7EA2C", Offset = "0x1B7EA2C", VA = "0x1B7EA2C")]
		public void SampleTargetMappedState()
		{
		}

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0x1B7EAF4", Offset = "0x1B7EAF4", VA = "0x1B7EAF4")]
		public void FixTargetToSampledState(float weight)
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0x1B75AF0", Offset = "0x1B75AF0", VA = "0x1B75AF0")]
		public void StoreTargetMappedState()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0x1B756F8", Offset = "0x1B756F8", VA = "0x1B756F8")]
		private void UpdateHierarchies()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0x1B7F2C8", Offset = "0x1B7F2C8", VA = "0x1B7F2C8")]
		private bool HasProp()
		{
			return default(bool);
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0x1B7F160", Offset = "0x1B7F160", VA = "0x1B7F160")]
		private void UpdateBroadcasterMuscleIndexes()
		{
		}

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0x1B7ED10", Offset = "0x1B7ED10", VA = "0x1B7ED10")]
		private void AssignParentAndChildIndexes()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0x1B7F32C", Offset = "0x1B7F32C", VA = "0x1B7F32C")]
		private void AddToParentsRecursive(ConfigurableJoint joint, int[] indexes)
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0x1B7F4A8", Offset = "0x1B7F4A8", VA = "0x1B7F4A8")]
		private void AddToChildrenRecursive(ConfigurableJoint joint, int[] indexes, bool[] childFlags)
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0x1B7F04C", Offset = "0x1B7F04C", VA = "0x1B7F04C")]
		private void AssignKinshipDegrees()
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0x1B7F798", Offset = "0x1B7F798", VA = "0x1B7F798")]
		private void AssignKinshipsDownRecursive(int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0x1B7F8F8", Offset = "0x1B7F8F8", VA = "0x1B7F8F8")]
		private void AssignKinshipsUpRecursive(int[] kinshipDegrees, int degree, int index)
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0x1B7F6C0", Offset = "0x1B7F6C0", VA = "0x1B7F6C0")]
		private int GetMuscleIndexLowLevel(ConfigurableJoint joint)
		{
			return default(int);
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0x1B74D1C", Offset = "0x1B74D1C", VA = "0x1B74D1C")]
		public bool IsValid(bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0x1B78CAC", Offset = "0x1B78CAC", VA = "0x1B78CAC")]
		private bool CheckMassVariation(float threshold, bool log)
		{
			return default(bool);
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0x1B78BB8", Offset = "0x1B78BB8", VA = "0x1B78BB8")]
		private bool CheckIfInitiated()
		{
			return default(bool);
		}

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0x1B7FB58", Offset = "0x1B7FB58", VA = "0x1B7FB58")]
		public PuppetMaster()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200011F")]
	public enum MuscleRemoveMode
	{
		[Token(Token = "0x40006F4")]
		Sever,
		[Token(Token = "0x40006F5")]
		Explode,
		[Token(Token = "0x40006F6")]
		Numb
	}
	[Serializable]
	[Token(Token = "0x2000120")]
	public enum MuscleDisconnectMode
	{
		[Token(Token = "0x40006F8")]
		Sever,
		[Token(Token = "0x40006F9")]
		Explode
	}
	[Token(Token = "0x2000121")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x847CF0", Offset = "0x847CF0")]
	public class PuppetMasterHumanoidConfig : ScriptableObject
	{
		[Serializable]
		[Token(Token = "0x2000435")]
		public class HumanoidMuscle
		{
			[Token(Token = "0x4002026")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[SerializeField]
			[HideInInspector]
			public string name;

			[Token(Token = "0x4002027")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4002028")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Muscle.Props props;

			[Token(Token = "0x6001BB7")]
			[Address(RVA = "0x19E1134", Offset = "0x19E1134", VA = "0x19E1134")]
			public HumanoidMuscle()
			{
			}
		}

		[Token(Token = "0x40006FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x850388", Offset = "0x850388")]
		public PuppetMaster.State state;

		[Token(Token = "0x40006FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x40006FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PuppetMaster.Mode mode;

		[Token(Token = "0x40006FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float blendTime;

		[Token(Token = "0x40006FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool fixTargetTransforms;

		[Token(Token = "0x40006FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int solverIterationCount;

		[Token(Token = "0x4000700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool visualizeTargetPose;

		[Token(Token = "0x4000701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8503C0", Offset = "0x8503C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8503C0", Offset = "0x8503C0")]
		public float mappingWeight;

		[Token(Token = "0x4000702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x850414", Offset = "0x850414")]
		public float pinWeight;

		[Token(Token = "0x4000703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85042C", Offset = "0x85042C")]
		public float muscleWeight;

		[Token(Token = "0x4000704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x850444", Offset = "0x850444")]
		public float muscleSpring;

		[Token(Token = "0x4000705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float muscleDamper;

		[Token(Token = "0x4000706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85047C", Offset = "0x85047C")]
		public float pinPow;

		[Token(Token = "0x4000707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x850494", Offset = "0x850494")]
		public float pinDistanceFalloff;

		[Token(Token = "0x4000708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool angularPinning;

		[Token(Token = "0x4000709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool updateJointAnchors;

		[Token(Token = "0x400070A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x62")]
		public bool supportTranslationAnimation;

		[Token(Token = "0x400070B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x63")]
		public bool angularLimits;

		[Token(Token = "0x400070C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool internalCollisions;

		[Token(Token = "0x400070D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8504B0", Offset = "0x8504B0")]
		public HumanoidMuscle[] muscles;

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xDC7870", Offset = "0xDC7870", VA = "0xDC7870")]
		public void ApplyTo(PuppetMaster p)
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xDC7BE4", Offset = "0xDC7BE4", VA = "0xDC7BE4")]
		private Muscle GetMuscle(HumanBodyBones boneId, Animator animator, PuppetMaster puppetMaster)
		{
			return null;
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xDC7D14", Offset = "0xDC7D14", VA = "0xDC7D14")]
		public PuppetMasterHumanoidConfig()
		{
		}
	}
	[Token(Token = "0x2000122")]
	public class PuppetMasterProp : MonoBehaviour
	{
		[Token(Token = "0x400070E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8504E8", Offset = "0x8504E8")]
		public Transform meshRoot;

		[Token(Token = "0x400070F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850520", Offset = "0x850520")]
		public Muscle.Props muscleProps;

		[Token(Token = "0x4000710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850558", Offset = "0x850558")]
		public bool forceLayers;

		[Token(Token = "0x4000711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850590", Offset = "0x850590")]
		public float mass;

		[Token(Token = "0x4000712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8505C8", Offset = "0x8505C8")]
		public int propType;

		[Token(Token = "0x4000713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x850600", Offset = "0x850600")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850600", Offset = "0x850600")]
		public PhysicMaterial pickedUpMaterial;

		[Token(Token = "0x4000714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x850660", Offset = "0x850660")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850660", Offset = "0x850660")]
		public Vector3 additionalPinOffsetAdd;

		[Token(Token = "0x4000715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8506C0", Offset = "0x8506C0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8506C0", Offset = "0x8506C0")]
		public float additionalPinWeight;

		[Token(Token = "0x4000716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850714", Offset = "0x850714")]
		public float additionalPinMass;

		[Token(Token = "0x4000717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85074C", Offset = "0x85074C")]
		private bool <isPickedUp>k__BackingField;

		[Token(Token = "0x4000718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85075C", Offset = "0x85075C")]
		private Muscle <propMuscle>k__BackingField;

		[Token(Token = "0x4000719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private int defaultLayer;

		[Token(Token = "0x400071A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Transform defaultParent;

		[Token(Token = "0x400071B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Collider[] colliders;

		[Token(Token = "0x400071C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PhysicMaterial[] droppedMaterials;

		[Token(Token = "0x400071D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Rigidbody r;

		[Token(Token = "0x400071E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float _mass;

		[Token(Token = "0x400071F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float _drag;

		[Token(Token = "0x4000720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float _angularDrag;

		[Token(Token = "0x4000721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private bool _useGravity;

		[Token(Token = "0x4000722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool _isKinematic;

		[Token(Token = "0x4000723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private RigidbodyInterpolation _interpolation;

		[Token(Token = "0x4000724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private CollisionDetectionMode _collisionDetectionMode;

		[Token(Token = "0x4000725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RigidbodyConstraints _constraints;

		[Token(Token = "0x4000726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] emptyColliders;

		[Token(Token = "0x170000C9")]
		public bool isPickedUp
		{
			[Token(Token = "0x60008CA")]
			[Address(RVA = "0xDC7DF0", Offset = "0xDC7DF0", VA = "0xDC7DF0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856E90", Offset = "0x856E90")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60008CB")]
			[Address(RVA = "0xDC7DF8", Offset = "0xDC7DF8", VA = "0xDC7DF8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856EA0", Offset = "0x856EA0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CA")]
		protected Muscle propMuscle
		{
			[Token(Token = "0x60008CF")]
			[Address(RVA = "0xDC7EB0", Offset = "0xDC7EB0", VA = "0xDC7EB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856EB0", Offset = "0x856EB0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60008D0")]
			[Address(RVA = "0xDC7EB8", Offset = "0xDC7EB8", VA = "0xDC7EB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856EC0", Offset = "0x856EC0")]
			private set
			{
			}
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xDC7E04", Offset = "0xDC7E04", VA = "0xDC7E04")]
		public Rigidbody GetRigidbody()
		{
			return null;
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xDC7EA8", Offset = "0xDC7EA8", VA = "0xDC7EA8", Slot = "4")]
		protected virtual void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xDC7EAC", Offset = "0xDC7EAC", VA = "0xDC7EAC", Slot = "5")]
		protected virtual void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xDC7EC0", Offset = "0xDC7EC0", VA = "0xDC7EC0")]
		public void PickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xDC83EC", Offset = "0xDC83EC", VA = "0xDC83EC")]
		public void Drop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xDC8940", Offset = "0xDC8940", VA = "0xDC8940", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xDC8ADC", Offset = "0xDC8ADC", VA = "0xDC8ADC", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xDC8CDC", Offset = "0xDC8CDC", VA = "0xDC8CDC", Slot = "8")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xDC8280", Offset = "0xDC8280", VA = "0xDC8280")]
		private void RemoveRigidbody()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xDC87D4", Offset = "0xDC87D4", VA = "0xDC87D4")]
		private void ReattachRigidbody()
		{
		}

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xDC8D58", Offset = "0xDC8D58", VA = "0xDC8D58")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xDC8EC0", Offset = "0xDC8EC0", VA = "0xDC8EC0")]
		public PuppetMasterProp()
		{
		}
	}
	[Token(Token = "0x2000123")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847D5C", Offset = "0x847D5C")]
	public class PuppetMasterSettings : Singleton<PuppetMasterSettings>
	{
		[Serializable]
		[Token(Token = "0x2000436")]
		public class PuppetUpdateLimit
		{
			[Token(Token = "0x4002029")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854E70", Offset = "0x854E70")]
			public int puppetsPerFrame;

			[Token(Token = "0x400202A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			private int index;

			[Token(Token = "0x6001BB8")]
			[Address(RVA = "0x19E12D8", Offset = "0x19E12D8", VA = "0x19E12D8")]
			public PuppetUpdateLimit()
			{
			}

			[Token(Token = "0x6001BB9")]
			[Address(RVA = "0x19E1304", Offset = "0x19E1304", VA = "0x19E1304")]
			public void Step(int puppetCount)
			{
			}

			[Token(Token = "0x6001BBA")]
			[Address(RVA = "0x19E1320", Offset = "0x19E1320", VA = "0x19E1320")]
			public bool Update(List<PuppetMaster> puppets, PuppetMaster puppetMaster)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85076C", Offset = "0x85076C")]
		public PuppetUpdateLimit kinematicCollidersUpdateLimit;

		[Token(Token = "0x4000728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PuppetUpdateLimit freeUpdateLimit;

		[Token(Token = "0x4000729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PuppetUpdateLimit fixedUpdateLimit;

		[Token(Token = "0x400072A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool collisionStayMessages;

		[Token(Token = "0x400072B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool collisionExitMessages;

		[Token(Token = "0x400072C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float activePuppetCollisionThresholdMlp;

		[Token(Token = "0x400072D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8507A4", Offset = "0x8507A4")]
		private int <currentlyActivePuppets>k__BackingField;

		[Token(Token = "0x400072E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8507B4", Offset = "0x8507B4")]
		private int <currentlyKinematicPuppets>k__BackingField;

		[Token(Token = "0x400072F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8507C4", Offset = "0x8507C4")]
		private int <currentlyDisabledPuppets>k__BackingField;

		[Token(Token = "0x4000730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<PuppetMaster> _puppets;

		[Token(Token = "0x170000CB")]
		public int currentlyActivePuppets
		{
			[Token(Token = "0x60008DA")]
			[Address(RVA = "0xDC91F4", Offset = "0xDC91F4", VA = "0xDC91F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856ED0", Offset = "0x856ED0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008DB")]
			[Address(RVA = "0xDC91FC", Offset = "0xDC91FC", VA = "0xDC91FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856EE0", Offset = "0x856EE0")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CC")]
		public int currentlyKinematicPuppets
		{
			[Token(Token = "0x60008DC")]
			[Address(RVA = "0xDC9204", Offset = "0xDC9204", VA = "0xDC9204")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856EF0", Offset = "0x856EF0")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008DD")]
			[Address(RVA = "0xDC920C", Offset = "0xDC920C", VA = "0xDC920C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856F00", Offset = "0x856F00")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CD")]
		public int currentlyDisabledPuppets
		{
			[Token(Token = "0x60008DE")]
			[Address(RVA = "0xDC9214", Offset = "0xDC9214", VA = "0xDC9214")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856F10", Offset = "0x856F10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60008DF")]
			[Address(RVA = "0xDC921C", Offset = "0xDC921C", VA = "0xDC921C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x856F20", Offset = "0x856F20")]
			private set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public List<PuppetMaster> puppets
		{
			[Token(Token = "0x60008E0")]
			[Address(RVA = "0xDC9224", Offset = "0xDC9224", VA = "0xDC9224")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xDC922C", Offset = "0xDC922C", VA = "0xDC922C")]
		public void Register(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xDC92CC", Offset = "0xDC92CC", VA = "0xDC92CC")]
		public void Unregister(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xDC9330", Offset = "0xDC9330", VA = "0xDC9330")]
		public bool UpdateMoveToTarget(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xDC935C", Offset = "0xDC935C", VA = "0xDC935C")]
		public bool UpdateFree(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xDC9388", Offset = "0xDC9388", VA = "0xDC9388")]
		public bool UpdateFixed(PuppetMaster puppetMaster)
		{
			return default(bool);
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xDC93B4", Offset = "0xDC93B4", VA = "0xDC93B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xDC95A8", Offset = "0xDC95A8", VA = "0xDC95A8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xDC9600", Offset = "0xDC9600", VA = "0xDC9600")]
		public PuppetMasterSettings()
		{
		}
	}
	[Token(Token = "0x2000124")]
	public static class PuppetMasterTools
	{
		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xDC9764", Offset = "0xDC9764", VA = "0xDC9764")]
		public static void PositionRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xDC9D34", Offset = "0xDC9D34", VA = "0xDC9D34")]
		public static void RealignRagdoll(PuppetMaster puppetMaster)
		{
		}

		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xDCA614", Offset = "0xDCA614", VA = "0xDCA614")]
		private static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xDCA638", Offset = "0xDCA638", VA = "0xDCA638")]
		private static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}
	}
	[Serializable]
	[Token(Token = "0x2000125")]
	public class Weight
	{
		[Serializable]
		[Token(Token = "0x2000437")]
		public enum Mode
		{
			[Token(Token = "0x400202C")]
			Float,
			[Token(Token = "0x400202D")]
			Curve
		}

		[Token(Token = "0x4000731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Mode mode;

		[Token(Token = "0x4000732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float floatValue;

		[Token(Token = "0x4000733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AnimationCurve curve;

		[Token(Token = "0x4000734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string tooltip;

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xC368BC", Offset = "0xC368BC", VA = "0xC368BC")]
		public Weight(float floatValue)
		{
		}

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xC36934", Offset = "0xC36934", VA = "0xC36934")]
		public Weight(float floatValue, string tooltip)
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xC369C0", Offset = "0xC369C0", VA = "0xC369C0")]
		public float GetValue(float param)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000126")]
	public class InitialVelocity : MonoBehaviour
	{
		[Token(Token = "0x4000735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 initialVelocity;

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xBAD064", Offset = "0xBAD064", VA = "0xBAD064")]
		private void Start()
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xBAD0D0", Offset = "0xBAD0D0", VA = "0xBAD0D0")]
		public InitialVelocity()
		{
		}
	}
	[Token(Token = "0x2000127")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x847D94", Offset = "0x847D94")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847D94", Offset = "0x847D94")]
	public class BipedRagdollCreator : RagdollCreator
	{
		[Serializable]
		[Token(Token = "0x2000438")]
		public struct Options
		{
			[Token(Token = "0x400202E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float weight;

			[Token(Token = "0x400202F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x854E8C", Offset = "0x854E8C")]
			public bool spine;

			[Token(Token = "0x4002030")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
			public bool chest;

			[Token(Token = "0x4002031")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
			public bool hands;

			[Token(Token = "0x4002032")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
			public bool feet;

			[Token(Token = "0x4002033")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x854EC4", Offset = "0x854EC4")]
			public JointType joints;

			[Token(Token = "0x4002034")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public float jointRange;

			[Token(Token = "0x4002035")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x854EFC", Offset = "0x854EFC")]
			public float colliderLengthOverlap;

			[Token(Token = "0x4002036")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public ColliderType torsoColliders;

			[Token(Token = "0x4002037")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public ColliderType headCollider;

			[Token(Token = "0x4002038")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public ColliderType armColliders;

			[Token(Token = "0x4002039")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public ColliderType handColliders;

			[Token(Token = "0x400203A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public ColliderType legColliders;

			[Token(Token = "0x400203B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public ColliderType footColliders;

			[Token(Token = "0x17000232")]
			public static Options Default
			{
				[Token(Token = "0x6001BBB")]
				[Address(RVA = "0x19ABEF4", Offset = "0x19ABEF4", VA = "0x19ABEF4")]
				get
				{
					return default(Options);
				}
			}
		}

		[Token(Token = "0x4000736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool canBuild;

		[Token(Token = "0x4000737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BipedRagdollReferences references;

		[Token(Token = "0x4000738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Options options;

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xF3E6A0", Offset = "0xF3E6A0", VA = "0xF3E6A0")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856F30", Offset = "0x856F30")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xF3E6E8", Offset = "0xF3E6E8", VA = "0xF3E6E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856F68", Offset = "0x856F68")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xF3E730", Offset = "0xF3E730", VA = "0xF3E730")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856FA0", Offset = "0x856FA0")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xF3E778", Offset = "0xF3E778", VA = "0xF3E778")]
		public static Options AutodetectOptions(BipedRagdollReferences r)
		{
			return default(Options);
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xF3EA20", Offset = "0xF3EA20", VA = "0xF3EA20")]
		public static void Create(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xF3F400", Offset = "0xF3F400", VA = "0xF3F400")]
		private static void CreateColliders(BipedRagdollReferences r, Options options)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xF40BDC", Offset = "0xF40BDC", VA = "0xF40BDC")]
		private static void CreateHandCollider(Transform hand, Transform lowerArm, Transform root, Options options)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xF40E0C", Offset = "0xF40E0C", VA = "0xF40E0C")]
		private static void CreateFootCollider(Transform foot, Transform lowerLeg, Transform upperLeg, Transform root, Options options)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xF41204", Offset = "0xF41204", VA = "0xF41204")]
		private static Vector3 GetChildCentroid(Transform t, Vector3 fallback)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xF3FEC4", Offset = "0xF3FEC4", VA = "0xF3FEC4")]
		private static void MassDistribution(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xF40330", Offset = "0xF40330", VA = "0xF40330")]
		private static void CreateJoints(BipedRagdollReferences r, Options o)
		{
		}

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xF412E4", Offset = "0xF412E4", VA = "0xF412E4")]
		private static void CreateLimbJoints(Transform connectedBone, Transform bone1, Transform bone2, Transform bone3, Transform root, Vector3 defaultWorldDirection, JointType jointType, CreateJointParams.Limits limits1, CreateJointParams.Limits limits2, CreateJointParams.Limits limits3)
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xF4188C", Offset = "0xF4188C", VA = "0xF4188C")]
		public static void ClearBipedRagdoll(BipedRagdollReferences r)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xF41CFC", Offset = "0xF41CFC", VA = "0xF41CFC")]
		public static bool IsClear(BipedRagdollReferences r)
		{
			return default(bool);
		}

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xF40B2C", Offset = "0xF40B2C", VA = "0xF40B2C")]
		private static Vector3 GetUpperArmToHeadCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xF3E980", Offset = "0xF3E980", VA = "0xF3E980")]
		private static Vector3 GetUpperArmCentroid(BipedRagdollReferences r)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xF41E00", Offset = "0xF41E00", VA = "0xF41E00")]
		public BipedRagdollCreator()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000128")]
	public struct BipedRagdollReferences
	{
		[Token(Token = "0x4000739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Transform root;

		[Token(Token = "0x400073A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public Transform hips;

		[Token(Token = "0x400073B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform spine;

		[Token(Token = "0x400073C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform chest;

		[Token(Token = "0x400073D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform head;

		[Token(Token = "0x400073E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform leftUpperLeg;

		[Token(Token = "0x400073F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftLowerLeg;

		[Token(Token = "0x4000740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform leftFoot;

		[Token(Token = "0x4000741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightUpperLeg;

		[Token(Token = "0x4000742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightLowerLeg;

		[Token(Token = "0x4000743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightFoot;

		[Token(Token = "0x4000744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform leftUpperArm;

		[Token(Token = "0x4000745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftLowerArm;

		[Token(Token = "0x4000746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform leftHand;

		[Token(Token = "0x4000747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform rightUpperArm;

		[Token(Token = "0x4000748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightLowerArm;

		[Token(Token = "0x4000749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Transform rightHand;

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xF3EB78", Offset = "0xF3EB78", VA = "0xF3EB78")]
		public bool IsValid(string msg)
		{
			return default(bool);
		}

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xF41E60", Offset = "0xF41E60", VA = "0xF41E60")]
		private bool IsChildRecursive(Transform t, Transform parent)
		{
			return default(bool);
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xF41F5C", Offset = "0xF41F5C", VA = "0xF41F5C")]
		public bool IsEmpty(bool considerRoot)
		{
			return default(bool);
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xF422EC", Offset = "0xF422EC", VA = "0xF422EC")]
		public bool Contains(Transform t, bool ignoreRoot = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xF41904", Offset = "0xF41904", VA = "0xF41904")]
		public Transform[] GetRagdollTransforms()
		{
			return null;
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xF42680", Offset = "0xF42680", VA = "0xF42680")]
		public static BipedRagdollReferences FromAvatar(Animator animator)
		{
			return default(BipedRagdollReferences);
		}

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xF42908", Offset = "0xF42908", VA = "0xF42908")]
		public static BipedRagdollReferences FromBipedReferences(BipedReferences biped)
		{
			return default(BipedRagdollReferences);
		}
	}
	[Token(Token = "0x2000129")]
	public static class JointConverter
	{
		[Token(Token = "0x600090A")]
		[Address(RVA = "0xCDFEB8", Offset = "0xCDFEB8", VA = "0xCDFEB8")]
		public static void ToConfigurable(GameObject root)
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xCE03E8", Offset = "0xCE03E8", VA = "0xCE03E8")]
		public static void HingeToConfigurable(HingeJoint src)
		{
		}

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xCE06BC", Offset = "0xCE06BC", VA = "0xCE06BC")]
		public static void FixedToConfigurable(FixedJoint src)
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xCE07EC", Offset = "0xCE07EC", VA = "0xCE07EC")]
		public static void SpringToConfigurable(SpringJoint src)
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xCE01A4", Offset = "0xCE01A4", VA = "0xCE01A4")]
		public static void CharacterToConfigurable(CharacterJoint src)
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xCE09A4", Offset = "0xCE09A4", VA = "0xCE09A4")]
		private static void ConvertJoint(ConfigurableJoint conf, Joint src)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xCE0ADC", Offset = "0xCE0ADC", VA = "0xCE0ADC")]
		private static SoftJointLimit ConvertToHighSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xCE0B90", Offset = "0xCE0B90", VA = "0xCE0B90")]
		private static SoftJointLimit ConvertToLowSoftJointLimit(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xCE0B40", Offset = "0xCE0B40", VA = "0xCE0B40")]
		private static SoftJointLimitSpring ConvertToSoftJointLimitSpring(JointLimits src, JointSpring spring, bool useSpring)
		{
			return default(SoftJointLimitSpring);
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xCE0BF4", Offset = "0xCE0BF4", VA = "0xCE0BF4")]
		private static SoftJointLimit CopyLimit(SoftJointLimit src)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xCE0C54", Offset = "0xCE0C54", VA = "0xCE0C54")]
		private static SoftJointLimitSpring CopyLimitSpring(SoftJointLimitSpring src)
		{
			return default(SoftJointLimitSpring);
		}
	}
	[Token(Token = "0x200012A")]
	public abstract class RagdollCreator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000439")]
		public enum ColliderType
		{
			[Token(Token = "0x400203D")]
			Box,
			[Token(Token = "0x400203E")]
			Capsule
		}

		[Serializable]
		[Token(Token = "0x200043A")]
		public enum JointType
		{
			[Token(Token = "0x4002040")]
			Configurable,
			[Token(Token = "0x4002041")]
			Character
		}

		[Serializable]
		[Token(Token = "0x200043B")]
		public enum Direction
		{
			[Token(Token = "0x4002043")]
			X,
			[Token(Token = "0x4002044")]
			Y,
			[Token(Token = "0x4002045")]
			Z
		}

		[Token(Token = "0x200043C")]
		public struct CreateJointParams
		{
			[Token(Token = "0x200064F")]
			public struct Limits
			{
				[Token(Token = "0x40024F6")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
				public float minSwing;

				[Token(Token = "0x40024F7")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
				public float maxSwing;

				[Token(Token = "0x40024F8")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
				public float swing2;

				[Token(Token = "0x40024F9")]
				[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
				public float twist;

				[Token(Token = "0x60023E0")]
				[Address(RVA = "0x192BAB4", Offset = "0x192BAB4", VA = "0x192BAB4")]
				public Limits(float minSwing, float maxSwing, float swing2, float twist)
				{
				}
			}

			[Token(Token = "0x4002046")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Rigidbody rigidbody;

			[Token(Token = "0x4002047")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public Rigidbody connectedBody;

			[Token(Token = "0x4002048")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Transform child;

			[Token(Token = "0x4002049")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public Vector3 worldSwingAxis;

			[Token(Token = "0x400204A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Limits limits;

			[Token(Token = "0x400204B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public JointType type;

			[Token(Token = "0x6001BBC")]
			[Address(RVA = "0x19E144C", Offset = "0x19E144C", VA = "0x19E144C")]
			public CreateJointParams(Rigidbody rigidbody, Rigidbody connectedBody, Transform child, Vector3 worldSwingAxis, Limits limits, JointType type)
			{
			}
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xDCC4D4", Offset = "0xDCC4D4", VA = "0xDCC4D4")]
		public static void ClearAll(Transform root)
		{
		}

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xDCC6E8", Offset = "0xDCC6E8", VA = "0xDCC6E8")]
		protected static void ClearTransform(Transform transform)
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xDCC93C", Offset = "0xDCC93C", VA = "0xDCC93C")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width)
		{
		}

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xDCCD24", Offset = "0xDCCD24", VA = "0xDCCD24")]
		protected static void CreateCollider(Transform t, Vector3 startPoint, Vector3 endPoint, ColliderType colliderType, float lengthOverlap, float width, float proportionAspect, Vector3 widthDirection)
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xDCCC38", Offset = "0xDCCC38", VA = "0xDCCC38")]
		protected static float GetScaleF(Transform t)
		{
			return default(float);
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xDCD048", Offset = "0xDCD048", VA = "0xDCD048")]
		protected static Vector3 Abs(Vector3 v)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xDCD058", Offset = "0xDCD058", VA = "0xDCD058")]
		protected static void Vector3Abs(Vector3 v)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xDCD074", Offset = "0xDCD074", VA = "0xDCD074")]
		protected static Vector3 DirectionIntToVector3(int dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xDCD098", Offset = "0xDCD098", VA = "0xDCD098")]
		protected static Vector3 DirectionToVector3(Direction dir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xDCCC68", Offset = "0xDCCC68", VA = "0xDCCC68")]
		protected static int DirectionVector3ToInt(Vector3 dir)
		{
			return default(int);
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xDCD0BC", Offset = "0xDCD0BC", VA = "0xDCD0BC")]
		protected static Vector3 GetLocalOrthoDirection(Transform transform, Vector3 worldDir)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xDCD25C", Offset = "0xDCD25C", VA = "0xDCD25C")]
		protected static Rigidbody GetConnectedBody(Transform bone, Transform[] bones)
		{
			return null;
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xDCD420", Offset = "0xDCD420", VA = "0xDCD420")]
		protected static void CreateJoint(CreateJointParams p)
		{
		}

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xDCD9AC", Offset = "0xDCD9AC", VA = "0xDCD9AC")]
		private static SoftJointLimit ToSoftJointLimit(float limit)
		{
			return default(SoftJointLimit);
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xDCD9E0", Offset = "0xDCD9E0", VA = "0xDCD9E0")]
		protected RagdollCreator()
		{
		}
	}
	[Token(Token = "0x200012B")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x847DF4", Offset = "0x847DF4")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x847DF4", Offset = "0x847DF4")]
	public class RagdollEditor : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200043D")]
		public enum Mode
		{
			[Token(Token = "0x400204D")]
			Colliders,
			[Token(Token = "0x400204E")]
			Joints
		}

		[Token(Token = "0x400074A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody selectedRigidbody;

		[Token(Token = "0x400074B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Collider selectedCollider;

		[Token(Token = "0x400074C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool symmetry;

		[Token(Token = "0x400074D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[HideInInspector]
		public Mode mode;

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xDCD9E8", Offset = "0xDCD9E8", VA = "0xDCD9E8")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x856FD8", Offset = "0x856FD8")]
		private void OpenUserManual()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xDCDA30", Offset = "0xDCDA30", VA = "0xDCDA30")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x857010", Offset = "0x857010")]
		private void OpenScriptReference()
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xDCDA78", Offset = "0xDCDA78", VA = "0xDCDA78")]
		[AttributeAttribute(Name = "ContextMenu", RVA = "0x857048", Offset = "0x857048")]
		private void OpenTutorial()
		{
		}

		[Token(Token = "0x6000927")]
		[Address(RVA = "0xDCDAC0", Offset = "0xDCDAC0", VA = "0xDCDAC0")]
		public RagdollEditor()
		{
		}
	}
}
namespace RootMotion.Demos
{
	[Token(Token = "0x200012C")]
	public class FKOffset : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200043E")]
		public class Offset
		{
			[Token(Token = "0x400204F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			[HideInInspector]
			[SerializeField]
			public string name;

			[Token(Token = "0x4002050")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public HumanBodyBones bone;

			[Token(Token = "0x4002051")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public Vector3 rotationOffset;

			[Token(Token = "0x4002052")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Transform t;

			[Token(Token = "0x6001BBD")]
			[Address(RVA = "0x19B0700", Offset = "0x19B0700", VA = "0x19B0700")]
			public void Apply(Animator animator)
			{
			}

			[Token(Token = "0x6001BBE")]
			[Address(RVA = "0x19B0874", Offset = "0x19B0874", VA = "0x19B0874")]
			public Offset()
			{
			}
		}

		[Token(Token = "0x400074E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Offset[] offsets;

		[Token(Token = "0x400074F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x6000928")]
		[Address(RVA = "0xB9DEE0", Offset = "0xB9DEE0", VA = "0xB9DEE0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000929")]
		[Address(RVA = "0xB9DF44", Offset = "0xB9DF44", VA = "0xB9DF44")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xB9DFC0", Offset = "0xB9DFC0", VA = "0xB9DFC0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xB9E0A4", Offset = "0xB9E0A4", VA = "0xB9E0A4")]
		public FKOffset()
		{
		}
	}
	[Token(Token = "0x200012D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x847E54", Offset = "0x847E54")]
	public class AnimatorIKDemo : MonoBehaviour
	{
		[Token(Token = "0x4000750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform leftHandIKTarget;

		[Token(Token = "0x4000751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x600092C")]
		[Address(RVA = "0x119258C", Offset = "0x119258C", VA = "0x119258C")]
		private void Start()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0x11925F0", Offset = "0x11925F0", VA = "0x11925F0")]
		private void OnAnimatorIK(int layer)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0x119264C", Offset = "0x119264C", VA = "0x119264C")]
		public AnimatorIKDemo()
		{
		}
	}
	[Token(Token = "0x200012E")]
	public class BallShooter : MonoBehaviour
	{
		[Token(Token = "0x4000752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode keyCode;

		[Token(Token = "0x4000753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject ball;

		[Token(Token = "0x4000754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 spawnOffset;

		[Token(Token = "0x4000755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 force;

		[Token(Token = "0x4000756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float mass;

		[Token(Token = "0x600092F")]
		[Address(RVA = "0x119D330", Offset = "0x119D330", VA = "0x119D330")]
		private void Update()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0x119D558", Offset = "0x119D558", VA = "0x119D558")]
		public BallShooter()
		{
		}
	}
	[Token(Token = "0x200012F")]
	public class BoardController : MonoBehaviour
	{
		[Token(Token = "0x4000757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int groundLayer;

		[Token(Token = "0x4000758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform rotationTarget;

		[Token(Token = "0x4000759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float torque;

		[Token(Token = "0x400075A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float skidDrag;

		[Token(Token = "0x400075B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float turnSensitivity;

		[Token(Token = "0x400075C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Rigidbody r;

		[Token(Token = "0x400075D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool isGrounded;

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xF4628C", Offset = "0xF4628C", VA = "0xF4628C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xF462F0", Offset = "0xF462F0", VA = "0xF462F0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xF46450", Offset = "0xF46450", VA = "0xF46450")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xF46690", Offset = "0xF46690", VA = "0xF46690")]
		private void OnCollisionEnter(Collision c)
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xF466EC", Offset = "0xF466EC", VA = "0xF466EC")]
		private void OnCollisionStay(Collision c)
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xF46748", Offset = "0xF46748", VA = "0xF46748")]
		private void OnCollisionExit(Collision c)
		{
		}

		[Token(Token = "0x6000937")]
		[Address(RVA = "0xF467A0", Offset = "0xF467A0", VA = "0xF467A0")]
		public BoardController()
		{
		}
	}
	[Token(Token = "0x2000130")]
	public class CharacterAnimationMeleeDemo : CharacterAnimationThirdPerson
	{
		[Token(Token = "0x170000CF")]
		private CharacterMeleeDemo melee
		{
			[Token(Token = "0x6000938")]
			[Address(RVA = "0xDC0ED8", Offset = "0xDC0ED8", VA = "0xDC0ED8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000939")]
		[Address(RVA = "0xDC0F58", Offset = "0xDC0F58", VA = "0xDC0F58", Slot = "9")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600093A")]
		[Address(RVA = "0xDC1464", Offset = "0xDC1464", VA = "0xDC1464")]
		public CharacterAnimationMeleeDemo()
		{
		}
	}
	[Token(Token = "0x2000131")]
	public class CharacterMeleeDemo : CharacterPuppet
	{
		[Serializable]
		[Token(Token = "0x200043F")]
		public class Action
		{
			[Serializable]
			[Token(Token = "0x2000650")]
			public class Anim
			{
				[Token(Token = "0x40024FA")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
				public string stateName;

				[Token(Token = "0x40024FB")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
				public int layer;

				[Token(Token = "0x40024FC")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
				public float transitionDuration;

				[Token(Token = "0x40024FD")]
				[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
				public float fixedTime;

				[Token(Token = "0x60023E1")]
				[Address(RVA = "0x192B8C8", Offset = "0x192B8C8", VA = "0x192B8C8")]
				public Anim()
				{
				}
			}

			[Token(Token = "0x4002053")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string name;

			[Token(Token = "0x4002054")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public int inputActionIndex;

			[Token(Token = "0x4002055")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float duration;

			[Token(Token = "0x4002056")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float minFrequency;

			[Token(Token = "0x4002057")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Anim anim;

			[Token(Token = "0x4002058")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int[] requiredPropTypes;

			[Token(Token = "0x4002059")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public Booster[] boosters;

			[Token(Token = "0x6001BBF")]
			[Address(RVA = "0x19ACF70", Offset = "0x19ACF70", VA = "0x19ACF70")]
			public Action()
			{
			}
		}

		[Token(Token = "0x400075E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x850814", Offset = "0x850814")]
		public Action[] actions;

		[Token(Token = "0x400075F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		[HideInInspector]
		public int currentActionIndex;

		[Token(Token = "0x4000760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		[HideInInspector]
		public float lastActionTime;

		[Token(Token = "0x4000761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float lastActionMoveMag;

		[Token(Token = "0x170000D0")]
		public Action currentAction
		{
			[Token(Token = "0x600093C")]
			[Address(RVA = "0xDC1418", Offset = "0xDC1418", VA = "0xDC1418")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600093B")]
		[Address(RVA = "0xDC43D4", Offset = "0xDC43D4", VA = "0xDC43D4", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600093D")]
		[Address(RVA = "0xDC4460", Offset = "0xDC4460", VA = "0xDC4460", Slot = "7")]
		protected override void Update()
		{
		}

		[Token(Token = "0x600093E")]
		[Address(RVA = "0xDC4684", Offset = "0xDC4684", VA = "0xDC4684")]
		private bool StartAction(Action action)
		{
			return default(bool);
		}

		[Token(Token = "0x600093F")]
		[Address(RVA = "0xDC48A4", Offset = "0xDC48A4", VA = "0xDC48A4")]
		public CharacterMeleeDemo()
		{
		}
	}
	[Token(Token = "0x2000132")]
	public class CharacterPuppet : CharacterThirdPerson
	{
		[Token(Token = "0x4000762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85086C", Offset = "0x85086C")]
		public PropMuscle propMuscle;

		[Token(Token = "0x4000763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8508A4", Offset = "0x8508A4")]
		private BehaviourPuppet <puppet>k__BackingField;

		[Token(Token = "0x170000D1")]
		public BehaviourPuppet puppet
		{
			[Token(Token = "0x6000940")]
			[Address(RVA = "0xDC48B4", Offset = "0xDC48B4", VA = "0xDC48B4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x857080", Offset = "0x857080")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000941")]
			[Address(RVA = "0xDC48BC", Offset = "0xDC48BC", VA = "0xDC48BC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x857090", Offset = "0x857090")]
			private set
			{
			}
		}

		[Token(Token = "0x6000942")]
		[Address(RVA = "0xDC43E0", Offset = "0xDC43E0", VA = "0xDC43E0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000943")]
		[Address(RVA = "0xDC4A34", Offset = "0xDC4A34", VA = "0xDC4A34", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x6000944")]
		[Address(RVA = "0xDC4B00", Offset = "0xDC4B00", VA = "0xDC4B00", Slot = "9")]
		protected override void Rotate()
		{
		}

		[Token(Token = "0x6000945")]
		[Address(RVA = "0xDC4FFC", Offset = "0xDC4FFC", VA = "0xDC4FFC", Slot = "10")]
		protected override bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x6000946")]
		[Address(RVA = "0xDC48B0", Offset = "0xDC48B0", VA = "0xDC48B0")]
		public CharacterPuppet()
		{
		}
	}
	[Token(Token = "0x2000133")]
	public class CreatePuppetInRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8508B4", Offset = "0x8508B4")]
		public Transform ragdollPrefab;

		[Token(Token = "0x4000765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8508EC", Offset = "0x8508EC")]
		public string instanceName;

		[Token(Token = "0x4000766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850924", Offset = "0x850924")]
		public int characterControllerLayer;

		[Token(Token = "0x4000767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85095C", Offset = "0x85095C")]
		public int ragdollLayer;

		[Token(Token = "0x6000947")]
		[Address(RVA = "0xC4F7FC", Offset = "0xC4F7FC", VA = "0xC4F7FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000948")]
		[Address(RVA = "0xC4F97C", Offset = "0xC4F97C", VA = "0xC4F97C")]
		public CreatePuppetInRuntime()
		{
		}
	}
	[Token(Token = "0x2000134")]
	public class CreateRagdollInRuntime : MonoBehaviour
	{
		[Token(Token = "0x4000768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850994", Offset = "0x850994")]
		public GameObject prefab;

		[Token(Token = "0x6000949")]
		[Address(RVA = "0xC4F9E0", Offset = "0xC4F9E0", VA = "0xC4F9E0")]
		private void Start()
		{
		}

		[Token(Token = "0x600094A")]
		[Address(RVA = "0xC4FB88", Offset = "0xC4FB88", VA = "0xC4FB88")]
		private void Update()
		{
		}

		[Token(Token = "0x600094B")]
		[Address(RVA = "0xC4FB8C", Offset = "0xC4FB8C", VA = "0xC4FB8C")]
		public CreateRagdollInRuntime()
		{
		}
	}
	[Token(Token = "0x2000135")]
	public class DeathBaker : MonoBehaviour
	{
		[Token(Token = "0x2000440")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849684", Offset = "0x849684")]
		private sealed class <Bake>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400205A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400205B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400205C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x17000233")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BC3")]
				[Address(RVA = "0x19ADF94", Offset = "0x19ADF94", VA = "0x19ADF94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000234")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BC5")]
				[Address(RVA = "0x19ADFDC", Offset = "0x19ADFDC", VA = "0x19ADFDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BC0")]
			[Address(RVA = "0x19ADE84", Offset = "0x19ADE84", VA = "0x19ADE84")]
			[DebuggerHidden]
			public <Bake>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001BC1")]
			[Address(RVA = "0x19ADEB0", Offset = "0x19ADEB0", VA = "0x19ADEB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BC2")]
			[Address(RVA = "0x19ADEB4", Offset = "0x19ADEB4", VA = "0x19ADEB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BC4")]
			[Address(RVA = "0x19ADF9C", Offset = "0x19ADF9C", VA = "0x19ADF9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000441")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849694", Offset = "0x849694")]
		private sealed class <FadeOutPinWeight>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400205D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400205E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400205F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x17000235")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BC9")]
				[Address(RVA = "0x19AE1E0", Offset = "0x19AE1E0", VA = "0x19AE1E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000236")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BCB")]
				[Address(RVA = "0x19AE228", Offset = "0x19AE228", VA = "0x19AE228", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BC6")]
			[Address(RVA = "0x19AE10C", Offset = "0x19AE10C", VA = "0x19AE10C")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001BC7")]
			[Address(RVA = "0x19AE138", Offset = "0x19AE138", VA = "0x19AE138", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BC8")]
			[Address(RVA = "0x19AE13C", Offset = "0x19AE13C", VA = "0x19AE13C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BCA")]
			[Address(RVA = "0x19AE1E8", Offset = "0x19AE1E8", VA = "0x19AE1E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000442")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8496A4", Offset = "0x8496A4")]
		private sealed class <FadeOutMuscleWeight>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002060")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002061")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002062")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public DeathBaker <>4__this;

			[Token(Token = "0x17000237")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BCF")]
				[Address(RVA = "0x19AE0BC", Offset = "0x19AE0BC", VA = "0x19AE0BC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000238")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BD1")]
				[Address(RVA = "0x19AE104", Offset = "0x19AE104", VA = "0x19AE104", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BCC")]
			[Address(RVA = "0x19ADFE4", Offset = "0x19ADFE4", VA = "0x19ADFE4")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001BCD")]
			[Address(RVA = "0x19AE010", Offset = "0x19AE010", VA = "0x19AE010", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BCE")]
			[Address(RVA = "0x19AE014", Offset = "0x19AE014", VA = "0x19AE014", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD0")]
			[Address(RVA = "0x19AE0C4", Offset = "0x19AE0C4", VA = "0x19AE0C4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8509CC", Offset = "0x8509CC")]
		public HumanoidBaker baker;

		[Token(Token = "0x400076A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850A04", Offset = "0x850A04")]
		public float bakeTime;

		[Token(Token = "0x400076B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850A3C", Offset = "0x850A3C")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400076C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850A74", Offset = "0x850A74")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x400076D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850AAC", Offset = "0x850AAC")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x400076E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850AE4", Offset = "0x850AE4")]
		public float deadMuscleWeight;

		[Token(Token = "0x400076F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4000770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 defaultPosition;

		[Token(Token = "0x4000771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Quaternion defaultRotation;

		[Token(Token = "0x4000772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool isDead;

		[Token(Token = "0x600094C")]
		[Address(RVA = "0xBFB6D0", Offset = "0xBFB6D0", VA = "0xBFB6D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600094D")]
		[Address(RVA = "0xBFB77C", Offset = "0xBFB77C", VA = "0xBFB77C")]
		private void Update()
		{
		}

		[Token(Token = "0x600094E")]
		[Address(RVA = "0xBFBA9C", Offset = "0xBFBA9C", VA = "0xBFBA9C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8570A0", Offset = "0x8570A0")]
		private IEnumerator Bake()
		{
			return null;
		}

		[Token(Token = "0x600094F")]
		[Address(RVA = "0xBFB99C", Offset = "0xBFB99C", VA = "0xBFB99C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857108", Offset = "0x857108")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xBFBA1C", Offset = "0xBFBA1C", VA = "0xBFBA1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857170", Offset = "0x857170")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xBFBB1C", Offset = "0xBFBB1C", VA = "0xBFBB1C")]
		public DeathBaker()
		{
		}
	}
	[Token(Token = "0x2000136")]
	public class Destructor : MonoBehaviour
	{
		[Token(Token = "0x2000443")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8496B4", Offset = "0x8496B4")]
		private sealed class <Destruct>d__2 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002063")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002064")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002065")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Destructor <>4__this;

			[Token(Token = "0x17000239")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BD5")]
				[Address(RVA = "0x19AE9F4", Offset = "0x19AE9F4", VA = "0x19AE9F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BD7")]
				[Address(RVA = "0x19AEA3C", Offset = "0x19AEA3C", VA = "0x19AEA3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BD2")]
			[Address(RVA = "0x19AE8C4", Offset = "0x19AE8C4", VA = "0x19AE8C4")]
			[DebuggerHidden]
			public <Destruct>d__2(int <>1__state)
			{
			}

			[Token(Token = "0x6001BD3")]
			[Address(RVA = "0x19AE8F0", Offset = "0x19AE8F0", VA = "0x19AE8F0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BD4")]
			[Address(RVA = "0x19AE8F4", Offset = "0x19AE8F4", VA = "0x19AE8F4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BD6")]
			[Address(RVA = "0x19AE9FC", Offset = "0x19AE9FC", VA = "0x19AE9FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delay;

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xBFEAA0", Offset = "0xBFEAA0", VA = "0xBFEAA0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xBFEACC", Offset = "0xBFEACC", VA = "0xBFEACC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8571D8", Offset = "0x8571D8")]
		private IEnumerator Destruct()
		{
			return null;
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xBFEB4C", Offset = "0xBFEB4C", VA = "0xBFEB4C")]
		public Destructor()
		{
		}
	}
	[Token(Token = "0x2000137")]
	public class Dying : MonoBehaviour
	{
		[Token(Token = "0x2000444")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8496C4", Offset = "0x8496C4")]
		private sealed class <FadeOutPinWeight>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002066")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002067")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002068")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dying <>4__this;

			[Token(Token = "0x1700023B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BDB")]
				[Address(RVA = "0x19AF614", Offset = "0x19AF614", VA = "0x19AF614", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BDD")]
				[Address(RVA = "0x19AF65C", Offset = "0x19AF65C", VA = "0x19AF65C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BD8")]
			[Address(RVA = "0x19AF540", Offset = "0x19AF540", VA = "0x19AF540")]
			[DebuggerHidden]
			public <FadeOutPinWeight>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001BD9")]
			[Address(RVA = "0x19AF56C", Offset = "0x19AF56C", VA = "0x19AF56C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BDA")]
			[Address(RVA = "0x19AF570", Offset = "0x19AF570", VA = "0x19AF570", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BDC")]
			[Address(RVA = "0x19AF61C", Offset = "0x19AF61C", VA = "0x19AF61C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000445")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8496D4", Offset = "0x8496D4")]
		private sealed class <FadeOutMuscleWeight>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002069")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400206A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400206B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dying <>4__this;

			[Token(Token = "0x1700023D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE1")]
				[Address(RVA = "0x19AF4F0", Offset = "0x19AF4F0", VA = "0x19AF4F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700023E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE3")]
				[Address(RVA = "0x19AF538", Offset = "0x19AF538", VA = "0x19AF538", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BDE")]
			[Address(RVA = "0x19AF418", Offset = "0x19AF418", VA = "0x19AF418")]
			[DebuggerHidden]
			public <FadeOutMuscleWeight>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001BDF")]
			[Address(RVA = "0x19AF444", Offset = "0x19AF444", VA = "0x19AF444", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE0")]
			[Address(RVA = "0x19AF448", Offset = "0x19AF448", VA = "0x19AF448", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE2")]
			[Address(RVA = "0x19AF4F8", Offset = "0x19AF4F8", VA = "0x19AF4F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850B1C", Offset = "0x850B1C")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850B54", Offset = "0x850B54")]
		public float fadeOutPinWeightSpeed;

		[Token(Token = "0x4000776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850B8C", Offset = "0x850B8C")]
		public float fadeOutMuscleWeightSpeed;

		[Token(Token = "0x4000777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850BC4", Offset = "0x850BC4")]
		public float deadMuscleWeight;

		[Token(Token = "0x4000778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Animator animator;

		[Token(Token = "0x4000779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 defaultPosition;

		[Token(Token = "0x400077A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private Quaternion defaultRotation;

		[Token(Token = "0x400077B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private bool isDead;

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xC01678", Offset = "0xC01678", VA = "0xC01678")]
		private void Start()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xC01724", Offset = "0xC01724", VA = "0xC01724")]
		private void Update()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xC01914", Offset = "0xC01914", VA = "0xC01914")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857240", Offset = "0x857240")]
		private IEnumerator FadeOutPinWeight()
		{
			return null;
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xC01994", Offset = "0xC01994", VA = "0xC01994")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8572A8", Offset = "0x8572A8")]
		private IEnumerator FadeOutMuscleWeight()
		{
			return null;
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xC01A14", Offset = "0xC01A14", VA = "0xC01A14")]
		public Dying()
		{
		}
	}
	[Token(Token = "0x2000138")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x847EBC", Offset = "0x847EBC")]
	public class FXCollisionBlood : MonoBehaviour
	{
		[Token(Token = "0x400077C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x400077D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minCollisionImpulse;

		[Token(Token = "0x400077E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int emission;

		[Token(Token = "0x400077F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float emissionImpulseAdd;

		[Token(Token = "0x4000780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int maxEmission;

		[Token(Token = "0x4000781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ParticleSystem particles;

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xB9E0AC", Offset = "0xB9E0AC", VA = "0xB9E0AC")]
		private void Start()
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xB9E1B0", Offset = "0xB9E1B0", VA = "0xB9E1B0")]
		private void OnCollisionImpulse(MuscleCollision m, float impulse)
		{
		}

		[Token(Token = "0x600095C")]
		[Address(RVA = "0xB9E404", Offset = "0xB9E404", VA = "0xB9E404")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600095D")]
		[Address(RVA = "0xB9E52C", Offset = "0xB9E52C", VA = "0xB9E52C")]
		public FXCollisionBlood()
		{
		}
	}
	[Token(Token = "0x2000139")]
	public class Grab : MonoBehaviour
	{
		[Token(Token = "0x4000782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850BFC", Offset = "0x850BFC")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x4000783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850C34", Offset = "0x850C34")]
		public UserControlMelee userControl;

		[Token(Token = "0x4000784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850C6C", Offset = "0x850C6C")]
		public int grabLayer;

		[Token(Token = "0x4000785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool grabbed;

		[Token(Token = "0x4000786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody r;

		[Token(Token = "0x4000787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Collider c;

		[Token(Token = "0x4000788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private BehaviourPuppet otherPuppet;

		[Token(Token = "0x4000789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Collider otherCollider;

		[Token(Token = "0x400078A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ConfigurableJoint joint;

		[Token(Token = "0x400078B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float nextGrabTime;

		[Token(Token = "0x400078C")]
		private const float massMlp = 5f;

		[Token(Token = "0x400078D")]
		private const int solverIterationMlp = 10;

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xBA2920", Offset = "0xBA2920", VA = "0xBA2920")]
		private void Start()
		{
		}

		[Token(Token = "0x600095F")]
		[Address(RVA = "0xBA29B4", Offset = "0xBA29B4", VA = "0xBA29B4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xBA2DAC", Offset = "0xBA2DAC", VA = "0xBA2DAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xBA2EF0", Offset = "0xBA2EF0", VA = "0xBA2EF0")]
		public Grab()
		{
		}
	}
	[Token(Token = "0x200013A")]
	public class Killing : MonoBehaviour
	{
		[Token(Token = "0x400078E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850CA4", Offset = "0x850CA4")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x400078F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850CDC", Offset = "0x850CDC")]
		public PuppetMaster.StateSettings stateSettings;

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xCE0D98", Offset = "0xCE0D98", VA = "0xCE0D98")]
		private void Update()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xCE0E68", Offset = "0xCE0E68", VA = "0xCE0E68")]
		public Killing()
		{
		}
	}
	[Token(Token = "0x200013B")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x847F24", Offset = "0x847F24")]
	public class LayerSetup : MonoBehaviour
	{
		[Token(Token = "0x4000790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x850D14", Offset = "0x850D14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850D14", Offset = "0x850D14")]
		public Transform characterController;

		[Token(Token = "0x4000791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x850D74", Offset = "0x850D74")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850D74", Offset = "0x850D74")]
		public int characterControllerLayer;

		[Token(Token = "0x4000792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850DD4", Offset = "0x850DD4")]
		public int ragdollLayer;

		[Token(Token = "0x4000793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850E0C", Offset = "0x850E0C")]
		public LayerMask ignoreCollisionWithCharacterController;

		[Token(Token = "0x4000794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850E44", Offset = "0x850E44")]
		public LayerMask ignoreCollisionWithRagdoll;

		[Token(Token = "0x4000795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private PuppetMaster puppetMaster;

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xCE3134", Offset = "0xCE3134", VA = "0xCE3134")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xCE3344", Offset = "0xCE3344", VA = "0xCE3344")]
		public LayerSetup()
		{
		}
	}
	[Token(Token = "0x200013C")]
	public class NavMeshPuppet : MonoBehaviour
	{
		[Token(Token = "0x4000796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x4000797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NavMeshAgent agent;

		[Token(Token = "0x4000798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4000799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Animator animator;

		[Token(Token = "0x6000966")]
		[Address(RVA = "0x156557C", Offset = "0x156557C", VA = "0x156557C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0x1565674", Offset = "0x1565674", VA = "0x1565674")]
		public NavMeshPuppet()
		{
		}
	}
	[Token(Token = "0x200013D")]
	public class Planet : MonoBehaviour
	{
		[Token(Token = "0x400079A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mass;

		[Token(Token = "0x6000968")]
		[Address(RVA = "0x1B69E04", Offset = "0x1B69E04", VA = "0x1B69E04")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0x1B69F08", Offset = "0x1B69F08", VA = "0x1B69F08")]
		public Planet()
		{
		}
	}
	[Token(Token = "0x200013E")]
	public class PlanetaryGravity : MonoBehaviour
	{
		[Token(Token = "0x400079B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Planet planet;

		[Token(Token = "0x400079C")]
		private const float G = 6.672E-11f;

		[Token(Token = "0x400079D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Rigidbody _r;

		[Token(Token = "0x170000D2")]
		private Rigidbody r
		{
			[Token(Token = "0x600096A")]
			[Address(RVA = "0x1B69F18", Offset = "0x1B69F18", VA = "0x1B69F18")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0x1B69FCC", Offset = "0x1B69FCC", VA = "0x1B69FCC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600096C")]
		[Address(RVA = "0x1B6A0B4", Offset = "0x1B6A0B4", VA = "0x1B6A0B4")]
		private void ApplyGravity(Rigidbody r)
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0x1B6A1D4", Offset = "0x1B6A1D4", VA = "0x1B6A1D4")]
		public PlanetaryGravity()
		{
		}
	}
	[Token(Token = "0x200013F")]
	public class PropDemo : MonoBehaviour
	{
		[Token(Token = "0x400079E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850E7C", Offset = "0x850E7C")]
		public PuppetMasterProp prop;

		[Token(Token = "0x400079F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850EB4", Offset = "0x850EB4")]
		public PropMuscle propMuscleLeft;

		[Token(Token = "0x40007A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850EEC", Offset = "0x850EEC")]
		public PropMuscle propMuscleRight;

		[Token(Token = "0x40007A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850F24", Offset = "0x850F24")]
		public bool pickUpOnAwake;

		[Token(Token = "0x40007A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool right;

		[Token(Token = "0x170000D3")]
		private PropMuscle connectTo
		{
			[Token(Token = "0x6000970")]
			[Address(RVA = "0x1B6EB1C", Offset = "0x1B6EB1C", VA = "0x1B6EB1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0x1B6EAD0", Offset = "0x1B6EAD0", VA = "0x1B6EAD0")]
		private void Start()
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0x1B6EB38", Offset = "0x1B6EB38", VA = "0x1B6EB38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000971")]
		[Address(RVA = "0x1B6EC10", Offset = "0x1B6EC10", VA = "0x1B6EC10")]
		public PropDemo()
		{
		}
	}
	[Token(Token = "0x2000140")]
	public class PropMelee : Prop
	{
		[Token(Token = "0x2000446")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8496E4", Offset = "0x8496E4")]
		private sealed class <Action>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400206C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400206D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400206E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PropMelee <>4__this;

			[Token(Token = "0x400206F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x4002070")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <additionalPinMuscleIndex>5__2;

			[Token(Token = "0x1700023F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BE7")]
				[Address(RVA = "0x19DFE60", Offset = "0x19DFE60", VA = "0x19DFE60", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000240")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BE9")]
				[Address(RVA = "0x19DFEA8", Offset = "0x19DFEA8", VA = "0x19DFEA8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BE4")]
			[Address(RVA = "0x19DFBF8", Offset = "0x19DFBF8", VA = "0x19DFBF8")]
			[DebuggerHidden]
			public <Action>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001BE5")]
			[Address(RVA = "0x19DFC24", Offset = "0x19DFC24", VA = "0x19DFC24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BE6")]
			[Address(RVA = "0x19DFC28", Offset = "0x19DFC28", VA = "0x19DFC28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BE8")]
			[Address(RVA = "0x19DFE68", Offset = "0x19DFE68", VA = "0x19DFE68", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x850F5C", Offset = "0x850F5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850F5C", Offset = "0x850F5C")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x40007A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850FBC", Offset = "0x850FBC")]
		public BoxCollider boxCollider;

		[Token(Token = "0x40007A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x850FF4", Offset = "0x850FF4")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x40007A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85102C", Offset = "0x85102C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85102C", Offset = "0x85102C")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x40007A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851080", Offset = "0x851080")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x851080", Offset = "0x851080")]
		public float actionMassMlp;

		[Token(Token = "0x40007A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8510D8", Offset = "0x8510D8")]
		public Vector3 COMOffset;

		[Token(Token = "0x40007A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float defaultColliderRadius;

		[Token(Token = "0x40007AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float defaultMass;

		[Token(Token = "0x40007AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private float defaultAddMass;

		[Token(Token = "0x40007AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Rigidbody r;

		[Token(Token = "0x6000972")]
		[Address(RVA = "0x1B6EC20", Offset = "0x1B6EC20", VA = "0x1B6EC20")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0x1B6EC68", Offset = "0x1B6EC68", VA = "0x1B6EC68")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857310", Offset = "0x857310")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0x1B6ECF8", Offset = "0x1B6ECF8", VA = "0x1B6ECF8", Slot = "6")]
		protected override void OnStart()
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0x1B6EDC0", Offset = "0x1B6EDC0", VA = "0x1B6EDC0", Slot = "4")]
		protected override void OnPickUp(PropRoot propRoot)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0x1B6EE38", Offset = "0x1B6EE38", VA = "0x1B6EE38", Slot = "5")]
		protected override void OnDrop()
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0x1B6EEB0", Offset = "0x1B6EEB0", VA = "0x1B6EEB0")]
		public PropMelee()
		{
		}
	}
	[Token(Token = "0x2000141")]
	public class PropPickUpTrigger : MonoBehaviour
	{
		[Token(Token = "0x40007AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMasterProp prop;

		[Token(Token = "0x40007AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask characterLayers;

		[Token(Token = "0x40007AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private CharacterPuppet characterPuppet;

		[Token(Token = "0x6000978")]
		[Address(RVA = "0x1B703CC", Offset = "0x1B703CC", VA = "0x1B703CC")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000979")]
		[Address(RVA = "0x1B70578", Offset = "0x1B70578", VA = "0x1B70578")]
		public PropPickUpTrigger()
		{
		}
	}
	[Token(Token = "0x2000142")]
	public class PuppetBoard : MonoBehaviour
	{
		[Token(Token = "0x40007B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851110", Offset = "0x851110")]
		public Rigidbody target;

		[Token(Token = "0x40007B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851148", Offset = "0x851148")]
		public Transform bodyTargetPivot;

		[Token(Token = "0x40007B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851180", Offset = "0x851180")]
		public Transform bodyTarget;

		[Token(Token = "0x40007B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Rigidbody r;

		[Token(Token = "0x600097A")]
		[Address(RVA = "0x1B72490", Offset = "0x1B72490", VA = "0x1B72490")]
		private void Start()
		{
		}

		[Token(Token = "0x600097B")]
		[Address(RVA = "0x1B72548", Offset = "0x1B72548", VA = "0x1B72548")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600097C")]
		[Address(RVA = "0x1B726C8", Offset = "0x1B726C8", VA = "0x1B726C8")]
		public PuppetBoard()
		{
		}
	}
	[Token(Token = "0x2000143")]
	public class PuppetMasterPropMelee : PuppetMasterProp
	{
		[Token(Token = "0x2000447")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8496F4", Offset = "0x8496F4")]
		private sealed class <Action>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002071")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002072")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002073")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PuppetMasterPropMelee <>4__this;

			[Token(Token = "0x4002074")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x17000241")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BED")]
				[Address(RVA = "0x19E1288", Offset = "0x19E1288", VA = "0x19E1288", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000242")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BEF")]
				[Address(RVA = "0x19E12D0", Offset = "0x19E12D0", VA = "0x19E12D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BEA")]
			[Address(RVA = "0x19E113C", Offset = "0x19E113C", VA = "0x19E113C")]
			[DebuggerHidden]
			public <Action>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001BEB")]
			[Address(RVA = "0x19E1168", Offset = "0x19E1168", VA = "0x19E1168", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BEC")]
			[Address(RVA = "0x19E116C", Offset = "0x19E116C", VA = "0x19E116C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BEE")]
			[Address(RVA = "0x19E1290", Offset = "0x19E1290", VA = "0x19E1290", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40007B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "LargeHeader", RVA = "0x8511B8", Offset = "0x8511B8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8511B8", Offset = "0x8511B8")]
		public CapsuleCollider capsuleCollider;

		[Token(Token = "0x40007B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851218", Offset = "0x851218")]
		public BoxCollider boxCollider;

		[Token(Token = "0x40007B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851250", Offset = "0x851250")]
		public float actionColliderRadiusMlp;

		[Token(Token = "0x40007B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851288", Offset = "0x851288")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x851288", Offset = "0x851288")]
		public float actionAdditionalPinWeight;

		[Token(Token = "0x40007B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8512DC", Offset = "0x8512DC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8512DC", Offset = "0x8512DC")]
		public float actionMassMlp;

		[Token(Token = "0x40007B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851330", Offset = "0x851330")]
		public Vector3 COMOffset;

		[Token(Token = "0x40007BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float defaultColliderRadius;

		[Token(Token = "0x40007BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float defaultMass;

		[Token(Token = "0x40007BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float defaultAdditionalPinWeight;

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xDC8F94", Offset = "0xDC8F94", VA = "0xDC8F94")]
		public void StartAction(float duration)
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xDC8FDC", Offset = "0xDC8FDC", VA = "0xDC8FDC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857378", Offset = "0x857378")]
		public IEnumerator Action(float duration)
		{
			return null;
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xDC906C", Offset = "0xDC906C", VA = "0xDC906C", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xDC90D4", Offset = "0xDC90D4", VA = "0xDC90D4", Slot = "4")]
		protected override void OnPickUp(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000981")]
		[Address(RVA = "0xDC917C", Offset = "0xDC917C", VA = "0xDC917C", Slot = "5")]
		protected override void OnDrop(PuppetMaster puppetMaster, int propMuscleIndex)
		{
		}

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xDC91E0", Offset = "0xDC91E0", VA = "0xDC91E0")]
		public PuppetMasterPropMelee()
		{
		}
	}
	[Token(Token = "0x2000144")]
	public class PuppetScaling : MonoBehaviour
	{
		[Token(Token = "0x40007BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40007BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x851368", Offset = "0x851368")]
		public float masterScale;

		[Token(Token = "0x40007BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int muscleIndex;

		[Token(Token = "0x40007C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x851384", Offset = "0x851384")]
		public float muscleScale;

		[Token(Token = "0x40007C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float defaultMuscleSpring;

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xDCA6F4", Offset = "0xDCA6F4", VA = "0xDCA6F4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xDCA734", Offset = "0xDCA734", VA = "0xDCA734")]
		private void Update()
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xDCAA48", Offset = "0xDCAA48", VA = "0xDCAA48")]
		public PuppetScaling()
		{
		}
	}
	[Token(Token = "0x2000145")]
	public class RaycastShooter : MonoBehaviour
	{
		[Token(Token = "0x40007C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LayerMask layers;

		[Token(Token = "0x40007C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float unpin;

		[Token(Token = "0x40007C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float force;

		[Token(Token = "0x40007C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ParticleSystem blood;

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xDCF7EC", Offset = "0xDCF7EC", VA = "0xDCF7EC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000987")]
		[Address(RVA = "0xDCFA44", Offset = "0xDCFA44", VA = "0xDCFA44")]
		public RaycastShooter()
		{
		}
	}
	[Token(Token = "0x2000146")]
	public class Respawning : MonoBehaviour
	{
		[Token(Token = "0x40007C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8513A0", Offset = "0x8513A0")]
		public Transform pool;

		[Token(Token = "0x40007C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8513D8", Offset = "0x8513D8")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x40007C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851410", Offset = "0x851410")]
		public string idleAnimation;

		[Token(Token = "0x40007C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform puppetRoot;

		[Token(Token = "0x170000D4")]
		private bool isPooled
		{
			[Token(Token = "0x6000988")]
			[Address(RVA = "0xDD71C8", Offset = "0xDD71C8", VA = "0xDD71C8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xDD725C", Offset = "0xDD725C", VA = "0xDD725C")]
		private void Start()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xDD72C4", Offset = "0xDD72C4", VA = "0xDD72C4")]
		private void Update()
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xDD73F8", Offset = "0xDD73F8", VA = "0xDD73F8")]
		private void Pool()
		{
		}

		[Token(Token = "0x600098C")]
		[Address(RVA = "0xDD7420", Offset = "0xDD7420", VA = "0xDD7420")]
		private void Respawn(Vector3 position, Quaternion rotation)
		{
		}

		[Token(Token = "0x600098D")]
		[Address(RVA = "0xDD7550", Offset = "0xDD7550", VA = "0xDD7550")]
		public Respawning()
		{
		}
	}
	[Token(Token = "0x2000147")]
	public class RotateShoulderToTarget : MonoBehaviour
	{
		[Token(Token = "0x40007CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform shoulder;

		[Token(Token = "0x40007CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 euler;

		[Token(Token = "0x600098E")]
		[Address(RVA = "0xDD7734", Offset = "0xDD7734", VA = "0xDD7734")]
		private void OnPuppetMasterRead()
		{
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xDD77CC", Offset = "0xDD77CC", VA = "0xDD77CC")]
		public RotateShoulderToTarget()
		{
		}
	}
	[Token(Token = "0x2000148")]
	public class SkeletonDisconnector : MonoBehaviour
	{
		[Token(Token = "0x40007CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BehaviourPuppet puppet;

		[Token(Token = "0x40007CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Skeleton skeleton;

		[Token(Token = "0x40007CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MuscleDisconnectMode disconnectMuscleMode;

		[Token(Token = "0x40007CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask layers;

		[Token(Token = "0x40007D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float unpin;

		[Token(Token = "0x40007D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x40007D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particles;

		[Token(Token = "0x40007D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public PropMuscle propMuscle;

		[Token(Token = "0x40007D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public PuppetMasterProp prop;

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xDDB0B8", Offset = "0xDDB0B8", VA = "0xDDB0B8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xDDB484", Offset = "0xDDB484", VA = "0xDDB484")]
		public SkeletonDisconnector()
		{
		}
	}
	[Token(Token = "0x2000149")]
	public class SkeletonShooter : MonoBehaviour
	{
		[Token(Token = "0x40007D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PuppetMaster puppetMaster;

		[Token(Token = "0x40007D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Skeleton skeleton;

		[Token(Token = "0x40007D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public MuscleRemoveMode removeMuscleMode;

		[Token(Token = "0x40007D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LayerMask layers;

		[Token(Token = "0x40007D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float unpin;

		[Token(Token = "0x40007DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float force;

		[Token(Token = "0x40007DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ParticleSystem particles;

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xDDB494", Offset = "0xDDB494", VA = "0xDDB494")]
		private void Update()
		{
		}

		[Token(Token = "0x6000993")]
		[Address(RVA = "0xDDB7D8", Offset = "0xDDB7D8", VA = "0xDDB7D8")]
		public SkeletonShooter()
		{
		}
	}
	[Token(Token = "0x200014A")]
	public class UserControlAIMelee : UserControlThirdPerson
	{
		[Token(Token = "0x40007DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public BehaviourPuppet targetPuppet;

		[Token(Token = "0x40007DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x40007DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x40007DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool isAttacking;

		[Token(Token = "0x40007E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float attackTimer;

		[Token(Token = "0x170000D5")]
		private Transform moveTarget
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0xC34084", Offset = "0xC34084", VA = "0xC34084")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xC340D8", Offset = "0xC340D8", VA = "0xC340D8", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xC34288", Offset = "0xC34288", VA = "0xC34288")]
		private bool CanAttack()
		{
			return default(bool);
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xC343A4", Offset = "0xC343A4", VA = "0xC343A4")]
		public UserControlAIMelee()
		{
		}
	}
	[Token(Token = "0x200014B")]
	public class UserControlMelee : UserControlThirdPerson
	{
		[Token(Token = "0x40007E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public KeyCode hitKey;

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xC343C0", Offset = "0xC343C0", VA = "0xC343C0", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xC34694", Offset = "0xC34694", VA = "0xC34694")]
		public UserControlMelee()
		{
		}
	}
	[Token(Token = "0x200014C")]
	public abstract class CharacterAnimationBase : MonoBehaviour
	{
		[Token(Token = "0x40007E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool smoothFollow;

		[Token(Token = "0x40007E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float smoothFollowSpeed;

		[Token(Token = "0x40007E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected bool animatePhysics;

		[Token(Token = "0x40007E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 lastPosition;

		[Token(Token = "0x40007E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 localPosition;

		[Token(Token = "0x40007E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Quaternion localRotation;

		[Token(Token = "0x40007E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion lastRotation;

		[Token(Token = "0x170000D6")]
		public virtual bool animationGrounded
		{
			[Token(Token = "0x600099B")]
			[Address(RVA = "0xDC0A80", Offset = "0xDC0A80", VA = "0xDC0A80", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xDC0A5C", Offset = "0xDC0A5C", VA = "0xDC0A5C", Slot = "4")]
		public virtual Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xDC0A88", Offset = "0xDC0A88", VA = "0xDC0A88")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xDC0AEC", Offset = "0xDC0AEC", VA = "0xDC0AEC", Slot = "6")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x600099E")]
		[Address(RVA = "0xDC0C8C", Offset = "0xDC0C8C", VA = "0xDC0C8C", Slot = "7")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xDC0EB0", Offset = "0xDC0EB0", VA = "0xDC0EB0", Slot = "8")]
		protected virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xDC0C9C", Offset = "0xDC0C9C", VA = "0xDC0C9C")]
		private void SmoothFollow()
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xDC0EC0", Offset = "0xDC0EC0", VA = "0xDC0EC0")]
		protected CharacterAnimationBase()
		{
		}
	}
	[Token(Token = "0x200014D")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x847F8C", Offset = "0x847F8C")]
	public class CharacterAnimationSimple : CharacterAnimationBase
	{
		[Token(Token = "0x40007E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x40007EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float pivotOffset;

		[Token(Token = "0x40007EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public AnimationCurve moveSpeed;

		[Token(Token = "0x40007EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xDC14AC", Offset = "0xDC14AC", VA = "0xDC14AC", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xDC1518", Offset = "0xDC1518", VA = "0xDC1518", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xDC15B4", Offset = "0xDC15B4", VA = "0xDC15B4")]
		private void Update()
		{
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xDC16CC", Offset = "0xDC16CC", VA = "0xDC16CC")]
		public CharacterAnimationSimple()
		{
		}
	}
	[Token(Token = "0x200014E")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x847FF4", Offset = "0x847FF4")]
	public class CharacterAnimationThirdPerson : CharacterAnimationBase
	{
		[Token(Token = "0x40007ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public CharacterThirdPerson characterController;

		[Token(Token = "0x40007EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float turnSensitivity;

		[Token(Token = "0x40007EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float turnSpeed;

		[Token(Token = "0x40007F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float runCycleLegOffset;

		[Token(Token = "0x40007F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x851478", Offset = "0x851478")]
		[SerializeField]
		private float animSpeedMultiplier;

		[Token(Token = "0x40007F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected Animator animator;

		[Token(Token = "0x40007F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 lastForward;

		[Token(Token = "0x40007F4")]
		private const string groundedDirectional = "Grounded Directional";

		[Token(Token = "0x40007F5")]
		private const string groundedStrafe = "Grounded Strafe";

		[Token(Token = "0x40007F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float deltaAngle;

		[Token(Token = "0x170000D7")]
		public override bool animationGrounded
		{
			[Token(Token = "0x60009A8")]
			[Address(RVA = "0xDC1798", Offset = "0xDC1798", VA = "0xDC1798", Slot = "5")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xDC16E4", Offset = "0xDC16E4", VA = "0xDC16E4", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xDC1778", Offset = "0xDC1778", VA = "0xDC1778", Slot = "4")]
		public override Vector3 GetPivotPoint()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xDC1050", Offset = "0xDC1050", VA = "0xDC1050", Slot = "9")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xDC1890", Offset = "0xDC1890", VA = "0xDC1890")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xDC1488", Offset = "0xDC1488", VA = "0xDC1488")]
		public CharacterAnimationThirdPerson()
		{
		}
	}
	[Token(Token = "0x200014F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x84805C", Offset = "0x84805C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x84805C", Offset = "0x84805C")]
	public abstract class CharacterBase : MonoBehaviour
	{
		[Token(Token = "0x40007F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8514BC", Offset = "0x8514BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8514BC", Offset = "0x8514BC")]
		public Transform gravityTarget;

		[Token(Token = "0x40007F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85151C", Offset = "0x85151C")]
		public float gravityMultiplier;

		[Token(Token = "0x40007F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float airborneThreshold;

		[Token(Token = "0x40007FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float slopeStartAngle;

		[Token(Token = "0x40007FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float slopeEndAngle;

		[Token(Token = "0x40007FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float spherecastRadius;

		[Token(Token = "0x40007FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public LayerMask groundLayers;

		[Token(Token = "0x40007FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PhysicMaterial zeroFrictionMaterial;

		[Token(Token = "0x40007FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private PhysicMaterial highFrictionMaterial;

		[Token(Token = "0x4000800")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected Rigidbody r;

		[Token(Token = "0x4000801")]
		protected const float half = 0.5f;

		[Token(Token = "0x4000802")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected float originalHeight;

		[Token(Token = "0x4000803")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		protected Vector3 originalCenter;

		[Token(Token = "0x4000804")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected CapsuleCollider capsule;

		[Token(Token = "0x60009AC")]
		public abstract void Move(Vector3 deltaPosition, Quaternion deltaRotation);

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xDC1998", Offset = "0xDC1998", VA = "0xDC1998")]
		protected Vector3 GetGravity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xDC1AD0", Offset = "0xDC1AD0", VA = "0xDC1AD0", Slot = "5")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60009AF")]
		[Address(RVA = "0xDC1CB8", Offset = "0xDC1CB8", VA = "0xDC1CB8", Slot = "6")]
		protected virtual RaycastHit GetSpherecastHit()
		{
			return default(RaycastHit);
		}

		[Token(Token = "0x60009B0")]
		[Address(RVA = "0xDC1E5C", Offset = "0xDC1E5C", VA = "0xDC1E5C")]
		public float GetAngleFromForward(Vector3 worldDirection)
		{
			return default(float);
		}

		[Token(Token = "0x60009B1")]
		[Address(RVA = "0xDC1EC0", Offset = "0xDC1EC0", VA = "0xDC1EC0")]
		protected void RigidbodyRotateAround(Vector3 point, Vector3 axis, float angle)
		{
		}

		[Token(Token = "0x60009B2")]
		[Address(RVA = "0xDC1FE0", Offset = "0xDC1FE0", VA = "0xDC1FE0")]
		protected void ScaleCapsule(float mlp)
		{
		}

		[Token(Token = "0x60009B3")]
		[Address(RVA = "0xDC2104", Offset = "0xDC2104", VA = "0xDC2104")]
		protected void HighFriction()
		{
		}

		[Token(Token = "0x60009B4")]
		[Address(RVA = "0xDC212C", Offset = "0xDC212C", VA = "0xDC212C")]
		protected void ZeroFriction()
		{
		}

		[Token(Token = "0x60009B5")]
		[Address(RVA = "0xDC2154", Offset = "0xDC2154", VA = "0xDC2154")]
		protected float GetSlopeDamper(Vector3 velocity, Vector3 groundNormal)
		{
			return default(float);
		}

		[Token(Token = "0x60009B6")]
		[Address(RVA = "0xDC21B4", Offset = "0xDC21B4", VA = "0xDC21B4")]
		protected CharacterBase()
		{
		}
	}
	[Token(Token = "0x2000150")]
	public class CharacterThirdPerson : CharacterBase
	{
		[Serializable]
		[Token(Token = "0x2000448")]
		public enum MoveMode
		{
			[Token(Token = "0x4002076")]
			Directional,
			[Token(Token = "0x4002077")]
			Strafe
		}

		[Token(Token = "0x2000449")]
		public struct AnimState
		{
			[Token(Token = "0x4002078")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 moveDirection;

			[Token(Token = "0x4002079")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public bool jump;

			[Token(Token = "0x400207A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD")]
			public bool crouch;

			[Token(Token = "0x400207B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xE")]
			public bool onGround;

			[Token(Token = "0x400207C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xF")]
			public bool isStrafing;

			[Token(Token = "0x400207D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yVelocity;

			[Token(Token = "0x400207E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public bool doubleJump;
		}

		[Token(Token = "0x200044A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849704", Offset = "0x849704")]
		private sealed class <JumpSmooth>d__74 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400207F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002080")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002081")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public CharacterThirdPerson <>4__this;

			[Token(Token = "0x4002082")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 jumpVelocity;

			[Token(Token = "0x4002083")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <steps>5__2;

			[Token(Token = "0x4002084")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <stepsToTake>5__3;

			[Token(Token = "0x17000243")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BF3")]
				[Address(RVA = "0x19AD0B0", Offset = "0x19AD0B0", VA = "0x19AD0B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000244")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BF5")]
				[Address(RVA = "0x19AD0F8", Offset = "0x19AD0F8", VA = "0x19AD0F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF0")]
			[Address(RVA = "0x19ACF80", Offset = "0x19ACF80", VA = "0x19ACF80")]
			[DebuggerHidden]
			public <JumpSmooth>d__74(int <>1__state)
			{
			}

			[Token(Token = "0x6001BF1")]
			[Address(RVA = "0x19ACFAC", Offset = "0x19ACFAC", VA = "0x19ACFAC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BF2")]
			[Address(RVA = "0x19ACFB0", Offset = "0x19ACFB0", VA = "0x19ACFB0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BF4")]
			[Address(RVA = "0x19AD0B8", Offset = "0x19AD0B8", VA = "0x19AD0B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000805")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851554", Offset = "0x851554")]
		public CharacterAnimationBase characterAnimation;

		[Token(Token = "0x4000806")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UserControlThirdPerson userControl;

		[Token(Token = "0x4000807")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public CameraController cam;

		[Token(Token = "0x4000808")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85158C", Offset = "0x85158C")]
		public MoveMode moveMode;

		[Token(Token = "0x4000809")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public bool smoothPhysics;

		[Token(Token = "0x400080A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float smoothAccelerationTime;

		[Token(Token = "0x400080B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float linearAccelerationSpeed;

		[Token(Token = "0x400080C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float platformFriction;

		[Token(Token = "0x400080D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float groundStickyEffect;

		[Token(Token = "0x400080E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public float maxVerticalVelocityOnGround;

		[Token(Token = "0x400080F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public float velocityToGroundTangentWeight;

		[Token(Token = "0x4000810")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8515C4", Offset = "0x8515C4")]
		public bool lookInCameraDirection;

		[Token(Token = "0x4000811")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float turnSpeed;

		[Token(Token = "0x4000812")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float stationaryTurnSpeedMlp;

		[Token(Token = "0x4000813")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8515FC", Offset = "0x8515FC")]
		public bool smoothJump;

		[Token(Token = "0x4000814")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public float airSpeed;

		[Token(Token = "0x4000815")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float airControl;

		[Token(Token = "0x4000816")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float jumpPower;

		[Token(Token = "0x4000817")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float jumpRepeatDelayTime;

		[Token(Token = "0x4000818")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool doubleJumpEnabled;

		[Token(Token = "0x4000819")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float doubleJumpPowerMlp;

		[Token(Token = "0x400081A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851634", Offset = "0x851634")]
		public LayerMask wallRunLayers;

		[Token(Token = "0x400081B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float wallRunMaxLength;

		[Token(Token = "0x400081C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float wallRunMinMoveMag;

		[Token(Token = "0x400081D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float wallRunMinVelocityY;

		[Token(Token = "0x400081E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public float wallRunRotationSpeed;

		[Token(Token = "0x400081F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float wallRunMaxRotationAngle;

		[Token(Token = "0x4000820")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float wallRunWeightSpeed;

		[Token(Token = "0x4000821")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x85166C", Offset = "0x85166C")]
		public float crouchCapsuleScaleMlp;

		[Token(Token = "0x4000822")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8516A4", Offset = "0x8516A4")]
		private bool <onGround>k__BackingField;

		[Token(Token = "0x4000823")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public AnimState animState;

		[Token(Token = "0x4000824")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		protected Vector3 moveDirection;

		[Token(Token = "0x4000825")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private Animator animator;

		[Token(Token = "0x4000826")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Vector3 normal;

		[Token(Token = "0x4000827")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private Vector3 platformVelocity;

		[Token(Token = "0x4000828")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Vector3 platformAngularVelocity;

		[Token(Token = "0x4000829")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private RaycastHit hit;

		[Token(Token = "0x400082A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private float jumpLeg;

		[Token(Token = "0x400082B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float jumpEndTime;

		[Token(Token = "0x400082C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float forwardMlp;

		[Token(Token = "0x400082D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float groundDistance;

		[Token(Token = "0x400082E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float lastAirTime;

		[Token(Token = "0x400082F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float stickyForce;

		[Token(Token = "0x4000830")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private Vector3 wallNormal;

		[Token(Token = "0x4000831")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private Vector3 moveDirectionVelocity;

		[Token(Token = "0x4000832")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float wallRunWeight;

		[Token(Token = "0x4000833")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private float lastWallRunWeight;

		[Token(Token = "0x4000834")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private Vector3 fixedDeltaPosition;

		[Token(Token = "0x4000835")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private Quaternion fixedDeltaRotation;

		[Token(Token = "0x4000836")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private bool fixedFrame;

		[Token(Token = "0x4000837")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float wallRunEndTime;

		[Token(Token = "0x4000838")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private Vector3 gravity;

		[Token(Token = "0x4000839")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Vector3 verticalVelocity;

		[Token(Token = "0x400083A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float velocityY;

		[Token(Token = "0x400083B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool doubleJumped;

		[Token(Token = "0x400083C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E1")]
		private bool jumpReleased;

		[Token(Token = "0x170000D8")]
		public bool onGround
		{
			[Token(Token = "0x60009B7")]
			[Address(RVA = "0xDC525C", Offset = "0xDC525C", VA = "0xDC525C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8573E0", Offset = "0x8573E0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009B8")]
			[Address(RVA = "0xDC5264", Offset = "0xDC5264", VA = "0xDC5264")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8573F0", Offset = "0x8573F0")]
			private set
			{
			}
		}

		[Token(Token = "0x60009B9")]
		[Address(RVA = "0xDC48CC", Offset = "0xDC48CC", VA = "0xDC48CC", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009BA")]
		[Address(RVA = "0xDC5270", Offset = "0xDC5270", VA = "0xDC5270")]
		private void OnAnimatorMove()
		{
		}

		[Token(Token = "0x60009BB")]
		[Address(RVA = "0xDC4A84", Offset = "0xDC4A84", VA = "0xDC4A84", Slot = "4")]
		public override void Move(Vector3 deltaPosition, Quaternion deltaRotation)
		{
		}

		[Token(Token = "0x60009BC")]
		[Address(RVA = "0xDC5300", Offset = "0xDC5300", VA = "0xDC5300")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60009BD")]
		[Address(RVA = "0xDC481C", Offset = "0xDC481C", VA = "0xDC481C", Slot = "7")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60009BE")]
		[Address(RVA = "0xDC60B4", Offset = "0xDC60B4", VA = "0xDC60B4", Slot = "8")]
		protected virtual void LateUpdate()
		{
		}

		[Token(Token = "0x60009BF")]
		[Address(RVA = "0xDC57F8", Offset = "0xDC57F8", VA = "0xDC57F8")]
		private void MoveFixed(Vector3 deltaPosition)
		{
		}

		[Token(Token = "0x60009C0")]
		[Address(RVA = "0xDC6198", Offset = "0xDC6198", VA = "0xDC6198")]
		private void WallRun()
		{
		}

		[Token(Token = "0x60009C1")]
		[Address(RVA = "0xDC663C", Offset = "0xDC663C", VA = "0xDC663C")]
		private bool CanWallRun()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C2")]
		[Address(RVA = "0xDC5EE4", Offset = "0xDC5EE4", VA = "0xDC5EE4")]
		private Vector3 GetMoveDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009C3")]
		[Address(RVA = "0xDC4CB8", Offset = "0xDC4CB8", VA = "0xDC4CB8", Slot = "9")]
		protected virtual void Rotate()
		{
		}

		[Token(Token = "0x60009C4")]
		[Address(RVA = "0xDC66DC", Offset = "0xDC66DC", VA = "0xDC66DC")]
		private Vector3 GetForwardDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009C5")]
		[Address(RVA = "0xDC502C", Offset = "0xDC502C", VA = "0xDC502C", Slot = "10")]
		protected virtual bool Jump()
		{
			return default(bool);
		}

		[Token(Token = "0x60009C6")]
		[Address(RVA = "0xDC67CC", Offset = "0xDC67CC", VA = "0xDC67CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857400", Offset = "0x857400")]
		private IEnumerator JumpSmooth(Vector3 jumpVelocity)
		{
			return null;
		}

		[Token(Token = "0x60009C7")]
		[Address(RVA = "0xDC5B48", Offset = "0xDC5B48", VA = "0xDC5B48")]
		private void GroundCheck()
		{
		}

		[Token(Token = "0x60009C8")]
		[Address(RVA = "0xDC518C", Offset = "0xDC518C", VA = "0xDC518C")]
		public CharacterThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000151")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8480F8", Offset = "0x8480F8")]
	public class SimpleLocomotion : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x200044B")]
		public enum RotationMode
		{
			[Token(Token = "0x4002086")]
			Smooth,
			[Token(Token = "0x4002087")]
			Linear
		}

		[Token(Token = "0x400083D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8516B4", Offset = "0x8516B4")]
		public CameraController cameraController;

		[Token(Token = "0x400083E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8516EC", Offset = "0x8516EC")]
		public float accelerationTime;

		[Token(Token = "0x400083F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851724", Offset = "0x851724")]
		public float turnTime;

		[Token(Token = "0x4000840")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85175C", Offset = "0x85175C")]
		public bool walkByDefault;

		[Token(Token = "0x4000841")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851794", Offset = "0x851794")]
		public RotationMode rotationMode;

		[Token(Token = "0x4000842")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8517CC", Offset = "0x8517CC")]
		public float moveSpeed;

		[Token(Token = "0x4000843")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x851804", Offset = "0x851804")]
		private bool <isGrounded>k__BackingField;

		[Token(Token = "0x4000844")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Animator animator;

		[Token(Token = "0x4000845")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x4000846")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float angleVel;

		[Token(Token = "0x4000847")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float speedVel;

		[Token(Token = "0x4000848")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 linearTargetDirection;

		[Token(Token = "0x4000849")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private CharacterController characterController;

		[Token(Token = "0x170000D9")]
		public bool isGrounded
		{
			[Token(Token = "0x60009C9")]
			[Address(RVA = "0xDDA548", Offset = "0xDDA548", VA = "0xDDA548")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x857468", Offset = "0x857468")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60009CA")]
			[Address(RVA = "0xDDA550", Offset = "0xDDA550", VA = "0xDDA550")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x857478", Offset = "0x857478")]
			private set
			{
			}
		}

		[Token(Token = "0x60009CB")]
		[Address(RVA = "0xDDA55C", Offset = "0xDDA55C", VA = "0xDDA55C")]
		private void Start()
		{
		}

		[Token(Token = "0x60009CC")]
		[Address(RVA = "0xDDA608", Offset = "0xDDA608", VA = "0xDDA608")]
		private void Update()
		{
		}

		[Token(Token = "0x60009CD")]
		[Address(RVA = "0xDDAAC8", Offset = "0xDDAAC8", VA = "0xDDAAC8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60009CE")]
		[Address(RVA = "0xDDA65C", Offset = "0xDDA65C", VA = "0xDDA65C")]
		private void Rotate()
		{
		}

		[Token(Token = "0x60009CF")]
		[Address(RVA = "0xDDA8DC", Offset = "0xDDA8DC", VA = "0xDDA8DC")]
		private void Move()
		{
		}

		[Token(Token = "0x60009D0")]
		[Address(RVA = "0xDDAB04", Offset = "0xDDAB04", VA = "0xDDAB04")]
		private Vector3 GetInputVector()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009D1")]
		[Address(RVA = "0xDDABA8", Offset = "0xDDABA8", VA = "0xDDABA8")]
		private Vector3 GetInputVectorRaw()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60009D2")]
		[Address(RVA = "0xDDAC34", Offset = "0xDDAC34", VA = "0xDDAC34")]
		public SimpleLocomotion()
		{
		}
	}
	[Token(Token = "0x2000152")]
	public class UserControlAI : UserControlThirdPerson
	{
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform moveTarget;

		[Token(Token = "0x400084B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float stoppingDistance;

		[Token(Token = "0x400084C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float stoppingThreshold;

		[Token(Token = "0x400084D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Navigator navigator;

		[Token(Token = "0x60009D3")]
		[Address(RVA = "0xC33DE0", Offset = "0xC33DE0", VA = "0xC33DE0", Slot = "4")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60009D4")]
		[Address(RVA = "0xC33E64", Offset = "0xC33E64", VA = "0xC33E64", Slot = "5")]
		protected override void Update()
		{
		}

		[Token(Token = "0x60009D5")]
		[Address(RVA = "0xC34028", Offset = "0xC34028", VA = "0xC34028")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x60009D6")]
		[Address(RVA = "0xC34058", Offset = "0xC34058", VA = "0xC34058")]
		public UserControlAI()
		{
		}
	}
	[Token(Token = "0x2000153")]
	public class UserControlThirdPerson : MonoBehaviour
	{
		[Token(Token = "0x200044C")]
		public struct State
		{
			[Token(Token = "0x4002088")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 move;

			[Token(Token = "0x4002089")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public Vector3 lookPos;

			[Token(Token = "0x400208A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool crouch;

			[Token(Token = "0x400208B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
			public bool jump;

			[Token(Token = "0x400208C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public int actionIndex;
		}

		[Token(Token = "0x400084E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool walkByDefault;

		[Token(Token = "0x400084F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool canCrouch;

		[Token(Token = "0x4000850")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool canJump;

		[Token(Token = "0x4000851")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public State state;

		[Token(Token = "0x4000852")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected Transform cam;

		[Token(Token = "0x60009D7")]
		[Address(RVA = "0xC33E24", Offset = "0xC33E24", VA = "0xC33E24", Slot = "4")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x60009D8")]
		[Address(RVA = "0xC343F4", Offset = "0xC343F4", VA = "0xC343F4", Slot = "5")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x60009D9")]
		[Address(RVA = "0xC34074", Offset = "0xC34074", VA = "0xC34074")]
		public UserControlThirdPerson()
		{
		}
	}
	[Token(Token = "0x2000154")]
	public class ApplicationQuit : MonoBehaviour
	{
		[Token(Token = "0x60009DA")]
		[Address(RVA = "0x1192750", Offset = "0x1192750", VA = "0x1192750")]
		private void Update()
		{
		}

		[Token(Token = "0x60009DB")]
		[Address(RVA = "0x119278C", Offset = "0x119278C", VA = "0x119278C")]
		public ApplicationQuit()
		{
		}
	}
	[Token(Token = "0x2000155")]
	public class SlowMo : MonoBehaviour
	{
		[Token(Token = "0x4000853")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyCode[] keyCodes;

		[Token(Token = "0x4000854")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool mouse0;

		[Token(Token = "0x4000855")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool mouse1;

		[Token(Token = "0x4000856")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float slowMoTimeScale;

		[Token(Token = "0x60009DC")]
		[Address(RVA = "0x105144C", Offset = "0x105144C", VA = "0x105144C")]
		private void Update()
		{
		}

		[Token(Token = "0x60009DD")]
		[Address(RVA = "0x1051480", Offset = "0x1051480", VA = "0x1051480")]
		private bool IsSlowMotion()
		{
			return default(bool);
		}

		[Token(Token = "0x60009DE")]
		[Address(RVA = "0x1051530", Offset = "0x1051530", VA = "0x1051530")]
		public SlowMo()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000156")]
	public class Navigator
	{
		[Token(Token = "0x200044D")]
		public enum State
		{
			[Token(Token = "0x400208E")]
			Idle,
			[Token(Token = "0x400208F")]
			Seeking,
			[Token(Token = "0x4002090")]
			OnPath
		}

		[Token(Token = "0x4000857")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851814", Offset = "0x851814")]
		public bool activeTargetSeeking;

		[Token(Token = "0x4000858")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85184C", Offset = "0x85184C")]
		public float cornerRadius;

		[Token(Token = "0x4000859")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x851884", Offset = "0x851884")]
		public float recalculateOnPathDistance;

		[Token(Token = "0x400085A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8518BC", Offset = "0x8518BC")]
		public float maxSampleDistance;

		[Token(Token = "0x400085B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8518F4", Offset = "0x8518F4")]
		public float nextPathInterval;

		[Token(Token = "0x400085C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85192C", Offset = "0x85192C")]
		private Vector3 <normalizedDeltaPosition>k__BackingField;

		[Token(Token = "0x400085D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85193C", Offset = "0x85193C")]
		private State <state>k__BackingField;

		[Token(Token = "0x400085E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform transform;

		[Token(Token = "0x400085F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int cornerIndex;

		[Token(Token = "0x4000860")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3[] corners;

		[Token(Token = "0x4000861")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private NavMeshPath path;

		[Token(Token = "0x4000862")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 lastTargetPosition;

		[Token(Token = "0x4000863")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool initiated;

		[Token(Token = "0x4000864")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float nextPathTime;

		[Token(Token = "0x170000DA")]
		public Vector3 normalizedDeltaPosition
		{
			[Token(Token = "0x60009DF")]
			[Address(RVA = "0x156567C", Offset = "0x156567C", VA = "0x156567C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x857488", Offset = "0x857488")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60009E0")]
			[Address(RVA = "0x1565688", Offset = "0x1565688", VA = "0x1565688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x857498", Offset = "0x857498")]
			private set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public State state
		{
			[Token(Token = "0x60009E1")]
			[Address(RVA = "0x1565694", Offset = "0x1565694", VA = "0x1565694")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8574A8", Offset = "0x8574A8")]
			get
			{
				return default(State);
			}
			[Token(Token = "0x60009E2")]
			[Address(RVA = "0x156569C", Offset = "0x156569C", VA = "0x156569C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8574B8", Offset = "0x8574B8")]
			private set
			{
			}
		}

		[Token(Token = "0x60009E3")]
		[Address(RVA = "0x15656A4", Offset = "0x15656A4", VA = "0x15656A4")]
		public void Initiate(Transform transform)
		{
		}

		[Token(Token = "0x60009E4")]
		[Address(RVA = "0x1565780", Offset = "0x1565780", VA = "0x1565780")]
		public void Update(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60009E5")]
		[Address(RVA = "0x1565B70", Offset = "0x1565B70", VA = "0x1565B70")]
		private void CalculatePath(Vector3 targetPosition)
		{
		}

		[Token(Token = "0x60009E6")]
		[Address(RVA = "0x1565BEC", Offset = "0x1565BEC", VA = "0x1565BEC")]
		private bool Find(Vector3 targetPosition)
		{
			return default(bool);
		}

		[Token(Token = "0x60009E7")]
		[Address(RVA = "0x1565B2C", Offset = "0x1565B2C", VA = "0x1565B2C")]
		private void Stop()
		{
		}

		[Token(Token = "0x60009E8")]
		[Address(RVA = "0x1565B5C", Offset = "0x1565B5C", VA = "0x1565B5C")]
		private float HorDistance(Vector3 p1, Vector3 p2)
		{
			return default(float);
		}

		[Token(Token = "0x60009E9")]
		[Address(RVA = "0x1565D30", Offset = "0x1565D30", VA = "0x1565D30")]
		public void Visualize()
		{
		}

		[Token(Token = "0x60009EA")]
		[Address(RVA = "0x1565EE0", Offset = "0x1565EE0", VA = "0x1565EE0")]
		public Navigator()
		{
		}
	}
}
namespace ginra
{
	[Token(Token = "0x2000157")]
	public class mug : MonoBehaviour
	{
		[Token(Token = "0x200044E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849714", Offset = "0x849714")]
		private sealed class <set_image>d__4 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002091")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002092")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002093")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4002094")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public mug <>4__this;

			[Token(Token = "0x4002095")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <cached>5__2;

			[Token(Token = "0x4002096")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <localName>5__3;

			[Token(Token = "0x4002097")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <uwr>5__4;

			[Token(Token = "0x17000245")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001BFA")]
				[Address(RVA = "0xD2DB70", Offset = "0xD2DB70", VA = "0xD2DB70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000246")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001BFC")]
				[Address(RVA = "0xD2DBB8", Offset = "0xD2DBB8", VA = "0xD2DBB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BF6")]
			[Address(RVA = "0xD2D6EC", Offset = "0xD2D6EC", VA = "0xD2D6EC")]
			[DebuggerHidden]
			public <set_image>d__4(int <>1__state)
			{
			}

			[Token(Token = "0x6001BF7")]
			[Address(RVA = "0xD2D718", Offset = "0xD2D718", VA = "0xD2D718", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BF8")]
			[Address(RVA = "0xD2D7E8", Offset = "0xD2D7E8", VA = "0xD2D7E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001BF9")]
			[Address(RVA = "0xD2D734", Offset = "0xD2D734", VA = "0xD2D734")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001BFB")]
			[Address(RVA = "0xD2DB78", Offset = "0xD2DB78", VA = "0xD2DB78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000865")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI[] ui_texts;

		[Token(Token = "0x4000866")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RawImage[] ui_images;

		[Token(Token = "0x4000867")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Renderer rend;

		[Token(Token = "0x60009EB")]
		[Address(RVA = "0x1F18CD8", Offset = "0x1F18CD8", VA = "0x1F18CD8")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009EC")]
		[Address(RVA = "0x1F18FB8", Offset = "0x1F18FB8", VA = "0x1F18FB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8574C8", Offset = "0x8574C8")]
		private IEnumerator set_image(string url)
		{
			return null;
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0x1F1904C", Offset = "0x1F1904C", VA = "0x1F1904C")]
		public mug()
		{
		}
	}
	[Token(Token = "0x2000158")]
	public class bullet : MonoBehaviour
	{
		[Token(Token = "0x4000868")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject shell;

		[Token(Token = "0x4000869")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public sound source;

		[Token(Token = "0x400086A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 origin;

		[Token(Token = "0x400086B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 target;

		[Token(Token = "0x400086C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 next;

		[Token(Token = "0x400086D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float speed;

		[Token(Token = "0x400086E")]
		private const float speed_factor = 25f;

		[Token(Token = "0x400086F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RaycastHit[] hits;

		[Token(Token = "0x4000870")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RaycastHit hit;

		[Token(Token = "0x4000871")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool hashit;

		[Token(Token = "0x4000872")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int damage;

		[Token(Token = "0x4000873")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private npc npc;

		[Token(Token = "0x4000874")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float maxlife;

		[Token(Token = "0x4000875")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool pass_target;

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xC39C68", Offset = "0xC39C68", VA = "0xC39C68")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xC39D08", Offset = "0xC39D08", VA = "0xC39D08")]
		public void fire(Vector3 _origin, Vector3 _target, float _speed, int _damage, npc _npc)
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xC39DA0", Offset = "0xC39DA0", VA = "0xC39DA0")]
		public void explode(Collider col)
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xC3A314", Offset = "0xC3A314", VA = "0xC3A314")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xC3A824", Offset = "0xC3A824", VA = "0xC3A824")]
		public bullet()
		{
		}
	}
	[Token(Token = "0x2000159")]
	public class lips : MonoBehaviour
	{
		[Token(Token = "0x4000876")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject[] gos;

		[Token(Token = "0x4000877")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float delta;

		[Token(Token = "0x4000878")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float pass;

		[Token(Token = "0x4000879")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float seconds;

		[Token(Token = "0x400087A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool speaking;

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xC931DC", Offset = "0xC931DC", VA = "0xC931DC")]
		public void speak(float duration)
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xC9B6C0", Offset = "0xC9B6C0", VA = "0xC9B6C0")]
		private void Update()
		{
		}

		[Token(Token = "0x60009F5")]
		[Address(RVA = "0xC9B848", Offset = "0xC9B848", VA = "0xC9B848")]
		public lips()
		{
		}
	}
	[Token(Token = "0x200015A")]
	public class ragdoll : MonoBehaviour
	{
		[Token(Token = "0x400087B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool ragdolled;

		[Token(Token = "0x400087C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator ani;

		[Token(Token = "0x400087D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public npc npc;

		[Token(Token = "0x400087E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public mpnpc mpnpc;

		[Token(Token = "0x400087F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public bool HaveRagdoll;

		[Token(Token = "0x4000880")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Rigidbody hips;

		[Token(Token = "0x4000881")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<ragdoll_bone> bones;

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xFFCA40", Offset = "0xFFCA40", VA = "0xFFCA40")]
		public ragdoll_bone get_head()
		{
			return null;
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xFFCB7C", Offset = "0xFFCB7C", VA = "0xFFCB7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xFFCCCC", Offset = "0xFFCCCC", VA = "0xFFCCCC")]
		private void enable_ragdoll()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xFFCF4C", Offset = "0xFFCF4C", VA = "0xFFCF4C")]
		private void disable_ragdoll()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xFFD1C8", Offset = "0xFFD1C8", VA = "0xFFD1C8")]
		public void mode(bool _state)
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xFFD1D4", Offset = "0xFFD1D4", VA = "0xFFD1D4")]
		public bool is_moving()
		{
			return default(bool);
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xFFD3BC", Offset = "0xFFD3BC", VA = "0xFFD3BC")]
		public void force(Vector3 point, Vector3 normal, Vector3 direction, float force, float air_force = 2f)
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xFFD420", Offset = "0xFFD420", VA = "0xFFD420")]
		public void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage, bool headshoot = false)
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xFFD5C0", Offset = "0xFFD5C0", VA = "0xFFD5C0")]
		public ragdoll()
		{
		}
	}
	[Token(Token = "0x200015B")]
	public class ragdoll_bone : hitable
	{
		[Token(Token = "0x4000882")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ragdoll ragdoll;

		[Token(Token = "0x4000883")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HumanBodyBones type;

		[Token(Token = "0x4000884")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Rigidbody rb;

		[Token(Token = "0x4000885")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider col;

		[Token(Token = "0x4000886")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Joint joint;

		[Token(Token = "0x4000887")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Rigidbody joint_rb;

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xFFD64C", Offset = "0xFFD64C", VA = "0xFFD64C", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xFFD778", Offset = "0xFFD778", VA = "0xFFD778")]
		public ragdoll_bone()
		{
		}
	}
	[Token(Token = "0x200015C")]
	public class chrisman : MonoBehaviour
	{
		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xC3BECC", Offset = "0xC3BECC", VA = "0xC3BECC")]
		private void DuplicateMateriels()
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xC3BED0", Offset = "0xC3BED0", VA = "0xC3BED0")]
		public chrisman()
		{
		}
	}
	[Token(Token = "0x200015D")]
	public class build : MonoBehaviour
	{
		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xC39C60", Offset = "0xC39C60", VA = "0xC39C60")]
		public build()
		{
		}
	}
	[Token(Token = "0x200015E")]
	[SelectionBase]
	public class calculator : tool
	{
		[Token(Token = "0x4000888")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public TextMeshProUGUI ui_value;

		[Token(Token = "0x4000889")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private string strvalue;

		[Token(Token = "0x400088A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private int max_length;

		[Token(Token = "0x400088B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private string publisher_code;

		[Token(Token = "0x400088C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float delay;

		[Token(Token = "0x400088D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public custombutton[] buttons;

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xC3AF48", Offset = "0xC3AF48", VA = "0xC3AF48", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xC3B064", Offset = "0xC3B064", VA = "0xC3B064", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xC3B158", Offset = "0xC3B158", VA = "0xC3B158", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xC3B24C", Offset = "0xC3B24C", VA = "0xC3B24C")]
		public void button_key(string str)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xC3B2EC", Offset = "0xC3B2EC", VA = "0xC3B2EC")]
		public void button_del()
		{
		}

		[Token(Token = "0x6000A09")]
		[Address(RVA = "0xC3B378", Offset = "0xC3B378", VA = "0xC3B378")]
		public void button_enter()
		{
		}

		[Token(Token = "0x6000A0A")]
		[Address(RVA = "0xC3B544", Offset = "0xC3B544", VA = "0xC3B544")]
		public calculator()
		{
		}
	}
	[Token(Token = "0x200015F")]
	public class demobox : hitable
	{
		[Token(Token = "0x400088E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float speed;

		[Token(Token = "0x400088F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float from;

		[Token(Token = "0x4000890")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float to;

		[Token(Token = "0x4000891")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 org_pos;

		[Token(Token = "0x4000892")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float last_button;

		[Token(Token = "0x4000893")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private hand current_hand;

		[Token(Token = "0x4000894")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hovered;

		[Token(Token = "0x4000895")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound ClickSound;

		[Token(Token = "0x4000896")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private string url;

		[Token(Token = "0x6000A0B")]
		[Address(RVA = "0xC3CA5C", Offset = "0xC3CA5C", VA = "0xC3CA5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A0C")]
		[Address(RVA = "0xC3CAF8", Offset = "0xC3CAF8", VA = "0xC3CAF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A0D")]
		[Address(RVA = "0xC3CB34", Offset = "0xC3CB34", VA = "0xC3CB34")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xC3CBF0", Offset = "0xC3CBF0", VA = "0xC3CBF0")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xC3CDDC", Offset = "0xC3CDDC", VA = "0xC3CDDC")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xC3CE4C", Offset = "0xC3CE4C", VA = "0xC3CE4C")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xC3CEE0", Offset = "0xC3CEE0", VA = "0xC3CEE0", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xC3CF40", Offset = "0xC3CF40", VA = "0xC3CF40", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xC3CFA0", Offset = "0xC3CFA0", VA = "0xC3CFA0", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xC3CFA8", Offset = "0xC3CFA8", VA = "0xC3CFA8")]
		public demobox()
		{
		}
	}
	[Token(Token = "0x2000160")]
	public class drone : hitable
	{
		[Token(Token = "0x4000897")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool exploded;

		[Token(Token = "0x4000898")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody rb;

		[Token(Token = "0x4000899")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 speed;

		[Token(Token = "0x400089A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject muzzle_effect;

		[Token(Token = "0x400089B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float muzzle_effect_seconds;

		[Token(Token = "0x400089C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float muzzle_effect_end;

		[Token(Token = "0x400089D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform muzzle;

		[Token(Token = "0x400089E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound shoot_sound;

		[Token(Token = "0x400089F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float last_shoot_sound;

		[Token(Token = "0x40008A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float shoot_time;

		[Token(Token = "0x40008A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float shoots_margin;

		[Token(Token = "0x40008A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private RaycastHit ray_hit;

		[Token(Token = "0x40008A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject explode_effect;

		[Token(Token = "0x40008A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public sound explode_sound;

		[Token(Token = "0x40008A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public base_event on_exploded;

		[Token(Token = "0x40008A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int bullet_left;

		[Token(Token = "0x40008A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float impact_force;

		[Token(Token = "0x40008A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float impact_radius;

		[Token(Token = "0x40008A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int damage;

		[Token(Token = "0x40008AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int player_damage;

		[Token(Token = "0x40008AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool can_hit_player;

		[Token(Token = "0x40008AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public int healthFull;

		[Token(Token = "0x40008AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[HideInInspector]
		public int health;

		[Token(Token = "0x40008AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Camera drone_camera;

		[Token(Token = "0x40008AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Transform npc_target;

		[Token(Token = "0x40008B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public base_event on_destroy;

		[Token(Token = "0x40008B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public shoot_event on_shoot_visual;

		[Token(Token = "0x40008B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public base_event on_explode_visual;

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xC3D8CC", Offset = "0xC3D8CC", VA = "0xC3D8CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xC3D910", Offset = "0xC3D910", VA = "0xC3D910")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xC3DA98", Offset = "0xC3DA98", VA = "0xC3DA98", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xC3DB14", Offset = "0xC3DB14", VA = "0xC3DB14")]
		private void play_shoot_sound()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xC3D914", Offset = "0xC3D914", VA = "0xC3D914")]
		private void update_muzzle()
		{
		}

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xC3DBE8", Offset = "0xC3DBE8", VA = "0xC3DBE8")]
		public bool isalive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xC3DC08", Offset = "0xC3DC08", VA = "0xC3DC08")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xC3DCAC", Offset = "0xC3DCAC", VA = "0xC3DCAC")]
		public void remove()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xC3DD80", Offset = "0xC3DD80", VA = "0xC3DD80")]
		public void move(Vector3 direction)
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xC3DE40", Offset = "0xC3DE40", VA = "0xC3DE40")]
		public void rotate(Vector3 direction)
		{
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xC3DE74", Offset = "0xC3DE74", VA = "0xC3DE74")]
		public bool shoot()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xC3E928", Offset = "0xC3E928", VA = "0xC3E928")]
		public void shoot_visual(Vector3 point, Vector3 normal, [Optional] Collider collider)
		{
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xC3DABC", Offset = "0xC3DABC", VA = "0xC3DABC")]
		public void explode()
		{
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xC3EAB8", Offset = "0xC3EAB8", VA = "0xC3EAB8")]
		public void explode_visual()
		{
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xC3EB94", Offset = "0xC3EB94", VA = "0xC3EB94")]
		public drone()
		{
		}
	}
	[Token(Token = "0x2000161")]
	public class activevar : MonoBehaviour
	{
		[Token(Token = "0x40008B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string varname;

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xC385EC", Offset = "0xC385EC", VA = "0xC385EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xC38694", Offset = "0xC38694", VA = "0xC38694")]
		public activevar()
		{
		}
	}
	[Token(Token = "0x2000162")]
	public class animator_state : StateMachineBehaviour
	{
		[Token(Token = "0x40008B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool ended;

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xC386F8", Offset = "0xC386F8", VA = "0xC386F8", Slot = "4")]
		public override void OnStateEnter(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xC38700", Offset = "0xC38700", VA = "0xC38700", Slot = "5")]
		public override void OnStateUpdate(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xC38898", Offset = "0xC38898", VA = "0xC38898", Slot = "6")]
		public override void OnStateExit(Animator animator, AnimatorStateInfo stateInfo, int layerIndex)
		{
		}

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xC388A0", Offset = "0xC388A0", VA = "0xC388A0")]
		public animator_state()
		{
		}
	}
	[Token(Token = "0x2000163")]
	public class banner : MonoBehaviour
	{
		[Token(Token = "0x200044F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849724", Offset = "0x849724")]
		private sealed class <Start>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002098")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002099")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400209A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public banner <>4__this;

			[Token(Token = "0x17000247")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C00")]
				[Address(RVA = "0xFD47B8", Offset = "0xFD47B8", VA = "0xFD47B8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000248")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C02")]
				[Address(RVA = "0xFD4800", Offset = "0xFD4800", VA = "0xFD4800", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001BFD")]
			[Address(RVA = "0xFD45F8", Offset = "0xFD45F8", VA = "0xFD45F8")]
			[DebuggerHidden]
			public <Start>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001BFE")]
			[Address(RVA = "0xFD4624", Offset = "0xFD4624", VA = "0xFD4624", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001BFF")]
			[Address(RVA = "0xFD4628", Offset = "0xFD4628", VA = "0xFD4628", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C01")]
			[Address(RVA = "0xFD47C0", Offset = "0xFD47C0", VA = "0xFD47C0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000450")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849734", Offset = "0x849734")]
		private sealed class <set_image>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400209B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400209C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400209D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x400209E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public banner <>4__this;

			[Token(Token = "0x400209F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <cached>5__2;

			[Token(Token = "0x40020A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <localName>5__3;

			[Token(Token = "0x40020A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <uwr>5__4;

			[Token(Token = "0x17000249")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C07")]
				[Address(RVA = "0xFD4BF8", Offset = "0xFD4BF8", VA = "0xFD4BF8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C09")]
				[Address(RVA = "0xFD4C40", Offset = "0xFD4C40", VA = "0xFD4C40", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C03")]
			[Address(RVA = "0xFD4808", Offset = "0xFD4808", VA = "0xFD4808")]
			[DebuggerHidden]
			public <set_image>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001C04")]
			[Address(RVA = "0xFD4834", Offset = "0xFD4834", VA = "0xFD4834", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C05")]
			[Address(RVA = "0xFD4904", Offset = "0xFD4904", VA = "0xFD4904", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C06")]
			[Address(RVA = "0xFD4850", Offset = "0xFD4850", VA = "0xFD4850")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001C08")]
			[Address(RVA = "0xFD4C00", Offset = "0xFD4C00", VA = "0xFD4C00", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string banner_name;

		[Token(Token = "0x40008B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public custombutton button;

		[Token(Token = "0x40008B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RawImage ui_image;

		[Token(Token = "0x40008B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float scale;

		[Token(Token = "0x40008B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private bool action_url;

		[Token(Token = "0x40008BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string url;

		[Token(Token = "0x40008BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string param_name;

		[Token(Token = "0x40008BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string param_value;

		[Token(Token = "0x40008BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool dynamic;

		[Token(Token = "0x40008BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool changeScale;

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xC38CF4", Offset = "0xC38CF4", VA = "0xC38CF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xC38D64", Offset = "0xC38D64", VA = "0xC38D64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857530", Offset = "0x857530")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xC38DE4", Offset = "0xC38DE4", VA = "0xC38DE4")]
		private bool draw_contest()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xC38E48", Offset = "0xC38E48", VA = "0xC38E48")]
		private bool draw()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xC3909C", Offset = "0xC3909C", VA = "0xC3909C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857598", Offset = "0x857598")]
		private IEnumerator set_image(string url)
		{
			return null;
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xC39130", Offset = "0xC39130", VA = "0xC39130")]
		public void click()
		{
		}

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xC392DC", Offset = "0xC392DC", VA = "0xC392DC")]
		public banner()
		{
		}
	}
	[Token(Token = "0x2000164")]
	public class bomb : hitable
	{
		[Token(Token = "0x40008BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool armed;

		[Token(Token = "0x40008C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool exploded;

		[Token(Token = "0x40008C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject model;

		[Token(Token = "0x40008C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject effect;

		[Token(Token = "0x40008C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float impact_radius;

		[Token(Token = "0x40008C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float impact_force;

		[Token(Token = "0x40008C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int damage;

		[Token(Token = "0x40008C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int player_damage;

		[Token(Token = "0x40008C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bomb_event on_explode;

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xC39360", Offset = "0xC39360", VA = "0xC39360", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xC39364", Offset = "0xC39364", VA = "0xC39364")]
		private void explode()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xC397C8", Offset = "0xC397C8", VA = "0xC397C8")]
		public void Test()
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xC397CC", Offset = "0xC397CC", VA = "0xC397CC")]
		public bomb()
		{
		}
	}
	[Token(Token = "0x2000165")]
	public class bootcamp_target : hitable
	{
		[Token(Token = "0x2000451")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849744", Offset = "0x849744")]
		private sealed class <wake>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bootcamp_target <>4__this;

			[Token(Token = "0x40020A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x40020A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <left>5__3;

			[Token(Token = "0x1700024B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C0D")]
				[Address(RVA = "0xFD5120", Offset = "0xFD5120", VA = "0xFD5120", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C0F")]
				[Address(RVA = "0xFD5168", Offset = "0xFD5168", VA = "0xFD5168", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C0A")]
			[Address(RVA = "0xFD4EC8", Offset = "0xFD4EC8", VA = "0xFD4EC8")]
			[DebuggerHidden]
			public <wake>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001C0B")]
			[Address(RVA = "0xFD4EF4", Offset = "0xFD4EF4", VA = "0xFD4EF4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C0C")]
			[Address(RVA = "0xFD4EF8", Offset = "0xFD4EF8", VA = "0xFD4EF8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C0E")]
			[Address(RVA = "0xFD5128", Offset = "0xFD5128", VA = "0xFD5128", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000452")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849754", Offset = "0x849754")]
		private sealed class <kill>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bootcamp_target <>4__this;

			[Token(Token = "0x40020AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x40020AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <left>5__3;

			[Token(Token = "0x1700024D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C13")]
				[Address(RVA = "0xFD4E78", Offset = "0xFD4E78", VA = "0xFD4E78", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700024E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C15")]
				[Address(RVA = "0xFD4EC0", Offset = "0xFD4EC0", VA = "0xFD4EC0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C10")]
			[Address(RVA = "0xFD4C48", Offset = "0xFD4C48", VA = "0xFD4C48")]
			[DebuggerHidden]
			public <kill>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001C11")]
			[Address(RVA = "0xFD4C74", Offset = "0xFD4C74", VA = "0xFD4C74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C12")]
			[Address(RVA = "0xFD4C78", Offset = "0xFD4C78", VA = "0xFD4C78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C14")]
			[Address(RVA = "0xFD4E80", Offset = "0xFD4E80", VA = "0xFD4E80", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool moving;

		[Token(Token = "0x40008C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		private bool alive;

		[Token(Token = "0x40008CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform model;

		[Token(Token = "0x40008CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 model_up;

		[Token(Token = "0x40008CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Vector3 model_down;

		[Token(Token = "0x40008CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Vector3 model_from;

		[Token(Token = "0x40008CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 model_to;

		[Token(Token = "0x40008CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private sound sound;

		[Token(Token = "0x40008D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float direction;

		[Token(Token = "0x40008D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private bool waked;

		[Token(Token = "0x40008D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float speed;

		[Token(Token = "0x40008D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float delay;

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xC39890", Offset = "0xC39890", VA = "0xC39890")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xC399F0", Offset = "0xC399F0", VA = "0xC399F0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xC39A9C", Offset = "0xC39A9C", VA = "0xC39A9C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A38")]
		[Address(RVA = "0xC39B7C", Offset = "0xC39B7C", VA = "0xC39B7C", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xC39A1C", Offset = "0xC39A1C", VA = "0xC39A1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857600", Offset = "0x857600")]
		private IEnumerator wake()
		{
			return null;
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xC39BC0", Offset = "0xC39BC0", VA = "0xC39BC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857668", Offset = "0x857668")]
		private IEnumerator kill()
		{
			return null;
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xC39C40", Offset = "0xC39C40", VA = "0xC39C40")]
		public bootcamp_target()
		{
		}
	}
	[Token(Token = "0x2000166")]
	public class car : MonoBehaviour
	{
		[Token(Token = "0x40008D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public path path;

		[Token(Token = "0x40008D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private point path_from;

		[Token(Token = "0x40008D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private point path_to;

		[Token(Token = "0x40008D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float drive_speed;

		[Token(Token = "0x40008D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float turn_speed;

		[Token(Token = "0x40008D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 orgpos;

		[Token(Token = "0x40008DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Collider> cols;

		[Token(Token = "0x40008DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float last_move;

		[Token(Token = "0x40008DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float ignore_hits;

		[Token(Token = "0x40008DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform[] wheels;

		[Token(Token = "0x40008DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public car_event on_path_complete;

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xC3B5D4", Offset = "0xC3B5D4", VA = "0xC3B5D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xC3B610", Offset = "0xC3B610", VA = "0xC3B610")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A3E")]
		[Address(RVA = "0xC3B618", Offset = "0xC3B618", VA = "0xC3B618")]
		public void set_path(path _path)
		{
		}

		[Token(Token = "0x6000A3F")]
		[Address(RVA = "0xC3B7D8", Offset = "0xC3B7D8", VA = "0xC3B7D8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A40")]
		[Address(RVA = "0xC3B7DC", Offset = "0xC3B7DC", VA = "0xC3B7DC")]
		private void UpdateDrive()
		{
		}

		[Token(Token = "0x6000A41")]
		[Address(RVA = "0xC3BC98", Offset = "0xC3BC98", VA = "0xC3BC98")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000A42")]
		[Address(RVA = "0xC3BD38", Offset = "0xC3BD38", VA = "0xC3BD38")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000A43")]
		[Address(RVA = "0xC3BDD8", Offset = "0xC3BDD8", VA = "0xC3BDD8")]
		public car()
		{
		}
	}
	[Token(Token = "0x2000167")]
	public class difficulty_menu : hitable
	{
		[Token(Token = "0x40008DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject hover;

		[Token(Token = "0x40008E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject visible;

		[Token(Token = "0x40008E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float lasthit;

		[Token(Token = "0x40008E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float scale;

		[Token(Token = "0x40008E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float toscale;

		[Token(Token = "0x40008E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private sound source;

		[Token(Token = "0x40008E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI label;

		[Token(Token = "0x40008E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject back1;

		[Token(Token = "0x40008E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject back4;

		[Token(Token = "0x40008E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject back8;

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xC3D0E4", Offset = "0xC3D0E4", VA = "0xC3D0E4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xC3D168", Offset = "0xC3D168", VA = "0xC3D168")]
		private void UpdateDifficulty()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xC3D3B4", Offset = "0xC3D3B4", VA = "0xC3D3B4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xC3D490", Offset = "0xC3D490", VA = "0xC3D490", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xC3D498", Offset = "0xC3D498", VA = "0xC3D498", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xC3D5D0", Offset = "0xC3D5D0", VA = "0xC3D5D0", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xC3D624", Offset = "0xC3D624", VA = "0xC3D624", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xC3D654", Offset = "0xC3D654", VA = "0xC3D654")]
		public difficulty_menu()
		{
		}
	}
	[Token(Token = "0x2000168")]
	public class door : MonoBehaviour
	{
		[Token(Token = "0x2000453")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849764", Offset = "0x849764")]
		private sealed class <open_co>d__11 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public door <>4__this;

			[Token(Token = "0x40020AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x40020B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <left>5__3;

			[Token(Token = "0x1700024F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C19")]
				[Address(RVA = "0xFD5E2C", Offset = "0xFD5E2C", VA = "0xFD5E2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000250")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C1B")]
				[Address(RVA = "0xFD5E74", Offset = "0xFD5E74", VA = "0xFD5E74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C16")]
			[Address(RVA = "0xFD5BE0", Offset = "0xFD5BE0", VA = "0xFD5BE0")]
			[DebuggerHidden]
			public <open_co>d__11(int <>1__state)
			{
			}

			[Token(Token = "0x6001C17")]
			[Address(RVA = "0xFD5C0C", Offset = "0xFD5C0C", VA = "0xFD5C0C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C18")]
			[Address(RVA = "0xFD5C10", Offset = "0xFD5C10", VA = "0xFD5C10", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C1A")]
			[Address(RVA = "0xFD5E34", Offset = "0xFD5E34", VA = "0xFD5E34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000454")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849774", Offset = "0x849774")]
		private sealed class <close_co>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public door <>4__this;

			[Token(Token = "0x40020B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x40020B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <left>5__3;

			[Token(Token = "0x17000251")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C1F")]
				[Address(RVA = "0xFD5B90", Offset = "0xFD5B90", VA = "0xFD5B90", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000252")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C21")]
				[Address(RVA = "0xFD5BD8", Offset = "0xFD5BD8", VA = "0xFD5BD8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C1C")]
			[Address(RVA = "0xFD596C", Offset = "0xFD596C", VA = "0xFD596C")]
			[DebuggerHidden]
			public <close_co>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001C1D")]
			[Address(RVA = "0xFD5998", Offset = "0xFD5998", VA = "0xFD5998", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C1E")]
			[Address(RVA = "0xFD599C", Offset = "0xFD599C", VA = "0xFD599C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C20")]
			[Address(RVA = "0xFD5B98", Offset = "0xFD5B98", VA = "0xFD5B98", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public bool opened;

		[Token(Token = "0x40008EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 close_angle;

		[Token(Token = "0x40008EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 close_position;

		[Token(Token = "0x40008EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float open_duration;

		[Token(Token = "0x40008ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float close_duration;

		[Token(Token = "0x40008EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 open_angle;

		[Token(Token = "0x40008EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 open_position;

		[Token(Token = "0x40008F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public sound sound_source;

		[Token(Token = "0x6000A4C")]
		[Address(RVA = "0xC3D664", Offset = "0xC3D664", VA = "0xC3D664")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A4D")]
		[Address(RVA = "0xC3D6C0", Offset = "0xC3D6C0", VA = "0xC3D6C0")]
		public void toggle()
		{
		}

		[Token(Token = "0x6000A4E")]
		[Address(RVA = "0xC3D714", Offset = "0xC3D714", VA = "0xC3D714")]
		public void open()
		{
		}

		[Token(Token = "0x6000A4F")]
		[Address(RVA = "0xC3D75C", Offset = "0xC3D75C", VA = "0xC3D75C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8576D0", Offset = "0x8576D0")]
		private IEnumerator open_co()
		{
			return null;
		}

		[Token(Token = "0x6000A50")]
		[Address(RVA = "0xC3D6D0", Offset = "0xC3D6D0", VA = "0xC3D6D0")]
		public void close()
		{
		}

		[Token(Token = "0x6000A51")]
		[Address(RVA = "0xC3D7DC", Offset = "0xC3D7DC", VA = "0xC3D7DC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857738", Offset = "0x857738")]
		private IEnumerator close_co()
		{
			return null;
		}

		[Token(Token = "0x6000A52")]
		[Address(RVA = "0xC3D85C", Offset = "0xC3D85C", VA = "0xC3D85C")]
		public door()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000169")]
	public class base_event : UnityEvent
	{
		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xC39358", Offset = "0xC39358", VA = "0xC39358")]
		public base_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016A")]
	public class npc_event : UnityEvent<npc>
	{
		[Token(Token = "0x6000A54")]
		[Address(RVA = "0xFF4098", Offset = "0xFF4098", VA = "0xFF4098")]
		public npc_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016B")]
	public class car_event : UnityEvent<car>
	{
		[Token(Token = "0x6000A55")]
		[Address(RVA = "0xC3BE78", Offset = "0xC3BE78", VA = "0xC3BE78")]
		public car_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016C")]
	public class heli_event : UnityEvent<heli>
	{
		[Token(Token = "0x6000A56")]
		[Address(RVA = "0xC5C8A8", Offset = "0xC5C8A8", VA = "0xC5C8A8")]
		public heli_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016D")]
	public class tool_event : UnityEvent<toolbase>
	{
		[Token(Token = "0x6000A57")]
		[Address(RVA = "0x101305C", Offset = "0x101305C", VA = "0x101305C")]
		public tool_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016E")]
	public class teleport_event : UnityEvent<teleport>
	{
		[Token(Token = "0x6000A58")]
		[Address(RVA = "0x100E1D0", Offset = "0x100E1D0", VA = "0x100E1D0")]
		public teleport_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200016F")]
	public class tool_firearm_event : UnityEvent<tool_firearm>
	{
		[Token(Token = "0x6000A59")]
		[Address(RVA = "0xE1EEA4", Offset = "0xE1EEA4", VA = "0xE1EEA4")]
		public tool_firearm_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000170")]
	public class tool_grenade_event : UnityEvent<tool_grenade>
	{
		[Token(Token = "0x6000A5A")]
		[Address(RVA = "0xE20818", Offset = "0xE20818", VA = "0xE20818")]
		public tool_grenade_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000171")]
	public class tool_flashbang_event : UnityEvent<tool_flashbang>
	{
		[Token(Token = "0x6000A5B")]
		[Address(RVA = "0xE1F630", Offset = "0xE1F630", VA = "0xE1F630")]
		public tool_flashbang_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000172")]
	public class tool_medikit_event : UnityEvent<tool_mdeikit>
	{
		[Token(Token = "0x6000A5C")]
		[Address(RVA = "0xE217A8", Offset = "0xE217A8", VA = "0xE217A8")]
		public tool_medikit_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000173")]
	public class bomb_event : UnityEvent<bomb>
	{
		[Token(Token = "0x6000A5D")]
		[Address(RVA = "0xC397E8", Offset = "0xC397E8", VA = "0xC397E8")]
		public bomb_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000174")]
	public class look_event : UnityEvent<look>
	{
		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xC9C2E0", Offset = "0xC9C2E0", VA = "0xC9C2E0")]
		public look_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000175")]
	public class player_trigger_event : UnityEvent<player_trigger>
	{
		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xFFB424", Offset = "0xFFB424", VA = "0xFFB424")]
		public player_trigger_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000176")]
	public class mpbutton_event : UnityEvent<mpButton>
	{
		[Token(Token = "0x6000A60")]
		[Address(RVA = "0x1F0F4AC", Offset = "0x1F0F4AC", VA = "0x1F0F4AC")]
		public mpbutton_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000177")]
	public class tool_firearm_shoot_event : UnityEvent<Vector3, Vector3>
	{
		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xE1EF4C", Offset = "0xE1EF4C", VA = "0xE1EF4C")]
		public tool_firearm_shoot_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000178")]
	public class tool_firearm_explode_event : UnityEvent<Vector3, Vector3>
	{
		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xE1EEF8", Offset = "0xE1EEF8", VA = "0xE1EEF8")]
		public tool_firearm_explode_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000179")]
	public class tool_grenade_explode_event : UnityEvent<Vector3, Vector3>
	{
		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xE2086C", Offset = "0xE2086C", VA = "0xE2086C")]
		public tool_grenade_explode_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017A")]
	public class shoot_event : UnityEvent<Vector3, Vector3>
	{
		[Token(Token = "0x6000A64")]
		[Address(RVA = "0x100602C", Offset = "0x100602C", VA = "0x100602C")]
		public shoot_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017B")]
	public class byte_event : UnityEvent<byte>
	{
		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xC3AEF4", Offset = "0xC3AEF4", VA = "0xC3AEF4")]
		public byte_event()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200017C")]
	public class bool_event : UnityEvent<bool>
	{
		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xC3983C", Offset = "0xC3983C", VA = "0xC3983C")]
		public bool_event()
		{
		}
	}
	[Token(Token = "0x200017D")]
	public class heli : MonoBehaviour
	{
		[Token(Token = "0x40008F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public path path;

		[Token(Token = "0x40008F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private point path_from;

		[Token(Token = "0x40008F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private point path_to;

		[Token(Token = "0x40008F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float drive_speed;

		[Token(Token = "0x40008F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float turn_speed;

		[Token(Token = "0x40008F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public heli_event on_path_complete;

		[Token(Token = "0x6000A67")]
		[Address(RVA = "0xC5C348", Offset = "0xC5C348", VA = "0xC5C348")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A68")]
		[Address(RVA = "0xC5C34C", Offset = "0xC5C34C", VA = "0xC5C34C")]
		public void set_path(path _path)
		{
		}

		[Token(Token = "0x6000A69")]
		[Address(RVA = "0xC5C510", Offset = "0xC5C510", VA = "0xC5C510")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A6A")]
		[Address(RVA = "0xC5C514", Offset = "0xC5C514", VA = "0xC5C514")]
		private void UpdateDrive()
		{
		}

		[Token(Token = "0x6000A6B")]
		[Address(RVA = "0xC5C898", Offset = "0xC5C898", VA = "0xC5C898")]
		public heli()
		{
		}
	}
	[Token(Token = "0x200017E")]
	public class hitable : MonoBehaviour
	{
		[Token(Token = "0x2000455")]
		public enum contexts
		{
			[Token(Token = "0x40020B7")]
			genric,
			[Token(Token = "0x40020B8")]
			bomb,
			[Token(Token = "0x40020B9")]
			npc,
			[Token(Token = "0x40020BA")]
			ui
		}

		[Token(Token = "0x40008F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public contexts context;

		[Token(Token = "0x40008F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool can_hit_by_npc;

		[Token(Token = "0x6000A6C")]
		[Address(RVA = "0xC5CAD4", Offset = "0xC5CAD4", VA = "0xC5CAD4", Slot = "4")]
		public virtual void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000A6D")]
		[Address(RVA = "0xC5CAD8", Offset = "0xC5CAD8", VA = "0xC5CAD8", Slot = "5")]
		public virtual void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000A6E")]
		[Address(RVA = "0xC5CADC", Offset = "0xC5CADC", VA = "0xC5CADC", Slot = "6")]
		public virtual void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xC5CAE0", Offset = "0xC5CAE0", VA = "0xC5CAE0", Slot = "7")]
		public virtual bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xC5CAE8", Offset = "0xC5CAE8", VA = "0xC5CAE8")]
		public hitable()
		{
		}
	}
	[Token(Token = "0x200017F")]
	public class horde_board : MonoBehaviour
	{
		[Token(Token = "0x2000456")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849784", Offset = "0x849784")]
		private sealed class <Start>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public horde_board <>4__this;

			[Token(Token = "0x17000253")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C25")]
				[Address(RVA = "0xFD6278", Offset = "0xFD6278", VA = "0xFD6278", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000254")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C27")]
				[Address(RVA = "0xFD62C0", Offset = "0xFD62C0", VA = "0xFD62C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C22")]
			[Address(RVA = "0xFD60B8", Offset = "0xFD60B8", VA = "0xFD60B8")]
			[DebuggerHidden]
			public <Start>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001C23")]
			[Address(RVA = "0xFD60E4", Offset = "0xFD60E4", VA = "0xFD60E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C24")]
			[Address(RVA = "0xFD60E8", Offset = "0xFD60E8", VA = "0xFD60E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C26")]
			[Address(RVA = "0xFD6280", Offset = "0xFD6280", VA = "0xFD6280", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40008F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string board_name;

		[Token(Token = "0x40008FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI ui_title;

		[Token(Token = "0x40008FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI ui_subtitle;

		[Token(Token = "0x40008FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI ui_column;

		[Token(Token = "0x40008FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI list_no;

		[Token(Token = "0x40008FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI list_text;

		[Token(Token = "0x40008FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI list_val;

		[Token(Token = "0x4000900")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public custombutton button;

		[Token(Token = "0x4000901")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI button_label;

		[Token(Token = "0x4000902")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float scale;

		[Token(Token = "0x4000903")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public bool dynamic;

		[Token(Token = "0x4000904")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x65")]
		public bool changeScale;

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xC5CAF0", Offset = "0xC5CAF0", VA = "0xC5CAF0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xC5CBD4", Offset = "0xC5CBD4", VA = "0xC5CBD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8577A0", Offset = "0x8577A0")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xC5CC54", Offset = "0xC5CC54", VA = "0xC5CC54")]
		public void redraw()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xC5CC58", Offset = "0xC5CC58", VA = "0xC5CC58")]
		private bool draw()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xC5D210", Offset = "0xC5D210", VA = "0xC5D210")]
		public horde_board()
		{
		}
	}
	[Token(Token = "0x2000180")]
	public class horde_lobby : hitable
	{
		[Token(Token = "0x2000457")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849794", Offset = "0x849794")]
		private sealed class <hide_error>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40020C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public horde_lobby <>4__this;

			[Token(Token = "0x17000255")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C2B")]
				[Address(RVA = "0xFD63B4", Offset = "0xFD63B4", VA = "0xFD63B4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000256")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C2D")]
				[Address(RVA = "0xFD63FC", Offset = "0xFD63FC", VA = "0xFD63FC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C28")]
			[Address(RVA = "0xFD62C8", Offset = "0xFD62C8", VA = "0xFD62C8")]
			[DebuggerHidden]
			public <hide_error>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001C29")]
			[Address(RVA = "0xFD62F4", Offset = "0xFD62F4", VA = "0xFD62F4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C2A")]
			[Address(RVA = "0xFD62F8", Offset = "0xFD62F8", VA = "0xFD62F8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C2C")]
			[Address(RVA = "0xFD63BC", Offset = "0xFD63BC", VA = "0xFD63BC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000905")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI horde_best_score;

		[Token(Token = "0x4000906")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI horde_last_score;

		[Token(Token = "0x4000907")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject comingsoon;

		[Token(Token = "0x4000908")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public tool_laptop laptop;

		[Token(Token = "0x4000909")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform buttonenter;

		[Token(Token = "0x400090A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject hover;

		[Token(Token = "0x400090B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float scale;

		[Token(Token = "0x400090C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float toscale;

		[Token(Token = "0x400090D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public sound source;

		[Token(Token = "0x400090E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject error_window;

		[Token(Token = "0x400090F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI error_message;

		[Token(Token = "0x4000910")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Coroutine hide_error_co;

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xC5D284", Offset = "0xC5D284", VA = "0xC5D284")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xC5D440", Offset = "0xC5D440", VA = "0xC5D440")]
		private void set_error(string message, float delay = 5f)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xC5D578", Offset = "0xC5D578", VA = "0xC5D578")]
		private void hide_error()
		{
		}

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xC5D4E8", Offset = "0xC5D4E8", VA = "0xC5D4E8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857808", Offset = "0x857808")]
		private IEnumerator hide_error(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xC5D5BC", Offset = "0xC5D5BC", VA = "0xC5D5BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A7B")]
		[Address(RVA = "0xC5D670", Offset = "0xC5D670", VA = "0xC5D670", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xC5D678", Offset = "0xC5D678", VA = "0xC5D678", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xC5D948", Offset = "0xC5D948", VA = "0xC5D948", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xC5D9E8", Offset = "0xC5D9E8", VA = "0xC5D9E8", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000A7F")]
		[Address(RVA = "0xC5DA0C", Offset = "0xC5DA0C", VA = "0xC5DA0C")]
		public horde_lobby()
		{
		}
	}
	[Token(Token = "0x2000181")]
	public class hud : MonoBehaviour
	{
		[Token(Token = "0x2000458")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8497A4", Offset = "0x8497A4")]
		private sealed class <typing>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string str;

			[Token(Token = "0x40020C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public hud <>4__this;

			[Token(Token = "0x40020C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x40020C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool show_skip;

			[Token(Token = "0x40020C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float ttl;

			[Token(Token = "0x40020C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__2;

			[Token(Token = "0x40020CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private char[] <chars>5__3;

			[Token(Token = "0x40020CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <strlen>5__4;

			[Token(Token = "0x17000257")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C31")]
				[Address(RVA = "0xFD69FC", Offset = "0xFD69FC", VA = "0xFD69FC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000258")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C33")]
				[Address(RVA = "0xFD6A44", Offset = "0xFD6A44", VA = "0xFD6A44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C2E")]
			[Address(RVA = "0xFD6404", Offset = "0xFD6404", VA = "0xFD6404")]
			[DebuggerHidden]
			public <typing>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001C2F")]
			[Address(RVA = "0xFD6430", Offset = "0xFD6430", VA = "0xFD6430", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C30")]
			[Address(RVA = "0xFD6434", Offset = "0xFD6434", VA = "0xFD6434", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C32")]
			[Address(RVA = "0xFD6A04", Offset = "0xFD6A04", VA = "0xFD6A04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000911")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CurvedUISettings curved_ui_settings;

		[Token(Token = "0x4000912")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject skip;

		[Token(Token = "0x4000913")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI subtitles;

		[Token(Token = "0x4000914")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CurvedUITMP subtitles_tmp;

		[Token(Token = "0x4000915")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Coroutine typing_co;

		[Token(Token = "0x4000916")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private base_event on_subtitles_end;

		[Token(Token = "0x4000917")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject GameOver;

		[Token(Token = "0x4000918")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Transform LookAtTarget;

		[Token(Token = "0x4000919")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform LookAtArrow;

		[Token(Token = "0x400091A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool lookat_back;

		[Token(Token = "0x400091B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float lookat_close_range;

		[Token(Token = "0x400091C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float lookat_back_range;

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xC5DA1C", Offset = "0xC5DA1C", VA = "0xC5DA1C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xC5DAE4", Offset = "0xC5DAE4", VA = "0xC5DAE4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xC5DE44", Offset = "0xC5DE44", VA = "0xC5DE44")]
		public void set_lookat(Transform target)
		{
		}

		[Token(Token = "0x6000A83")]
		[Address(RVA = "0xC5DC14", Offset = "0xC5DC14", VA = "0xC5DC14")]
		private void update_lookat()
		{
		}

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xC5DA50", Offset = "0xC5DA50", VA = "0xC5DA50")]
		public void hide_subtitles()
		{
		}

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xC5DED4", Offset = "0xC5DED4", VA = "0xC5DED4")]
		public void set_subtitles([Optional] string str, float duration = -1f, [Optional] UnityAction callback, bool show_skip = true, float ttl = -1f)
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xC5DFFC", Offset = "0xC5DFFC", VA = "0xC5DFFC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857870", Offset = "0x857870")]
		private IEnumerator typing(string str, float duration, bool show_skip, float ttl = -1f)
		{
			return null;
		}

		[Token(Token = "0x6000A87")]
		[Address(RVA = "0xC5DE50", Offset = "0xC5DE50", VA = "0xC5DE50")]
		private void update_subtitles_text(string str)
		{
		}

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xC5E0BC", Offset = "0xC5E0BC", VA = "0xC5E0BC")]
		public hud()
		{
		}
	}
	[Token(Token = "0x2000182")]
	public class impact : MonoBehaviour
	{
		[Token(Token = "0x400091D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public impacts impacts;

		[Token(Token = "0x400091E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem particles;

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xC5E0D0", Offset = "0xC5E0D0", VA = "0xC5E0D0")]
		public void play(Vector3 position, Vector3 normal, Collider col)
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xC5E300", Offset = "0xC5E300", VA = "0xC5E300")]
		public impact()
		{
		}
	}
	[Token(Token = "0x2000183")]
	public class impacts : MonoBehaviour
	{
		[Token(Token = "0x400091F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static impacts instance;

		[Token(Token = "0x4000920")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public impact effect;

		[Token(Token = "0x4000921")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private int max_pool;

		[Token(Token = "0x4000922")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<impact> pool;

		[Token(Token = "0x4000923")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int index;

		[Token(Token = "0x6000A8B")]
		[Address(RVA = "0xC5E308", Offset = "0xC5E308", VA = "0xC5E308")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xC5E3A0", Offset = "0xC5E3A0", VA = "0xC5E3A0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xC5E3E4", Offset = "0xC5E3E4", VA = "0xC5E3E4")]
		private impact get()
		{
			return null;
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xC5E694", Offset = "0xC5E694", VA = "0xC5E694")]
		public void spawn(Vector3 position, Vector3 normal, Collider col)
		{
		}

		[Token(Token = "0x6000A8F")]
		[Address(RVA = "0xC5E708", Offset = "0xC5E708", VA = "0xC5E708")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xC5E770", Offset = "0xC5E770", VA = "0xC5E770")]
		public impacts()
		{
		}
	}
	[Token(Token = "0x2000184")]
	public class level_menu : hitable
	{
		[Token(Token = "0x4000924")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject circle_easy;

		[Token(Token = "0x4000925")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject circle_hard;

		[Token(Token = "0x4000926")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject circle_insane;

		[Token(Token = "0x4000927")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject hover;

		[Token(Token = "0x4000928")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject completed;

		[Token(Token = "0x4000929")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject hidden;

		[Token(Token = "0x400092A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject visible;

		[Token(Token = "0x400092B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject comingsoon;

		[Token(Token = "0x400092C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool demo;

		[Token(Token = "0x400092D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string levelname;

		[Token(Token = "0x400092E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string[] required_levels;

		[Token(Token = "0x400092F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool locked;

		[Token(Token = "0x4000930")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float lasthit;

		[Token(Token = "0x4000931")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float scale;

		[Token(Token = "0x4000932")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float toscale;

		[Token(Token = "0x4000933")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private sound source;

		[Token(Token = "0x4000934")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private bool can_play;

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xC9ACD4", Offset = "0xC9ACD4", VA = "0xC9ACD4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A93")]
		[Address(RVA = "0xC9B280", Offset = "0xC9B280", VA = "0xC9B280")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xC9B35C", Offset = "0xC9B35C", VA = "0xC9B35C", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xC9B364", Offset = "0xC9B364", VA = "0xC9B364", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xC9B5BC", Offset = "0xC9B5BC", VA = "0xC9B5BC", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000A97")]
		[Address(RVA = "0xC9B618", Offset = "0xC9B618", VA = "0xC9B618", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000A98")]
		[Address(RVA = "0xC9B648", Offset = "0xC9B648", VA = "0xC9B648")]
		public level_menu()
		{
		}
	}
	[Token(Token = "0x2000185")]
	public class lobby_contests : hitable
	{
		[Token(Token = "0x2000459")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8497B4", Offset = "0x8497B4")]
		private sealed class <hide_error>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40020CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40020CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40020CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x40020CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public lobby_contests <>4__this;

			[Token(Token = "0x17000259")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C37")]
				[Address(RVA = "0xD2B0DC", Offset = "0xD2B0DC", VA = "0xD2B0DC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C39")]
				[Address(RVA = "0xD2B124", Offset = "0xD2B124", VA = "0xD2B124", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C34")]
			[Address(RVA = "0xD2AFF0", Offset = "0xD2AFF0", VA = "0xD2AFF0")]
			[DebuggerHidden]
			public <hide_error>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001C35")]
			[Address(RVA = "0xD2B01C", Offset = "0xD2B01C", VA = "0xD2B01C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C36")]
			[Address(RVA = "0xD2B020", Offset = "0xD2B020", VA = "0xD2B020", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C38")]
			[Address(RVA = "0xD2B0E4", Offset = "0xD2B0E4", VA = "0xD2B0E4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000935")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<npc> enemies;

		[Token(Token = "0x4000936")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject comingsoon;

		[Token(Token = "0x4000937")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public tool_laptop laptop;

		[Token(Token = "0x4000938")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform buttonenter;

		[Token(Token = "0x4000939")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject hover;

		[Token(Token = "0x400093A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float scale;

		[Token(Token = "0x400093B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float toscale;

		[Token(Token = "0x400093C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound source;

		[Token(Token = "0x400093D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI ui_your_score;

		[Token(Token = "0x400093E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TextMeshProUGUI ui_tickets_left;

		[Token(Token = "0x400093F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject error_window;

		[Token(Token = "0x4000940")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI error_message;

		[Token(Token = "0x4000941")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine hide_error_co;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xC9B858", Offset = "0xC9B858", VA = "0xC9B858")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xC9BA4C", Offset = "0xC9BA4C", VA = "0xC9BA4C")]
		private void set_error(string message, float delay = 5f)
		{
		}

		[Token(Token = "0x6000A9C")]
		[Address(RVA = "0xC9BB84", Offset = "0xC9BB84", VA = "0xC9BB84")]
		private void hide_error()
		{
		}

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xC9BAF4", Offset = "0xC9BAF4", VA = "0xC9BAF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8578D8", Offset = "0x8578D8")]
		private IEnumerator hide_error(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xC9BBC8", Offset = "0xC9BBC8", VA = "0xC9BBC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xC9BCE8", Offset = "0xC9BCE8", VA = "0xC9BCE8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AA0")]
		[Address(RVA = "0xC9BD9C", Offset = "0xC9BD9C", VA = "0xC9BD9C", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xC9BDA4", Offset = "0xC9BDA4", VA = "0xC9BDA4", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xC9C078", Offset = "0xC9C078", VA = "0xC9C078", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xC9C118", Offset = "0xC9C118", VA = "0xC9C118", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000AA4")]
		[Address(RVA = "0xC9C13C", Offset = "0xC9C13C", VA = "0xC9C13C")]
		public lobby_contests()
		{
		}
	}
	[Token(Token = "0x2000186")]
	[SelectionBase]
	public class npc : MonoBehaviour
	{
		[Token(Token = "0x200045A")]
		public enum sides
		{
			[Token(Token = "0x40020D1")]
			enemy,
			[Token(Token = "0x40020D2")]
			civilian,
			[Token(Token = "0x40020D3")]
			friend
		}

		[Token(Token = "0x200045B")]
		public enum hitmodes
		{
			[Token(Token = "0x40020D5")]
			None,
			[Token(Token = "0x40020D6")]
			HitAnimation,
			[Token(Token = "0x40020D7")]
			KillAnimation,
			[Token(Token = "0x40020D8")]
			Ragdoll
		}

		[Token(Token = "0x200045C")]
		public enum states
		{
			[Token(Token = "0x40020DA")]
			idle,
			[Token(Token = "0x40020DB")]
			attack,
			[Token(Token = "0x40020DC")]
			reload,
			[Token(Token = "0x40020DD")]
			walk,
			[Token(Token = "0x40020DE")]
			run,
			[Token(Token = "0x40020DF")]
			guard,
			[Token(Token = "0x40020E0")]
			crouch,
			[Token(Token = "0x40020E1")]
			jump,
			[Token(Token = "0x40020E2")]
			air,
			[Token(Token = "0x40020E3")]
			land,
			[Token(Token = "0x40020E4")]
			climb,
			[Token(Token = "0x40020E5")]
			hits,
			[Token(Token = "0x40020E6")]
			kills,
			[Token(Token = "0x40020E7")]
			getup,
			[Token(Token = "0x40020E8")]
			idles,
			[Token(Token = "0x40020E9")]
			talk,
			[Token(Token = "0x40020EA")]
			salute,
			[Token(Token = "0x40020EB")]
			yes,
			[Token(Token = "0x40020EC")]
			no,
			[Token(Token = "0x40020ED")]
			cry,
			[Token(Token = "0x40020EE")]
			laugh,
			[Token(Token = "0x40020EF")]
			happy,
			[Token(Token = "0x40020F0")]
			angry,
			[Token(Token = "0x40020F1")]
			dance,
			[Token(Token = "0x40020F2")]
			greet,
			[Token(Token = "0x40020F3")]
			knock,
			[Token(Token = "0x40020F4")]
			frustration,
			[Token(Token = "0x40020F5")]
			lying,
			[Token(Token = "0x40020F6")]
			pickup,
			[Token(Token = "0x40020F7")]
			meditate,
			[Token(Token = "0x40020F8")]
			chair,
			[Token(Token = "0x40020F9")]
			chair_talk,
			[Token(Token = "0x40020FA")]
			chair_cry,
			[Token(Token = "0x40020FB")]
			chair_laugh,
			[Token(Token = "0x40020FC")]
			chair_typing,
			[Token(Token = "0x40020FD")]
			melee,
			[Token(Token = "0x40020FE")]
			dance2
		}

		[Token(Token = "0x200045D")]
		public enum directions
		{
			[Token(Token = "0x4002100")]
			none,
			[Token(Token = "0x4002101")]
			front,
			[Token(Token = "0x4002102")]
			back,
			[Token(Token = "0x4002103")]
			right,
			[Token(Token = "0x4002104")]
			left
		}

		[Token(Token = "0x200045E")]
		public enum looktype
		{
			[Token(Token = "0x4002106")]
			look,
			[Token(Token = "0x4002107")]
			aim
		}

		[Token(Token = "0x200045F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8497C4", Offset = "0x8497C4")]
		private sealed class <unload_coroutine>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002108")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002109")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400210A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400210B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public npc <>4__this;

			[Token(Token = "0x1700025B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C3D")]
				[Address(RVA = "0xD2E634", Offset = "0xD2E634", VA = "0xD2E634", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C3F")]
				[Address(RVA = "0xD2E67C", Offset = "0xD2E67C", VA = "0xD2E67C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C3A")]
			[Address(RVA = "0xD2E548", Offset = "0xD2E548", VA = "0xD2E548")]
			[DebuggerHidden]
			public <unload_coroutine>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6001C3B")]
			[Address(RVA = "0xD2E574", Offset = "0xD2E574", VA = "0xD2E574", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C3C")]
			[Address(RVA = "0xD2E578", Offset = "0xD2E578", VA = "0xD2E578", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C3E")]
			[Address(RVA = "0xD2E63C", Offset = "0xD2E63C", VA = "0xD2E63C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000460")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8497D4", Offset = "0x8497D4")]
		private sealed class <RestoreRun>d__157 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400210C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400210D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400210E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public npc <>4__this;

			[Token(Token = "0x400210F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 target;

			[Token(Token = "0x4002110")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool restore_rotaion;

			[Token(Token = "0x4002111")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__2;

			[Token(Token = "0x4002112")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__3;

			[Token(Token = "0x4002113")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion <rot>5__4;

			[Token(Token = "0x1700025D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C43")]
				[Address(RVA = "0xD2E4F8", Offset = "0xD2E4F8", VA = "0xD2E4F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700025E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C45")]
				[Address(RVA = "0xD2E540", Offset = "0xD2E540", VA = "0xD2E540", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C40")]
			[Address(RVA = "0xD2E0DC", Offset = "0xD2E0DC", VA = "0xD2E0DC")]
			[DebuggerHidden]
			public <RestoreRun>d__157(int <>1__state)
			{
			}

			[Token(Token = "0x6001C41")]
			[Address(RVA = "0xD2E108", Offset = "0xD2E108", VA = "0xD2E108", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C42")]
			[Address(RVA = "0xD2E10C", Offset = "0xD2E10C", VA = "0xD2E10C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C44")]
			[Address(RVA = "0xD2E500", Offset = "0xD2E500", VA = "0xD2E500", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000461")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8497E4", Offset = "0x8497E4")]
		private sealed class <RestoreJump>d__158 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002114")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002115")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002116")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public npc <>4__this;

			[Token(Token = "0x4002117")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 target;

			[Token(Token = "0x4002118")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool restore_rotaion;

			[Token(Token = "0x4002119")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <origin>5__2;

			[Token(Token = "0x400211A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <height>5__3;

			[Token(Token = "0x400211B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <duration>5__4;

			[Token(Token = "0x400211C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <pass>5__5;

			[Token(Token = "0x400211D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Quaternion <rot>5__6;

			[Token(Token = "0x1700025F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C49")]
				[Address(RVA = "0xD2E08C", Offset = "0xD2E08C", VA = "0xD2E08C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000260")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C4B")]
				[Address(RVA = "0xD2E0D4", Offset = "0xD2E0D4", VA = "0xD2E0D4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C46")]
			[Address(RVA = "0xD2DBC0", Offset = "0xD2DBC0", VA = "0xD2DBC0")]
			[DebuggerHidden]
			public <RestoreJump>d__158(int <>1__state)
			{
			}

			[Token(Token = "0x6001C47")]
			[Address(RVA = "0xD2DBEC", Offset = "0xD2DBEC", VA = "0xD2DBEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C48")]
			[Address(RVA = "0xD2DBF0", Offset = "0xD2DBF0", VA = "0xD2DBF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C4A")]
			[Address(RVA = "0xD2E094", Offset = "0xD2E094", VA = "0xD2E094", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000942")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool buttons;

		[Token(Token = "0x4000943")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public path path;

		[Token(Token = "0x4000944")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public path alt_path;

		[Token(Token = "0x4000945")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public sides side;

		[Token(Token = "0x4000946")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private weapon WeaponSetter;

		[Token(Token = "0x4000947")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool RandomWeaponOnAwake;

		[Token(Token = "0x4000948")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[HideInInspector]
		private weapon weapon;

		[Token(Token = "0x4000949")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public NavMeshAgent agent;

		[Token(Token = "0x400094A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform right_hand;

		[Token(Token = "0x400094B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform left_hand;

		[Token(Token = "0x400094C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Animator ani;

		[Token(Token = "0x400094D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public RuntimeAnimatorController baseAnimatorController;

		[Token(Token = "0x400094E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public syncbones syncbones;

		[Token(Token = "0x400094F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public ragdoll ragdoll;

		[Token(Token = "0x4000950")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int health;

		[Token(Token = "0x4000951")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool onair;

		[Token(Token = "0x4000952")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8D")]
		[HideInInspector]
		public bool alive;

		[Token(Token = "0x4000953")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8E")]
		private bool recovery;

		[Token(Token = "0x4000954")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private hitmodes recovery_mode;

		[Token(Token = "0x4000955")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float recovery_delay;

		[Token(Token = "0x4000956")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool recovery_manually_locked;

		[Token(Token = "0x4000957")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private float recovery_time;

		[Token(Token = "0x4000958")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float recovery_duration_max;

		[Token(Token = "0x4000959")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float recovery_duration;

		[Token(Token = "0x400095A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public bool can_be_hit_on_recovery;

		[Token(Token = "0x400095B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		public bool can_be_hit;

		[Token(Token = "0x400095C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAA")]
		public bool can_be_killed;

		[Token(Token = "0x400095D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public hitmodes hitmode;

		[Token(Token = "0x400095E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public hitmodes killmode;

		[Token(Token = "0x400095F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public states state;

		[Token(Token = "0x4000960")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public directions dir;

		[Token(Token = "0x4000961")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private bool ani_need_update;

		[Token(Token = "0x4000962")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int ani_frame_update;

		[Token(Token = "0x4000963")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private states last_frame_state;

		[Token(Token = "0x4000964")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private states last_state;

		[Token(Token = "0x4000965")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int last_state_val;

		[Token(Token = "0x4000966")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int state_index;

		[Token(Token = "0x4000967")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private bool kill_state_ended;

		[Token(Token = "0x4000968")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float last_hit;

		[Token(Token = "0x4000969")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool look;

		[Token(Token = "0x400096A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		public bool look_transform;

		[Token(Token = "0x400096B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public looktype lookmode;

		[Token(Token = "0x400096C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public bool attack_player_eyes;

		[Token(Token = "0x400096D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform look_target;

		[Token(Token = "0x400096E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float look_transform_offset;

		[Token(Token = "0x400096F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float lookheadweight;

		[Token(Token = "0x4000970")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float lookbodyweight;

		[Token(Token = "0x4000971")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float lookspeed;

		[Token(Token = "0x4000972")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool combat;

		[Token(Token = "0x4000973")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x101")]
		public bool attack_projectile;

		[Token(Token = "0x4000974")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float attack_accuracy_distance;

		[Token(Token = "0x4000975")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float attack_first_delay;

		[Token(Token = "0x4000976")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float attack_speed;

		[Token(Token = "0x4000977")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public float attack_reload_margin;

		[Token(Token = "0x4000978")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public float attack_hit_margin;

		[Token(Token = "0x4000979")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public float attack_shoot_margin;

		[Token(Token = "0x400097A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		[HideInInspector]
		public float attack_margin_end;

		[Token(Token = "0x400097B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public int attack_damage;

		[Token(Token = "0x400097C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Transform attack_origin;

		[Token(Token = "0x400097D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private RaycastHit ray_hit;

		[Token(Token = "0x400097E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public sound sound;

		[Token(Token = "0x400097F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public float weapon_scale;

		[Token(Token = "0x4000980")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public weapon[] weapons;

		[Token(Token = "0x4000981")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public npc_event on_hit;

		[Token(Token = "0x4000982")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public npc_event on_path_complete;

		[Token(Token = "0x4000983")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public float unload_delay;

		[Token(Token = "0x4000984")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private float ikspeed;

		[Token(Token = "0x4000985")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public bool ik_hand_right;

		[Token(Token = "0x4000986")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		private float ik_hand_right_weight;

		[Token(Token = "0x4000987")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Transform ik_hand_right_target;

		[Token(Token = "0x4000988")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public bool ik_hand_left;

		[Token(Token = "0x4000989")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private float ik_hand_left_weight;

		[Token(Token = "0x400098A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Transform ik_hand_left_target;

		[Token(Token = "0x400098B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Vector3 restore_last_position;

		[Token(Token = "0x400098C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		private Quaternion restore_last_rotation;

		[Token(Token = "0x400098D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		public bool restore_last_position_enabled;

		[Token(Token = "0x400098E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CD")]
		public bool restore_last_rotation_enabled;

		[Token(Token = "0x400098F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private Coroutine RestoreMovement;

		[Token(Token = "0x4000990")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public bool count_as_progress;

		[Token(Token = "0x4000991")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		public bool headshoot_enabled;

		[Token(Token = "0x4000992")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private GameObject headshoot_head;

		[Token(Token = "0x4000993")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool has_crouch_cover;

		[Token(Token = "0x4000994")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E9")]
		[HideInInspector]
		public bool hit_by_headshoot;

		[Token(Token = "0x4000995")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EA")]
		[HideInInspector]
		public bool hit_on_air;

		[Token(Token = "0x4000996")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EB")]
		private bool first_stuck_test;

		[Token(Token = "0x4000997")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		[HideInInspector]
		public bool is_stuck;

		[Token(Token = "0x4000998")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1ED")]
		private bool last_stuck_result;

		[Token(Token = "0x4000999")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float next_stuck_test;

		[Token(Token = "0x400099A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float stuck_test_interval;

		[Token(Token = "0x400099B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private point path_from;

		[Token(Token = "0x400099C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private point path_to;

		[Token(Token = "0x400099D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private bool path_completed;

		[Token(Token = "0x400099E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x209")]
		private bool path_stopped;

		[Token(Token = "0x400099F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private float point_stay;

		[Token(Token = "0x40009A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public float speed_guard;

		[Token(Token = "0x40009A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		public float speed_walk;

		[Token(Token = "0x40009A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public float speed_run;

		[Token(Token = "0x40009A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21C")]
		private float speed_climb;

		[Token(Token = "0x40009A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private float speed_turn_factor;

		[Token(Token = "0x40009A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		public float arrived_distance;

		[Token(Token = "0x40009A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private point_props props;

		[Token(Token = "0x40009A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public float jump_speed;

		[Token(Token = "0x40009A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private float jump_pass;

		[Token(Token = "0x40009A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float jump_duration;

		[Token(Token = "0x40009AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private float jump_duration_min;

		[Token(Token = "0x40009AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float jump_duration_max;

		[Token(Token = "0x40009AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private bool jump_land;

		[Token(Token = "0x40009AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x245")]
		private bool ai_paused;

		[Token(Token = "0x40009AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x246")]
		private bool ai_resuming;

		[Token(Token = "0x40009AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float next_crouch;

		[Token(Token = "0x40009B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		public float RestoreJumpHeight;

		[Token(Token = "0x40009B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public bool is_zombie;

		[Token(Token = "0x40009B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x251")]
		private bool _zombie_init;

		[Token(Token = "0x40009B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public RuntimeAnimatorController zombie_crawl;

		[Token(Token = "0x40009B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public RuntimeAnimatorController zombie_broken;

		[Token(Token = "0x40009B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public RuntimeAnimatorController zombie_aggresive;

		[Token(Token = "0x40009B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private float zombie_next_idle_sound;

		[Token(Token = "0x40009B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static float zombie_next_idle_global;

		[Token(Token = "0x40009B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x274")]
		public float zombie_speed;

		[Token(Token = "0x40009B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public bool agent_enabled;

		[Token(Token = "0x40009BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x279")]
		public bool agent_run;

		[Token(Token = "0x40009BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x27A")]
		public bool agent_follow_player;

		[Token(Token = "0x40009BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public Transform agent_destination_target;

		[Token(Token = "0x40009BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private Vector3 agent_destination_position;

		[Token(Token = "0x40009BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x294")]
		private bool agent_destination_position_active;

		[Token(Token = "0x40009BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x295")]
		public bool agent_patrol_loop;

		[Token(Token = "0x40009C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x296")]
		public bool agent_attack_on_move;

		[Token(Token = "0x40009C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x297")]
		private bool _agent_init;

		[Token(Token = "0x40009C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private bool agent_on_link;

		[Token(Token = "0x40009C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private float agent_next_destination;

		[Token(Token = "0x40009C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private float agent_stop_distance;

		[Token(Token = "0x40009C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A4")]
		private float agent_stop_distance_from_player;

		[Token(Token = "0x40009C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private bool first_jump;

		[Token(Token = "0x40009C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A9")]
		public bool blocking_enabled;

		[Token(Token = "0x40009C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2AC")]
		private float blocking_cooldown;

		[Token(Token = "0x40009C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public float improve_every_seconds;

		[Token(Token = "0x40009CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private float improve_next;

		[Token(Token = "0x40009CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private float org_attack_accuracy_distance;

		[Token(Token = "0x40009CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2BC")]
		private float org_attack_speed;

		[Token(Token = "0x40009CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private float org_attack_hit_margin;

		[Token(Token = "0x40009CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private float org_attack_shoot_margin;

		[Token(Token = "0x40009CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private int org_attack_damage;

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0x1F1937C", Offset = "0x1F1937C", VA = "0x1F1937C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0x1F199A8", Offset = "0x1F199A8", VA = "0x1F199A8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0x1F199AC", Offset = "0x1F199AC", VA = "0x1F199AC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AA8")]
		[Address(RVA = "0x1F1AE48", Offset = "0x1F1AE48", VA = "0x1F1AE48")]
		public void free_stuck()
		{
		}

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0x1F1AAF8", Offset = "0x1F1AAF8", VA = "0x1F1AAF8")]
		private void update_stuck()
		{
		}

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0x1F1AE7C", Offset = "0x1F1AE7C", VA = "0x1F1AE7C")]
		public void WinLevelMode()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0x1F197B8", Offset = "0x1F197B8", VA = "0x1F197B8")]
		public void SetWeapon(weapon newWeapon)
		{
		}

		[Token(Token = "0x6000AAC")]
		[Address(RVA = "0x1F19670", Offset = "0x1F19670", VA = "0x1F19670")]
		public void SetAnimator(bool toWeapon)
		{
		}

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0x1F1B328", Offset = "0x1F1B328", VA = "0x1F1B328")]
		public void unload()
		{
		}

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0x1F1B43C", Offset = "0x1F1B43C", VA = "0x1F1B43C")]
		public void unload(float delay)
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0x1F1B468", Offset = "0x1F1B468", VA = "0x1F1B468")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857940", Offset = "0x857940")]
		private IEnumerator unload_coroutine(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000AB0")]
		[Address(RVA = "0x1F1B4F8", Offset = "0x1F1B4F8", VA = "0x1F1B4F8")]
		private bool is_grounded()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0x1F1B508", Offset = "0x1F1B508", VA = "0x1F1B508")]
		private bool have_ragdoll()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0x1F1B598", Offset = "0x1F1B598", VA = "0x1F1B598")]
		private void update_recovery()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0x1F1B79C", Offset = "0x1F1B79C", VA = "0x1F1B79C")]
		public void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage, bool headshoot = false)
		{
		}

		[Token(Token = "0x6000AB4")]
		[Address(RVA = "0x1F1BC68", Offset = "0x1F1BC68", VA = "0x1F1BC68")]
		private bool headshoot_execute()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0x1F1A908", Offset = "0x1F1A908", VA = "0x1F1A908")]
		private void update_animator()
		{
		}

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0x1F1C9E4", Offset = "0x1F1C9E4", VA = "0x1F1C9E4")]
		private void update_state()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0x1F1B300", Offset = "0x1F1B300", VA = "0x1F1B300")]
		public void update_state(states _state, directions _dir)
		{
		}

		[Token(Token = "0x6000AB8")]
		[Address(RVA = "0x1F1C9F0", Offset = "0x1F1C9F0", VA = "0x1F1C9F0")]
		private int set_last_animator_state(states _state, int val, int val_max = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0x1F1C384", Offset = "0x1F1C384", VA = "0x1F1C384")]
		private int get_animator_state()
		{
			return default(int);
		}

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0x1F1CA64", Offset = "0x1F1CA64", VA = "0x1F1CA64")]
		public void animator_state_ended()
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0x1F1CCD8", Offset = "0x1F1CCD8", VA = "0x1F1CCD8")]
		private int look_level()
		{
			return default(int);
		}

		[Token(Token = "0x6000ABC")]
		[Address(RVA = "0x1F1CD78", Offset = "0x1F1CD78", VA = "0x1F1CD78")]
		private void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0x1F1B67C", Offset = "0x1F1B67C", VA = "0x1F1B67C")]
		public void GetUp()
		{
		}

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0x1F1CB98", Offset = "0x1F1CB98", VA = "0x1F1CB98")]
		private bool GetUpCompleted()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0x1F1D418", Offset = "0x1F1D418", VA = "0x1F1D418")]
		public void SnapToPath()
		{
		}

		[Token(Token = "0x6000AC0")]
		[Address(RVA = "0x1F1D554", Offset = "0x1F1D554", VA = "0x1F1D554")]
		public void ReplacePath()
		{
		}

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0x1F1D560", Offset = "0x1F1D560", VA = "0x1F1D560")]
		public void Editor_Headshoot()
		{
		}

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0x1F1D5EC", Offset = "0x1F1D5EC", VA = "0x1F1D5EC")]
		public void Editor_Hit()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0x1F1D678", Offset = "0x1F1D678", VA = "0x1F1D678")]
		public void Editor_SetWeapon()
		{
		}

		[Token(Token = "0x6000AC4")]
		[Address(RVA = "0x1F1D680", Offset = "0x1F1D680", VA = "0x1F1D680")]
		public void Editor_ClearWeapon()
		{
		}

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0x1F1D6B8", Offset = "0x1F1D6B8", VA = "0x1F1D6B8")]
		public void update_path_point(point point)
		{
		}

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0x1F1D790", Offset = "0x1F1D790", VA = "0x1F1D790")]
		private void add_attack_margin(float seconds)
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0x1F1D7E4", Offset = "0x1F1D7E4", VA = "0x1F1D7E4")]
		public void player_hit()
		{
		}

		[Token(Token = "0x6000AC8")]
		[Address(RVA = "0x1F1D7EC", Offset = "0x1F1D7EC", VA = "0x1F1D7EC")]
		public bool ai_busy()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0x1F1D908", Offset = "0x1F1D908", VA = "0x1F1D908")]
		public void fake_attack()
		{
		}

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0x1F1D9A0", Offset = "0x1F1D9A0", VA = "0x1F1D9A0")]
		public void path_resume()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0x1F1AF84", Offset = "0x1F1AF84", VA = "0x1F1AF84")]
		public void set_path(path _path, bool snap = true)
		{
		}

		[Token(Token = "0x6000ACC")]
		[Address(RVA = "0x1F1D9A8", Offset = "0x1F1D9A8", VA = "0x1F1D9A8")]
		public Quaternion GetMovementRotation(Vector3 target, directions dir)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0x1F1DB4C", Offset = "0x1F1DB4C", VA = "0x1F1DB4C")]
		private Vector3 NearestPointOnFiniteLine(Vector3 start, Vector3 end, Vector3 pnt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0x1F1DC20", Offset = "0x1F1DC20", VA = "0x1F1DC20")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8579A8", Offset = "0x8579A8")]
		private IEnumerator RestoreRun(Vector3 target, bool restore_rotaion)
		{
			return null;
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0x1F1DCD0", Offset = "0x1F1DCD0", VA = "0x1F1DCD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857A10", Offset = "0x857A10")]
		private IEnumerator RestoreJump(Vector3 target, bool restore_rotaion)
		{
			return null;
		}

		[Token(Token = "0x6000AD0")]
		[Address(RVA = "0x1F1D334", Offset = "0x1F1D334", VA = "0x1F1D334")]
		public void StartRestoreMovement(Vector3 target, bool force_jump, bool restore_rotaion)
		{
		}

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0x1F1DD80", Offset = "0x1F1DD80", VA = "0x1F1DD80")]
		public bool JumpTo(Vector3 target)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0x1F1DE58", Offset = "0x1F1DE58", VA = "0x1F1DE58")]
		private void StationaryToMovementAI()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0x1F1DFAC", Offset = "0x1F1DFAC", VA = "0x1F1DFAC")]
		private void StationaryAI(float delta)
		{
		}

		[Token(Token = "0x6000AD4")]
		[Address(RVA = "0x1F1E2B0", Offset = "0x1F1E2B0", VA = "0x1F1E2B0")]
		private bool AttackAI(float delta, bool update_attack_state = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0x1F1E844", Offset = "0x1F1E844", VA = "0x1F1E844")]
		public void zombie_init()
		{
		}

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0x1F1EBE0", Offset = "0x1F1EBE0", VA = "0x1F1EBE0")]
		private void zombie_idle()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0x1F1E664", Offset = "0x1F1E664", VA = "0x1F1E664")]
		private bool zombie_update()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AD8")]
		[Address(RVA = "0x1F1ED28", Offset = "0x1F1ED28", VA = "0x1F1ED28")]
		private void zombie_attack()
		{
		}

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0x1F1DDCC", Offset = "0x1F1DDCC", VA = "0x1F1DDCC")]
		private void break_agent_link()
		{
		}

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0x1F1EE80", Offset = "0x1F1EE80", VA = "0x1F1EE80")]
		private directions get_agent_direction()
		{
			return default(directions);
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0x1F1F058", Offset = "0x1F1F058", VA = "0x1F1F058")]
		public void set_agent_destination_position(Vector3 pos)
		{
		}

		[Token(Token = "0x6000ADC")]
		[Address(RVA = "0x1F1F070", Offset = "0x1F1F070", VA = "0x1F1F070")]
		private Vector3 get_agent_destination()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0x1F1EAB4", Offset = "0x1F1EAB4", VA = "0x1F1EAB4")]
		public bool agent_place()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0x1F1F218", Offset = "0x1F1F218", VA = "0x1F1F218")]
		public void agent_init()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0x1F19A00", Offset = "0x1F19A00", VA = "0x1F19A00")]
		private void AgentAI(float delta)
		{
		}

		[Token(Token = "0x6000AE0")]
		[Address(RVA = "0x1F19DC0", Offset = "0x1F19DC0", VA = "0x1F19DC0")]
		private void MovementAI(float delta, bool second_pass = false)
		{
		}

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0x1F1F318", Offset = "0x1F1F318", VA = "0x1F1F318")]
		private void update_path_to(float delta)
		{
		}

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0x1F1F670", Offset = "0x1F1F670", VA = "0x1F1F670")]
		private bool check_blocking(Vector3 dest)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0x1F1A98C", Offset = "0x1F1A98C", VA = "0x1F1A98C")]
		private void update_improve()
		{
		}

		[Token(Token = "0x6000AE4")]
		[Address(RVA = "0x1F1F9E0", Offset = "0x1F1F9E0", VA = "0x1F1F9E0")]
		public npc()
		{
		}
	}
	[Token(Token = "0x2000187")]
	public class path : MonoBehaviour
	{
		[Token(Token = "0x40009D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool loop;

		[Token(Token = "0x40009D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<point> points;

		[Token(Token = "0x40009D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float radius;

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xFF42B4", Offset = "0xFF42B4", VA = "0xFF42B4")]
		public point next(point current)
		{
			return null;
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xFF4430", Offset = "0xFF4430", VA = "0xFF4430")]
		public point prev(point current)
		{
			return null;
		}

		[Token(Token = "0x6000AE8")]
		[Address(RVA = "0xFF45A8", Offset = "0xFF45A8", VA = "0xFF45A8")]
		public point first()
		{
			return null;
		}

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xFF4618", Offset = "0xFF4618", VA = "0xFF4618")]
		public point last()
		{
			return null;
		}

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xFF468C", Offset = "0xFF468C", VA = "0xFF468C")]
		public path()
		{
		}
	}
	[Token(Token = "0x2000188")]
	public class playerid : MonoBehaviour
	{
		[Token(Token = "0x40009D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float clicked;

		[Token(Token = "0x40009D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject green;

		[Token(Token = "0x40009D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject red;

		[Token(Token = "0x40009D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI val;

		[Token(Token = "0x40009D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI playername;

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xFFB478", Offset = "0xFFB478", VA = "0xFFB478")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AEC")]
		[Address(RVA = "0xFFB47C", Offset = "0xFFB47C", VA = "0xFFB47C")]
		private void draw()
		{
		}

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xFFB74C", Offset = "0xFFB74C", VA = "0xFFB74C")]
		public void click()
		{
		}

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xFFB8A0", Offset = "0xFFB8A0", VA = "0xFFB8A0")]
		public playerid()
		{
		}
	}
	[Token(Token = "0x2000189")]
	public class player_trigger : MonoBehaviour
	{
		[Token(Token = "0x40009D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool triggered;

		[Token(Token = "0x40009D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public player_trigger_event on_enter;

		[Token(Token = "0x40009DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public path[] paths;

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xFFB21C", Offset = "0xFFB21C", VA = "0xFFB21C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF0")]
		[Address(RVA = "0xFFB2DC", Offset = "0xFFB2DC", VA = "0xFFB2DC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xFFB41C", Offset = "0xFFB41C", VA = "0xFFB41C")]
		public player_trigger()
		{
		}
	}
	[Token(Token = "0x200018A")]
	public class point_props
	{
		[Token(Token = "0x40009DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 from;

		[Token(Token = "0x40009DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 to;

		[Token(Token = "0x40009DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Quaternion rot;

		[Token(Token = "0x40009DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool has_crouch_cover;

		[Token(Token = "0x40009DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool can_attack;

		[Token(Token = "0x40009E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		public bool can_attack_on_move;

		[Token(Token = "0x40009E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public point.movements movement;

		[Token(Token = "0x40009E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public npc.directions direction;

		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool can_return_to_prev;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float stay_time;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float height;

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xFFBBD8", Offset = "0xFFBBD8", VA = "0xFFBBD8")]
		public point_props()
		{
		}
	}
	[Token(Token = "0x200018B")]
	[ExecuteInEditMode]
	public class point : MonoBehaviour
	{
		[Token(Token = "0x2000462")]
		public enum movements
		{
			[Token(Token = "0x400211F")]
			none,
			[Token(Token = "0x4002120")]
			guard,
			[Token(Token = "0x4002121")]
			walk,
			[Token(Token = "0x4002122")]
			run,
			[Token(Token = "0x4002123")]
			jump,
			[Token(Token = "0x4002124")]
			climb
		}

		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public path path;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool stop_at_arrived;

		[Token(Token = "0x40009E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public base_event stop_at_arrived_callback;

		[Token(Token = "0x40009E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool stationary_rotation;

		[Token(Token = "0x40009EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float stay_time;

		[Token(Token = "0x40009EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public npc.states idle_state;

		[Token(Token = "0x40009EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public npc.directions idle_direction;

		[Token(Token = "0x40009ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool has_crouch_cover;

		[Token(Token = "0x40009EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		public bool can_attack;

		[Token(Token = "0x40009EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
		public bool can_attack_on_move_next;

		[Token(Token = "0x40009F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
		public bool can_attack_on_move_prev;

		[Token(Token = "0x40009F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float height;

		[Token(Token = "0x40009F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public movements movement_next;

		[Token(Token = "0x40009F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public movements movement_prev;

		[Token(Token = "0x40009F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public npc.directions direction_next;

		[Token(Token = "0x40009F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public npc.directions direction_prev;

		[Token(Token = "0x40009F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool can_return_to_prev;

		[Token(Token = "0x40009F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool look;

		[Token(Token = "0x40009F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool look_transform;

		[Token(Token = "0x40009F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public npc.looktype lookmode;

		[Token(Token = "0x40009FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform look_target;

		[Token(Token = "0x40009FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform ik_hand_right_target;

		[Token(Token = "0x40009FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform ik_hand_left_target;

		[Token(Token = "0x40009FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float speed;

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xFFB8A8", Offset = "0xFFB8A8", VA = "0xFFB8A8")]
		public bool arrived(Vector3 position, float arrive_distance = 0.1f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000AF4")]
		[Address(RVA = "0xFFB90C", Offset = "0xFFB90C", VA = "0xFFB90C")]
		public point_props get_props(point to, [Optional] GameObject go)
		{
			return null;
		}

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xFFBBE0", Offset = "0xFFBBE0", VA = "0xFFBBE0")]
		public point decide_ang_get_next()
		{
			return null;
		}

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xFFBD84", Offset = "0xFFBD84", VA = "0xFFBD84")]
		public point()
		{
		}
	}
	[Token(Token = "0x200018C")]
	public class prop : hitable
	{
		[Token(Token = "0x40009FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody rb;

		[Token(Token = "0x40009FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int health;

		[Token(Token = "0x4000A00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool alive;

		[Token(Token = "0x4000A01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		private bool can_be_killed;

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xFFC8AC", Offset = "0xFFC8AC", VA = "0xFFC8AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AF8")]
		[Address(RVA = "0xFFC964", Offset = "0xFFC964", VA = "0xFFC964", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xFFCA28", Offset = "0xFFCA28", VA = "0xFFCA28")]
		public prop()
		{
		}
	}
	[Token(Token = "0x200018D")]
	public class range_target : hitable
	{
		[Token(Token = "0x4000A02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Collider center;

		[Token(Token = "0x4000A03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float max_z;

		[Token(Token = "0x4000A04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float min_z;

		[Token(Token = "0x4000A05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float z;

		[Token(Token = "0x4000A06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound source;

		[Token(Token = "0x4000A07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float last_sound;

		[Token(Token = "0x4000A08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int stats_player_shoots;

		[Token(Token = "0x4000A09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int stats_player_hits;

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xFFD788", Offset = "0xFFD788", VA = "0xFFD788")]
		public int get_accuracy()
		{
			return default(int);
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xFFD7D0", Offset = "0xFFD7D0", VA = "0xFFD7D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000AFC")]
		[Address(RVA = "0xFFD808", Offset = "0xFFD808", VA = "0xFFD808", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xFFD810", Offset = "0xFFD810", VA = "0xFFD810", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xFFDA10", Offset = "0xFFDA10", VA = "0xFFDA10")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xFFDAA8", Offset = "0xFFDAA8", VA = "0xFFDAA8")]
		public range_target()
		{
		}
	}
	[Token(Token = "0x200018E")]
	public class rateus : MonoBehaviour
	{
		[Token(Token = "0x4000A0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool first;

		[Token(Token = "0x6000B00")]
		[Address(RVA = "0xFFDABC", Offset = "0xFFDABC", VA = "0xFFDABC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xFFDCE4", Offset = "0xFFDCE4", VA = "0xFFDCE4")]
		private int now()
		{
			return default(int);
		}

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xFFDB00", Offset = "0xFFDB00", VA = "0xFFDB00")]
		private bool show()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xFFDD78", Offset = "0xFFDD78", VA = "0xFFDD78")]
		public void button_rate()
		{
		}

		[Token(Token = "0x6000B04")]
		[Address(RVA = "0xFFDF40", Offset = "0xFFDF40", VA = "0xFFDF40")]
		public void button_later()
		{
		}

		[Token(Token = "0x6000B05")]
		[Address(RVA = "0xFFE03C", Offset = "0xFFE03C", VA = "0xFFE03C")]
		public rateus()
		{
		}
	}
	[Token(Token = "0x200018F")]
	public class redpill : MonoBehaviour
	{
		[Token(Token = "0x4000A0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int total;

		[Token(Token = "0x4000A0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI ui_total;

		[Token(Token = "0x4000A0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public handmenu handmenu;

		[Token(Token = "0x4000A0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public sound sound;

		[Token(Token = "0x4000A0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool used;

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xFFE094", Offset = "0xFFE094", VA = "0xFFE094")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xFFE17C", Offset = "0xFFE17C", VA = "0xFFE17C")]
		public void use()
		{
		}

		[Token(Token = "0x6000B09")]
		[Address(RVA = "0xFFE340", Offset = "0xFFE340", VA = "0xFFE340")]
		public redpill()
		{
		}
	}
	[Token(Token = "0x2000190")]
	public class rewardbox1 : MonoBehaviour
	{
		[Token(Token = "0x4000A10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int secret_key;

		[Token(Token = "0x4000A11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI ui_barcode;

		[Token(Token = "0x4000A12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI ui_password;

		[Token(Token = "0x4000A13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public rewardgun1 weapon;

		[Token(Token = "0x4000A14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound audio;

		[Token(Token = "0x4000A15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject wrap;

		[Token(Token = "0x4000A16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string password;

		[Token(Token = "0x4000A17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float next_digit;

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xFFF278", Offset = "0xFFF278", VA = "0xFFF278")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xFFF450", Offset = "0xFFF450", VA = "0xFFF450")]
		public void digit_press(string n)
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xFFF900", Offset = "0xFFF900", VA = "0xFFF900")]
		private void clear_password()
		{
		}

		[Token(Token = "0x6000B0D")]
		[Address(RVA = "0xFFF888", Offset = "0xFFF888", VA = "0xFFF888")]
		public void open_box()
		{
		}

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xFFFA14", Offset = "0xFFFA14", VA = "0xFFFA14")]
		public void open_website()
		{
		}

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xFFF780", Offset = "0xFFF780", VA = "0xFFF780")]
		private string encode(string val)
		{
			return null;
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xFFFB6C", Offset = "0xFFFB6C", VA = "0xFFFB6C")]
		private string decode(string val)
		{
			return null;
		}

		[Token(Token = "0x6000B11")]
		[Address(RVA = "0xFFFCEC", Offset = "0xFFFCEC", VA = "0xFFFCEC")]
		public void test()
		{
		}

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xFFFEBC", Offset = "0xFFFEBC", VA = "0xFFFEBC")]
		public rewardbox1()
		{
		}
	}
	[Token(Token = "0x2000191")]
	public class rewardgun1 : MonoBehaviour
	{
		[Token(Token = "0x2000463")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8497F4", Offset = "0x8497F4")]
		private sealed class <unbox_co>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002125")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002126")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002127")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public rewardgun1 <>4__this;

			[Token(Token = "0x17000261")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C4F")]
				[Address(RVA = "0xD2FEB4", Offset = "0xD2FEB4", VA = "0xD2FEB4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000262")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C51")]
				[Address(RVA = "0xD2FEFC", Offset = "0xD2FEFC", VA = "0xD2FEFC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C4C")]
			[Address(RVA = "0xD2FD7C", Offset = "0xD2FD7C", VA = "0xD2FD7C")]
			[DebuggerHidden]
			public <unbox_co>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001C4D")]
			[Address(RVA = "0xD2FDA8", Offset = "0xD2FDA8", VA = "0xD2FDA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C4E")]
			[Address(RVA = "0xD2FDAC", Offset = "0xD2FDAC", VA = "0xD2FDAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C50")]
			[Address(RVA = "0xD2FEBC", Offset = "0xD2FEBC", VA = "0xD2FEBC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool CheckToHide;

		[Token(Token = "0x4000A19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<GameObject> bullets;

		[Token(Token = "0x4000A1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Rigidbody rb;

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xFFFF28", Offset = "0xFFFF28", VA = "0xFFFF28")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xFFFFD8", Offset = "0xFFFFD8", VA = "0xFFFFD8")]
		public void remove_bullet(tool_firearm gun)
		{
		}

		[Token(Token = "0x6000B15")]
		[Address(RVA = "0xFFF9A0", Offset = "0xFFF9A0", VA = "0xFFF9A0")]
		public void unbox()
		{
		}

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0x1000080", Offset = "0x1000080", VA = "0x1000080")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857A78", Offset = "0x857A78")]
		private IEnumerator unbox_co()
		{
			return null;
		}

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0x1000100", Offset = "0x1000100", VA = "0x1000100")]
		public rewardgun1()
		{
		}
	}
	[Token(Token = "0x2000192")]
	public class roadcar : hitable
	{
		[Token(Token = "0x4000A1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private roadpoint[] roadpoints;

		[Token(Token = "0x4000A1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private roadpoint from;

		[Token(Token = "0x4000A1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private roadpoint to;

		[Token(Token = "0x4000A1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float next_move;

		[Token(Token = "0x4000A1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float speed;

		[Token(Token = "0x4000A20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float tilt;

		[Token(Token = "0x4000A21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float prev_tilt;

		[Token(Token = "0x4000A22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float last_tilt;

		[Token(Token = "0x4000A23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float next_tilt;

		[Token(Token = "0x4000A24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject effect;

		[Token(Token = "0x4000A25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<npc> npcs;

		[Token(Token = "0x4000A26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public npc driver;

		[Token(Token = "0x4000A27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public npc jumper;

		[Token(Token = "0x4000A28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool jumped;

		[Token(Token = "0x4000A29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform[] wheels;

		[Token(Token = "0x4000A2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Collider[] car_colliders;

		[Token(Token = "0x4000A2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Rigidbody rb;

		[Token(Token = "0x4000A2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public int health;

		[Token(Token = "0x4000A2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[HideInInspector]
		public bool removed;

		[Token(Token = "0x4000A2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x95")]
		private bool first_drive;

		[Token(Token = "0x4000A2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int first_drive_index;

		[Token(Token = "0x4000A30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private bool first_drive_started;

		[Token(Token = "0x4000A31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private roadpoint first_drive_point;

		[Token(Token = "0x4000A32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private List<roadpoint> first_drive_visits;

		[Token(Token = "0x4000A33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool count_as_progress;

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0x1000560", Offset = "0x1000560", VA = "0x1000560")]
		public void init(roadpoint enter, roadpoint[] points)
		{
		}

		[Token(Token = "0x6000B19")]
		[Address(RVA = "0x1000AF0", Offset = "0x1000AF0", VA = "0x1000AF0")]
		private void clear_npcs(Vector3 point)
		{
		}

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0x1000E4C", Offset = "0x1000E4C", VA = "0x1000E4C")]
		private void explode(Vector3 point)
		{
		}

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0x1001198", Offset = "0x1001198", VA = "0x1001198")]
		public void npc_hit(npc npc)
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0x10011DC", Offset = "0x10011DC", VA = "0x10011DC")]
		public npc get_jumper()
		{
			return null;
		}

		[Token(Token = "0x6000B1D")]
		[Address(RVA = "0x1001314", Offset = "0x1001314", VA = "0x1001314")]
		private bool can_attack()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0x100152C", Offset = "0x100152C", VA = "0x100152C")]
		private void auto_remove()
		{
		}

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0x10017F4", Offset = "0x10017F4", VA = "0x10017F4")]
		public void test()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0x10018A0", Offset = "0x10018A0", VA = "0x10018A0", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000B21")]
		[Address(RVA = "0x10018C4", Offset = "0x10018C4", VA = "0x10018C4")]
		private void first_drive_start()
		{
		}

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0x1001AE0", Offset = "0x1001AE0", VA = "0x1001AE0")]
		private bool first_drive_update()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0x1001BDC", Offset = "0x1001BDC", VA = "0x1001BDC")]
		private float get_speed()
		{
			return default(float);
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0x1001D10", Offset = "0x1001D10", VA = "0x1001D10")]
		private void drive()
		{
		}

		[Token(Token = "0x6000B25")]
		[Address(RVA = "0x100268C", Offset = "0x100268C", VA = "0x100268C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0x10026B0", Offset = "0x10026B0", VA = "0x10026B0")]
		public roadcar()
		{
		}
	}
	[Token(Token = "0x2000193")]
	public class roadheli : hitable
	{
		[Token(Token = "0x2000464")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849804", Offset = "0x849804")]
		private sealed class <ai>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002128")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002129")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400212A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public roadheli <>4__this;

			[Token(Token = "0x400212B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <clip>5__2;

			[Token(Token = "0x400212C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <left>5__3;

			[Token(Token = "0x400212D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <target>5__4;

			[Token(Token = "0x400212E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <speed>5__5;

			[Token(Token = "0x17000263")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C55")]
				[Address(RVA = "0xD302AC", Offset = "0xD302AC", VA = "0xD302AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000264")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C57")]
				[Address(RVA = "0xD302F4", Offset = "0xD302F4", VA = "0xD302F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C52")]
			[Address(RVA = "0xD2FF04", Offset = "0xD2FF04", VA = "0xD2FF04")]
			[DebuggerHidden]
			public <ai>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001C53")]
			[Address(RVA = "0xD2FF30", Offset = "0xD2FF30", VA = "0xD2FF30", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C54")]
			[Address(RVA = "0xD2FF34", Offset = "0xD2FF34", VA = "0xD2FF34", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C56")]
			[Address(RVA = "0xD302B4", Offset = "0xD302B4", VA = "0xD302B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000A34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform blades1;

		[Token(Token = "0x4000A35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform blades2;

		[Token(Token = "0x4000A36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform wrap;

		[Token(Token = "0x4000A37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float float_speed;

		[Token(Token = "0x4000A38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float float_from;

		[Token(Token = "0x4000A39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float float_to;

		[Token(Token = "0x4000A3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float tilt_speed;

		[Token(Token = "0x4000A3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float tilt_from;

		[Token(Token = "0x4000A3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float tilt_to;

		[Token(Token = "0x4000A3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public int health;

		[Token(Token = "0x4000A3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Rigidbody rb;

		[Token(Token = "0x4000A3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool arrived;

		[Token(Token = "0x4000A40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 start_position;

		[Token(Token = "0x4000A41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 target_position;

		[Token(Token = "0x4000A42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject model;

		[Token(Token = "0x4000A43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public npc driver;

		[Token(Token = "0x4000A44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject effect;

		[Token(Token = "0x4000A45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public sound sound_blades;

		[Token(Token = "0x4000A46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bullet bullet_effect_prefab;

		[Token(Token = "0x4000A47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject muzzle_effect;

		[Token(Token = "0x4000A48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject muzzle_effect_visual;

		[Token(Token = "0x4000A49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public sound muzzle_sound;

		[Token(Token = "0x4000A4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int damage;

		[Token(Token = "0x4000A4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public bool count_as_progress;

		[Token(Token = "0x4000A4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public npc npc;

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0x10029A0", Offset = "0x10029A0", VA = "0x10029A0")]
		public void init(roadpoint point)
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0x1002AAC", Offset = "0x1002AAC", VA = "0x1002AAC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857AE0", Offset = "0x857AE0")]
		private IEnumerator ai()
		{
			return null;
		}

		[Token(Token = "0x6000B29")]
		[Address(RVA = "0x1002B2C", Offset = "0x1002B2C", VA = "0x1002B2C", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0x1002B50", Offset = "0x1002B50", VA = "0x1002B50")]
		private void explode(Vector3 point)
		{
		}

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0x1002C40", Offset = "0x1002C40", VA = "0x1002C40")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0x1002E58", Offset = "0x1002E58", VA = "0x1002E58")]
		public roadheli()
		{
		}
	}
	[Token(Token = "0x2000194")]
	public class roadplane : MonoBehaviour
	{
		[Token(Token = "0x4000A4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform wrap;

		[Token(Token = "0x4000A4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform[] blades;

		[Token(Token = "0x4000A4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float float_speed;

		[Token(Token = "0x4000A50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float float_from;

		[Token(Token = "0x4000A51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float float_to;

		[Token(Token = "0x4000A52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float tilt_speed;

		[Token(Token = "0x4000A53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float tilt_from;

		[Token(Token = "0x4000A54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float tilt_to;

		[Token(Token = "0x4000A55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Rigidbody rb;

		[Token(Token = "0x4000A56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool arrived;

		[Token(Token = "0x4000A57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		private bool removed;

		[Token(Token = "0x4000A58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 start_position;

		[Token(Token = "0x4000A59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Vector3 target_position;

		[Token(Token = "0x4000A5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 remove_position;

		[Token(Token = "0x4000A5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public npc[] npcs;

		[Token(Token = "0x4000A5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public sound engine;

		[Token(Token = "0x6000B2D")]
		[Address(RVA = "0x1002EA8", Offset = "0x1002EA8", VA = "0x1002EA8")]
		public void init()
		{
		}

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0x1003060", Offset = "0x1003060", VA = "0x1003060")]
		public void npc_hit(npc npc)
		{
		}

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0x10030A4", Offset = "0x10030A4", VA = "0x10030A4")]
		public void remove()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0x10030B0", Offset = "0x10030B0", VA = "0x10030B0")]
		public bool alive()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B31")]
		[Address(RVA = "0x1003190", Offset = "0x1003190", VA = "0x1003190")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0x10034D8", Offset = "0x10034D8", VA = "0x10034D8")]
		public roadplane()
		{
		}
	}
	[Token(Token = "0x2000195")]
	public class roadpoint : MonoBehaviour
	{
		[Token(Token = "0x4000A5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public roadpoint[] connections;

		[Token(Token = "0x4000A5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool enter;

		[Token(Token = "0x4000A5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public roadcar car;

		[Token(Token = "0x4000A60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public roadheli heli;

		[Token(Token = "0x4000A61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public roadplane plane;

		[Token(Token = "0x4000A62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float speed_factor;

		[Token(Token = "0x4000A63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool can_jump;

		[Token(Token = "0x4000A64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool can_attack;

		[Token(Token = "0x4000A65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public roadpoint[] first_drive_points;

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0x1003520", Offset = "0x1003520", VA = "0x1003520")]
		public roadpoint()
		{
		}
	}
	[Token(Token = "0x2000196")]
	public class shootings : MonoBehaviour
	{
		[Token(Token = "0x4000A66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static shootings instance;

		[Token(Token = "0x4000A67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int stats_player_shoots;

		[Token(Token = "0x4000A68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int stats_player_hits;

		[Token(Token = "0x4000A69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int stats_npc_shoots;

		[Token(Token = "0x4000A6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int stats_ceasefire;

		[Token(Token = "0x4000A6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int stats_ceasefire_cancel;

		[Token(Token = "0x4000A6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float next_shoot;

		[Token(Token = "0x4000A6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float shoot_margin;

		[Token(Token = "0x4000A6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float ceasefire_duration_min;

		[Token(Token = "0x4000A6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float ceasefire_duration_max;

		[Token(Token = "0x4000A70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private bool player_have_hit;

		[Token(Token = "0x4000A71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float player_last_hit;

		[Token(Token = "0x4000A72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int shoots_count;

		[Token(Token = "0x4000A73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public base_event on_shot_miss;

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0x1006080", Offset = "0x1006080", VA = "0x1006080")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B35")]
		[Address(RVA = "0x1006104", Offset = "0x1006104", VA = "0x1006104")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0x100616C", Offset = "0x100616C", VA = "0x100616C")]
		public void player_hit()
		{
		}

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0x10061C8", Offset = "0x10061C8", VA = "0x10061C8")]
		public int get_accuracy()
		{
			return default(int);
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0x1006210", Offset = "0x1006210", VA = "0x1006210")]
		public void player_shoot(bool missed)
		{
		}

		[Token(Token = "0x6000B39")]
		[Address(RVA = "0x1006308", Offset = "0x1006308", VA = "0x1006308")]
		private void ceasefire()
		{
		}

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0x1006364", Offset = "0x1006364", VA = "0x1006364")]
		public bool request(npc npc)
		{
			return default(bool);
		}

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0x1006468", Offset = "0x1006468", VA = "0x1006468")]
		public shootings()
		{
		}
	}
	[Token(Token = "0x2000197")]
	public class skin : MonoBehaviour
	{
		[Token(Token = "0x4000A74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool RandomModelOnAwake;

		[Token(Token = "0x4000A75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public Renderer head_rend;

		[Token(Token = "0x4000A76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Material head_mat;

		[Token(Token = "0x4000A77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public Renderer hair_rend;

		[Token(Token = "0x4000A78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		public Material hair_mat;

		[Token(Token = "0x4000A79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		public Renderer scarf_rend;

		[Token(Token = "0x4000A7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		public Material scarf_mat;

		[Token(Token = "0x4000A7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		public Renderer body_rend;

		[Token(Token = "0x4000A7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		public Material body_mat;

		[Token(Token = "0x4000A7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public Renderer backpack_rend;

		[Token(Token = "0x4000A7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public Material backpack_mat;

		[Token(Token = "0x4000A7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		public Renderer belt_rend;

		[Token(Token = "0x4000A80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		public Material belt_mat;

		[Token(Token = "0x4000A81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		public Renderer legs_rend;

		[Token(Token = "0x4000A82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		public Material legs_mat;

		[Token(Token = "0x4000A83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public bool random;

		[Token(Token = "0x4000A84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851B54", Offset = "0x851B54")]
		public Renderer[] head_rends;

		[Token(Token = "0x4000A85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Material[] head_mats;

		[Token(Token = "0x4000A86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Renderer[] hair_rends;

		[Token(Token = "0x4000A87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Material[] hair_mats;

		[Token(Token = "0x4000A88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Renderer[] body_rends;

		[Token(Token = "0x4000A89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Material[] body_mats;

		[Token(Token = "0x4000A8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Renderer[] backpack_rends;

		[Token(Token = "0x4000A8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Material[] backpack_mats;

		[Token(Token = "0x4000A8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Renderer[] belt_rends;

		[Token(Token = "0x4000A8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Material[] belt_mats;

		[Token(Token = "0x4000A8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Renderer[] scarf_rends;

		[Token(Token = "0x4000A8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Material[] scarf_mats;

		[Token(Token = "0x4000A90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Renderer[] legs_rends;

		[Token(Token = "0x4000A91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Material[] legs_mats;

		[Token(Token = "0x6000B3D")]
		[Address(RVA = "0x1006488", Offset = "0x1006488", VA = "0x1006488")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0x1006700", Offset = "0x1006700", VA = "0x1006700")]
		public void TestTest()
		{
		}

		[Token(Token = "0x6000B3F")]
		[Address(RVA = "0x1006770", Offset = "0x1006770", VA = "0x1006770")]
		public Renderer get_head()
		{
			return null;
		}

		[Token(Token = "0x6000B40")]
		[Address(RVA = "0x1006800", Offset = "0x1006800", VA = "0x1006800")]
		private void UpdateSkin()
		{
		}

		[Token(Token = "0x6000B41")]
		[Address(RVA = "0x1006498", Offset = "0x1006498", VA = "0x1006498")]
		public void RandomModel()
		{
		}

		[Token(Token = "0x6000B42")]
		[Address(RVA = "0x1007098", Offset = "0x1007098", VA = "0x1007098")]
		public void RandomMaterial()
		{
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0x100759C", Offset = "0x100759C", VA = "0x100759C")]
		public skin()
		{
		}
	}
	[Token(Token = "0x2000198")]
	public class spawn : MonoBehaviour
	{
		[Token(Token = "0x4000A92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float move_distance;

		[Token(Token = "0x4000A93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int spawns_count;

		[Token(Token = "0x4000A94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int spawns_limit;

		[Token(Token = "0x4000A95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float trigger_range;

		[Token(Token = "0x4000A96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string zone;

		[Token(Token = "0x4000A97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool agent;

		[Token(Token = "0x4000A98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool melee;

		[Token(Token = "0x4000A99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool fire;

		[Token(Token = "0x4000A9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public npc npc;

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0x1008344", Offset = "0x1008344", VA = "0x1008344")]
		public spawn()
		{
		}
	}
	[Token(Token = "0x2000199")]
	public class uibutton : hitable
	{
		[Token(Token = "0x4000A9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public float last_button;

		[Token(Token = "0x4000A9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider col;

		[Token(Token = "0x4000A9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject hover;

		[Token(Token = "0x4000A9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound ClickSound;

		[Token(Token = "0x4000A9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public base_event on_press;

		[Token(Token = "0x4000AA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool hovered;

		[Token(Token = "0x4000AA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private hand current_hand;

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xE3519C", Offset = "0xE3519C", VA = "0xE3519C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000B46")]
		[Address(RVA = "0xE35468", Offset = "0xE35468", VA = "0xE35468")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000B47")]
		[Address(RVA = "0xE35504", Offset = "0xE35504", VA = "0xE35504")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000B48")]
		[Address(RVA = "0xE355F4", Offset = "0xE355F4", VA = "0xE355F4", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000B49")]
		[Address(RVA = "0xE35624", Offset = "0xE35624", VA = "0xE35624", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6000B4A")]
		[Address(RVA = "0xE356E0", Offset = "0xE356E0", VA = "0xE356E0", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6000B4B")]
		[Address(RVA = "0xE35780", Offset = "0xE35780", VA = "0xE35780")]
		public uibutton()
		{
		}
	}
	[Token(Token = "0x200019A")]
	public class UpdateRequired : MonoBehaviour
	{
		[Token(Token = "0x4000AA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool first;

		[Token(Token = "0x6000B4C")]
		[Address(RVA = "0xC33688", Offset = "0xC33688", VA = "0xC33688")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B4D")]
		[Address(RVA = "0xC336C4", Offset = "0xC336C4", VA = "0xC336C4")]
		private bool show()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B4E")]
		[Address(RVA = "0xC33838", Offset = "0xC33838", VA = "0xC33838")]
		public void button_update()
		{
		}

		[Token(Token = "0x6000B4F")]
		[Address(RVA = "0xC33958", Offset = "0xC33958", VA = "0xC33958")]
		public UpdateRequired()
		{
		}
	}
	[Token(Token = "0x200019B")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x848190", Offset = "0x848190")]
	public class weapon : MonoBehaviour
	{
		[Token(Token = "0x4000AA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public npc npc;

		[Token(Token = "0x4000AA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public RuntimeAnimatorController animatorController;

		[Token(Token = "0x4000AA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool silence;

		[Token(Token = "0x4000AA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int clip;

		[Token(Token = "0x4000AA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int bullets;

		[Token(Token = "0x4000AA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float reload_time;

		[Token(Token = "0x4000AA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float margin;

		[Token(Token = "0x4000AAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float reloading_end;

		[Token(Token = "0x4000AAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float last_shoot;

		[Token(Token = "0x4000AAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private bool reloading;

		[Token(Token = "0x4000AAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x45")]
		public bool attached;

		[Token(Token = "0x4000AAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float muzzle_effect_seconds;

		[Token(Token = "0x4000AAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float muzzle_effect_end;

		[Token(Token = "0x4000AB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bullet bullet_effect_prefab;

		[Token(Token = "0x4000AB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851BAC", Offset = "0x851BAC")]
		public Transform model_right_hand;

		[Token(Token = "0x4000AB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject muzzle_effect_right;

		[Token(Token = "0x4000AB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public sound shoot_sound_right;

		[Token(Token = "0x4000AB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Rigidbody rb_right;

		[Token(Token = "0x4000AB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851BF4", Offset = "0x851BF4")]
		public Transform model_left_hand;

		[Token(Token = "0x4000AB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject muzzle_effect_left;

		[Token(Token = "0x4000AB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public sound shoot_sound_left;

		[Token(Token = "0x4000AB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Rigidbody rb_left;

		[Token(Token = "0x6000B51")]
		[Address(RVA = "0x19A9278", Offset = "0x19A9278", VA = "0x19A9278")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B52")]
		[Address(RVA = "0x19A9410", Offset = "0x19A9410", VA = "0x19A9410")]
		private void SetGlobalScale(Transform trans, Vector3 globalScale)
		{
		}

		[Token(Token = "0x6000B53")]
		[Address(RVA = "0x19A94AC", Offset = "0x19A94AC", VA = "0x19A94AC")]
		public void unload()
		{
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0x19A952C", Offset = "0x19A952C", VA = "0x19A952C")]
		public void remove()
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0x19A95F0", Offset = "0x19A95F0", VA = "0x19A95F0")]
		public void add(npc _npc)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0x19A9850", Offset = "0x19A9850", VA = "0x19A9850")]
		public void detach()
		{
		}

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0x19A9974", Offset = "0x19A9974", VA = "0x19A9974")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B58")]
		[Address(RVA = "0x19A9AD4", Offset = "0x19A9AD4", VA = "0x19A9AD4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B59")]
		[Address(RVA = "0x19A9D78", Offset = "0x19A9D78", VA = "0x19A9D78")]
		public bool reload()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5A")]
		[Address(RVA = "0x19A9DD8", Offset = "0x19A9DD8", VA = "0x19A9DD8")]
		public void use_fake()
		{
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0x19A9EFC", Offset = "0x19A9EFC", VA = "0x19A9EFC")]
		private void shoot_sound()
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0x19AA06C", Offset = "0x19AA06C", VA = "0x19AA06C")]
		public bool use()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B5D")]
		[Address(RVA = "0x19AA0F8", Offset = "0x19AA0F8", VA = "0x19AA0F8")]
		public void projectile(Vector3 target, float speed, int damage, npc npc)
		{
		}

		[Token(Token = "0x6000B5E")]
		[Address(RVA = "0x19AA448", Offset = "0x19AA448", VA = "0x19AA448")]
		public weapon()
		{
		}
	}
	[Token(Token = "0x200019C")]
	public class helper
	{
		[Token(Token = "0x6000B5F")]
		[Address(RVA = "0xC5C8FC", Offset = "0xC5C8FC", VA = "0xC5C8FC")]
		public static float DistanceXZ(Vector3 v1, Vector3 v2)
		{
			return default(float);
		}

		[Token(Token = "0x6000B60")]
		[Address(RVA = "0xC5C90C", Offset = "0xC5C90C", VA = "0xC5C90C")]
		public static Vector3 DirectionXZ(Vector3 v1, Vector3 v2)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B61")]
		[Address(RVA = "0xC5C91C", Offset = "0xC5C91C", VA = "0xC5C91C")]
		public static Quaternion LookAtY(Vector3 origin, Vector3 target)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000B62")]
		[Address(RVA = "0xC5C930", Offset = "0xC5C930", VA = "0xC5C930")]
		public static Vector3 NearestPointOnFiniteLine(Vector3 start, Vector3 end, Vector3 pnt)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B63")]
		[Address(RVA = "0xC5CA04", Offset = "0xC5CA04", VA = "0xC5CA04")]
		public helper()
		{
		}
	}
	[Token(Token = "0x200019D")]
	public class BhapticsManagerGinra : MonoBehaviour
	{
		[Token(Token = "0x4000AB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BhapticsManagerGinra instance;

		[Token(Token = "0x4000ABA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VestHapticClip bhaptic_paired;

		[Token(Token = "0x4000ABB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool started;

		[Token(Token = "0x6000B64")]
		[Address(RVA = "0xF36D5C", Offset = "0xF36D5C", VA = "0xF36D5C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B65")]
		[Address(RVA = "0xF36DB8", Offset = "0xF36DB8", VA = "0xF36DB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B66")]
		[Address(RVA = "0xF36EE8", Offset = "0xF36EE8", VA = "0xF36EE8")]
		public void Refresh()
		{
		}

		[Token(Token = "0x6000B67")]
		[Address(RVA = "0xF36F40", Offset = "0xF36F40", VA = "0xF36F40")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000B68")]
		[Address(RVA = "0xF36F64", Offset = "0xF36F64", VA = "0xF36F64")]
		public bool is_paired()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B69")]
		[Address(RVA = "0xF37038", Offset = "0xF37038", VA = "0xF37038")]
		public bool show_in_menu()
		{
			return default(bool);
		}

		[Token(Token = "0x6000B6A")]
		[Address(RVA = "0xF37040", Offset = "0xF37040", VA = "0xF37040")]
		public BhapticsManagerGinra()
		{
		}
	}
	[Token(Token = "0x200019E")]
	public class Floating : MonoBehaviour
	{
		[Token(Token = "0x4000ABC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float speed;

		[Token(Token = "0x4000ABD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float from;

		[Token(Token = "0x4000ABE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float to;

		[Token(Token = "0x4000ABF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 org_pos;

		[Token(Token = "0x6000B6B")]
		[Address(RVA = "0xBA1854", Offset = "0xBA1854", VA = "0xBA1854")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xBA1890", Offset = "0xBA1890", VA = "0xBA1890")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xBA194C", Offset = "0xBA194C", VA = "0xBA194C")]
		public Floating()
		{
		}
	}
	[Token(Token = "0x200019F")]
	public class fps : MonoBehaviour
	{
		[Token(Token = "0x4000AC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup canvas_group;

		[Token(Token = "0x4000AC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float updateInterval;

		[Token(Token = "0x4000AC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float accum;

		[Token(Token = "0x4000AC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int frames;

		[Token(Token = "0x4000AC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float timeLeft;

		[Token(Token = "0x4000AC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI fps_text;

		[Token(Token = "0x4000AC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Image fps_back;

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xC3EBF0", Offset = "0xC3EBF0", VA = "0xC3EBF0")]
		private void Start()
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xC3ECB0", Offset = "0xC3ECB0", VA = "0xC3ECB0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xC3EF2C", Offset = "0xC3EF2C", VA = "0xC3EF2C")]
		public fps()
		{
		}
	}
	[Token(Token = "0x20001A0")]
	public class hidemesh : MonoBehaviour
	{
		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xC5CA0C", Offset = "0xC5CA0C", VA = "0xC5CA0C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B72")]
		[Address(RVA = "0xC5CACC", Offset = "0xC5CACC", VA = "0xC5CACC")]
		public hidemesh()
		{
		}
	}
	[Token(Token = "0x20001A1")]
	public class HierarchyCombaine : MonoBehaviour
	{
		[Token(Token = "0x6000B73")]
		[Address(RVA = "0xBA9DB0", Offset = "0xBA9DB0", VA = "0xBA9DB0")]
		public HierarchyCombaine()
		{
		}
	}
	[Token(Token = "0x20001A2")]
	public class comb
	{
		[Token(Token = "0x4000AC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Material mat;

		[Token(Token = "0x4000AC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MeshFilter mesh;

		[Token(Token = "0x4000AC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int idx;

		[Token(Token = "0x4000ACA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool addcol;

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xC3BED8", Offset = "0xC3BED8", VA = "0xC3BED8")]
		public comb(Material mat, MeshFilter mesh, int idx, bool addcol)
		{
		}
	}
	[Token(Token = "0x20001A3")]
	public class HierarchySort : MonoBehaviour
	{
		[Token(Token = "0x4000ACB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Renderer compare1;

		[Token(Token = "0x4000ACC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Renderer compare2;

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xBA9DB8", Offset = "0xBA9DB8", VA = "0xBA9DB8")]
		public HierarchySort()
		{
		}
	}
	[Token(Token = "0x20001A4")]
	internal static class ListHelper
	{
		[Token(Token = "0x4000ACD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random rnd;

		[Token(Token = "0x6000B76")]
		public static void Shuffle<T>(this IList<T> list)
		{
		}

		[Token(Token = "0x6000B77")]
		public static void Swap<T>(this IList<T> list, int i, int j)
		{
		}
	}
	[Token(Token = "0x20001A5")]
	public class LookAtCamera : MonoBehaviour
	{
		[Token(Token = "0x6000B79")]
		[Address(RVA = "0xCE756C", Offset = "0xCE756C", VA = "0xCE756C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B7A")]
		[Address(RVA = "0xCE7654", Offset = "0xCE7654", VA = "0xCE7654")]
		public LookAtCamera()
		{
		}
	}
	[Token(Token = "0x20001A6")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8481B4", Offset = "0x8481B4")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8481B4", Offset = "0x8481B4")]
	public class MeshCombine : MonoBehaviour
	{
		[Token(Token = "0x6000B7B")]
		[Address(RVA = "0xCEC2A0", Offset = "0xCEC2A0", VA = "0xCEC2A0")]
		public void combine()
		{
		}

		[Token(Token = "0x6000B7C")]
		[Address(RVA = "0xCEC518", Offset = "0xCEC518", VA = "0xCEC518")]
		public MeshCombine()
		{
		}
	}
	[Token(Token = "0x20001A7")]
	public class RotateInPlace : MonoBehaviour
	{
		[Token(Token = "0x4000ACE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 speed;

		[Token(Token = "0x6000B7D")]
		[Address(RVA = "0xDD75B0", Offset = "0xDD75B0", VA = "0xDD75B0")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B7E")]
		[Address(RVA = "0xDD75E8", Offset = "0xDD75E8", VA = "0xDD75E8")]
		public RotateInPlace()
		{
		}
	}
	[Token(Token = "0x20001A8")]
	public class SnapSurface : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000465")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849814", Offset = "0x849814")]
		private sealed class <>c
		{
			[Token(Token = "0x400212F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002130")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__6_0;

			[Token(Token = "0x6001C59")]
			[Address(RVA = "0x19E283C", Offset = "0x19E283C", VA = "0x19E283C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001C5A")]
			[Address(RVA = "0x19E2844", Offset = "0x19E2844", VA = "0x19E2844")]
			internal int <getBottomPosition>b__6_0(RaycastHit a, RaycastHit b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x4000ACF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int size;

		[Token(Token = "0x6000B7F")]
		[Address(RVA = "0x1051544", Offset = "0x1051544", VA = "0x1051544")]
		private void DrawMesh(int grid, bool raycast)
		{
		}

		[Token(Token = "0x6000B80")]
		[Address(RVA = "0x1051AC0", Offset = "0x1051AC0", VA = "0x1051AC0")]
		public void Snap()
		{
		}

		[Token(Token = "0x6000B81")]
		[Address(RVA = "0x1051ACC", Offset = "0x1051ACC", VA = "0x1051ACC")]
		public void Clear()
		{
		}

		[Token(Token = "0x6000B82")]
		[Address(RVA = "0x1051AB0", Offset = "0x1051AB0", VA = "0x1051AB0")]
		private int index(int x, int z, int grid)
		{
			return default(int);
		}

		[Token(Token = "0x6000B83")]
		[Address(RVA = "0x1051ABC", Offset = "0x1051ABC", VA = "0x1051ABC")]
		private Vector3 getBottomPosition(float x, float y, float z)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B84")]
		[Address(RVA = "0x1051AD8", Offset = "0x1051AD8", VA = "0x1051AD8")]
		private Vector3 getBottomPosition(Vector3 top)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B85")]
		[Address(RVA = "0x1051DA8", Offset = "0x1051DA8", VA = "0x1051DA8")]
		public SnapSurface()
		{
		}
	}
	[Token(Token = "0x20001A9")]
	public class SnapToGround : MonoBehaviour
	{
		[Token(Token = "0x6000B86")]
		[Address(RVA = "0x1051DB8", Offset = "0x1051DB8", VA = "0x1051DB8")]
		public SnapToGround()
		{
		}
	}
	[Token(Token = "0x20001AA")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x848250", Offset = "0x848250")]
	public class syncbones : MonoBehaviour
	{
		[Token(Token = "0x4000AD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Animator ani;

		[Token(Token = "0x4000AD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float EndTime;

		[Token(Token = "0x4000AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float MecanimBlendTime;

		[Token(Token = "0x4000AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float GetUpTransitionTime;

		[Token(Token = "0x4000AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float BlendAmount;

		[Token(Token = "0x4000AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 FeetPosition;

		[Token(Token = "0x4000AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private Vector3 HeadPosition;

		[Token(Token = "0x4000AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 HipPosition;

		[Token(Token = "0x4000AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Transform, Vector3> storedPosition;

		[Token(Token = "0x4000AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Transform, Quaternion> storedRotation;

		[Token(Token = "0x4000ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public bool progress;

		[Token(Token = "0x6000B87")]
		[Address(RVA = "0x100C0CC", Offset = "0x100C0CC", VA = "0x100C0CC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B88")]
		[Address(RVA = "0x100C184", Offset = "0x100C184", VA = "0x100C184")]
		public void run()
		{
		}

		[Token(Token = "0x6000B89")]
		[Address(RVA = "0x100C5B0", Offset = "0x100C5B0", VA = "0x100C5B0")]
		public void stop()
		{
		}

		[Token(Token = "0x6000B8A")]
		[Address(RVA = "0x100C5B8", Offset = "0x100C5B8", VA = "0x100C5B8")]
		private float GetFloorPosition(Vector3 newRootPosition)
		{
			return default(float);
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0x100C8E4", Offset = "0x100C8E4", VA = "0x100C8E4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0x100CFF4", Offset = "0x100CFF4", VA = "0x100CFF4")]
		public syncbones()
		{
		}
	}
	[Token(Token = "0x20001AB")]
	public class TargetPredic : MonoBehaviour
	{
		[Token(Token = "0x6000B8D")]
		[Address(RVA = "0x105B884", Offset = "0x105B884", VA = "0x105B884")]
		public static Vector3 predictedPosition(Vector3 targetPosition, Vector3 shooterPosition, Vector3 targetVelocity, float projectileSpeed)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000B8E")]
		[Address(RVA = "0x105BA1C", Offset = "0x105BA1C", VA = "0x105BA1C")]
		public TargetPredic()
		{
		}
	}
	[Token(Token = "0x20001AC")]
	public class unactivate : MonoBehaviour
	{
		[Token(Token = "0x4000ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private float timer;

		[Token(Token = "0x4000ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float delay;

		[Token(Token = "0x4000ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool destroy;

		[Token(Token = "0x6000B8F")]
		[Address(RVA = "0xE35788", Offset = "0xE35788", VA = "0xE35788")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000B90")]
		[Address(RVA = "0xE3582C", Offset = "0xE3582C", VA = "0xE3582C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B91")]
		[Address(RVA = "0xE358A4", Offset = "0xE358A4", VA = "0xE358A4")]
		public unactivate()
		{
		}
	}
	[Token(Token = "0x20001AD")]
	public class level : MonoBehaviour
	{
		[Token(Token = "0x6000B92")]
		[Address(RVA = "0xC5ED54", Offset = "0xC5ED54", VA = "0xC5ED54")]
		public void KillAllEnemies()
		{
		}

		[Token(Token = "0x6000B93")]
		[Address(RVA = "0xC5EF0C", Offset = "0xC5EF0C", VA = "0xC5EF0C")]
		public void improve_npc(npc npc, float pre, bool extra = false)
		{
		}

		[Token(Token = "0x6000B94")]
		[Address(RVA = "0xC5F0AC", Offset = "0xC5F0AC", VA = "0xC5F0AC")]
		public level()
		{
		}
	}
	[Token(Token = "0x20001AE")]
	public class level_0 : level
	{
		[Token(Token = "0x2000466")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849824", Offset = "0x849824")]
		private sealed class <blinking>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002131")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002132")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002133")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_0 <>4__this;

			[Token(Token = "0x4002134")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject <go>5__2;

			[Token(Token = "0x4002135")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <show>5__3;

			[Token(Token = "0x17000265")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C5E")]
				[Address(RVA = "0xFD6BC8", Offset = "0xFD6BC8", VA = "0xFD6BC8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000266")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C60")]
				[Address(RVA = "0xFD6C10", Offset = "0xFD6C10", VA = "0xFD6C10", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C5B")]
			[Address(RVA = "0xFD6A4C", Offset = "0xFD6A4C", VA = "0xFD6A4C")]
			[DebuggerHidden]
			public <blinking>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001C5C")]
			[Address(RVA = "0xFD6A78", Offset = "0xFD6A78", VA = "0xFD6A78", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C5D")]
			[Address(RVA = "0xFD6A7C", Offset = "0xFD6A7C", VA = "0xFD6A7C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C5F")]
			[Address(RVA = "0xFD6BD0", Offset = "0xFD6BD0", VA = "0xFD6BD0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public hud hud;

		[Token(Token = "0x4000ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool level_started;

		[Token(Token = "0x4000AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform look_gun;

		[Token(Token = "0x4000AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform look_board;

		[Token(Token = "0x4000AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool show_tutorial;

		[Token(Token = "0x4000AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject level1blink;

		[Token(Token = "0x4000AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject level2blink;

		[Token(Token = "0x4000AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject[] pico_hidden_objects;

		[Token(Token = "0x6000B95")]
		[Address(RVA = "0xC5F0B4", Offset = "0xC5F0B4", VA = "0xC5F0B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B96")]
		[Address(RVA = "0xC5F434", Offset = "0xC5F434", VA = "0xC5F434")]
		private void Update()
		{
		}

		[Token(Token = "0x6000B97")]
		[Address(RVA = "0xC5F438", Offset = "0xC5F438", VA = "0xC5F438")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000B98")]
		[Address(RVA = "0xC5F604", Offset = "0xC5F604", VA = "0xC5F604")]
		private void Tutorial()
		{
		}

		[Token(Token = "0x6000B99")]
		[Address(RVA = "0xC5F6F8", Offset = "0xC5F6F8", VA = "0xC5F6F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857B68", Offset = "0x857B68")]
		private IEnumerator blinking()
		{
			return null;
		}

		[Token(Token = "0x6000B9A")]
		[Address(RVA = "0xC5F778", Offset = "0xC5F778", VA = "0xC5F778")]
		public void on_gun_select(toolbase tool)
		{
		}

		[Token(Token = "0x6000B9B")]
		[Address(RVA = "0xC5F854", Offset = "0xC5F854", VA = "0xC5F854")]
		public void on_gun_unselect(toolbase tool)
		{
		}

		[Token(Token = "0x6000B9C")]
		[Address(RVA = "0xC5F930", Offset = "0xC5F930", VA = "0xC5F930")]
		public level_0()
		{
		}
	}
	[Token(Token = "0x20001AF")]
	public class level_1 : level
	{
		[Token(Token = "0x2000467")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849834", Offset = "0x849834")]
		private sealed class <PlayMusicCoroutine>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002136")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002137")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002138")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_1 <>4__this;

			[Token(Token = "0x4002139")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x400213A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x400213B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x400213C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x17000267")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C64")]
				[Address(RVA = "0xFD7348", Offset = "0xFD7348", VA = "0xFD7348", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000268")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C66")]
				[Address(RVA = "0xFD7390", Offset = "0xFD7390", VA = "0xFD7390", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C61")]
			[Address(RVA = "0xFD70A4", Offset = "0xFD70A4", VA = "0xFD70A4")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001C62")]
			[Address(RVA = "0xFD70D0", Offset = "0xFD70D0", VA = "0xFD70D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C63")]
			[Address(RVA = "0xFD70D4", Offset = "0xFD70D4", VA = "0xFD70D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C65")]
			[Address(RVA = "0xFD7350", Offset = "0xFD7350", VA = "0xFD7350", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000468")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849844", Offset = "0x849844")]
		private sealed class <LevelFailedCoroutine>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400213D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400213E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400213F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_1 <>4__this;

			[Token(Token = "0x4002140")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private npc[] <>7__wrap1;

			[Token(Token = "0x4002141")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x17000269")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C6A")]
				[Address(RVA = "0xFD7054", Offset = "0xFD7054", VA = "0xFD7054", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C6C")]
				[Address(RVA = "0xFD709C", Offset = "0xFD709C", VA = "0xFD709C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C67")]
			[Address(RVA = "0xFD6C18", Offset = "0xFD6C18", VA = "0xFD6C18")]
			[DebuggerHidden]
			public <LevelFailedCoroutine>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001C68")]
			[Address(RVA = "0xFD6C44", Offset = "0xFD6C44", VA = "0xFD6C44", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C69")]
			[Address(RVA = "0xFD6C48", Offset = "0xFD6C48", VA = "0xFD6C48", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C6B")]
			[Address(RVA = "0xFD705C", Offset = "0xFD705C", VA = "0xFD705C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000469")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849854", Offset = "0x849854")]
		private sealed class <middle_waves>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002142")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002143")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002144")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_1 <>4__this;

			[Token(Token = "0x4002145")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private npc <lastnpc>5__2;

			[Token(Token = "0x4002146")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private path[] <>7__wrap2;

			[Token(Token = "0x4002147")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x4002148")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private path <path>5__5;

			[Token(Token = "0x1700026B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C70")]
				[Address(RVA = "0xFD875C", Offset = "0xFD875C", VA = "0xFD875C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C72")]
				[Address(RVA = "0xFD87A4", Offset = "0xFD87A4", VA = "0xFD87A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C6D")]
			[Address(RVA = "0xFD7968", Offset = "0xFD7968", VA = "0xFD7968")]
			[DebuggerHidden]
			public <middle_waves>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001C6E")]
			[Address(RVA = "0xFD7994", Offset = "0xFD7994", VA = "0xFD7994", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C6F")]
			[Address(RVA = "0xFD7998", Offset = "0xFD7998", VA = "0xFD7998", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C71")]
			[Address(RVA = "0xFD8764", Offset = "0xFD8764", VA = "0xFD8764", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200046A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849864", Offset = "0x849864")]
		private sealed class <final_random>d__91 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002149")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400214A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400214B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_1 <>4__this;

			[Token(Token = "0x400214C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x1700026D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C76")]
				[Address(RVA = "0xFD7918", Offset = "0xFD7918", VA = "0xFD7918", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700026E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C78")]
				[Address(RVA = "0xFD7960", Offset = "0xFD7960", VA = "0xFD7960", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C73")]
			[Address(RVA = "0xFD7398", Offset = "0xFD7398", VA = "0xFD7398")]
			[DebuggerHidden]
			public <final_random>d__91(int <>1__state)
			{
			}

			[Token(Token = "0x6001C74")]
			[Address(RVA = "0xFD73C4", Offset = "0xFD73C4", VA = "0xFD73C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C75")]
			[Address(RVA = "0xFD73C8", Offset = "0xFD73C8", VA = "0xFD73C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C77")]
			[Address(RVA = "0xFD7920", Offset = "0xFD7920", VA = "0xFD7920", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool skip_intro;

		[Token(Token = "0x4000AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public point skip_captain_point;

		[Token(Token = "0x4000AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public demobox demobox;

		[Token(Token = "0x4000AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public hud hud;

		[Token(Token = "0x4000AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private bool level_started;

		[Token(Token = "0x4000AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool level_ended;

		[Token(Token = "0x4000AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		private bool _snipper_shoot;

		[Token(Token = "0x4000AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int _snipper_reloads;

		[Token(Token = "0x4000AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool _snipper_select;

		[Token(Token = "0x4000AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private bool _pistol_select;

		[Token(Token = "0x4000AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private bool _rifle_select;

		[Token(Token = "0x4000AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound level_end_shoots;

		[Token(Token = "0x4000AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public lips captain_lips;

		[Token(Token = "0x4000AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public npc captain;

		[Token(Token = "0x4000AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public npc[] squad;

		[Token(Token = "0x4000AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public npc[] squad_combat;

		[Token(Token = "0x4000AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public npc[] civilians;

		[Token(Token = "0x4000AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public npc[] guards;

		[Token(Token = "0x4000AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public car[] cars;

		[Token(Token = "0x4000AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public path[] cars_paths;

		[Token(Token = "0x4000AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject[] extra_items;

		[Token(Token = "0x4000AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform look_guards;

		[Token(Token = "0x4000AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform look_alcobra;

		[Token(Token = "0x4000AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform look_wanted;

		[Token(Token = "0x4000AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform captain_head;

		[Token(Token = "0x4000AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public sound captain_audio;

		[Token(Token = "0x4000B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public tool_firearm weapon_sniper;

		[Token(Token = "0x4000B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public tool_firearm weapon_pistol_1;

		[Token(Token = "0x4000B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public tool_firearm weapon_pistol_2;

		[Token(Token = "0x4000B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public tool_firearm weapon_rifle;

		[Token(Token = "0x4000B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject capture;

		[Token(Token = "0x4000B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public path[] wave_1_paths;

		[Token(Token = "0x4000B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public path[] wave_2_paths;

		[Token(Token = "0x4000B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public path[] wave_3_paths;

		[Token(Token = "0x4000B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public path[] wave_4_paths;

		[Token(Token = "0x4000B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public path[] wave_5_paths;

		[Token(Token = "0x4000B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public path[] wave_6_paths;

		[Token(Token = "0x4000B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public path[] all_paths;

		[Token(Token = "0x4000B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public npc[] npc_bank;

		[Token(Token = "0x4000B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float sound_last;

		[Token(Token = "0x4000B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float sound_cooldown;

		[Token(Token = "0x4000B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public sound sound_source;

		[Token(Token = "0x4000B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int sound_kills_count;

		[Token(Token = "0x4000B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int sound_hits_count;

		[Token(Token = "0x4000B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float sound_last_idle;

		[Token(Token = "0x4000B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int player_last_health;

		[Token(Token = "0x4000B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private sound music_current;

		[Token(Token = "0x4000B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public sound music_idle;

		[Token(Token = "0x4000B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public sound music_action;

		[Token(Token = "0x4000B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public sound music_win;

		[Token(Token = "0x4000B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public sound music_lose;

		[Token(Token = "0x4000B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<npc> enemies;

		[Token(Token = "0x4000B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int update_part;

		[Token(Token = "0x4000B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private int random_npc_total;

		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int random_npc_limit;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private int total_to_kill;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private int total_killed;

		[Token(Token = "0x6000B9D")]
		[Address(RVA = "0xC5F940", Offset = "0xC5F940", VA = "0xC5F940")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000B9E")]
		[Address(RVA = "0xC5F970", Offset = "0xC5F970", VA = "0xC5F970")]
		public void Tests()
		{
		}

		[Token(Token = "0x6000B9F")]
		[Address(RVA = "0xC5FBA8", Offset = "0xC5FBA8", VA = "0xC5FBA8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BA0")]
		[Address(RVA = "0xC601DC", Offset = "0xC601DC", VA = "0xC601DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BA1")]
		[Address(RVA = "0xC60E90", Offset = "0xC60E90", VA = "0xC60E90")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000BA2")]
		[Address(RVA = "0xC60F60", Offset = "0xC60F60", VA = "0xC60F60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857BD0", Offset = "0x857BD0")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000BA3")]
		[Address(RVA = "0xC60DC0", Offset = "0xC60DC0", VA = "0xC60DC0")]
		private void PlaySound(string name)
		{
		}

		[Token(Token = "0x6000BA4")]
		[Address(RVA = "0xC60024", Offset = "0xC60024", VA = "0xC60024")]
		private void PrepareLevel()
		{
		}

		[Token(Token = "0x6000BA5")]
		[Address(RVA = "0xC6066C", Offset = "0xC6066C", VA = "0xC6066C")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000BA6")]
		[Address(RVA = "0xC60CA0", Offset = "0xC60CA0", VA = "0xC60CA0")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000BA7")]
		[Address(RVA = "0xC60FF4", Offset = "0xC60FF4", VA = "0xC60FF4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857C38", Offset = "0x857C38")]
		private IEnumerator LevelFailedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000BA8")]
		[Address(RVA = "0xC61074", Offset = "0xC61074", VA = "0xC61074")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000BA9")]
		[Address(RVA = "0xC6113C", Offset = "0xC6113C", VA = "0xC6113C")]
		public void begin_0()
		{
		}

		[Token(Token = "0x6000BAA")]
		[Address(RVA = "0xC61140", Offset = "0xC61140", VA = "0xC61140")]
		public void begin_1()
		{
		}

		[Token(Token = "0x6000BAB")]
		[Address(RVA = "0xC61558", Offset = "0xC61558", VA = "0xC61558")]
		public void begin_2()
		{
		}

		[Token(Token = "0x6000BAC")]
		[Address(RVA = "0xC6159C", Offset = "0xC6159C", VA = "0xC6159C")]
		public void begin_3()
		{
		}

		[Token(Token = "0x6000BAD")]
		[Address(RVA = "0xC61900", Offset = "0xC61900", VA = "0xC61900")]
		public void begin_4()
		{
		}

		[Token(Token = "0x6000BAE")]
		[Address(RVA = "0xC619AC", Offset = "0xC619AC", VA = "0xC619AC")]
		public void begin_5()
		{
		}

		[Token(Token = "0x6000BAF")]
		[Address(RVA = "0xC61B88", Offset = "0xC61B88", VA = "0xC61B88")]
		public void begin_6()
		{
		}

		[Token(Token = "0x6000BB0")]
		[Address(RVA = "0xC61D54", Offset = "0xC61D54", VA = "0xC61D54")]
		public void begin_skip()
		{
		}

		[Token(Token = "0x6000BB1")]
		[Address(RVA = "0xC61F2C", Offset = "0xC61F2C", VA = "0xC61F2C")]
		public void snipper_unselect(toolbase tool)
		{
		}

		[Token(Token = "0x6000BB2")]
		[Address(RVA = "0xC61F30", Offset = "0xC61F30", VA = "0xC61F30")]
		public void snipper_select(toolbase tool)
		{
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xC62054", Offset = "0xC62054", VA = "0xC62054")]
		public void snipper_second_select(toolbase tool)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xC62058", Offset = "0xC62058", VA = "0xC62058")]
		public void snipper_reload(tool_firearm firearm)
		{
		}

		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xC5F974", Offset = "0xC5F974", VA = "0xC5F974")]
		public void snipper_shoot(tool_firearm firearm)
		{
		}

		[Token(Token = "0x6000BB6")]
		[Address(RVA = "0xC60BA4", Offset = "0xC60BA4", VA = "0xC60BA4")]
		private void begin_update()
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xC62068", Offset = "0xC62068", VA = "0xC62068")]
		public void middle_1()
		{
		}

		[Token(Token = "0x6000BB8")]
		[Address(RVA = "0xC62088", Offset = "0xC62088", VA = "0xC62088")]
		public void middle_2()
		{
		}

		[Token(Token = "0x6000BB9")]
		[Address(RVA = "0xC623EC", Offset = "0xC623EC", VA = "0xC623EC")]
		public void pistol_select(toolbase tool)
		{
		}

		[Token(Token = "0x6000BBA")]
		[Address(RVA = "0xC6257C", Offset = "0xC6257C", VA = "0xC6257C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857CA0", Offset = "0x857CA0")]
		private IEnumerator middle_waves()
		{
			return null;
		}

		[Token(Token = "0x6000BBB")]
		[Address(RVA = "0xC625FC", Offset = "0xC625FC", VA = "0xC625FC")]
		public void final_1()
		{
		}

		[Token(Token = "0x6000BBC")]
		[Address(RVA = "0xC629A0", Offset = "0xC629A0", VA = "0xC629A0")]
		public void rifle_select(toolbase tool)
		{
		}

		[Token(Token = "0x6000BBD")]
		[Address(RVA = "0xC62B50", Offset = "0xC62B50", VA = "0xC62B50")]
		private path final_get_free_path()
		{
			return null;
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xC62AD0", Offset = "0xC62AD0", VA = "0xC62AD0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857D08", Offset = "0x857D08")]
		private IEnumerator final_random()
		{
			return null;
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xC62DC8", Offset = "0xC62DC8", VA = "0xC62DC8")]
		public void final_2()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xC62ED0", Offset = "0xC62ED0", VA = "0xC62ED0")]
		public void final_3()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xC6311C", Offset = "0xC6311C", VA = "0xC6311C")]
		public void final_4()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xC631A8", Offset = "0xC631A8", VA = "0xC631A8")]
		public void civilian_hit(npc npc)
		{
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xC632AC", Offset = "0xC632AC", VA = "0xC632AC")]
		public void civilian_path_complete(npc npc)
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xC632DC", Offset = "0xC632DC", VA = "0xC632DC")]
		public void car_path_complete(car car)
		{
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xC60810", Offset = "0xC60810", VA = "0xC60810")]
		private void UpdateCars()
		{
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xC63380", Offset = "0xC63380", VA = "0xC63380")]
		public level_1()
		{
		}
	}
	[Token(Token = "0x20001B0")]
	public class level_2 : level
	{
		[Token(Token = "0x200046B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849874", Offset = "0x849874")]
		private sealed class <PlayMusicCoroutine>d__85 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400214D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400214E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400214F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x4002150")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4002151")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4002152")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4002153")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x1700026F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C7C")]
				[Address(RVA = "0xFD9530", Offset = "0xFD9530", VA = "0xFD9530", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000270")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C7E")]
				[Address(RVA = "0xFD9578", Offset = "0xFD9578", VA = "0xFD9578", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C79")]
			[Address(RVA = "0xFD9298", Offset = "0xFD9298", VA = "0xFD9298")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__85(int <>1__state)
			{
			}

			[Token(Token = "0x6001C7A")]
			[Address(RVA = "0xFD92C4", Offset = "0xFD92C4", VA = "0xFD92C4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C7B")]
			[Address(RVA = "0xFD92C8", Offset = "0xFD92C8", VA = "0xFD92C8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C7D")]
			[Address(RVA = "0xFD9538", Offset = "0xFD9538", VA = "0xFD9538", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200046C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849884", Offset = "0x849884")]
		private sealed class <LevelFailedCoroutine>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002154")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002155")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002156")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x17000271")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C82")]
				[Address(RVA = "0xFD8A84", Offset = "0xFD8A84", VA = "0xFD8A84", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000272")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C84")]
				[Address(RVA = "0xFD8ACC", Offset = "0xFD8ACC", VA = "0xFD8ACC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C7F")]
			[Address(RVA = "0xFD87AC", Offset = "0xFD87AC", VA = "0xFD87AC")]
			[DebuggerHidden]
			public <LevelFailedCoroutine>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001C80")]
			[Address(RVA = "0xFD87D8", Offset = "0xFD87D8", VA = "0xFD87D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C81")]
			[Address(RVA = "0xFD87DC", Offset = "0xFD87DC", VA = "0xFD87DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C83")]
			[Address(RVA = "0xFD8A8C", Offset = "0xFD8A8C", VA = "0xFD8A8C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200046D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849894", Offset = "0x849894")]
		private sealed class <NextFloor>d__89 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002157")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002158")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002159")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x400215A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <from>5__2;

			[Token(Token = "0x400215B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <to>5__3;

			[Token(Token = "0x400215C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <duration>5__4;

			[Token(Token = "0x400215D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <pass>5__5;

			[Token(Token = "0x17000273")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C88")]
				[Address(RVA = "0xFD9248", Offset = "0xFD9248", VA = "0xFD9248", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000274")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C8A")]
				[Address(RVA = "0xFD9290", Offset = "0xFD9290", VA = "0xFD9290", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C85")]
			[Address(RVA = "0xFD8AD4", Offset = "0xFD8AD4", VA = "0xFD8AD4")]
			[DebuggerHidden]
			public <NextFloor>d__89(int <>1__state)
			{
			}

			[Token(Token = "0x6001C86")]
			[Address(RVA = "0xFD8B00", Offset = "0xFD8B00", VA = "0xFD8B00", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C87")]
			[Address(RVA = "0xFD8B04", Offset = "0xFD8B04", VA = "0xFD8B04", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C89")]
			[Address(RVA = "0xFD9250", Offset = "0xFD9250", VA = "0xFD9250", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200046E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8498A4", Offset = "0x8498A4")]
		private sealed class <floor_1_5>d__99 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400215E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400215F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002160")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x4002161")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x17000275")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C8E")]
				[Address(RVA = "0xFD9A48", Offset = "0xFD9A48", VA = "0xFD9A48", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000276")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C90")]
				[Address(RVA = "0xFD9A90", Offset = "0xFD9A90", VA = "0xFD9A90", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C8B")]
			[Address(RVA = "0xFD9580", Offset = "0xFD9580", VA = "0xFD9580")]
			[DebuggerHidden]
			public <floor_1_5>d__99(int <>1__state)
			{
			}

			[Token(Token = "0x6001C8C")]
			[Address(RVA = "0xFD95AC", Offset = "0xFD95AC", VA = "0xFD95AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C8D")]
			[Address(RVA = "0xFD95B0", Offset = "0xFD95B0", VA = "0xFD95B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C8F")]
			[Address(RVA = "0xFD9A50", Offset = "0xFD9A50", VA = "0xFD9A50", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200046F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8498B4", Offset = "0x8498B4")]
		private sealed class <floor_2_4>d__105 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002162")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002163")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002164")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x4002165")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x4002166")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <last_civilian>5__3;

			[Token(Token = "0x4002167")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int[] <health>5__4;

			[Token(Token = "0x17000277")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C94")]
				[Address(RVA = "0xFDA11C", Offset = "0xFDA11C", VA = "0xFDA11C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000278")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C96")]
				[Address(RVA = "0xFDA164", Offset = "0xFDA164", VA = "0xFDA164", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C91")]
			[Address(RVA = "0xFD9A98", Offset = "0xFD9A98", VA = "0xFD9A98")]
			[DebuggerHidden]
			public <floor_2_4>d__105(int <>1__state)
			{
			}

			[Token(Token = "0x6001C92")]
			[Address(RVA = "0xFD9AC4", Offset = "0xFD9AC4", VA = "0xFD9AC4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C93")]
			[Address(RVA = "0xFD9AC8", Offset = "0xFD9AC8", VA = "0xFD9AC8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C95")]
			[Address(RVA = "0xFDA124", Offset = "0xFDA124", VA = "0xFDA124", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000470")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8498C4", Offset = "0x8498C4")]
		private sealed class <floor_3_3>d__108 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002168")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002169")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400216A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_2 <>4__this;

			[Token(Token = "0x400216B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int[] <health>5__2;

			[Token(Token = "0x400216C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <next>5__3;

			[Token(Token = "0x17000279")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001C9A")]
				[Address(RVA = "0xFDAE34", Offset = "0xFDAE34", VA = "0xFDAE34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001C9C")]
				[Address(RVA = "0xFDAE7C", Offset = "0xFDAE7C", VA = "0xFDAE7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C97")]
			[Address(RVA = "0xFDA16C", Offset = "0xFDA16C", VA = "0xFDA16C")]
			[DebuggerHidden]
			public <floor_3_3>d__108(int <>1__state)
			{
			}

			[Token(Token = "0x6001C98")]
			[Address(RVA = "0xFDA198", Offset = "0xFDA198", VA = "0xFDA198", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C99")]
			[Address(RVA = "0xFDA19C", Offset = "0xFDA19C", VA = "0xFDA19C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001C9B")]
			[Address(RVA = "0xFDAE3C", Offset = "0xFDAE3C", VA = "0xFDAE3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool skip_intro;

		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int current_floor;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private int start_floor;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public hud hud;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool level_started;

		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool level_ended;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool elevator_busy;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject Elevator;

		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform elevator_door_right;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform elevator_door_left;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform elevator_door_left_open;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform elevator_door_left_close;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform elevator_door_right_open;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform elevator_door_right_close;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 floor_0_pos;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 floor_1_pos;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Vector3 floor_2_pos;

		[Token(Token = "0x4000B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public Vector3 floor_3_pos;

		[Token(Token = "0x4000B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject floor_0;

		[Token(Token = "0x4000B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject floor_1;

		[Token(Token = "0x4000B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject floor_2;

		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject floor_3;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public sound elevator_door_open;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public sound elevator_door_close;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public sound elevator_ring;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private sound music_current;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public sound music_idle;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public sound music_action;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public sound music_win;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public sound music_lose;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public sound music_elevator;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Text display_floor_number;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject display_floor_arrow;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<npc> enemies;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private List<npc> civilians;

		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public tool_firearm rifle_1;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public tool_firearm rifle_2;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject rifle_1_broken;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObject rifle_2_broken;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public Rigidbody[] rifle_1_broken_bodies;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public Rigidbody[] rifle_2_broken_bodies;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public npc floor_0_captain;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public lips floor_0_captain_lips;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public sound floor_0_captain_audio;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public Transform floor_1_captain_head;

		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool floor_1_arrived;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x179")]
		private bool floor_1_started;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public path[] floor_1_paths;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public npc[] floor_1_npcs;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public npc floor_1_guard;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public npc[] floor_1_civilians;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		private int floor_1_npc_total;

		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		private int floor_1_npc_limit;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public npc floor_2_guard;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private bool floor_2_started;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private int floor_2_npc_total;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private int floor_2_npc_limit;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public path[] floor_2_paths;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public npc[] floor_2_npcs;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public path[] floor_2_paths_civilians;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public npc[] floor_2_npcs_civilians;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public npc floor_3_civilian;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public npc floor_3_boss;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private bool floor_3_boss_outline_show;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float outline_width_dir;

		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private float outline_width;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public Outline floor_3_boss_outline;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public npc floor_3_captain;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public npc floor_3_gunny;

		[Token(Token = "0x4000B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private int floor_3_npc_limit;

		[Token(Token = "0x4000B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public path[] floor_3_paths;

		[Token(Token = "0x4000B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public npc[] floor_3_npcs;

		[Token(Token = "0x4000B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public Dictionary<npc, float> floor_3_npcs_unload;

		[Token(Token = "0x4000B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public sound floor_3_captain_audio;

		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public lips floor_3_captain_lips;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private int total_to_kill;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private int total_killed;

		[Token(Token = "0x6000BC8")]
		[Address(RVA = "0xC63438", Offset = "0xC63438", VA = "0xC63438")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BC9")]
		[Address(RVA = "0xC63508", Offset = "0xC63508", VA = "0xC63508")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BCA")]
		[Address(RVA = "0xC63D0C", Offset = "0xC63D0C", VA = "0xC63D0C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xC63B08", Offset = "0xC63B08", VA = "0xC63B08")]
		private void update_outline()
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xC638EC", Offset = "0xC638EC", VA = "0xC638EC")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xC642FC", Offset = "0xC642FC", VA = "0xC642FC")]
		public void begin_skip()
		{
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xC6422C", Offset = "0xC6422C", VA = "0xC6422C")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000BCF")]
		[Address(RVA = "0xC64408", Offset = "0xC64408", VA = "0xC64408")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857D70", Offset = "0x857D70")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000BD0")]
		[Address(RVA = "0xC63BEC", Offset = "0xC63BEC", VA = "0xC63BEC")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xC6449C", Offset = "0xC6449C", VA = "0xC6449C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857DD8", Offset = "0x857DD8")]
		private IEnumerator LevelFailedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000BD2")]
		[Address(RVA = "0xC6451C", Offset = "0xC6451C", VA = "0xC6451C")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000BD3")]
		[Address(RVA = "0xC64388", Offset = "0xC64388", VA = "0xC64388")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857E40", Offset = "0x857E40")]
		private IEnumerator NextFloor()
		{
			return null;
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xC645E4", Offset = "0xC645E4", VA = "0xC645E4")]
		public void floor_0_1()
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xC649FC", Offset = "0xC649FC", VA = "0xC649FC")]
		public void floor_0_2()
		{
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xC64B24", Offset = "0xC64B24", VA = "0xC64B24")]
		public void floor_1_1()
		{
		}

		[Token(Token = "0x6000BD7")]
		[Address(RVA = "0xC64B70", Offset = "0xC64B70", VA = "0xC64B70")]
		public void floor_1_2()
		{
		}

		[Token(Token = "0x6000BD8")]
		[Address(RVA = "0xC64BE8", Offset = "0xC64BE8", VA = "0xC64BE8")]
		public void floor_1_3(tool_flashbang flashbang)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xC64CBC", Offset = "0xC64CBC", VA = "0xC64CBC")]
		public void floor_1_3(tool_grenade grenade)
		{
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xC64CC0", Offset = "0xC64CC0", VA = "0xC64CC0")]
		public void floor_1_3(tool_firearm weapon)
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xC64BEC", Offset = "0xC64BEC", VA = "0xC64BEC")]
		public void floor_1_3()
		{
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xC64D44", Offset = "0xC64D44", VA = "0xC64D44")]
		private path get_free_path(path[] _paths, List<npc> _npcs)
		{
			return null;
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xC64CC4", Offset = "0xC64CC4", VA = "0xC64CC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857EA8", Offset = "0x857EA8")]
		private IEnumerator floor_1_5()
		{
			return null;
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xC64FBC", Offset = "0xC64FBC", VA = "0xC64FBC")]
		public void civilian_path_complete(npc npc)
		{
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xC64FF8", Offset = "0xC64FF8", VA = "0xC64FF8")]
		public void civilian_hit(npc npc)
		{
		}

		[Token(Token = "0x6000BE0")]
		[Address(RVA = "0xC650FC", Offset = "0xC650FC", VA = "0xC650FC")]
		public void floor_2_1()
		{
		}

		[Token(Token = "0x6000BE1")]
		[Address(RVA = "0xC652E4", Offset = "0xC652E4", VA = "0xC652E4")]
		public void floor_2_2()
		{
		}

		[Token(Token = "0x6000BE2")]
		[Address(RVA = "0xC6535C", Offset = "0xC6535C", VA = "0xC6535C")]
		public void floor_2_3(npc npc)
		{
		}

		[Token(Token = "0x6000BE3")]
		[Address(RVA = "0xC653BC", Offset = "0xC653BC", VA = "0xC653BC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857F10", Offset = "0x857F10")]
		private IEnumerator floor_2_4()
		{
			return null;
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xC6543C", Offset = "0xC6543C", VA = "0xC6543C")]
		public void floor_3_1()
		{
		}

		[Token(Token = "0x6000BE5")]
		[Address(RVA = "0xC65684", Offset = "0xC65684", VA = "0xC65684")]
		public void floor_3_2()
		{
		}

		[Token(Token = "0x6000BE6")]
		[Address(RVA = "0xC656D8", Offset = "0xC656D8", VA = "0xC656D8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857F78", Offset = "0x857F78")]
		private IEnumerator floor_3_3()
		{
			return null;
		}

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xC65758", Offset = "0xC65758", VA = "0xC65758")]
		public void boss_path_stop()
		{
		}

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xC65780", Offset = "0xC65780", VA = "0xC65780")]
		public void boss_hit(npc npc)
		{
		}

		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xC657B4", Offset = "0xC657B4", VA = "0xC657B4")]
		public void floor_3_npc_hit(npc npc)
		{
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xC65874", Offset = "0xC65874", VA = "0xC65874")]
		public void floor_3_captain_arrived(npc npc)
		{
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xC65A38", Offset = "0xC65A38", VA = "0xC65A38")]
		public void floor_3_completed()
		{
		}

		[Token(Token = "0x6000BEC")]
		[Address(RVA = "0xC65AC4", Offset = "0xC65AC4", VA = "0xC65AC4")]
		public level_2()
		{
		}
	}
	[Token(Token = "0x20001B1")]
	public class level_3 : level
	{
		[Token(Token = "0x2000471")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8498D4", Offset = "0x8498D4")]
		private sealed class <PlayMusicCoroutine>d__53 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400216D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400216E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400216F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x4002170")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4002171")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4002172")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4002173")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x1700027B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA0")]
				[Address(RVA = "0xFDB43C", Offset = "0xFDB43C", VA = "0xFDB43C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA2")]
				[Address(RVA = "0xFDB484", Offset = "0xFDB484", VA = "0xFDB484", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001C9D")]
			[Address(RVA = "0xFDB1A4", Offset = "0xFDB1A4", VA = "0xFDB1A4")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__53(int <>1__state)
			{
			}

			[Token(Token = "0x6001C9E")]
			[Address(RVA = "0xFDB1D0", Offset = "0xFDB1D0", VA = "0xFDB1D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001C9F")]
			[Address(RVA = "0xFDB1D4", Offset = "0xFDB1D4", VA = "0xFDB1D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA1")]
			[Address(RVA = "0xFDB444", Offset = "0xFDB444", VA = "0xFDB444", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000472")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8498E4", Offset = "0x8498E4")]
		private sealed class <LevelFailedCoroutine>d__56 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002174")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002175")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002176")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x1700027D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CA6")]
				[Address(RVA = "0xFDB154", Offset = "0xFDB154", VA = "0xFDB154", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700027E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CA8")]
				[Address(RVA = "0xFDB19C", Offset = "0xFDB19C", VA = "0xFDB19C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA3")]
			[Address(RVA = "0xFDAE84", Offset = "0xFDAE84", VA = "0xFDAE84")]
			[DebuggerHidden]
			public <LevelFailedCoroutine>d__56(int <>1__state)
			{
			}

			[Token(Token = "0x6001CA4")]
			[Address(RVA = "0xFDAEB0", Offset = "0xFDAEB0", VA = "0xFDAEB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CA5")]
			[Address(RVA = "0xFDAEB4", Offset = "0xFDAEB4", VA = "0xFDAEB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CA7")]
			[Address(RVA = "0xFDB15C", Offset = "0xFDB15C", VA = "0xFDB15C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000473")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8498F4", Offset = "0x8498F4")]
		private sealed class <wave_1>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002177")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002178")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002179")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x400217A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<path>.Enumerator <>7__wrap1;

			[Token(Token = "0x400217B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private GameObject[] <>7__wrap2;

			[Token(Token = "0x400217C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap3;

			[Token(Token = "0x1700027F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CAD")]
				[Address(RVA = "0xFDBFC0", Offset = "0xFDBFC0", VA = "0xFDBFC0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000280")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CAF")]
				[Address(RVA = "0xFDC008", Offset = "0xFDC008", VA = "0xFDC008", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CA9")]
			[Address(RVA = "0xFDB48C", Offset = "0xFDB48C", VA = "0xFDB48C")]
			[DebuggerHidden]
			public <wave_1>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001CAA")]
			[Address(RVA = "0xFDB4B8", Offset = "0xFDB4B8", VA = "0xFDB4B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CAB")]
			[Address(RVA = "0xFDB530", Offset = "0xFDB530", VA = "0xFDB530", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CAC")]
			[Address(RVA = "0xFDB4D4", Offset = "0xFDB4D4", VA = "0xFDB4D4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001CAE")]
			[Address(RVA = "0xFDBFC8", Offset = "0xFDBFC8", VA = "0xFDBFC8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000474")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849904", Offset = "0x849904")]
		private sealed class <wave_2>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400217D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400217E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400217F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x4002180")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private GameObject[] <>7__wrap1;

			[Token(Token = "0x4002181")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x4002182")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<path>.Enumerator <>7__wrap3;

			[Token(Token = "0x17000281")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CB4")]
				[Address(RVA = "0xFDC808", Offset = "0xFDC808", VA = "0xFDC808", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000282")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CB6")]
				[Address(RVA = "0xFDC850", Offset = "0xFDC850", VA = "0xFDC850", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CB0")]
			[Address(RVA = "0xFDC010", Offset = "0xFDC010", VA = "0xFDC010")]
			[DebuggerHidden]
			public <wave_2>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB1")]
			[Address(RVA = "0xFDC03C", Offset = "0xFDC03C", VA = "0xFDC03C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB2")]
			[Address(RVA = "0xFDC0B4", Offset = "0xFDC0B4", VA = "0xFDC0B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CB3")]
			[Address(RVA = "0xFDC058", Offset = "0xFDC058", VA = "0xFDC058")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001CB5")]
			[Address(RVA = "0xFDC810", Offset = "0xFDC810", VA = "0xFDC810", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000475")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849914", Offset = "0x849914")]
		private sealed class <wave_3>d__70 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002183")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002184")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002185")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x4002186")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x17000283")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CBA")]
				[Address(RVA = "0xFDCD38", Offset = "0xFDCD38", VA = "0xFDCD38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000284")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CBC")]
				[Address(RVA = "0xFDCD80", Offset = "0xFDCD80", VA = "0xFDCD80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CB7")]
			[Address(RVA = "0xFDC858", Offset = "0xFDC858", VA = "0xFDC858")]
			[DebuggerHidden]
			public <wave_3>d__70(int <>1__state)
			{
			}

			[Token(Token = "0x6001CB8")]
			[Address(RVA = "0xFDC884", Offset = "0xFDC884", VA = "0xFDC884", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CB9")]
			[Address(RVA = "0xFDC888", Offset = "0xFDC888", VA = "0xFDC888", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CBB")]
			[Address(RVA = "0xFDCD40", Offset = "0xFDCD40", VA = "0xFDCD40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000476")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849924", Offset = "0x849924")]
		private sealed class <wave_4>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002187")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002188")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002189")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x400218A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x17000285")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC0")]
				[Address(RVA = "0xFDD268", Offset = "0xFDD268", VA = "0xFDD268", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000286")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC2")]
				[Address(RVA = "0xFDD2B0", Offset = "0xFDD2B0", VA = "0xFDD2B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CBD")]
			[Address(RVA = "0xFDCD88", Offset = "0xFDCD88", VA = "0xFDCD88")]
			[DebuggerHidden]
			public <wave_4>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001CBE")]
			[Address(RVA = "0xFDCDB4", Offset = "0xFDCDB4", VA = "0xFDCDB4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CBF")]
			[Address(RVA = "0xFDCDB8", Offset = "0xFDCDB8", VA = "0xFDCDB8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC1")]
			[Address(RVA = "0xFDD270", Offset = "0xFDD270", VA = "0xFDD270", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000477")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849934", Offset = "0x849934")]
		private sealed class <wave_5>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400218C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400218D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_3 <>4__this;

			[Token(Token = "0x400218E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x17000287")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CC6")]
				[Address(RVA = "0xFDD8F8", Offset = "0xFDD8F8", VA = "0xFDD8F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000288")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CC8")]
				[Address(RVA = "0xFDD940", Offset = "0xFDD940", VA = "0xFDD940", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CC3")]
			[Address(RVA = "0xFDD2B8", Offset = "0xFDD2B8", VA = "0xFDD2B8")]
			[DebuggerHidden]
			public <wave_5>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6001CC4")]
			[Address(RVA = "0xFDD2E4", Offset = "0xFDD2E4", VA = "0xFDD2E4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CC5")]
			[Address(RVA = "0xFDD2E8", Offset = "0xFDD2E8", VA = "0xFDD2E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CC7")]
			[Address(RVA = "0xFDD900", Offset = "0xFDD900", VA = "0xFDD900", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool skip_intro;

		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public hud hud;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool level_started;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool level_ended;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private sound music_current;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound music_idle;

		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound music_action;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public sound music_win;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound music_lose;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject[] flashbangs;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject[] grenades;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private List<npc> enemies;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<npc> civilians;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public tool_firearm pistol;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public tool_firearm pistol2;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public tool_firearm shootgun1;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public tool_firearm shootgun2;

		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public tool_firearm rifle;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public heli heli;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public path heli_path_2;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public npc robert;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public sound robert_audio;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public npc captain;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public sound captain_audio;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public lips captain_lips;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public npc[] npcs;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public path[] wave_1_paths;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public path[] wave_2_paths;

		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public path[] wave_345_paths;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool first_weapon_grab;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF9")]
		private bool sound_busy;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float sound_last;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private float sound_cooldown;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		private int sound_kills_count;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private int sound_hits_count;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		private float sound_last_idle;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int player_last_health;

		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int wave_3_npc_total;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int wave_3_npc_limit;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int wave_4_npc_total;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int wave_4_npc_limit;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private int wave_5_npc_total;

		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int wave_5_npc_limit;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int total_to_kill;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int total_killed;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public npc Gorgon;

		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xC65C00", Offset = "0xC65C00", VA = "0xC65C00")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xC65D04", Offset = "0xC65D04", VA = "0xC65D04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xC66654", Offset = "0xC66654", VA = "0xC66654")]
		private void Start()
		{
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xC66250", Offset = "0xC66250", VA = "0xC66250")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xC66A4C", Offset = "0xC66A4C", VA = "0xC66A4C")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xC66578", Offset = "0xC66578", VA = "0xC66578")]
		private void PlaySound(string name)
		{
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xC66B1C", Offset = "0xC66B1C", VA = "0xC66B1C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x857FE0", Offset = "0x857FE0")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xC66BB0", Offset = "0xC66BB0", VA = "0xC66BB0")]
		public void GorgonKilled(npc _npc)
		{
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xC663F4", Offset = "0xC663F4", VA = "0xC663F4")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xC66E80", Offset = "0xC66E80", VA = "0xC66E80")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858048", Offset = "0x858048")]
		private IEnumerator LevelFailedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000BF8")]
		[Address(RVA = "0xC66F00", Offset = "0xC66F00", VA = "0xC66F00")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xC66FC8", Offset = "0xC66FC8", VA = "0xC66FC8")]
		public void LevelWinEnded()
		{
		}

		[Token(Token = "0x6000BFA")]
		[Address(RVA = "0xC67054", Offset = "0xC67054", VA = "0xC67054")]
		public void gorgon_jump_above_player()
		{
		}

		[Token(Token = "0x6000BFB")]
		[Address(RVA = "0xC67108", Offset = "0xC67108", VA = "0xC67108")]
		private path get_free_path(path[] _paths, List<npc> _npcs)
		{
			return null;
		}

		[Token(Token = "0x6000BFC")]
		[Address(RVA = "0xC67380", Offset = "0xC67380", VA = "0xC67380")]
		public void civilian_path_complete(npc npc)
		{
		}

		[Token(Token = "0x6000BFD")]
		[Address(RVA = "0xC6739C", Offset = "0xC6739C", VA = "0xC6739C")]
		public void civilian_hit(npc npc)
		{
		}

		[Token(Token = "0x6000BFE")]
		[Address(RVA = "0xC674A0", Offset = "0xC674A0", VA = "0xC674A0")]
		public void on_weapon_grab(toolbase tool)
		{
		}

		[Token(Token = "0x6000BFF")]
		[Address(RVA = "0xC674AC", Offset = "0xC674AC", VA = "0xC674AC")]
		public void begin_skip()
		{
		}

		[Token(Token = "0x6000C00")]
		[Address(RVA = "0xC675B0", Offset = "0xC675B0", VA = "0xC675B0")]
		private void begin_1()
		{
		}

		[Token(Token = "0x6000C01")]
		[Address(RVA = "0xC67914", Offset = "0xC67914", VA = "0xC67914")]
		private void begin_2()
		{
		}

		[Token(Token = "0x6000C02")]
		[Address(RVA = "0xC67940", Offset = "0xC67940", VA = "0xC67940")]
		public void begin_heli_path_complete(heli heli)
		{
		}

		[Token(Token = "0x6000C03")]
		[Address(RVA = "0xC67530", Offset = "0xC67530", VA = "0xC67530")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8580B0", Offset = "0x8580B0")]
		private IEnumerator wave_1()
		{
			return null;
		}

		[Token(Token = "0x6000C04")]
		[Address(RVA = "0xC67C28", Offset = "0xC67C28", VA = "0xC67C28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858118", Offset = "0x858118")]
		private IEnumerator wave_2()
		{
			return null;
		}

		[Token(Token = "0x6000C05")]
		[Address(RVA = "0xC67CA8", Offset = "0xC67CA8", VA = "0xC67CA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858180", Offset = "0x858180")]
		private IEnumerator wave_3()
		{
			return null;
		}

		[Token(Token = "0x6000C06")]
		[Address(RVA = "0xC67D28", Offset = "0xC67D28", VA = "0xC67D28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8581E8", Offset = "0x8581E8")]
		private IEnumerator wave_4()
		{
			return null;
		}

		[Token(Token = "0x6000C07")]
		[Address(RVA = "0xC67DA8", Offset = "0xC67DA8", VA = "0xC67DA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858250", Offset = "0x858250")]
		private IEnumerator wave_5()
		{
			return null;
		}

		[Token(Token = "0x6000C08")]
		[Address(RVA = "0xC67E28", Offset = "0xC67E28", VA = "0xC67E28")]
		public level_3()
		{
		}
	}
	[Token(Token = "0x20001B2")]
	public class level_4 : level
	{
		[Token(Token = "0x2000478")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849944", Offset = "0x849944")]
		private sealed class <PlayMusicCoroutine>d__109 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400218F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002190")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002191")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x4002192")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4002193")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4002194")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4002195")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x17000289")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CCC")]
				[Address(RVA = "0xFDDF08", Offset = "0xFDDF08", VA = "0xFDDF08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CCE")]
				[Address(RVA = "0xFDDF50", Offset = "0xFDDF50", VA = "0xFDDF50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CC9")]
			[Address(RVA = "0xFDDC70", Offset = "0xFDDC70", VA = "0xFDDC70")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__109(int <>1__state)
			{
			}

			[Token(Token = "0x6001CCA")]
			[Address(RVA = "0xFDDC9C", Offset = "0xFDDC9C", VA = "0xFDDC9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CCB")]
			[Address(RVA = "0xFDDCA0", Offset = "0xFDDCA0", VA = "0xFDDCA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CCD")]
			[Address(RVA = "0xFDDF10", Offset = "0xFDDF10", VA = "0xFDDF10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000479")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849954", Offset = "0x849954")]
		private sealed class <LevelFailedCoroutine>d__111 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002196")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002197")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002198")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x1700028B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD2")]
				[Address(RVA = "0xFDDC20", Offset = "0xFDDC20", VA = "0xFDDC20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CD4")]
				[Address(RVA = "0xFDDC68", Offset = "0xFDDC68", VA = "0xFDDC68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CCF")]
			[Address(RVA = "0xFDD948", Offset = "0xFDD948", VA = "0xFDD948")]
			[DebuggerHidden]
			public <LevelFailedCoroutine>d__111(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD0")]
			[Address(RVA = "0xFDD974", Offset = "0xFDD974", VA = "0xFDD974", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD1")]
			[Address(RVA = "0xFDD978", Offset = "0xFDD978", VA = "0xFDD978", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD3")]
			[Address(RVA = "0xFDDC28", Offset = "0xFDDC28", VA = "0xFDDC28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849964", Offset = "0x849964")]
		private sealed class <room_1_battle>d__123 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002199")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400219A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400219B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x400219C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x400219D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private npc[] <>7__wrap2;

			[Token(Token = "0x400219E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x400219F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private npc <npc>5__5;

			[Token(Token = "0x40021A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bomb[] <>7__wrap5;

			[Token(Token = "0x40021A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private toolbase[] <>7__wrap6;

			[Token(Token = "0x1700028D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CD8")]
				[Address(RVA = "0xFDF454", Offset = "0xFDF454", VA = "0xFDF454", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700028E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CDA")]
				[Address(RVA = "0xFDF49C", Offset = "0xFDF49C", VA = "0xFDF49C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CD5")]
			[Address(RVA = "0xFDEA70", Offset = "0xFDEA70", VA = "0xFDEA70")]
			[DebuggerHidden]
			public <room_1_battle>d__123(int <>1__state)
			{
			}

			[Token(Token = "0x6001CD6")]
			[Address(RVA = "0xFDEA9C", Offset = "0xFDEA9C", VA = "0xFDEA9C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CD7")]
			[Address(RVA = "0xFDEAA0", Offset = "0xFDEAA0", VA = "0xFDEAA0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CD9")]
			[Address(RVA = "0xFDF45C", Offset = "0xFDF45C", VA = "0xFDF45C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849974", Offset = "0x849974")]
		private sealed class <room_2_battle>d__128 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x40021A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <door_from>5__2;

			[Token(Token = "0x40021A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <door_to>5__3;

			[Token(Token = "0x40021A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <duration>5__4;

			[Token(Token = "0x40021A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <pass>5__5;

			[Token(Token = "0x40021A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <left>5__6;

			[Token(Token = "0x40021AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private npc[] <>7__wrap6;

			[Token(Token = "0x40021AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private int <>7__wrap7;

			[Token(Token = "0x40021AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private npc <npc>5__9;

			[Token(Token = "0x40021AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private bomb[] <>7__wrap9;

			[Token(Token = "0x40021AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			private toolbase[] <>7__wrap10;

			[Token(Token = "0x40021AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			private prop[] <>7__wrap11;

			[Token(Token = "0x1700028F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CDE")]
				[Address(RVA = "0xFE02A8", Offset = "0xFE02A8", VA = "0xFE02A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000290")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE0")]
				[Address(RVA = "0xFE02F0", Offset = "0xFE02F0", VA = "0xFE02F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CDB")]
			[Address(RVA = "0xFDF4A4", Offset = "0xFDF4A4", VA = "0xFDF4A4")]
			[DebuggerHidden]
			public <room_2_battle>d__128(int <>1__state)
			{
			}

			[Token(Token = "0x6001CDC")]
			[Address(RVA = "0xFDF4D0", Offset = "0xFDF4D0", VA = "0xFDF4D0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CDD")]
			[Address(RVA = "0xFDF4D4", Offset = "0xFDF4D4", VA = "0xFDF4D4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CDF")]
			[Address(RVA = "0xFE02B0", Offset = "0xFE02B0", VA = "0xFE02B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849984", Offset = "0x849984")]
		private sealed class <hall_1_battle>d__132 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x40021B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private path[] <>7__wrap1;

			[Token(Token = "0x40021B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x17000291")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CE4")]
				[Address(RVA = "0xFDE318", Offset = "0xFDE318", VA = "0xFDE318", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000292")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CE6")]
				[Address(RVA = "0xFDE360", Offset = "0xFDE360", VA = "0xFDE360", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CE1")]
			[Address(RVA = "0xFDDF58", Offset = "0xFDDF58", VA = "0xFDDF58")]
			[DebuggerHidden]
			public <hall_1_battle>d__132(int <>1__state)
			{
			}

			[Token(Token = "0x6001CE2")]
			[Address(RVA = "0xFDDF84", Offset = "0xFDDF84", VA = "0xFDDF84", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CE3")]
			[Address(RVA = "0xFDDF88", Offset = "0xFDDF88", VA = "0xFDDF88", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CE5")]
			[Address(RVA = "0xFDE320", Offset = "0xFDE320", VA = "0xFDE320", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849994", Offset = "0x849994")]
		private sealed class <room_3_battle>d__135 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x40021B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private npc[] <>7__wrap1;

			[Token(Token = "0x40021B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x40021BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private npc <npc>5__4;

			[Token(Token = "0x17000293")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CEA")]
				[Address(RVA = "0xFE0890", Offset = "0xFE0890", VA = "0xFE0890", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000294")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CEC")]
				[Address(RVA = "0xFE08D8", Offset = "0xFE08D8", VA = "0xFE08D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CE7")]
			[Address(RVA = "0xFE02F8", Offset = "0xFE02F8", VA = "0xFE02F8")]
			[DebuggerHidden]
			public <room_3_battle>d__135(int <>1__state)
			{
			}

			[Token(Token = "0x6001CE8")]
			[Address(RVA = "0xFE0324", Offset = "0xFE0324", VA = "0xFE0324", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CE9")]
			[Address(RVA = "0xFE0328", Offset = "0xFE0328", VA = "0xFE0328", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CEB")]
			[Address(RVA = "0xFE0898", Offset = "0xFE0898", VA = "0xFE0898", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8499A4", Offset = "0x8499A4")]
		private sealed class <room_4_battle>d__139 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x40021BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x40021BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private npc[] <>7__wrap2;

			[Token(Token = "0x40021C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x40021C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private npc <npc>5__5;

			[Token(Token = "0x40021C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private toolbase[] <>7__wrap5;

			[Token(Token = "0x17000295")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF0")]
				[Address(RVA = "0xFE1094", Offset = "0xFE1094", VA = "0xFE1094", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000296")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF2")]
				[Address(RVA = "0xFE10DC", Offset = "0xFE10DC", VA = "0xFE10DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CED")]
			[Address(RVA = "0xFE08E0", Offset = "0xFE08E0", VA = "0xFE08E0")]
			[DebuggerHidden]
			public <room_4_battle>d__139(int <>1__state)
			{
			}

			[Token(Token = "0x6001CEE")]
			[Address(RVA = "0xFE090C", Offset = "0xFE090C", VA = "0xFE090C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CEF")]
			[Address(RVA = "0xFE0910", Offset = "0xFE0910", VA = "0xFE0910", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF1")]
			[Address(RVA = "0xFE109C", Offset = "0xFE109C", VA = "0xFE109C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200047F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8499B4", Offset = "0x8499B4")]
		private sealed class <hall_2_battle>d__142 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x40021C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <left>5__2;

			[Token(Token = "0x40021C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private toolbase[] <>7__wrap2;

			[Token(Token = "0x40021C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap3;

			[Token(Token = "0x40021C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private npc[] <>7__wrap4;

			[Token(Token = "0x17000297")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CF6")]
				[Address(RVA = "0xFDEA20", Offset = "0xFDEA20", VA = "0xFDEA20", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000298")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CF8")]
				[Address(RVA = "0xFDEA68", Offset = "0xFDEA68", VA = "0xFDEA68", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF3")]
			[Address(RVA = "0xFDE368", Offset = "0xFDE368", VA = "0xFDE368")]
			[DebuggerHidden]
			public <hall_2_battle>d__142(int <>1__state)
			{
			}

			[Token(Token = "0x6001CF4")]
			[Address(RVA = "0xFDE394", Offset = "0xFDE394", VA = "0xFDE394", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CF5")]
			[Address(RVA = "0xFDE398", Offset = "0xFDE398", VA = "0xFDE398", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CF7")]
			[Address(RVA = "0xFDEA28", Offset = "0xFDEA28", VA = "0xFDEA28", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000480")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8499C4", Offset = "0x8499C4")]
		private sealed class <room_5_battle>d__149 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_4 <>4__this;

			[Token(Token = "0x40021CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private npc[] <>7__wrap1;

			[Token(Token = "0x40021CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <>7__wrap2;

			[Token(Token = "0x40021CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private npc <npc>5__4;

			[Token(Token = "0x17000299")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001CFC")]
				[Address(RVA = "0xD243EC", Offset = "0xD243EC", VA = "0xD243EC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001CFE")]
				[Address(RVA = "0xD24434", Offset = "0xD24434", VA = "0xD24434", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CF9")]
			[Address(RVA = "0xD23BBC", Offset = "0xD23BBC", VA = "0xD23BBC")]
			[DebuggerHidden]
			public <room_5_battle>d__149(int <>1__state)
			{
			}

			[Token(Token = "0x6001CFA")]
			[Address(RVA = "0xD23BE8", Offset = "0xD23BE8", VA = "0xD23BE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001CFB")]
			[Address(RVA = "0xD23BEC", Offset = "0xD23BEC", VA = "0xD23BEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001CFD")]
			[Address(RVA = "0xD243F4", Offset = "0xD243F4", VA = "0xD243F4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool skip_intro;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public point skip_captain_point;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public point skip_george_point;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public point skip_robert_point;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject teleport_dialog;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject teleport_room1;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject teleport_room1inside;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject teleport_room2;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject teleport_room2inside;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject teleport_jumper1;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject teleport_jumper2;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject teleport_room3;

		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject teleport_room3inside;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject teleport_room4;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject teleport_room4inside;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject teleport_hall;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject teleport_room5pre;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject teleport_room5;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject teleport_room5inside;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private bool level_started;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
		private bool level_ended;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<npc> enemies;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public npc[] npc_bank;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private int total_to_kill;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		private int total_killed;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private int room_5_npc_hit_count;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private int room_1_npc_rand;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private int room_2_npc_rand;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int room_4_npc_rand;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int hall_2_npc_rand;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private int boss_hits_left;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public hud hud;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private sound music_current;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public sound music_idle;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public sound music_action;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public sound music_win;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public sound music_lose;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public sound sound_joe;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public sound sound_george;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public sound sound_robert;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public sound sound_joe_end;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public npc joe;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public npc charles;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public npc allen;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public npc george;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public npc robert;

		[Token(Token = "0x4000BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public npc joe_end;

		[Token(Token = "0x4000BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public lips joe_lips;

		[Token(Token = "0x4000BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public lips joe_end_lips;

		[Token(Token = "0x4000BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public npc boss;

		[Token(Token = "0x4000BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool room_2_start;

		[Token(Token = "0x4000BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool hall_1_npc_killed;

		[Token(Token = "0x4000BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bomb[] room_1_explosives;

		[Token(Token = "0x4000BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public door room_1_door;

		[Token(Token = "0x4000BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public Transform room_1_look;

		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public toolbase[] room_1_weapons;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public npc[] room_1_npc;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public prop[] room_1_props;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public path[] room_1_paths;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public npc room_2_fart;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public sound room_2_fart_sound;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public bomb[] room_2_explosives;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public door room_2_door;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public Transform room_2_look;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public toolbase[] room_2_weapons;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public npc[] room_2_npc;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public path[] room_2_paths;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public toolbase[] hall_1_weapons;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public path[] hall_1_paths;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public Transform hall_1_look;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public bomb[] room_3_explosives;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public door room_3_door;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		public toolbase[] room_3_weapons;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		public npc[] room_3_npc;

		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public prop[] room_3_props;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public Transform room_3_look;

		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public bomb[] room_4_explosives;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public door room_4_door;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public toolbase[] room_4_weapons;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public npc[] room_4_npc;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public path[] room_4_paths;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public Transform room_4_look;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public toolbase[] hall_2_weapons;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public path[] hall_2_paths;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public Transform hall_2_look;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public tool_firearm rifle_1;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public int rifle_1_shoots;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public GameObject rifle_1_break;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public Rigidbody[] rifle_1_break_bodies;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public tool_firearm rifle_2;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public int rifle_2_shoots;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public GameObject rifle_2_break;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public Rigidbody[] rifle_2_break_bodies;

		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public tool_firearm rifle_3;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public int rifle_3_shoots;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public GameObject rifle_3_break;

		[Token(Token = "0x4000BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public Rigidbody[] rifle_3_break_bodies;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public door room_5_door;

		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public toolbase[] room_5_weapons;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public npc[] room_5_npc;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public path[] room_5_paths;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public Transform room_5_look;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		private bool player_path_first;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		private point player_path_next;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private bool player_path_moving;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public path player_path;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private int move_to_callback;

		[Token(Token = "0x6000C0A")]
		[Address(RVA = "0xC67F10", Offset = "0xC67F10", VA = "0xC67F10")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C0B")]
		[Address(RVA = "0xC68618", Offset = "0xC68618", VA = "0xC68618")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C0C")]
		[Address(RVA = "0xC68AE0", Offset = "0xC68AE0", VA = "0xC68AE0")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000C0D")]
		[Address(RVA = "0xC68D68", Offset = "0xC68D68", VA = "0xC68D68")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C0E")]
		[Address(RVA = "0xC68D6C", Offset = "0xC68D6C", VA = "0xC68D6C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C0F")]
		[Address(RVA = "0xC68C98", Offset = "0xC68C98", VA = "0xC68C98")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000C10")]
		[Address(RVA = "0xC69184", Offset = "0xC69184", VA = "0xC69184")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8582B8", Offset = "0x8582B8")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000C11")]
		[Address(RVA = "0xC69064", Offset = "0xC69064", VA = "0xC69064")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000C12")]
		[Address(RVA = "0xC69218", Offset = "0xC69218", VA = "0xC69218")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858320", Offset = "0x858320")]
		private IEnumerator LevelFailedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000C13")]
		[Address(RVA = "0xC69298", Offset = "0xC69298", VA = "0xC69298")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000C14")]
		[Address(RVA = "0xC69360", Offset = "0xC69360", VA = "0xC69360")]
		private path get_free_path(path[] _paths, List<npc> _npcs)
		{
			return null;
		}

		[Token(Token = "0x6000C15")]
		[Address(RVA = "0xC695D8", Offset = "0xC695D8", VA = "0xC695D8")]
		public void on_bomb_explode(bomb bomb)
		{
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xC698EC", Offset = "0xC698EC", VA = "0xC698EC")]
		public void begin_skip()
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xC69AD0", Offset = "0xC69AD0", VA = "0xC69AD0")]
		private void begin_1()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xC69ED0", Offset = "0xC69ED0", VA = "0xC69ED0")]
		private void begin_2()
		{
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xC69F68", Offset = "0xC69F68", VA = "0xC69F68")]
		private void begin_3()
		{
		}

		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xC6A058", Offset = "0xC6A058", VA = "0xC6A058")]
		private void begin_4()
		{
		}

		[Token(Token = "0x6000C1B")]
		[Address(RVA = "0xC6A068", Offset = "0xC6A068", VA = "0xC6A068")]
		public void on_path_complete(npc npc)
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xC6A0E8", Offset = "0xC6A0E8", VA = "0xC6A0E8")]
		public void room_1_arrived()
		{
		}

		[Token(Token = "0x6000C1D")]
		[Address(RVA = "0xC6A1E8", Offset = "0xC6A1E8", VA = "0xC6A1E8")]
		private void room_1_start()
		{
		}

		[Token(Token = "0x6000C1E")]
		[Address(RVA = "0xC6A214", Offset = "0xC6A214", VA = "0xC6A214")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858388", Offset = "0x858388")]
		private IEnumerator room_1_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xC6A294", Offset = "0xC6A294", VA = "0xC6A294")]
		private void room_1_end()
		{
		}

		[Token(Token = "0x6000C20")]
		[Address(RVA = "0xC6A3E0", Offset = "0xC6A3E0", VA = "0xC6A3E0")]
		public void room_2_arrived()
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xC6A5EC", Offset = "0xC6A5EC", VA = "0xC6A5EC")]
		public void room_2_fart_end(npc npc)
		{
		}

		[Token(Token = "0x6000C22")]
		[Address(RVA = "0xC6A5F8", Offset = "0xC6A5F8", VA = "0xC6A5F8")]
		public void george_room_3_arrive()
		{
		}

		[Token(Token = "0x6000C23")]
		[Address(RVA = "0xC6A56C", Offset = "0xC6A56C", VA = "0xC6A56C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8583F0", Offset = "0x8583F0")]
		private IEnumerator room_2_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C24")]
		[Address(RVA = "0xC6A650", Offset = "0xC6A650", VA = "0xC6A650")]
		private void room_2_end()
		{
		}

		[Token(Token = "0x6000C25")]
		[Address(RVA = "0xC6A7C0", Offset = "0xC6A7C0", VA = "0xC6A7C0")]
		public void hall_1_arrived()
		{
		}

		[Token(Token = "0x6000C26")]
		[Address(RVA = "0xC6A8EC", Offset = "0xC6A8EC", VA = "0xC6A8EC")]
		public void hall_1_hit(npc npc)
		{
		}

		[Token(Token = "0x6000C27")]
		[Address(RVA = "0xC6A740", Offset = "0xC6A740", VA = "0xC6A740")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858458", Offset = "0x858458")]
		private IEnumerator hall_1_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C28")]
		[Address(RVA = "0xC6A9B0", Offset = "0xC6A9B0", VA = "0xC6A9B0")]
		public void room_3_arrived()
		{
		}

		[Token(Token = "0x6000C29")]
		[Address(RVA = "0xC6AAEC", Offset = "0xC6AAEC", VA = "0xC6AAEC")]
		private void room_3_start()
		{
		}

		[Token(Token = "0x6000C2A")]
		[Address(RVA = "0xC6AB18", Offset = "0xC6AB18", VA = "0xC6AB18")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8584C0", Offset = "0x8584C0")]
		private IEnumerator room_3_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C2B")]
		[Address(RVA = "0xC6AB98", Offset = "0xC6AB98", VA = "0xC6AB98")]
		private void room_3_end()
		{
		}

		[Token(Token = "0x6000C2C")]
		[Address(RVA = "0xC6ABA4", Offset = "0xC6ABA4", VA = "0xC6ABA4")]
		public void room_4_arrived()
		{
		}

		[Token(Token = "0x6000C2D")]
		[Address(RVA = "0xC6ACDC", Offset = "0xC6ACDC", VA = "0xC6ACDC")]
		private void room_4_start()
		{
		}

		[Token(Token = "0x6000C2E")]
		[Address(RVA = "0xC6AD08", Offset = "0xC6AD08", VA = "0xC6AD08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858528", Offset = "0x858528")]
		private IEnumerator room_4_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C2F")]
		[Address(RVA = "0xC6AD88", Offset = "0xC6AD88", VA = "0xC6AD88")]
		private void room_4_end()
		{
		}

		[Token(Token = "0x6000C30")]
		[Address(RVA = "0xC6AF44", Offset = "0xC6AF44", VA = "0xC6AF44")]
		public void hall_2_arrived()
		{
		}

		[Token(Token = "0x6000C31")]
		[Address(RVA = "0xC6B168", Offset = "0xC6B168", VA = "0xC6B168")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858590", Offset = "0x858590")]
		private IEnumerator hall_2_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C32")]
		[Address(RVA = "0xC6B1E8", Offset = "0xC6B1E8", VA = "0xC6B1E8")]
		private void hall_2_end()
		{
		}

		[Token(Token = "0x6000C33")]
		[Address(RVA = "0xC6B1F4", Offset = "0xC6B1F4", VA = "0xC6B1F4")]
		public void rifle_break_1(tool_firearm weapon)
		{
		}

		[Token(Token = "0x6000C34")]
		[Address(RVA = "0xC6B3C0", Offset = "0xC6B3C0", VA = "0xC6B3C0")]
		public void rifle_break_2(tool_firearm weapon)
		{
		}

		[Token(Token = "0x6000C35")]
		[Address(RVA = "0xC6B58C", Offset = "0xC6B58C", VA = "0xC6B58C")]
		public void rifle_break_3(tool_firearm weapon)
		{
		}

		[Token(Token = "0x6000C36")]
		[Address(RVA = "0xC6B75C", Offset = "0xC6B75C", VA = "0xC6B75C")]
		public void room_5_arrived()
		{
		}

		[Token(Token = "0x6000C37")]
		[Address(RVA = "0xC6B888", Offset = "0xC6B888", VA = "0xC6B888")]
		private void room_5_start()
		{
		}

		[Token(Token = "0x6000C38")]
		[Address(RVA = "0xC6B8B4", Offset = "0xC6B8B4", VA = "0xC6B8B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8585F8", Offset = "0x8585F8")]
		private IEnumerator room_5_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C39")]
		[Address(RVA = "0xC6B934", Offset = "0xC6B934", VA = "0xC6B934")]
		public void boss_hit(npc npc)
		{
		}

		[Token(Token = "0x6000C3A")]
		[Address(RVA = "0xC6BA3C", Offset = "0xC6BA3C", VA = "0xC6BA3C")]
		public void room_5_npc_hit(npc npc)
		{
		}

		[Token(Token = "0x6000C3B")]
		[Address(RVA = "0xC6BA4C", Offset = "0xC6BA4C", VA = "0xC6BA4C")]
		public void room_5_captain_arrived(npc npc)
		{
		}

		[Token(Token = "0x6000C3C")]
		[Address(RVA = "0xC6BC10", Offset = "0xC6BC10", VA = "0xC6BC10")]
		public void room_5_completed()
		{
		}

		[Token(Token = "0x6000C3D")]
		[Address(RVA = "0xC6BC9C", Offset = "0xC6BC9C", VA = "0xC6BC9C")]
		private void player_path_move()
		{
		}

		[Token(Token = "0x6000C3E")]
		[Address(RVA = "0xC6A064", Offset = "0xC6A064", VA = "0xC6A064")]
		private void player_path_resume()
		{
		}

		[Token(Token = "0x6000C3F")]
		[Address(RVA = "0xC6BFEC", Offset = "0xC6BFEC", VA = "0xC6BFEC")]
		public level_4()
		{
		}
	}
	[Token(Token = "0x20001B3")]
	public class level_5 : level
	{
		[Token(Token = "0x2000481")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8499D4", Offset = "0x8499D4")]
		private sealed class <PlayMusicCoroutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x40021D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x40021D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x40021D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x40021D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x1700029B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D02")]
				[Address(RVA = "0xD246D4", Offset = "0xD246D4", VA = "0xD246D4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D04")]
				[Address(RVA = "0xD2471C", Offset = "0xD2471C", VA = "0xD2471C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001CFF")]
			[Address(RVA = "0xD2443C", Offset = "0xD2443C", VA = "0xD2443C")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001D00")]
			[Address(RVA = "0xD24468", Offset = "0xD24468", VA = "0xD24468", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D01")]
			[Address(RVA = "0xD2446C", Offset = "0xD2446C", VA = "0xD2446C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D03")]
			[Address(RVA = "0xD246DC", Offset = "0xD246DC", VA = "0xD246DC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000482")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8499E4", Offset = "0x8499E4")]
		private sealed class <part_1_battle>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x40021DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x40021DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x40021DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private npc[] <>7__wrap3;

			[Token(Token = "0x40021DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <>7__wrap4;

			[Token(Token = "0x40021DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private npc <npc>5__6;

			[Token(Token = "0x1700029D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D08")]
				[Address(RVA = "0xD24B2C", Offset = "0xD24B2C", VA = "0xD24B2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700029E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D0A")]
				[Address(RVA = "0xD24B74", Offset = "0xD24B74", VA = "0xD24B74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D05")]
			[Address(RVA = "0xD24724", Offset = "0xD24724", VA = "0xD24724")]
			[DebuggerHidden]
			public <part_1_battle>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001D06")]
			[Address(RVA = "0xD24750", Offset = "0xD24750", VA = "0xD24750", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D07")]
			[Address(RVA = "0xD24754", Offset = "0xD24754", VA = "0xD24754", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D09")]
			[Address(RVA = "0xD24B34", Offset = "0xD24B34", VA = "0xD24B34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000483")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8499F4", Offset = "0x8499F4")]
		private sealed class <part_2_battle>d__65 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x1700029F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D0E")]
				[Address(RVA = "0xD24DF4", Offset = "0xD24DF4", VA = "0xD24DF4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D10")]
				[Address(RVA = "0xD24E3C", Offset = "0xD24E3C", VA = "0xD24E3C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D0B")]
			[Address(RVA = "0xD24B7C", Offset = "0xD24B7C", VA = "0xD24B7C")]
			[DebuggerHidden]
			public <part_2_battle>d__65(int <>1__state)
			{
			}

			[Token(Token = "0x6001D0C")]
			[Address(RVA = "0xD24BA8", Offset = "0xD24BA8", VA = "0xD24BA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D0D")]
			[Address(RVA = "0xD24BAC", Offset = "0xD24BAC", VA = "0xD24BAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D0F")]
			[Address(RVA = "0xD24DFC", Offset = "0xD24DFC", VA = "0xD24DFC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000484")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849A04", Offset = "0x849A04")]
		private sealed class <part_3_battle>d__66 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x170002A1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D14")]
				[Address(RVA = "0xD25140", Offset = "0xD25140", VA = "0xD25140", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D16")]
				[Address(RVA = "0xD25188", Offset = "0xD25188", VA = "0xD25188", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D11")]
			[Address(RVA = "0xD24E44", Offset = "0xD24E44", VA = "0xD24E44")]
			[DebuggerHidden]
			public <part_3_battle>d__66(int <>1__state)
			{
			}

			[Token(Token = "0x6001D12")]
			[Address(RVA = "0xD24E70", Offset = "0xD24E70", VA = "0xD24E70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D13")]
			[Address(RVA = "0xD24E74", Offset = "0xD24E74", VA = "0xD24E74", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D15")]
			[Address(RVA = "0xD25148", Offset = "0xD25148", VA = "0xD25148", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000485")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849A14", Offset = "0x849A14")]
		private sealed class <part_4_battle>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x40021E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <heli_limit>5__2;

			[Token(Token = "0x40021E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private int <car_limit>5__3;

			[Token(Token = "0x40021EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <next_heli_added>5__4;

			[Token(Token = "0x40021EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <next_car_added>5__5;

			[Token(Token = "0x170002A3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D1A")]
				[Address(RVA = "0xD2552C", Offset = "0xD2552C", VA = "0xD2552C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D1C")]
				[Address(RVA = "0xD25574", Offset = "0xD25574", VA = "0xD25574", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D17")]
			[Address(RVA = "0xD25190", Offset = "0xD25190", VA = "0xD25190")]
			[DebuggerHidden]
			public <part_4_battle>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6001D18")]
			[Address(RVA = "0xD251BC", Offset = "0xD251BC", VA = "0xD251BC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D19")]
			[Address(RVA = "0xD251C0", Offset = "0xD251C0", VA = "0xD251C0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D1B")]
			[Address(RVA = "0xD25534", Offset = "0xD25534", VA = "0xD25534", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000486")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849A24", Offset = "0x849A24")]
		private sealed class <part_5_battle>d__68 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_5 <>4__this;

			[Token(Token = "0x40021EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <viperpos>5__2;

			[Token(Token = "0x40021F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private int <car_limit>5__3;

			[Token(Token = "0x40021F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <next_car_added>5__4;

			[Token(Token = "0x170002A5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D20")]
				[Address(RVA = "0xD25A88", Offset = "0xD25A88", VA = "0xD25A88", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D22")]
				[Address(RVA = "0xD25AD0", Offset = "0xD25AD0", VA = "0xD25AD0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D1D")]
			[Address(RVA = "0xD2557C", Offset = "0xD2557C", VA = "0xD2557C")]
			[DebuggerHidden]
			public <part_5_battle>d__68(int <>1__state)
			{
			}

			[Token(Token = "0x6001D1E")]
			[Address(RVA = "0xD255A8", Offset = "0xD255A8", VA = "0xD255A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D1F")]
			[Address(RVA = "0xD255AC", Offset = "0xD255AC", VA = "0xD255AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D21")]
			[Address(RVA = "0xD25A90", Offset = "0xD25A90", VA = "0xD25A90", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool level_started;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool level_ended;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		private bool first_fire;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<roadheli> helis;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<roadcar> cars;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<npc> enemies;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int total_to_kill;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int total_killed;

		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform sections_start_container;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public roadpoint[] planepoints;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public roadpoint[] helipoints;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public roadpoint[] roadpoints;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public roadpoint[] part_2_car_points;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public roadpoint[] part_3_car_points;

		[Token(Token = "0x4000C17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public roadpoint[] part_5_car_points;

		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public roadcar[] tmpcars;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float next_vehicle_add;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float next_jump;

		[Token(Token = "0x4000C1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private bool have_jumper;

		[Token(Token = "0x4000C1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private npc current_jumper;

		[Token(Token = "0x4000C1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform truck_jump_point;

		[Token(Token = "0x4000C1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public roadheli heli_prefab;

		[Token(Token = "0x4000C1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public roadplane airplane;

		[Token(Token = "0x4000C20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int max_helis;

		[Token(Token = "0x4000C21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private int max_cars;

		[Token(Token = "0x4000C22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public sound engine_start;

		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public npc[] npcs_start;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public npc viper;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public npc ally;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public hud hud;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private sound music_current;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public sound music_idle;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public sound music_action;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public sound music_win;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public sound music_lose;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int part_2_total_car;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int part_3_total_car;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private int part_3_total_heli;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private int part_4_total_car;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private int part_4_total_heli;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public sound sound_joe;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public lips joe_lips;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private bool ally_started;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		private bool ally_arrived;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float last_heli_killed;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private int viper_hits;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public List<GameObject> sections;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public List<GameObject> sections_start;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private List<GameObject> sections_drive_org;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private List<GameObject> sections_empty_org;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public List<GameObject> sections_empty;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private List<GameObject> sections_busy;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float section_length;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float section_start;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private float section_end;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private int section_count;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private float section_speed;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private bool sections_started;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18D")]
		private bool show_empty_sections;

		[Token(Token = "0x6000C41")]
		[Address(RVA = "0xC6C098", Offset = "0xC6C098", VA = "0xC6C098")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C42")]
		[Address(RVA = "0xC6C240", Offset = "0xC6C240", VA = "0xC6C240")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C43")]
		[Address(RVA = "0xC6C9B8", Offset = "0xC6C9B8", VA = "0xC6C9B8")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000C44")]
		[Address(RVA = "0xC6CB04", Offset = "0xC6CB04", VA = "0xC6CB04")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000C45")]
		[Address(RVA = "0xC6CBD4", Offset = "0xC6CBD4", VA = "0xC6CBD4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858660", Offset = "0x858660")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xC6CC68", Offset = "0xC6CC68", VA = "0xC6CC68")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xC6D444", Offset = "0xC6D444", VA = "0xC6D444")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xC6DDFC", Offset = "0xC6DDFC", VA = "0xC6DDFC")]
		private void AllyKilled()
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xC6E218", Offset = "0xC6E218", VA = "0xC6E218")]
		private void AllyKilledComplete()
		{
		}

		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xC6DAEC", Offset = "0xC6DAEC", VA = "0xC6DAEC")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xC6E2E8", Offset = "0xC6E2E8", VA = "0xC6E2E8")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xC6E374", Offset = "0xC6E374", VA = "0xC6E374")]
		public void LevelWin()
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xC6E75C", Offset = "0xC6E75C", VA = "0xC6E75C")]
		public void LevelWinCompleted()
		{
		}

		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xC6E7E8", Offset = "0xC6E7E8", VA = "0xC6E7E8")]
		private void part_1_start()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xC6EB34", Offset = "0xC6EB34", VA = "0xC6EB34")]
		private void part_1_ally()
		{
		}

		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xC6EC2C", Offset = "0xC6EC2C", VA = "0xC6EC2C")]
		public void ally_path()
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xC6EDAC", Offset = "0xC6EDAC", VA = "0xC6EDAC")]
		public void player_fired()
		{
		}

		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xC6ED2C", Offset = "0xC6ED2C", VA = "0xC6ED2C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8586C8", Offset = "0x8586C8")]
		private IEnumerator part_1_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xC6EEA8", Offset = "0xC6EEA8", VA = "0xC6EEA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858730", Offset = "0x858730")]
		private IEnumerator part_2_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xC6EF28", Offset = "0xC6EF28", VA = "0xC6EF28")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858798", Offset = "0x858798")]
		private IEnumerator part_3_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xC6EFA8", Offset = "0xC6EFA8", VA = "0xC6EFA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858800", Offset = "0x858800")]
		private IEnumerator part_4_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xC6F028", Offset = "0xC6F028", VA = "0xC6F028")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858868", Offset = "0x858868")]
		private IEnumerator part_5_battle()
		{
			return null;
		}

		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xC6F0A8", Offset = "0xC6F0A8", VA = "0xC6F0A8")]
		public void viper_hit()
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xC6F174", Offset = "0xC6F174", VA = "0xC6F174")]
		public void add_vehicle()
		{
		}

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xC6F284", Offset = "0xC6F284", VA = "0xC6F284")]
		public bool add_heli()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xC6F534", Offset = "0xC6F534", VA = "0xC6F534")]
		public bool add_car(roadpoint[] spawnpoints, bool count_as_progress = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xC6D160", Offset = "0xC6D160", VA = "0xC6D160")]
		public void add_jumper()
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xC6F8E4", Offset = "0xC6F8E4", VA = "0xC6F8E4")]
		private void restore_lightmap(GameObject go, GameObject org)
		{
		}

		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xC6FAA4", Offset = "0xC6FAA4", VA = "0xC6FAA4")]
		private void SectionsStart()
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xC6CC8C", Offset = "0xC6CC8C", VA = "0xC6CC8C")]
		private void SectionsUpdate()
		{
		}

		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xC6FDDC", Offset = "0xC6FDDC", VA = "0xC6FDDC")]
		public level_5()
		{
		}
	}
	[Token(Token = "0x20001B4")]
	public class level_6 : level
	{
		[Token(Token = "0x2000487")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849A34", Offset = "0x849A34")]
		private sealed class <PlayMusicCoroutine>d__54 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_6 <>4__this;

			[Token(Token = "0x40021F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x40021F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x40021F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x40021F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x170002A7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D26")]
				[Address(RVA = "0xD25D70", Offset = "0xD25D70", VA = "0xD25D70", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002A8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D28")]
				[Address(RVA = "0xD25DB8", Offset = "0xD25DB8", VA = "0xD25DB8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D23")]
			[Address(RVA = "0xD25AD8", Offset = "0xD25AD8", VA = "0xD25AD8")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__54(int <>1__state)
			{
			}

			[Token(Token = "0x6001D24")]
			[Address(RVA = "0xD25B04", Offset = "0xD25B04", VA = "0xD25B04", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D25")]
			[Address(RVA = "0xD25B08", Offset = "0xD25B08", VA = "0xD25B08", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D27")]
			[Address(RVA = "0xD25D78", Offset = "0xD25D78", VA = "0xD25D78", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000488")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849A44", Offset = "0x849A44")]
		private sealed class <on_tool_unselect_co>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool tool;

			[Token(Token = "0x40021FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public level_6 <>4__this;

			[Token(Token = "0x170002A9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D2C")]
				[Address(RVA = "0xD26714", Offset = "0xD26714", VA = "0xD26714", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D2E")]
				[Address(RVA = "0xD2675C", Offset = "0xD2675C", VA = "0xD2675C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D29")]
			[Address(RVA = "0xD26544", Offset = "0xD26544", VA = "0xD26544")]
			[DebuggerHidden]
			public <on_tool_unselect_co>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6001D2A")]
			[Address(RVA = "0xD26570", Offset = "0xD26570", VA = "0xD26570", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D2B")]
			[Address(RVA = "0xD26574", Offset = "0xD26574", VA = "0xD26574", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D2D")]
			[Address(RVA = "0xD2671C", Offset = "0xD2671C", VA = "0xD2671C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000489")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849A54", Offset = "0x849A54")]
		private sealed class <kingsnake_hit_jump_slowmotion>d__69 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40021FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40021FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40021FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_6 <>4__this;

			[Token(Token = "0x170002AB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D32")]
				[Address(RVA = "0xD264F4", Offset = "0xD264F4", VA = "0xD264F4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D34")]
				[Address(RVA = "0xD2653C", Offset = "0xD2653C", VA = "0xD2653C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D2F")]
			[Address(RVA = "0xD26348", Offset = "0xD26348", VA = "0xD26348")]
			[DebuggerHidden]
			public <kingsnake_hit_jump_slowmotion>d__69(int <>1__state)
			{
			}

			[Token(Token = "0x6001D30")]
			[Address(RVA = "0xD26374", Offset = "0xD26374", VA = "0xD26374", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D31")]
			[Address(RVA = "0xD26378", Offset = "0xD26378", VA = "0xD26378", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D33")]
			[Address(RVA = "0xD264FC", Offset = "0xD264FC", VA = "0xD264FC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849A64", Offset = "0x849A64")]
		private sealed class <kingsnake_co>d__75 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002200")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002201")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002202")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_6 <>4__this;

			[Token(Token = "0x4002203")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <limit>5__2;

			[Token(Token = "0x4002204")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <next_added>5__3;

			[Token(Token = "0x170002AD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D38")]
				[Address(RVA = "0xD262F8", Offset = "0xD262F8", VA = "0xD262F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002AE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D3A")]
				[Address(RVA = "0xD26340", Offset = "0xD26340", VA = "0xD26340", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D35")]
			[Address(RVA = "0xD25DC0", Offset = "0xD25DC0", VA = "0xD25DC0")]
			[DebuggerHidden]
			public <kingsnake_co>d__75(int <>1__state)
			{
			}

			[Token(Token = "0x6001D36")]
			[Address(RVA = "0xD25DEC", Offset = "0xD25DEC", VA = "0xD25DEC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D37")]
			[Address(RVA = "0xD25DF0", Offset = "0xD25DF0", VA = "0xD25DF0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D39")]
			[Address(RVA = "0xD26300", Offset = "0xD26300", VA = "0xD26300", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RawImage[] ads;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Texture ad_default;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool level_started;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool level_ended;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		private bool first_fire;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string zone;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string zone_pending;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public toolbase[] tools;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public teleport[] final_teleport;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool is_final_teleport_arrived;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private List<npc> enemies;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<npc> guards;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int total_to_kill;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private int total_killed;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public hud hud;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private sound music_current;

		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public sound music_idle;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public sound music_action;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public sound music_win;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public sound music_lose;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform player_container;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Transform looktarget;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public toolbase[] guard_stuff;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public npc[] npcs;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<spawn> spawns;

		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private float next_spawn;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private int npc_limit;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private int spwan_limit;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private bool first_kill;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDD")]
		private bool sniper_complete;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public lips joe_lips;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public sound joe_sound;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public npc joe;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private bool joe_speak_cleared;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform guide_head;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public sound guide_voice;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float sound_last;

		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float sound_cooldown;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public npc robert;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public npc george;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public npc kingsnake;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public path kingsnake_points;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int kingsnake_health;

		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float guide_follow_distance;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private string sound_path_zone;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private float sound_path_next;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float sound_path_inc;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool music_in_action;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		private float music_next_update;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public path player_path;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private point player_path_next;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private bool path_ended;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private float speed_current;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float speed_max;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float speed_acceleration;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float speed_deceleration;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public npc guide;

		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public path guide_path;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private point guide_path_next;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private bool guide_ended;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x199")]
		private bool canmove;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19A")]
		private bool guidelooking;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19B")]
		private bool is_player_ahead_of_guide;

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xC70040", Offset = "0xC70040", VA = "0xC70040")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xC70218", Offset = "0xC70218", VA = "0xC70218")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xC70A64", Offset = "0xC70A64", VA = "0xC70A64")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xC70D40", Offset = "0xC70D40", VA = "0xC70D40")]
		private void play_sound_path(string name)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xC70DD8", Offset = "0xC70DD8", VA = "0xC70DD8")]
		private void PlaySound(string name)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xC70C70", Offset = "0xC70C70", VA = "0xC70C70")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xC70EA8", Offset = "0xC70EA8", VA = "0xC70EA8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8588D0", Offset = "0x8588D0")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xC70F3C", Offset = "0xC70F3C", VA = "0xC70F3C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C68")]
		[Address(RVA = "0xC70F8C", Offset = "0xC70F8C", VA = "0xC70F8C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C69")]
		[Address(RVA = "0xC71BE8", Offset = "0xC71BE8", VA = "0xC71BE8")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xC713A0", Offset = "0xC713A0", VA = "0xC713A0")]
		public void LevelFailed()
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xC71D08", Offset = "0xC71D08", VA = "0xC71D08")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xC71B14", Offset = "0xC71B14", VA = "0xC71B14")]
		private void update_music()
		{
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xC71D94", Offset = "0xC71D94", VA = "0xC71D94")]
		public void LevelWin()
		{
		}

		[Token(Token = "0x6000C6E")]
		[Address(RVA = "0xC72024", Offset = "0xC72024", VA = "0xC72024")]
		public void joe_final_speak()
		{
		}

		[Token(Token = "0x6000C6F")]
		[Address(RVA = "0xC721F8", Offset = "0xC721F8", VA = "0xC721F8")]
		public void LevelWinCompleted()
		{
		}

		[Token(Token = "0x6000C70")]
		[Address(RVA = "0xC72284", Offset = "0xC72284", VA = "0xC72284")]
		public void on_tool_unselect(tool tool)
		{
		}

		[Token(Token = "0x6000C71")]
		[Address(RVA = "0xC722E4", Offset = "0xC722E4", VA = "0xC722E4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858938", Offset = "0x858938")]
		private IEnumerator on_tool_unselect_co(tool tool)
		{
			return null;
		}

		[Token(Token = "0x6000C72")]
		[Address(RVA = "0xC72378", Offset = "0xC72378", VA = "0xC72378")]
		public void on_first_kill()
		{
		}

		[Token(Token = "0x6000C73")]
		[Address(RVA = "0xC72610", Offset = "0xC72610", VA = "0xC72610")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8589A0", Offset = "0x8589A0")]
		private IEnumerator kingsnake_hit_jump_slowmotion()
		{
			return null;
		}

		[Token(Token = "0x6000C74")]
		[Address(RVA = "0xC72690", Offset = "0xC72690", VA = "0xC72690")]
		public void kingsnake_hit()
		{
		}

		[Token(Token = "0x6000C75")]
		[Address(RVA = "0xC7279C", Offset = "0xC7279C", VA = "0xC7279C")]
		public void kingsnake_arrive()
		{
		}

		[Token(Token = "0x6000C76")]
		[Address(RVA = "0xC727C0", Offset = "0xC727C0", VA = "0xC727C0")]
		public void joe_speak()
		{
		}

		[Token(Token = "0x6000C77")]
		[Address(RVA = "0xC72BB0", Offset = "0xC72BB0", VA = "0xC72BB0")]
		public void joe_speak_end()
		{
		}

		[Token(Token = "0x6000C78")]
		[Address(RVA = "0xC72C94", Offset = "0xC72C94", VA = "0xC72C94")]
		public void on_path_complete(npc npc)
		{
		}

		[Token(Token = "0x6000C79")]
		[Address(RVA = "0xC72CC4", Offset = "0xC72CC4", VA = "0xC72CC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858A08", Offset = "0x858A08")]
		private IEnumerator kingsnake_co()
		{
			return null;
		}

		[Token(Token = "0x6000C7A")]
		[Address(RVA = "0xC70980", Offset = "0xC70980", VA = "0xC70980")]
		public void enter_zone(string val)
		{
		}

		[Token(Token = "0x6000C7B")]
		[Address(RVA = "0xC72D44", Offset = "0xC72D44", VA = "0xC72D44")]
		private void apply_zone()
		{
		}

		[Token(Token = "0x6000C7C")]
		[Address(RVA = "0xC71AD0", Offset = "0xC71AD0", VA = "0xC71AD0")]
		private void update_zone()
		{
		}

		[Token(Token = "0x6000C7D")]
		[Address(RVA = "0xC71804", Offset = "0xC71804", VA = "0xC71804")]
		private void respwan(npc npc)
		{
		}

		[Token(Token = "0x6000C7E")]
		[Address(RVA = "0xC73910", Offset = "0xC73910", VA = "0xC73910")]
		private spawn get_spawn()
		{
			return null;
		}

		[Token(Token = "0x6000C7F")]
		[Address(RVA = "0xC7354C", Offset = "0xC7354C", VA = "0xC7354C")]
		private void update_spawns()
		{
		}

		[Token(Token = "0x6000C80")]
		[Address(RVA = "0xC71BEC", Offset = "0xC71BEC", VA = "0xC71BEC")]
		private void update_looktarget()
		{
		}

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xC73B28", Offset = "0xC73B28", VA = "0xC73B28")]
		public void guide_look_enter()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xC73B34", Offset = "0xC73B34", VA = "0xC73B34")]
		public void guide_look_exit()
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xC73B3C", Offset = "0xC73B3C", VA = "0xC73B3C")]
		private bool moving()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C84")]
		[Address(RVA = "0xC73C14", Offset = "0xC73C14", VA = "0xC73C14")]
		private void update_guide(bool ismoving)
		{
		}

		[Token(Token = "0x6000C85")]
		[Address(RVA = "0xC74118", Offset = "0xC74118", VA = "0xC74118")]
		public void final_teleport_arrived(teleport teleport)
		{
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xC741A8", Offset = "0xC741A8", VA = "0xC741A8")]
		private bool is_guide_moving()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C87")]
		[Address(RVA = "0xC70F64", Offset = "0xC70F64", VA = "0xC70F64")]
		private void update_player_locomotion()
		{
		}

		[Token(Token = "0x6000C88")]
		[Address(RVA = "0xC74564", Offset = "0xC74564", VA = "0xC74564")]
		private void update_player_path()
		{
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xC74990", Offset = "0xC74990", VA = "0xC74990")]
		public void test()
		{
		}

		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xC74994", Offset = "0xC74994", VA = "0xC74994")]
		public level_6()
		{
		}
	}
	[Token(Token = "0x20001B5")]
	public class level_7 : level
	{
		[Token(Token = "0x200048B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849A74", Offset = "0x849A74")]
		private sealed class <PlayMusicCoroutine>d__43 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002205")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002206")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002207")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_7 <>4__this;

			[Token(Token = "0x4002208")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4002209")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x400220A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x400220B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x170002AF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D3E")]
				[Address(RVA = "0xD26C94", Offset = "0xD26C94", VA = "0xD26C94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D40")]
				[Address(RVA = "0xD26CDC", Offset = "0xD26CDC", VA = "0xD26CDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D3B")]
			[Address(RVA = "0xD269FC", Offset = "0xD269FC", VA = "0xD269FC")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__43(int <>1__state)
			{
			}

			[Token(Token = "0x6001D3C")]
			[Address(RVA = "0xD26A28", Offset = "0xD26A28", VA = "0xD26A28", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D3D")]
			[Address(RVA = "0xD26A2C", Offset = "0xD26A2C", VA = "0xD26A2C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D3F")]
			[Address(RVA = "0xD26C9C", Offset = "0xD26C9C", VA = "0xD26C9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849A84", Offset = "0x849A84")]
		private sealed class <LevelFailedCoroutine>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400220C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400220D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400220E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_7 <>4__this;

			[Token(Token = "0x170002B1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D44")]
				[Address(RVA = "0xD269AC", Offset = "0xD269AC", VA = "0xD269AC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D46")]
				[Address(RVA = "0xD269F4", Offset = "0xD269F4", VA = "0xD269F4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D41")]
			[Address(RVA = "0xD26764", Offset = "0xD26764", VA = "0xD26764")]
			[DebuggerHidden]
			public <LevelFailedCoroutine>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6001D42")]
			[Address(RVA = "0xD26790", Offset = "0xD26790", VA = "0xD26790", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D43")]
			[Address(RVA = "0xD26794", Offset = "0xD26794", VA = "0xD26794", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D45")]
			[Address(RVA = "0xD269B4", Offset = "0xD269B4", VA = "0xD269B4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849A94", Offset = "0x849A94")]
		private sealed class <level_win_co>d__49 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400220F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002210")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002211")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_7 <>4__this;

			[Token(Token = "0x4002212")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4002213")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x170002B3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D4A")]
				[Address(RVA = "0xD272E8", Offset = "0xD272E8", VA = "0xD272E8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D4C")]
				[Address(RVA = "0xD27330", Offset = "0xD27330", VA = "0xD27330", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D47")]
			[Address(RVA = "0xD26CE4", Offset = "0xD26CE4", VA = "0xD26CE4")]
			[DebuggerHidden]
			public <level_win_co>d__49(int <>1__state)
			{
			}

			[Token(Token = "0x6001D48")]
			[Address(RVA = "0xD26D10", Offset = "0xD26D10", VA = "0xD26D10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D49")]
			[Address(RVA = "0xD26D14", Offset = "0xD26D14", VA = "0xD26D14", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D4B")]
			[Address(RVA = "0xD272F0", Offset = "0xD272F0", VA = "0xD272F0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200048E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849AA4", Offset = "0x849AA4")]
		private sealed class <move_elevator_co>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002214")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002215")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002216")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_7 <>4__this;

			[Token(Token = "0x4002217")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4002218")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x4002219")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <from>5__4;

			[Token(Token = "0x400221A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <to>5__5;

			[Token(Token = "0x170002B5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D50")]
				[Address(RVA = "0xD27958", Offset = "0xD27958", VA = "0xD27958", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D52")]
				[Address(RVA = "0xD279A0", Offset = "0xD279A0", VA = "0xD279A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D4D")]
			[Address(RVA = "0xD27338", Offset = "0xD27338", VA = "0xD27338")]
			[DebuggerHidden]
			public <move_elevator_co>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001D4E")]
			[Address(RVA = "0xD27364", Offset = "0xD27364", VA = "0xD27364", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D4F")]
			[Address(RVA = "0xD27368", Offset = "0xD27368", VA = "0xD27368", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D51")]
			[Address(RVA = "0xD27960", Offset = "0xD27960", VA = "0xD27960", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CanvasGroup cover_end;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public hud hud;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool level_started;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool level_ended;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private sound music_current;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound music_idle;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public sound music_action;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound music_win;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public sound music_lose;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private List<npc> enemies;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public npc[] npcs;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<path> paths;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public npc captain;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public sound captain_audio;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public lips captain_lips;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform climb_look;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int total_to_kill;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int total_killed;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform elevator;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public Transform elevator_door;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public sound elevator_sound;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform player_container;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public path roompath;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private point roompoint;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private string zone;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public toolbase[] tools;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public npc captain_joe_end;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public sound captain_joe_end_sound;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public lips captain_joe_end_lips;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public player_trigger[] triggers;

		[Token(Token = "0x4000CA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject[] objects_indoor;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject[] objects_outdoor;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int max_npcs;

		[Token(Token = "0x4000CA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float next_npc_add;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private bool music_in_action;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private float music_next_update;

		[Token(Token = "0x6000C8B")]
		[Address(RVA = "0xC91FE8", Offset = "0xC91FE8", VA = "0xC91FE8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C8C")]
		[Address(RVA = "0xC920D4", Offset = "0xC920D4", VA = "0xC920D4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000C8D")]
		[Address(RVA = "0xC92BAC", Offset = "0xC92BAC", VA = "0xC92BAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000C8E")]
		[Address(RVA = "0xC92580", Offset = "0xC92580", VA = "0xC92580")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000C8F")]
		[Address(RVA = "0xC92FF4", Offset = "0xC92FF4", VA = "0xC92FF4")]
		private void level_begin_1()
		{
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xC93228", Offset = "0xC93228", VA = "0xC93228")]
		private void level_begin_2()
		{
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xC932FC", Offset = "0xC932FC", VA = "0xC932FC")]
		public void level_begin_3()
		{
		}

		[Token(Token = "0x6000C92")]
		[Address(RVA = "0xC92F24", Offset = "0xC92F24", VA = "0xC92F24")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000C93")]
		[Address(RVA = "0xC93370", Offset = "0xC93370", VA = "0xC93370")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858A70", Offset = "0x858A70")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000C94")]
		[Address(RVA = "0xC926CC", Offset = "0xC926CC", VA = "0xC926CC")]
		private void LevelFailed()
		{
		}

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xC93404", Offset = "0xC93404", VA = "0xC93404")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858AD8", Offset = "0x858AD8")]
		private IEnumerator LevelFailedCoroutine()
		{
			return null;
		}

		[Token(Token = "0x6000C96")]
		[Address(RVA = "0xC93484", Offset = "0xC93484", VA = "0xC93484")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000C97")]
		[Address(RVA = "0xC93510", Offset = "0xC93510", VA = "0xC93510")]
		public void LevelWin()
		{
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xC937C4", Offset = "0xC937C4", VA = "0xC937C4")]
		public void captain_joe_end_path_complete()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xC937F0", Offset = "0xC937F0", VA = "0xC937F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858B40", Offset = "0x858B40")]
		private IEnumerator level_win_co()
		{
			return null;
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xC93870", Offset = "0xC93870", VA = "0xC93870")]
		public void LevelWinEnded()
		{
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xC92874", Offset = "0xC92874", VA = "0xC92874")]
		private void UpdateNPC()
		{
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xC92AE4", Offset = "0xC92AE4", VA = "0xC92AE4")]
		private void update_music()
		{
		}

		[Token(Token = "0x6000C9D")]
		[Address(RVA = "0xC938FC", Offset = "0xC938FC", VA = "0xC938FC")]
		public void trigger_crane_1(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000C9E")]
		[Address(RVA = "0xC939AC", Offset = "0xC939AC", VA = "0xC939AC")]
		public void trigger_crane_2(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xC93A5C", Offset = "0xC93A5C", VA = "0xC93A5C")]
		public void trigger_crane_3(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xC93B0C", Offset = "0xC93B0C", VA = "0xC93B0C")]
		public void trigger_crane_4(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xC93BBC", Offset = "0xC93BBC", VA = "0xC93BBC")]
		public void trigger_crane_5(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xC93C6C", Offset = "0xC93C6C", VA = "0xC93C6C")]
		public void trigger_crane_6(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CA3")]
		[Address(RVA = "0xC93D1C", Offset = "0xC93D1C", VA = "0xC93D1C")]
		public void trigger_crane_7(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CA4")]
		[Address(RVA = "0xC93DCC", Offset = "0xC93DCC", VA = "0xC93DCC")]
		public void trigger_crane_8(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xC93E7C", Offset = "0xC93E7C", VA = "0xC93E7C")]
		public void trigger_roof_1(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xC94124", Offset = "0xC94124", VA = "0xC94124")]
		public void trigger_roof_2(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xC941D4", Offset = "0xC941D4", VA = "0xC941D4")]
		public void trigger_roof_3(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xC94284", Offset = "0xC94284", VA = "0xC94284")]
		public void trigger_elevator_1(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xC94424", Offset = "0xC94424", VA = "0xC94424")]
		public void trigger_elevator_2(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CAA")]
		[Address(RVA = "0xC94528", Offset = "0xC94528", VA = "0xC94528")]
		public void trigger_room_1(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CAB")]
		[Address(RVA = "0xC945D8", Offset = "0xC945D8", VA = "0xC945D8")]
		public void trigger_room_2(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xC94688", Offset = "0xC94688", VA = "0xC94688")]
		public void trigger_room_3(player_trigger trigger)
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xC943A4", Offset = "0xC943A4", VA = "0xC943A4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858BA8", Offset = "0x858BA8")]
		private IEnumerator move_elevator_co()
		{
			return null;
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xC94798", Offset = "0xC94798", VA = "0xC94798")]
		public level_7()
		{
		}
	}
	[Token(Token = "0x20001B6")]
	public class level_bootcamp : level
	{
		[Token(Token = "0x200048F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849AB4", Offset = "0x849AB4")]
		private sealed class <PlayMusicCoroutine>d__39 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400221B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400221C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400221D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_bootcamp <>4__this;

			[Token(Token = "0x400221E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x400221F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4002220")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4002221")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x170002B7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D56")]
				[Address(RVA = "0xD27C40", Offset = "0xD27C40", VA = "0xD27C40", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002B8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D58")]
				[Address(RVA = "0xD27C88", Offset = "0xD27C88", VA = "0xD27C88", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D53")]
			[Address(RVA = "0xD279A8", Offset = "0xD279A8", VA = "0xD279A8")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__39(int <>1__state)
			{
			}

			[Token(Token = "0x6001D54")]
			[Address(RVA = "0xD279D4", Offset = "0xD279D4", VA = "0xD279D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D55")]
			[Address(RVA = "0xD279D8", Offset = "0xD279D8", VA = "0xD279D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D57")]
			[Address(RVA = "0xD27C48", Offset = "0xD27C48", VA = "0xD27C48", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000490")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849AC4", Offset = "0x849AC4")]
		private sealed class <run>d__41 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002222")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002223")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002224")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_bootcamp <>4__this;

			[Token(Token = "0x4002225")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <ammo>5__2;

			[Token(Token = "0x4002226")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private bool <top>5__3;

			[Token(Token = "0x4002227")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <last>5__4;

			[Token(Token = "0x170002B9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D5C")]
				[Address(RVA = "0xD2A9D0", Offset = "0xD2A9D0", VA = "0xD2A9D0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D5E")]
				[Address(RVA = "0xD2AA18", Offset = "0xD2AA18", VA = "0xD2AA18", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D59")]
			[Address(RVA = "0xD27C90", Offset = "0xD27C90", VA = "0xD27C90")]
			[DebuggerHidden]
			public <run>d__41(int <>1__state)
			{
			}

			[Token(Token = "0x6001D5A")]
			[Address(RVA = "0xD27CBC", Offset = "0xD27CBC", VA = "0xD27CBC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D5B")]
			[Address(RVA = "0xD27CC0", Offset = "0xD27CC0", VA = "0xD27CC0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D5D")]
			[Address(RVA = "0xD2A9D8", Offset = "0xD2A9D8", VA = "0xD2A9D8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public hud hud;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool level_started;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool level_ended;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private sound music_current;

		[Token(Token = "0x4000CAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound music_idle;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound music_action;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public sound music_win;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound music_lose;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject redpill;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject ladder;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<bootcamp_target> targets_pistol;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<bootcamp_target> targets_rifle;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<bootcamp_target> targets_flashbang;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public tool_firearm pistol;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public tool_firearm rifle;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public tool_flashbang flashbang;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public tool_grenade grenade;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public tool_mdeikit medikit;

		[Token(Token = "0x4000CBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public sound sound;

		[Token(Token = "0x4000CBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Dictionary<string, string> script;

		[Token(Token = "0x4000CBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool flashbang_exploded;

		[Token(Token = "0x4000CC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB9")]
		private bool grenade_exploded;

		[Token(Token = "0x4000CC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBA")]
		private bool medikit_exploded;

		[Token(Token = "0x4000CC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBB")]
		private bool begined;

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public toolbase ladder_top_1;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public toolbase ladder_top_2;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public handmenu menu;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject button_return_to_base;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject button_start_game;

		[Token(Token = "0x4000CC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private bool start_first_level;

		[Token(Token = "0x4000CC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform landing;

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xC948AC", Offset = "0xC948AC", VA = "0xC948AC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xC95118", Offset = "0xC95118", VA = "0xC95118")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xC95350", Offset = "0xC95350", VA = "0xC95350")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000CB2")]
		[Address(RVA = "0xC954AC", Offset = "0xC954AC", VA = "0xC954AC")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000CB3")]
		[Address(RVA = "0xC95710", Offset = "0xC95710", VA = "0xC95710")]
		public void flashbang_explode()
		{
		}

		[Token(Token = "0x6000CB4")]
		[Address(RVA = "0xC9571C", Offset = "0xC9571C", VA = "0xC9571C")]
		public void grenade_explode()
		{
		}

		[Token(Token = "0x6000CB5")]
		[Address(RVA = "0xC95728", Offset = "0xC95728", VA = "0xC95728")]
		public void medikit_explode()
		{
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xC9567C", Offset = "0xC9567C", VA = "0xC9567C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858C10", Offset = "0x858C10")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xC95734", Offset = "0xC95734", VA = "0xC95734")]
		public void begin()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xC955FC", Offset = "0xC955FC", VA = "0xC955FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858C78", Offset = "0x858C78")]
		private IEnumerator run()
		{
			return null;
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xC9557C", Offset = "0xC9557C", VA = "0xC9557C")]
		private bool StartFirstLevel()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xC95740", Offset = "0xC95740", VA = "0xC95740")]
		public level_bootcamp()
		{
		}
	}
	[Token(Token = "0x20001B7")]
	public class level_contests : level
	{
		[Token(Token = "0x2000491")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849AD4", Offset = "0x849AD4")]
		private sealed class <PlayMusicCoroutine>d__51 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002228")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002229")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400222A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_contests <>4__this;

			[Token(Token = "0x400222B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x400222C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x400222D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x400222E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x170002BB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D62")]
				[Address(RVA = "0xD2ACB8", Offset = "0xD2ACB8", VA = "0xD2ACB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D64")]
				[Address(RVA = "0xD2AD00", Offset = "0xD2AD00", VA = "0xD2AD00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D5F")]
			[Address(RVA = "0xD2AA20", Offset = "0xD2AA20", VA = "0xD2AA20")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__51(int <>1__state)
			{
			}

			[Token(Token = "0x6001D60")]
			[Address(RVA = "0xD2AA4C", Offset = "0xD2AA4C", VA = "0xD2AA4C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D61")]
			[Address(RVA = "0xD2AA50", Offset = "0xD2AA50", VA = "0xD2AA50", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D63")]
			[Address(RVA = "0xD2ACC0", Offset = "0xD2ACC0", VA = "0xD2ACC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public hud hud;

		[Token(Token = "0x4000CCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool level_started;

		[Token(Token = "0x4000CCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		private bool level_ended;

		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private sound music_current;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public sound music_idle;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound music_action;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public sound music_win;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound music_lose;

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject redpill;

		[Token(Token = "0x4000CD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public sound voice;

		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject paths_container;

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<path> all_paths;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public npc npc_prefab;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int max_npcs_org;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float npc_add_min_org;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private float npc_add_max_org;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private float jump_speed_min_org;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float jump_speed_max_org;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private float jump_speed_min;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float jump_speed_max;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int max_npcs;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float npc_add_min;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float npc_add_max;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int round_time;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private List<npc> enemies;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private float next_npc_add;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform Jumpto1;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Transform Jumpto2;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject ticket_card;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject no_tickets_message;

		[Token(Token = "0x4000CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public TextMeshProUGUI ui_tickets;

		[Token(Token = "0x4000CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float started;

		[Token(Token = "0x4000CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private int total_created;

		[Token(Token = "0x4000CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int total_kills;

		[Token(Token = "0x4000CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private safe_int score;

		[Token(Token = "0x4000CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float timeleft;

		[Token(Token = "0x4000CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool ingame;

		[Token(Token = "0x4000CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private List<toolbase> used_tickets;

		[Token(Token = "0x4000CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public TextMeshProUGUI ui_time;

		[Token(Token = "0x4000CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public TextMeshProUGUI ui_score;

		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public TextMeshProUGUI ui_player_score;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public horde_board board;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private int minivar;

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xC95868", Offset = "0xC95868", VA = "0xC95868")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xC95F34", Offset = "0xC95F34", VA = "0xC95F34")]
		private path get_free_path()
		{
			return null;
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xC961AC", Offset = "0xC961AC", VA = "0xC961AC")]
		private void add_npc()
		{
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xC96364", Offset = "0xC96364", VA = "0xC96364")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xC96640", Offset = "0xC96640", VA = "0xC96640")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xC96AE8", Offset = "0xC96AE8", VA = "0xC96AE8")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000CC1")]
		[Address(RVA = "0xC96A38", Offset = "0xC96A38", VA = "0xC96A38")]
		private void update_minivar()
		{
		}

		[Token(Token = "0x6000CC2")]
		[Address(RVA = "0xC96BB8", Offset = "0xC96BB8", VA = "0xC96BB8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858CE0", Offset = "0x858CE0")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000CC3")]
		[Address(RVA = "0xC9674C", Offset = "0xC9674C", VA = "0xC9674C")]
		private void end_ticket()
		{
		}

		[Token(Token = "0x6000CC4")]
		[Address(RVA = "0xC971C0", Offset = "0xC971C0", VA = "0xC971C0")]
		private string Md5Sum(string strToEncrypt)
		{
			return null;
		}

		[Token(Token = "0x6000CC5")]
		[Address(RVA = "0xC95A54", Offset = "0xC95A54", VA = "0xC95A54")]
		private void update_player_score()
		{
		}

		[Token(Token = "0x6000CC6")]
		[Address(RVA = "0xC97364", Offset = "0xC97364", VA = "0xC97364")]
		public void submit_end()
		{
		}

		[Token(Token = "0x6000CC7")]
		[Address(RVA = "0xC96C4C", Offset = "0xC96C4C", VA = "0xC96C4C")]
		private void submit_score()
		{
		}

		[Token(Token = "0x6000CC8")]
		[Address(RVA = "0xC95C88", Offset = "0xC95C88", VA = "0xC95C88")]
		private void add_ticket()
		{
		}

		[Token(Token = "0x6000CC9")]
		[Address(RVA = "0xC97408", Offset = "0xC97408", VA = "0xC97408")]
		private void ticket_grab_start()
		{
		}

		[Token(Token = "0x6000CCA")]
		[Address(RVA = "0xC97478", Offset = "0xC97478", VA = "0xC97478")]
		public void ticket_grab(toolbase ticket)
		{
		}

		[Token(Token = "0x6000CCB")]
		[Address(RVA = "0xC976E0", Offset = "0xC976E0", VA = "0xC976E0")]
		public level_contests()
		{
		}
	}
	[Token(Token = "0x20001B8")]
	public class level_horde : level
	{
		[Token(Token = "0x2000492")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849AE4", Offset = "0x849AE4")]
		private sealed class <PlayMusicCoroutine>d__67 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400222F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002230")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002231")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public level_horde <>4__this;

			[Token(Token = "0x4002232")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4002233")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4002234")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4002235")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x170002BD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D68")]
				[Address(RVA = "0xD2AFA0", Offset = "0xD2AFA0", VA = "0xD2AFA0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002BE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D6A")]
				[Address(RVA = "0xD2AFE8", Offset = "0xD2AFE8", VA = "0xD2AFE8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D65")]
			[Address(RVA = "0xD2AD08", Offset = "0xD2AD08", VA = "0xD2AD08")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__67(int <>1__state)
			{
			}

			[Token(Token = "0x6001D66")]
			[Address(RVA = "0xD2AD34", Offset = "0xD2AD34", VA = "0xD2AD34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D67")]
			[Address(RVA = "0xD2AD38", Offset = "0xD2AD38", VA = "0xD2AD38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D69")]
			[Address(RVA = "0xD2AFA8", Offset = "0xD2AFA8", VA = "0xD2AFA8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public demobox demobox;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public hud hud;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool level_started;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool level_ended;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine music_coroutine;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private sound music_current;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound music_idle;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public sound music_action;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public sound music_win;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public sound music_lose;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject redpill;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public weapon[] weapons;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<npc> enemies;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject spawnscontainer;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private List<spawn> spawns;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<npc> npcs;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private float next_spawn;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int npc_limit;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int npc_killed;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int npc_left;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int npc_total;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int wave;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private safe_int score;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int hit_continuity;

		[Token(Token = "0x4000D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public TextMeshProUGUI ui_score1;

		[Token(Token = "0x4000D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public TextMeshProUGUI ui_score2;

		[Token(Token = "0x4000D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public TextMeshProUGUI ui_wave1;

		[Token(Token = "0x4000D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public TextMeshProUGUI ui_wave2;

		[Token(Token = "0x4000D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool wave_completed;

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool wave_pending;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDA")]
		private bool wave_before_ready;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float wave_pending_start;

		[Token(Token = "0x4000D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool wave_ready;

		[Token(Token = "0x4000D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public GameObject powerups_container;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private List<GameObject> powerups_active;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private List<GameObject> powerups_left;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private int max_powerups;

		[Token(Token = "0x4000D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject guns_org;

		[Token(Token = "0x4000D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private GameObject guns_active;

		[Token(Token = "0x4000D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private tool_firearm guns_active_right;

		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private tool_firearm guns_active_left;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private int best_continuity;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private int total_kills;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float started;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private int hordediff;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private int score_difficulty_start;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private int spawned;

		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private bool music_in_action;

		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private float music_next_update;

		[Token(Token = "0x6000CCC")]
		[Address(RVA = "0xC97858", Offset = "0xC97858", VA = "0xC97858")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CCD")]
		[Address(RVA = "0xC97D38", Offset = "0xC97D38", VA = "0xC97D38")]
		private void Update()
		{
		}

		[Token(Token = "0x6000CCE")]
		[Address(RVA = "0xC98750", Offset = "0xC98750", VA = "0xC98750")]
		private void shot_hit(bool headshot)
		{
		}

		[Token(Token = "0x6000CCF")]
		[Address(RVA = "0xC98FD0", Offset = "0xC98FD0", VA = "0xC98FD0")]
		private void update_stats()
		{
		}

		[Token(Token = "0x6000CD0")]
		[Address(RVA = "0xC99250", Offset = "0xC99250", VA = "0xC99250")]
		public void shot_miss()
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xC99258", Offset = "0xC99258", VA = "0xC99258")]
		private void spawn_powerups()
		{
		}

		[Token(Token = "0x6000CD2")]
		[Address(RVA = "0xC99430", Offset = "0xC99430", VA = "0xC99430")]
		private void next_wave()
		{
		}

		[Token(Token = "0x6000CD3")]
		[Address(RVA = "0xC99538", Offset = "0xC99538", VA = "0xC99538")]
		private void set_weapons()
		{
		}

		[Token(Token = "0x6000CD4")]
		[Address(RVA = "0xC989E4", Offset = "0xC989E4", VA = "0xC989E4")]
		private void wave_wait()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xC98F28", Offset = "0xC98F28", VA = "0xC98F28")]
		private void wave_done()
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xC98618", Offset = "0xC98618", VA = "0xC98618")]
		private void respwan(npc npc)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xC99AF8", Offset = "0xC99AF8", VA = "0xC99AF8")]
		private string Md5Sum(string strToEncrypt)
		{
			return null;
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xC99C9C", Offset = "0xC99C9C", VA = "0xC99C9C")]
		private void submit_score()
		{
		}

		[Token(Token = "0x6000CD9")]
		[Address(RVA = "0xC98278", Offset = "0xC98278", VA = "0xC98278")]
		public void LevelFailed()
		{
		}

		[Token(Token = "0x6000CDA")]
		[Address(RVA = "0xC9A1D4", Offset = "0xC9A1D4", VA = "0xC9A1D4")]
		public void LevelFailedEnded()
		{
		}

		[Token(Token = "0x6000CDB")]
		[Address(RVA = "0xC98854", Offset = "0xC98854", VA = "0xC98854")]
		private void update_music()
		{
		}

		[Token(Token = "0x6000CDC")]
		[Address(RVA = "0xC98174", Offset = "0xC98174", VA = "0xC98174")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000CDD")]
		[Address(RVA = "0xC9A104", Offset = "0xC9A104", VA = "0xC9A104")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000CDE")]
		[Address(RVA = "0xC9A2D0", Offset = "0xC9A2D0", VA = "0xC9A2D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858D48", Offset = "0x858D48")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xC9A364", Offset = "0xC9A364", VA = "0xC9A364")]
		private spawn get_spawn()
		{
			return null;
		}

		[Token(Token = "0x6000CE0")]
		[Address(RVA = "0xC9A644", Offset = "0xC9A644", VA = "0xC9A644")]
		public void add_npc_tests()
		{
		}

		[Token(Token = "0x6000CE1")]
		[Address(RVA = "0xC9A674", Offset = "0xC9A674", VA = "0xC9A674")]
		public void add_npc_now()
		{
		}

		[Token(Token = "0x6000CE2")]
		[Address(RVA = "0xC9891C", Offset = "0xC9891C", VA = "0xC9891C")]
		private void add_npc()
		{
		}

		[Token(Token = "0x6000CE3")]
		[Address(RVA = "0xC9AB38", Offset = "0xC9AB38", VA = "0xC9AB38")]
		public level_horde()
		{
		}
	}
	[Token(Token = "0x20001B9")]
	public class test : MonoBehaviour
	{
		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VestHapticClip clip;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x851C4C", Offset = "0x851C4C")]
		public float intensity;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x851C68", Offset = "0x851C68")]
		public float duration;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x851C84", Offset = "0x851C84")]
		public float angleX;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x851CA0", Offset = "0x851CA0")]
		public float offsetY;

		[Token(Token = "0x6000CE4")]
		[Address(RVA = "0x100E224", Offset = "0x100E224", VA = "0x100E224")]
		private void Start()
		{
		}

		[Token(Token = "0x6000CE5")]
		[Address(RVA = "0x100E228", Offset = "0x100E228", VA = "0x100E228")]
		public void testHit()
		{
		}

		[Token(Token = "0x6000CE6")]
		[Address(RVA = "0x100E28C", Offset = "0x100E28C", VA = "0x100E28C")]
		public test()
		{
		}
	}
	[Token(Token = "0x20001BA")]
	public class tool_drone : tool
	{
		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public drone drone;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public tool second_hand_right;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public tool second_hand_left;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public GameObject black;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public GameObject msg;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public GameObject crosshair;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public TextMeshProUGUI health;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Renderer drone_rend;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Material drone_mat;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private RenderTexture drone_tex;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		[HideInInspector]
		public bool drone_camera_show;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C9")]
		private bool exploded;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public GameObject explode_effect;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public sound explode_sound;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private bool _initdrone;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public bool_event oncontrolchange;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public base_event on_explode_visual;

		[Token(Token = "0x6000CE7")]
		[Address(RVA = "0x10118E8", Offset = "0x10118E8", VA = "0x10118E8", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000CE8")]
		[Address(RVA = "0x1011988", Offset = "0x1011988", VA = "0x1011988")]
		public void set_drone(drone drone)
		{
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0x1011B74", Offset = "0x1011B74", VA = "0x1011B74")]
		private void update_camera()
		{
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0x1011DA4", Offset = "0x1011DA4", VA = "0x1011DA4", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0x1011E70", Offset = "0x1011E70", VA = "0x1011E70", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0x1012160", Offset = "0x1012160", VA = "0x1012160", Slot = "20")]
		public override bool is_npc_target(Vector3 origin)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0x101230C", Offset = "0x101230C", VA = "0x101230C", Slot = "21")]
		public override Vector3 npc_target_position(Vector3 origin, float speed = -1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CEE")]
		[Address(RVA = "0x1011CAC", Offset = "0x1011CAC", VA = "0x1011CAC")]
		private bool both()
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEF")]
		[Address(RVA = "0x101244C", Offset = "0x101244C", VA = "0x101244C")]
		private string get_pose(hand hand)
		{
			return null;
		}

		[Token(Token = "0x6000CF0")]
		[Address(RVA = "0x10125A4", Offset = "0x10125A4", VA = "0x10125A4", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x6000CF1")]
		[Address(RVA = "0x1012844", Offset = "0x1012844", VA = "0x1012844", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x6000CF2")]
		[Address(RVA = "0x1012900", Offset = "0x1012900", VA = "0x1012900", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6000CF3")]
		[Address(RVA = "0x1012A14", Offset = "0x1012A14", VA = "0x1012A14", Slot = "8")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0x1012CBC", Offset = "0x1012CBC", VA = "0x1012CBC", Slot = "9")]
		public override void LateUpdate()
		{
		}

		[Token(Token = "0x6000CF5")]
		[Address(RVA = "0x1012D90", Offset = "0x1012D90", VA = "0x1012D90")]
		public void onexploded()
		{
		}

		[Token(Token = "0x6000CF6")]
		[Address(RVA = "0x1012F70", Offset = "0x1012F70", VA = "0x1012F70")]
		public void explode_visual()
		{
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0x1013058", Offset = "0x1013058", VA = "0x1013058")]
		public tool_drone()
		{
		}
	}
	[Token(Token = "0x20001BB")]
	public class translations : MonoBehaviour
	{
		[Token(Token = "0x2000493")]
		public enum languages
		{
			[Token(Token = "0x4002237")]
			none,
			[Token(Token = "0x4002238")]
			en,
			[Token(Token = "0x4002239")]
			he,
			[Token(Token = "0x400223A")]
			zh,
			[Token(Token = "0x400223B")]
			ko,
			[Token(Token = "0x400223C")]
			ja
		}

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool _init;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public static bool voice;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public static bool typing;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static languages selected;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Dictionary<string, string> cache;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMeshProUGUI Text1;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string Key1;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x851CC8", Offset = "0x851CC8")]
		public TextMeshProUGUI Controls1;

		[Token(Token = "0x6000CF8")]
		[Address(RVA = "0xE21C1C", Offset = "0xE21C1C", VA = "0xE21C1C")]
		public static string getByText(string str)
		{
			return null;
		}

		[Token(Token = "0x6000CF9")]
		[Address(RVA = "0xE21E90", Offset = "0xE21E90", VA = "0xE21E90")]
		public static string get(string k, [Optional] string value)
		{
			return null;
		}

		[Token(Token = "0x6000CFA")]
		[Address(RVA = "0xE21FC4", Offset = "0xE21FC4", VA = "0xE21FC4")]
		public static void init()
		{
		}

		[Token(Token = "0x6000CFB")]
		[Address(RVA = "0xE22890", Offset = "0xE22890", VA = "0xE22890")]
		public static void change_language(languages language)
		{
		}

		[Token(Token = "0x6000CFC")]
		[Address(RVA = "0xE2243C", Offset = "0xE2243C", VA = "0xE2243C")]
		public static void set_language(languages language)
		{
		}

		[Token(Token = "0x6000CFD")]
		[Address(RVA = "0xE338F4", Offset = "0xE338F4", VA = "0xE338F4")]
		public static string rtl(string str)
		{
			return null;
		}

		[Token(Token = "0x6000CFE")]
		[Address(RVA = "0xE22BC4", Offset = "0xE22BC4", VA = "0xE22BC4")]
		public static Dictionary<string, string> keys_default()
		{
			return null;
		}

		[Token(Token = "0x6000CFF")]
		[Address(RVA = "0xE26D38", Offset = "0xE26D38", VA = "0xE26D38")]
		public static Dictionary<string, string> keys_en()
		{
			return null;
		}

		[Token(Token = "0x6000D00")]
		[Address(RVA = "0xE26DAC", Offset = "0xE26DAC", VA = "0xE26DAC")]
		public static Dictionary<string, string> keys_he()
		{
			return null;
		}

		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xE2A478", Offset = "0xE2A478", VA = "0xE2A478")]
		public static Dictionary<string, string> keys_zh()
		{
			return null;
		}

		[Token(Token = "0x6000D02")]
		[Address(RVA = "0xE2E574", Offset = "0xE2E574", VA = "0xE2E574")]
		public static Dictionary<string, string> keys_ko()
		{
			return null;
		}

		[Token(Token = "0x6000D03")]
		[Address(RVA = "0xE30F50", Offset = "0xE30F50", VA = "0xE30F50")]
		public static Dictionary<string, string> keys_ja()
		{
			return null;
		}

		[Token(Token = "0x6000D04")]
		[Address(RVA = "0xE33934", Offset = "0xE33934", VA = "0xE33934")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D05")]
		[Address(RVA = "0xE33DFC", Offset = "0xE33DFC", VA = "0xE33DFC")]
		private string csvkey(string str)
		{
			return null;
		}

		[Token(Token = "0x6000D06")]
		[Address(RVA = "0xE33EA0", Offset = "0xE33EA0", VA = "0xE33EA0")]
		private void create_csv_all()
		{
		}

		[Token(Token = "0x6000D07")]
		[Address(RVA = "0xE34520", Offset = "0xE34520", VA = "0xE34520")]
		private void create_csv_missing()
		{
		}

		[Token(Token = "0x6000D08")]
		[Address(RVA = "0xE33EA8", Offset = "0xE33EA8", VA = "0xE33EA8")]
		private void create_csv(bool missing = false)
		{
		}

		[Token(Token = "0x6000D09")]
		[Address(RVA = "0xE34528", Offset = "0xE34528", VA = "0xE34528")]
		private void get_all_chars()
		{
		}

		[Token(Token = "0x6000D0A")]
		[Address(RVA = "0xE350CC", Offset = "0xE350CC", VA = "0xE350CC")]
		public translations()
		{
		}
	}
	[Token(Token = "0x20001BC")]
	public class area : MonoBehaviour
	{
		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider body;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool stay;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private int count;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool first;

		[Token(Token = "0x6000D0C")]
		[Address(RVA = "0xC388A8", Offset = "0xC388A8", VA = "0xC388A8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D0D")]
		[Address(RVA = "0xC38958", Offset = "0xC38958", VA = "0xC38958")]
		public void set_body(Collider other)
		{
		}

		[Token(Token = "0x6000D0E")]
		[Address(RVA = "0xC38960", Offset = "0xC38960", VA = "0xC38960")]
		public bool in_bounds()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D0F")]
		[Address(RVA = "0xC38980", Offset = "0xC38980", VA = "0xC38980")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D10")]
		[Address(RVA = "0xC38A1C", Offset = "0xC38A1C", VA = "0xC38A1C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000D11")]
		[Address(RVA = "0xC38AB8", Offset = "0xC38AB8", VA = "0xC38AB8")]
		public void ToggleRenderers()
		{
		}

		[Token(Token = "0x6000D12")]
		[Address(RVA = "0xC38B8C", Offset = "0xC38B8C", VA = "0xC38B8C")]
		public area()
		{
		}
	}
	[Token(Token = "0x20001BD")]
	public class area_collider : MonoBehaviour
	{
		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 org;

		[Token(Token = "0x4000D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private bool _init;

		[Token(Token = "0x6000D13")]
		[Address(RVA = "0xC38BA0", Offset = "0xC38BA0", VA = "0xC38BA0")]
		private void init()
		{
		}

		[Token(Token = "0x6000D14")]
		[Address(RVA = "0xC38BEC", Offset = "0xC38BEC", VA = "0xC38BEC")]
		public void show()
		{
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xC38C48", Offset = "0xC38C48", VA = "0xC38C48")]
		public void hide()
		{
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xC38CC0", Offset = "0xC38CC0", VA = "0xC38CC0")]
		public area_collider()
		{
		}
	}
	[Token(Token = "0x20001BE")]
	public class button : MonoBehaviour
	{
		[Token(Token = "0x2000494")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849AF4", Offset = "0x849AF4")]
		private sealed class <push_animation>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400223D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400223E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400223F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public button <>4__this;

			[Token(Token = "0x4002240")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4002241")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <start>5__3;

			[Token(Token = "0x4002242")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <end>5__4;

			[Token(Token = "0x170002BF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D6E")]
				[Address(RVA = "0xFD54A4", Offset = "0xFD54A4", VA = "0xFD54A4", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D70")]
				[Address(RVA = "0xFD54EC", Offset = "0xFD54EC", VA = "0xFD54EC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D6B")]
			[Address(RVA = "0xFD5170", Offset = "0xFD5170", VA = "0xFD5170")]
			[DebuggerHidden]
			public <push_animation>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001D6C")]
			[Address(RVA = "0xFD519C", Offset = "0xFD519C", VA = "0xFD519C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D6D")]
			[Address(RVA = "0xFD51A0", Offset = "0xFD51A0", VA = "0xFD51A0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D6F")]
			[Address(RVA = "0xFD54AC", Offset = "0xFD54AC", VA = "0xFD54AC", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool active;

		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool accept_hand_finger;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool accept_hand_palm;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float accept_after_seconds;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Collider col_trigger;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float col_start;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private bool on_interaction;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool on;

		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool locked;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject model;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject model_on;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject model_off;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 push_org;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 push_offset;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float push_seconds;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private hand hand;

		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnPress;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnTurnOn;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent OnTurnOff;

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xC3A840", Offset = "0xC3A840", VA = "0xC3A840")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xC3A8E8", Offset = "0xC3A8E8", VA = "0xC3A8E8")]
		private void set_active_model()
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xC3A9CC", Offset = "0xC3A9CC", VA = "0xC3A9CC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858DB0", Offset = "0x858DB0")]
		private IEnumerator push_animation()
		{
			return null;
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xC3AA4C", Offset = "0xC3AA4C", VA = "0xC3AA4C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xC3AC44", Offset = "0xC3AC44", VA = "0xC3AC44")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6000D1C")]
		[Address(RVA = "0xC3ADB0", Offset = "0xC3ADB0", VA = "0xC3ADB0")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000D1D")]
		[Address(RVA = "0xC3AE8C", Offset = "0xC3AE8C", VA = "0xC3AE8C")]
		public button()
		{
		}
	}
	[Token(Token = "0x20001BF")]
	public class custombutton : MonoBehaviour
	{
		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public base_event on_press;

		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public sound ClickSound;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject show_on;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject show_off;

		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider col;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public string url;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private hand current_hand;

		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float last;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Rigidbody rb;

		[Token(Token = "0x6000D1E")]
		[Address(RVA = "0xC3BF48", Offset = "0xC3BF48", VA = "0xC3BF48")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D1F")]
		[Address(RVA = "0xC3C000", Offset = "0xC3C000", VA = "0xC3C000")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000D20")]
		[Address(RVA = "0xC3C530", Offset = "0xC3C530", VA = "0xC3C530")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000D21")]
		[Address(RVA = "0xC3C5C8", Offset = "0xC3C5C8", VA = "0xC3C5C8")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000D22")]
		[Address(RVA = "0xC3C72C", Offset = "0xC3C72C", VA = "0xC3C72C")]
		public custombutton()
		{
		}
	}
	[Token(Token = "0x20001C0")]
	public class customcard : MonoBehaviour
	{
		[Token(Token = "0x2000495")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849B04", Offset = "0x849B04")]
		private sealed class <set_image>d__8 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002243")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002244")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002245")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string url;

			[Token(Token = "0x4002246")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public customcard <>4__this;

			[Token(Token = "0x4002247")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private bool <cached>5__2;

			[Token(Token = "0x4002248")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private string <localName>5__3;

			[Token(Token = "0x4002249")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private UnityWebRequest <uwr>5__4;

			[Token(Token = "0x170002C1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D75")]
				[Address(RVA = "0xFD591C", Offset = "0xFD591C", VA = "0xFD591C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D77")]
				[Address(RVA = "0xFD5964", Offset = "0xFD5964", VA = "0xFD5964", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D71")]
			[Address(RVA = "0xFD54F4", Offset = "0xFD54F4", VA = "0xFD54F4")]
			[DebuggerHidden]
			public <set_image>d__8(int <>1__state)
			{
			}

			[Token(Token = "0x6001D72")]
			[Address(RVA = "0xFD5520", Offset = "0xFD5520", VA = "0xFD5520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D73")]
			[Address(RVA = "0xFD55F0", Offset = "0xFD55F0", VA = "0xFD55F0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D74")]
			[Address(RVA = "0xFD553C", Offset = "0xFD553C", VA = "0xFD553C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001D76")]
			[Address(RVA = "0xFD5924", Offset = "0xFD5924", VA = "0xFD5924", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string varname;

		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMeshProUGUI ui_title;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TextMeshProUGUI ui_name;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI ui_key;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public TextMeshProUGUI ui_value;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public RawImage ui_image;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public custombutton button;

		[Token(Token = "0x6000D23")]
		[Address(RVA = "0xC3C734", Offset = "0xC3C734", VA = "0xC3C734")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D24")]
		[Address(RVA = "0xC3C964", Offset = "0xC3C964", VA = "0xC3C964")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858E18", Offset = "0x858E18")]
		private IEnumerator set_image(string url)
		{
			return null;
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xC3C9F8", Offset = "0xC3C9F8", VA = "0xC3C9F8")]
		public customcard()
		{
		}
	}
	[Token(Token = "0x20001C1")]
	public class hand : MonoBehaviour
	{
		[Token(Token = "0x2000496")]
		public enum sides
		{
			[Token(Token = "0x400224B")]
			left,
			[Token(Token = "0x400224C")]
			right
		}

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public sides side;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public hand other;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform hands;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool in_reload_zone;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Animator ani;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public BonePoseLib poses;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string handpose_idle;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string handpose_fist;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public string handpose_point;

		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string handpose_ok;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string handpose_like;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string handpose_victory;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private string override_pose;

		[Token(Token = "0x4000D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int override_pose_frame;

		[Token(Token = "0x4000D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public Transform model;

		[Token(Token = "0x4000D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform model1;

		[Token(Token = "0x4000D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Transform model2;

		[Token(Token = "0x4000D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Transform model3;

		[Token(Token = "0x4000D80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public toolbase finger1;

		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public toolbase finger2;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public toolbase finger3;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform container;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Rigidbody rb;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Collider col_palm;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Collider col_finger;

		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Renderer rend;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Material defaultMat;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool enable_state;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		private bool enable_menu;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF2")]
		public bool enable_use;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF3")]
		private bool exploded;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public toolbase tool;

		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public bool locked;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public vr_hand controller;

		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private float distance_grab;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private float range;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private List<toolbase> collide_with_tools;

		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject stats;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject stats_focus;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public TextMeshProUGUI health;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public TextMeshProUGUI progress;

		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public TextMeshProUGUI clocktime;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public TextMeshProUGUI accuracy;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public GameObject health_container;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GameObject progress_container;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public GameObject clocktime_container;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public GameObject accuracy_container;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float detectCollisionsRestore;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Material mat_default;

		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Material mat_red;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Renderer[] mat_rends;

		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private Vector3 controller_velocity;

		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 controller_angular;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private PhysicsTracker MotionData;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Collider index_locked_collider;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private float index_locked_time;

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xC3EF3C", Offset = "0xC3EF3C", VA = "0xC3EF3C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xC3F0AC", Offset = "0xC3F0AC", VA = "0xC3F0AC")]
		public void focus(bool state)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xC3F2B4", Offset = "0xC3F2B4", VA = "0xC3F2B4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xC3F870", Offset = "0xC3F870", VA = "0xC3F870")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xC3F878", Offset = "0xC3F878", VA = "0xC3F878")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D2B")]
		[Address(RVA = "0xC3F324", Offset = "0xC3F324", VA = "0xC3F324")]
		private void update_hand_logic(bool late_update)
		{
		}

		[Token(Token = "0x6000D2C")]
		[Address(RVA = "0xC3FC94", Offset = "0xC3FC94", VA = "0xC3FC94")]
		public void explode(float delay = 0.5f)
		{
		}

		[Token(Token = "0x6000D2D")]
		[Address(RVA = "0xC3FD6C", Offset = "0xC3FD6C", VA = "0xC3FD6C")]
		private void multiplayer_explode_logic()
		{
		}

		[Token(Token = "0x6000D2E")]
		[Address(RVA = "0xC3FF18", Offset = "0xC3FF18", VA = "0xC3FF18")]
		private void explode_logic()
		{
		}

		[Token(Token = "0x6000D2F")]
		[Address(RVA = "0xC3F404", Offset = "0xC3F404", VA = "0xC3F404")]
		private void scan()
		{
		}

		[Token(Token = "0x6000D30")]
		[Address(RVA = "0xC4019C", Offset = "0xC4019C", VA = "0xC4019C")]
		public void set_override_pose(string str)
		{
		}

		[Token(Token = "0x6000D31")]
		[Address(RVA = "0xC3FAB4", Offset = "0xC3FAB4", VA = "0xC3FAB4")]
		public void update_hand(hand hand)
		{
		}

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xC40378", Offset = "0xC40378", VA = "0xC40378")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000D33")]
		[Address(RVA = "0xC40440", Offset = "0xC40440", VA = "0xC40440")]
		public bool is_menu_enabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D34")]
		[Address(RVA = "0xC40460", Offset = "0xC40460", VA = "0xC40460")]
		public bool is_enabled()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D35")]
		[Address(RVA = "0xC40468", Offset = "0xC40468", VA = "0xC40468")]
		public void EnableState(bool _state, bool allow_menu = false)
		{
		}

		[Token(Token = "0x6000D36")]
		[Address(RVA = "0xC40554", Offset = "0xC40554", VA = "0xC40554")]
		public void EnableToolUse(bool _state)
		{
		}

		[Token(Token = "0x6000D37")]
		[Address(RVA = "0xC40560", Offset = "0xC40560", VA = "0xC40560")]
		public void SwitchToRed()
		{
		}

		[Token(Token = "0x6000D38")]
		[Address(RVA = "0xC3F87C", Offset = "0xC3F87C", VA = "0xC3F87C")]
		private void update_veleocity()
		{
		}

		[Token(Token = "0x6000D39")]
		[Address(RVA = "0xC4063C", Offset = "0xC4063C", VA = "0xC4063C")]
		public Vector3 get_velocity()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D3A")]
		[Address(RVA = "0xC40740", Offset = "0xC40740", VA = "0xC40740")]
		public Vector3 get_angular()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D3B")]
		[Address(RVA = "0xC40818", Offset = "0xC40818", VA = "0xC40818")]
		public float get_controller_distance_from_handmodel()
		{
			return default(float);
		}

		[Token(Token = "0x6000D3C")]
		[Address(RVA = "0xC408B0", Offset = "0xC408B0", VA = "0xC408B0")]
		public Quaternion get_controller_world_rotation()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000D3D")]
		[Address(RVA = "0xC409C0", Offset = "0xC409C0", VA = "0xC409C0")]
		public Vector3 get_controller_world_position()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xC3A2E8", Offset = "0xC3A2E8", VA = "0xC3A2E8")]
		public void vibrate(float duration, float volume)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xC3F00C", Offset = "0xC3F00C", VA = "0xC3F00C")]
		public void set_pose(string name)
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xC402D8", Offset = "0xC402D8", VA = "0xC402D8")]
		public void set_position(Vector3 position)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xC40324", Offset = "0xC40324", VA = "0xC40324")]
		public void set_rotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xC401D0", Offset = "0xC401D0", VA = "0xC401D0")]
		public void set_visible(bool visible)
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xC3C3E8", Offset = "0xC3C3E8", VA = "0xC3C3E8")]
		public bool get_visible()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xC40AC0", Offset = "0xC40AC0", VA = "0xC40AC0")]
		public void disable_collisions()
		{
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xC40AFC", Offset = "0xC40AFC", VA = "0xC40AFC")]
		public void set_world_position(Vector3 position)
		{
		}

		[Token(Token = "0x6000D46")]
		[Address(RVA = "0xC40B48", Offset = "0xC40B48", VA = "0xC40B48")]
		public void set_world_rotation(Quaternion rotation)
		{
		}

		[Token(Token = "0x6000D47")]
		[Address(RVA = "0xC40B9C", Offset = "0xC40B9C", VA = "0xC40B9C", Slot = "4")]
		public virtual void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000D48")]
		[Address(RVA = "0xC40CEC", Offset = "0xC40CEC", VA = "0xC40CEC", Slot = "5")]
		public virtual void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000D49")]
		[Address(RVA = "0xC40E3C", Offset = "0xC40E3C", VA = "0xC40E3C")]
		public bool index_is_free(Collider collider)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4A")]
		[Address(RVA = "0xC3C4E4", Offset = "0xC3C4E4", VA = "0xC3C4E4")]
		public void index_locked_update(Collider collider)
		{
		}

		[Token(Token = "0x6000D4B")]
		[Address(RVA = "0xC3C6F4", Offset = "0xC3C6F4", VA = "0xC3C6F4")]
		public void index_locked_free(Collider collider)
		{
		}

		[Token(Token = "0x6000D4C")]
		[Address(RVA = "0xC3C414", Offset = "0xC3C414", VA = "0xC3C414")]
		public bool is_pointing()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D4D")]
		[Address(RVA = "0xC40F04", Offset = "0xC40F04", VA = "0xC40F04")]
		public hand()
		{
		}
	}
	[Token(Token = "0x20001C2")]
	public class handbone : MonoBehaviour
	{
		[Token(Token = "0x6000D4E")]
		[Address(RVA = "0xC410CC", Offset = "0xC410CC", VA = "0xC410CC")]
		public handbone()
		{
		}
	}
	[Token(Token = "0x20001C3")]
	public class handbutton : MonoBehaviour
	{
		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public handmenu handmenu;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public base_event on_press;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RawImage back;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider col;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private hand current_hand;

		[Token(Token = "0x6000D4F")]
		[Address(RVA = "0xC410D4", Offset = "0xC410D4", VA = "0xC410D4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000D50")]
		[Address(RVA = "0xC413EC", Offset = "0xC413EC", VA = "0xC413EC")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xC41484", Offset = "0xC41484", VA = "0xC41484")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xC415C0", Offset = "0xC415C0", VA = "0xC415C0")]
		public handbutton()
		{
		}
	}
	[Token(Token = "0x20001C4")]
	public class handmenu : MonoBehaviour
	{
		[Token(Token = "0x2000497")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849B14", Offset = "0x849B14")]
		private sealed class <show>d__45 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400224D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400224E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400224F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002250")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public handmenu <>4__this;

			[Token(Token = "0x4002251")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool state;

			[Token(Token = "0x170002C3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D7B")]
				[Address(RVA = "0xFD5F6C", Offset = "0xFD5F6C", VA = "0xFD5F6C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D7D")]
				[Address(RVA = "0xFD5FB4", Offset = "0xFD5FB4", VA = "0xFD5FB4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D78")]
			[Address(RVA = "0xFD5E7C", Offset = "0xFD5E7C", VA = "0xFD5E7C")]
			[DebuggerHidden]
			public <show>d__45(int <>1__state)
			{
			}

			[Token(Token = "0x6001D79")]
			[Address(RVA = "0xFD5EA8", Offset = "0xFD5EA8", VA = "0xFD5EA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D7A")]
			[Address(RVA = "0xFD5EAC", Offset = "0xFD5EAC", VA = "0xFD5EAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D7C")]
			[Address(RVA = "0xFD5F74", Offset = "0xFD5F74", VA = "0xFD5F74", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000498")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849B24", Offset = "0x849B24")]
		private sealed class <show>d__46 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002252")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002253")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002254")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int frames;

			[Token(Token = "0x4002255")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public handmenu <>4__this;

			[Token(Token = "0x4002256")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool state;

			[Token(Token = "0x170002C5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D81")]
				[Address(RVA = "0xFD6068", Offset = "0xFD6068", VA = "0xFD6068", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D83")]
				[Address(RVA = "0xFD60B0", Offset = "0xFD60B0", VA = "0xFD60B0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D7E")]
			[Address(RVA = "0xFD5FBC", Offset = "0xFD5FBC", VA = "0xFD5FBC")]
			[DebuggerHidden]
			public <show>d__46(int <>1__state)
			{
			}

			[Token(Token = "0x6001D7F")]
			[Address(RVA = "0xFD5FE8", Offset = "0xFD5FE8", VA = "0xFD5FE8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D80")]
			[Address(RVA = "0xFD5FEC", Offset = "0xFD5FEC", VA = "0xFD5FEC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D82")]
			[Address(RVA = "0xFD6070", Offset = "0xFD6070", VA = "0xFD6070", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool locked;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool inbase;

		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool visible;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float state_changed;

		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject bhaptics_menu;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject bhaptics_on;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject bhaptics_off;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float bhaptics_next;

		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool multiplayer_mode;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject language_menu;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject multiplayer_menu;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject wrap;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject go_button_restart_level;

		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject go_button_return_to_base;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject go_button_exit;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject admin_all;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject admin_level;

		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public TextMeshProUGUI admin_difficulty;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public sound ToggleSound;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public sound ClickSound;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private bool admin_check_started;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private string admin_check_seq;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshProUGUI networkText;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TextMeshProUGUI consoleText;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject tunnel_true;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject tunnel_false;

		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject rotate_true;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject rotate_false;

		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject recorder_true;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject recorder_false;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public CanvasGroup canvas_wrapper;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public TextMeshProUGUI angle_value;

		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public GameObject language_he;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public GameObject language_zh;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject language_ko;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject language_ja;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject publisher_container;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject god_mode_true;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject god_mode_false;

		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject fly_mode_true;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public GameObject fly_mode_false;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public GameObject players_names_true;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObject players_names_false;

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xC415C8", Offset = "0xC415C8", VA = "0xC415C8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xC41A84", Offset = "0xC41A84", VA = "0xC41A84")]
		public void button_set_langauge(string code)
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xC41D70", Offset = "0xC41D70", VA = "0xC41D70")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xC41600", Offset = "0xC41600", VA = "0xC41600")]
		public void init()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xC42670", Offset = "0xC42670", VA = "0xC42670")]
		public void console(object str, bool clear = false)
		{
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xC42180", Offset = "0xC42180", VA = "0xC42180")]
		private void check_admin()
		{
		}

		[Token(Token = "0x6000D59")]
		[Address(RVA = "0xC42798", Offset = "0xC42798", VA = "0xC42798")]
		private void toggle_admin()
		{
		}

		[Token(Token = "0x6000D5A")]
		[Address(RVA = "0xC42874", Offset = "0xC42874", VA = "0xC42874")]
		public void close()
		{
		}

		[Token(Token = "0x6000D5B")]
		[Address(RVA = "0xC41FFC", Offset = "0xC41FFC", VA = "0xC41FFC")]
		public void show(bool state)
		{
		}

		[Token(Token = "0x6000D5C")]
		[Address(RVA = "0xC42918", Offset = "0xC42918", VA = "0xC42918")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858E80", Offset = "0x858E80")]
		private IEnumerator show(bool state, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000D5D")]
		[Address(RVA = "0xC429B4", Offset = "0xC429B4", VA = "0xC429B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858EE8", Offset = "0x858EE8")]
		private IEnumerator show(bool state, int frames)
		{
			return null;
		}

		[Token(Token = "0x6000D5E")]
		[Address(RVA = "0xC4139C", Offset = "0xC4139C", VA = "0xC4139C")]
		public bool allow()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D5F")]
		[Address(RVA = "0xC41C44", Offset = "0xC41C44", VA = "0xC41C44")]
		private void button()
		{
		}

		[Token(Token = "0x6000D60")]
		[Address(RVA = "0xC42A50", Offset = "0xC42A50", VA = "0xC42A50")]
		public void button_restart_level()
		{
		}

		[Token(Token = "0x6000D61")]
		[Address(RVA = "0xC42B6C", Offset = "0xC42B6C", VA = "0xC42B6C")]
		public void button_return_to_base()
		{
		}

		[Token(Token = "0x6000D62")]
		[Address(RVA = "0xC42CD8", Offset = "0xC42CD8", VA = "0xC42CD8")]
		public void button_first_level()
		{
		}

		[Token(Token = "0x6000D63")]
		[Address(RVA = "0xC42E44", Offset = "0xC42E44", VA = "0xC42E44")]
		public void button_exit()
		{
		}

		[Token(Token = "0x6000D64")]
		[Address(RVA = "0xC42F44", Offset = "0xC42F44", VA = "0xC42F44")]
		public void button_angle_plus()
		{
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xC430D0", Offset = "0xC430D0", VA = "0xC430D0")]
		public void button_angle_minus()
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xC4325C", Offset = "0xC4325C", VA = "0xC4325C")]
		public void button_recenter()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xC425C8", Offset = "0xC425C8", VA = "0xC425C8")]
		private void update_recorder_ui()
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xC43334", Offset = "0xC43334", VA = "0xC43334")]
		public void button_recorder()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xC43468", Offset = "0xC43468", VA = "0xC43468")]
		public void button_tunnel()
		{
		}

		[Token(Token = "0x6000D6A")]
		[Address(RVA = "0xC4359C", Offset = "0xC4359C", VA = "0xC4359C")]
		public void button_rotate()
		{
		}

		[Token(Token = "0x6000D6B")]
		[Address(RVA = "0xC42520", Offset = "0xC42520", VA = "0xC42520")]
		private void update_rotate_ui()
		{
		}

		[Token(Token = "0x6000D6C")]
		[Address(RVA = "0xC436D0", Offset = "0xC436D0", VA = "0xC436D0")]
		public void button_bhaptics()
		{
		}

		[Token(Token = "0x6000D6D")]
		[Address(RVA = "0xC42478", Offset = "0xC42478", VA = "0xC42478")]
		private void update_tunnel_ui()
		{
		}

		[Token(Token = "0x6000D6E")]
		[Address(RVA = "0xC43858", Offset = "0xC43858", VA = "0xC43858")]
		public void button_admin_difficulty(int val)
		{
		}

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xC4395C", Offset = "0xC4395C", VA = "0xC4395C")]
		public void button_admin_reset()
		{
		}

		[Token(Token = "0x6000D70")]
		[Address(RVA = "0xC43AC0", Offset = "0xC43AC0", VA = "0xC43AC0")]
		public void button_admin_open()
		{
		}

		[Token(Token = "0x6000D71")]
		[Address(RVA = "0xC43CE8", Offset = "0xC43CE8", VA = "0xC43CE8")]
		public void button_admin_fps()
		{
		}

		[Token(Token = "0x6000D72")]
		[Address(RVA = "0xC43DB8", Offset = "0xC43DB8", VA = "0xC43DB8")]
		public void button_admin_tunnel()
		{
		}

		[Token(Token = "0x6000D73")]
		[Address(RVA = "0xC43E88", Offset = "0xC43E88", VA = "0xC43E88")]
		public void button_admin_subtitles()
		{
		}

		[Token(Token = "0x6000D74")]
		[Address(RVA = "0xC43F70", Offset = "0xC43F70", VA = "0xC43F70")]
		public void button_admin_health()
		{
		}

		[Token(Token = "0x6000D75")]
		[Address(RVA = "0xC423EC", Offset = "0xC423EC", VA = "0xC423EC")]
		private void publisher_menu()
		{
		}

		[Token(Token = "0x6000D76")]
		[Address(RVA = "0xC44044", Offset = "0xC44044", VA = "0xC44044")]
		private void publisher_update()
		{
		}

		[Token(Token = "0x6000D77")]
		[Address(RVA = "0xC4416C", Offset = "0xC4416C", VA = "0xC4416C")]
		public void publisher_god_mode()
		{
		}

		[Token(Token = "0x6000D78")]
		[Address(RVA = "0xC441E8", Offset = "0xC441E8", VA = "0xC441E8")]
		public void publisher_fly_mode()
		{
		}

		[Token(Token = "0x6000D79")]
		[Address(RVA = "0xC44264", Offset = "0xC44264", VA = "0xC44264")]
		public void publisher_players_names()
		{
		}

		[Token(Token = "0x6000D7A")]
		[Address(RVA = "0xC442E0", Offset = "0xC442E0", VA = "0xC442E0")]
		public void publisher_unlock_all_levels()
		{
		}

		[Token(Token = "0x6000D7B")]
		[Address(RVA = "0xC44508", Offset = "0xC44508", VA = "0xC44508")]
		public void publisher_reset_game()
		{
		}

		[Token(Token = "0x6000D7C")]
		[Address(RVA = "0xC4466C", Offset = "0xC4466C", VA = "0xC4466C")]
		public handmenu()
		{
		}
	}
	[Token(Token = "0x20001C5")]
	public class head : TrackedPoseDriver
	{
		[Token(Token = "0x6000D7D")]
		[Address(RVA = "0xC5C334", Offset = "0xC5C334", VA = "0xC5C334")]
		public void UpdateNow()
		{
		}

		[Token(Token = "0x6000D7E")]
		[Address(RVA = "0xC5C340", Offset = "0xC5C340", VA = "0xC5C340")]
		public head()
		{
		}
	}
	[Token(Token = "0x20001C6")]
	public class look : MonoBehaviour
	{
		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public look_event on_enter;

		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public look_event on_stay;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public look_event on_exit;

		[Token(Token = "0x6000D7F")]
		[Address(RVA = "0xC9C1D0", Offset = "0xC9C1D0", VA = "0xC9C1D0")]
		public void look_enter()
		{
		}

		[Token(Token = "0x6000D80")]
		[Address(RVA = "0xC9C228", Offset = "0xC9C228", VA = "0xC9C228")]
		public void look_stay()
		{
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xC9C280", Offset = "0xC9C280", VA = "0xC9C280")]
		public void look_exit()
		{
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xC9C2D8", Offset = "0xC9C2D8", VA = "0xC9C2D8")]
		public look()
		{
		}
	}
	[Token(Token = "0x20001C7")]
	public class menu : hitable
	{
		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool locked;

		[Token(Token = "0x4000DDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float lasthit;

		[Token(Token = "0x4000DDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public base_event on_hit;

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0x1DDAB9C", Offset = "0x1DDAB9C", VA = "0x1DDAB9C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0x1DDAC00", Offset = "0x1DDAC00", VA = "0x1DDAC00")]
		public void Test()
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0x1DDACA8", Offset = "0x1DDACA8", VA = "0x1DDACA8", Slot = "7")]
		public override bool absorb()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0x1DDACB0", Offset = "0x1DDACB0", VA = "0x1DDACB0", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0x1DDAD68", Offset = "0x1DDAD68", VA = "0x1DDAD68", Slot = "8")]
		public virtual void action()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0x1DDAD88", Offset = "0x1DDAD88", VA = "0x1DDAD88")]
		public menu()
		{
		}
	}
	[Token(Token = "0x20001C8")]
	public class mount : MonoBehaviour
	{
		[Token(Token = "0x4000DDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform pivot;

		[Token(Token = "0x4000DDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public toolbase mounted;

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0x1DDAD94", Offset = "0x1DDAD94", VA = "0x1DDAD94")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0x1DDADF0", Offset = "0x1DDADF0", VA = "0x1DDADF0")]
		public bool try_mount(toolbase tool)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0x1DDAE88", Offset = "0x1DDAE88", VA = "0x1DDAE88")]
		public bool free_mount(toolbase tool)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0x1DDAF50", Offset = "0x1DDAF50", VA = "0x1DDAF50")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0x1DDB08C", Offset = "0x1DDB08C", VA = "0x1DDB08C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0x1DDB1CC", Offset = "0x1DDB1CC", VA = "0x1DDB1CC")]
		public mount()
		{
		}
	}
	[Token(Token = "0x20001C9")]
	public class navmesh : MonoBehaviour
	{
		[Token(Token = "0x6000D90")]
		[Address(RVA = "0x1F19054", Offset = "0x1F19054", VA = "0x1F19054")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D91")]
		[Address(RVA = "0x1F1907C", Offset = "0x1F1907C", VA = "0x1F1907C")]
		private void ToggleVisible()
		{
		}

		[Token(Token = "0x6000D92")]
		[Address(RVA = "0x1F1918C", Offset = "0x1F1918C", VA = "0x1F1918C")]
		private void SnapToFloor()
		{
		}

		[Token(Token = "0x6000D93")]
		[Address(RVA = "0x1F19368", Offset = "0x1F19368", VA = "0x1F19368")]
		private void FixNavigationStatic()
		{
		}

		[Token(Token = "0x6000D94")]
		[Address(RVA = "0x1F1936C", Offset = "0x1F1936C", VA = "0x1F1936C")]
		public navmesh()
		{
		}
	}
	[Token(Token = "0x20001CA")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x848264", Offset = "0x848264")]
	public class player : MonoBehaviour
	{
		[Token(Token = "0x2000499")]
		public enum hittypes
		{
			[Token(Token = "0x4002258")]
			shoot,
			[Token(Token = "0x4002259")]
			melee,
			[Token(Token = "0x400225A")]
			landing,
			[Token(Token = "0x400225B")]
			kill,
			[Token(Token = "0x400225C")]
			heal,
			[Token(Token = "0x400225D")]
			explode,
			[Token(Token = "0x400225E")]
			civilian,
			[Token(Token = "0x400225F")]
			crash
		}

		[Token(Token = "0x200049A")]
		public enum movetypes
		{
			[Token(Token = "0x4002261")]
			none,
			[Token(Token = "0x4002262")]
			free,
			[Token(Token = "0x4002263")]
			teleport
		}

		[Token(Token = "0x200049B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849B34", Offset = "0x849B34")]
		private sealed class <Start>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002264")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002265")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002266")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public player <>4__this;

			[Token(Token = "0x170002C7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D87")]
				[Address(RVA = "0xD2EC2C", Offset = "0xD2EC2C", VA = "0xD2EC2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002C8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D89")]
				[Address(RVA = "0xD2EC74", Offset = "0xD2EC74", VA = "0xD2EC74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D84")]
			[Address(RVA = "0xD2EB08", Offset = "0xD2EB08", VA = "0xD2EB08")]
			[DebuggerHidden]
			public <Start>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x6001D85")]
			[Address(RVA = "0xD2EB34", Offset = "0xD2EB34", VA = "0xD2EB34", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D86")]
			[Address(RVA = "0xD2EB38", Offset = "0xD2EB38", VA = "0xD2EB38", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D88")]
			[Address(RVA = "0xD2EC34", Offset = "0xD2EC34", VA = "0xD2EC34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200049C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849B44", Offset = "0x849B44")]
		private sealed class <swap_standing_crouching_crouching>d__104 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002267")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002268")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002269")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public player <>4__this;

			[Token(Token = "0x400226A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <height_from>5__2;

			[Token(Token = "0x400226B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <height_to>5__3;

			[Token(Token = "0x400226C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <duration>5__4;

			[Token(Token = "0x400226D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <pass>5__5;

			[Token(Token = "0x400226E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <pos>5__6;

			[Token(Token = "0x170002C9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D8D")]
				[Address(RVA = "0xD2F034", Offset = "0xD2F034", VA = "0xD2F034", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D8F")]
				[Address(RVA = "0xD2F07C", Offset = "0xD2F07C", VA = "0xD2F07C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D8A")]
			[Address(RVA = "0xD2EE74", Offset = "0xD2EE74", VA = "0xD2EE74")]
			[DebuggerHidden]
			public <swap_standing_crouching_crouching>d__104(int <>1__state)
			{
			}

			[Token(Token = "0x6001D8B")]
			[Address(RVA = "0xD2EEA0", Offset = "0xD2EEA0", VA = "0xD2EEA0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D8C")]
			[Address(RVA = "0xD2EEA4", Offset = "0xD2EEA4", VA = "0xD2EEA4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D8E")]
			[Address(RVA = "0xD2F03C", Offset = "0xD2F03C", VA = "0xD2F03C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x200049D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849B54", Offset = "0x849B54")]
		private sealed class <>c
		{
			[Token(Token = "0x400226F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002270")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__115_0;

			[Token(Token = "0x6001D91")]
			[Address(RVA = "0xD2E6F0", Offset = "0xD2E6F0", VA = "0xD2E6F0")]
			public <>c()
			{
			}

			[Token(Token = "0x6001D92")]
			[Address(RVA = "0xD2E6F8", Offset = "0xD2E6F8", VA = "0xD2E6F8")]
			internal int <UpdateMoveTeleport>b__115_0(RaycastHit a, RaycastHit b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x200049E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849B64", Offset = "0x849B64")]
		private sealed class <UpdateRotate>d__120 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002271")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002272")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002273")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public player <>4__this;

			[Token(Token = "0x4002274")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float angle;

			[Token(Token = "0x4002275")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <duration>5__2;

			[Token(Token = "0x4002276")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <pass>5__3;

			[Token(Token = "0x4002277")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <last_pass>5__4;

			[Token(Token = "0x4002278")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <done>5__5;

			[Token(Token = "0x170002CB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D96")]
				[Address(RVA = "0xD2EE24", Offset = "0xD2EE24", VA = "0xD2EE24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D98")]
				[Address(RVA = "0xD2EE6C", Offset = "0xD2EE6C", VA = "0xD2EE6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D93")]
			[Address(RVA = "0xD2EC7C", Offset = "0xD2EC7C", VA = "0xD2EC7C")]
			[DebuggerHidden]
			public <UpdateRotate>d__120(int <>1__state)
			{
			}

			[Token(Token = "0x6001D94")]
			[Address(RVA = "0xD2ECA8", Offset = "0xD2ECA8", VA = "0xD2ECA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D95")]
			[Address(RVA = "0xD2ECAC", Offset = "0xD2ECAC", VA = "0xD2ECAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D97")]
			[Address(RVA = "0xD2EE2C", Offset = "0xD2EE2C", VA = "0xD2EE2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x200049F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849B74", Offset = "0x849B74")]
		private sealed class <SlowdownUpdate>d__133 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002279")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400227A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400227B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float to;

			[Token(Token = "0x400227C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float duration_in;

			[Token(Token = "0x400227D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x400227E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float duration_out;

			[Token(Token = "0x400227F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <pass>5__2;

			[Token(Token = "0x4002280")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <from>5__3;

			[Token(Token = "0x170002CD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001D9C")]
				[Address(RVA = "0xD2EAB8", Offset = "0xD2EAB8", VA = "0xD2EAB8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002CE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001D9E")]
				[Address(RVA = "0xD2EB00", Offset = "0xD2EB00", VA = "0xD2EB00", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D99")]
			[Address(RVA = "0xD2E73C", Offset = "0xD2E73C", VA = "0xD2E73C")]
			[DebuggerHidden]
			public <SlowdownUpdate>d__133(int <>1__state)
			{
			}

			[Token(Token = "0x6001D9A")]
			[Address(RVA = "0xD2E768", Offset = "0xD2E768", VA = "0xD2E768", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001D9B")]
			[Address(RVA = "0xD2E76C", Offset = "0xD2E76C", VA = "0xD2E76C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001D9D")]
			[Address(RVA = "0xD2EAC0", Offset = "0xD2EAC0", VA = "0xD2EAC0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000DDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static player instance;

		[Token(Token = "0x4000DDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool admin;

		[Token(Token = "0x4000DE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool admin_fps;

		[Token(Token = "0x4000DE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float admin_difficulty;

		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool admin_tunnel;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public static bool show_tunnel;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public static bool smooth_turning;

		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13")]
		public static bool simulate_weight;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static bool pasued;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
		public static bool enable_pause;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16")]
		public static bool voice_mute;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static int lock_sticks_frames;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static bool publisher;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public static bool godmode;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
		public static bool flymode;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
		public static bool playersnames;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool can_move;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform teleport_container;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public List<teleport> teleports;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform left_laser;

		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform right_laser;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public LineRenderer teleport_line_right;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public LineRenderer teleport_line_left;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public teleport teleport_area;

		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool right_stick_moved;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string teleport_area_layer_name;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public static int teleport_area_layer;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private Vector3 last_teleport_position;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public VestHapticClip bhaptic_shoot;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public VestHapticClip bhaptic_melee;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public VestHapticClip bhaptic_landing;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public VestHapticClip bhaptic_kill;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public VestHapticClip bhaptic_heal;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public VestHapticClip bhaptic_explode;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public VestHapticClip bhaptic_civilian;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public VestHapticClip bhaptic_crash;

		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 move;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform eyes;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform offset;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public hand left;

		[Token(Token = "0x4000E06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public hand right;

		[Token(Token = "0x4000E07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Rigidbody body;

		[Token(Token = "0x4000E08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Collider body_collider;

		[Token(Token = "0x4000E09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private Vector3 eyesvelocity;

		[Token(Token = "0x4000E0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private Vector3 eyesoldpos;

		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public head head;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public handmenu menu;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject EventSystem;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public sound audio;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 org_pos;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Vector3 org_angles;

		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		[HideInInspector]
		public float current_height;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private float standing_height;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private float crouching_height;

		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		private bool is_crouching;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private Coroutine standing_crouching;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private bool standing_crouching_lock;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		private bool on_standing_crouching;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
		public bool can_be_hit;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public RawImage black_cover;

		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public RawImage red_cover;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public RawImage green_cover;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public RawImage white_cover;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public Image tunnel;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public bool tunnel_enabled;

		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool inbounds;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		[HideInInspector]
		public float white_amount;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		[HideInInspector]
		public float red_amount;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		[HideInInspector]
		public float green_amount;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		[HideInInspector]
		public float black_amount;

		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x194")]
		public bool auto_update_red_amount;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x195")]
		private bool rotated;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x196")]
		private bool rotate_progress;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x197")]
		private bool moving;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public area area;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public GameObject bounds;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private bool enable_bounds;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private Transform container;

		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public Outline outline;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private int selected_difficulty;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private RaycastHit[] lookhits;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private look last_look_target;

		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private float screenshot_logic_last_x;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float screenshot_logic_enable;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static bool slowmotion;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private Coroutine SlowdownCoroutine;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		[HideInInspector]
		public string str_health;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		[HideInInspector]
		public string str_accuracy;

		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		[HideInInspector]
		public string str_progress;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public int health;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private Material restore_outline_mat;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private bool climb_left;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x211")]
		private bool climb_right;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private hand climb_last;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		private Vector3 climb_pos;

		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22C")]
		private float climb_speed_one;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private float climb_speed_two;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x234")]
		private bool can_fall;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x235")]
		private bool falling;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x236")]
		private bool falling_sound;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float falling_speed;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23C")]
		private float falling_start_speed;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		private float falling_acceleration;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x244")]
		private float falling_start;

		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		private float falling_max_time;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24C")]
		private Vector3 falling_pos;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private LayerMask landing_mask;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private RaycastHit landing_info;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public bool first_climb;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x289")]
		public bool first_landing;

		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28C")]
		private Vector3 landing_fall_position;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private bool landing_fall_crash;

		[Token(Token = "0x6000D95")]
		[Address(RVA = "0xFF4720", Offset = "0xFF4720", VA = "0xFF4720")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D96")]
		[Address(RVA = "0xFF4D24", Offset = "0xFF4D24", VA = "0xFF4D24")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858F50", Offset = "0x858F50")]
		private IEnumerator Start()
		{
			return null;
		}

		[Token(Token = "0x6000D97")]
		[Address(RVA = "0xFF4DA4", Offset = "0xFF4DA4", VA = "0xFF4DA4")]
		private void free_sticks()
		{
		}

		[Token(Token = "0x6000D98")]
		[Address(RVA = "0xFF4FD4", Offset = "0xFF4FD4", VA = "0xFF4FD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D99")]
		[Address(RVA = "0xFF5C64", Offset = "0xFF5C64", VA = "0xFF5C64")]
		public void set_difficulty()
		{
		}

		[Token(Token = "0x6000D9A")]
		[Address(RVA = "0xFF5D04", Offset = "0xFF5D04", VA = "0xFF5D04")]
		public void focus(bool state)
		{
		}

		[Token(Token = "0x6000D9B")]
		[Address(RVA = "0xFF5D4C", Offset = "0xFF5D4C", VA = "0xFF5D4C")]
		public void update_pause_multiplayer(bool state)
		{
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xFF5F78", Offset = "0xFF5F78", VA = "0xFF5F78")]
		public void update_pause(bool state)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xFF5618", Offset = "0xFF5618", VA = "0xFF5618")]
		private void update_area()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xFF5A4C", Offset = "0xFF5A4C", VA = "0xFF5A4C")]
		private void update_tunnel()
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xFF632C", Offset = "0xFF632C", VA = "0xFF632C")]
		public void loaded()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xFF59C4", Offset = "0xFF59C4", VA = "0xFF59C4")]
		private void update_black_ball()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xFF57A0", Offset = "0xFF57A0", VA = "0xFF57A0")]
		private void update_red_ball()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xFF5868", Offset = "0xFF5868", VA = "0xFF5868")]
		private void update_green_ball()
		{
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xFF5928", Offset = "0xFF5928", VA = "0xFF5928")]
		private void update_white_ball()
		{
		}

		[Token(Token = "0x6000DA4")]
		[Address(RVA = "0xFF63A4", Offset = "0xFF63A4", VA = "0xFF63A4")]
		public void update_recenter_rotate(float y)
		{
		}

		[Token(Token = "0x6000DA5")]
		[Address(RVA = "0xFF646C", Offset = "0xFF646C", VA = "0xFF646C")]
		public void update_recenter_angles(Vector3 angles)
		{
		}

		[Token(Token = "0x6000DA6")]
		[Address(RVA = "0xFF647C", Offset = "0xFF647C", VA = "0xFF647C")]
		public void update_recenter_rotation(Vector3 rot)
		{
		}

		[Token(Token = "0x6000DA7")]
		[Address(RVA = "0xFF6570", Offset = "0xFF6570", VA = "0xFF6570")]
		public void update_recenter_position(Vector3 pos)
		{
		}

		[Token(Token = "0x6000DA8")]
		[Address(RVA = "0xFF6650", Offset = "0xFF6650", VA = "0xFF6650")]
		public void update_recenter(Transform point)
		{
		}

		[Token(Token = "0x6000DA9")]
		[Address(RVA = "0xFF6814", Offset = "0xFF6814", VA = "0xFF6814")]
		public void update_recenter()
		{
		}

		[Token(Token = "0x6000DAA")]
		[Address(RVA = "0xFF54A8", Offset = "0xFF54A8", VA = "0xFF54A8")]
		public void swap_standing_crouching()
		{
		}

		[Token(Token = "0x6000DAB")]
		[Address(RVA = "0xFF6850", Offset = "0xFF6850", VA = "0xFF6850")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x858FB8", Offset = "0x858FB8")]
		private IEnumerator swap_standing_crouching_crouching()
		{
			return null;
		}

		[Token(Token = "0x6000DAC")]
		[Address(RVA = "0xFF68D0", Offset = "0xFF68D0", VA = "0xFF68D0")]
		public void teleport(Vector3 pos, Quaternion rot)
		{
		}

		[Token(Token = "0x6000DAD")]
		[Address(RVA = "0xFF69AC", Offset = "0xFF69AC", VA = "0xFF69AC")]
		public Vector3 get_player_position()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DAE")]
		[Address(RVA = "0xFF6A64", Offset = "0xFF6A64", VA = "0xFF6A64")]
		public void teleport_delta(Vector3 delta)
		{
		}

		[Token(Token = "0x6000DAF")]
		[Address(RVA = "0xFF6B3C", Offset = "0xFF6B3C", VA = "0xFF6B3C")]
		public void teleport_desenation(Vector3 desenation)
		{
		}

		[Token(Token = "0x6000DB0")]
		[Address(RVA = "0xFF5174", Offset = "0xFF5174", VA = "0xFF5174")]
		public void recenter()
		{
		}

		[Token(Token = "0x6000DB1")]
		[Address(RVA = "0xFF6B88", Offset = "0xFF6B88", VA = "0xFF6B88")]
		public static LayerMask collide_layers()
		{
			return default(LayerMask);
		}

		[Token(Token = "0x6000DB2")]
		[Address(RVA = "0xFF6C04", Offset = "0xFF6C04", VA = "0xFF6C04")]
		private void set_teleport_area(teleport value)
		{
		}

		[Token(Token = "0x6000DB3")]
		[Address(RVA = "0xFF6DFC", Offset = "0xFF6DFC", VA = "0xFF6DFC")]
		private void UpdateLook()
		{
		}

		[Token(Token = "0x6000DB4")]
		[Address(RVA = "0xFF7230", Offset = "0xFF7230", VA = "0xFF7230")]
		private bool UpdateMoveTeleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB5")]
		[Address(RVA = "0xFF7BA4", Offset = "0xFF7BA4", VA = "0xFF7BA4")]
		private bool UpdateMoveFreeLocomotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB6")]
		[Address(RVA = "0xFF80A8", Offset = "0xFF80A8", VA = "0xFF80A8")]
		private bool UpdateRoomscale()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB7")]
		[Address(RVA = "0xFF82B0", Offset = "0xFF82B0", VA = "0xFF82B0")]
		private bool UpdateMoveFly()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DB8")]
		[Address(RVA = "0xFF853C", Offset = "0xFF853C", VA = "0xFF853C")]
		private void UpdateMove()
		{
		}

		[Token(Token = "0x6000DB9")]
		[Address(RVA = "0xFF85F0", Offset = "0xFF85F0", VA = "0xFF85F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859020", Offset = "0x859020")]
		private IEnumerator UpdateRotate(float angle)
		{
			return null;
		}

		[Token(Token = "0x6000DBA")]
		[Address(RVA = "0xFF8680", Offset = "0xFF8680", VA = "0xFF8680")]
		private void UpdateSmoothRotate()
		{
		}

		[Token(Token = "0x6000DBB")]
		[Address(RVA = "0xFF88DC", Offset = "0xFF88DC", VA = "0xFF88DC")]
		private void UpdateSnapRotate()
		{
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xFF8A40", Offset = "0xFF8A40", VA = "0xFF8A40")]
		private void UpdateRotate()
		{
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xFF8ACC", Offset = "0xFF8ACC", VA = "0xFF8ACC")]
		public void moved(bool state)
		{
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xFF6290", Offset = "0xFF6290", VA = "0xFF6290")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xFF9190", Offset = "0xFF9190", VA = "0xFF9190")]
		public void Reset()
		{
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xFF5C60", Offset = "0xFF5C60", VA = "0xFF5C60")]
		public void screenshot_logic()
		{
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xFF91E0", Offset = "0xFF91E0", VA = "0xFF91E0")]
		public void Slowdown(float duration = 5f, float to = 0.05f, float duration_in = 0.25f, float duration_out = 0.25f)
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xFF9264", Offset = "0xFF9264", VA = "0xFF9264")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859088", Offset = "0x859088")]
		private IEnumerator SlowdownUpdate(float duration, float to, float duration_in, float duration_out)
		{
			return null;
		}

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xFF92F0", Offset = "0xFF92F0", VA = "0xFF92F0")]
		public void draw_health(int val)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xFF93DC", Offset = "0xFF93DC", VA = "0xFF93DC")]
		public void draw_accuracy(int val)
		{
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xFF9518", Offset = "0xFF9518", VA = "0xFF9518")]
		public void draw_time(string val)
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xFF9618", Offset = "0xFF9618", VA = "0xFF9618")]
		public void draw_progress(int val)
		{
		}

		[Token(Token = "0x6000DC7")]
		[Address(RVA = "0xFF973C", Offset = "0xFF973C", VA = "0xFF973C")]
		public void disable_collision_with_hands(Collider collider)
		{
		}

		[Token(Token = "0x6000DC8")]
		[Address(RVA = "0xFF9838", Offset = "0xFF9838", VA = "0xFF9838")]
		public void enable_collision_with_hands(Collider collider)
		{
		}

		[Token(Token = "0x6000DC9")]
		[Address(RVA = "0xFF9934", Offset = "0xFF9934", VA = "0xFF9934")]
		public Vector3 get_player_target(Vector3 origin, float speed = -1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DCA")]
		[Address(RVA = "0xFF9AF4", Offset = "0xFF9AF4", VA = "0xFF9AF4")]
		public bool is_target_of_player(Rigidbody _rb)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCB")]
		[Address(RVA = "0xFF9BAC", Offset = "0xFF9BAC", VA = "0xFF9BAC")]
		public bool is_part_of_player(Rigidbody _rb)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xFF9DC4", Offset = "0xFF9DC4", VA = "0xFF9DC4")]
		public void headshot()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xFF9E9C", Offset = "0xFF9E9C", VA = "0xFF9E9C")]
		public void heal(int points)
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xFF9FA4", Offset = "0xFF9FA4", VA = "0xFF9FA4")]
		public void bhapticplay(Vector3 normal, hittypes hittype)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xFFA2E8", Offset = "0xFFA2E8", VA = "0xFFA2E8")]
		public void hit_test()
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xFFA35C", Offset = "0xFFA35C", VA = "0xFFA35C")]
		public void hit(Vector3 point, Vector3 normal, Vector3 direction, float force, int damage, hittypes hittype)
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xFFA660", Offset = "0xFFA660", VA = "0xFFA660")]
		public void set_outline(bool state)
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xFFA93C", Offset = "0xFFA93C", VA = "0xFFA93C")]
		public void test_tunnel()
		{
		}

		[Token(Token = "0x6000DD3")]
		[Address(RVA = "0xFFA94C", Offset = "0xFFA94C", VA = "0xFFA94C")]
		public void test_red()
		{
		}

		[Token(Token = "0x6000DD4")]
		[Address(RVA = "0xFFA980", Offset = "0xFFA980", VA = "0xFFA980")]
		public void test_black()
		{
		}

		[Token(Token = "0x6000DD5")]
		[Address(RVA = "0xFF6CD4", Offset = "0xFF6CD4", VA = "0xFF6CD4")]
		private void climb_stop()
		{
		}

		[Token(Token = "0x6000DD6")]
		[Address(RVA = "0xFFA9B4", Offset = "0xFFA9B4", VA = "0xFFA9B4")]
		public void climb_start(hand hand)
		{
		}

		[Token(Token = "0x6000DD7")]
		[Address(RVA = "0xFFAC34", Offset = "0xFFAC34", VA = "0xFFAC34")]
		public void climb_update(hand hand)
		{
		}

		[Token(Token = "0x6000DD8")]
		[Address(RVA = "0xFFAE10", Offset = "0xFFAE10", VA = "0xFFAE10")]
		public void climb_end(hand hand)
		{
		}

		[Token(Token = "0x6000DD9")]
		[Address(RVA = "0xFFAF44", Offset = "0xFFAF44", VA = "0xFFAF44")]
		public bool is_falling()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xFF8AD8", Offset = "0xFF8AD8", VA = "0xFF8AD8")]
		private void update_fall()
		{
		}

		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xFFAB04", Offset = "0xFFAB04", VA = "0xFFAB04")]
		private void multiplayer_audio(string str)
		{
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xFFAF4C", Offset = "0xFFAF4C", VA = "0xFFAF4C")]
		public player()
		{
		}
	}
	[Token(Token = "0x20001CB")]
	public class reload : MonoBehaviour
	{
		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 angles;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 offset;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform container;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float y;

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xFFEC94", Offset = "0xFFEC94", VA = "0xFFEC94")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xFFED44", Offset = "0xFFED44", VA = "0xFFED44")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xFFEE9C", Offset = "0xFFEE9C", VA = "0xFFEE9C")]
		private hand get_hand(Rigidbody rb)
		{
			return null;
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xFFF054", Offset = "0xFFF054", VA = "0xFFF054")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xFFF19C", Offset = "0xFFF19C", VA = "0xFFF19C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xFFF234", Offset = "0xFFF234", VA = "0xFFF234")]
		public reload()
		{
		}
	}
	[Token(Token = "0x20001CC")]
	public class roadbody : MonoBehaviour
	{
		[Token(Token = "0x4000E52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Vector3 move;

		[Token(Token = "0x4000E53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Rigidbody rb;

		[Token(Token = "0x4000E54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool inside;

		[Token(Token = "0x4000E55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float factor;

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0x1000194", Offset = "0x1000194", VA = "0x1000194")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0x10003B8", Offset = "0x10003B8", VA = "0x10003B8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0x10004F8", Offset = "0x10004F8", VA = "0x10004F8")]
		public roadbody()
		{
		}
	}
	[Token(Token = "0x20001CD")]
	public class roadcontainer : MonoBehaviour
	{
		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0x10027AC", Offset = "0x10027AC", VA = "0x10027AC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0x10028A4", Offset = "0x10028A4", VA = "0x10028A4")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0x1002998", Offset = "0x1002998", VA = "0x1002998")]
		public roadcontainer()
		{
		}
	}
	[Token(Token = "0x20001CE")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x848278", Offset = "0x848278")]
	public class sound : MonoBehaviour
	{
		[Token(Token = "0x20004A0")]
		public enum types
		{
			[Token(Token = "0x4002282")]
			genric,
			[Token(Token = "0x4002283")]
			player_weapon,
			[Token(Token = "0x4002284")]
			npc_weapon,
			[Token(Token = "0x4002285")]
			npc_bullet,
			[Token(Token = "0x4002286")]
			npc_voice,
			[Token(Token = "0x4002287")]
			explode,
			[Token(Token = "0x4002288")]
			interaction,
			[Token(Token = "0x4002289")]
			music,
			[Token(Token = "0x400228A")]
			elevator,
			[Token(Token = "0x400228B")]
			elevator_music,
			[Token(Token = "0x400228C")]
			avatar,
			[Token(Token = "0x400228D")]
			drone
		}

		[Serializable]
		[Token(Token = "0x20004A1")]
		public struct clip
		{
			[Token(Token = "0x400228E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x400228F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioClip src;
		}

		[Serializable]
		[Token(Token = "0x20004A2")]
		public struct slot
		{
			[Token(Token = "0x4002290")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4002291")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public AudioClip[] src;
		}

		[Token(Token = "0x20004A3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849B84", Offset = "0x849B84")]
		private sealed class <play_slot_index_co>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002292")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002293")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002294")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002295")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public int i;

			[Token(Token = "0x4002296")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound <>4__this;

			[Token(Token = "0x4002297")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string name;

			[Token(Token = "0x170002CF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA2")]
				[Address(RVA = "0xD30894", Offset = "0xD30894", VA = "0xD30894", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DA4")]
				[Address(RVA = "0xD308DC", Offset = "0xD308DC", VA = "0xD308DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001D9F")]
			[Address(RVA = "0xD3061C", Offset = "0xD3061C", VA = "0xD3061C")]
			[DebuggerHidden]
			public <play_slot_index_co>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA0")]
			[Address(RVA = "0xD30648", Offset = "0xD30648", VA = "0xD30648", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA1")]
			[Address(RVA = "0xD3064C", Offset = "0xD3064C", VA = "0xD3064C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA3")]
			[Address(RVA = "0xD3089C", Offset = "0xD3089C", VA = "0xD3089C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource source;

		[Token(Token = "0x4000E57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public types type;

		[Token(Token = "0x4000E58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool auto;

		[Token(Token = "0x4000E59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25")]
		public bool loop;

		[Token(Token = "0x4000E5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float volume;

		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip clip_main;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<clip> clips;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<slot> slots;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private float org_volume;

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0x10075A4", Offset = "0x10075A4", VA = "0x10075A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0x100790C", Offset = "0x100790C", VA = "0x100790C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0x1007998", Offset = "0x1007998", VA = "0x1007998")]
		public AudioClip get(string name)
		{
			return null;
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0x1007AD4", Offset = "0x1007AD4", VA = "0x1007AD4")]
		public float len(string name)
		{
			return default(float);
		}

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0x1007B84", Offset = "0x1007B84", VA = "0x1007B84")]
		public int get_random_clip_in_slot(string name)
		{
			return default(int);
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0x1007D94", Offset = "0x1007D94", VA = "0x1007D94")]
		public void play_slot_index(string name, int i, float delay)
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0x1007DC0", Offset = "0x1007DC0", VA = "0x1007DC0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8590F0", Offset = "0x8590F0")]
		private IEnumerator play_slot_index_co(string name, int i, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0x1007E74", Offset = "0x1007E74", VA = "0x1007E74")]
		public void random(string name)
		{
		}

		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0x1008084", Offset = "0x1008084", VA = "0x1008084")]
		public void play(string name)
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0x1008040", Offset = "0x1008040", VA = "0x1008040")]
		public void play(AudioClip clip, float pitch = 1f)
		{
		}

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0x1007990", Offset = "0x1007990", VA = "0x1007990")]
		public void play(float pitch = 1f)
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0x100812C", Offset = "0x100812C", VA = "0x100812C")]
		public void playnormal()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0x1008180", Offset = "0x1008180", VA = "0x1008180")]
		public void stopnormal()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0x100793C", Offset = "0x100793C", VA = "0x100793C")]
		public void loop_start()
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0x10081D4", Offset = "0x10081D4", VA = "0x10081D4")]
		public void loop_stop()
		{
		}

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0x1008228", Offset = "0x1008228", VA = "0x1008228")]
		public void vol(float val)
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0x1008258", Offset = "0x1008258", VA = "0x1008258")]
		public sound()
		{
		}
	}
	[Token(Token = "0x20001CF")]
	public class splash : MonoBehaviour
	{
		[Token(Token = "0x20004A4")]
		public enum stores
		{
			[Token(Token = "0x4002299")]
			applab,
			[Token(Token = "0x400229A")]
			applab_demo,
			[Token(Token = "0x400229B")]
			oculus_rift,
			[Token(Token = "0x400229C")]
			steam,
			[Token(Token = "0x400229D")]
			pico_neo,
			[Token(Token = "0x400229E")]
			qiyi,
			[Token(Token = "0x400229F")]
			nolo
		}

		[Token(Token = "0x20004A5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849B94", Offset = "0x849B94")]
		private sealed class <send_co>d__48 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool immediate;

			[Token(Token = "0x40022A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public splash <>4__this;

			[Token(Token = "0x40022A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SubmitScore score;

			[Token(Token = "0x40022A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public string custom_param_name;

			[Token(Token = "0x40022A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			public string custom_param_value;

			[Token(Token = "0x40022A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			public bool reload;

			[Token(Token = "0x40022A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private int <timestamp>5__2;

			[Token(Token = "0x40022A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private UnityWebRequest <www>5__3;

			[Token(Token = "0x170002D1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DA9")]
				[Address(RVA = "0x192990C", Offset = "0x192990C", VA = "0x192990C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DAB")]
				[Address(RVA = "0x1929954", Offset = "0x1929954", VA = "0x1929954", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DA5")]
			[Address(RVA = "0x1928728", Offset = "0x1928728", VA = "0x1928728")]
			[DebuggerHidden]
			public <send_co>d__48(int <>1__state)
			{
			}

			[Token(Token = "0x6001DA6")]
			[Address(RVA = "0x1928754", Offset = "0x1928754", VA = "0x1928754", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DA7")]
			[Address(RVA = "0x1928824", Offset = "0x1928824", VA = "0x1928824", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DA8")]
			[Address(RVA = "0x1928770", Offset = "0x1928770", VA = "0x1928770")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DAA")]
			[Address(RVA = "0x1929914", Offset = "0x1929914", VA = "0x1929914", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849BA4", Offset = "0x849BA4")]
		private sealed class <tester_send>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string str;

			[Token(Token = "0x40022AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170002D3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB0")]
				[Address(RVA = "0x192A008", Offset = "0x192A008", VA = "0x192A008", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB2")]
				[Address(RVA = "0x192A050", Offset = "0x192A050", VA = "0x192A050", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DAC")]
			[Address(RVA = "0x192995C", Offset = "0x192995C", VA = "0x192995C")]
			[DebuggerHidden]
			public <tester_send>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001DAD")]
			[Address(RVA = "0x1929988", Offset = "0x1929988", VA = "0x1929988", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DAE")]
			[Address(RVA = "0x1929A58", Offset = "0x1929A58", VA = "0x1929A58", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DAF")]
			[Address(RVA = "0x19299A4", Offset = "0x19299A4", VA = "0x19299A4")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DB1")]
			[Address(RVA = "0x192A010", Offset = "0x192A010", VA = "0x192A010", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849BB4", Offset = "0x849BB4")]
		private sealed class <log>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Dictionary<string, string> logvars;

			[Token(Token = "0x40022B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170002D5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DB7")]
				[Address(RVA = "0xD32294", Offset = "0xD32294", VA = "0xD32294", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DB9")]
				[Address(RVA = "0xD322DC", Offset = "0xD322DC", VA = "0xD322DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DB3")]
			[Address(RVA = "0xD31BE4", Offset = "0xD31BE4", VA = "0xD31BE4")]
			[DebuggerHidden]
			public <log>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001DB4")]
			[Address(RVA = "0xD31C10", Offset = "0xD31C10", VA = "0xD31C10", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DB5")]
			[Address(RVA = "0xD31CE0", Offset = "0xD31CE0", VA = "0xD31CE0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DB6")]
			[Address(RVA = "0xD31C2C", Offset = "0xD31C2C", VA = "0xD31C2C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001DB8")]
			[Address(RVA = "0xD3229C", Offset = "0xD3229C", VA = "0xD3229C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849BC4", Offset = "0x849BC4")]
		private sealed class <exit_co>d__84 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public splash <>4__this;

			[Token(Token = "0x40022B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x40022B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x170002D7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DBD")]
				[Address(RVA = "0xD30C0C", Offset = "0xD30C0C", VA = "0xD30C0C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002D8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DBF")]
				[Address(RVA = "0xD30C54", Offset = "0xD30C54", VA = "0xD30C54", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DBA")]
			[Address(RVA = "0xD308E4", Offset = "0xD308E4", VA = "0xD308E4")]
			[DebuggerHidden]
			public <exit_co>d__84(int <>1__state)
			{
			}

			[Token(Token = "0x6001DBB")]
			[Address(RVA = "0xD30910", Offset = "0xD30910", VA = "0xD30910", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DBC")]
			[Address(RVA = "0xD30914", Offset = "0xD30914", VA = "0xD30914", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DBE")]
			[Address(RVA = "0xD30C14", Offset = "0xD30C14", VA = "0xD30C14", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004A9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849BD4", Offset = "0x849BD4")]
		private sealed class <load_level_co>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public string levelname;

			[Token(Token = "0x40022BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public splash <>4__this;

			[Token(Token = "0x40022BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public string loadtext;

			[Token(Token = "0x40022BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <start>5__2;

			[Token(Token = "0x40022BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <fake>5__3;

			[Token(Token = "0x40022BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <duration_factor>5__4;

			[Token(Token = "0x40022BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <duration>5__5;

			[Token(Token = "0x40022C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <pass>5__6;

			[Token(Token = "0x40022C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <vr_time>5__7;

			[Token(Token = "0x40022C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <vr_timeout>5__8;

			[Token(Token = "0x40022C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private AsyncOperation <scene>5__9;

			[Token(Token = "0x170002D9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC3")]
				[Address(RVA = "0xD31B94", Offset = "0xD31B94", VA = "0xD31B94", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DC5")]
				[Address(RVA = "0xD31BDC", Offset = "0xD31BDC", VA = "0xD31BDC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC0")]
			[Address(RVA = "0xD30C5C", Offset = "0xD30C5C", VA = "0xD30C5C")]
			[DebuggerHidden]
			public <load_level_co>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC1")]
			[Address(RVA = "0xD30C88", Offset = "0xD30C88", VA = "0xD30C88", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC2")]
			[Address(RVA = "0xD30C8C", Offset = "0xD30C8C", VA = "0xD30C8C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DC4")]
			[Address(RVA = "0xD31B9C", Offset = "0xD31B9C", VA = "0xD31B9C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static stores store;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static string multiplayer_version;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool tester;

		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public static bool debugging;

		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12")]
		public static bool monitoring;

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private string oculus_rift_app_id;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private string oculus_quest_app_id;

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string applab_demo_app_id;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private string piconeo_app_id;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string qiyi_app_id;

		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private string qiyi_dev_id;

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private string qiyi_secret;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private string qiyi_signkey;

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static string webservice;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static string mpservice;

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static int timestampsync;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static bool level_ready;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static splash instance;

		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform cam;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private player last_player;

		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private string last_level;

		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public bool on_load;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform target;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool first_load;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x81")]
		private bool entitled;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static bool multiplayer_level;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static string multiplayer_password;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public static string multiplayer_region;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent send_callback;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public CanvasGroup canvas;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public CanvasGroup canvas2;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public TextMeshProUGUI text_loading;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshProUGUI text_error;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public TextMeshProUGUI text_anykey;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool waitforkey;

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Coroutine load_level_routine;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private bool onsend;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool store_loaded;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private string error_pending;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool startready;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool update_started;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private static List<string> tester_rows;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float tester_last;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private int tester_limit;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool _focus;

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0x10083CC", Offset = "0x10083CC", VA = "0x10083CC")]
		public static bool have_storefront()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0x100848C", Offset = "0x100848C", VA = "0x100848C")]
		public static bool is_demo()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0x10084F8", Offset = "0x10084F8", VA = "0x10084F8")]
		public void set_error(string str)
		{
		}

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0x1008508", Offset = "0x1008508", VA = "0x1008508")]
		private void update_error()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0x1008FF4", Offset = "0x1008FF4", VA = "0x1008FF4")]
		public static string cachepath()
		{
			return null;
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0x10090CC", Offset = "0x10090CC", VA = "0x10090CC")]
		public void send(bool immediate, bool reload = false, [Optional] SubmitScore score, [Optional] string custom_param_name, [Optional] string custom_param_value)
		{
		}

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0x1009100", Offset = "0x1009100", VA = "0x1009100")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859158", Offset = "0x859158")]
		private IEnumerator send_co(bool immediate, bool reload, [Optional] SubmitScore score, [Optional] string custom_param_name, [Optional] string custom_param_value)
		{
			return null;
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0x10091E4", Offset = "0x10091E4", VA = "0x10091E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0x1009268", Offset = "0x1009268", VA = "0x1009268")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0x10092EC", Offset = "0x10092EC", VA = "0x10092EC")]
		private void tester_handler(string condition, string stackTrace, LogType type)
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0x10093E0", Offset = "0x10093E0", VA = "0x10093E0")]
		public static void tester_log(string str)
		{
		}

		[Token(Token = "0x6000E07")]
		[Address(RVA = "0x10094BC", Offset = "0x10094BC", VA = "0x10094BC")]
		private void tester_update()
		{
		}

		[Token(Token = "0x6000E08")]
		[Address(RVA = "0x1009784", Offset = "0x1009784", VA = "0x1009784")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8591C0", Offset = "0x8591C0")]
		private IEnumerator tester_send(string str)
		{
			return null;
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0x1009804", Offset = "0x1009804", VA = "0x1009804")]
		private void load_store()
		{
		}

		[Token(Token = "0x6000E0A")]
		[Address(RVA = "0x1009E64", Offset = "0x1009E64", VA = "0x1009E64")]
		private void load_store_oculus_rift()
		{
		}

		[Token(Token = "0x6000E0B")]
		[Address(RVA = "0x100A118", Offset = "0x100A118", VA = "0x100A118")]
		private void load_store_oculus_rift_callback(Message msg)
		{
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0x1009C14", Offset = "0x1009C14", VA = "0x1009C14")]
		private void load_store_applab_demo()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0x100A2D8", Offset = "0x100A2D8", VA = "0x100A2D8")]
		private void load_store_applab_demo_callback(Message msg)
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0x100A3A8", Offset = "0x100A3A8", VA = "0x100A3A8")]
		private void init_store_oculus(Message<PlatformInitialize> msg)
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0x100A9D0", Offset = "0x100A9D0", VA = "0x100A9D0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859228", Offset = "0x859228")]
		private IEnumerator log(Dictionary<string, string> logvars)
		{
			return null;
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0x100996C", Offset = "0x100996C", VA = "0x100996C")]
		private void load_store_applab()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0x100AA50", Offset = "0x100AA50", VA = "0x100AA50")]
		private void load_store_applab_callback(Message msg)
		{
		}

		[Token(Token = "0x6000E12")]
		[Address(RVA = "0x100A114", Offset = "0x100A114", VA = "0x100A114")]
		private void init_store_nolo()
		{
		}

		[Token(Token = "0x6000E13")]
		[Address(RVA = "0x100AC10", Offset = "0x100AC10", VA = "0x100AC10")]
		private void init_store_qiyi()
		{
		}

		[Token(Token = "0x6000E14")]
		[Address(RVA = "0x100A110", Offset = "0x100A110", VA = "0x100A110")]
		private void load_store_qiyi()
		{
		}

		[Token(Token = "0x6000E15")]
		[Address(RVA = "0x100A10C", Offset = "0x100A10C", VA = "0x100A10C")]
		private void load_store_piconeo()
		{
		}

		[Token(Token = "0x6000E16")]
		[Address(RVA = "0x100AC1C", Offset = "0x100AC1C", VA = "0x100AC1C")]
		private void load_store_piconeo_recenter(bool success)
		{
		}

		[Token(Token = "0x6000E17")]
		[Address(RVA = "0x100AD4C", Offset = "0x100AD4C", VA = "0x100AD4C")]
		private void update_store()
		{
		}

		[Token(Token = "0x6000E18")]
		[Address(RVA = "0x100AEA0", Offset = "0x100AEA0", VA = "0x100AEA0")]
		private void update_store_oculus_rift()
		{
		}

		[Token(Token = "0x6000E19")]
		[Address(RVA = "0x100B1A0", Offset = "0x100B1A0", VA = "0x100B1A0")]
		private void update_store_applab_demo()
		{
		}

		[Token(Token = "0x6000E1A")]
		[Address(RVA = "0x100B020", Offset = "0x100B020", VA = "0x100B020")]
		private void update_store_applab()
		{
		}

		[Token(Token = "0x6000E1B")]
		[Address(RVA = "0x100B320", Offset = "0x100B320", VA = "0x100B320")]
		private void update_store_generic()
		{
		}

		[Token(Token = "0x6000E1C")]
		[Address(RVA = "0x100B3C8", Offset = "0x100B3C8", VA = "0x100B3C8")]
		private void focus(bool state)
		{
		}

		[Token(Token = "0x6000E1D")]
		[Address(RVA = "0x10087B0", Offset = "0x10087B0", VA = "0x10087B0")]
		private void update_canvas(bool lerp)
		{
		}

		[Token(Token = "0x6000E1E")]
		[Address(RVA = "0x100B5F8", Offset = "0x100B5F8", VA = "0x100B5F8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E1F")]
		[Address(RVA = "0x100B71C", Offset = "0x100B71C", VA = "0x100B71C")]
		private bool update_start()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E20")]
		[Address(RVA = "0x100B974", Offset = "0x100B974", VA = "0x100B974")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E21")]
		[Address(RVA = "0x100B9C4", Offset = "0x100B9C4", VA = "0x100B9C4")]
		public void exit()
		{
		}

		[Token(Token = "0x6000E22")]
		[Address(RVA = "0x100B9F0", Offset = "0x100B9F0", VA = "0x100B9F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859290", Offset = "0x859290")]
		private IEnumerator exit_co()
		{
			return null;
		}

		[Token(Token = "0x6000E23")]
		[Address(RVA = "0x100BA70", Offset = "0x100BA70", VA = "0x100BA70")]
		private void disable_pause()
		{
		}

		[Token(Token = "0x6000E24")]
		[Address(RVA = "0x10089CC", Offset = "0x10089CC", VA = "0x10089CC")]
		public void load_level(string levelname, [Optional] string loadtext)
		{
		}

		[Token(Token = "0x6000E25")]
		[Address(RVA = "0x100BAF0", Offset = "0x100BAF0", VA = "0x100BAF0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8592F8", Offset = "0x8592F8")]
		private IEnumerator load_level_co(string levelname, string loadtext)
		{
			return null;
		}

		[Token(Token = "0x6000E26")]
		[Address(RVA = "0x100BBA0", Offset = "0x100BBA0", VA = "0x100BBA0")]
		public void set_player(player player)
		{
		}

		[Token(Token = "0x6000E27")]
		[Address(RVA = "0x100BD0C", Offset = "0x100BD0C", VA = "0x100BD0C")]
		public void player_recenter(player player)
		{
		}

		[Token(Token = "0x6000E28")]
		[Address(RVA = "0x100BDA4", Offset = "0x100BDA4", VA = "0x100BDA4")]
		public splash()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D0")]
	public class RequestData
	{
		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyValue[] props;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public KeyValue[] prefs;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SubmitScore score;

		[Token(Token = "0x6000E2A")]
		[Address(RVA = "0xDCFB74", Offset = "0xDCFB74", VA = "0xDCFB74")]
		public RequestData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D1")]
	public class ResponseData
	{
		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public KeyValue[] prefs;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ResponseCacheData data;

		[Token(Token = "0x6000E2B")]
		[Address(RVA = "0xDD7560", Offset = "0xDD7560", VA = "0xDD7560")]
		public ResponseData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D2")]
	public class KeyValue
	{
		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string value;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string type;

		[Token(Token = "0x6000E2C")]
		[Address(RVA = "0xCE0CA8", Offset = "0xCE0CA8", VA = "0xCE0CA8")]
		public KeyValue(string key, string value, string type = "string")
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D3")]
	public class ResponseCacheData
	{
		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BoardData board1;

		[Token(Token = "0x4000E95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public BoardData board2;

		[Token(Token = "0x4000E96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BoardData board9;

		[Token(Token = "0x6000E2D")]
		[Address(RVA = "0xDD7558", Offset = "0xDD7558", VA = "0xDD7558")]
		public ResponseCacheData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D4")]
	public class BoardData
	{
		[Token(Token = "0x4000E97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string title;

		[Token(Token = "0x4000E98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string subtitle;

		[Token(Token = "0x4000E99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string column;

		[Token(Token = "0x4000E9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string link;

		[Token(Token = "0x4000E9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string url;

		[Token(Token = "0x4000E9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public BoardRow[] rows;

		[Token(Token = "0x6000E2E")]
		[Address(RVA = "0xF467C4", Offset = "0xF467C4", VA = "0xF467C4")]
		public BoardData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D5")]
	public class BoardRow
	{
		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int id;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int no;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string text;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int val;

		[Token(Token = "0x6000E2F")]
		[Address(RVA = "0xF46868", Offset = "0xF46868", VA = "0xF46868")]
		public BoardRow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D6")]
	public class SubmitScore
	{
		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string level;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string team;

		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int points;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int kills;

		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int waves;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int seconds;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string token;

		[Token(Token = "0x6000E30")]
		[Address(RVA = "0x1056998", Offset = "0x1056998", VA = "0x1056998")]
		public SubmitScore()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001D7")]
	public class NetworkServer
	{
		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string code;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int ping;

		[Token(Token = "0x6000E31")]
		[Address(RVA = "0x1565F5C", Offset = "0x1565F5C", VA = "0x1565F5C")]
		public NetworkServer(string code, int ping)
		{
		}
	}
	[Token(Token = "0x20001D8")]
	public class teleport : MonoBehaviour
	{
		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string zone;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool walkable;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool moveable;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		private bool attached;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 last_pos;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private int lastframe;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Renderer rend;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Collider col;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool moving;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float moveSpeed;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform MoveToOnAttachedContainer;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform MoveToOnAttached;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool RestoreOnDetach;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Vector3 RestorePosition;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Quaternion RestoreRotation;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public teleport_event on_arrived;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool on_arrived_once;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x89")]
		private bool is_arrived;

		[Token(Token = "0x6000E32")]
		[Address(RVA = "0x100D010", Offset = "0x100D010", VA = "0x100D010")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000E33")]
		[Address(RVA = "0x100D120", Offset = "0x100D120", VA = "0x100D120")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E34")]
		[Address(RVA = "0x100D1C8", Offset = "0x100D1C8", VA = "0x100D1C8")]
		public void arrived()
		{
		}

		[Token(Token = "0x6000E35")]
		[Address(RVA = "0x100D244", Offset = "0x100D244", VA = "0x100D244")]
		public Vector3 ClosestPoint(Vector3 PlayerPoint)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E36")]
		[Address(RVA = "0x100D320", Offset = "0x100D320", VA = "0x100D320")]
		public float Distance(Vector3 PlayerPoint)
		{
			return default(float);
		}

		[Token(Token = "0x6000E37")]
		[Address(RVA = "0x100D410", Offset = "0x100D410", VA = "0x100D410")]
		public void show(bool state = true)
		{
		}

		[Token(Token = "0x6000E38")]
		[Address(RVA = "0x100D45C", Offset = "0x100D45C", VA = "0x100D45C")]
		public bool can_locomotion()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E39")]
		[Address(RVA = "0x100D4E8", Offset = "0x100D4E8", VA = "0x100D4E8")]
		public bool can_teleport()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E3A")]
		[Address(RVA = "0x100D58C", Offset = "0x100D58C", VA = "0x100D58C")]
		public void UpdatePlayerPosition()
		{
		}

		[Token(Token = "0x6000E3B")]
		[Address(RVA = "0x100D790", Offset = "0x100D790", VA = "0x100D790")]
		public void UpdateMove()
		{
		}

		[Token(Token = "0x6000E3C")]
		[Address(RVA = "0x100DA10", Offset = "0x100DA10", VA = "0x100DA10")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E3D")]
		[Address(RVA = "0x100DA34", Offset = "0x100DA34", VA = "0x100DA34")]
		private void ToggleVisible()
		{
		}

		[Token(Token = "0x6000E3E")]
		[Address(RVA = "0x100DCE8", Offset = "0x100DCE8", VA = "0x100DCE8")]
		private void SnapToFloor()
		{
		}

		[Token(Token = "0x6000E3F")]
		[Address(RVA = "0x100DEC4", Offset = "0x100DEC4", VA = "0x100DEC4")]
		private void TestDistance()
		{
		}

		[Token(Token = "0x6000E40")]
		[Address(RVA = "0x100E114", Offset = "0x100E114", VA = "0x100E114")]
		public teleport()
		{
		}
	}
	[Token(Token = "0x20001D9")]
	public class teleport_blocker : MonoBehaviour
	{
		[Token(Token = "0x6000E41")]
		[Address(RVA = "0x100E1C8", Offset = "0x100E1C8", VA = "0x100E1C8")]
		public teleport_blocker()
		{
		}
	}
	[Token(Token = "0x20001DA")]
	[SelectionBase]
	public class tool : toolbase
	{
		[Token(Token = "0x20004AA")]
		public enum dropmodes
		{
			[Token(Token = "0x40022C5")]
			none,
			[Token(Token = "0x40022C6")]
			restore,
			[Token(Token = "0x40022C7")]
			destroy
		}

		[Token(Token = "0x20004AB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849BE4", Offset = "0x849BE4")]
		private sealed class <release_sticked_hand>d__71 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool <>4__this;

			[Token(Token = "0x40022CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public hand hand;

			[Token(Token = "0x40022CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float duration;

			[Token(Token = "0x40022CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <from_pos>5__2;

			[Token(Token = "0x40022CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Quaternion <from_rot>5__3;

			[Token(Token = "0x40022CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private float <start>5__4;

			[Token(Token = "0x40022D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private float <end>5__5;

			[Token(Token = "0x170002DB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DC9")]
				[Address(RVA = "0x192A610", Offset = "0x192A610", VA = "0x192A610", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DCB")]
				[Address(RVA = "0x192A658", Offset = "0x192A658", VA = "0x192A658", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DC6")]
			[Address(RVA = "0x192A3AC", Offset = "0x192A3AC", VA = "0x192A3AC")]
			[DebuggerHidden]
			public <release_sticked_hand>d__71(int <>1__state)
			{
			}

			[Token(Token = "0x6001DC7")]
			[Address(RVA = "0x192A3D8", Offset = "0x192A3D8", VA = "0x192A3D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DC8")]
			[Address(RVA = "0x192A3DC", Offset = "0x192A3DC", VA = "0x192A3DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DCA")]
			[Address(RVA = "0x192A618", Offset = "0x192A618", VA = "0x192A618", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004AC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849BF4", Offset = "0x849BF4")]
		private sealed class <move_tool_to_hand>d__72 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool <>4__this;

			[Token(Token = "0x40022D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float duration;

			[Token(Token = "0x40022D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private Vector3 <from_pos>5__2;

			[Token(Token = "0x40022D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Quaternion <from_rot>5__3;

			[Token(Token = "0x40022D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <start>5__4;

			[Token(Token = "0x40022D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <end>5__5;

			[Token(Token = "0x170002DD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DCF")]
				[Address(RVA = "0x192A35C", Offset = "0x192A35C", VA = "0x192A35C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002DE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DD1")]
				[Address(RVA = "0x192A3A4", Offset = "0x192A3A4", VA = "0x192A3A4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DCC")]
			[Address(RVA = "0x192A058", Offset = "0x192A058", VA = "0x192A058")]
			[DebuggerHidden]
			public <move_tool_to_hand>d__72(int <>1__state)
			{
			}

			[Token(Token = "0x6001DCD")]
			[Address(RVA = "0x192A084", Offset = "0x192A084", VA = "0x192A084", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DCE")]
			[Address(RVA = "0x192A088", Offset = "0x192A088", VA = "0x192A088", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD0")]
			[Address(RVA = "0x192A364", Offset = "0x192A364", VA = "0x192A364", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _init;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public string zone;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float last_unselect;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public string handpose;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool active;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool update_hand_late;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool auto_select;

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float auto_select_last;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public dropmodes dropmode;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Collider droparea;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool hide_hand_with_tool;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float dropped_seconds;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public float touch_range_short;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float touch_range_long;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public bool touch_only_on_collide;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		public bool enable_distance_collide;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float break_range;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float stick_speed;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public bool disable_rotation;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private float stick_start_time;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public bool fix_stick_left_hand;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Transform pivot;

		[Token(Token = "0x4000ED2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Outline outline;

		[Token(Token = "0x4000ED3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool first_grab;

		[Token(Token = "0x4000ED4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF1")]
		public bool outline_until_first_grab;

		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float outline_width_dir;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float outline_width;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private Transform parent_before_grab;

		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public bool restore_parent;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x109")]
		public bool unparent_on_grab;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float climb_angle_x;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public bool climb_angle_flip;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		private int last_outline_frame;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private Coroutine move_tool_to_hand_routine;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private Vector3 org_pos;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		private Quaternion org_rot;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		private bool org_isKinematic;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		protected Transform parent_to;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private bool taken;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		private bool dropped;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		private float dropped_time;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private hand release_sticked_hand_progress;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		protected bool moving_to_hand;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float weight_range;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float weight_factor;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private float lastTimeScale;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private List<Collider> all_colliders;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private float restore_collision_with_player_time;

		[Token(Token = "0x6000E42")]
		[Address(RVA = "0x100E4B4", Offset = "0x100E4B4", VA = "0x100E4B4", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000E43")]
		[Address(RVA = "0x100E55C", Offset = "0x100E55C", VA = "0x100E55C", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x6000E44")]
		[Address(RVA = "0x100E694", Offset = "0x100E694", VA = "0x100E694", Slot = "6")]
		public override void Start()
		{
		}

		[Token(Token = "0x6000E45")]
		[Address(RVA = "0x100E698", Offset = "0x100E698", VA = "0x100E698")]
		public bool is_moved(float distance = 0.01f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E46")]
		[Address(RVA = "0x100E718", Offset = "0x100E718", VA = "0x100E718")]
		private void update_outline()
		{
		}

		[Token(Token = "0x6000E47")]
		[Address(RVA = "0x100E8B8", Offset = "0x100E8B8", VA = "0x100E8B8")]
		private void update_mount_outline()
		{
		}

		[Token(Token = "0x6000E48")]
		[Address(RVA = "0x100EA6C", Offset = "0x100EA6C", VA = "0x100EA6C", Slot = "19")]
		public override void update_owner()
		{
		}

		[Token(Token = "0x6000E49")]
		[Address(RVA = "0x100EB68", Offset = "0x100EB68", VA = "0x100EB68", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000E4A")]
		[Address(RVA = "0x100EC2C", Offset = "0x100EC2C", VA = "0x100EC2C")]
		private void UpdateUnscaledTime()
		{
		}

		[Token(Token = "0x6000E4B")]
		[Address(RVA = "0x100ED9C", Offset = "0x100ED9C", VA = "0x100ED9C")]
		private void FixedUpdateUnscaledTime()
		{
		}

		[Token(Token = "0x6000E4C")]
		[Address(RVA = "0x100F04C", Offset = "0x100F04C", VA = "0x100F04C", Slot = "8")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E4D")]
		[Address(RVA = "0x100F050", Offset = "0x100F050", VA = "0x100F050", Slot = "9")]
		public override void LateUpdate()
		{
		}

		[Token(Token = "0x6000E4E")]
		[Address(RVA = "0x100F254", Offset = "0x100F254", VA = "0x100F254")]
		public float get_weight()
		{
			return default(float);
		}

		[Token(Token = "0x6000E4F")]
		[Address(RVA = "0x100F270", Offset = "0x100F270", VA = "0x100F270", Slot = "10")]
		public override bool scan(hand hand, float distance, bool hand_collide, bool distance_collide)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E50")]
		[Address(RVA = "0x100F3DC", Offset = "0x100F3DC", VA = "0x100F3DC", Slot = "11")]
		public override void select(hand hand)
		{
		}

		[Token(Token = "0x6000E51")]
		[Address(RVA = "0x100F8BC", Offset = "0x100F8BC", VA = "0x100F8BC", Slot = "12")]
		public override void unselect(bool breaked = false, bool break_immediate = false)
		{
		}

		[Token(Token = "0x6000E52")]
		[Address(RVA = "0x101006C", Offset = "0x101006C", VA = "0x101006C", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x6000E53")]
		[Address(RVA = "0x1010968", Offset = "0x1010968", VA = "0x1010968", Slot = "14")]
		public override void reset_values()
		{
		}

		[Token(Token = "0x6000E54")]
		[Address(RVA = "0x1010A90", Offset = "0x1010A90", VA = "0x1010A90", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x6000E55")]
		[Address(RVA = "0x1010A9C", Offset = "0x1010A9C", VA = "0x1010A9C", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6000E56")]
		[Address(RVA = "0x1010AD0", Offset = "0x1010AD0", VA = "0x1010AD0")]
		public bool is_dropped()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E57")]
		[Address(RVA = "0x100ED38", Offset = "0x100ED38", VA = "0x100ED38")]
		private void dropped_logic()
		{
		}

		[Token(Token = "0x6000E58")]
		[Address(RVA = "0x1010CE8", Offset = "0x1010CE8", VA = "0x1010CE8", Slot = "17")]
		public override void remove()
		{
		}

		[Token(Token = "0x6000E59")]
		[Address(RVA = "0x1010DF0", Offset = "0x1010DF0", VA = "0x1010DF0", Slot = "18")]
		public override void restore()
		{
		}

		[Token(Token = "0x6000E5A")]
		[Address(RVA = "0x100FFC8", Offset = "0x100FFC8", VA = "0x100FFC8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859360", Offset = "0x859360")]
		protected IEnumerator release_sticked_hand(hand hand, float duration)
		{
			return null;
		}

		[Token(Token = "0x6000E5B")]
		[Address(RVA = "0x100F82C", Offset = "0x100F82C", VA = "0x100F82C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8593C8", Offset = "0x8593C8")]
		protected IEnumerator move_tool_to_hand(float duration)
		{
			return null;
		}

		[Token(Token = "0x6000E5C")]
		[Address(RVA = "0x100FDEC", Offset = "0x100FDEC", VA = "0x100FDEC")]
		private void disable_collisions_with_player()
		{
		}

		[Token(Token = "0x6000E5D")]
		[Address(RVA = "0x100EEC8", Offset = "0x100EEC8", VA = "0x100EEC8")]
		private void restore_collision_with_player()
		{
		}

		[Token(Token = "0x6000E5E")]
		[Address(RVA = "0x1010F08", Offset = "0x1010F08", VA = "0x1010F08")]
		public tool()
		{
		}
	}
	[Token(Token = "0x20001DB")]
	public class toolbase : MonoBehaviour
	{
		[Token(Token = "0x20004AD")]
		public enum behaviors
		{
			[Token(Token = "0x40022DA")]
			free,
			[Token(Token = "0x40022DB")]
			stick,
			[Token(Token = "0x40022DC")]
			climb
		}

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public Rigidbody rb;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public bool needsUpdate;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[HideInInspector]
		public bool takeover;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		[HideInInspector]
		public bool ismine;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		[HideInInspector]
		public bool inother;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public bool canselect;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float canselect_delta;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public behaviors behavior;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool late_update;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public hand holder;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public bool can_mount_to_mouth;

		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public mount mount;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public mount mount_trigger;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool pass_hit_to_player;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public tool_event on_preselect;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public tool_event on_select;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public tool_event on_unselect;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public tool_event on_destroy;

		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected float expire;

		[Token(Token = "0x6000E5F")]
		[Address(RVA = "0xE21A40", Offset = "0xE21A40", VA = "0xE21A40", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6000E60")]
		[Address(RVA = "0xE21A50", Offset = "0xE21A50", VA = "0xE21A50", Slot = "5")]
		public virtual void init()
		{
		}

		[Token(Token = "0x6000E61")]
		[Address(RVA = "0xE21A54", Offset = "0xE21A54", VA = "0xE21A54", Slot = "6")]
		public virtual void Start()
		{
		}

		[Token(Token = "0x6000E62")]
		[Address(RVA = "0xE21A58", Offset = "0xE21A58", VA = "0xE21A58", Slot = "7")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6000E63")]
		[Address(RVA = "0xE21A5C", Offset = "0xE21A5C", VA = "0xE21A5C", Slot = "8")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E64")]
		[Address(RVA = "0xE21A60", Offset = "0xE21A60", VA = "0xE21A60", Slot = "9")]
		public virtual void LateUpdate()
		{
		}

		[Token(Token = "0x6000E65")]
		[Address(RVA = "0xE21A64", Offset = "0xE21A64", VA = "0xE21A64", Slot = "10")]
		public virtual bool scan(hand hand, float distance, bool hand_collide, bool distance_collide)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E66")]
		[Address(RVA = "0xE21A6C", Offset = "0xE21A6C", VA = "0xE21A6C", Slot = "11")]
		public virtual void select(hand hand)
		{
		}

		[Token(Token = "0x6000E67")]
		[Address(RVA = "0xE21A70", Offset = "0xE21A70", VA = "0xE21A70", Slot = "12")]
		public virtual void unselect(bool breaked = false, bool break_immediate = false)
		{
		}

		[Token(Token = "0x6000E68")]
		[Address(RVA = "0xE21A74", Offset = "0xE21A74", VA = "0xE21A74", Slot = "13")]
		public virtual void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x6000E69")]
		[Address(RVA = "0xE21A78", Offset = "0xE21A78", VA = "0xE21A78", Slot = "14")]
		public virtual void reset_values()
		{
		}

		[Token(Token = "0x6000E6A")]
		[Address(RVA = "0xE21A7C", Offset = "0xE21A7C", VA = "0xE21A7C", Slot = "15")]
		public virtual void onselect(hand hand)
		{
		}

		[Token(Token = "0x6000E6B")]
		[Address(RVA = "0xE21A80", Offset = "0xE21A80", VA = "0xE21A80", Slot = "16")]
		public virtual void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6000E6C")]
		[Address(RVA = "0xE21A84", Offset = "0xE21A84", VA = "0xE21A84", Slot = "17")]
		public virtual void remove()
		{
		}

		[Token(Token = "0x6000E6D")]
		[Address(RVA = "0xE21A88", Offset = "0xE21A88", VA = "0xE21A88", Slot = "18")]
		public virtual void restore()
		{
		}

		[Token(Token = "0x6000E6E")]
		[Address(RVA = "0xE21A8C", Offset = "0xE21A8C", VA = "0xE21A8C", Slot = "19")]
		public virtual void update_owner()
		{
		}

		[Token(Token = "0x6000E6F")]
		[Address(RVA = "0xE21A90", Offset = "0xE21A90", VA = "0xE21A90", Slot = "20")]
		public virtual bool is_npc_target(Vector3 origin)
		{
			return default(bool);
		}

		[Token(Token = "0x6000E70")]
		[Address(RVA = "0xE21A98", Offset = "0xE21A98", VA = "0xE21A98", Slot = "21")]
		public virtual Vector3 npc_target_position(Vector3 origin, float speed = -1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000E71")]
		[Address(RVA = "0xE21AA0", Offset = "0xE21AA0", VA = "0xE21AA0")]
		public toolbase()
		{
		}
	}
	[Token(Token = "0x20001DC")]
	internal class tile
	{
		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform transform;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float distance;

		[Token(Token = "0x6000E72")]
		[Address(RVA = "0x100E46C", Offset = "0x100E46C", VA = "0x100E46C")]
		public tile(Transform transform, float distance)
		{
		}
	}
	[Token(Token = "0x20001DD")]
	public class tool_chess : tool
	{
		[Serializable]
		[Token(Token = "0x20004AE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849C04", Offset = "0x849C04")]
		private sealed class <>c
		{
			[Token(Token = "0x40022DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40022DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<tile> <>9__5_0;

			[Token(Token = "0x6001DD3")]
			[Address(RVA = "0x192A6C4", Offset = "0x192A6C4", VA = "0x192A6C4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001DD4")]
			[Address(RVA = "0x192A6CC", Offset = "0x192A6CC", VA = "0x192A6CC")]
			internal int <onunselect>b__5_0(tile t1, tile t2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20004AF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849C14", Offset = "0x849C14")]
		private sealed class <snap>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool_chess <>4__this;

			[Token(Token = "0x40022E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public tile tile;

			[Token(Token = "0x40022E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <frompos>5__2;

			[Token(Token = "0x40022E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Quaternion <fromrot>5__3;

			[Token(Token = "0x40022E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private Vector3 <topos>5__4;

			[Token(Token = "0x40022E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Quaternion <torot>5__5;

			[Token(Token = "0x40022E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private float <start>5__6;

			[Token(Token = "0x40022E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
			private float <end>5__7;

			[Token(Token = "0x170002DF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DD8")]
				[Address(RVA = "0x192AA1C", Offset = "0x192AA1C", VA = "0x192AA1C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DDA")]
				[Address(RVA = "0x192AA64", Offset = "0x192AA64", VA = "0x192AA64", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DD5")]
			[Address(RVA = "0x192A6F4", Offset = "0x192A6F4", VA = "0x192A6F4")]
			[DebuggerHidden]
			public <snap>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001DD6")]
			[Address(RVA = "0x192A720", Offset = "0x192A720", VA = "0x192A720", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DD7")]
			[Address(RVA = "0x192A724", Offset = "0x192A724", VA = "0x192A724", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DD9")]
			[Address(RVA = "0x192AA24", Offset = "0x192AA24", VA = "0x192AA24", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private float visible_last;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private Renderer rend;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public Transform[] grid;

		[Token(Token = "0x6000E73")]
		[Address(RVA = "0x1011028", Offset = "0x1011028", VA = "0x1011028", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000E74")]
		[Address(RVA = "0x1011094", Offset = "0x1011094", VA = "0x1011094", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000E75")]
		[Address(RVA = "0x1011240", Offset = "0x1011240", VA = "0x1011240", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6000E76")]
		[Address(RVA = "0x1011850", Offset = "0x1011850", VA = "0x1011850")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859430", Offset = "0x859430")]
		private IEnumerator snap(tile tile)
		{
			return null;
		}

		[Token(Token = "0x6000E77")]
		[Address(RVA = "0x10118E4", Offset = "0x10118E4", VA = "0x10118E4")]
		public tool_chess()
		{
		}
	}
	[Token(Token = "0x20001DE")]
	public class tool_firearm : tool
	{
		[Token(Token = "0x20004B0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849C24", Offset = "0x849C24")]
		private sealed class <spin>d__87 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool_firearm <>4__this;

			[Token(Token = "0x40022EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <from>5__2;

			[Token(Token = "0x40022ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <to>5__3;

			[Token(Token = "0x40022EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <t>5__4;

			[Token(Token = "0x40022EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <duration>5__5;

			[Token(Token = "0x40022F0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private bool <spin_again>5__6;

			[Token(Token = "0x170002E1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DDE")]
				[Address(RVA = "0x192AD80", Offset = "0x192AD80", VA = "0x192AD80", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE0")]
				[Address(RVA = "0x192ADC8", Offset = "0x192ADC8", VA = "0x192ADC8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DDB")]
			[Address(RVA = "0x192AA6C", Offset = "0x192AA6C", VA = "0x192AA6C")]
			[DebuggerHidden]
			public <spin>d__87(int <>1__state)
			{
			}

			[Token(Token = "0x6001DDC")]
			[Address(RVA = "0x192AA98", Offset = "0x192AA98", VA = "0x192AA98", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DDD")]
			[Address(RVA = "0x192AA9C", Offset = "0x192AA9C", VA = "0x192AA9C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DDF")]
			[Address(RVA = "0x192AD88", Offset = "0x192AD88", VA = "0x192AD88", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public string handpose_shoot;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public bool can_hit_player;

		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x181")]
		private bool destroying;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private float destroying_time;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool destroy_empty;

		[Token(Token = "0x4000F09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		public bool destroy_empty_with_holder;

		[Token(Token = "0x4000F0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public Transform wrap;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public int damage;

		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		public int player_damage;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public float impact_radius;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A4")]
		public float impact_force;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public int clip;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		public int ammo;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public bool first_reload;

		[Token(Token = "0x4000F12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B1")]
		public bool first_shoot;

		[Token(Token = "0x4000F13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public int bullets;

		[Token(Token = "0x4000F14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public float reload;

		[Token(Token = "0x4000F15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public bool automate;

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float shoots_margin;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public Text ui_clip;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public Text ui_total;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public GameObject muzzle_effect;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public float muzzle_effect_seconds;

		[Token(Token = "0x4000F1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		public float muzzle_effect_end;

		[Token(Token = "0x4000F1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public Transform muzzle;

		[Token(Token = "0x4000F1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public bool show_ray;

		[Token(Token = "0x4000F1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F1")]
		public bool show_ray_indication;

		[Token(Token = "0x4000F1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public LineRenderer ray_effect;

		[Token(Token = "0x4000F20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private bool hit;

		[Token(Token = "0x4000F21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private RaycastHit ray_hit;

		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private Rigidbody last_rb_hit;

		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		private float ray_distance;

		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public sound shoot_sound;

		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public sound reload_sound;

		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public sound empty_sound;

		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public Transform trigger_model;

		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private Vector3 trigger_model_from_pos;

		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x26C")]
		private Quaternion trigger_model_from_rot;

		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public Transform trigger_model_to;

		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public Transform reload_model;

		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private Vector3 reload_model_from_pos;

		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29C")]
		private Quaternion reload_model_from_rot;

		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public Transform reload_model_to;

		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public GameObject explode_effect;

		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public float noise_range;

		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public tool_firearm_event on_reload_button;

		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public tool_firearm_event on_shoot_button;

		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public tool_firearm_event on_reload;

		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public tool_firearm_event on_shoot;

		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public tool_firearm_event on_empty;

		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public tool_firearm_shoot_event on_shoot_visual;

		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public tool_firearm_explode_event on_explode_visual;

		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		private bool reloading;

		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x304")]
		private float reload_time;

		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		private float shoot_time;

		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		private Rigidbody hover_rb;

		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public toolbase second_hand;

		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public bool second_hand_rotate;

		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		private float second_hand_last;

		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		private float last_shoot_sound;

		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		private bool need_trig_clear;

		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		private int recoil_direction;

		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public float recoil_angle;

		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public float recoil_speed;

		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public float recoil_hand;

		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public bool shoot_spread;

		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		private List<Vector3> shoot_spread_directions;

		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		private float shoot_spread_angle;

		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		private float shoot_spread_radius;

		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		[HideInInspector]
		public bool spinning;

		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public Camera scope_camera;

		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public Renderer scope_rend;

		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private Material scope_mat;

		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private RenderTexture scope_tex;

		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x380")]
		[HideInInspector]
		public bool scope_show;

		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x381")]
		public bool show_total_ammo;

		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x384")]
		private float spinning_last;

		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x388")]
		private float recoil_last;

		[Token(Token = "0x6000E78")]
		[Address(RVA = "0x10130B0", Offset = "0x10130B0", VA = "0x10130B0", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000E79")]
		[Address(RVA = "0x1013708", Offset = "0x1013708", VA = "0x1013708", Slot = "6")]
		public override void Start()
		{
		}

		[Token(Token = "0x6000E7A")]
		[Address(RVA = "0x101386C", Offset = "0x101386C", VA = "0x101386C", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000E7B")]
		[Address(RVA = "0x10145BC", Offset = "0x10145BC", VA = "0x10145BC")]
		private void update_destroy()
		{
		}

		[Token(Token = "0x6000E7C")]
		[Address(RVA = "0x10144A0", Offset = "0x10144A0", VA = "0x10144A0")]
		private void update_scope()
		{
		}

		[Token(Token = "0x6000E7D")]
		[Address(RVA = "0x10146F8", Offset = "0x10146F8", VA = "0x10146F8", Slot = "8")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E7E")]
		[Address(RVA = "0x1014A74", Offset = "0x1014A74", VA = "0x1014A74", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x6000E7F")]
		[Address(RVA = "0x1014B38", Offset = "0x1014B38", VA = "0x1014B38")]
		public void recoil()
		{
		}

		[Token(Token = "0x6000E80")]
		[Address(RVA = "0x1014724", Offset = "0x1014724", VA = "0x1014724")]
		private void update_recoil()
		{
		}

		[Token(Token = "0x6000E81")]
		[Address(RVA = "0x1014B78", Offset = "0x1014B78", VA = "0x1014B78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859498", Offset = "0x859498")]
		private IEnumerator spin()
		{
			return null;
		}

		[Token(Token = "0x6000E82")]
		[Address(RVA = "0x1014934", Offset = "0x1014934", VA = "0x1014934")]
		private void FixSpinStuck()
		{
		}

		[Token(Token = "0x6000E83")]
		[Address(RVA = "0x1014BF8", Offset = "0x1014BF8", VA = "0x1014BF8", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x6000E84")]
		[Address(RVA = "0x1014DF4", Offset = "0x1014DF4", VA = "0x1014DF4", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6000E85")]
		[Address(RVA = "0x1014F10", Offset = "0x1014F10", VA = "0x1014F10", Slot = "9")]
		public override void LateUpdate()
		{
		}

		[Token(Token = "0x6000E86")]
		[Address(RVA = "0x101431C", Offset = "0x101431C", VA = "0x101431C")]
		private void update_muzzle()
		{
		}

		[Token(Token = "0x6000E87")]
		[Address(RVA = "0x10153B4", Offset = "0x10153B4", VA = "0x10153B4")]
		public void trigger_visual(bool state)
		{
		}

		[Token(Token = "0x6000E88")]
		[Address(RVA = "0x10155E8", Offset = "0x10155E8", VA = "0x10155E8", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x6000E89")]
		[Address(RVA = "0x1015F28", Offset = "0x1015F28", VA = "0x1015F28")]
		private bool hover()
		{
			return default(bool);
		}

		[Token(Token = "0x6000E8A")]
		[Address(RVA = "0x10138B0", Offset = "0x10138B0", VA = "0x10138B0")]
		private void update_ray()
		{
		}

		[Token(Token = "0x6000E8B")]
		[Address(RVA = "0x1016280", Offset = "0x1016280", VA = "0x1016280")]
		private void shoot_shotgun()
		{
		}

		[Token(Token = "0x6000E8C")]
		[Address(RVA = "0x1017294", Offset = "0x1017294", VA = "0x1017294")]
		private void shoot_normal()
		{
		}

		[Token(Token = "0x6000E8D")]
		[Address(RVA = "0x1017BBC", Offset = "0x1017BBC", VA = "0x1017BBC")]
		private void shoot_explode()
		{
		}

		[Token(Token = "0x6000E8E")]
		[Address(RVA = "0x10186DC", Offset = "0x10186DC", VA = "0x10186DC")]
		public void reloadzone()
		{
		}

		[Token(Token = "0x6000E8F")]
		[Address(RVA = "0x1013DF0", Offset = "0x1013DF0", VA = "0x1013DF0")]
		private void reload_progress()
		{
		}

		[Token(Token = "0x6000E90")]
		[Address(RVA = "0x1015E08", Offset = "0x1015E08", VA = "0x1015E08")]
		private void reload_button()
		{
		}

		[Token(Token = "0x6000E91")]
		[Address(RVA = "0x1018870", Offset = "0x1018870", VA = "0x1018870")]
		public void spin_start()
		{
		}

		[Token(Token = "0x6000E92")]
		[Address(RVA = "0x10186E0", Offset = "0x10186E0", VA = "0x10186E0")]
		private void reload_start()
		{
		}

		[Token(Token = "0x6000E93")]
		[Address(RVA = "0x10188D0", Offset = "0x10188D0", VA = "0x10188D0")]
		public void reload_now()
		{
		}

		[Token(Token = "0x6000E94")]
		[Address(RVA = "0x1018978", Offset = "0x1018978", VA = "0x1018978")]
		public void empty()
		{
		}

		[Token(Token = "0x6000E95")]
		[Address(RVA = "0x1018A2C", Offset = "0x1018A2C", VA = "0x1018A2C")]
		private void play_shoot_sound()
		{
		}

		[Token(Token = "0x6000E96")]
		[Address(RVA = "0x1015948", Offset = "0x1015948", VA = "0x1015948")]
		private void shoot()
		{
		}

		[Token(Token = "0x6000E97")]
		[Address(RVA = "0x1018B00", Offset = "0x1018B00", VA = "0x1018B00")]
		public void shoot_visual(Vector3 point, Vector3 normal, [Optional] Collider collider)
		{
		}

		[Token(Token = "0x6000E98")]
		[Address(RVA = "0x1018544", Offset = "0x1018544", VA = "0x1018544")]
		public void explode_visual(Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x6000E99")]
		[Address(RVA = "0x1018CB4", Offset = "0x1018CB4", VA = "0x1018CB4")]
		public void sync_shoot_button()
		{
		}

		[Token(Token = "0x6000E9A")]
		[Address(RVA = "0x1018CBC", Offset = "0x1018CBC", VA = "0x1018CBC")]
		public void sync_reload_button()
		{
		}

		[Token(Token = "0x6000E9B")]
		[Address(RVA = "0x1018CE0", Offset = "0x1018CE0", VA = "0x1018CE0")]
		public tool_firearm()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class tool_flashbang : tool
	{
		[Token(Token = "0x20004B1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849C34", Offset = "0x849C34")]
		private sealed class <explode>d__22 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022F1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022F2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022F3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool_flashbang <>4__this;

			[Token(Token = "0x40022F4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x40022F5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x40022F6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <white>5__4;

			[Token(Token = "0x40022F7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <vel>5__5;

			[Token(Token = "0x40022F8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__6;

			[Token(Token = "0x170002E3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DE4")]
				[Address(RVA = "0x192B3E0", Offset = "0x192B3E0", VA = "0x192B3E0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DE6")]
				[Address(RVA = "0x192B428", Offset = "0x192B428", VA = "0x192B428", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE1")]
			[Address(RVA = "0x192ADD0", Offset = "0x192ADD0", VA = "0x192ADD0")]
			[DebuggerHidden]
			public <explode>d__22(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE2")]
			[Address(RVA = "0x192ADFC", Offset = "0x192ADFC", VA = "0x192ADFC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DE3")]
			[Address(RVA = "0x192AE00", Offset = "0x192AE00", VA = "0x192AE00", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DE5")]
			[Address(RVA = "0x192B3E8", Offset = "0x192B3E8", VA = "0x192B3E8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool armed;

		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		private bool explolded;

		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public sound sound_arm;

		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public sound sound_explode;

		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Transform splint;

		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public tool_flashbang_event on_explode;

		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public tool_flashbang_event on_arm;

		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public GameObject model;

		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Collider main_col;

		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public float slowmotion_duration;

		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		public float slowmotion_to;

		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public float slowmotion_duration_in;

		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public float slowmotion_duration_out;

		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public toolbase second_hand;

		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private bool can_explode;

		[Token(Token = "0x6000E9C")]
		[Address(RVA = "0xE1EFA0", Offset = "0xE1EFA0", VA = "0xE1EFA0", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x6000E9D")]
		[Address(RVA = "0xE1F06C", Offset = "0xE1F06C", VA = "0xE1F06C")]
		public void arm()
		{
		}

		[Token(Token = "0x6000E9E")]
		[Address(RVA = "0xE1F1F4", Offset = "0xE1F1F4", VA = "0xE1F1F4")]
		public void arm_visual()
		{
		}

		[Token(Token = "0x6000E9F")]
		[Address(RVA = "0xE1F2B8", Offset = "0xE1F2B8", VA = "0xE1F2B8", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x6000EA0")]
		[Address(RVA = "0xE1F314", Offset = "0xE1F314", VA = "0xE1F314", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x6000EA1")]
		[Address(RVA = "0xE1F3E8", Offset = "0xE1F3E8", VA = "0xE1F3E8", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6000EA2")]
		[Address(RVA = "0xE1F56C", Offset = "0xE1F56C", VA = "0xE1F56C")]
		public void explode_visual()
		{
		}

		[Token(Token = "0x6000EA3")]
		[Address(RVA = "0xE1F59C", Offset = "0xE1F59C", VA = "0xE1F59C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859500", Offset = "0x859500")]
		private IEnumerator explode()
		{
			return null;
		}

		[Token(Token = "0x6000EA4")]
		[Address(RVA = "0xE1F61C", Offset = "0xE1F61C", VA = "0xE1F61C")]
		public tool_flashbang()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class tool_grenade : tool
	{
		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool armed;

		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x175")]
		private bool explolded;

		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private float last_collide;

		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private float explode_time;

		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public sound sound_arm;

		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public Transform splint;

		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public tool_grenade_event on_explode;

		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public tool_grenade_explode_event on_exploded;

		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public tool_grenade_event on_arm;

		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public GameObject[] explosion_effects;

		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Collider main_col;

		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public int damage;

		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1BC")]
		public int player_damage;

		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public float impact_radius;

		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C4")]
		private float player_impact_radius;

		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public float impact_force;

		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1CC")]
		private bool can_explode;

		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public toolbase second_hand;

		[Token(Token = "0x6000EA5")]
		[Address(RVA = "0xE1F684", Offset = "0xE1F684", VA = "0xE1F684", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x6000EA6")]
		[Address(RVA = "0xE1F750", Offset = "0xE1F750", VA = "0xE1F750")]
		public void arm()
		{
		}

		[Token(Token = "0x6000EA7")]
		[Address(RVA = "0xE1F8EC", Offset = "0xE1F8EC", VA = "0xE1F8EC")]
		public void arm_visual()
		{
		}

		[Token(Token = "0x6000EA8")]
		[Address(RVA = "0xE1F9AC", Offset = "0xE1F9AC", VA = "0xE1F9AC", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x6000EA9")]
		[Address(RVA = "0xE1FA08", Offset = "0xE1FA08", VA = "0xE1FA08", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x6000EAA")]
		[Address(RVA = "0xE1FADC", Offset = "0xE1FADC", VA = "0xE1FADC", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6000EAB")]
		[Address(RVA = "0xE1FBC8", Offset = "0xE1FBC8", VA = "0xE1FBC8")]
		public void explode_visual(Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x6000EAC")]
		[Address(RVA = "0xE1FEB0", Offset = "0xE1FEB0", VA = "0xE1FEB0")]
		private void explolde(Collision collision)
		{
		}

		[Token(Token = "0x6000EAD")]
		[Address(RVA = "0xE20650", Offset = "0xE20650", VA = "0xE20650", Slot = "8")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x6000EAE")]
		[Address(RVA = "0xE206A4", Offset = "0xE206A4", VA = "0xE206A4")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000EAF")]
		[Address(RVA = "0xE207F0", Offset = "0xE207F0", VA = "0xE207F0")]
		public tool_grenade()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class tool_laptop : tool
	{
		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public TextMeshProUGUI ui_name;

		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private string strvalue;

		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private int max_length;

		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public CanvasGroup[] keys_numbers;

		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public CanvasGroup[] keys_letters;

		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public CanvasGroup keys_space;

		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public CanvasGroup keys_backspace;

		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public CanvasGroup keys_submit;

		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public CanvasGroup keys_cancel;

		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		private float next_press;

		[Token(Token = "0x6000EB0")]
		[Address(RVA = "0xE208C0", Offset = "0xE208C0", VA = "0xE208C0", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000EB1")]
		[Address(RVA = "0xE209A4", Offset = "0xE209A4", VA = "0xE209A4")]
		private void update_text()
		{
		}

		[Token(Token = "0x6000EB2")]
		[Address(RVA = "0xE20CE0", Offset = "0xE20CE0", VA = "0xE20CE0")]
		private bool can_add_space()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB3")]
		[Address(RVA = "0xE20E14", Offset = "0xE20E14", VA = "0xE20E14")]
		private bool can_add_letter()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB4")]
		[Address(RVA = "0xE20D74", Offset = "0xE20D74", VA = "0xE20D74")]
		private bool can_add_number()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB5")]
		[Address(RVA = "0xE20CBC", Offset = "0xE20CBC", VA = "0xE20CBC")]
		private bool can_backspace()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB6")]
		[Address(RVA = "0xE20C70", Offset = "0xE20C70", VA = "0xE20C70")]
		private bool can_submit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EB7")]
		[Address(RVA = "0xE20E64", Offset = "0xE20E64", VA = "0xE20E64")]
		public void add_number(string str)
		{
		}

		[Token(Token = "0x6000EB8")]
		[Address(RVA = "0xE20EF4", Offset = "0xE20EF4", VA = "0xE20EF4")]
		public void add_letter(string str)
		{
		}

		[Token(Token = "0x6000EB9")]
		[Address(RVA = "0xE20F84", Offset = "0xE20F84", VA = "0xE20F84")]
		public void add_space()
		{
		}

		[Token(Token = "0x6000EBA")]
		[Address(RVA = "0xE21030", Offset = "0xE21030", VA = "0xE21030")]
		public void backspace()
		{
		}

		[Token(Token = "0x6000EBB")]
		[Address(RVA = "0xE210C8", Offset = "0xE210C8", VA = "0xE210C8")]
		public void submit()
		{
		}

		[Token(Token = "0x6000EBC")]
		[Address(RVA = "0xE211BC", Offset = "0xE211BC", VA = "0xE211BC")]
		private void hide()
		{
		}

		[Token(Token = "0x6000EBD")]
		[Address(RVA = "0xE211E4", Offset = "0xE211E4", VA = "0xE211E4")]
		public void cancel()
		{
		}

		[Token(Token = "0x6000EBE")]
		[Address(RVA = "0xE211E8", Offset = "0xE211E8", VA = "0xE211E8")]
		public tool_laptop()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public class tool_mdeikit : tool
	{
		[Token(Token = "0x20004B2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849C44", Offset = "0x849C44")]
		private sealed class <use_co>d__10 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40022F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40022FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40022FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public tool_mdeikit <>4__this;

			[Token(Token = "0x170002E5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DEA")]
				[Address(RVA = "0x192B664", Offset = "0x192B664", VA = "0x192B664", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DEC")]
				[Address(RVA = "0x192B6AC", Offset = "0x192B6AC", VA = "0x192B6AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DE7")]
			[Address(RVA = "0x192B430", Offset = "0x192B430", VA = "0x192B430")]
			[DebuggerHidden]
			public <use_co>d__10(int <>1__state)
			{
			}

			[Token(Token = "0x6001DE8")]
			[Address(RVA = "0x192B45C", Offset = "0x192B45C", VA = "0x192B45C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DE9")]
			[Address(RVA = "0x192B460", Offset = "0x192B460", VA = "0x192B460", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DEB")]
			[Address(RVA = "0x192B66C", Offset = "0x192B66C", VA = "0x192B66C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private bool used;

		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public sound sound_used;

		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public GameObject effect;

		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public MeshRenderer rend;

		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public int health;

		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public tool_medikit_event on_explode;

		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public toolbase second_hand;

		[Token(Token = "0x6000EBF")]
		[Address(RVA = "0xE21254", Offset = "0xE21254", VA = "0xE21254", Slot = "5")]
		public override void init()
		{
		}

		[Token(Token = "0x6000EC0")]
		[Address(RVA = "0xE21320", Offset = "0xE21320", VA = "0xE21320")]
		public void use()
		{
		}

		[Token(Token = "0x6000EC1")]
		[Address(RVA = "0xE214DC", Offset = "0xE214DC", VA = "0xE214DC")]
		public void use_visual()
		{
		}

		[Token(Token = "0x6000EC2")]
		[Address(RVA = "0xE21514", Offset = "0xE21514", VA = "0xE21514")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859568", Offset = "0x859568")]
		private IEnumerator use_co()
		{
			return null;
		}

		[Token(Token = "0x6000EC3")]
		[Address(RVA = "0xE21594", Offset = "0xE21594", VA = "0xE21594", Slot = "13")]
		public override void update_hand(hand hand, bool late = false)
		{
		}

		[Token(Token = "0x6000EC4")]
		[Address(RVA = "0xE215F0", Offset = "0xE215F0", VA = "0xE215F0", Slot = "15")]
		public override void onselect(hand hand)
		{
		}

		[Token(Token = "0x6000EC5")]
		[Address(RVA = "0xE216C4", Offset = "0xE216C4", VA = "0xE216C4", Slot = "16")]
		public override void onunselect(hand hand)
		{
		}

		[Token(Token = "0x6000EC6")]
		[Address(RVA = "0xE21798", Offset = "0xE21798", VA = "0xE21798")]
		public tool_mdeikit()
		{
		}
	}
	[Token(Token = "0x20001E3")]
	public class tool_shield : tool
	{
		[Token(Token = "0x4000F84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public GameObject stats;

		[Token(Token = "0x4000F85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private bool stats_update;

		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public TextMeshProUGUI health;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public TextMeshProUGUI progress;

		[Token(Token = "0x4000F88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public TextMeshProUGUI accuracy;

		[Token(Token = "0x6000EC7")]
		[Address(RVA = "0xE217FC", Offset = "0xE217FC", VA = "0xE217FC", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x6000EC8")]
		[Address(RVA = "0xE218BC", Offset = "0xE218BC", VA = "0xE218BC", Slot = "7")]
		public override void Update()
		{
		}

		[Token(Token = "0x6000EC9")]
		[Address(RVA = "0xE21890", Offset = "0xE21890", VA = "0xE21890")]
		public void hide_stats()
		{
		}

		[Token(Token = "0x6000ECA")]
		[Address(RVA = "0xE21A30", Offset = "0xE21A30", VA = "0xE21A30")]
		public tool_shield()
		{
		}
	}
	[Token(Token = "0x20001E4")]
	public class vr
	{
		[Token(Token = "0x20004B3")]
		public enum sdks
		{
			[Token(Token = "0x40022FD")]
			none,
			[Token(Token = "0x40022FE")]
			piconeo,
			[Token(Token = "0x40022FF")]
			qiyi,
			[Token(Token = "0x4002300")]
			nolo,
			[Token(Token = "0x4002301")]
			oculus,
			[Token(Token = "0x4002302")]
			openxr
		}

		[Token(Token = "0x20004B4")]
		public enum controllers
		{
			[Token(Token = "0x4002304")]
			none,
			[Token(Token = "0x4002305")]
			oculus,
			[Token(Token = "0x4002306")]
			vive,
			[Token(Token = "0x4002307")]
			wmr,
			[Token(Token = "0x4002308")]
			cosmos,
			[Token(Token = "0x4002309")]
			index
		}

		[Token(Token = "0x4000F89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static sdks sdk;

		[Token(Token = "0x4000F8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static controllers openxr_controller;

		[Token(Token = "0x4000F8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool present;

		[Token(Token = "0x4000F8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static int present_frame;

		[Token(Token = "0x4000F8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static bool msaa_fixed;

		[Token(Token = "0x4000F8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static int msaa_fix_frame;

		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static bool focus;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public static bool manual_velocity;

		[Token(Token = "0x4000F91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public static bool ready;

		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static InputDevice head;

		[Token(Token = "0x4000F93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static InputDevice hand_right;

		[Token(Token = "0x4000F94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static InputDevice hand_left;

		[Token(Token = "0x4000F95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public static float position_diff;

		[Token(Token = "0x4000F96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public static Vector3 position_prev;

		[Token(Token = "0x4000F97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public static Vector3 position;

		[Token(Token = "0x4000F98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public static Quaternion rotation;

		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public static vr_hand right;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public static vr_hand left;

		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public static Vector3 right_prev_pos;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public static Vector3 left_prev_pos;

		[Token(Token = "0x4000F9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public static float right_last_pos;

		[Token(Token = "0x4000F9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public static float left_last_pos;

		[Token(Token = "0x4000F9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public static Vector3 right_pos;

		[Token(Token = "0x4000FA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public static Quaternion right_rot;

		[Token(Token = "0x4000FA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public static Vector3 left_pos;

		[Token(Token = "0x4000FA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public static Quaternion left_rot;

		[Token(Token = "0x4000FA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public static Vector3 right_velocity;

		[Token(Token = "0x4000FA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public static Vector3 right_angular;

		[Token(Token = "0x4000FA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public static Vector3 left_velocity;

		[Token(Token = "0x4000FA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public static Vector3 left_angular;

		[Token(Token = "0x4000FA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public static Vector2 right_stick_axis;

		[Token(Token = "0x4000FA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public static Vector2 left_stick_axis;

		[Token(Token = "0x4000FA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public static bool home;

		[Token(Token = "0x4000FAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public static bool home_press;

		[Token(Token = "0x4000FAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		public static bool home_release;

		[Token(Token = "0x4000FAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12B")]
		public static bool home_long;

		[Token(Token = "0x4000FAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12C")]
		public static float home_start;

		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public static bool menu;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x131")]
		public static bool menu_press;

		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x132")]
		public static bool menu_release;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x133")]
		public static bool right_trig;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		public static bool right_trig_press;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x135")]
		public static bool right_trig_release;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x136")]
		public static bool left_trig;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x137")]
		public static bool left_trig_press;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public static bool left_trig_release;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public static bool right_grip;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		public static bool right_grip_press;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		public static bool right_grip_release;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public static bool left_grip;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		public static bool left_grip_press;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13E")]
		public static bool left_grip_release;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13F")]
		public static bool left_stick;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public static bool left_stick_press;

		[Token(Token = "0x4000FBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x141")]
		public static bool left_stick_release;

		[Token(Token = "0x4000FC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x142")]
		public static bool right_stick;

		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x143")]
		public static bool right_stick_press;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public static bool right_stick_release;

		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x145")]
		public static bool a;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x146")]
		public static bool a_press;

		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x147")]
		public static bool a_release;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public static bool b;

		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x149")]
		public static bool b_press;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14A")]
		public static bool b_release;

		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14B")]
		public static bool x;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public static bool x_press;

		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14D")]
		public static bool x_release;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14E")]
		public static bool y;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14F")]
		public static bool y_press;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public static bool y_release;

		[Token(Token = "0x4000FCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x151")]
		public static bool wear;

		[Token(Token = "0x4000FD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x152")]
		public static bool wear_put_on;

		[Token(Token = "0x4000FD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x153")]
		public static bool wear_take_off;

		[Token(Token = "0x4000FD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public static bool recentered;

		[Token(Token = "0x4000FD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public static float last_recentered;

		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public static float org_fixedDeltaTime;

		[Token(Token = "0x4000FD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public static float fixedDeltaTime;

		[Token(Token = "0x4000FD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public static string model;

		[Token(Token = "0x4000FD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public static int platform_fps;

		[Token(Token = "0x4000FD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public static int controller_rotation_base;

		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public static int controller_rotation_offset;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private static bool steam_input_activated;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17D")]
		private static bool set_max_fps;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private static TextMeshProUGUI ui_debug;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private static List<string> ui_debug_lines;

		[Token(Token = "0x6000ECB")]
		[Address(RVA = "0xE358B4", Offset = "0xE358B4", VA = "0xE358B4")]
		public static void console([Optional] string str)
		{
		}

		[Token(Token = "0x6000ECC")]
		[Address(RVA = "0xE35B38", Offset = "0xE35B38", VA = "0xE35B38")]
		public static bool init()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ECD")]
		[Address(RVA = "0xE372DC", Offset = "0xE372DC", VA = "0xE372DC")]
		public static controllers get_openxr_controller()
		{
			return default(controllers);
		}

		[Token(Token = "0x6000ECE")]
		[Address(RVA = "0xE37D58", Offset = "0xE37D58", VA = "0xE37D58")]
		public static float get_device_target_fps()
		{
			return default(float);
		}

		[Token(Token = "0x6000ECF")]
		[Address(RVA = "0xE37D60", Offset = "0xE37D60", VA = "0xE37D60")]
		public static TrackingOriginModeFlags GetTrackingOriginMode()
		{
			return default(TrackingOriginModeFlags);
		}

		[Token(Token = "0x6000ED0")]
		[Address(RVA = "0xE36D00", Offset = "0xE36D00", VA = "0xE36D00")]
		private static void update_devices()
		{
		}

		[Token(Token = "0x6000ED1")]
		[Address(RVA = "0xE37E0C", Offset = "0xE37E0C", VA = "0xE37E0C")]
		public static bool start()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED2")]
		[Address(RVA = "0xE37F54", Offset = "0xE37F54", VA = "0xE37F54")]
		public static void set_fps(bool max)
		{
		}

		[Token(Token = "0x6000ED3")]
		[Address(RVA = "0xE379D8", Offset = "0xE379D8", VA = "0xE379D8")]
		public static void update_fps()
		{
		}

		[Token(Token = "0x6000ED4")]
		[Address(RVA = "0xE37FC8", Offset = "0xE37FC8", VA = "0xE37FC8")]
		public static bool update()
		{
			return default(bool);
		}

		[Token(Token = "0x6000ED5")]
		[Address(RVA = "0xE38818", Offset = "0xE38818", VA = "0xE38818")]
		public static void update_xr()
		{
		}

		[Token(Token = "0x6000ED6")]
		[Address(RVA = "0xE3933C", Offset = "0xE3933C", VA = "0xE3933C")]
		public static void update_openxr()
		{
		}

		[Token(Token = "0x6000ED7")]
		[Address(RVA = "0xE39E64", Offset = "0xE39E64", VA = "0xE39E64")]
		public static void update_openxr_vive()
		{
		}

		[Token(Token = "0x6000ED8")]
		[Address(RVA = "0xE3A8C4", Offset = "0xE3A8C4", VA = "0xE3A8C4")]
		public static void update_openxr_wmr()
		{
		}

		[Token(Token = "0x6000ED9")]
		[Address(RVA = "0xE38688", Offset = "0xE38688", VA = "0xE38688")]
		private static bool recenter_detected()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDA")]
		[Address(RVA = "0xE3B344", Offset = "0xE3B344", VA = "0xE3B344")]
		public static bool recenter()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDB")]
		[Address(RVA = "0xE3B41C", Offset = "0xE3B41C", VA = "0xE3B41C")]
		public static bool anykeypress()
		{
			return default(bool);
		}

		[Token(Token = "0x6000EDC")]
		[Address(RVA = "0xE3B5CC", Offset = "0xE3B5CC", VA = "0xE3B5CC")]
		public static string info()
		{
			return null;
		}

		[Token(Token = "0x6000EDD")]
		[Address(RVA = "0xE3B610", Offset = "0xE3B610", VA = "0xE3B610")]
		public static void alpha(float t)
		{
		}

		[Token(Token = "0x6000EDE")]
		[Address(RVA = "0xE3B618", Offset = "0xE3B618", VA = "0xE3B618")]
		public static void vibrate(bool left, float duration = 1f, float amplitude = 0.5f, uint channel = 0u)
		{
		}

		[Token(Token = "0x6000EDF")]
		[Address(RVA = "0xE3B340", Offset = "0xE3B340", VA = "0xE3B340")]
		private static void update_home_long()
		{
		}

		[Token(Token = "0x6000EE0")]
		[Address(RVA = "0xE3B6D0", Offset = "0xE3B6D0", VA = "0xE3B6D0")]
		public vr()
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class vr_hand
	{
		[Token(Token = "0x170000DC")]
		public virtual Vector3 pos
		{
			[Token(Token = "0x6000EE2")]
			[Address(RVA = "0x19A882C", Offset = "0x19A882C", VA = "0x19A882C", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000DD")]
		public virtual Quaternion rot
		{
			[Token(Token = "0x6000EE3")]
			[Address(RVA = "0x19A8834", Offset = "0x19A8834", VA = "0x19A8834", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170000DE")]
		public virtual Vector3 velocity
		{
			[Token(Token = "0x6000EE4")]
			[Address(RVA = "0x19A883C", Offset = "0x19A883C", VA = "0x19A883C", Slot = "6")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000DF")]
		public virtual Vector3 angular
		{
			[Token(Token = "0x6000EE5")]
			[Address(RVA = "0x19A8844", Offset = "0x19A8844", VA = "0x19A8844", Slot = "7")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000E0")]
		public virtual bool trig
		{
			[Token(Token = "0x6000EE6")]
			[Address(RVA = "0x19A884C", Offset = "0x19A884C", VA = "0x19A884C", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E1")]
		public virtual bool trig_press
		{
			[Token(Token = "0x6000EE7")]
			[Address(RVA = "0x19A8854", Offset = "0x19A8854", VA = "0x19A8854", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E2")]
		public virtual bool trig_release
		{
			[Token(Token = "0x6000EE8")]
			[Address(RVA = "0x19A885C", Offset = "0x19A885C", VA = "0x19A885C", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E3")]
		public virtual bool grip
		{
			[Token(Token = "0x6000EE9")]
			[Address(RVA = "0x19A8864", Offset = "0x19A8864", VA = "0x19A8864", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E4")]
		public virtual bool grip_press
		{
			[Token(Token = "0x6000EEA")]
			[Address(RVA = "0x19A886C", Offset = "0x19A886C", VA = "0x19A886C", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E5")]
		public virtual bool grip_release
		{
			[Token(Token = "0x6000EEB")]
			[Address(RVA = "0x19A8874", Offset = "0x19A8874", VA = "0x19A8874", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000E6")]
		public virtual Vector2 stick_axis
		{
			[Token(Token = "0x6000EEC")]
			[Address(RVA = "0x19A887C", Offset = "0x19A887C", VA = "0x19A887C", Slot = "14")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6000EED")]
		[Address(RVA = "0x19A8884", Offset = "0x19A8884", VA = "0x19A8884", Slot = "15")]
		public virtual void vibrate(float duration = 1f, float amplitude = 0.5f, uint channel = 0u)
		{
		}

		[Token(Token = "0x6000EEE")]
		[Address(RVA = "0x19A8888", Offset = "0x19A8888", VA = "0x19A8888")]
		public vr_hand()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class vr_hand_right : vr_hand
	{
		[Token(Token = "0x170000E7")]
		public override Vector3 pos
		{
			[Token(Token = "0x6000EEF")]
			[Address(RVA = "0x19A8D88", Offset = "0x19A8D88", VA = "0x19A8D88", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000E8")]
		public override Quaternion rot
		{
			[Token(Token = "0x6000EF0")]
			[Address(RVA = "0x19A8DF0", Offset = "0x19A8DF0", VA = "0x19A8DF0", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170000E9")]
		public override Vector3 velocity
		{
			[Token(Token = "0x6000EF1")]
			[Address(RVA = "0x19A8E58", Offset = "0x19A8E58", VA = "0x19A8E58", Slot = "6")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000EA")]
		public override Vector3 angular
		{
			[Token(Token = "0x6000EF2")]
			[Address(RVA = "0x19A8EC0", Offset = "0x19A8EC0", VA = "0x19A8EC0", Slot = "7")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000EB")]
		public override bool trig
		{
			[Token(Token = "0x6000EF3")]
			[Address(RVA = "0x19A8F28", Offset = "0x19A8F28", VA = "0x19A8F28", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EC")]
		public override bool trig_press
		{
			[Token(Token = "0x6000EF4")]
			[Address(RVA = "0x19A8F8C", Offset = "0x19A8F8C", VA = "0x19A8F8C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000ED")]
		public override bool trig_release
		{
			[Token(Token = "0x6000EF5")]
			[Address(RVA = "0x19A8FF0", Offset = "0x19A8FF0", VA = "0x19A8FF0", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EE")]
		public override bool grip
		{
			[Token(Token = "0x6000EF6")]
			[Address(RVA = "0x19A9054", Offset = "0x19A9054", VA = "0x19A9054", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EF")]
		public override bool grip_press
		{
			[Token(Token = "0x6000EF7")]
			[Address(RVA = "0x19A90B8", Offset = "0x19A90B8", VA = "0x19A90B8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F0")]
		public override bool grip_release
		{
			[Token(Token = "0x6000EF8")]
			[Address(RVA = "0x19A911C", Offset = "0x19A911C", VA = "0x19A911C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F1")]
		public override Vector2 stick_axis
		{
			[Token(Token = "0x6000EF9")]
			[Address(RVA = "0x19A9180", Offset = "0x19A9180", VA = "0x19A9180", Slot = "14")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6000EFA")]
		[Address(RVA = "0x19A91E8", Offset = "0x19A91E8", VA = "0x19A91E8", Slot = "15")]
		public override void vibrate(float duration = 1f, float amplitude = 0.5f, uint channel = 0u)
		{
		}

		[Token(Token = "0x6000EFB")]
		[Address(RVA = "0x19A9270", Offset = "0x19A9270", VA = "0x19A9270")]
		public vr_hand_right()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class vr_hand_left : vr_hand
	{
		[Token(Token = "0x170000F2")]
		public override Vector3 pos
		{
			[Token(Token = "0x6000EFC")]
			[Address(RVA = "0x19A8890", Offset = "0x19A8890", VA = "0x19A8890", Slot = "4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000F3")]
		public override Quaternion rot
		{
			[Token(Token = "0x6000EFD")]
			[Address(RVA = "0x19A88F8", Offset = "0x19A88F8", VA = "0x19A88F8", Slot = "5")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x170000F4")]
		public override Vector3 velocity
		{
			[Token(Token = "0x6000EFE")]
			[Address(RVA = "0x19A8960", Offset = "0x19A8960", VA = "0x19A8960", Slot = "6")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000F5")]
		public override Vector3 angular
		{
			[Token(Token = "0x6000EFF")]
			[Address(RVA = "0x19A89CC", Offset = "0x19A89CC", VA = "0x19A89CC", Slot = "7")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170000F6")]
		public override bool trig
		{
			[Token(Token = "0x6000F00")]
			[Address(RVA = "0x19A8A38", Offset = "0x19A8A38", VA = "0x19A8A38", Slot = "8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F7")]
		public override bool trig_press
		{
			[Token(Token = "0x6000F01")]
			[Address(RVA = "0x19A8A9C", Offset = "0x19A8A9C", VA = "0x19A8A9C", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F8")]
		public override bool trig_release
		{
			[Token(Token = "0x6000F02")]
			[Address(RVA = "0x19A8B00", Offset = "0x19A8B00", VA = "0x19A8B00", Slot = "10")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000F9")]
		public override bool grip
		{
			[Token(Token = "0x6000F03")]
			[Address(RVA = "0x19A8B64", Offset = "0x19A8B64", VA = "0x19A8B64", Slot = "11")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FA")]
		public override bool grip_press
		{
			[Token(Token = "0x6000F04")]
			[Address(RVA = "0x19A8BC8", Offset = "0x19A8BC8", VA = "0x19A8BC8", Slot = "12")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FB")]
		public override bool grip_release
		{
			[Token(Token = "0x6000F05")]
			[Address(RVA = "0x19A8C2C", Offset = "0x19A8C2C", VA = "0x19A8C2C", Slot = "13")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000FC")]
		public override Vector2 stick_axis
		{
			[Token(Token = "0x6000F06")]
			[Address(RVA = "0x19A8C90", Offset = "0x19A8C90", VA = "0x19A8C90", Slot = "14")]
			get
			{
				return default(Vector2);
			}
		}

		[Token(Token = "0x6000F07")]
		[Address(RVA = "0x19A8CF8", Offset = "0x19A8CF8", VA = "0x19A8CF8", Slot = "15")]
		public override void vibrate(float duration = 1f, float amplitude = 0.5f, uint channel = 0u)
		{
		}

		[Token(Token = "0x6000F08")]
		[Address(RVA = "0x19A8D80", Offset = "0x19A8D80", VA = "0x19A8D80")]
		public vr_hand_left()
		{
		}
	}
	[Token(Token = "0x20001E8")]
	public class release_test : MonoBehaviour
	{
		[Token(Token = "0x20004B5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849C54", Offset = "0x849C54")]
		private sealed class <quotes_co>d__12 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400230A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400230B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400230C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400230D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public release_test <>4__this;

			[Token(Token = "0x400230E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <pass>5__2;

			[Token(Token = "0x400230F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <duration>5__3;

			[Token(Token = "0x4002310")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private bool <sidequest>5__4;

			[Token(Token = "0x4002311")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CanvasGroup[] <>7__wrap4;

			[Token(Token = "0x4002312")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <>7__wrap5;

			[Token(Token = "0x4002313")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CanvasGroup <go>5__7;

			[Token(Token = "0x170002E7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF0")]
				[Address(RVA = "0xD2FD2C", Offset = "0xD2FD2C", VA = "0xD2FD2C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002E8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF2")]
				[Address(RVA = "0xD2FD74", Offset = "0xD2FD74", VA = "0xD2FD74", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DED")]
			[Address(RVA = "0xD2F8B4", Offset = "0xD2F8B4", VA = "0xD2F8B4")]
			[DebuggerHidden]
			public <quotes_co>d__12(int <>1__state)
			{
			}

			[Token(Token = "0x6001DEE")]
			[Address(RVA = "0xD2F8E0", Offset = "0xD2F8E0", VA = "0xD2F8E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DEF")]
			[Address(RVA = "0xD2F8E4", Offset = "0xD2F8E4", VA = "0xD2F8E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF1")]
			[Address(RVA = "0xD2FD34", Offset = "0xD2FD34", VA = "0xD2FD34", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004B6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849C64", Offset = "0x849C64")]
		private sealed class <npc_joe>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002314")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002315")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002316")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002317")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public npc npc;

			[Token(Token = "0x170002E9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DF6")]
				[Address(RVA = "0xD2F334", Offset = "0xD2F334", VA = "0xD2F334", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DF8")]
				[Address(RVA = "0xD2F37C", Offset = "0xD2F37C", VA = "0xD2F37C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF3")]
			[Address(RVA = "0xD2F240", Offset = "0xD2F240", VA = "0xD2F240")]
			[DebuggerHidden]
			public <npc_joe>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001DF4")]
			[Address(RVA = "0xD2F26C", Offset = "0xD2F26C", VA = "0xD2F26C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DF5")]
			[Address(RVA = "0xD2F270", Offset = "0xD2F270", VA = "0xD2F270", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DF7")]
			[Address(RVA = "0xD2F33C", Offset = "0xD2F33C", VA = "0xD2F33C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004B7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849C74", Offset = "0x849C74")]
		private sealed class <npc_run>d__14 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002318")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002319")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400231A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400231B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public npc npc;

			[Token(Token = "0x170002EB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001DFC")]
				[Address(RVA = "0xD2F864", Offset = "0xD2F864", VA = "0xD2F864", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001DFE")]
				[Address(RVA = "0xD2F8AC", Offset = "0xD2F8AC", VA = "0xD2F8AC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DF9")]
			[Address(RVA = "0xD2F648", Offset = "0xD2F648", VA = "0xD2F648")]
			[DebuggerHidden]
			public <npc_run>d__14(int <>1__state)
			{
			}

			[Token(Token = "0x6001DFA")]
			[Address(RVA = "0xD2F674", Offset = "0xD2F674", VA = "0xD2F674", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001DFB")]
			[Address(RVA = "0xD2F678", Offset = "0xD2F678", VA = "0xD2F678", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001DFD")]
			[Address(RVA = "0xD2F86C", Offset = "0xD2F86C", VA = "0xD2F86C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004B8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849C84", Offset = "0x849C84")]
		private sealed class <npc_land>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400231C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400231D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400231E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400231F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public npc npc;

			[Token(Token = "0x4002320")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <duration>5__2;

			[Token(Token = "0x4002321")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <pass>5__3;

			[Token(Token = "0x4002322")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3 <from>5__4;

			[Token(Token = "0x4002323")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private Vector3 <to>5__5;

			[Token(Token = "0x170002ED")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E02")]
				[Address(RVA = "0xD2F5F8", Offset = "0xD2F5F8", VA = "0xD2F5F8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002EE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E04")]
				[Address(RVA = "0xD2F640", Offset = "0xD2F640", VA = "0xD2F640", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001DFF")]
			[Address(RVA = "0xD2F384", Offset = "0xD2F384", VA = "0xD2F384")]
			[DebuggerHidden]
			public <npc_land>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001E00")]
			[Address(RVA = "0xD2F3B0", Offset = "0xD2F3B0", VA = "0xD2F3B0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E01")]
			[Address(RVA = "0xD2F3B4", Offset = "0xD2F3B4", VA = "0xD2F3B4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E03")]
			[Address(RVA = "0xD2F600", Offset = "0xD2F600", VA = "0xD2F600", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004B9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849C94", Offset = "0x849C94")]
		private sealed class <move_camera>d__16 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002324")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002325")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002326")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public release_test <>4__this;

			[Token(Token = "0x4002327")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <duration>5__2;

			[Token(Token = "0x4002328")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <pass>5__3;

			[Token(Token = "0x4002329")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3 <from>5__4;

			[Token(Token = "0x400232A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private Vector3 <to>5__5;

			[Token(Token = "0x170002EF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E08")]
				[Address(RVA = "0xD2F1F0", Offset = "0xD2F1F0", VA = "0xD2F1F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F0")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E0A")]
				[Address(RVA = "0xD2F238", Offset = "0xD2F238", VA = "0xD2F238", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E05")]
			[Address(RVA = "0xD2F08C", Offset = "0xD2F08C", VA = "0xD2F08C")]
			[DebuggerHidden]
			public <move_camera>d__16(int <>1__state)
			{
			}

			[Token(Token = "0x6001E06")]
			[Address(RVA = "0xD2F0B8", Offset = "0xD2F0B8", VA = "0xD2F0B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E07")]
			[Address(RVA = "0xD2F0BC", Offset = "0xD2F0BC", VA = "0xD2F0BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E09")]
			[Address(RVA = "0xD2F1F8", Offset = "0xD2F1F8", VA = "0xD2F1F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform cam;

		[Token(Token = "0x4000FDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<npc> all;

		[Token(Token = "0x4000FE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public npc joe;

		[Token(Token = "0x4000FE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public npc[] npc1;

		[Token(Token = "0x4000FE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public npc[] npc2;

		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public npc[] npc3;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public CanvasGroup[] quotes;

		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public CanvasGroup logo;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CanvasGroup sale;

		[Token(Token = "0x6000F09")]
		[Address(RVA = "0xFFE348", Offset = "0xFFE348", VA = "0xFFE348")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F0A")]
		[Address(RVA = "0xFFE67C", Offset = "0xFFE67C", VA = "0xFFE67C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F0B")]
		[Address(RVA = "0xFFE6B8", Offset = "0xFFE6B8", VA = "0xFFE6B8")]
		private void run()
		{
		}

		[Token(Token = "0x6000F0C")]
		[Address(RVA = "0xFFE9C8", Offset = "0xFFE9C8", VA = "0xFFE9C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8595D0", Offset = "0x8595D0")]
		private IEnumerator quotes_co(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000F0D")]
		[Address(RVA = "0xFFEAE8", Offset = "0xFFEAE8", VA = "0xFFEAE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859638", Offset = "0x859638")]
		private IEnumerator npc_joe(npc npc, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000F0E")]
		[Address(RVA = "0xFFEB78", Offset = "0xFFEB78", VA = "0xFFEB78")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8596A0", Offset = "0x8596A0")]
		private IEnumerator npc_run(npc npc, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000F0F")]
		[Address(RVA = "0xFFEA58", Offset = "0xFFEA58", VA = "0xFFEA58")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859708", Offset = "0x859708")]
		private IEnumerator npc_land(npc npc, float delay)
		{
			return null;
		}

		[Token(Token = "0x6000F10")]
		[Address(RVA = "0xFFE948", Offset = "0xFFE948", VA = "0xFFE948")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859770", Offset = "0x859770")]
		private IEnumerator move_camera()
		{
			return null;
		}

		[Token(Token = "0x6000F11")]
		[Address(RVA = "0xFFEC08", Offset = "0xFFEC08", VA = "0xFFEC08")]
		public release_test()
		{
		}
	}
	[Token(Token = "0x20001E9")]
	public class trailer_test : MonoBehaviour
	{
		[Token(Token = "0x20004BA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849CA4", Offset = "0x849CA4")]
		private sealed class <move>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400232B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400232C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400232D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public trailer_test <>4__this;

			[Token(Token = "0x400232E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <from>5__2;

			[Token(Token = "0x400232F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <dur>5__3;

			[Token(Token = "0x4002330")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <pass>5__4;

			[Token(Token = "0x170002F1")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E0E")]
				[Address(RVA = "0x192B878", Offset = "0x192B878", VA = "0x192B878", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F2")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E10")]
				[Address(RVA = "0x192B8C0", Offset = "0x192B8C0", VA = "0x192B8C0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E0B")]
			[Address(RVA = "0x192B6B4", Offset = "0x192B6B4", VA = "0x192B6B4")]
			[DebuggerHidden]
			public <move>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x6001E0C")]
			[Address(RVA = "0x192B6E0", Offset = "0x192B6E0", VA = "0x192B6E0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E0D")]
			[Address(RVA = "0x192B6E4", Offset = "0x192B6E4", VA = "0x192B6E4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E0F")]
			[Address(RVA = "0x192B880", Offset = "0x192B880", VA = "0x192B880", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject team1;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject team2;

		[Token(Token = "0x4000FE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform cam;

		[Token(Token = "0x4000FEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform to;

		[Token(Token = "0x6000F12")]
		[Address(RVA = "0xE21AC8", Offset = "0xE21AC8", VA = "0xE21AC8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F13")]
		[Address(RVA = "0xE21B0C", Offset = "0xE21B0C", VA = "0xE21B0C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F14")]
		[Address(RVA = "0xE21B94", Offset = "0xE21B94", VA = "0xE21B94")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8597D8", Offset = "0x8597D8")]
		private IEnumerator move()
		{
			return null;
		}

		[Token(Token = "0x6000F15")]
		[Address(RVA = "0xE21C14", Offset = "0xE21C14", VA = "0xE21C14")]
		public trailer_test()
		{
		}
	}
	[Token(Token = "0x20001EA")]
	public class map1 : mpLevel
	{
		[Token(Token = "0x20004BB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849CB4", Offset = "0x849CB4")]
		private sealed class <Reconnect>d__111 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002331")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002332")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002333")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public map1 <>4__this;

			[Token(Token = "0x170002F3")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E14")]
				[Address(RVA = "0xD2B7C8", Offset = "0xD2B7C8", VA = "0xD2B7C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F4")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E16")]
				[Address(RVA = "0xD2B810", Offset = "0xD2B810", VA = "0xD2B810", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E11")]
			[Address(RVA = "0xD2B500", Offset = "0xD2B500", VA = "0xD2B500")]
			[DebuggerHidden]
			public <Reconnect>d__111(int <>1__state)
			{
			}

			[Token(Token = "0x6001E12")]
			[Address(RVA = "0xD2B52C", Offset = "0xD2B52C", VA = "0xD2B52C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E13")]
			[Address(RVA = "0xD2B530", Offset = "0xD2B530", VA = "0xD2B530", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E15")]
			[Address(RVA = "0xD2B7D0", Offset = "0xD2B7D0", VA = "0xD2B7D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849CC4", Offset = "0x849CC4")]
		private sealed class <local_player_killed>d__164 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002334")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002335")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002336")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x4002337")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public map1 <>4__this;

			[Token(Token = "0x170002F5")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E1A")]
				[Address(RVA = "0xD2BAEC", Offset = "0xD2BAEC", VA = "0xD2BAEC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F6")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E1C")]
				[Address(RVA = "0xD2BB34", Offset = "0xD2BB34", VA = "0xD2BB34", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E17")]
			[Address(RVA = "0xD2B818", Offset = "0xD2B818", VA = "0xD2B818")]
			[DebuggerHidden]
			public <local_player_killed>d__164(int <>1__state)
			{
			}

			[Token(Token = "0x6001E18")]
			[Address(RVA = "0xD2B844", Offset = "0xD2B844", VA = "0xD2B844", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E19")]
			[Address(RVA = "0xD2B848", Offset = "0xD2B848", VA = "0xD2B848", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E1B")]
			[Address(RVA = "0xD2BAF4", Offset = "0xD2BAF4", VA = "0xD2BAF4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004BD")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849CD4", Offset = "0x849CD4")]
		private sealed class <>c
		{
			[Token(Token = "0x4002338")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002339")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<mpAvatar> <>9__174_0;

			[Token(Token = "0x6001E1E")]
			[Address(RVA = "0xD2B190", Offset = "0xD2B190", VA = "0xD2B190")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E1F")]
			[Address(RVA = "0xD2B198", Offset = "0xD2B198", VA = "0xD2B198")]
			internal int <update_players>b__174_0(mpAvatar t1, mpAvatar t2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20004BE")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849CE4", Offset = "0x849CE4")]
		private sealed class <play_voice_wave_count_co>d__198 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400233A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400233B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400233C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public map1 <>4__this;

			[Token(Token = "0x170002F7")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E23")]
				[Address(RVA = "0xD2BDFC", Offset = "0xD2BDFC", VA = "0xD2BDFC", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002F8")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E25")]
				[Address(RVA = "0xD2BE44", Offset = "0xD2BE44", VA = "0xD2BE44", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E20")]
			[Address(RVA = "0xD2BB3C", Offset = "0xD2BB3C", VA = "0xD2BB3C")]
			[DebuggerHidden]
			public <play_voice_wave_count_co>d__198(int <>1__state)
			{
			}

			[Token(Token = "0x6001E21")]
			[Address(RVA = "0xD2BB68", Offset = "0xD2BB68", VA = "0xD2BB68", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E22")]
			[Address(RVA = "0xD2BB6C", Offset = "0xD2BB6C", VA = "0xD2BB6C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E24")]
			[Address(RVA = "0xD2BE04", Offset = "0xD2BE04", VA = "0xD2BE04", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004BF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849CF4", Offset = "0x849CF4")]
		private sealed class <PlayMusicCoroutine>d__206 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400233D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400233E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400233F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public map1 <>4__this;

			[Token(Token = "0x4002340")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public sound to;

			[Token(Token = "0x4002341")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private sound <from>5__2;

			[Token(Token = "0x4002342")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <duration>5__3;

			[Token(Token = "0x4002343")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <pass>5__4;

			[Token(Token = "0x170002F9")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E29")]
				[Address(RVA = "0xD2B4B0", Offset = "0xD2B4B0", VA = "0xD2B4B0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FA")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E2B")]
				[Address(RVA = "0xD2B4F8", Offset = "0xD2B4F8", VA = "0xD2B4F8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E26")]
			[Address(RVA = "0xD2B20C", Offset = "0xD2B20C", VA = "0xD2B20C")]
			[DebuggerHidden]
			public <PlayMusicCoroutine>d__206(int <>1__state)
			{
			}

			[Token(Token = "0x6001E27")]
			[Address(RVA = "0xD2B238", Offset = "0xD2B238", VA = "0xD2B238", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E28")]
			[Address(RVA = "0xD2B23C", Offset = "0xD2B23C", VA = "0xD2B23C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E2A")]
			[Address(RVA = "0xD2B4B8", Offset = "0xD2B4B8", VA = "0xD2B4B8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000FEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int lastmpid;

		[Token(Token = "0x4000FEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject pregame_container;

		[Token(Token = "0x4000FED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public hud hud;

		[Token(Token = "0x4000FEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private byte MaxPlayers;

		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject ui_players;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject[] ui_players_row;

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI[] ui_players_name;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI[] ui_players_score;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject ui_private_password;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public TextMeshProUGUI ui_private_password_value;

		[Token(Token = "0x4000FF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public GameObject ui_private_share;

		[Token(Token = "0x4000FF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public GameObject ui_private_wait;

		[Token(Token = "0x4000FF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject ui_wave_number;

		[Token(Token = "0x4000FF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public TextMeshProUGUI ui_wave_number_value;

		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject ui_wave_next;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public TextMeshProUGUI ui_wave_next_value;

		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public GameObject ui_wave_progress;

		[Token(Token = "0x4000FFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public TextMeshProUGUI ui_wave_progress_value;

		[Token(Token = "0x4000FFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public GameObject ui_button_collider;

		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public GameObject ui_button;

		[Token(Token = "0x4000FFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject ui_button_start_game;

		[Token(Token = "0x4001000")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public GameObject ui_button_start_wave;

		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject ui_button_start_over;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public GameObject ui_button_switch_public;

		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public GameObject ui_gameover;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Transform spawn1;

		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Transform spawn2;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Transform spawn3;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Transform spawn4;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public GameObject shields_container;

		[Token(Token = "0x4001009")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public GameObject drones_container;

		[Token(Token = "0x400100A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public GameObject consumables_container;

		[Token(Token = "0x400100B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject weapons_container;

		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public GameObject spawn_weapons_container;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public GameObject npc_container;

		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public mp_tool_firearm spawn1_weapon;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public mp_tool_firearm spawn2_weapon;

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public mp_tool_firearm spawn3_weapon;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public mp_tool_firearm spawn4_weapon;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public mp_tool_base[] shields;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public mp_tool_drone[] drones;

		[Token(Token = "0x4001014")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public mp_tool_base[] consumables;

		[Token(Token = "0x4001015")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public mp_tool_firearm[] weapons;

		[Token(Token = "0x4001016")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public mpnpc[] npcs;

		[Token(Token = "0x4001017")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public mpspawn[] spawns;

		[Token(Token = "0x4001018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private List<mpspawn> available_spawns;

		[Token(Token = "0x4001019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private List<mp_tool_base> available_consumables;

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private List<mp_tool_firearm> available_weapons;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public map1room[] rooms;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public Transform[] steps_up;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public Transform[] steps_dn;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		private Vector3[] steps_org;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public GameObject container_network;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public GameObject container_avatars;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public GameObject container_npc;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public GameObject container_tools;

		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public GameObject container_shields;

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		public GameObject container_drones;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		public GameObject container_consumables;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		public GameObject container_weapons;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		public GameObject container_weapon1;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		public GameObject container_weapon2;

		[Token(Token = "0x4001029")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		public GameObject container_weapon3;

		[Token(Token = "0x400102A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		public GameObject container_weapon4;

		[Token(Token = "0x400102B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		public sound voices;

		[Token(Token = "0x400102C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		private Coroutine music_coroutine;

		[Token(Token = "0x400102D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private sound music_current;

		[Token(Token = "0x400102E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public sound music_idle;

		[Token(Token = "0x400102F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public sound music_action;

		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public sound music_win;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public sound music_lose;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		private int max_consumables;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x25C")]
		private int max_weapons;

		[Token(Token = "0x4001034")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		private int min_weapons;

		[Token(Token = "0x4001035")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public Recorder recorder;

		[Token(Token = "0x4001036")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		private string map_name;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		private string player_id;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		private string player_name;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		private bool is_private;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		private string private_password;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		private string server_region;

		[Token(Token = "0x400103C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		private bool ready;

		[Token(Token = "0x400103D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A1")]
		private bool master_migration;

		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		private mpAvatar localAvatar;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		private bool start_network;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B1")]
		private bool start_level;

		[Token(Token = "0x4001041")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B2")]
		private bool is_room_creator;

		[Token(Token = "0x4001042")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B3")]
		private bool stopped;

		[Token(Token = "0x4001043")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B4")]
		private bool awaked;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		private string button_action;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		private float next_wave;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C4")]
		private float alldead_done;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		private float alldead_duration;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2CC")]
		private float last_alert;

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		private bool manual_disconnect;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D4")]
		private int reconnect_tries;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		private int LastServerTimestamp;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2DC")]
		private float scatter_spawn_weapon_logic_last;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		private List<mpnpc> enemies;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		private bool debug_test;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2EC")]
		private float ping_webhook_last;

		[Token(Token = "0x4001050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		private bool join_webhook_sent;

		[Token(Token = "0x4001051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F4")]
		private float next_activate;

		[Token(Token = "0x4001052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		protected Dictionary<byte, mpVar> varsmap;

		[Token(Token = "0x4001053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public mpInt game;

		[Token(Token = "0x4001054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public mpInt wave;

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public mpInt time_start;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public mpByte board_status;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public mpByte progress;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public mpBool gameover;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public mpBool alldead;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		private bool voice_wave_count_playing;

		[Token(Token = "0x6000F16")]
		[Address(RVA = "0xC9C334", Offset = "0xC9C334", VA = "0xC9C334", Slot = "54")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000F17")]
		[Address(RVA = "0xC9CF4C", Offset = "0xC9CF4C", VA = "0xC9CF4C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000F18")]
		[Address(RVA = "0xC9CFAC", Offset = "0xC9CFAC", VA = "0xC9CFAC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000F19")]
		[Address(RVA = "0xC9D128", Offset = "0xC9D128", VA = "0xC9D128")]
		private void StartNetwork()
		{
		}

		[Token(Token = "0x6000F1A")]
		[Address(RVA = "0xC9D3CC", Offset = "0xC9D3CC", VA = "0xC9D3CC")]
		private void StartLevel()
		{
		}

		[Token(Token = "0x6000F1B")]
		[Address(RVA = "0xC9FA10", Offset = "0xC9FA10", VA = "0xC9FA10")]
		private void StartRoom()
		{
		}

		[Token(Token = "0x6000F1C")]
		[Address(RVA = "0xC9FCA0", Offset = "0xC9FCA0", VA = "0xC9FCA0")]
		private void StopLevel()
		{
		}

		[Token(Token = "0x6000F1D")]
		[Address(RVA = "0xC9FD44", Offset = "0xC9FD44", VA = "0xC9FD44")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F1E")]
		[Address(RVA = "0xC9FFE4", Offset = "0xC9FFE4", VA = "0xC9FFE4")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000F1F")]
		[Address(RVA = "0xC9FFE8", Offset = "0xC9FFE8", VA = "0xC9FFE8", Slot = "45")]
		public override void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x6000F20")]
		[Address(RVA = "0xCA0144", Offset = "0xCA0144", VA = "0xCA0144", Slot = "38")]
		public override void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x6000F21")]
		[Address(RVA = "0xCA0300", Offset = "0xCA0300", VA = "0xCA0300")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859840", Offset = "0x859840")]
		private IEnumerator Reconnect()
		{
			return null;
		}

		[Token(Token = "0x6000F22")]
		[Address(RVA = "0xCA0380", Offset = "0xCA0380", VA = "0xCA0380", Slot = "34")]
		public override void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000F23")]
		[Address(RVA = "0xCA0640", Offset = "0xCA0640", VA = "0xCA0640", Slot = "44")]
		public override void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000F24")]
		[Address(RVA = "0xCA0664", Offset = "0xCA0664", VA = "0xCA0664", Slot = "33")]
		public override void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000F25")]
		[Address(RVA = "0xC9F7B4", Offset = "0xC9F7B4", VA = "0xC9F7B4")]
		private void join_room()
		{
		}

		[Token(Token = "0x6000F26")]
		[Address(RVA = "0xCA0458", Offset = "0xCA0458", VA = "0xCA0458")]
		private void create_room()
		{
		}

		[Token(Token = "0x6000F27")]
		[Address(RVA = "0xC9F540", Offset = "0xC9F540", VA = "0xC9F540")]
		private void handle_error(short returnCode, string message)
		{
		}

		[Token(Token = "0x6000F28")]
		[Address(RVA = "0xCA0718", Offset = "0xCA0718", VA = "0xCA0718", Slot = "41")]
		public override void OnJoinedRoom()
		{
		}

		[Token(Token = "0x6000F29")]
		[Address(RVA = "0xCA12FC", Offset = "0xCA12FC", VA = "0xCA12FC", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x6000F2A")]
		[Address(RVA = "0xCA171C", Offset = "0xCA171C", VA = "0xCA171C", Slot = "43")]
		public override void OnPlayerLeftRoom(Player other)
		{
		}

		[Token(Token = "0x6000F2B")]
		[Address(RVA = "0xCA22FC", Offset = "0xCA22FC", VA = "0xCA22FC", Slot = "35")]
		public override void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6000F2C")]
		[Address(RVA = "0xCA005C", Offset = "0xCA005C", VA = "0xCA005C")]
		private string get_clean_server_code()
		{
			return null;
		}

		[Token(Token = "0x6000F2D")]
		[Address(RVA = "0xC9D604", Offset = "0xC9D604", VA = "0xC9D604")]
		private void ping_webhook(float interval)
		{
		}

		[Token(Token = "0x6000F2E")]
		[Address(RVA = "0xCA17A4", Offset = "0xCA17A4", VA = "0xCA17A4")]
		private void left_webhook(Player other)
		{
		}

		[Token(Token = "0x6000F2F")]
		[Address(RVA = "0xCA0804", Offset = "0xCA0804", VA = "0xCA0804")]
		private void join_webhook()
		{
		}

		[Token(Token = "0x6000F30")]
		[Address(RVA = "0xCA0EA4", Offset = "0xCA0EA4", VA = "0xCA0EA4")]
		private void add_player(Player new_player)
		{
		}

		[Token(Token = "0x6000F31")]
		[Address(RVA = "0xCA2328", Offset = "0xCA2328", VA = "0xCA2328")]
		[PunRPC]
		protected void add_player(byte no, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000F32")]
		[Address(RVA = "0xCA26D0", Offset = "0xCA26D0", VA = "0xCA26D0")]
		protected void add_player(mpAvatar avatar)
		{
		}

		[Token(Token = "0x6000F33")]
		[Address(RVA = "0xCA1FA8", Offset = "0xCA1FA8", VA = "0xCA1FA8")]
		[PunRPC]
		protected void remove_player(Player other)
		{
		}

		[Token(Token = "0x6000F34")]
		[Address(RVA = "0xCA2DEC", Offset = "0xCA2DEC", VA = "0xCA2DEC")]
		private void remove_expired()
		{
		}

		[Token(Token = "0x6000F35")]
		[Address(RVA = "0xCA2EAC", Offset = "0xCA2EAC", VA = "0xCA2EAC")]
		private void scatter_shields()
		{
		}

		[Token(Token = "0x6000F36")]
		[Address(RVA = "0xCA2F20", Offset = "0xCA2F20", VA = "0xCA2F20")]
		private void scatter_drones()
		{
		}

		[Token(Token = "0x6000F37")]
		[Address(RVA = "0xCA2F94", Offset = "0xCA2F94", VA = "0xCA2F94")]
		private void scatter_consumables(int count = 4)
		{
		}

		[Token(Token = "0x6000F38")]
		[Address(RVA = "0xCA31D8", Offset = "0xCA31D8", VA = "0xCA31D8")]
		private void scatter_weapons()
		{
		}

		[Token(Token = "0x6000F39")]
		[Address(RVA = "0xCA3228", Offset = "0xCA3228", VA = "0xCA3228")]
		private void scatter_weapons(int count)
		{
		}

		[Token(Token = "0x6000F3A")]
		[Address(RVA = "0xC9ED0C", Offset = "0xC9ED0C", VA = "0xC9ED0C")]
		private void scatter_spawn_weapon_logic()
		{
		}

		[Token(Token = "0x6000F3B")]
		[Address(RVA = "0xCA34F0", Offset = "0xCA34F0", VA = "0xCA34F0")]
		private void scatter_spawn_weapon(byte no, GameObject container, mp_tool_firearm source)
		{
		}

		[Token(Token = "0x6000F3C")]
		[Address(RVA = "0xCA36F0", Offset = "0xCA36F0", VA = "0xCA36F0")]
		private void cleanup(bool clean_npcs = true)
		{
		}

		[Token(Token = "0x6000F3D")]
		[Address(RVA = "0xCA3A6C", Offset = "0xCA3A6C", VA = "0xCA3A6C")]
		private float wave_waiting()
		{
			return default(float);
		}

		[Token(Token = "0x6000F3E")]
		[Address(RVA = "0xCA2D68", Offset = "0xCA2D68", VA = "0xCA2D68")]
		private void alert(string str)
		{
		}

		[Token(Token = "0x6000F3F")]
		[Address(RVA = "0xC9F8F8", Offset = "0xC9F8F8", VA = "0xC9F8F8")]
		private void debug(object message, [Optional] GameObject go)
		{
		}

		[Token(Token = "0x6000F40")]
		[Address(RVA = "0xCA3AD4", Offset = "0xCA3AD4", VA = "0xCA3AD4")]
		private int wave_rand(int waveno, int min, int max)
		{
			return default(int);
		}

		[Token(Token = "0x6000F41")]
		[Address(RVA = "0xCA3B74", Offset = "0xCA3B74", VA = "0xCA3B74")]
		public float get_time_pass()
		{
			return default(float);
		}

		[Token(Token = "0x6000F42")]
		[Address(RVA = "0xCA3C50", Offset = "0xCA3C50", VA = "0xCA3C50")]
		public void ViewInstancesIds()
		{
		}

		[Token(Token = "0x6000F43")]
		[Address(RVA = "0xCA3C54", Offset = "0xCA3C54", VA = "0xCA3C54")]
		public void ClearInstancesIds()
		{
		}

		[Token(Token = "0x6000F44")]
		[Address(RVA = "0xCA3C58", Offset = "0xCA3C58", VA = "0xCA3C58")]
		public void SetInstancesIds()
		{
		}

		[Token(Token = "0x6000F45")]
		[Address(RVA = "0xCA3C5C", Offset = "0xCA3C5C", VA = "0xCA3C5C")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000F46")]
		[Address(RVA = "0xCA3C60", Offset = "0xCA3C60", VA = "0xCA3C60")]
		private void CountPrefabAmmo()
		{
		}

		[Token(Token = "0x6000F47")]
		[Address(RVA = "0xCA3E90", Offset = "0xCA3E90", VA = "0xCA3E90")]
		private int npcs_amount(int waveno)
		{
			return default(int);
		}

		[Token(Token = "0x6000F48")]
		[Address(RVA = "0xCA3ECC", Offset = "0xCA3ECC", VA = "0xCA3ECC")]
		private int npcs_limit(int waveno)
		{
			return default(int);
		}

		[Token(Token = "0x6000F49")]
		[Address(RVA = "0xCA3F2C", Offset = "0xCA3F2C", VA = "0xCA3F2C")]
		private void npcs_create()
		{
		}

		[Token(Token = "0x6000F4A")]
		[Address(RVA = "0xCA429C", Offset = "0xCA429C", VA = "0xCA429C")]
		private mpspawn get_spawn()
		{
			return null;
		}

		[Token(Token = "0x6000F4B")]
		[Address(RVA = "0xCA4584", Offset = "0xCA4584", VA = "0xCA4584")]
		private void npcs_logic()
		{
		}

		[Token(Token = "0x6000F4C")]
		[Address(RVA = "0xCA4A38", Offset = "0xCA4A38", VA = "0xCA4A38")]
		private void action_logic(string command)
		{
		}

		[Token(Token = "0x6000F4D")]
		[Address(RVA = "0xC9EB70", Offset = "0xC9EB70", VA = "0xC9EB70")]
		private void client_logic()
		{
		}

		[Token(Token = "0x6000F4E")]
		[Address(RVA = "0xC9DD04", Offset = "0xC9DD04", VA = "0xC9DD04")]
		private void server_logic()
		{
		}

		[Token(Token = "0x6000F4F")]
		[Address(RVA = "0xCA54AC", Offset = "0xCA54AC", VA = "0xCA54AC")]
		[PunRPC]
		public void local_player_revive(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000F50")]
		[Address(RVA = "0xCA5600", Offset = "0xCA5600", VA = "0xCA5600")]
		[PunRPC]
		public void local_player_revive_wave(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000F51")]
		[Address(RVA = "0xCA5798", Offset = "0xCA5798", VA = "0xCA5798")]
		public void local_friendly_hit(byte by)
		{
		}

		[Token(Token = "0x6000F52")]
		[Address(RVA = "0xCA5978", Offset = "0xCA5978", VA = "0xCA5978")]
		public void local_plaer_killed()
		{
		}

		[Token(Token = "0x6000F53")]
		[Address(RVA = "0xCA59A8", Offset = "0xCA59A8", VA = "0xCA59A8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x8598E8", Offset = "0x8598E8")]
		private IEnumerator local_player_killed(float delay)
		{
			return null;
		}

		[Token(Token = "0x6000F54")]
		[Address(RVA = "0xCA5A38", Offset = "0xCA5A38", VA = "0xCA5A38")]
		[PunRPC]
		public void button_clicked(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000F55")]
		[Address(RVA = "0xC9C8E4", Offset = "0xC9C8E4", VA = "0xC9C8E4")]
		private void clear_board()
		{
		}

		[Token(Token = "0x6000F56")]
		[Address(RVA = "0xCA5AF4", Offset = "0xCA5AF4", VA = "0xCA5AF4")]
		private void update_score()
		{
		}

		[Token(Token = "0x6000F57")]
		[Address(RVA = "0xCA5D20", Offset = "0xCA5D20", VA = "0xCA5D20")]
		private void update_board()
		{
		}

		[Token(Token = "0x6000F58")]
		[Address(RVA = "0xCA68DC", Offset = "0xCA68DC", VA = "0xCA68DC")]
		private void update_progress()
		{
		}

		[Token(Token = "0x6000F59")]
		[Address(RVA = "0xCA69C8", Offset = "0xCA69C8", VA = "0xCA69C8")]
		private void update_wave()
		{
		}

		[Token(Token = "0x6000F5A")]
		[Address(RVA = "0xC9FD54", Offset = "0xC9FD54", VA = "0xC9FD54")]
		private void update_escalator()
		{
		}

		[Token(Token = "0x6000F5B")]
		[Address(RVA = "0xC9D548", Offset = "0xC9D548", VA = "0xC9D548")]
		private void update_host_migration()
		{
		}

		[Token(Token = "0x6000F5C")]
		[Address(RVA = "0xCA6C38", Offset = "0xCA6C38", VA = "0xCA6C38")]
		private void update_master()
		{
		}

		[Token(Token = "0x6000F5D")]
		[Address(RVA = "0xCA2970", Offset = "0xCA2970", VA = "0xCA2970")]
		private void update_players()
		{
		}

		[Token(Token = "0x6000F5E")]
		[Address(RVA = "0xC9F400", Offset = "0xC9F400", VA = "0xC9F400")]
		public void on_button_clicked()
		{
		}

		[Token(Token = "0x6000F5F")]
		[Address(RVA = "0xCA5F3C", Offset = "0xCA5F3C", VA = "0xCA5F3C")]
		private void ui_start_public()
		{
		}

		[Token(Token = "0x6000F60")]
		[Address(RVA = "0xCA5FFC", Offset = "0xCA5FFC", VA = "0xCA5FFC")]
		private void ui_start_private()
		{
		}

		[Token(Token = "0x6000F61")]
		[Address(RVA = "0xCA60BC", Offset = "0xCA60BC", VA = "0xCA60BC")]
		private void ui_private_ready()
		{
		}

		[Token(Token = "0x6000F62")]
		[Address(RVA = "0xCA6324", Offset = "0xCA6324", VA = "0xCA6324")]
		private void ui_wave_start()
		{
		}

		[Token(Token = "0x6000F63")]
		[Address(RVA = "0xCA67D0", Offset = "0xCA67D0", VA = "0xCA67D0")]
		private void ui_wave_end()
		{
		}

		[Token(Token = "0x6000F64")]
		[Address(RVA = "0xCA6554", Offset = "0xCA6554", VA = "0xCA6554")]
		private void ui_game_over()
		{
		}

		[Token(Token = "0x6000F65")]
		[Address(RVA = "0xCA6D18", Offset = "0xCA6D18", VA = "0xCA6D18")]
		private void update_alldead()
		{
		}

		[Token(Token = "0x6000F66")]
		[Address(RVA = "0xC9CA7C", Offset = "0xC9CA7C", VA = "0xC9CA7C")]
		protected void vars_init()
		{
		}

		[Token(Token = "0x6000F67")]
		[Address(RVA = "0xCA13D8", Offset = "0xCA13D8", VA = "0xCA13D8")]
		protected void vars_push(Player other)
		{
		}

		[Token(Token = "0x6000F68")]
		[Address(RVA = "0xCA6DD4", Offset = "0xCA6DD4", VA = "0xCA6DD4")]
		protected void vars_set(byte id, object value)
		{
		}

		[Token(Token = "0x6000F69")]
		[Address(RVA = "0xCA7028", Offset = "0xCA7028", VA = "0xCA7028")]
		[PunRPC]
		protected void vars_rpc(byte id, object value, [Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000F6A")]
		[Address(RVA = "0xCA7150", Offset = "0xCA7150", VA = "0xCA7150")]
		private void FixStaticRenderers()
		{
		}

		[Token(Token = "0x6000F6B")]
		[Address(RVA = "0xCA5460", Offset = "0xCA5460", VA = "0xCA5460")]
		private void play_voice_wave_count(int timeleft)
		{
		}

		[Token(Token = "0x6000F6C")]
		[Address(RVA = "0xCA7154", Offset = "0xCA7154", VA = "0xCA7154")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859970", Offset = "0x859970")]
		private IEnumerator play_voice_wave_count_co()
		{
			return null;
		}

		[Token(Token = "0x6000F6D")]
		[Address(RVA = "0xCA617C", Offset = "0xCA617C", VA = "0xCA617C")]
		private void voice_wave_start()
		{
		}

		[Token(Token = "0x6000F6E")]
		[Address(RVA = "0xCA71D4", Offset = "0xCA71D4", VA = "0xCA71D4")]
		[PunRPC]
		protected void voice_wave_start(int index, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000F6F")]
		[Address(RVA = "0xCA6628", Offset = "0xCA6628", VA = "0xCA6628")]
		private void voice_wave_win()
		{
		}

		[Token(Token = "0x6000F70")]
		[Address(RVA = "0xCA72BC", Offset = "0xCA72BC", VA = "0xCA72BC")]
		[PunRPC]
		protected void voice_wave_win(int index, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000F71")]
		[Address(RVA = "0xCA63AC", Offset = "0xCA63AC", VA = "0xCA63AC")]
		private void voice_wave_lose()
		{
		}

		[Token(Token = "0x6000F72")]
		[Address(RVA = "0xCA738C", Offset = "0xCA738C", VA = "0xCA738C")]
		[PunRPC]
		protected void voice_wave_lose(int index, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000F73")]
		[Address(RVA = "0xC9FBD0", Offset = "0xC9FBD0", VA = "0xC9FBD0")]
		private void PlayMusic(sound to)
		{
		}

		[Token(Token = "0x6000F74")]
		[Address(RVA = "0xCA745C", Offset = "0xCA745C", VA = "0xCA745C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859A08", Offset = "0x859A08")]
		private IEnumerator PlayMusicCoroutine(sound to)
		{
			return null;
		}

		[Token(Token = "0x6000F75")]
		[Address(RVA = "0xC9EF54", Offset = "0xC9EF54", VA = "0xC9EF54")]
		private void AdminUpdate()
		{
		}

		[Token(Token = "0x6000F76")]
		[Address(RVA = "0xCA8054", Offset = "0xCA8054", VA = "0xCA8054")]
		private void AdminOpenAllRooms()
		{
		}

		[Token(Token = "0x6000F77")]
		[Address(RVA = "0xCA79C4", Offset = "0xCA79C4", VA = "0xCA79C4")]
		private void AdminAddEnemy()
		{
		}

		[Token(Token = "0x6000F78")]
		[Address(RVA = "0xCA7F58", Offset = "0xCA7F58", VA = "0xCA7F58")]
		private void AdminActivateEnemies()
		{
		}

		[Token(Token = "0x6000F79")]
		[Address(RVA = "0xCA74F0", Offset = "0xCA74F0", VA = "0xCA74F0")]
		private void AdminAddItem(string name)
		{
		}

		[Token(Token = "0x6000F7A")]
		[Address(RVA = "0xCA80CC", Offset = "0xCA80CC", VA = "0xCA80CC")]
		public map1()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class map1elevator : MonoBehaviour
	{
		[Token(Token = "0x20004C0")]
		private struct key
		{
			[Token(Token = "0x4002344")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public string name;

			[Token(Token = "0x4002345")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float duration;

			[Token(Token = "0x6001E2C")]
			[Address(RVA = "0xD2BE4C", Offset = "0xD2BE4C", VA = "0xD2BE4C")]
			public key(string name, float duration)
			{
			}
		}

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform inner;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform inner_dummy;

		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public teleport teleport;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public teleport teleport_outer_top;

		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public teleport teleport_outer_bottom;

		[Token(Token = "0x4001060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform itemsbox;

		[Token(Token = "0x4001061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform inner_door_right;

		[Token(Token = "0x4001062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform inner_door_left;

		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform bottom_door_right;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform bottom_door_left;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform top_door_right;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform top_door_left;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public sound elevator_door_open;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public sound elevator_door_close;

		[Token(Token = "0x4001069")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public sound elevator_ring;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public sound elevator_music;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public map1 map1;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<key> keys;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int current;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float duration;

		[Token(Token = "0x6000F7B")]
		[Address(RVA = "0x1DD75C0", Offset = "0x1DD75C0", VA = "0x1DD75C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F7C")]
		[Address(RVA = "0x1DD7940", Offset = "0x1DD7940", VA = "0x1DD7940")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000F7D")]
		[Address(RVA = "0x1DD7E78", Offset = "0x1DD7E78", VA = "0x1DD7E78")]
		private void update_key(string key, string state, float t, bool skip = false)
		{
		}

		[Token(Token = "0x6000F7E")]
		[Address(RVA = "0x1DD9070", Offset = "0x1DD9070", VA = "0x1DD9070")]
		private void UpdateTeleports(int state)
		{
		}

		[Token(Token = "0x6000F7F")]
		[Address(RVA = "0x1DD91E0", Offset = "0x1DD91E0", VA = "0x1DD91E0")]
		private void UpdateItems(float y)
		{
		}

		[Token(Token = "0x6000F80")]
		[Address(RVA = "0x1DD95EC", Offset = "0x1DD95EC", VA = "0x1DD95EC")]
		public map1elevator()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	public class map1room : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public OcclusionPortal portal;

		[Token(Token = "0x4001070")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public NavMeshObstacle obstacle;

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI ui_wave;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject container_close;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject container_open;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public area_collider[] bounds;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public mpspawn[] spawns;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject occuldee;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject weapons_container;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public mp_tool_firearm[] weapons;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Dictionary<byte, mpVar> varsmap;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public mpBool open;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public mpInt wave;

		[Token(Token = "0x6000F81")]
		[Address(RVA = "0x1DD9680", Offset = "0x1DD9680", VA = "0x1DD9680")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000F82")]
		[Address(RVA = "0x1DD9798", Offset = "0x1DD9798", VA = "0x1DD9798")]
		private void toggle_room(bool state)
		{
		}

		[Token(Token = "0x6000F83")]
		[Address(RVA = "0x1DD9D24", Offset = "0x1DD9D24", VA = "0x1DD9D24")]
		private void update_room()
		{
		}

		[Token(Token = "0x6000F84")]
		[Address(RVA = "0x1DD9DA0", Offset = "0x1DD9DA0", VA = "0x1DD9DA0")]
		private void ToggleVisiblePortals()
		{
		}

		[Token(Token = "0x6000F85")]
		[Address(RVA = "0x1DD9FCC", Offset = "0x1DD9FCC", VA = "0x1DD9FCC", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x6000F86")]
		[Address(RVA = "0x1DDA33C", Offset = "0x1DDA33C", VA = "0x1DDA33C")]
		public void OpenRoom()
		{
		}

		[Token(Token = "0x6000F87")]
		[Address(RVA = "0x1DDA460", Offset = "0x1DDA460", VA = "0x1DDA460")]
		public void CloseRoom()
		{
		}

		[Token(Token = "0x6000F88")]
		[Address(RVA = "0x1DD9A50", Offset = "0x1DD9A50", VA = "0x1DD9A50")]
		private void vars_init()
		{
		}

		[Token(Token = "0x6000F89")]
		[Address(RVA = "0x1DD9FFC", Offset = "0x1DD9FFC", VA = "0x1DD9FFC")]
		private void vars_push(Player other)
		{
		}

		[Token(Token = "0x6000F8A")]
		[Address(RVA = "0x1DDA604", Offset = "0x1DDA604", VA = "0x1DDA604")]
		private void vars_set(byte id, object value)
		{
		}

		[Token(Token = "0x6000F8B")]
		[Address(RVA = "0x1DDA924", Offset = "0x1DDA924", VA = "0x1DDA924")]
		[PunRPC]
		private void vars_rpc(byte id, object value, [Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000F8C")]
		[Address(RVA = "0x1DDAADC", Offset = "0x1DDAADC", VA = "0x1DDAADC")]
		public map1room()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	public class mpBool : mpVar
	{
		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _value;

		[Token(Token = "0x170000FD")]
		public bool value
		{
			[Token(Token = "0x6000F8D")]
			[Address(RVA = "0x1DE4180", Offset = "0x1DE4180", VA = "0x1DE4180")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000F8E")]
			[Address(RVA = "0x1DDA388", Offset = "0x1DDA388", VA = "0x1DDA388")]
			set
			{
			}
		}

		[Token(Token = "0x6000F8F")]
		[Address(RVA = "0x1DDA4AC", Offset = "0x1DDA4AC", VA = "0x1DDA4AC")]
		public mpBool set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x6000F90")]
		[Address(RVA = "0x1DE4188", Offset = "0x1DE4188", VA = "0x1DE4188", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x6000F91")]
		[Address(RVA = "0x1DE4228", Offset = "0x1DE4228", VA = "0x1DE4228", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x6000F92")]
		[Address(RVA = "0x1DDAB8C", Offset = "0x1DDAB8C", VA = "0x1DDAB8C")]
		public mpBool()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class mpByte : mpVar
	{
		[Token(Token = "0x400107D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private byte _value;

		[Token(Token = "0x170000FE")]
		public byte value
		{
			[Token(Token = "0x6000F93")]
			[Address(RVA = "0x1DE4C2C", Offset = "0x1DE4C2C", VA = "0x1DE4C2C")]
			get
			{
				return default(byte);
			}
			[Token(Token = "0x6000F94")]
			[Address(RVA = "0x1DE17AC", Offset = "0x1DE17AC", VA = "0x1DE17AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000F95")]
		[Address(RVA = "0x1DE3B4C", Offset = "0x1DE3B4C", VA = "0x1DE3B4C")]
		public mpByte set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x6000F96")]
		[Address(RVA = "0x1DE4C34", Offset = "0x1DE4C34", VA = "0x1DE4C34", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x6000F97")]
		[Address(RVA = "0x1DE4CD4", Offset = "0x1DE4CD4", VA = "0x1DE4CD4", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x6000F98")]
		[Address(RVA = "0x1DE4174", Offset = "0x1DE4174", VA = "0x1DE4174")]
		public mpByte()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	public class mpFloat : mpVar
	{
		[Token(Token = "0x400107E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float _value;

		[Token(Token = "0x170000FF")]
		public float value
		{
			[Token(Token = "0x6000F99")]
			[Address(RVA = "0x1DE4D34", Offset = "0x1DE4D34", VA = "0x1DE4D34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000F9A")]
			[Address(RVA = "0x1DE4D3C", Offset = "0x1DE4D3C", VA = "0x1DE4D3C")]
			set
			{
			}
		}

		[Token(Token = "0x6000F9B")]
		[Address(RVA = "0x1DE4E10", Offset = "0x1DE4E10", VA = "0x1DE4E10")]
		public mpFloat set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x6000F9C")]
		[Address(RVA = "0x1DE4E54", Offset = "0x1DE4E54", VA = "0x1DE4E54", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x6000F9D")]
		[Address(RVA = "0x1DE4EF4", Offset = "0x1DE4EF4", VA = "0x1DE4EF4", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x6000F9E")]
		[Address(RVA = "0x1DE4F54", Offset = "0x1DE4F54", VA = "0x1DE4F54")]
		public mpFloat()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class mpInt : mpVar
	{
		[Token(Token = "0x400107F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _value;

		[Token(Token = "0x17000100")]
		public int value
		{
			[Token(Token = "0x6000F9F")]
			[Address(RVA = "0x1DE4F5C", Offset = "0x1DE4F5C", VA = "0x1DE4F5C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000FA0")]
			[Address(RVA = "0x1DDC56C", Offset = "0x1DDC56C", VA = "0x1DDC56C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FA1")]
		[Address(RVA = "0x1DDA4F0", Offset = "0x1DDA4F0", VA = "0x1DDA4F0")]
		public mpInt set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x6000FA2")]
		[Address(RVA = "0x1DE4F64", Offset = "0x1DE4F64", VA = "0x1DE4F64", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x6000FA3")]
		[Address(RVA = "0x1DE5004", Offset = "0x1DE5004", VA = "0x1DE5004", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x6000FA4")]
		[Address(RVA = "0x1DDAB94", Offset = "0x1DDAB94", VA = "0x1DDAB94")]
		public mpInt()
		{
		}
	}
	[Token(Token = "0x20001F1")]
	public class mpShort : mpVar
	{
		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private short _value;

		[Token(Token = "0x17000101")]
		public short value
		{
			[Token(Token = "0x6000FA5")]
			[Address(RVA = "0x1DE7664", Offset = "0x1DE7664", VA = "0x1DE7664")]
			get
			{
				return default(short);
			}
			[Token(Token = "0x6000FA6")]
			[Address(RVA = "0x1DE766C", Offset = "0x1DE766C", VA = "0x1DE766C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FA7")]
		[Address(RVA = "0x1DE7738", Offset = "0x1DE7738", VA = "0x1DE7738")]
		public mpShort set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x6000FA8")]
		[Address(RVA = "0x1DE777C", Offset = "0x1DE777C", VA = "0x1DE777C", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x6000FA9")]
		[Address(RVA = "0x1DE781C", Offset = "0x1DE781C", VA = "0x1DE781C", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x6000FAA")]
		[Address(RVA = "0x1DE787C", Offset = "0x1DE787C", VA = "0x1DE787C")]
		public mpShort()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class mpString : mpVar
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string _value;

		[Token(Token = "0x17000102")]
		public string value
		{
			[Token(Token = "0x6000FAB")]
			[Address(RVA = "0x1DE7884", Offset = "0x1DE7884", VA = "0x1DE7884")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000FAC")]
			[Address(RVA = "0x1DE788C", Offset = "0x1DE788C", VA = "0x1DE788C")]
			set
			{
			}
		}

		[Token(Token = "0x6000FAD")]
		[Address(RVA = "0x1DE7928", Offset = "0x1DE7928", VA = "0x1DE7928")]
		public mpString set(byte id, Action onreceive, Action<byte, object> onset)
		{
			return null;
		}

		[Token(Token = "0x6000FAE")]
		[Address(RVA = "0x1DE796C", Offset = "0x1DE796C", VA = "0x1DE796C", Slot = "4")]
		public override void receive(object new_value)
		{
		}

		[Token(Token = "0x6000FAF")]
		[Address(RVA = "0x1DE7A04", Offset = "0x1DE7A04", VA = "0x1DE7A04", Slot = "5")]
		public override object send()
		{
			return null;
		}

		[Token(Token = "0x6000FB0")]
		[Address(RVA = "0x1DE7A0C", Offset = "0x1DE7A0C", VA = "0x1DE7A0C")]
		public mpString()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class mpTransform : MonoBehaviour
	{
		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 toPosOld;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private Vector3 toPos;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion toRot;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float speed;

		[Token(Token = "0x6000FB1")]
		[Address(RVA = "0x1DE1B2C", Offset = "0x1DE1B2C", VA = "0x1DE1B2C")]
		public void SendNext(PhotonStream stream)
		{
		}

		[Token(Token = "0x6000FB2")]
		[Address(RVA = "0x1DE1CDC", Offset = "0x1DE1CDC", VA = "0x1DE1CDC")]
		public void ReceiveNext(PhotonStream stream)
		{
		}

		[Token(Token = "0x6000FB3")]
		[Address(RVA = "0x1DE3390", Offset = "0x1DE3390", VA = "0x1DE3390")]
		public void RemoteFixedUpdate()
		{
		}

		[Token(Token = "0x6000FB4")]
		[Address(RVA = "0x1DE7A70", Offset = "0x1DE7A70", VA = "0x1DE7A70")]
		public mpTransform()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class mpVar
	{
		[Token(Token = "0x4001086")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public byte id;

		[Token(Token = "0x4001087")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action onreceive;

		[Token(Token = "0x4001088")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Action<byte, object> onset;

		[Token(Token = "0x6000FB5")]
		[Address(RVA = "0x1DE7ACC", Offset = "0x1DE7ACC", VA = "0x1DE7ACC", Slot = "4")]
		public virtual void receive(object new_value)
		{
		}

		[Token(Token = "0x6000FB6")]
		[Address(RVA = "0x1DE7AD0", Offset = "0x1DE7AD0", VA = "0x1DE7AD0", Slot = "5")]
		public virtual object send()
		{
			return null;
		}

		[Token(Token = "0x6000FB7")]
		[Address(RVA = "0x1DE4288", Offset = "0x1DE4288", VA = "0x1DE4288")]
		public mpVar()
		{
		}
	}
	[Token(Token = "0x20001F5")]
	public class isstatic : MonoBehaviour
	{
		[Token(Token = "0x4001089")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool initialized;

		[Token(Token = "0x400108A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static List<GameObject> statics;

		[Token(Token = "0x6000FB8")]
		[Address(RVA = "0xC5E810", Offset = "0xC5E810", VA = "0xC5E810")]
		public static void init()
		{
		}

		[Token(Token = "0x6000FB9")]
		[Address(RVA = "0xC5EBD4", Offset = "0xC5EBD4", VA = "0xC5EBD4")]
		public static bool check(GameObject go)
		{
			return default(bool);
		}

		[Token(Token = "0x6000FBA")]
		[Address(RVA = "0xC5ECAC", Offset = "0xC5ECAC", VA = "0xC5ECAC")]
		public isstatic()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8482F0", Offset = "0x8482F0")]
	public class mp : MonoBehaviourPunCallbacks, IPunPrefabPool
	{
		[Serializable]
		[Token(Token = "0x20004C1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849D04", Offset = "0x849D04")]
		private sealed class <>c
		{
			[Token(Token = "0x4002346")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002347")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<PhotonView> <>9__11_0;

			[Token(Token = "0x4002348")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Predicate<mpnpc> <>9__26_0;

			[Token(Token = "0x6001E2E")]
			[Address(RVA = "0xD2BEE4", Offset = "0xD2BEE4", VA = "0xD2BEE4")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E2F")]
			[Address(RVA = "0xD2BEEC", Offset = "0xD2BEEC", VA = "0xD2BEEC")]
			internal int <ShowAllViews>b__11_0(PhotonView t1, PhotonView t2)
			{
				return default(int);
			}

			[Token(Token = "0x6001E30")]
			[Address(RVA = "0xD2BF2C", Offset = "0xD2BF2C", VA = "0xD2BF2C")]
			internal bool <addnpc>b__26_0(mpnpc x)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static mp instance;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool takeover;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9")]
		public static bool friendly_fire;

		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static mpAvatar local;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public mpAvatar avatar;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Dictionary<string, mpAvatar> players;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public base_event on_player_kill;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte_event on_friendly_hit;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static List<mpnpc> npcs;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float monitor_time;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static int monitor_count;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static int monitor_last;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static Dictionary<string, int> monitor_data;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int SerializationRateMin;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int SerializationRateMax;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int MessagesPerSecondMin;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private int MessagesPerSecondMax;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int LastTotalMessageCount;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private float RatesInterval;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float RatesAccum;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float RatesLeft;

		[Token(Token = "0x6000FBC")]
		[Address(RVA = "0x1DDB1D4", Offset = "0x1DDB1D4", VA = "0x1DDB1D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FBD")]
		[Address(RVA = "0x1DDB458", Offset = "0x1DDB458", VA = "0x1DDB458")]
		private void Start()
		{
		}

		[Token(Token = "0x6000FBE")]
		[Address(RVA = "0x1DDB4B4", Offset = "0x1DDB4B4", VA = "0x1DDB4B4")]
		private void ShowAllViews()
		{
		}

		[Token(Token = "0x6000FBF")]
		[Address(RVA = "0x1DDB814", Offset = "0x1DDB814", VA = "0x1DDB814")]
		private void Update()
		{
		}

		[Token(Token = "0x6000FC0")]
		[Address(RVA = "0x1DDB818", Offset = "0x1DDB818", VA = "0x1DDB818")]
		public static void monitor(PhotonView view, string type)
		{
		}

		[Token(Token = "0x6000FC1")]
		[Address(RVA = "0x1DDA534", Offset = "0x1DDA534", VA = "0x1DDA534")]
		public static void rpc(PhotonView view, string methodName, Player target, params object[] parameters)
		{
		}

		[Token(Token = "0x6000FC2")]
		[Address(RVA = "0x1DDA854", Offset = "0x1DDA854", VA = "0x1DDA854")]
		public static void rpc(PhotonView view, string methodName, RpcTarget target, params object[] parameters)
		{
		}

		[Token(Token = "0x6000FC3")]
		[Address(RVA = "0x1DDAA48", Offset = "0x1DDAA48", VA = "0x1DDAA48")]
		public static void rpc(PhotonView view, string methodName)
		{
		}

		[Token(Token = "0x6000FC4")]
		[Address(RVA = "0x1DDC1B0", Offset = "0x1DDC1B0", VA = "0x1DDC1B0")]
		public static void player_friendly_hit(byte by, Vector3 normal, int damage)
		{
		}

		[Token(Token = "0x6000FC5")]
		[Address(RVA = "0x1DDC3E0", Offset = "0x1DDC3E0", VA = "0x1DDC3E0")]
		public static void player_hit()
		{
		}

		[Token(Token = "0x6000FC6")]
		[Address(RVA = "0x1DDC638", Offset = "0x1DDC638", VA = "0x1DDC638")]
		public static void player_heal()
		{
		}

		[Token(Token = "0x6000FC7")]
		[Address(RVA = "0x1DDC63C", Offset = "0x1DDC63C", VA = "0x1DDC63C")]
		public static void player_headshot()
		{
		}

		[Token(Token = "0x6000FC8")]
		[Address(RVA = "0x1DDC640", Offset = "0x1DDC640", VA = "0x1DDC640")]
		public static void noise(Vector3 position, float range)
		{
		}

		[Token(Token = "0x6000FC9")]
		[Address(RVA = "0x1DDC800", Offset = "0x1DDC800", VA = "0x1DDC800")]
		public static void addnpc(mpnpc npc)
		{
		}

		[Token(Token = "0x6000FCA")]
		[Address(RVA = "0x1DDC9F8", Offset = "0x1DDC9F8", VA = "0x1DDC9F8")]
		private void UpdateRates()
		{
		}

		[Token(Token = "0x6000FCB")]
		[Address(RVA = "0x1DDD104", Offset = "0x1DDD104", VA = "0x1DDD104")]
		[PunRPC]
		public void UpdateRatesRpc(int SerializationRate, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FCC")]
		[Address(RVA = "0x1DDD2CC", Offset = "0x1DDD2CC", VA = "0x1DDD2CC", Slot = "54")]
		public GameObject Instantiate(string prefabId, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000FCD")]
		[Address(RVA = "0x1DDDDF0", Offset = "0x1DDDDF0", VA = "0x1DDDDF0")]
		public static void NetworkDestroy(PhotonView view)
		{
		}

		[Token(Token = "0x6000FCE")]
		[Address(RVA = "0x1DDDE5C", Offset = "0x1DDDE5C", VA = "0x1DDDE5C", Slot = "55")]
		public void Destroy(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000FCF")]
		[Address(RVA = "0x1DDD558", Offset = "0x1DDD558", VA = "0x1DDD558")]
		public GameObject InstantiateAvatar()
		{
			return null;
		}

		[Token(Token = "0x6000FD0")]
		[Address(RVA = "0x1DDD670", Offset = "0x1DDD670", VA = "0x1DDD670")]
		public GameObject InstantiateDrone(int mpid, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000FD1")]
		[Address(RVA = "0x1DDDF90", Offset = "0x1DDDF90", VA = "0x1DDDF90")]
		public void drone_create(int mpid, int newmpid)
		{
		}

		[Token(Token = "0x6000FD2")]
		[Address(RVA = "0x1DDE3B4", Offset = "0x1DDE3B4", VA = "0x1DDE3B4")]
		[PunRPC]
		public void drone_create_master(int mpid, int newmpid, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FD3")]
		[Address(RVA = "0x1DDE468", Offset = "0x1DDE468", VA = "0x1DDE468")]
		public void drone_destroy(int mpid)
		{
		}

		[Token(Token = "0x6000FD4")]
		[Address(RVA = "0x1DDE720", Offset = "0x1DDE720", VA = "0x1DDE720")]
		[PunRPC]
		public void drone_destroy_owner(int mpid, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FD5")]
		[Address(RVA = "0x1DDDEC8", Offset = "0x1DDDEC8", VA = "0x1DDDEC8")]
		public mp_drone drone_get_mpid(int mpid)
		{
			return null;
		}

		[Token(Token = "0x6000FD6")]
		[Address(RVA = "0x1DDD8F0", Offset = "0x1DDD8F0", VA = "0x1DDD8F0")]
		public GameObject InstantiateTool(int mpid, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000FD7")]
		[Address(RVA = "0x1DDE88C", Offset = "0x1DDE88C", VA = "0x1DDE88C")]
		public void tool_create(int mpid, int mpid2 = 0)
		{
		}

		[Token(Token = "0x6000FD8")]
		[Address(RVA = "0x1DDED18", Offset = "0x1DDED18", VA = "0x1DDED18")]
		[PunRPC]
		public void tool_create_master(int mpid, int mpid2, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FD9")]
		[Address(RVA = "0x1DDEDCC", Offset = "0x1DDEDCC", VA = "0x1DDEDCC")]
		public void tool_destroy(int mpid)
		{
		}

		[Token(Token = "0x6000FDA")]
		[Address(RVA = "0x1DDF084", Offset = "0x1DDF084", VA = "0x1DDF084")]
		[PunRPC]
		public void tool_destroy_owner(int mpid, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FDB")]
		[Address(RVA = "0x1DDE7C4", Offset = "0x1DDE7C4", VA = "0x1DDE7C4")]
		public mp_tool_base tool_get_mpid(int mpid)
		{
			return null;
		}

		[Token(Token = "0x6000FDC")]
		[Address(RVA = "0x1DDDB70", Offset = "0x1DDDB70", VA = "0x1DDDB70")]
		public GameObject InstantiateNPC(int mpid, Vector3 position, Quaternion rotation)
		{
			return null;
		}

		[Token(Token = "0x6000FDD")]
		[Address(RVA = "0x1DDF1F0", Offset = "0x1DDF1F0", VA = "0x1DDF1F0")]
		public mpnpc npc_create(int mpid, int health, int damage, int speed, int accuracy, bool runner, byte weapon_range, byte behavior)
		{
			return null;
		}

		[Token(Token = "0x6000FDE")]
		[Address(RVA = "0x1DDFAD4", Offset = "0x1DDFAD4", VA = "0x1DDFAD4")]
		[PunRPC]
		public void npc_create_master(int mpid, int health, int damage, int speed, int accuracy, bool runner, byte weapon_range, byte behavior, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FDF")]
		[Address(RVA = "0x1DDFBC8", Offset = "0x1DDFBC8", VA = "0x1DDFBC8")]
		public void npc_destroy(int mpid)
		{
		}

		[Token(Token = "0x6000FE0")]
		[Address(RVA = "0x1DDFE80", Offset = "0x1DDFE80", VA = "0x1DDFE80")]
		[PunRPC]
		public void npc_destroy_owner(int mpid, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FE1")]
		[Address(RVA = "0x1DDF128", Offset = "0x1DDF128", VA = "0x1DDF128")]
		public mpnpc npc_get_mpid(int mpid)
		{
			return null;
		}

		[Token(Token = "0x6000FE2")]
		[Address(RVA = "0x1DDFF24", Offset = "0x1DDFF24", VA = "0x1DDFF24")]
		public mp()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x848304", Offset = "0x848304")]
	public class mpAvatar : MonoBehaviourPunCallbacks, IPunObservable, IPunInstantiateMagicCallback
	{
		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject default_parent;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Action<mpAvatar> callback_add;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Action callback_score;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string player_id;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string player_name;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public byte no;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform spawn;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public bool isLocalPlayer;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float speaking_delta;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private mp_drone drone;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851E48", Offset = "0x851E48")]
		public Transform ui;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI ui_player_name;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public mpTransform head;

		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public mpTransform right;

		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public mpTransform left;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public BonePoseLib right_pose;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public BonePoseLib left_pose;

		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public PhotonVoiceView voice;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Transform mouth;

		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public Outline outline;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public NavMeshObstacle agent;

		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851E80", Offset = "0x851E80")]
		public sound audio;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Rigidbody rb;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Collider[] cols;

		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public GameObject lips_container;

		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public Material head_0;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Material head_1;

		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public Material head_2;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public Material head_3;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public Material head_4;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public Material head_admin;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public Material head_dead;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public Material hand_0;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public Material hand_1;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public Material hand_2;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public Material hand_3;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public Material hand_4;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public Material hand_dead;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public Renderer head_rend;

		[Token(Token = "0x40010C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public Renderer head_rend_admin;

		[Token(Token = "0x40010C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public Renderer[] hand_rends;

		[Token(Token = "0x40010C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public GameObject[] lips;

		[Token(Token = "0x40010CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public GameObject[] left_fingers;

		[Token(Token = "0x40010CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public GameObject[] right_fingers;

		[Token(Token = "0x40010CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public GameObject faces;

		[Token(Token = "0x40010CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public GameObject face_normal;

		[Token(Token = "0x40010CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public GameObject face_admin;

		[Token(Token = "0x40010CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private bool show_player_name;

		[Token(Token = "0x40010D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		protected Dictionary<byte, mpVar> varsmap;

		[Token(Token = "0x40010D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public mpBool alive;

		[Token(Token = "0x40010D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public mpBool speaking;

		[Token(Token = "0x40010D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public mpByte pr;

		[Token(Token = "0x40010D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public mpByte pl;

		[Token(Token = "0x40010D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public mpBool focus;

		[Token(Token = "0x40010D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public mpInt score;

		[Token(Token = "0x40010D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public mpInt kills;

		[Token(Token = "0x40010D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public mpInt deaths;

		[Token(Token = "0x40010D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public mpBool right_fingers_exploded;

		[Token(Token = "0x40010DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public mpBool left_fingers_exploded;

		[Token(Token = "0x40010DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		public mpInt drone_id;

		[Token(Token = "0x40010DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		public mpByte face;

		[Token(Token = "0x6000FE4")]
		[Address(RVA = "0x1DE00D8", Offset = "0x1DE00D8", VA = "0x1DE00D8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000FE5")]
		[Address(RVA = "0x1DE0A9C", Offset = "0x1DE0A9C", VA = "0x1DE0A9C", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x6000FE6")]
		[Address(RVA = "0x1DE0E0C", Offset = "0x1DE0E0C", VA = "0x1DE0E0C", Slot = "55")]
		public void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FE7")]
		[Address(RVA = "0x1DE1574", Offset = "0x1DE1574", VA = "0x1DE1574")]
		public void InitLocalPlayer(Transform spawn, Recorder recorder)
		{
		}

		[Token(Token = "0x6000FE8")]
		[Address(RVA = "0x1DE19E4", Offset = "0x1DE19E4", VA = "0x1DE19E4", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FE9")]
		[Address(RVA = "0x1DE1FAC", Offset = "0x1DE1FAC", VA = "0x1DE1FAC")]
		public void hit(byte by, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6000FEA")]
		[Address(RVA = "0x1DE224C", Offset = "0x1DE224C", VA = "0x1DE224C")]
		[PunRPC]
		public void hit_rpc(byte by, Vector3 normal, int damage, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FEB")]
		[Address(RVA = "0x1DE0FBC", Offset = "0x1DE0FBC", VA = "0x1DE0FBC")]
		private void update_ui()
		{
		}

		[Token(Token = "0x6000FEC")]
		[Address(RVA = "0x1DE239C", Offset = "0x1DE239C", VA = "0x1DE239C")]
		private void update_alive()
		{
		}

		[Token(Token = "0x6000FED")]
		[Address(RVA = "0x1DE0FEC", Offset = "0x1DE0FEC", VA = "0x1DE0FEC")]
		private void update_style()
		{
		}

		[Token(Token = "0x6000FEE")]
		[Address(RVA = "0x1DE2540", Offset = "0x1DE2540", VA = "0x1DE2540")]
		private void update_hands()
		{
		}

		[Token(Token = "0x6000FEF")]
		[Address(RVA = "0x1DE2594", Offset = "0x1DE2594", VA = "0x1DE2594")]
		private void update_focus()
		{
		}

		[Token(Token = "0x6000FF0")]
		[Address(RVA = "0x1DE1878", Offset = "0x1DE1878", VA = "0x1DE1878")]
		private void update_respawn()
		{
		}

		[Token(Token = "0x6000FF1")]
		[Address(RVA = "0x1DE2600", Offset = "0x1DE2600", VA = "0x1DE2600")]
		private void update_score()
		{
		}

		[Token(Token = "0x6000FF2")]
		[Address(RVA = "0x1DE2678", Offset = "0x1DE2678", VA = "0x1DE2678")]
		private void update_agent()
		{
		}

		[Token(Token = "0x6000FF3")]
		[Address(RVA = "0x1DE26D8", Offset = "0x1DE26D8", VA = "0x1DE26D8")]
		public void request_respawn()
		{
		}

		[Token(Token = "0x6000FF4")]
		[Address(RVA = "0x1DE2830", Offset = "0x1DE2830", VA = "0x1DE2830")]
		[PunRPC]
		protected void rpc_respawn(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FF5")]
		[Address(RVA = "0x1DE28CC", Offset = "0x1DE28CC", VA = "0x1DE28CC")]
		[PunRPC]
		protected void rpc_sound(byte no, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6000FF6")]
		[Address(RVA = "0x1DE29DC", Offset = "0x1DE29DC", VA = "0x1DE29DC")]
		public void send_sound(string str)
		{
		}

		[Token(Token = "0x6000FF7")]
		[Address(RVA = "0x1DE2BE4", Offset = "0x1DE2BE4", VA = "0x1DE2BE4")]
		private void update_face()
		{
		}

		[Token(Token = "0x6000FF8")]
		[Address(RVA = "0x1DE2C74", Offset = "0x1DE2C74", VA = "0x1DE2C74")]
		private void UpdateFingers()
		{
		}

		[Token(Token = "0x6000FF9")]
		[Address(RVA = "0x1DE2D58", Offset = "0x1DE2D58", VA = "0x1DE2D58")]
		private void UpdateLips()
		{
		}

		[Token(Token = "0x6000FFA")]
		[Address(RVA = "0x1DE2EE8", Offset = "0x1DE2EE8", VA = "0x1DE2EE8")]
		private void UpdateLocalPlayer()
		{
		}

		[Token(Token = "0x6000FFB")]
		[Address(RVA = "0x1DE3254", Offset = "0x1DE3254", VA = "0x1DE3254")]
		private void UpdateRemotePlayer()
		{
		}

		[Token(Token = "0x6000FFC")]
		[Address(RVA = "0x1DE3504", Offset = "0x1DE3504", VA = "0x1DE3504")]
		private void UpdateDrone()
		{
		}

		[Token(Token = "0x6000FFD")]
		[Address(RVA = "0x1DE35B0", Offset = "0x1DE35B0", VA = "0x1DE35B0")]
		private drone GetDrone()
		{
			return null;
		}

		[Token(Token = "0x6000FFE")]
		[Address(RVA = "0x1DE36A0", Offset = "0x1DE36A0", VA = "0x1DE36A0")]
		public Vector3 get_target(Vector3 origin, float speed = -1f)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000FFF")]
		[Address(RVA = "0x1DE384C", Offset = "0x1DE384C", VA = "0x1DE384C")]
		public bool is_my_collider(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x6001000")]
		[Address(RVA = "0x1DE3A6C", Offset = "0x1DE3A6C", VA = "0x1DE3A6C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001001")]
		[Address(RVA = "0x1DE0250", Offset = "0x1DE0250", VA = "0x1DE0250")]
		protected void vars_init()
		{
		}

		[Token(Token = "0x6001002")]
		[Address(RVA = "0x1DE0ACC", Offset = "0x1DE0ACC", VA = "0x1DE0ACC")]
		protected void vars_push(Player other)
		{
		}

		[Token(Token = "0x6001003")]
		[Address(RVA = "0x1DE3B90", Offset = "0x1DE3B90", VA = "0x1DE3B90")]
		protected void vars_set(byte id, object value)
		{
		}

		[Token(Token = "0x6001004")]
		[Address(RVA = "0x1DE3DE0", Offset = "0x1DE3DE0", VA = "0x1DE3DE0")]
		[PunRPC]
		protected void vars_rpc(byte id, object value, [Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001005")]
		[Address(RVA = "0x1DE3F04", Offset = "0x1DE3F04", VA = "0x1DE3F04")]
		public mpAvatar()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class mpbullet : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004C2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849D14", Offset = "0x849D14")]
		private sealed class <>c
		{
			[Token(Token = "0x4002349")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400234A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__16_0;

			[Token(Token = "0x6001E32")]
			[Address(RVA = "0xD2CF4C", Offset = "0xD2CF4C", VA = "0xD2CF4C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E33")]
			[Address(RVA = "0xD2CF54", Offset = "0xD2CF54", VA = "0xD2CF54")]
			internal int <FixedUpdate>b__16_0(RaycastHit t1, RaycastHit t2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x40010DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject shell;

		[Token(Token = "0x40010DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public sound source;

		[Token(Token = "0x40010DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 origin;

		[Token(Token = "0x40010E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 target;

		[Token(Token = "0x40010E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float pass;

		[Token(Token = "0x40010E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float speed;

		[Token(Token = "0x40010E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int damage;

		[Token(Token = "0x40010E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private mpnpc npc;

		[Token(Token = "0x40010E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool valid;

		[Token(Token = "0x40010E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float maxlife;

		[Token(Token = "0x40010E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool hashit;

		[Token(Token = "0x40010E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 next;

		[Token(Token = "0x40010E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private List<RaycastHit> hits;

		[Token(Token = "0x40010EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool pass_target;

		[Token(Token = "0x6001007")]
		[Address(RVA = "0x1F0E03C", Offset = "0x1F0E03C", VA = "0x1F0E03C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001008")]
		[Address(RVA = "0x1F0E0DC", Offset = "0x1F0E0DC", VA = "0x1F0E0DC")]
		public void fire(Vector3 _origin, float _pass, Vector3 _target, float _speed, int _damage, mpnpc _npc)
		{
		}

		[Token(Token = "0x6001009")]
		[Address(RVA = "0x1F0E254", Offset = "0x1F0E254", VA = "0x1F0E254")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x600100A")]
		[Address(RVA = "0x1F0ED0C", Offset = "0x1F0ED0C", VA = "0x1F0ED0C")]
		public void explode(Collider col)
		{
		}

		[Token(Token = "0x600100B")]
		[Address(RVA = "0x1F0F3F0", Offset = "0x1F0F3F0", VA = "0x1F0F3F0")]
		public mpbullet()
		{
		}
	}
	[Token(Token = "0x20001F9")]
	public class mpButton : hitable
	{
		[Token(Token = "0x40010EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public mpLobby lobby;

		[Token(Token = "0x40010EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject hover;

		[Token(Token = "0x40010ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject selected;

		[Token(Token = "0x40010EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Collider col;

		[Token(Token = "0x40010EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public sound ClickSound;

		[Token(Token = "0x40010F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public base_event on_press;

		[Token(Token = "0x40010F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public mpbutton_event on_button;

		[Token(Token = "0x40010F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool hovered;

		[Token(Token = "0x40010F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private hand current_hand;

		[Token(Token = "0x40010F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string custom1;

		[Token(Token = "0x600100C")]
		[Address(RVA = "0x1DE4290", Offset = "0x1DE4290", VA = "0x1DE4290")]
		public bool is_selected()
		{
			return default(bool);
		}

		[Token(Token = "0x600100D")]
		[Address(RVA = "0x1DE432C", Offset = "0x1DE432C", VA = "0x1DE432C")]
		public void set_selected(bool state)
		{
		}

		[Token(Token = "0x600100E")]
		[Address(RVA = "0x1DE43CC", Offset = "0x1DE43CC", VA = "0x1DE43CC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600100F")]
		[Address(RVA = "0x1DE46D0", Offset = "0x1DE46D0", VA = "0x1DE46D0")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6001010")]
		[Address(RVA = "0x1DE476C", Offset = "0x1DE476C", VA = "0x1DE476C")]
		private void OnCollisionExit(Collision collision)
		{
		}

		[Token(Token = "0x6001011")]
		[Address(RVA = "0x1DE485C", Offset = "0x1DE485C", VA = "0x1DE485C", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6001012")]
		[Address(RVA = "0x1DE48D8", Offset = "0x1DE48D8", VA = "0x1DE48D8", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6001013")]
		[Address(RVA = "0x1DE4994", Offset = "0x1DE4994", VA = "0x1DE4994", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6001014")]
		[Address(RVA = "0x1DE4A34", Offset = "0x1DE4A34", VA = "0x1DE4A34")]
		public mpButton()
		{
		}
	}
	[Token(Token = "0x20001FA")]
	public class mpButtonShot : hitable
	{
		[Token(Token = "0x40010F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject hover;

		[Token(Token = "0x40010F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider col;

		[Token(Token = "0x40010F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public sound ClickSound;

		[Token(Token = "0x40010F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public base_event on_press;

		[Token(Token = "0x40010F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool hovered;

		[Token(Token = "0x6001015")]
		[Address(RVA = "0x1DE4A98", Offset = "0x1DE4A98", VA = "0x1DE4A98", Slot = "4")]
		public override void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int damage)
		{
		}

		[Token(Token = "0x6001016")]
		[Address(RVA = "0x1DE4AC8", Offset = "0x1DE4AC8", VA = "0x1DE4AC8", Slot = "5")]
		public override void hover_in(toolbase tool)
		{
		}

		[Token(Token = "0x6001017")]
		[Address(RVA = "0x1DE4B84", Offset = "0x1DE4B84", VA = "0x1DE4B84", Slot = "6")]
		public override void hover_out(toolbase tool)
		{
		}

		[Token(Token = "0x6001018")]
		[Address(RVA = "0x1DE4C24", Offset = "0x1DE4C24", VA = "0x1DE4C24")]
		public mpButtonShot()
		{
		}
	}
	[Token(Token = "0x20001FB")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x848318", Offset = "0x848318")]
	public class mpLevel : MonoBehaviourPunCallbacks
	{
		[Token(Token = "0x6001019")]
		[Address(RVA = "0x1DE5064", Offset = "0x1DE5064", VA = "0x1DE5064", Slot = "54")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x600101A")]
		[Address(RVA = "0x1DE50CC", Offset = "0x1DE50CC", VA = "0x1DE50CC")]
		public mpLevel()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class mpLobby : MonoBehaviour
	{
		[Token(Token = "0x20004C3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849D24", Offset = "0x849D24")]
		private sealed class <hide_error>d__23 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400234B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400234C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400234D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delay;

			[Token(Token = "0x400234E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public mpLobby <>4__this;

			[Token(Token = "0x170002FB")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E37")]
				[Address(RVA = "0xD2CE98", Offset = "0xD2CE98", VA = "0xD2CE98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FC")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E39")]
				[Address(RVA = "0xD2CEE0", Offset = "0xD2CEE0", VA = "0xD2CEE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E34")]
			[Address(RVA = "0xD2CDAC", Offset = "0xD2CDAC", VA = "0xD2CDAC")]
			[DebuggerHidden]
			public <hide_error>d__23(int <>1__state)
			{
			}

			[Token(Token = "0x6001E35")]
			[Address(RVA = "0xD2CDD8", Offset = "0xD2CDD8", VA = "0xD2CDD8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E36")]
			[Address(RVA = "0xD2CDDC", Offset = "0xD2CDDC", VA = "0xD2CDDC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E38")]
			[Address(RVA = "0xD2CEA0", Offset = "0xD2CEA0", VA = "0xD2CEA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004C4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849D34", Offset = "0x849D34")]
		private sealed class <>c
		{
			[Token(Token = "0x400234F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002350")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<MultiplayerRow> <>9__29_0;

			[Token(Token = "0x6001E3B")]
			[Address(RVA = "0xD2C000", Offset = "0xD2C000", VA = "0xD2C000")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E3C")]
			[Address(RVA = "0xD2C008", Offset = "0xD2C008", VA = "0xD2C008")]
			internal int <get_best_server>b__29_0(MultiplayerRow t1, MultiplayerRow t2)
			{
				return default(int);
			}
		}

		[Token(Token = "0x20004C5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849D44", Offset = "0x849D44")]
		private sealed class <get_server_data>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002351")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002352")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002353")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public mpMap mpmap;

			[Token(Token = "0x4002354")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string password;

			[Token(Token = "0x4002355")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public mpLobby <>4__this;

			[Token(Token = "0x4002356")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private UnityWebRequest <www>5__2;

			[Token(Token = "0x170002FD")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E41")]
				[Address(RVA = "0xD2CD5C", Offset = "0xD2CD5C", VA = "0xD2CD5C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x170002FE")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E43")]
				[Address(RVA = "0xD2CDA4", Offset = "0xD2CDA4", VA = "0xD2CDA4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E3D")]
			[Address(RVA = "0xD2C034", Offset = "0xD2C034", VA = "0xD2C034")]
			[DebuggerHidden]
			public <get_server_data>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001E3E")]
			[Address(RVA = "0xD2C060", Offset = "0xD2C060", VA = "0xD2C060", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E3F")]
			[Address(RVA = "0xD2C130", Offset = "0xD2C130", VA = "0xD2C130", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E40")]
			[Address(RVA = "0xD2C07C", Offset = "0xD2C07C", VA = "0xD2C07C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E42")]
			[Address(RVA = "0xD2CD64", Offset = "0xD2CD64", VA = "0xD2CD64", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40010FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject wrap;

		[Token(Token = "0x40010FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public tool_laptop laptop;

		[Token(Token = "0x40010FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public float last_button;

		[Token(Token = "0x40010FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public TextMeshProUGUI password_value;

		[Token(Token = "0x40010FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject password_box;

		[Token(Token = "0x40010FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public mpButton button_public;

		[Token(Token = "0x4001100")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public mpButton button_private;

		[Token(Token = "0x4001101")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject error_window;

		[Token(Token = "0x4001102")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI error_message;

		[Token(Token = "0x4001103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public GameObject admin_panel;

		[Token(Token = "0x4001104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public mpButton[] admin_regions;

		[Token(Token = "0x4001105")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public mpMap[] maps;

		[Token(Token = "0x4001106")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private int mapIndex;

		[Token(Token = "0x4001107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Coroutine hide_error_co;

		[Token(Token = "0x600101B")]
		[Address(RVA = "0x1DE50D4", Offset = "0x1DE50D4", VA = "0x1DE50D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x600101C")]
		[Address(RVA = "0x1DE555C", Offset = "0x1DE555C", VA = "0x1DE555C")]
		public void password_backspace()
		{
		}

		[Token(Token = "0x600101D")]
		[Address(RVA = "0x1DE57BC", Offset = "0x1DE57BC", VA = "0x1DE57BC")]
		public void password_digit(string digit)
		{
		}

		[Token(Token = "0x600101E")]
		[Address(RVA = "0x1DE584C", Offset = "0x1DE584C", VA = "0x1DE584C")]
		public void map_next()
		{
		}

		[Token(Token = "0x600101F")]
		[Address(RVA = "0x1DE58EC", Offset = "0x1DE58EC", VA = "0x1DE58EC")]
		public void map_prev()
		{
		}

		[Token(Token = "0x6001020")]
		[Address(RVA = "0x1DE54BC", Offset = "0x1DE54BC", VA = "0x1DE54BC")]
		public void type_private()
		{
		}

		[Token(Token = "0x6001021")]
		[Address(RVA = "0x1DE550C", Offset = "0x1DE550C", VA = "0x1DE550C")]
		public void type_public()
		{
		}

		[Token(Token = "0x6001022")]
		[Address(RVA = "0x1DE5994", Offset = "0x1DE5994", VA = "0x1DE5994")]
		private void set_error(string message, float delay = 5f)
		{
		}

		[Token(Token = "0x6001023")]
		[Address(RVA = "0x1DE5ACC", Offset = "0x1DE5ACC", VA = "0x1DE5ACC")]
		private void hide_error()
		{
		}

		[Token(Token = "0x6001024")]
		[Address(RVA = "0x1DE5A3C", Offset = "0x1DE5A3C", VA = "0x1DE5A3C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859B30", Offset = "0x859B30")]
		private IEnumerator hide_error(float delay)
		{
			return null;
		}

		[Token(Token = "0x6001025")]
		[Address(RVA = "0x1DE5B10", Offset = "0x1DE5B10", VA = "0x1DE5B10")]
		public void play()
		{
		}

		[Token(Token = "0x6001026")]
		[Address(RVA = "0x1DE61A8", Offset = "0x1DE61A8", VA = "0x1DE61A8")]
		private bool is_valid_map(string code)
		{
			return default(bool);
		}

		[Token(Token = "0x6001027")]
		[Address(RVA = "0x1DE6258", Offset = "0x1DE6258", VA = "0x1DE6258")]
		private string get_map_scene(string code)
		{
			return null;
		}

		[Token(Token = "0x6001028")]
		[Address(RVA = "0x1DE6348", Offset = "0x1DE6348", VA = "0x1DE6348")]
		private bool start_multiplayer(string scene_name, string password, string server)
		{
			return default(bool);
		}

		[Token(Token = "0x6001029")]
		[Address(RVA = "0x1DE66E8", Offset = "0x1DE66E8", VA = "0x1DE66E8")]
		private string get_best_ping()
		{
			return null;
		}

		[Token(Token = "0x600102A")]
		[Address(RVA = "0x1DE680C", Offset = "0x1DE680C", VA = "0x1DE680C")]
		private bool get_best_server(mpMap mpmap, string password, MultiplayerList data)
		{
			return default(bool);
		}

		[Token(Token = "0x600102B")]
		[Address(RVA = "0x1DE60F8", Offset = "0x1DE60F8", VA = "0x1DE60F8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859B98", Offset = "0x859B98")]
		private IEnumerator get_server_data(mpMap mpmap, string password)
		{
			return null;
		}

		[Token(Token = "0x600102C")]
		[Address(RVA = "0x1DE535C", Offset = "0x1DE535C", VA = "0x1DE535C")]
		private void UpdateSelectedRegion()
		{
		}

		[Token(Token = "0x600102D")]
		[Address(RVA = "0x1DE70A0", Offset = "0x1DE70A0", VA = "0x1DE70A0")]
		public void admin_region(mpButton button)
		{
		}

		[Token(Token = "0x600102E")]
		[Address(RVA = "0x1DE715C", Offset = "0x1DE715C", VA = "0x1DE715C")]
		public mpLobby()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FD")]
	public class MultiplayerRow
	{
		[Token(Token = "0x4001108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string server;

		[Token(Token = "0x4001109")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string level;

		[Token(Token = "0x400110A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int players;

		[Token(Token = "0x400110B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string password;

		[Token(Token = "0x600102F")]
		[Address(RVA = "0xCF1280", Offset = "0xCF1280", VA = "0xCF1280")]
		public MultiplayerRow()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FE")]
	public class MultiplayerList
	{
		[Token(Token = "0x400110C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MultiplayerRow[] rows;

		[Token(Token = "0x6001030")]
		[Address(RVA = "0xCF1278", Offset = "0xCF1278", VA = "0xCF1278")]
		public MultiplayerList()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public class mpMap : MonoBehaviour
	{
		[Token(Token = "0x400110D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string code;

		[Token(Token = "0x400110E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string scene_name;

		[Token(Token = "0x400110F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string title;

		[Token(Token = "0x4001110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public string subtitle;

		[Token(Token = "0x4001111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public int max_players;

		[Token(Token = "0x4001112")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public bool friendly_fire;

		[Token(Token = "0x4001113")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public TextMeshProUGUI input_title;

		[Token(Token = "0x4001114")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public TextMeshProUGUI input_subtitle;

		[Token(Token = "0x4001115")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public TextMeshProUGUI input_max_players;

		[Token(Token = "0x4001116")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public TextMeshProUGUI input_friendly_fire;

		[Token(Token = "0x4001117")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public string var_best_score;

		[Token(Token = "0x4001118")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public string var_best_wave;

		[Token(Token = "0x4001119")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public TextMeshProUGUI input_best_score;

		[Token(Token = "0x400111A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public TextMeshProUGUI input_best_wave;

		[Token(Token = "0x400111B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject map_info;

		[Token(Token = "0x400111C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool soon;

		[Token(Token = "0x6001031")]
		[Address(RVA = "0x1DE7164", Offset = "0x1DE7164", VA = "0x1DE7164")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001032")]
		[Address(RVA = "0x1DE7448", Offset = "0x1DE7448", VA = "0x1DE7448")]
		public mpMap()
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class mpnpc : MonoBehaviourPunCallbacks, IPunObservable, IPunInstantiateMagicCallback, IPunOwnershipCallbacks
	{
		[Token(Token = "0x20004C6")]
		public enum behaviors
		{
			[Token(Token = "0x4002358")]
			guard,
			[Token(Token = "0x4002359")]
			patrol,
			[Token(Token = "0x400235A")]
			pursuit
		}

		[Token(Token = "0x20004C7")]
		public enum states
		{
			[Token(Token = "0x400235C")]
			idle,
			[Token(Token = "0x400235D")]
			attack,
			[Token(Token = "0x400235E")]
			reload,
			[Token(Token = "0x400235F")]
			walk,
			[Token(Token = "0x4002360")]
			run,
			[Token(Token = "0x4002361")]
			guard,
			[Token(Token = "0x4002362")]
			crouch,
			[Token(Token = "0x4002363")]
			jump,
			[Token(Token = "0x4002364")]
			air,
			[Token(Token = "0x4002365")]
			land,
			[Token(Token = "0x4002366")]
			climb,
			[Token(Token = "0x4002367")]
			hits,
			[Token(Token = "0x4002368")]
			kills,
			[Token(Token = "0x4002369")]
			getup,
			[Token(Token = "0x400236A")]
			idles,
			[Token(Token = "0x400236B")]
			talk,
			[Token(Token = "0x400236C")]
			salute,
			[Token(Token = "0x400236D")]
			yes,
			[Token(Token = "0x400236E")]
			no,
			[Token(Token = "0x400236F")]
			cry,
			[Token(Token = "0x4002370")]
			laugh,
			[Token(Token = "0x4002371")]
			happy,
			[Token(Token = "0x4002372")]
			angry,
			[Token(Token = "0x4002373")]
			dance,
			[Token(Token = "0x4002374")]
			greet,
			[Token(Token = "0x4002375")]
			knock,
			[Token(Token = "0x4002376")]
			frustration,
			[Token(Token = "0x4002377")]
			lying,
			[Token(Token = "0x4002378")]
			pickup,
			[Token(Token = "0x4002379")]
			meditate,
			[Token(Token = "0x400237A")]
			chair,
			[Token(Token = "0x400237B")]
			chair_talk,
			[Token(Token = "0x400237C")]
			chair_cry,
			[Token(Token = "0x400237D")]
			chair_laugh,
			[Token(Token = "0x400237E")]
			chair_typing,
			[Token(Token = "0x400237F")]
			melee,
			[Token(Token = "0x4002380")]
			dance2
		}

		[Token(Token = "0x20004C8")]
		public enum directions
		{
			[Token(Token = "0x4002382")]
			none,
			[Token(Token = "0x4002383")]
			front,
			[Token(Token = "0x4002384")]
			back,
			[Token(Token = "0x4002385")]
			right,
			[Token(Token = "0x4002386")]
			left
		}

		[Token(Token = "0x20004C9")]
		public enum looktype
		{
			[Token(Token = "0x4002388")]
			look,
			[Token(Token = "0x4002389")]
			aim
		}

		[Token(Token = "0x20004CA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849D54", Offset = "0x849D54")]
		private sealed class <JumpToHandler>d__83 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400238A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400238B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400238C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public mpnpc <>4__this;

			[Token(Token = "0x400238D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Vector3 target;

			[Token(Token = "0x400238E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private Vector3 <origin>5__2;

			[Token(Token = "0x400238F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <height>5__3;

			[Token(Token = "0x4002390")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private float <jump_pass>5__4;

			[Token(Token = "0x4002391")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <jump_duration>5__5;

			[Token(Token = "0x4002392")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <speed_turn_factor>5__6;

			[Token(Token = "0x4002393")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private bool <jump_land>5__7;

			[Token(Token = "0x4002394")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
			private int <starthealth>5__8;

			[Token(Token = "0x170002FF")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E47")]
				[Address(RVA = "0xD2D69C", Offset = "0xD2D69C", VA = "0xD2D69C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000300")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E49")]
				[Address(RVA = "0xD2D6E4", Offset = "0xD2D6E4", VA = "0xD2D6E4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E44")]
			[Address(RVA = "0xD2D08C", Offset = "0xD2D08C", VA = "0xD2D08C")]
			[DebuggerHidden]
			public <JumpToHandler>d__83(int <>1__state)
			{
			}

			[Token(Token = "0x6001E45")]
			[Address(RVA = "0xD2D0B8", Offset = "0xD2D0B8", VA = "0xD2D0B8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E46")]
			[Address(RVA = "0xD2D0BC", Offset = "0xD2D0BC", VA = "0xD2D0BC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E48")]
			[Address(RVA = "0xD2D6A4", Offset = "0xD2D6A4", VA = "0xD2D6A4", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x20004CB")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849D64", Offset = "0x849D64")]
		private sealed class <>c
		{
			[Token(Token = "0x4002395")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002396")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Comparison<RaycastHit> <>9__165_0;

			[Token(Token = "0x4002397")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Comparison<RaycastHit> <>9__166_0;

			[Token(Token = "0x6001E4B")]
			[Address(RVA = "0xD2CFFC", Offset = "0xD2CFFC", VA = "0xD2CFFC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E4C")]
			[Address(RVA = "0xD2D004", Offset = "0xD2D004", VA = "0xD2D004")]
			internal int <ai_inrange>b__165_0(RaycastHit a, RaycastHit b)
			{
				return default(int);
			}

			[Token(Token = "0x6001E4D")]
			[Address(RVA = "0xD2D048", Offset = "0xD2D048", VA = "0xD2D048")]
			internal int <ai_sensor>b__166_0(RaycastHit a, RaycastHit b)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400111D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851EC8", Offset = "0x851EC8")]
		public int health;

		[Token(Token = "0x400111E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int weapon_clip;

		[Token(Token = "0x400111F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int weapon_bullets;

		[Token(Token = "0x4001120")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float weapon_margin;

		[Token(Token = "0x4001121")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int weapon_damage;

		[Token(Token = "0x4001122")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public int weapon_speed;

		[Token(Token = "0x4001123")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float weapon_accuracy;

		[Token(Token = "0x4001124")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public byte weapon_range;

		[Token(Token = "0x4001125")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
		public bool runner;

		[Token(Token = "0x4001126")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public behaviors behavior;

		[Token(Token = "0x4001127")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public mpAvatar target;

		[Token(Token = "0x4001128")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int score_hit;

		[Token(Token = "0x4001129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int score_headshot;

		[Token(Token = "0x400112A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int score_onair;

		[Token(Token = "0x400112B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int score_onair_headshot;

		[Token(Token = "0x400112C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851F00", Offset = "0x851F00")]
		[SerializeField]
		private mp_weapon WeaponSetter;

		[Token(Token = "0x400112D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		[HideInInspector]
		public mp_weapon weapon;

		[Token(Token = "0x400112E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float weapon_scale;

		[Token(Token = "0x400112F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public mp_weapon[] weapons;

		[Token(Token = "0x4001130")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851F84", Offset = "0x851F84")]
		public mpbullet bullet;

		[Token(Token = "0x4001131")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject wrap;

		[Token(Token = "0x4001132")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Animator ani;

		[Token(Token = "0x4001133")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public RuntimeAnimatorController baseAnimatorController;

		[Token(Token = "0x4001134")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public sound sound;

		[Token(Token = "0x4001135")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public ragdoll ragdoll;

		[Token(Token = "0x4001136")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public NavMeshAgent agent;

		[Token(Token = "0x4001137")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Transform right_hand;

		[Token(Token = "0x4001138")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public Transform left_hand;

		[Token(Token = "0x4001139")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x851FBC", Offset = "0x851FBC")]
		public int mpid;

		[Token(Token = "0x400113A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject default_parent;

		[Token(Token = "0x400113B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public GameObject create_parent;

		[Token(Token = "0x400113C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 lastpos;

		[Token(Token = "0x400113D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private Vector3 lastrot;

		[Token(Token = "0x400113E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Vector3 toPosOld;

		[Token(Token = "0x400113F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private Vector3 toPos;

		[Token(Token = "0x4001140")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Quaternion toRot;

		[Token(Token = "0x4001141")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private float syncspeed;

		[Token(Token = "0x4001142")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11C")]
		private bool waitting_for_control;

		[Token(Token = "0x4001143")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		private float needsUpdate;

		[Token(Token = "0x4001144")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x124")]
		private float lasthit;

		[Token(Token = "0x4001145")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private GameObject headshoot_head;

		[Token(Token = "0x4001146")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private float remove_time;

		[Token(Token = "0x4001147")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x134")]
		private bool win;

		[Token(Token = "0x4001148")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private float weapon_speed_factor;

		[Token(Token = "0x4001149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private ragdoll_bone head;

		[Token(Token = "0x400114A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		private int shoots_balance;

		[Token(Token = "0x400114B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		private mpspawn spawn;

		[Token(Token = "0x400114C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		private bool visual_killed;

		[Token(Token = "0x400114D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		private float fixkill_time;

		[Token(Token = "0x400114E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		private bool onjump;

		[Token(Token = "0x400114F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		private states state;

		[Token(Token = "0x4001150")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		private directions dir;

		[Token(Token = "0x4001151")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		private bool ani_need_update;

		[Token(Token = "0x4001152")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		private int ani_frame_update;

		[Token(Token = "0x4001153")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		private states last_frame_state;

		[Token(Token = "0x4001154")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		private int state_index;

		[Token(Token = "0x4001155")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x17C")]
		private states last_state;

		[Token(Token = "0x4001156")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		private int last_state_val;

		[Token(Token = "0x4001157")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x184")]
		private int last_state_sync;

		[Token(Token = "0x4001158")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		private bool look;

		[Token(Token = "0x4001159")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x189")]
		private bool look_transform;

		[Token(Token = "0x400115A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18C")]
		private looktype lookmode;

		[Token(Token = "0x400115B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		private mpAvatar look_target;

		[Token(Token = "0x400115C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		private float look_target_last;

		[Token(Token = "0x400115D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19C")]
		private Vector3 head_forward_offset;

		[Token(Token = "0x400115E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		private float look_transform_offset;

		[Token(Token = "0x400115F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1AC")]
		private float lookheadweight;

		[Token(Token = "0x4001160")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		private float lookbodyweight;

		[Token(Token = "0x4001161")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B4")]
		private float lookspeed;

		[Token(Token = "0x4001162")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		protected byte next;

		[Token(Token = "0x4001163")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		protected Dictionary<byte, mpVar> varsmap;

		[Token(Token = "0x4001164")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		public mpBool activated;

		[Token(Token = "0x4001165")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		public mpByte target_no;

		[Token(Token = "0x4001166")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private bool ai_initialize;

		[Token(Token = "0x4001167")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D9")]
		private bool ai_combat;

		[Token(Token = "0x4001168")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1DC")]
		private float next_shoot;

		[Token(Token = "0x4001169")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private float next_reload;

		[Token(Token = "0x400116A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E4")]
		private float speed_guard;

		[Token(Token = "0x400116B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private float speed_walk;

		[Token(Token = "0x400116C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1EC")]
		private float speed_run;

		[Token(Token = "0x400116D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private float speed_turn;

		[Token(Token = "0x400116E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F4")]
		private float ai_range;

		[Token(Token = "0x400116F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private bool inrange_last;

		[Token(Token = "0x4001170")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1FC")]
		private float inrange_next;

		[Token(Token = "0x4001171")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private float remaining_distance_last;

		[Token(Token = "0x4001172")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x204")]
		private float remaining_distance_next;

		[Token(Token = "0x4001173")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private float ai_destination_last;

		[Token(Token = "0x4001174")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20C")]
		private float ai_target_last;

		[Token(Token = "0x4001175")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		private float sensor_distance;

		[Token(Token = "0x4001176")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x214")]
		private float sensor_angle;

		[Token(Token = "0x4001177")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		private float sensor_height;

		[Token(Token = "0x6001033")]
		[Address(RVA = "0x1F0F500", Offset = "0x1F0F500", VA = "0x1F0F500", Slot = "59")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001034")]
		[Address(RVA = "0x1F0F7AC", Offset = "0x1F0F7AC", VA = "0x1F0F7AC", Slot = "60")]
		public virtual void Update()
		{
		}

		[Token(Token = "0x6001035")]
		[Address(RVA = "0x1F0F91C", Offset = "0x1F0F91C", VA = "0x1F0F91C")]
		private void EditorActivate()
		{
		}

		[Token(Token = "0x6001036")]
		[Address(RVA = "0x1F0FA8C", Offset = "0x1F0FA8C", VA = "0x1F0FA8C")]
		public void activate(int spawn_id)
		{
		}

		[Token(Token = "0x6001037")]
		[Address(RVA = "0x1F0FBD4", Offset = "0x1F0FBD4", VA = "0x1F0FBD4")]
		[PunRPC]
		public void activate_rpc(int spawn_id, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001038")]
		[Address(RVA = "0x1F0FEE4", Offset = "0x1F0FEE4", VA = "0x1F0FEE4")]
		private void activate_update()
		{
		}

		[Token(Token = "0x6001039")]
		[Address(RVA = "0x1F0FFB4", Offset = "0x1F0FFB4", VA = "0x1F0FFB4", Slot = "61")]
		public virtual void create()
		{
		}

		[Token(Token = "0x600103A")]
		[Address(RVA = "0x1F10090", Offset = "0x1F10090", VA = "0x1F10090", Slot = "62")]
		public virtual void destroy()
		{
		}

		[Token(Token = "0x600103B")]
		[Address(RVA = "0x1F10110", Offset = "0x1F10110", VA = "0x1F10110", Slot = "63")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x600103C")]
		[Address(RVA = "0x1F0F810", Offset = "0x1F0F810", VA = "0x1F0F810")]
		public void remove()
		{
		}

		[Token(Token = "0x600103D")]
		[Address(RVA = "0x1F10230", Offset = "0x1F10230", VA = "0x1F10230")]
		private bool onair()
		{
			return default(bool);
		}

		[Token(Token = "0x600103E")]
		[Address(RVA = "0x1F0E9DC", Offset = "0x1F0E9DC", VA = "0x1F0E9DC")]
		public bool isme(Collider col)
		{
			return default(bool);
		}

		[Token(Token = "0x600103F")]
		[Address(RVA = "0x1F0F830", Offset = "0x1F0F830", VA = "0x1F0F830")]
		private void fixkill_update()
		{
		}

		[Token(Token = "0x6001040")]
		[Address(RVA = "0x1F10238", Offset = "0x1F10238", VA = "0x1F10238")]
		private void fixkill()
		{
		}

		[Token(Token = "0x6001041")]
		[Address(RVA = "0x1F10288", Offset = "0x1F10288", VA = "0x1F10288")]
		public void hit(Collider hitcol, Vector3 point, Vector3 normal, Vector3 direction, float force, int npcdamage, bool headshoot = false)
		{
		}

		[Token(Token = "0x6001042")]
		[Address(RVA = "0x1F10968", Offset = "0x1F10968", VA = "0x1F10968")]
		private bool headshoot_visual(bool checkOnly = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001043")]
		[Address(RVA = "0x1F113F0", Offset = "0x1F113F0", VA = "0x1F113F0")]
		public void win_visual()
		{
		}

		[Token(Token = "0x6001044")]
		[Address(RVA = "0x1F11054", Offset = "0x1F11054", VA = "0x1F11054")]
		private void hit_visual()
		{
		}

		[Token(Token = "0x6001045")]
		[Address(RVA = "0x1F111B0", Offset = "0x1F111B0", VA = "0x1F111B0")]
		private void kill_visual(Vector3 point, Vector3 normal, Vector3 direction, float force, bool headshoot, bool isonair)
		{
		}

		[Token(Token = "0x6001046")]
		[Address(RVA = "0x1F114E4", Offset = "0x1F114E4", VA = "0x1F114E4")]
		[PunRPC]
		public void hit_visual_rpc(int healthbefore, int npcdamage, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001047")]
		[Address(RVA = "0x1F11648", Offset = "0x1F11648", VA = "0x1F11648")]
		[PunRPC]
		public void kill_visual_rpc(Vector3 point, Vector3 normal, Vector3 direction, float force, bool headshoot, bool isonair, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001048")]
		[Address(RVA = "0x1F117C4", Offset = "0x1F117C4", VA = "0x1F117C4", Slot = "56")]
		public void OnOwnershipRequest(PhotonView targetView, Player requestingPlayer)
		{
		}

		[Token(Token = "0x6001049")]
		[Address(RVA = "0x1F11890", Offset = "0x1F11890", VA = "0x1F11890", Slot = "57")]
		public void OnOwnershipTransfered(PhotonView targetView, Player previousOwner)
		{
		}

		[Token(Token = "0x600104A")]
		[Address(RVA = "0x1F11894", Offset = "0x1F11894", VA = "0x1F11894", Slot = "58")]
		public void OnOwnershipTransferFailed(PhotonView targetView, Player senderOfFailedRequest)
		{
		}

		[Token(Token = "0x600104B")]
		[Address(RVA = "0x1F11898", Offset = "0x1F11898", VA = "0x1F11898", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x600104C")]
		[Address(RVA = "0x1F11C04", Offset = "0x1F11C04", VA = "0x1F11C04")]
		[PunRPC]
		public void sync_request(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600104D")]
		[Address(RVA = "0x1F11E88", Offset = "0x1F11E88", VA = "0x1F11E88")]
		[PunRPC]
		public void sync(int _health, Vector3 pos, float angle, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600104E")]
		[Address(RVA = "0x1F120AC", Offset = "0x1F120AC", VA = "0x1F120AC", Slot = "64")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600104F")]
		[Address(RVA = "0x1F12500", Offset = "0x1F12500", VA = "0x1F12500", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001050")]
		[Address(RVA = "0x1F12B9C", Offset = "0x1F12B9C", VA = "0x1F12B9C", Slot = "65")]
		public virtual void LocalFixedUpdate()
		{
		}

		[Token(Token = "0x6001051")]
		[Address(RVA = "0x1F12C10", Offset = "0x1F12C10", VA = "0x1F12C10", Slot = "66")]
		public virtual void RemoteFixedUpdate()
		{
		}

		[Token(Token = "0x6001052")]
		[Address(RVA = "0x1F12DB8", Offset = "0x1F12DB8", VA = "0x1F12DB8", Slot = "67")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x6001053")]
		[Address(RVA = "0x1F12FCC", Offset = "0x1F12FCC", VA = "0x1F12FCC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x859C50", Offset = "0x859C50")]
		private IEnumerator JumpToHandler(Vector3 target)
		{
			return null;
		}

		[Token(Token = "0x6001054")]
		[Address(RVA = "0x1F13070", Offset = "0x1F13070", VA = "0x1F13070")]
		[PunRPC]
		public void sync_jump_rpc(byte _state, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001055")]
		[Address(RVA = "0x1F12E38", Offset = "0x1F12E38", VA = "0x1F12E38")]
		private void update_animator()
		{
		}

		[Token(Token = "0x6001056")]
		[Address(RVA = "0x1F12B1C", Offset = "0x1F12B1C", VA = "0x1F12B1C")]
		private void update_animator_state(int val)
		{
		}

		[Token(Token = "0x6001057")]
		[Address(RVA = "0x1F138D4", Offset = "0x1F138D4", VA = "0x1F138D4")]
		private void update_state()
		{
		}

		[Token(Token = "0x6001058")]
		[Address(RVA = "0x1F114B8", Offset = "0x1F114B8", VA = "0x1F114B8")]
		private void update_state(states _state, directions _dir)
		{
		}

		[Token(Token = "0x6001059")]
		[Address(RVA = "0x1F138E0", Offset = "0x1F138E0", VA = "0x1F138E0")]
		private int set_last_animator_state(states _state, int val, int val_max = -1)
		{
			return default(int);
		}

		[Token(Token = "0x600105A")]
		[Address(RVA = "0x1F131F8", Offset = "0x1F131F8", VA = "0x1F131F8")]
		private int get_animator_state()
		{
			return default(int);
		}

		[Token(Token = "0x600105B")]
		[Address(RVA = "0x1F13958", Offset = "0x1F13958", VA = "0x1F13958")]
		public void animator_state_ended()
		{
		}

		[Token(Token = "0x600105C")]
		[Address(RVA = "0x1F13A70", Offset = "0x1F13A70", VA = "0x1F13A70")]
		private int look_level()
		{
			return default(int);
		}

		[Token(Token = "0x600105D")]
		[Address(RVA = "0x1F13B10", Offset = "0x1F13B10", VA = "0x1F13B10")]
		private mpAvatar get_look_target()
		{
			return null;
		}

		[Token(Token = "0x600105E")]
		[Address(RVA = "0x1F13BF4", Offset = "0x1F13BF4", VA = "0x1F13BF4")]
		public void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x600105F")]
		[Address(RVA = "0x1F14098", Offset = "0x1F14098", VA = "0x1F14098")]
		public Quaternion GetMovementRotation(Vector3 target, directions dir)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001060")]
		[Address(RVA = "0x1F0D6A4", Offset = "0x1F0D6A4", VA = "0x1F0D6A4")]
		public void SetAnimator(bool toWeapon)
		{
		}

		[Token(Token = "0x6001061")]
		[Address(RVA = "0x1F1423C", Offset = "0x1F1423C", VA = "0x1F1423C")]
		public void Editor_SetWeapon()
		{
		}

		[Token(Token = "0x6001062")]
		[Address(RVA = "0x1F14428", Offset = "0x1F14428", VA = "0x1F14428")]
		public void Editor_ClearWeapon()
		{
		}

		[Token(Token = "0x6001063")]
		[Address(RVA = "0x1F14244", Offset = "0x1F14244", VA = "0x1F14244")]
		public void SetWeapon(mp_weapon newWeapon)
		{
		}

		[Token(Token = "0x6001064")]
		[Address(RVA = "0x1F14460", Offset = "0x1F14460", VA = "0x1F14460")]
		private void shoot_add(bool ishit)
		{
		}

		[Token(Token = "0x6001065")]
		[Address(RVA = "0x1F0F274", Offset = "0x1F0F274", VA = "0x1F0F274")]
		public void shoot_hit()
		{
		}

		[Token(Token = "0x6001066")]
		[Address(RVA = "0x1F144AC", Offset = "0x1F144AC", VA = "0x1F144AC")]
		private void shoot_request()
		{
		}

		[Token(Token = "0x6001067")]
		[Address(RVA = "0x1F14844", Offset = "0x1F14844", VA = "0x1F14844")]
		private void shoot(int start, Vector3 pos, int _speed, int damage)
		{
		}

		[Token(Token = "0x6001068")]
		[Address(RVA = "0x1F14B98", Offset = "0x1F14B98", VA = "0x1F14B98")]
		[PunRPC]
		public void shoot_hit_rpc(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001069")]
		[Address(RVA = "0x1F14B9C", Offset = "0x1F14B9C", VA = "0x1F14B9C")]
		[PunRPC]
		public void shoot_request_rpc(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600106A")]
		[Address(RVA = "0x1F14C3C", Offset = "0x1F14C3C", VA = "0x1F14C3C")]
		[PunRPC]
		public void shoot_create(int start, Vector3 pos, int speed, int damage, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600106B")]
		[Address(RVA = "0x1F14D24", Offset = "0x1F14D24", VA = "0x1F14D24", Slot = "68")]
		protected virtual void vars_init()
		{
		}

		[Token(Token = "0x600106C")]
		[Address(RVA = "0x1F118C0", Offset = "0x1F118C0", VA = "0x1F118C0")]
		protected void vars_push(Player other)
		{
		}

		[Token(Token = "0x600106D")]
		[Address(RVA = "0x1F15000", Offset = "0x1F15000", VA = "0x1F15000")]
		protected void vars_set(byte id, object value)
		{
		}

		[Token(Token = "0x600106E")]
		[Address(RVA = "0x1F15254", Offset = "0x1F15254", VA = "0x1F15254")]
		[PunRPC]
		protected void vars_rpc(byte id, object value, [Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600106F")]
		[Address(RVA = "0x1F1537C", Offset = "0x1F1537C", VA = "0x1F1537C")]
		public void SetTarget(mpAvatar avatar)
		{
		}

		[Token(Token = "0x6001070")]
		[Address(RVA = "0x1F15434", Offset = "0x1F15434", VA = "0x1F15434")]
		public void UpdateTarget()
		{
		}

		[Token(Token = "0x6001071")]
		[Address(RVA = "0x1F155F0", Offset = "0x1F155F0", VA = "0x1F155F0")]
		private void ai_init()
		{
		}

		[Token(Token = "0x6001072")]
		[Address(RVA = "0x1F156C4", Offset = "0x1F156C4", VA = "0x1F156C4")]
		private bool ai_place()
		{
			return default(bool);
		}

		[Token(Token = "0x6001073")]
		[Address(RVA = "0x1F12E9C", Offset = "0x1F12E9C", VA = "0x1F12E9C")]
		private void ai_update()
		{
		}

		[Token(Token = "0x6001074")]
		[Address(RVA = "0x1F159A0", Offset = "0x1F159A0", VA = "0x1F159A0")]
		private void ai_behavior()
		{
		}

		[Token(Token = "0x6001075")]
		[Address(RVA = "0x1F15FA4", Offset = "0x1F15FA4", VA = "0x1F15FA4")]
		private void ai_animation(bool moving)
		{
		}

		[Token(Token = "0x6001076")]
		[Address(RVA = "0x1F16DCC", Offset = "0x1F16DCC", VA = "0x1F16DCC")]
		private void ai_reload()
		{
		}

		[Token(Token = "0x6001077")]
		[Address(RVA = "0x1F16940", Offset = "0x1F16940", VA = "0x1F16940")]
		private void ai_shoot()
		{
		}

		[Token(Token = "0x6001078")]
		[Address(RVA = "0x1F157F0", Offset = "0x1F157F0", VA = "0x1F157F0")]
		private bool ai_move()
		{
			return default(bool);
		}

		[Token(Token = "0x6001079")]
		[Address(RVA = "0x1F16E44", Offset = "0x1F16E44", VA = "0x1F16E44")]
		private bool ai_inrange()
		{
			return default(bool);
		}

		[Token(Token = "0x600107A")]
		[Address(RVA = "0x1F17448", Offset = "0x1F17448", VA = "0x1F17448")]
		private mpAvatar ai_sensor()
		{
			return null;
		}

		[Token(Token = "0x600107B")]
		[Address(RVA = "0x1F16268", Offset = "0x1F16268", VA = "0x1F16268")]
		private void ai_target()
		{
		}

		[Token(Token = "0x600107C")]
		[Address(RVA = "0x1F16748", Offset = "0x1F16748", VA = "0x1F16748")]
		private void ai_destination()
		{
		}

		[Token(Token = "0x600107D")]
		[Address(RVA = "0x1F17B38", Offset = "0x1F17B38", VA = "0x1F17B38")]
		public void ai_noise(Vector3 position, float range)
		{
		}

		[Token(Token = "0x600107E")]
		[Address(RVA = "0x1F16BD8", Offset = "0x1F16BD8", VA = "0x1F16BD8")]
		private directions get_agent_direction()
		{
			return default(directions);
		}

		[Token(Token = "0x600107F")]
		[Address(RVA = "0x1F17264", Offset = "0x1F17264", VA = "0x1F17264")]
		private float get_remaining_distance()
		{
			return default(float);
		}

		[Token(Token = "0x6001080")]
		[Address(RVA = "0x1F17C44", Offset = "0x1F17C44", VA = "0x1F17C44")]
		public mpnpc()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class mpnpcwrap : MonoBehaviour
	{
		[Token(Token = "0x4001178")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public mpnpc npc;

		[Token(Token = "0x6001082")]
		[Address(RVA = "0x1F17E34", Offset = "0x1F17E34", VA = "0x1F17E34")]
		public void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x6001083")]
		[Address(RVA = "0x1F17E50", Offset = "0x1F17E50", VA = "0x1F17E50")]
		public void animator_state_ended()
		{
		}

		[Token(Token = "0x6001084")]
		[Address(RVA = "0x1F17E6C", Offset = "0x1F17E6C", VA = "0x1F17E6C")]
		public mpnpcwrap()
		{
		}
	}
	[Token(Token = "0x2000202")]
	public class mpPointer : MonoBehaviour
	{
		[Token(Token = "0x4001179")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool only_if_other_hand_holding;

		[Token(Token = "0x6001085")]
		[Address(RVA = "0x1DE74CC", Offset = "0x1DE74CC", VA = "0x1DE74CC")]
		private void OnTriggerStay(Collider other)
		{
		}

		[Token(Token = "0x6001086")]
		[Address(RVA = "0x1DE765C", Offset = "0x1DE765C", VA = "0x1DE765C")]
		public mpPointer()
		{
		}
	}
	[Token(Token = "0x2000203")]
	public class mpspawn : MonoBehaviour
	{
		[Token(Token = "0x400117A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int spawn_id;

		[Token(Token = "0x400117B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<mpspawn> connections;

		[Token(Token = "0x6001087")]
		[Address(RVA = "0x1F17E74", Offset = "0x1F17E74", VA = "0x1F17E74")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001088")]
		[Address(RVA = "0x1F17E9C", Offset = "0x1F17E9C", VA = "0x1F17E9C")]
		private void SetIds()
		{
		}

		[Token(Token = "0x6001089")]
		[Address(RVA = "0x1F0FE20", Offset = "0x1F0FE20", VA = "0x1F0FE20")]
		public static mpspawn get_by_id(int id)
		{
			return null;
		}

		[Token(Token = "0x600108A")]
		[Address(RVA = "0x1F18044", Offset = "0x1F18044", VA = "0x1F18044")]
		private void ToggleVisible()
		{
		}

		[Token(Token = "0x600108B")]
		[Address(RVA = "0x1F18154", Offset = "0x1F18154", VA = "0x1F18154")]
		private void SnapToFloor()
		{
		}

		[Token(Token = "0x600108C")]
		[Address(RVA = "0x1F18330", Offset = "0x1F18330", VA = "0x1F18330")]
		private void ClearConnections()
		{
		}

		[Token(Token = "0x600108D")]
		[Address(RVA = "0x1F18530", Offset = "0x1F18530", VA = "0x1F18530")]
		private void FixBrokenConnections()
		{
		}

		[Token(Token = "0x600108E")]
		[Address(RVA = "0x1F18704", Offset = "0x1F18704", VA = "0x1F18704")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x600108F")]
		[Address(RVA = "0x1F18998", Offset = "0x1F18998", VA = "0x1F18998")]
		private float get_score_avatar(mpAvatar avatar)
		{
			return default(float);
		}

		[Token(Token = "0x6001090")]
		[Address(RVA = "0x1F18AD8", Offset = "0x1F18AD8", VA = "0x1F18AD8")]
		public float get_score()
		{
			return default(float);
		}

		[Token(Token = "0x6001091")]
		[Address(RVA = "0x1F18C4C", Offset = "0x1F18C4C", VA = "0x1F18C4C")]
		public mpspawn()
		{
		}
	}
	[Token(Token = "0x2000204")]
	public class mp_drone : MonoBehaviourPunCallbacks, IPunObservable, IPunInstantiateMagicCallback, IPunOwnershipCallbacks
	{
		[Token(Token = "0x400117C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public drone drone;

		[Token(Token = "0x400117D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastpos;

		[Token(Token = "0x400117E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastrot;

		[Token(Token = "0x400117F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 toPosOld;

		[Token(Token = "0x4001180")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 toPos;

		[Token(Token = "0x4001181")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion toRot;

		[Token(Token = "0x4001182")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float speed;

		[Token(Token = "0x4001183")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public int mpid;

		[Token(Token = "0x4001184")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float needsUpdate;

		[Token(Token = "0x4001185")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float RequestOwnershipLast;

		[Token(Token = "0x4001186")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public NavMeshObstacle agent;

		[Token(Token = "0x4001187")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject default_parent;

		[Token(Token = "0x4001188")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public GameObject create_parent;

		[Token(Token = "0x4001189")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected byte next;

		[Token(Token = "0x400118A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected Dictionary<byte, mpVar> varsmap;

		[Token(Token = "0x6001092")]
		[Address(RVA = "0x1DE7AD8", Offset = "0x1DE7AD8", VA = "0x1DE7AD8", Slot = "59")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6001093")]
		[Address(RVA = "0x1DE7E90", Offset = "0x1DE7E90", VA = "0x1DE7E90")]
		[PunRPC]
		public void explode_visual(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001094")]
		[Address(RVA = "0x1DE7F38", Offset = "0x1DE7F38", VA = "0x1DE7F38")]
		public void explode_visual()
		{
		}

		[Token(Token = "0x6001095")]
		[Address(RVA = "0x1DE805C", Offset = "0x1DE805C", VA = "0x1DE805C")]
		[PunRPC]
		public void shoot_visual(Vector3 point, Vector3 normal, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x6001096")]
		[Address(RVA = "0x1DE8310", Offset = "0x1DE8310", VA = "0x1DE8310")]
		public void shoot_visual(Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x6001097")]
		[Address(RVA = "0x1DE852C", Offset = "0x1DE852C", VA = "0x1DE852C", Slot = "60")]
		public virtual void destroy()
		{
		}

		[Token(Token = "0x6001098")]
		[Address(RVA = "0x1DE85A8", Offset = "0x1DE85A8", VA = "0x1DE85A8", Slot = "61")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001099")]
		[Address(RVA = "0x1DE8660", Offset = "0x1DE8660", VA = "0x1DE8660", Slot = "62")]
		public virtual void on_destroy()
		{
		}

		[Token(Token = "0x600109A")]
		[Address(RVA = "0x1DE87E0", Offset = "0x1DE87E0", VA = "0x1DE87E0")]
		[PunRPC]
		protected void destroy_rpc(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x600109B")]
		[Address(RVA = "0x1DE8884", Offset = "0x1DE8884", VA = "0x1DE8884", Slot = "56")]
		public void OnOwnershipRequest(PhotonView targetView, Player requestingPlayer)
		{
		}

		[Token(Token = "0x600109C")]
		[Address(RVA = "0x1DE8990", Offset = "0x1DE8990", VA = "0x1DE8990", Slot = "57")]
		public void OnOwnershipTransfered(PhotonView targetView, Player previousOwner)
		{
		}

		[Token(Token = "0x600109D")]
		[Address(RVA = "0x1DE89FC", Offset = "0x1DE89FC", VA = "0x1DE89FC", Slot = "58")]
		public void OnOwnershipTransferFailed(PhotonView targetView, Player senderOfFailedRequest)
		{
		}

		[Token(Token = "0x600109E")]
		[Address(RVA = "0x1DE8A00", Offset = "0x1DE8A00", VA = "0x1DE8A00")]
		public void GetOwnership()
		{
		}

		[Token(Token = "0x600109F")]
		[Address(RVA = "0x1DE8AEC", Offset = "0x1DE8AEC", VA = "0x1DE8AEC", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x60010A0")]
		[Address(RVA = "0x1DE8E54", Offset = "0x1DE8E54", VA = "0x1DE8E54", Slot = "63")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010A1")]
		[Address(RVA = "0x1DE8FBC", Offset = "0x1DE8FBC", VA = "0x1DE8FBC", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010A2")]
		[Address(RVA = "0x1DE9530", Offset = "0x1DE9530", VA = "0x1DE9530", Slot = "64")]
		public virtual void LocalFixedUpdate()
		{
		}

		[Token(Token = "0x60010A3")]
		[Address(RVA = "0x1DE95D0", Offset = "0x1DE95D0", VA = "0x1DE95D0", Slot = "65")]
		public virtual void RemoteFixedUpdate()
		{
		}

		[Token(Token = "0x60010A4")]
		[Address(RVA = "0x1DE9778", Offset = "0x1DE9778", VA = "0x1DE9778", Slot = "66")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60010A5")]
		[Address(RVA = "0x1DE9838", Offset = "0x1DE9838", VA = "0x1DE9838", Slot = "67")]
		protected virtual void vars_init()
		{
		}

		[Token(Token = "0x60010A6")]
		[Address(RVA = "0x1DE8B14", Offset = "0x1DE8B14", VA = "0x1DE8B14")]
		protected void vars_push(Player other)
		{
		}

		[Token(Token = "0x60010A7")]
		[Address(RVA = "0x1DE9960", Offset = "0x1DE9960", VA = "0x1DE9960")]
		protected void vars_set(byte id, object value)
		{
		}

		[Token(Token = "0x60010A8")]
		[Address(RVA = "0x1DE9BB0", Offset = "0x1DE9BB0", VA = "0x1DE9BB0")]
		[PunRPC]
		protected void vars_rpc(byte id, object value, [Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010A9")]
		[Address(RVA = "0x1DE9CD4", Offset = "0x1DE9CD4", VA = "0x1DE9CD4")]
		public mp_drone()
		{
		}
	}
	[Token(Token = "0x2000205")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x84832C", Offset = "0x84832C")]
	public class mp_tool : mp_tool_base
	{
		[Token(Token = "0x60010AB")]
		[Address(RVA = "0x1DE9D5C", Offset = "0x1DE9D5C", VA = "0x1DE9D5C")]
		public mp_tool()
		{
		}
	}
	[Token(Token = "0x2000206")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x848340", Offset = "0x848340")]
	public class mp_tool_base : MonoBehaviourPunCallbacks, IPunObservable, IPunInstantiateMagicCallback, IPunOwnershipCallbacks
	{
		[Token(Token = "0x400118B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public toolbase tool;

		[Token(Token = "0x400118C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 lastpos;

		[Token(Token = "0x400118D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastrot;

		[Token(Token = "0x400118E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 toPosOld;

		[Token(Token = "0x400118F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Vector3 toPos;

		[Token(Token = "0x4001190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Quaternion toRot;

		[Token(Token = "0x4001191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float speed;

		[Token(Token = "0x4001192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool waitting_for_control;

		[Token(Token = "0x4001193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public int mpid;

		[Token(Token = "0x4001194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public int mpid2;

		[Token(Token = "0x4001195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float needsUpdate;

		[Token(Token = "0x4001196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[HideInInspector]
		public float dropdelay;

		[Token(Token = "0x4001197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float onremote;

		[Token(Token = "0x4001198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int waves_live;

		[Token(Token = "0x4001199")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int waves_left;

		[Token(Token = "0x400119A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int waves_last;

		[Token(Token = "0x400119B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static GameObject default_parent;

		[Token(Token = "0x400119C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject create_parent;

		[Token(Token = "0x400119D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float next_velocity_time;

		[Token(Token = "0x400119E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		protected byte next;

		[Token(Token = "0x400119F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected Dictionary<byte, mpVar> varsmap;

		[Token(Token = "0x40011A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public mpBool onplayer;

		[Token(Token = "0x40011A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public mpBool ontransfer;

		[Token(Token = "0x60010AC")]
		[Address(RVA = "0x1DE9ECC", Offset = "0x1DE9ECC", VA = "0x1DE9ECC", Slot = "59")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x60010AD")]
		[Address(RVA = "0x1DEA294", Offset = "0x1DEA294", VA = "0x1DEA294", Slot = "60")]
		public virtual void create()
		{
		}

		[Token(Token = "0x60010AE")]
		[Address(RVA = "0x1DEA314", Offset = "0x1DEA314", VA = "0x1DEA314", Slot = "61")]
		public virtual void destroy()
		{
		}

		[Token(Token = "0x60010AF")]
		[Address(RVA = "0x1DEA390", Offset = "0x1DEA390", VA = "0x1DEA390", Slot = "62")]
		public virtual void OnDestroy()
		{
		}

		[Token(Token = "0x60010B0")]
		[Address(RVA = "0x1DEA448", Offset = "0x1DEA448", VA = "0x1DEA448")]
		public void waves_inc(int wave)
		{
		}

		[Token(Token = "0x60010B1")]
		[Address(RVA = "0x1DEA590", Offset = "0x1DEA590", VA = "0x1DEA590")]
		private void on_tool_select(toolbase selected)
		{
		}

		[Token(Token = "0x60010B2")]
		[Address(RVA = "0x1DEA59C", Offset = "0x1DEA59C", VA = "0x1DEA59C")]
		private void on_tool_unselect(toolbase selected)
		{
		}

		[Token(Token = "0x60010B3")]
		[Address(RVA = "0x1DEA5A8", Offset = "0x1DEA5A8", VA = "0x1DEA5A8", Slot = "63")]
		public virtual void on_destroy(toolbase selected)
		{
		}

		[Token(Token = "0x60010B4")]
		[Address(RVA = "0x1DEA728", Offset = "0x1DEA728", VA = "0x1DEA728")]
		[PunRPC]
		protected void destroy_rpc(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010B5")]
		[Address(RVA = "0x1DEA7CC", Offset = "0x1DEA7CC", VA = "0x1DEA7CC", Slot = "64")]
		public virtual void on_preselect(toolbase selected)
		{
		}

		[Token(Token = "0x60010B6")]
		[Address(RVA = "0x1DEA99C", Offset = "0x1DEA99C", VA = "0x1DEA99C")]
		[PunRPC]
		protected void on_select([Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010B7")]
		[Address(RVA = "0x1DEAAD8", Offset = "0x1DEAAD8", VA = "0x1DEAAD8", Slot = "56")]
		public void OnOwnershipRequest(PhotonView targetView, Player requestingPlayer)
		{
		}

		[Token(Token = "0x60010B8")]
		[Address(RVA = "0x1DEAC34", Offset = "0x1DEAC34", VA = "0x1DEAC34", Slot = "57")]
		public void OnOwnershipTransfered(PhotonView targetView, Player previousOwner)
		{
		}

		[Token(Token = "0x60010B9")]
		[Address(RVA = "0x1DEACB8", Offset = "0x1DEACB8", VA = "0x1DEACB8", Slot = "58")]
		public void OnOwnershipTransferFailed(PhotonView targetView, Player senderOfFailedRequest)
		{
		}

		[Token(Token = "0x60010BA")]
		[Address(RVA = "0x1DEACE0", Offset = "0x1DEACE0", VA = "0x1DEACE0")]
		private bool handle_stream()
		{
			return default(bool);
		}

		[Token(Token = "0x60010BB")]
		[Address(RVA = "0x1DEAE30", Offset = "0x1DEAE30", VA = "0x1DEAE30", Slot = "42")]
		public override void OnPlayerEnteredRoom(Player other)
		{
		}

		[Token(Token = "0x60010BC")]
		[Address(RVA = "0x1DEB198", Offset = "0x1DEB198", VA = "0x1DEB198")]
		[PunRPC]
		public void sync_request(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010BD")]
		[Address(RVA = "0x1DEB3A4", Offset = "0x1DEB3A4", VA = "0x1DEB3A4")]
		[PunRPC]
		public void sync(Vector3 pos, Vector3 rot, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010BE")]
		[Address(RVA = "0x1DEB528", Offset = "0x1DEB528", VA = "0x1DEB528", Slot = "65")]
		public virtual void OnPhotonInstantiate(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010BF")]
		[Address(RVA = "0x1DEB7E8", Offset = "0x1DEB7E8", VA = "0x1DEB7E8", Slot = "54")]
		public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010C0")]
		[Address(RVA = "0x1DEBF28", Offset = "0x1DEBF28", VA = "0x1DEBF28")]
		private void update_local_kinematic_sleep()
		{
		}

		[Token(Token = "0x60010C1")]
		[Address(RVA = "0x1DEC00C", Offset = "0x1DEC00C", VA = "0x1DEC00C")]
		private void update_local_kinematic_wakeup()
		{
		}

		[Token(Token = "0x60010C2")]
		[Address(RVA = "0x1DEC08C", Offset = "0x1DEC08C", VA = "0x1DEC08C")]
		private void update_local_kinematic()
		{
		}

		[Token(Token = "0x60010C3")]
		[Address(RVA = "0x1DEC1C4", Offset = "0x1DEC1C4", VA = "0x1DEC1C4", Slot = "66")]
		public virtual void LocalFixedUpdate()
		{
		}

		[Token(Token = "0x60010C4")]
		[Address(RVA = "0x1DEC358", Offset = "0x1DEC358", VA = "0x1DEC358", Slot = "67")]
		public virtual void RemoteFixedUpdate()
		{
		}

		[Token(Token = "0x60010C5")]
		[Address(RVA = "0x1DEC5BC", Offset = "0x1DEC5BC", VA = "0x1DEC5BC", Slot = "68")]
		public virtual void FixedUpdate()
		{
		}

		[Token(Token = "0x60010C6")]
		[Address(RVA = "0x1DEC67C", Offset = "0x1DEC67C", VA = "0x1DEC67C", Slot = "69")]
		protected virtual void vars_init()
		{
		}

		[Token(Token = "0x60010C7")]
		[Address(RVA = "0x1DEAE58", Offset = "0x1DEAE58", VA = "0x1DEAE58")]
		protected void vars_push(Player other)
		{
		}

		[Token(Token = "0x60010C8")]
		[Address(RVA = "0x1DEC8EC", Offset = "0x1DEC8EC", VA = "0x1DEC8EC")]
		protected void vars_set(byte id, object value)
		{
		}

		[Token(Token = "0x60010C9")]
		[Address(RVA = "0x1DECB3C", Offset = "0x1DECB3C", VA = "0x1DECB3C")]
		[PunRPC]
		protected void vars_rpc(byte id, object value, [Optional] PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010CA")]
		[Address(RVA = "0x1DE9DC4", Offset = "0x1DE9DC4", VA = "0x1DE9DC4")]
		public mp_tool_base()
		{
		}
	}
	[Token(Token = "0x2000207")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x848354", Offset = "0x848354")]
	public class mp_tool_drone : mp_tool
	{
		[Token(Token = "0x40011A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private bool connected;

		[Token(Token = "0x40011A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		private float nextconnect;

		[Token(Token = "0x40011A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private tool_drone controller;

		[Token(Token = "0x40011A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private mp_drone mpdrone;

		[Token(Token = "0x40011A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public mpBool screen;

		[Token(Token = "0x60010CC")]
		[Address(RVA = "0x1DECC64", Offset = "0x1DECC64", VA = "0x1DECC64", Slot = "59")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60010CD")]
		[Address(RVA = "0x1DECE48", Offset = "0x1DECE48", VA = "0x1DECE48")]
		public void controlchange(bool hascontrol)
		{
		}

		[Token(Token = "0x60010CE")]
		[Address(RVA = "0x1DED008", Offset = "0x1DED008", VA = "0x1DED008")]
		[PunRPC]
		public void explode_visual(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010CF")]
		[Address(RVA = "0x1DED0B0", Offset = "0x1DED0B0", VA = "0x1DED0B0")]
		public void explode_visual()
		{
		}

		[Token(Token = "0x60010D0")]
		[Address(RVA = "0x1DED1D4", Offset = "0x1DED1D4", VA = "0x1DED1D4", Slot = "60")]
		public override void create()
		{
		}

		[Token(Token = "0x60010D1")]
		[Address(RVA = "0x1DED3A8", Offset = "0x1DED3A8", VA = "0x1DED3A8")]
		private void connect()
		{
		}

		[Token(Token = "0x60010D2")]
		[Address(RVA = "0x1DED5D8", Offset = "0x1DED5D8", VA = "0x1DED5D8", Slot = "68")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x60010D3")]
		[Address(RVA = "0x1DED7BC", Offset = "0x1DED7BC", VA = "0x1DED7BC", Slot = "69")]
		protected override void vars_init()
		{
		}

		[Token(Token = "0x60010D4")]
		[Address(RVA = "0x1DED8CC", Offset = "0x1DED8CC", VA = "0x1DED8CC")]
		public mp_tool_drone()
		{
		}
	}
	[Token(Token = "0x2000208")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x848368", Offset = "0x848368")]
	public class mp_tool_firearm : mp_tool
	{
		[Token(Token = "0x40011A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public tool_firearm firearm;

		[Token(Token = "0x40011A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public mpBool trigger;

		[Token(Token = "0x40011A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public mpBool scope;

		[Token(Token = "0x40011AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public mpBool spinning;

		[Token(Token = "0x40011AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public mpInt bullets;

		[Token(Token = "0x40011AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public mpInt ammo;

		[Token(Token = "0x60010D5")]
		[Address(RVA = "0x1F0AAF8", Offset = "0x1F0AAF8", VA = "0x1F0AAF8", Slot = "59")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60010D6")]
		[Address(RVA = "0x1F0ADC0", Offset = "0x1F0ADC0", VA = "0x1F0ADC0", Slot = "68")]
		public override void FixedUpdate()
		{
		}

		[Token(Token = "0x60010D7")]
		[Address(RVA = "0x1F0B100", Offset = "0x1F0B100", VA = "0x1F0B100")]
		[PunRPC]
		public void explode_visual(Vector3 point, Vector3 normal, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010D8")]
		[Address(RVA = "0x1F0B1F4", Offset = "0x1F0B1F4", VA = "0x1F0B1F4")]
		public void explode_visual(Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60010D9")]
		[Address(RVA = "0x1F0B3C0", Offset = "0x1F0B3C0", VA = "0x1F0B3C0")]
		[PunRPC]
		public void shoot_visual(Vector3 point, Vector3 normal, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010DA")]
		[Address(RVA = "0x1F0B684", Offset = "0x1F0B684", VA = "0x1F0B684")]
		public void shoot_visual(Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60010DB")]
		[Address(RVA = "0x1F0B8B0", Offset = "0x1F0B8B0", VA = "0x1F0B8B0")]
		[PunRPC]
		public void reload(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010DC")]
		[Address(RVA = "0x1F0B95C", Offset = "0x1F0B95C", VA = "0x1F0B95C")]
		public void reload(tool_firearm item)
		{
		}

		[Token(Token = "0x60010DD")]
		[Address(RVA = "0x1F0BA84", Offset = "0x1F0BA84", VA = "0x1F0BA84")]
		[PunRPC]
		public void empty(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010DE")]
		[Address(RVA = "0x1F0BB30", Offset = "0x1F0BB30", VA = "0x1F0BB30")]
		public void empty(tool_firearm item)
		{
		}

		[Token(Token = "0x60010DF")]
		[Address(RVA = "0x1F0BC58", Offset = "0x1F0BC58", VA = "0x1F0BC58")]
		private void update_bullets()
		{
		}

		[Token(Token = "0x60010E0")]
		[Address(RVA = "0x1F0BCA8", Offset = "0x1F0BCA8", VA = "0x1F0BCA8")]
		private void update_ammo()
		{
		}

		[Token(Token = "0x60010E1")]
		[Address(RVA = "0x1F0BCF8", Offset = "0x1F0BCF8", VA = "0x1F0BCF8", Slot = "69")]
		protected override void vars_init()
		{
		}

		[Token(Token = "0x60010E2")]
		[Address(RVA = "0x1F0C02C", Offset = "0x1F0C02C", VA = "0x1F0C02C")]
		public mp_tool_firearm()
		{
		}
	}
	[Token(Token = "0x2000209")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x84837C", Offset = "0x84837C")]
	public class mp_tool_flashbang : mp_tool
	{
		[Token(Token = "0x40011AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private tool_flashbang flashbang;

		[Token(Token = "0x60010E3")]
		[Address(RVA = "0x1F0C148", Offset = "0x1F0C148", VA = "0x1F0C148", Slot = "59")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60010E4")]
		[Address(RVA = "0x1F0C334", Offset = "0x1F0C334", VA = "0x1F0C334")]
		[PunRPC]
		public void explode(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010E5")]
		[Address(RVA = "0x1F0C408", Offset = "0x1F0C408", VA = "0x1F0C408")]
		public void explode(tool_flashbang item)
		{
		}

		[Token(Token = "0x60010E6")]
		[Address(RVA = "0x1F0C57C", Offset = "0x1F0C57C", VA = "0x1F0C57C")]
		[PunRPC]
		public void arm(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010E7")]
		[Address(RVA = "0x1F0C628", Offset = "0x1F0C628", VA = "0x1F0C628")]
		public void arm(tool_flashbang item)
		{
		}

		[Token(Token = "0x60010E8")]
		[Address(RVA = "0x1F0C750", Offset = "0x1F0C750", VA = "0x1F0C750")]
		public mp_tool_flashbang()
		{
		}
	}
	[Token(Token = "0x200020A")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x848390", Offset = "0x848390")]
	public class mp_tool_grenade : mp_tool
	{
		[Token(Token = "0x40011AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private tool_grenade grenade;

		[Token(Token = "0x60010E9")]
		[Address(RVA = "0x1F0C758", Offset = "0x1F0C758", VA = "0x1F0C758", Slot = "59")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60010EA")]
		[Address(RVA = "0x1F0C974", Offset = "0x1F0C974", VA = "0x1F0C974")]
		[PunRPC]
		public void exploded(Vector3 point, Vector3 normal, PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010EB")]
		[Address(RVA = "0x1F0CA80", Offset = "0x1F0CA80", VA = "0x1F0CA80")]
		public void exploded(Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x60010EC")]
		[Address(RVA = "0x1F0CC5C", Offset = "0x1F0CC5C", VA = "0x1F0CC5C")]
		[PunRPC]
		public void arm(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010ED")]
		[Address(RVA = "0x1F0CD08", Offset = "0x1F0CD08", VA = "0x1F0CD08")]
		public void arm(tool_grenade item)
		{
		}

		[Token(Token = "0x60010EE")]
		[Address(RVA = "0x1F0CE30", Offset = "0x1F0CE30", VA = "0x1F0CE30")]
		public mp_tool_grenade()
		{
		}
	}
	[Token(Token = "0x200020B")]
	[AttributeAttribute(Name = "DefaultExecutionOrder", RVA = "0x8483A4", Offset = "0x8483A4")]
	public class mp_tool_mdeikit : mp_tool
	{
		[Token(Token = "0x40011AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private tool_mdeikit mdeikit;

		[Token(Token = "0x60010EF")]
		[Address(RVA = "0x1F0CE38", Offset = "0x1F0CE38", VA = "0x1F0CE38", Slot = "59")]
		public override void Awake()
		{
		}

		[Token(Token = "0x60010F0")]
		[Address(RVA = "0x1F0CFBC", Offset = "0x1F0CFBC", VA = "0x1F0CFBC")]
		[PunRPC]
		public void explode(PhotonMessageInfo info)
		{
		}

		[Token(Token = "0x60010F1")]
		[Address(RVA = "0x1F0D08C", Offset = "0x1F0D08C", VA = "0x1F0D08C")]
		public void explode(tool_mdeikit item)
		{
		}

		[Token(Token = "0x60010F2")]
		[Address(RVA = "0x1F0D1FC", Offset = "0x1F0D1FC", VA = "0x1F0D1FC")]
		public mp_tool_mdeikit()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class mp_weapon : MonoBehaviour
	{
		[Token(Token = "0x40011B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public weapon weapon;

		[Token(Token = "0x40011B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public mpnpc npc;

		[Token(Token = "0x40011B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool attached;

		[Token(Token = "0x40011B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private float muzzle_effect_end;

		[Token(Token = "0x60010F3")]
		[Address(RVA = "0x1F0D204", Offset = "0x1F0D204", VA = "0x1F0D204")]
		private void Awake()
		{
		}

		[Token(Token = "0x60010F4")]
		[Address(RVA = "0x1F0D408", Offset = "0x1F0D408", VA = "0x1F0D408")]
		public void add(mpnpc mpnpc)
		{
		}

		[Token(Token = "0x60010F5")]
		[Address(RVA = "0x1F0D7FC", Offset = "0x1F0D7FC", VA = "0x1F0D7FC")]
		public void remove()
		{
		}

		[Token(Token = "0x60010F6")]
		[Address(RVA = "0x1F0D8BC", Offset = "0x1F0D8BC", VA = "0x1F0D8BC")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60010F7")]
		[Address(RVA = "0x1F0DBA0", Offset = "0x1F0DBA0", VA = "0x1F0DBA0")]
		private void Update()
		{
		}

		[Token(Token = "0x60010F8")]
		[Address(RVA = "0x1F0DD00", Offset = "0x1F0DD00", VA = "0x1F0DD00")]
		public void detach()
		{
		}

		[Token(Token = "0x60010F9")]
		[Address(RVA = "0x1F0DEE8", Offset = "0x1F0DEE8", VA = "0x1F0DEE8")]
		public void shoot()
		{
		}

		[Token(Token = "0x60010FA")]
		[Address(RVA = "0x1F0E02C", Offset = "0x1F0E02C", VA = "0x1F0E02C")]
		public mp_weapon()
		{
		}
	}
	[Token(Token = "0x200020D")]
	public class nocollider : MonoBehaviour
	{
		[Token(Token = "0x60010FB")]
		[Address(RVA = "0x1F19374", Offset = "0x1F19374", VA = "0x1F19374")]
		public nocollider()
		{
		}
	}
	[Token(Token = "0x200020E")]
	public class RecordPlayer : MonoBehaviour
	{
		[Token(Token = "0x60010FC")]
		[Address(RVA = "0xDCFA5C", Offset = "0xDCFA5C", VA = "0xDCFA5C")]
		public RecordPlayer()
		{
		}
	}
}
namespace TurnTheGameOn.IKAvatarDriver
{
	[Serializable]
	[Token(Token = "0x200020F")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8483B8", Offset = "0x8483B8")]
	public class IKAvatarPoser : MonoBehaviour
	{
		[Token(Token = "0x40011B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public RuntimeAnimatorController defaultAnuimatorController;

		[Token(Token = "0x40011B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x40011B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public ProfileData profileData;

		[Token(Token = "0x40011B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool updateInEditMode;

		[Token(Token = "0x40011B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		public bool ikActive;

		[Token(Token = "0x40011B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		public bool leftLegControl;

		[Token(Token = "0x40011BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		public bool rightLegControl;

		[Token(Token = "0x40011BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool leftArmControl;

		[Token(Token = "0x40011BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		public bool rightArmControl;

		[Token(Token = "0x40011BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		public bool headControl;

		[Token(Token = "0x40011BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform leftFootCP;

		[Token(Token = "0x40011BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform rightFootCP;

		[Token(Token = "0x40011C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform leftHandCP;

		[Token(Token = "0x40011C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightHandCP;

		[Token(Token = "0x40011C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform headCP;

		[Token(Token = "0x40011C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftElbowCP;

		[Token(Token = "0x40011C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightElbowCP;

		[Token(Token = "0x40011C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Transform leftKneeCP;

		[Token(Token = "0x40011C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Transform rightKneeCP;

		[Token(Token = "0x40011C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x852044", Offset = "0x852044")]
		public float leftFootPositionWeight;

		[Token(Token = "0x40011C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85205C", Offset = "0x85205C")]
		public float leftFootRotationWeight;

		[Token(Token = "0x40011C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x852074", Offset = "0x852074")]
		public float rightFootPositionWeight;

		[Token(Token = "0x40011CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85208C", Offset = "0x85208C")]
		public float rightFootRotationWeight;

		[Token(Token = "0x40011CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8520A4", Offset = "0x8520A4")]
		public float leftHandPositionWeight;

		[Token(Token = "0x40011CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8520BC", Offset = "0x8520BC")]
		public float leftHandRotationWeight;

		[Token(Token = "0x40011CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8520D4", Offset = "0x8520D4")]
		public float rightHandPositionWeight;

		[Token(Token = "0x40011CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8520EC", Offset = "0x8520EC")]
		public float rightHandRotationWeight;

		[Token(Token = "0x40011CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x852104", Offset = "0x852104")]
		public float headPositionWeight;

		[Token(Token = "0x40011D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85211C", Offset = "0x85211C")]
		public float leftKneePositioWeight;

		[Token(Token = "0x40011D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x852134", Offset = "0x852134")]
		public float rightKneePositioWeight;

		[Token(Token = "0x40011D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85214C", Offset = "0x85214C")]
		public float leftElbowPositioWeight;

		[Token(Token = "0x40011D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x852164", Offset = "0x852164")]
		public float rightElbowPositioWeight;

		[Token(Token = "0x40011D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public string profileName;

		[Token(Token = "0x17000103")]
		public Vector3 LeftFootPosition
		{
			[Token(Token = "0x60010FD")]
			[Address(RVA = "0xBAAB38", Offset = "0xBAAB38", VA = "0xBAAB38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x60010FE")]
			[Address(RVA = "0xBAAB58", Offset = "0xBAAB58", VA = "0xBAAB58")]
			set
			{
			}
		}

		[Token(Token = "0x17000104")]
		public Quaternion LeftFootRotation
		{
			[Token(Token = "0x60010FF")]
			[Address(RVA = "0xBAAB78", Offset = "0xBAAB78", VA = "0xBAAB78")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001100")]
			[Address(RVA = "0xBAAB98", Offset = "0xBAAB98", VA = "0xBAAB98")]
			set
			{
			}
		}

		[Token(Token = "0x17000105")]
		public Vector3 RightFootPosition
		{
			[Token(Token = "0x6001101")]
			[Address(RVA = "0xBAABB8", Offset = "0xBAABB8", VA = "0xBAABB8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001102")]
			[Address(RVA = "0xBAABD8", Offset = "0xBAABD8", VA = "0xBAABD8")]
			set
			{
			}
		}

		[Token(Token = "0x17000106")]
		public Quaternion RightFootRotation
		{
			[Token(Token = "0x6001103")]
			[Address(RVA = "0xBAABF8", Offset = "0xBAABF8", VA = "0xBAABF8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001104")]
			[Address(RVA = "0xBAAC18", Offset = "0xBAAC18", VA = "0xBAAC18")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public Vector3 LeftHandPosition
		{
			[Token(Token = "0x6001105")]
			[Address(RVA = "0xBAAC38", Offset = "0xBAAC38", VA = "0xBAAC38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001106")]
			[Address(RVA = "0xBAAC58", Offset = "0xBAAC58", VA = "0xBAAC58")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public Quaternion LeftHandRotation
		{
			[Token(Token = "0x6001107")]
			[Address(RVA = "0xBAAC78", Offset = "0xBAAC78", VA = "0xBAAC78")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001108")]
			[Address(RVA = "0xBAAC98", Offset = "0xBAAC98", VA = "0xBAAC98")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public Vector3 RightHandPosition
		{
			[Token(Token = "0x6001109")]
			[Address(RVA = "0xBAACB8", Offset = "0xBAACB8", VA = "0xBAACB8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600110A")]
			[Address(RVA = "0xBAACD8", Offset = "0xBAACD8", VA = "0xBAACD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public Quaternion RightHandRotation
		{
			[Token(Token = "0x600110B")]
			[Address(RVA = "0xBAACF8", Offset = "0xBAACF8", VA = "0xBAACF8")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x600110C")]
			[Address(RVA = "0xBAAD18", Offset = "0xBAAD18", VA = "0xBAAD18")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public Vector3 HeadPosition
		{
			[Token(Token = "0x600110D")]
			[Address(RVA = "0xBAAD38", Offset = "0xBAAD38", VA = "0xBAAD38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x600110E")]
			[Address(RVA = "0xBAAD58", Offset = "0xBAAD58", VA = "0xBAAD58")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public Quaternion HeadRotation
		{
			[Token(Token = "0x600110F")]
			[Address(RVA = "0xBAAD78", Offset = "0xBAAD78", VA = "0xBAAD78")]
			get
			{
				return default(Quaternion);
			}
			[Token(Token = "0x6001110")]
			[Address(RVA = "0xBAAD98", Offset = "0xBAAD98", VA = "0xBAAD98")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public Vector3 LeftElbowPosition
		{
			[Token(Token = "0x6001111")]
			[Address(RVA = "0xBAADB8", Offset = "0xBAADB8", VA = "0xBAADB8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001112")]
			[Address(RVA = "0xBAADD8", Offset = "0xBAADD8", VA = "0xBAADD8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public Vector3 RightElbowPosition
		{
			[Token(Token = "0x6001113")]
			[Address(RVA = "0xBAADF8", Offset = "0xBAADF8", VA = "0xBAADF8")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001114")]
			[Address(RVA = "0xBAAE18", Offset = "0xBAAE18", VA = "0xBAAE18")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public Vector3 LeftKneePosition
		{
			[Token(Token = "0x6001115")]
			[Address(RVA = "0xBAAE38", Offset = "0xBAAE38", VA = "0xBAAE38")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001116")]
			[Address(RVA = "0xBAAE58", Offset = "0xBAAE58", VA = "0xBAAE58")]
			set
			{
			}
		}

		[Token(Token = "0x17000110")]
		public Vector3 RightKneePosition
		{
			[Token(Token = "0x6001117")]
			[Address(RVA = "0xBAAE78", Offset = "0xBAAE78", VA = "0xBAAE78")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001118")]
			[Address(RVA = "0xBAAE98", Offset = "0xBAAE98", VA = "0xBAAE98")]
			set
			{
			}
		}

		[Token(Token = "0x6001119")]
		[Address(RVA = "0xBAAEB8", Offset = "0xBAAEB8", VA = "0xBAAEB8")]
		public void OnAnimatorIK()
		{
		}

		[Token(Token = "0x600111A")]
		[Address(RVA = "0xBAB4A0", Offset = "0xBAB4A0", VA = "0xBAB4A0")]
		public void ConfigureIKAvatarPoser()
		{
		}

		[Token(Token = "0x600111B")]
		[Address(RVA = "0xBABEE4", Offset = "0xBABEE4", VA = "0xBABEE4")]
		public void SaveProfile(string profileName)
		{
		}

		[Token(Token = "0x600111C")]
		[Address(RVA = "0xBAC30C", Offset = "0xBAC30C", VA = "0xBAC30C")]
		public void LoadProfile(string profileName)
		{
		}

		[Token(Token = "0x600111D")]
		[Address(RVA = "0xBACC74", Offset = "0xBACC74", VA = "0xBACC74")]
		public IKAvatarPoser()
		{
		}
	}
	[Token(Token = "0x2000210")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x848430", Offset = "0x848430")]
	public class ProfileData : ScriptableObject
	{
		[Token(Token = "0x40011D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<Profile> profiles;

		[Token(Token = "0x600111E")]
		[Address(RVA = "0x1B6DE0C", Offset = "0x1B6DE0C", VA = "0x1B6DE0C")]
		public ProfileData()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000211")]
	public class Profile
	{
		[Token(Token = "0x40011D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40011D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool leftLegControl;

		[Token(Token = "0x40011D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool rightLegControl;

		[Token(Token = "0x40011D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool leftArmControl;

		[Token(Token = "0x40011DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool rightArmControl;

		[Token(Token = "0x40011DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool headControl;

		[Token(Token = "0x40011DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 leftFootPosition;

		[Token(Token = "0x40011DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public Quaternion leftFootRotation;

		[Token(Token = "0x40011DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public Vector3 rightFootPosition;

		[Token(Token = "0x40011DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Quaternion rightFootRotation;

		[Token(Token = "0x40011E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Vector3 leftHandPosition;

		[Token(Token = "0x40011E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public Quaternion leftHandRotation;

		[Token(Token = "0x40011E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public Vector3 rightHandPosition;

		[Token(Token = "0x40011E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Quaternion rightHandRotation;

		[Token(Token = "0x40011E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public Vector3 headPosition;

		[Token(Token = "0x40011E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public Quaternion headRotation;

		[Token(Token = "0x40011E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public Vector3 leftElbowPosition;

		[Token(Token = "0x40011E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Vector3 rightElbowPosition;

		[Token(Token = "0x40011E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector3 leftKneePosition;

		[Token(Token = "0x40011E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public Vector3 rightKneePosition;

		[Token(Token = "0x40011EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float leftFootPositionWeight;

		[Token(Token = "0x40011EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public float leftFootRotationWeight;

		[Token(Token = "0x40011EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float rightFootPositionWeight;

		[Token(Token = "0x40011ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float rightFootRotationWeight;

		[Token(Token = "0x40011EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public float leftHandPositionWeight;

		[Token(Token = "0x40011EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float leftHandRotationWeight;

		[Token(Token = "0x40011F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float rightHandPositionWeight;

		[Token(Token = "0x40011F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float rightHandRotationWeight;

		[Token(Token = "0x40011F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float headPositionWeight;

		[Token(Token = "0x40011F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public float leftKneePositioWeight;

		[Token(Token = "0x40011F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
		public float rightKneePositioWeight;

		[Token(Token = "0x40011F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public float leftElbowPositioWeight;

		[Token(Token = "0x40011F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
		public float rightElbowPositioWeight;

		[Token(Token = "0x600111F")]
		[Address(RVA = "0x1B6DE04", Offset = "0x1B6DE04", VA = "0x1B6DE04")]
		public Profile()
		{
		}
	}
}
namespace UnityEngine.XR.OpenXR.Samples.MeshingFeature
{
	[Token(Token = "0x2000212")]
	public class FallingSphere : MonoBehaviour
	{
		[Token(Token = "0x40011F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Vector3 starting;

		[Token(Token = "0x40011F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Rigidbody rb;

		[Token(Token = "0x6001120")]
		[Address(RVA = "0xB9E54C", Offset = "0xB9E54C", VA = "0xB9E54C")]
		private void Start()
		{
		}

		[Token(Token = "0x6001121")]
		[Address(RVA = "0xB9E5D8", Offset = "0xB9E5D8", VA = "0xB9E5D8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6001122")]
		[Address(RVA = "0xB9E670", Offset = "0xB9E670", VA = "0xB9E670")]
		public FallingSphere()
		{
		}
	}
	[Token(Token = "0x2000213")]
	public class MeshingBehaviour : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004CC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849D74", Offset = "0x849D74")]
		private sealed class <>c
		{
			[Token(Token = "0x4002398")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002399")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Action<MeshGenerationResult> <>9__7_0;

			[Token(Token = "0x6001E4F")]
			[Address(RVA = "0x19D666C", Offset = "0x19D666C", VA = "0x19D666C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001E50")]
			[Address(RVA = "0x19D6674", Offset = "0x19D6674", VA = "0x19D6674")]
			internal void <Update>b__7_0(MeshGenerationResult result)
			{
			}
		}

		[Token(Token = "0x40011F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject emptyMeshPrefab;

		[Token(Token = "0x40011FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TextMesh textMesh;

		[Token(Token = "0x40011FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x40011FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private XRMeshSubsystem s_MeshSubsystem;

		[Token(Token = "0x40011FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<MeshInfo> s_MeshInfos;

		[Token(Token = "0x40011FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<MeshId, GameObject> m_MeshIdToGo;

		[Token(Token = "0x6001123")]
		[Address(RVA = "0xCED164", Offset = "0xCED164", VA = "0xCED164")]
		private void Start()
		{
		}

		[Token(Token = "0x6001124")]
		[Address(RVA = "0xCED374", Offset = "0xCED374", VA = "0xCED374")]
		private void Update()
		{
		}

		[Token(Token = "0x6001125")]
		[Address(RVA = "0xCED828", Offset = "0xCED828", VA = "0xCED828")]
		public MeshingBehaviour()
		{
		}
	}
	[Token(Token = "0x2000214")]
	public class MeshingTeapotFeature : OpenXRFeature
	{
		[Token(Token = "0x40011FF")]
		public const string featureId = "com.unity.openxr.feature.example.meshing";

		[Token(Token = "0x4001200")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static List<XRMeshSubsystemDescriptor> s_MeshDescriptors;

		[Token(Token = "0x6001126")]
		[Address(RVA = "0xCED908", Offset = "0xCED908", VA = "0xCED908", Slot = "5")]
		protected override void OnSubsystemCreate()
		{
		}

		[Token(Token = "0x6001127")]
		[Address(RVA = "0xCED9AC", Offset = "0xCED9AC", VA = "0xCED9AC", Slot = "6")]
		protected override void OnSubsystemStart()
		{
		}

		[Token(Token = "0x6001128")]
		[Address(RVA = "0xCEDA00", Offset = "0xCEDA00", VA = "0xCEDA00", Slot = "7")]
		protected override void OnSubsystemStop()
		{
		}

		[Token(Token = "0x6001129")]
		[Address(RVA = "0xCEDA54", Offset = "0xCEDA54", VA = "0xCEDA54", Slot = "8")]
		protected override void OnSubsystemDestroy()
		{
		}

		[Token(Token = "0x600112A")]
		[Address(RVA = "0xCEDAA8", Offset = "0xCEDAA8", VA = "0xCEDAA8")]
		public MeshingTeapotFeature()
		{
		}
	}
}
namespace UnityEngine.XR.OpenXR.Samples.InterceptFeature
{
	[Token(Token = "0x2000215")]
	public class InterceptCreateSessionFeature : OpenXRFeature
	{
		[Token(Token = "0x20004CD")]
		private delegate void OnMessageDelegate(string message);

		[Token(Token = "0x20004CE")]
		internal delegate void ReceiveMessageDelegate(string message);

		[Token(Token = "0x4001201")]
		public const string featureId = "com.unity.openxr.feature.example.intercept";

		[Token(Token = "0x4001202")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public string message;

		[Token(Token = "0x4001203")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85218C", Offset = "0x85218C")]
		private string <receivedMessage>k__BackingField;

		[Token(Token = "0x4001204")]
		private const string ExtLib = "InterceptFeaturePlugin";

		[Token(Token = "0x17000111")]
		public string receivedMessage
		{
			[Token(Token = "0x600112C")]
			[Address(RVA = "0xBAF2D8", Offset = "0xBAF2D8", VA = "0xBAF2D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x859E38", Offset = "0x859E38")]
			get
			{
				return null;
			}
			[Token(Token = "0x600112D")]
			[Address(RVA = "0xBAF2E0", Offset = "0xBAF2E0", VA = "0xBAF2E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x859E48", Offset = "0x859E48")]
			private set
			{
			}
		}

		[Token(Token = "0x600112E")]
		[Address(RVA = "0xBAF2E8", Offset = "0xBAF2E8", VA = "0xBAF2E8", Slot = "4")]
		protected override IntPtr HookGetInstanceProcAddr(IntPtr func)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600112F")]
		[Address(RVA = "0xBAF3F0", Offset = "0xBAF3F0", VA = "0xBAF3F0", Slot = "9")]
		protected override bool OnInstanceCreate(ulong xrInstance)
		{
			return default(bool);
		}

		[Token(Token = "0x6001130")]
		[Address(RVA = "0xBAF1B0", Offset = "0xBAF1B0", VA = "0xBAF1B0")]
		[AttributeAttribute(Name = "MonoPInvokeCallbackAttribute", RVA = "0x859E58", Offset = "0x859E58")]
		private static void OnMessage(string message)
		{
		}

		[Token(Token = "0x6001131")]
		[Address(RVA = "0xBAF634", Offset = "0xBAF634", VA = "0xBAF634", Slot = "11")]
		protected override void OnSessionCreate(ulong xrSession)
		{
		}

		[Token(Token = "0x6001132")]
		[Address(RVA = "0xBAF700", Offset = "0xBAF700", VA = "0xBAF700", Slot = "14")]
		protected override void OnSessionBegin(ulong xrSession)
		{
		}

		[Token(Token = "0x6001133")]
		[Address(RVA = "0xBAF7CC", Offset = "0xBAF7CC", VA = "0xBAF7CC", Slot = "15")]
		protected override void OnSessionEnd(ulong xrSession)
		{
		}

		[PreserveSig]
		[Token(Token = "0x6001134")]
		[Address(RVA = "0xBAF370", Offset = "0xBAF370", VA = "0xBAF370")]
		private static extern IntPtr intercept_xrCreateSession_xrGetInstanceProcAddr(IntPtr func);

		[PreserveSig]
		[Token(Token = "0x6001135")]
		[Address(RVA = "0xBAF5AC", Offset = "0xBAF5AC", VA = "0xBAF5AC")]
		private static extern void Internal_SetMessage(string printString);

		[PreserveSig]
		[Token(Token = "0x6001136")]
		[Address(RVA = "0xBAF528", Offset = "0xBAF528", VA = "0xBAF528")]
		private static extern void Internal_SetCallback(ReceiveMessageDelegate callback);

		[Token(Token = "0x6001137")]
		[Address(RVA = "0xBAF898", Offset = "0xBAF898", VA = "0xBAF898")]
		public InterceptCreateSessionFeature()
		{
		}
	}
	[Token(Token = "0x2000216")]
	public class InterceptMessageHandler : MonoBehaviour
	{
		[Token(Token = "0x4001205")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public TextMesh textMesh;

		[Token(Token = "0x6001138")]
		[Address(RVA = "0xBAF8FC", Offset = "0xBAF8FC", VA = "0xBAF8FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001139")]
		[Address(RVA = "0xBAFA48", Offset = "0xBAFA48", VA = "0xBAFA48")]
		public InterceptMessageHandler()
		{
		}
	}
}
namespace emotitron.Utilities
{
	[Token(Token = "0x2000217")]
	public static class PrintMaskUtil
	{
		[Token(Token = "0x600113A")]
		[Address(RVA = "0x1B6DC40", Offset = "0x1B6DC40", VA = "0x1B6DC40")]
		public static StringBuilder PrintMask(this BitArray ba, int hiliteBit = -1)
		{
			return null;
		}

		[Token(Token = "0x600113B")]
		[Address(RVA = "0x1B6DC48", Offset = "0x1B6DC48", VA = "0x1B6DC48")]
		public static int CountTrue(this BitArray ba)
		{
			return default(int);
		}

		[Token(Token = "0x600113C")]
		[Address(RVA = "0x1B6DCB8", Offset = "0x1B6DCB8", VA = "0x1B6DCB8")]
		public static int CountFalse(this BitArray ba)
		{
			return default(int);
		}

		[Token(Token = "0x600113D")]
		[Address(RVA = "0x1B6DD2C", Offset = "0x1B6DD2C", VA = "0x1B6DD2C")]
		public static int CountValidRange(this BitArray ba, int start, int lookahead)
		{
			return default(int);
		}

		[Token(Token = "0x600113E")]
		[Address(RVA = "0x1B6DDA0", Offset = "0x1B6DDA0", VA = "0x1B6DDA0")]
		public static void ClearBitsBefore(this BitArray ba, int start, int count)
		{
		}
	}
}
namespace Photon.Voice.Unity.UtilityScripts
{
	[Token(Token = "0x2000218")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x8484A0", Offset = "0x8484A0")]
	public class SimpleAmplifier : VoiceComponent
	{
		[Token(Token = "0x4001206")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int amplificationFactor;

		[Token(Token = "0x4001207")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private SimpleAmplifierFloatProcessor floatProcessor;

		[Token(Token = "0x4001208")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private SimpleAmplifierShortProcessor shortProcessor;

		[Token(Token = "0x17000112")]
		public int AmplificationFactor
		{
			[Token(Token = "0x600113F")]
			[Address(RVA = "0xDD8EE8", Offset = "0xDD8EE8", VA = "0xDD8EE8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001140")]
			[Address(RVA = "0xDD8EF0", Offset = "0xDD8EF0", VA = "0xDD8EF0")]
			set
			{
			}
		}

		[Token(Token = "0x6001141")]
		[Address(RVA = "0xDD8F20", Offset = "0xDD8F20", VA = "0xDD8F20")]
		private void PhotonVoiceCreated(PhotonVoiceCreatedParams p)
		{
		}

		[Token(Token = "0x6001142")]
		[Address(RVA = "0xDD9360", Offset = "0xDD9360", VA = "0xDD9360")]
		public SimpleAmplifier()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class SimpleAmplifierFloatProcessor : IProcessor<float>, IDisposable
	{
		[Token(Token = "0x4001209")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8521AC", Offset = "0x8521AC")]
		private int <AmplificationFactor>k__BackingField;

		[Token(Token = "0x17000113")]
		public int AmplificationFactor
		{
			[Token(Token = "0x6001143")]
			[Address(RVA = "0xDD9370", Offset = "0xDD9370", VA = "0xDD9370")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x859F10", Offset = "0x859F10")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001144")]
			[Address(RVA = "0xDD9378", Offset = "0xDD9378", VA = "0xDD9378")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x859F20", Offset = "0x859F20")]
			set
			{
			}
		}

		[Token(Token = "0x6001145")]
		[Address(RVA = "0xDD9308", Offset = "0xDD9308", VA = "0xDD9308")]
		public SimpleAmplifierFloatProcessor(int amplificationFactor)
		{
		}

		[Token(Token = "0x6001146")]
		[Address(RVA = "0xDD9380", Offset = "0xDD9380", VA = "0xDD9380", Slot = "4")]
		public float[] Process(float[] buf)
		{
			return null;
		}

		[Token(Token = "0x6001147")]
		[Address(RVA = "0xDD93EC", Offset = "0xDD93EC", VA = "0xDD93EC", Slot = "5")]
		public void Dispose()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class SimpleAmplifierShortProcessor : IProcessor<short>, IDisposable
	{
		[Token(Token = "0x400120A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8521BC", Offset = "0x8521BC")]
		private short <AmplificationFactor>k__BackingField;

		[Token(Token = "0x17000114")]
		public short AmplificationFactor
		{
			[Token(Token = "0x6001148")]
			[Address(RVA = "0xDD93F0", Offset = "0xDD93F0", VA = "0xDD93F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x859F30", Offset = "0x859F30")]
			get
			{
				return default(short);
			}
			[Token(Token = "0x6001149")]
			[Address(RVA = "0xDD93F8", Offset = "0xDD93F8", VA = "0xDD93F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x859F40", Offset = "0x859F40")]
			set
			{
			}
		}

		[Token(Token = "0x600114A")]
		[Address(RVA = "0xDD9334", Offset = "0xDD9334", VA = "0xDD9334")]
		public SimpleAmplifierShortProcessor(short amplificationFactor)
		{
		}

		[Token(Token = "0x600114B")]
		[Address(RVA = "0xDD9400", Offset = "0xDD9400", VA = "0xDD9400", Slot = "4")]
		public short[] Process(short[] buf)
		{
			return null;
		}

		[Token(Token = "0x600114C")]
		[Address(RVA = "0xDD9468", Offset = "0xDD9468", VA = "0xDD9468", Slot = "5")]
		public void Dispose()
		{
		}
	}
}
namespace Photon.Compression
{
	[Token(Token = "0x200021B")]
	public enum SerializationFlags
	{
		[Token(Token = "0x400120C")]
		None = 0,
		[Token(Token = "0x400120D")]
		HasContent = 1,
		[Token(Token = "0x400120E")]
		Force = 2,
		[Token(Token = "0x400120F")]
		ForceReliable = 4,
		[Token(Token = "0x4001210")]
		SendToSelf = 8,
		[Token(Token = "0x4001211")]
		NewConnection = 0x10,
		[Token(Token = "0x4001212")]
		IsComplete = 0x20
	}
	[Serializable]
	[Token(Token = "0x200021C")]
	public abstract class LiteCrusher
	{
		[Token(Token = "0x4001213")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		protected int bits;

		[Token(Token = "0x600114D")]
		[Address(RVA = "0xCE3FB8", Offset = "0xCE3FB8", VA = "0xCE3FB8")]
		public static int GetBitsForMaxValue(uint maxvalue)
		{
			return default(int);
		}

		[Token(Token = "0x600114E")]
		[Address(RVA = "0xCE3FD8", Offset = "0xCE3FD8", VA = "0xCE3FD8")]
		protected LiteCrusher()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200021D")]
	public abstract class LiteCrusher<TComp, T> : LiteCrusher where TComp : struct where T : struct
	{
		[Token(Token = "0x600114F")]
		public abstract TComp Encode(T val);

		[Token(Token = "0x6001150")]
		public abstract T Decode(uint val);

		[Token(Token = "0x6001151")]
		public abstract TComp WriteValue(T val, byte[] buffer, int bitposition);

		[Token(Token = "0x6001152")]
		public abstract void WriteCValue(uint val, byte[] buffer, int bitposition);

		[Token(Token = "0x6001153")]
		public abstract T ReadValue(byte[] buffer, int bitposition);

		[Token(Token = "0x6001154")]
		public abstract TComp ReadCValue(byte[] buffer, int bitposition);

		[Token(Token = "0x6001155")]
		protected LiteCrusher()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public enum LiteOutOfBoundsHandling
	{
		[Token(Token = "0x4001215")]
		Clamp,
		[Token(Token = "0x4001216")]
		Loop
	}
	[Token(Token = "0x200021F")]
	public enum LiteFloatCompressType
	{
		[Token(Token = "0x4001218")]
		Bits2 = 2,
		[Token(Token = "0x4001219")]
		Bits3 = 3,
		[Token(Token = "0x400121A")]
		Bits4 = 4,
		[Token(Token = "0x400121B")]
		Bits5 = 5,
		[Token(Token = "0x400121C")]
		Bits6 = 6,
		[Token(Token = "0x400121D")]
		Bits7 = 7,
		[Token(Token = "0x400121E")]
		Bits8 = 8,
		[Token(Token = "0x400121F")]
		Bits9 = 9,
		[Token(Token = "0x4001220")]
		Bits10 = 10,
		[Token(Token = "0x4001221")]
		Bits12 = 12,
		[Token(Token = "0x4001222")]
		Bits14 = 14,
		[Token(Token = "0x4001223")]
		Half16 = 16,
		[Token(Token = "0x4001224")]
		Full32 = 32
	}
	[Serializable]
	[Token(Token = "0x2000220")]
	public class LiteFloatCrusher : LiteCrusher<ulong, float>
	{
		[Token(Token = "0x20004CF")]
		public enum Normalization
		{
			[Token(Token = "0x400239B")]
			None,
			[Token(Token = "0x400239C")]
			Positive,
			[Token(Token = "0x400239D")]
			Negative
		}

		[Token(Token = "0x4001225")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public Normalization normalization;

		[Token(Token = "0x4001226")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected float min;

		[Token(Token = "0x4001227")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected float max;

		[Token(Token = "0x4001228")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		public LiteFloatCompressType compressType;

		[Token(Token = "0x4001229")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public LiteOutOfBoundsHandling outOfBoundsHandling;

		[Token(Token = "0x400122A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool accurateCenter;

		[Token(Token = "0x400122B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float encoder;

		[Token(Token = "0x400122C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float decoder;

		[Token(Token = "0x400122D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ulong maxCVal;

		[Token(Token = "0x6001156")]
		[Address(RVA = "0xCE3FE0", Offset = "0xCE3FE0", VA = "0xCE3FE0")]
		public LiteFloatCrusher()
		{
		}

		[Token(Token = "0x6001157")]
		[Address(RVA = "0xCE40EC", Offset = "0xCE40EC", VA = "0xCE40EC")]
		public LiteFloatCrusher(LiteFloatCompressType compressType, float min, float max, bool accurateCenter, LiteOutOfBoundsHandling outOfBoundsHandling = LiteOutOfBoundsHandling.Clamp)
		{
		}

		[Token(Token = "0x6001158")]
		[Address(RVA = "0xCE43F8", Offset = "0xCE43F8", VA = "0xCE43F8")]
		public LiteFloatCrusher(LiteFloatCompressType compressType, Normalization normalization = Normalization.None, LiteOutOfBoundsHandling outOfBoundsHandling = LiteOutOfBoundsHandling.Clamp)
		{
		}

		[Token(Token = "0x6001159")]
		[Address(RVA = "0xCE4074", Offset = "0xCE4074", VA = "0xCE4074")]
		public static void Recalculate(LiteFloatCompressType compressType, float min, float max, bool accurateCenter, LiteFloatCrusher crusher)
		{
		}

		[Token(Token = "0x600115A")]
		[Address(RVA = "0xCE44E4", Offset = "0xCE44E4", VA = "0xCE44E4")]
		public static void Recalculate(LiteFloatCompressType compressType, float min, float max, bool accurateCenter, int bits, float encoder, float decoder, ulong maxCVal)
		{
		}

		[Token(Token = "0x600115B")]
		[Address(RVA = "0xCE4548", Offset = "0xCE4548", VA = "0xCE4548", Slot = "4")]
		public override ulong Encode(float val)
		{
			return default(ulong);
		}

		[Token(Token = "0x600115C")]
		[Address(RVA = "0xCE4688", Offset = "0xCE4688", VA = "0xCE4688", Slot = "5")]
		public override float Decode(uint cval)
		{
			return default(float);
		}

		[Token(Token = "0x600115D")]
		[Address(RVA = "0xCE4768", Offset = "0xCE4768", VA = "0xCE4768", Slot = "6")]
		public override ulong WriteValue(float val, byte[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600115E")]
		[Address(RVA = "0xCE4858", Offset = "0xCE4858", VA = "0xCE4858", Slot = "7")]
		public override void WriteCValue(uint cval, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x600115F")]
		[Address(RVA = "0xCE4880", Offset = "0xCE4880", VA = "0xCE4880", Slot = "8")]
		public override float ReadValue(byte[] buffer, int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x6001160")]
		[Address(RVA = "0xCE497C", Offset = "0xCE497C", VA = "0xCE497C", Slot = "9")]
		public override ulong ReadCValue(byte[] buffer, int bitposition)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x2000221")]
	public enum LiteIntCompressType
	{
		[Token(Token = "0x400122F")]
		PackSigned,
		[Token(Token = "0x4001230")]
		PackUnsigned,
		[Token(Token = "0x4001231")]
		Range
	}
	[Serializable]
	[Token(Token = "0x2000222")]
	public class LiteIntCrusher : LiteCrusher<uint, int>
	{
		[Token(Token = "0x4001232")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[SerializeField]
		public LiteIntCompressType compressType;

		[Token(Token = "0x4001233")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int min;

		[Token(Token = "0x4001234")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		protected int max;

		[Token(Token = "0x4001235")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int smallest;

		[Token(Token = "0x4001236")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int biggest;

		[Token(Token = "0x6001161")]
		[Address(RVA = "0xCE49C0", Offset = "0xCE49C0", VA = "0xCE49C0")]
		public LiteIntCrusher()
		{
		}

		[Token(Token = "0x6001162")]
		[Address(RVA = "0xCE4A68", Offset = "0xCE4A68", VA = "0xCE4A68")]
		public LiteIntCrusher(LiteIntCompressType compType = LiteIntCompressType.PackSigned, int min = -128, int max = 127)
		{
		}

		[Token(Token = "0x6001163")]
		[Address(RVA = "0xCE4B14", Offset = "0xCE4B14", VA = "0xCE4B14", Slot = "6")]
		public override uint WriteValue(int val, byte[] buffer, int bitposition)
		{
			return default(uint);
		}

		[Token(Token = "0x6001164")]
		[Address(RVA = "0xCE4BC8", Offset = "0xCE4BC8", VA = "0xCE4BC8", Slot = "7")]
		public override void WriteCValue(uint cval, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001165")]
		[Address(RVA = "0xCE4C18", Offset = "0xCE4C18", VA = "0xCE4C18", Slot = "8")]
		public override int ReadValue(byte[] buffer, int bitposition)
		{
			return default(int);
		}

		[Token(Token = "0x6001166")]
		[Address(RVA = "0xCE4CB8", Offset = "0xCE4CB8", VA = "0xCE4CB8", Slot = "9")]
		public override uint ReadCValue(byte[] buffer, int bitposition)
		{
			return default(uint);
		}

		[Token(Token = "0x6001167")]
		[Address(RVA = "0xCE4D18", Offset = "0xCE4D18", VA = "0xCE4D18", Slot = "4")]
		public override uint Encode(int value)
		{
			return default(uint);
		}

		[Token(Token = "0x6001168")]
		[Address(RVA = "0xCE4D54", Offset = "0xCE4D54", VA = "0xCE4D54", Slot = "5")]
		public override int Decode(uint cvalue)
		{
			return default(int);
		}

		[Token(Token = "0x6001169")]
		[Address(RVA = "0xCE4D80", Offset = "0xCE4D80", VA = "0xCE4D80")]
		public static void Recalculate(int min, int max, LiteIntCrusher crusher)
		{
		}

		[Token(Token = "0x600116A")]
		[Address(RVA = "0xCE4A2C", Offset = "0xCE4A2C", VA = "0xCE4A2C")]
		public static void Recalculate(int min, int max, int smallest, int biggest, int bits)
		{
		}
	}
	[Token(Token = "0x2000223")]
	public enum NormalizedFloatCompression
	{
		[Token(Token = "0x4001238")]
		Bits2 = 2,
		[Token(Token = "0x4001239")]
		Bits3 = 3,
		[Token(Token = "0x400123A")]
		Bits4 = 4,
		[Token(Token = "0x400123B")]
		Bits5 = 5,
		[Token(Token = "0x400123C")]
		Bits6 = 6,
		[Token(Token = "0x400123D")]
		Bits7 = 7,
		[Token(Token = "0x400123E")]
		Bits8 = 8,
		[Token(Token = "0x400123F")]
		Bits9 = 9,
		[Token(Token = "0x4001240")]
		Bits10 = 10,
		[Token(Token = "0x4001241")]
		Bits12 = 12,
		[Token(Token = "0x4001242")]
		Bits14 = 14,
		[Token(Token = "0x4001243")]
		Half16 = 16,
		[Token(Token = "0x4001244")]
		Full32 = 32
	}
	[Token(Token = "0x2000224")]
	public static class NormCompress
	{
		[Token(Token = "0x20004D0")]
		public struct NormCompressCodec
		{
			[Token(Token = "0x400239E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public readonly int bits;

			[Token(Token = "0x400239F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public readonly float encoder;

			[Token(Token = "0x40023A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public readonly float decoder;

			[Token(Token = "0x6001E59")]
			[Address(RVA = "0x19D70C8", Offset = "0x19D70C8", VA = "0x19D70C8")]
			public NormCompressCodec(int bits, float encoder, float decoder)
			{
			}
		}

		[Token(Token = "0x4001245")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static NormCompressCodec[] codecForBit;

		[Token(Token = "0x4001246")]
		private const float NORM_COMP_ENCODE15 = 32767f;

		[Token(Token = "0x4001247")]
		private const float NORM_COMP_DECODE15 = 3.051851E-05f;

		[Token(Token = "0x4001248")]
		private const float NORM_COMP_ENCODE14 = 16383f;

		[Token(Token = "0x4001249")]
		private const float NORM_COMP_DECODE14 = 6.103888E-05f;

		[Token(Token = "0x400124A")]
		private const float NORM_COMP_ENCODE13 = 8191f;

		[Token(Token = "0x400124B")]
		private const float NORM_COMP_DECODE13 = 0.00012208521f;

		[Token(Token = "0x400124C")]
		private const float NORM_COMP_ENCODE12 = 4095f;

		[Token(Token = "0x400124D")]
		private const float NORM_COMP_DECODE12 = 0.00024420026f;

		[Token(Token = "0x400124E")]
		private const float NORM_COMP_ENCODE11 = 2047f;

		[Token(Token = "0x400124F")]
		private const float NORM_COMP_DECODE11 = 0.0004885198f;

		[Token(Token = "0x4001250")]
		private const float NORM_COMP_ENCODE10 = 1023f;

		[Token(Token = "0x4001251")]
		private const float NORM_COMP_DECODE10 = 0.0009775171f;

		[Token(Token = "0x4001252")]
		private const float NORM_COMP_ENCODE9 = 511f;

		[Token(Token = "0x4001253")]
		private const float NORM_COMP_DECODE9 = 0.0019569471f;

		[Token(Token = "0x4001254")]
		private const float NORM_COMP_ENCODE8 = 255f;

		[Token(Token = "0x4001255")]
		private const float NORM_COMP_DECODE8 = 0.003921569f;

		[Token(Token = "0x4001256")]
		private const float NORM_COMP_ENCODE7 = 127f;

		[Token(Token = "0x4001257")]
		private const float NORM_COMP_DECODE7 = 0.003921569f;

		[Token(Token = "0x4001258")]
		private const float NORM_COMP_ENCODE6 = 63f;

		[Token(Token = "0x4001259")]
		private const float NORM_COMP_DECODE6 = 1f / 63f;

		[Token(Token = "0x400125A")]
		private const float NORM_COMP_ENCODE5 = 31f;

		[Token(Token = "0x400125B")]
		private const float NORM_COMP_DECODE5 = 1f / 31f;

		[Token(Token = "0x400125C")]
		private const float NORM_COMP_ENCODE4 = 15f;

		[Token(Token = "0x400125D")]
		private const float NORM_COMP_DECODE4 = 1f / 15f;

		[Token(Token = "0x400125E")]
		private const float NORM_COMP_ENCODE3 = 7f;

		[Token(Token = "0x400125F")]
		private const float NORM_COMP_DECODE3 = 1f / 7f;

		[Token(Token = "0x4001260")]
		private const float NORM_COMP_ENCODE2 = 3f;

		[Token(Token = "0x4001261")]
		private const float NORM_COMP_DECODE2 = 1f / 3f;

		[Token(Token = "0x4001262")]
		private const float NORM_COMP_ENCODE1 = 1f;

		[Token(Token = "0x4001263")]
		private const float NORM_COMP_DECODE1 = 1f;

		[Token(Token = "0x4001264")]
		private const float NORM_COMP_ENCODE0 = 0f;

		[Token(Token = "0x4001265")]
		private const float NORM_COMP_DECODE0 = 0f;

		[Token(Token = "0x600116B")]
		[Address(RVA = "0x1566258", Offset = "0x1566258", VA = "0x1566258")]
		static NormCompress()
		{
		}

		[Token(Token = "0x600116C")]
		[Address(RVA = "0x156638C", Offset = "0x156638C", VA = "0x156638C")]
		public static uint CompressNorm(this float value, int bits)
		{
			return default(uint);
		}

		[Token(Token = "0x600116D")]
		[Address(RVA = "0x1566510", Offset = "0x1566510", VA = "0x1566510")]
		public static uint WriteNorm(this byte[] buffer, float value, int bitposition, int bits)
		{
			return default(uint);
		}

		[Token(Token = "0x600116E")]
		[Address(RVA = "0x15666C0", Offset = "0x15666C0", VA = "0x15666C0")]
		public static float ReadNorm(this byte[] buffer, int bitposition, int bits)
		{
			return default(float);
		}

		[Token(Token = "0x600116F")]
		[Address(RVA = "0x156637C", Offset = "0x156637C", VA = "0x156637C")]
		public static uint GetMaxValueForBits(int bitcount)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x2000225")]
	public enum DefaultKeyRate
	{
		[Token(Token = "0x4001267")]
		Never = 0,
		[Token(Token = "0x4001268")]
		Every = 1,
		[Token(Token = "0x4001269")]
		Every2nd = 2,
		[Token(Token = "0x400126A")]
		Every3rd = 3,
		[Token(Token = "0x400126B")]
		Every4th = 4,
		[Token(Token = "0x400126C")]
		Every5th = 5,
		[Token(Token = "0x400126D")]
		Every10th = 10
	}
	[Token(Token = "0x2000226")]
	public interface IPackObj
	{
	}
	[Token(Token = "0x2000227")]
	public enum DefaultPackInclusion
	{
		[Token(Token = "0x400126F")]
		Explicit,
		[Token(Token = "0x4001270")]
		AllPublic
	}
	[Token(Token = "0x2000228")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x848518", Offset = "0x848518")]
	public class PackObjectAttribute : Attribute
	{
		[Token(Token = "0x4001271")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public DefaultKeyRate defaultKeyRate;

		[Token(Token = "0x4001272")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public DefaultPackInclusion defaultInclusion;

		[Token(Token = "0x4001273")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SyncAs syncAs;

		[Token(Token = "0x4001274")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string postSnapCallback;

		[Token(Token = "0x4001275")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string postApplyCallback;

		[Token(Token = "0x6001170")]
		[Address(RVA = "0x1B64B9C", Offset = "0x1B64B9C", VA = "0x1B64B9C")]
		public PackObjectAttribute(DefaultKeyRate defaultKeyRate = DefaultKeyRate.Every)
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class SyncHalfFloatAttribute : SyncVarBaseAttribute, IPackSingle, IPackDouble
	{
		[Token(Token = "0x4001276")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private readonly IndicatorBit indicatorBit;

		[Token(Token = "0x6001171")]
		[Address(RVA = "0x1056A1C", Offset = "0x1056A1C", VA = "0x1056A1C")]
		public SyncHalfFloatAttribute(IndicatorBit indicatorBit = IndicatorBit.None, KeyRate keyRate = KeyRate.UseDefault)
		{
		}

		[Token(Token = "0x6001172")]
		[Address(RVA = "0x1056A80", Offset = "0x1056A80", VA = "0x1056A80", Slot = "9")]
		public override int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x6001173")]
		[Address(RVA = "0x1056A94", Offset = "0x1056A94", VA = "0x1056A94", Slot = "10")]
		public SerializationFlags Pack(float value, float prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001174")]
		[Address(RVA = "0x1056C00", Offset = "0x1056C00", VA = "0x1056C00", Slot = "11")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001175")]
		[Address(RVA = "0x1056CD4", Offset = "0x1056CD4", VA = "0x1056CD4", Slot = "12")]
		public SerializationFlags Pack(double value, double prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001176")]
		[Address(RVA = "0x1056D04", Offset = "0x1056D04", VA = "0x1056D04", Slot = "13")]
		public SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Token(Token = "0x200022A")]
	public class SyncRangedIntAttribute : SyncVarBaseAttribute, IPackByte, IPackSByte, IPackUInt16, IPackInt16, IPackUInt32, IPackInt32, IPackUInt64, IPackInt64, IPackSingle, IPackDouble
	{
		[Token(Token = "0x4001277")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private int min;

		[Token(Token = "0x4001278")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private int max;

		[Token(Token = "0x4001279")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private readonly int smallest;

		[Token(Token = "0x400127A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly int biggest;

		[Token(Token = "0x400127B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private readonly IndicatorBits indicatorBits;

		[Token(Token = "0x6001177")]
		[Address(RVA = "0x1057654", Offset = "0x1057654", VA = "0x1057654")]
		public SyncRangedIntAttribute(int min, int max, IndicatorBits indicatorBits = IndicatorBits.None, KeyRate keyRate = KeyRate.UseDefault)
		{
		}

		[Token(Token = "0x6001178")]
		[Address(RVA = "0x10576D4", Offset = "0x10576D4", VA = "0x10576D4", Slot = "9")]
		public override int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x6001179")]
		[Address(RVA = "0x1057708", Offset = "0x1057708", VA = "0x1057708")]
		private SerializationFlags Write(int value, int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600117A")]
		[Address(RVA = "0x1057880", Offset = "0x1057880", VA = "0x1057880")]
		private int Read(byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(int);
		}

		[Token(Token = "0x600117B")]
		[Address(RVA = "0x105794C", Offset = "0x105794C", VA = "0x105794C", Slot = "10")]
		public SerializationFlags Pack(byte value, byte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600117C")]
		[Address(RVA = "0x1057A24", Offset = "0x1057A24", VA = "0x1057A24", Slot = "11")]
		public SerializationFlags Unpack(byte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600117D")]
		[Address(RVA = "0x1057A58", Offset = "0x1057A58", VA = "0x1057A58", Slot = "12")]
		public SerializationFlags Pack(sbyte value, sbyte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600117E")]
		[Address(RVA = "0x1057B30", Offset = "0x1057B30", VA = "0x1057B30", Slot = "13")]
		public SerializationFlags Unpack(sbyte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600117F")]
		[Address(RVA = "0x1057B64", Offset = "0x1057B64", VA = "0x1057B64", Slot = "14")]
		public SerializationFlags Pack(ushort value, ushort prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001180")]
		[Address(RVA = "0x1057C3C", Offset = "0x1057C3C", VA = "0x1057C3C", Slot = "15")]
		public SerializationFlags Unpack(ushort value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001181")]
		[Address(RVA = "0x1057C70", Offset = "0x1057C70", VA = "0x1057C70", Slot = "16")]
		public SerializationFlags Pack(short value, short prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001182")]
		[Address(RVA = "0x1057D48", Offset = "0x1057D48", VA = "0x1057D48", Slot = "17")]
		public SerializationFlags Unpack(short value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001183")]
		[Address(RVA = "0x1057D7C", Offset = "0x1057D7C", VA = "0x1057D7C", Slot = "18")]
		public SerializationFlags Pack(uint value, uint prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001184")]
		[Address(RVA = "0x1057E54", Offset = "0x1057E54", VA = "0x1057E54", Slot = "19")]
		public SerializationFlags Unpack(uint value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001185")]
		[Address(RVA = "0x1057E88", Offset = "0x1057E88", VA = "0x1057E88", Slot = "20")]
		public SerializationFlags Pack(int value, int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001186")]
		[Address(RVA = "0x1057F60", Offset = "0x1057F60", VA = "0x1057F60", Slot = "21")]
		public SerializationFlags Unpack(int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001187")]
		[Address(RVA = "0x1057F94", Offset = "0x1057F94", VA = "0x1057F94", Slot = "22")]
		public SerializationFlags Pack(ulong value, ulong prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001188")]
		[Address(RVA = "0x105806C", Offset = "0x105806C", VA = "0x105806C", Slot = "23")]
		public SerializationFlags Unpack(ulong value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001189")]
		[Address(RVA = "0x10580A0", Offset = "0x10580A0", VA = "0x10580A0", Slot = "24")]
		public SerializationFlags Pack(long value, long prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600118A")]
		[Address(RVA = "0x1058178", Offset = "0x1058178", VA = "0x1058178", Slot = "25")]
		public SerializationFlags Unpack(long value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600118B")]
		[Address(RVA = "0x10581AC", Offset = "0x10581AC", VA = "0x10581AC", Slot = "26")]
		public SerializationFlags Pack(float value, float prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600118C")]
		[Address(RVA = "0x10583C4", Offset = "0x10583C4", VA = "0x10583C4", Slot = "27")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600118D")]
		[Address(RVA = "0x10583F8", Offset = "0x10583F8", VA = "0x10583F8", Slot = "28")]
		public SerializationFlags Pack(double value, double prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600118E")]
		[Address(RVA = "0x1058608", Offset = "0x1058608", VA = "0x1058608", Slot = "29")]
		public SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Token(Token = "0x200022B")]
	public class SyncListAttribute : SyncVarBaseAttribute, IPackList<int>
	{
		[Token(Token = "0x600118F")]
		[Address(RVA = "0x1056D38", Offset = "0x1056D38", VA = "0x1056D38", Slot = "10")]
		public SerializationFlags Pack(List<int> value, List<int> prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001190")]
		[Address(RVA = "0x1056F24", Offset = "0x1056F24", VA = "0x1056F24", Slot = "11")]
		public SerializationFlags Unpack(List<int> value, BitArray isCompleteMask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001191")]
		[Address(RVA = "0x10570B0", Offset = "0x10570B0", VA = "0x10570B0")]
		public SerializationFlags Pack(List<uint> value, List<uint> prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001192")]
		[Address(RVA = "0x1057268", Offset = "0x1057268", VA = "0x1057268")]
		public SerializationFlags Unpack(List<uint> value, BitArray isCompleteMask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x6001193")]
		public static void Copy<T>(List<T> src, List<T> trg, BitArray mask) where T : struct
		{
		}

		[Token(Token = "0x6001194")]
		public static void Capture<T>(List<T> src, List<T> trg) where T : struct
		{
		}

		[Token(Token = "0x6001195")]
		[Address(RVA = "0x10573F4", Offset = "0x10573F4", VA = "0x10573F4")]
		public SyncListAttribute()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class SyncVarAttribute : SyncVarBaseAttribute, IPackByte, IPackSByte, IPackUInt16, IPackInt16, IPackUInt32, IPackInt32, IPackUInt64, IPackInt64, IPackSingle, IPackDouble, IPackString, IPackStringBuilder, IPackVector2, IPackVector3, IPackVector2Int, IPackVector3Int, IPackBoolean, IPackChar
	{
		[Token(Token = "0x400127C")]
		public const int MAX_STR_LEN = 63;

		[Token(Token = "0x400127D")]
		public const int STR_LEN_BITS = 6;

		[Token(Token = "0x400127E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public bool WholeNumbers;

		[Token(Token = "0x400127F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static StringBuilder sb;

		[Token(Token = "0x6001196")]
		[Address(RVA = "0x105863C", Offset = "0x105863C", VA = "0x105863C")]
		public SyncVarAttribute(KeyRate keyRate = KeyRate.UseDefault)
		{
		}

		[Token(Token = "0x6001197")]
		[Address(RVA = "0x1058678", Offset = "0x1058678", VA = "0x1058678", Slot = "9")]
		public override int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x6001198")]
		public bool Compare<T>(List<T> a, List<T> b) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x6001199")]
		[Address(RVA = "0x1058E80", Offset = "0x1058E80", VA = "0x1058E80", Slot = "42")]
		public SerializationFlags Pack(bool value, bool prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600119A")]
		[Address(RVA = "0x1058F50", Offset = "0x1058F50", VA = "0x1058F50", Slot = "43")]
		public SerializationFlags Unpack(bool value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600119B")]
		[Address(RVA = "0x1058F90", Offset = "0x1058F90", VA = "0x1058F90", Slot = "10")]
		public SerializationFlags Pack(byte value, byte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600119C")]
		[Address(RVA = "0x1059050", Offset = "0x1059050", VA = "0x1059050", Slot = "11")]
		public SerializationFlags Unpack(byte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600119D")]
		[Address(RVA = "0x1059090", Offset = "0x1059090", VA = "0x1059090", Slot = "12")]
		public SerializationFlags Pack(sbyte value, sbyte prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600119E")]
		[Address(RVA = "0x1059150", Offset = "0x1059150", VA = "0x1059150", Slot = "13")]
		public SerializationFlags Unpack(sbyte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600119F")]
		[Address(RVA = "0x1059190", Offset = "0x1059190", VA = "0x1059190", Slot = "14")]
		public SerializationFlags Pack(ushort value, ushort prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011A0")]
		[Address(RVA = "0x1059250", Offset = "0x1059250", VA = "0x1059250", Slot = "15")]
		public SerializationFlags Unpack(ushort value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011A1")]
		[Address(RVA = "0x1059290", Offset = "0x1059290", VA = "0x1059290", Slot = "16")]
		public SerializationFlags Pack(short value, short prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011A2")]
		[Address(RVA = "0x10593D0", Offset = "0x10593D0", VA = "0x10593D0", Slot = "17")]
		public SerializationFlags Unpack(short value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011A3")]
		[Address(RVA = "0x1059410", Offset = "0x1059410", VA = "0x1059410", Slot = "44")]
		public SerializationFlags Pack(char value, char prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011A4")]
		[Address(RVA = "0x10594D0", Offset = "0x10594D0", VA = "0x10594D0", Slot = "45")]
		public SerializationFlags Unpack(char value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011A5")]
		[Address(RVA = "0x1059510", Offset = "0x1059510", VA = "0x1059510", Slot = "18")]
		public SerializationFlags Pack(uint value, uint prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011A6")]
		[Address(RVA = "0x10595D0", Offset = "0x10595D0", VA = "0x10595D0", Slot = "19")]
		public SerializationFlags Unpack(uint value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011A7")]
		[Address(RVA = "0x1059610", Offset = "0x1059610", VA = "0x1059610", Slot = "20")]
		public SerializationFlags Pack(int value, int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011A8")]
		[Address(RVA = "0x10596D0", Offset = "0x10596D0", VA = "0x10596D0", Slot = "21")]
		public SerializationFlags Unpack(int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011A9")]
		[Address(RVA = "0x1059710", Offset = "0x1059710", VA = "0x1059710", Slot = "22")]
		public SerializationFlags Pack(ulong value, ulong prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011AA")]
		[Address(RVA = "0x10597D0", Offset = "0x10597D0", VA = "0x10597D0", Slot = "23")]
		public SerializationFlags Unpack(ulong value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011AB")]
		[Address(RVA = "0x1059810", Offset = "0x1059810", VA = "0x1059810", Slot = "24")]
		public SerializationFlags Pack(long value, long prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011AC")]
		[Address(RVA = "0x10598D0", Offset = "0x10598D0", VA = "0x10598D0", Slot = "25")]
		public SerializationFlags Unpack(long value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011AD")]
		[Address(RVA = "0x1059910", Offset = "0x1059910", VA = "0x1059910", Slot = "26")]
		public SerializationFlags Pack(float value, float prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011AE")]
		[Address(RVA = "0x1059B68", Offset = "0x1059B68", VA = "0x1059B68", Slot = "27")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011AF")]
		[Address(RVA = "0x1059BC4", Offset = "0x1059BC4", VA = "0x1059BC4", Slot = "28")]
		public SerializationFlags Pack(double value, double prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011B0")]
		[Address(RVA = "0x1059E04", Offset = "0x1059E04", VA = "0x1059E04", Slot = "29")]
		public SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011B1")]
		[Address(RVA = "0x1059E60", Offset = "0x1059E60", VA = "0x1059E60", Slot = "30")]
		public SerializationFlags Pack(string value, string prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011B2")]
		[Address(RVA = "0x1059F9C", Offset = "0x1059F9C", VA = "0x1059F9C", Slot = "31")]
		public SerializationFlags Unpack(string value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011B3")]
		[Address(RVA = "0x105A108", Offset = "0x105A108", VA = "0x105A108", Slot = "32")]
		public SerializationFlags Pack(StringBuilder value, StringBuilder prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011B4")]
		[Address(RVA = "0x105A24C", Offset = "0x105A24C", VA = "0x105A24C", Slot = "33")]
		public SerializationFlags Unpack(StringBuilder value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011B5")]
		[Address(RVA = "0x105A348", Offset = "0x105A348", VA = "0x105A348", Slot = "34")]
		public SerializationFlags Pack(Vector2 value, Vector2 prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011B6")]
		[Address(RVA = "0x105A4CC", Offset = "0x105A4CC", VA = "0x105A4CC", Slot = "35")]
		public SerializationFlags Unpack(Vector2 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011B7")]
		[Address(RVA = "0x105A570", Offset = "0x105A570", VA = "0x105A570", Slot = "36")]
		public SerializationFlags Pack(Vector3 value, Vector3 prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011B8")]
		[Address(RVA = "0x105A784", Offset = "0x105A784", VA = "0x105A784", Slot = "37")]
		public SerializationFlags Unpack(Vector3 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011B9")]
		[Address(RVA = "0x105A874", Offset = "0x105A874", VA = "0x105A874", Slot = "38")]
		public SerializationFlags Pack(Vector2Int value, Vector2Int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011BA")]
		[Address(RVA = "0x105A950", Offset = "0x105A950", VA = "0x105A950", Slot = "39")]
		public SerializationFlags Unpack(Vector2Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011BB")]
		[Address(RVA = "0x105A9B8", Offset = "0x105A9B8", VA = "0x105A9B8", Slot = "40")]
		public SerializationFlags Pack(Vector3Int value, Vector3Int prevValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x60011BC")]
		[Address(RVA = "0x105AADC", Offset = "0x105AADC", VA = "0x105AADC", Slot = "41")]
		public SerializationFlags Unpack(Vector3Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Token(Token = "0x200022D")]
	public enum KeyRate
	{
		[Token(Token = "0x4001281")]
		UseDefault = -1,
		[Token(Token = "0x4001282")]
		Never = 0,
		[Token(Token = "0x4001283")]
		Every = 1,
		[Token(Token = "0x4001284")]
		Every2nd = 2,
		[Token(Token = "0x4001285")]
		Every3rd = 3,
		[Token(Token = "0x4001286")]
		Every4th = 4,
		[Token(Token = "0x4001287")]
		Every5th = 5,
		[Token(Token = "0x4001288")]
		Every10th = 10
	}
	[Token(Token = "0x200022E")]
	public enum SyncAs
	{
		[Token(Token = "0x400128A")]
		Auto,
		[Token(Token = "0x400128B")]
		State,
		[Token(Token = "0x400128C")]
		Trigger
	}
	[Token(Token = "0x200022F")]
	public enum SetValueTiming
	{
		[Token(Token = "0x400128E")]
		Never,
		[Token(Token = "0x400128F")]
		AfterCallback,
		[Token(Token = "0x4001290")]
		BeforeCallback
	}
	[Token(Token = "0x2000230")]
	public enum IndicatorBit
	{
		[Token(Token = "0x4001292")]
		None,
		[Token(Token = "0x4001293")]
		IsZero
	}
	[Token(Token = "0x2000231")]
	public enum IndicatorBits
	{
		[Token(Token = "0x4001295")]
		None,
		[Token(Token = "0x4001296")]
		IsZero,
		[Token(Token = "0x4001297")]
		IsZeroMidMinMax
	}
	[Token(Token = "0x2000232")]
	public class PackObjectSettings : SettingsScriptableObject<PackObjectSettings>
	{
		[Token(Token = "0x4001298")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x8522BC", Offset = "0x8522BC")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8522BC", Offset = "0x8522BC")]
		public bool autoGenerate;

		[Token(Token = "0x4001299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85231C", Offset = "0x85231C")]
		public bool deleteBadCode;

		[Token(Token = "0x60011BE")]
		[Address(RVA = "0x1B64EEC", Offset = "0x1B64EEC", VA = "0x1B64EEC")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x859F80", Offset = "0x859F80")]
		public static void Bootstrap()
		{
		}

		[Token(Token = "0x60011BF")]
		[Address(RVA = "0x1B64F5C", Offset = "0x1B64F5C", VA = "0x1B64F5C")]
		public PackObjectSettings()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public interface IOnElementCrusherChange
	{
		[Token(Token = "0x60011C0")]
		void OnCrusherChange(ElementCrusher ec);
	}
	[Serializable]
	[Token(Token = "0x2000234")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x84852C", Offset = "0x84852C")]
	public class ElementCrusher : Crusher<ElementCrusher>, IEquatable<ElementCrusher>, ICrusherCopy<ElementCrusher>
	{
		[Token(Token = "0x20004D1")]
		public enum UniformAxes
		{
			[Token(Token = "0x40023A2")]
			NonUniform = 0,
			[Token(Token = "0x40023A3")]
			XY = 3,
			[Token(Token = "0x40023A4")]
			XZ = 5,
			[Token(Token = "0x40023A5")]
			YZ = 6,
			[Token(Token = "0x40023A6")]
			XYZ = 7
		}

		[Token(Token = "0x20004D2")]
		public enum StaticTRSType
		{
			[Token(Token = "0x40023A8")]
			Position,
			[Token(Token = "0x40023A9")]
			Euler,
			[Token(Token = "0x40023AA")]
			Quaternion,
			[Token(Token = "0x40023AB")]
			Scale,
			[Token(Token = "0x40023AC")]
			Generic
		}

		[Token(Token = "0x400129A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<int, ElementCrusher> staticElementCrushers;

		[Token(Token = "0x400129B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly CompressedElement reusableCE;

		[Token(Token = "0x400129C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static ElementCrusher defaultUncompressedElementCrusher;

		[Token(Token = "0x400129D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static ElementCrusher defaultUncompressedPosCrusher;

		[Token(Token = "0x400129E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static ElementCrusher defaultUncompressedSclCrusher;

		[Token(Token = "0x400129F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static ElementCrusher defaultHalfFloatElementCrusher;

		[Token(Token = "0x40012A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static ElementCrusher defaultHalfFloatPosCrusher;

		[Token(Token = "0x40012A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public static ElementCrusher defaultHalfFloatSclCrusher;

		[Token(Token = "0x40012A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool hideFieldName;

		[Token(Token = "0x40012A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private TRSType _trsType;

		[Token(Token = "0x40012A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Transform defaultTransform;

		[Token(Token = "0x40012A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public UniformAxes uniformAxes;

		[Token(Token = "0x40012A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private FloatCrusher _xcrusher;

		[Token(Token = "0x40012A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private FloatCrusher _ycrusher;

		[Token(Token = "0x40012A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private FloatCrusher _zcrusher;

		[Token(Token = "0x40012A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private FloatCrusher _ucrusher;

		[Token(Token = "0x40012AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private QuatCrusher _qcrusher;

		[Token(Token = "0x40012AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		public bool local;

		[Token(Token = "0x40012AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		[SerializeField]
		private bool useWorldBounds;

		[Token(Token = "0x40012AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[WorldBoundsSelectAttribute]
		[HideInInspector]
		[SerializeField]
		private int boundsGroupId;

		[Token(Token = "0x40012AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		public bool enableTRSTypeSelector;

		[Token(Token = "0x40012AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x69")]
		[SerializeField]
		public bool enableLocalSelector;

		[NonSerialized]
		[Token(Token = "0x40012B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6A")]
		private bool cached;

		[NonSerialized]
		[Token(Token = "0x40012B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6B")]
		private bool cache_xEnabled;

		[NonSerialized]
		[Token(Token = "0x40012B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool cache_yEnabled;

		[NonSerialized]
		[Token(Token = "0x40012B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool cache_zEnabled;

		[NonSerialized]
		[Token(Token = "0x40012B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool cache_uEnabled;

		[NonSerialized]
		[Token(Token = "0x40012B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		private bool cache_qEnabled;

		[NonSerialized]
		[Token(Token = "0x40012B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool cache_isUniformScale;

		[NonSerialized]
		[Token(Token = "0x40012B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private readonly int[] cache_xBits;

		[NonSerialized]
		[Token(Token = "0x40012B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private readonly int[] cache_yBits;

		[NonSerialized]
		[Token(Token = "0x40012B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private readonly int[] cache_zBits;

		[NonSerialized]
		[Token(Token = "0x40012BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly int[] cache_uBits;

		[NonSerialized]
		[Token(Token = "0x40012BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly int[] cache_TotalBits;

		[Token(Token = "0x40012BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public ReadOnlyCollection<int> Cached_TotalBits;

		[NonSerialized]
		[Token(Token = "0x40012BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int cache_qBits;

		[NonSerialized]
		[Token(Token = "0x40012BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private bool cache_mustCorrectRotationX;

		[Token(Token = "0x40012BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Bounds bounds;

		[Token(Token = "0x40012C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public static ulong[] reusableArray64;

		[Token(Token = "0x17000115")]
		public TRSType TRSType
		{
			[Token(Token = "0x60011C4")]
			[Address(RVA = "0xC03640", Offset = "0xC03640", VA = "0xC03640")]
			get
			{
				return default(TRSType);
			}
			[Token(Token = "0x60011C5")]
			[Address(RVA = "0xC03648", Offset = "0xC03648", VA = "0xC03648")]
			set
			{
			}
		}

		[Token(Token = "0x17000116")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85EC64", Offset = "0x85EC64")]
		public FloatCrusher xcrusher
		{
			[Token(Token = "0x60011C6")]
			[Address(RVA = "0xC03684", Offset = "0xC03684", VA = "0xC03684")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C7")]
			[Address(RVA = "0xC0368C", Offset = "0xC0368C", VA = "0xC0368C")]
			set
			{
			}
		}

		[Token(Token = "0x17000117")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85EC9C", Offset = "0x85EC9C")]
		public FloatCrusher ycrusher
		{
			[Token(Token = "0x60011C8")]
			[Address(RVA = "0xC03690", Offset = "0xC03690", VA = "0xC03690")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011C9")]
			[Address(RVA = "0xC03698", Offset = "0xC03698", VA = "0xC03698")]
			set
			{
			}
		}

		[Token(Token = "0x17000118")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85ECD4", Offset = "0x85ECD4")]
		public FloatCrusher zcrusher
		{
			[Token(Token = "0x60011CA")]
			[Address(RVA = "0xC0369C", Offset = "0xC0369C", VA = "0xC0369C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CB")]
			[Address(RVA = "0xC036A4", Offset = "0xC036A4", VA = "0xC036A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000119")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85ED0C", Offset = "0x85ED0C")]
		public FloatCrusher ucrusher
		{
			[Token(Token = "0x60011CC")]
			[Address(RVA = "0xC036A8", Offset = "0xC036A8", VA = "0xC036A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CD")]
			[Address(RVA = "0xC036B0", Offset = "0xC036B0", VA = "0xC036B0")]
			set
			{
			}
		}

		[Token(Token = "0x1700011A")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85ED44", Offset = "0x85ED44")]
		public QuatCrusher qcrusher
		{
			[Token(Token = "0x60011CE")]
			[Address(RVA = "0xC036B4", Offset = "0xC036B4", VA = "0xC036B4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011CF")]
			[Address(RVA = "0xC036BC", Offset = "0xC036BC", VA = "0xC036BC")]
			set
			{
			}
		}

		[Token(Token = "0x1700011B")]
		public FloatCrusher XCrusher
		{
			[Token(Token = "0x60011D0")]
			[Address(RVA = "0xC036C0", Offset = "0xC036C0", VA = "0xC036C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D1")]
			[Address(RVA = "0xC02AA4", Offset = "0xC02AA4", VA = "0xC02AA4")]
			set
			{
			}
		}

		[Token(Token = "0x1700011C")]
		public FloatCrusher YCrusher
		{
			[Token(Token = "0x60011D2")]
			[Address(RVA = "0xC03B0C", Offset = "0xC03B0C", VA = "0xC03B0C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D3")]
			[Address(RVA = "0xC02C38", Offset = "0xC02C38", VA = "0xC02C38")]
			set
			{
			}
		}

		[Token(Token = "0x1700011D")]
		public FloatCrusher ZCrusher
		{
			[Token(Token = "0x60011D4")]
			[Address(RVA = "0xC03B14", Offset = "0xC03B14", VA = "0xC03B14")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D5")]
			[Address(RVA = "0xC02DCC", Offset = "0xC02DCC", VA = "0xC02DCC")]
			set
			{
			}
		}

		[Token(Token = "0x1700011E")]
		public FloatCrusher UCrusher
		{
			[Token(Token = "0x60011D6")]
			[Address(RVA = "0xC03B1C", Offset = "0xC03B1C", VA = "0xC03B1C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D7")]
			[Address(RVA = "0xC034AC", Offset = "0xC034AC", VA = "0xC034AC")]
			set
			{
			}
		}

		[Token(Token = "0x1700011F")]
		public QuatCrusher QCrusher
		{
			[Token(Token = "0x60011D8")]
			[Address(RVA = "0xC03B24", Offset = "0xC03B24", VA = "0xC03B24")]
			get
			{
				return null;
			}
			[Token(Token = "0x60011D9")]
			[Address(RVA = "0xC032A0", Offset = "0xC032A0", VA = "0xC032A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000120")]
		[SerializeField]
		public bool UseWorldBounds
		{
			[Token(Token = "0x60011DC")]
			[Address(RVA = "0xC03B34", Offset = "0xC03B34", VA = "0xC03B34")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011DD")]
			[Address(RVA = "0xC03B3C", Offset = "0xC03B3C", VA = "0xC03B3C")]
			set
			{
			}
		}

		[Token(Token = "0x17000121")]
		public int BoundsGroupId
		{
			[Token(Token = "0x60011DE")]
			[Address(RVA = "0xC03E9C", Offset = "0xC03E9C", VA = "0xC03E9C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60011DF")]
			[Address(RVA = "0xC03EA4", Offset = "0xC03EA4", VA = "0xC03EA4")]
			set
			{
			}
		}

		[Token(Token = "0x17000122")]
		public Bounds Bounds
		{
			[Token(Token = "0x60011E4")]
			[Address(RVA = "0xC047B0", Offset = "0xC047B0", VA = "0xC047B0")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x60011E5")]
			[Address(RVA = "0xC04840", Offset = "0xC04840", VA = "0xC04840")]
			set
			{
			}
		}

		[Token(Token = "0x17000123")]
		public bool Enabled
		{
			[Token(Token = "0x60011EA")]
			[Address(RVA = "0xC049CC", Offset = "0xC049CC", VA = "0xC049CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60011EB")]
			[Address(RVA = "0xC04A6C", Offset = "0xC04A6C", VA = "0xC04A6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000124")]
		public FloatCrusher Item
		{
			[Token(Token = "0x60011EC")]
			[Address(RVA = "0xC04B1C", Offset = "0xC04B1C", VA = "0xC04B1C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60011C1")]
		[Address(RVA = "0xC02800", Offset = "0xC02800", VA = "0xC02800")]
		public static ElementCrusher GetStaticPositionCrusher(Bounds bounds, int resolution)
		{
			return null;
		}

		[Token(Token = "0x60011C2")]
		[Address(RVA = "0xC031C8", Offset = "0xC031C8", VA = "0xC031C8")]
		public static ElementCrusher GetStaticQuatCrusher(int minBits)
		{
			return null;
		}

		[Token(Token = "0x60011C3")]
		[Address(RVA = "0xC02F60", Offset = "0xC02F60", VA = "0xC02F60")]
		public static ElementCrusher CheckAgainstStatics(ElementCrusher ec, bool CheckAgainstFloatCrushersAsWell = true)
		{
			return null;
		}

		[Token(Token = "0x60011DA")]
		[Address(RVA = "0xC03B2C", Offset = "0xC03B2C", VA = "0xC03B2C")]
		public void OnCrusherChange(QuatCrusher crusher)
		{
		}

		[Token(Token = "0x60011DB")]
		[Address(RVA = "0xC03B30", Offset = "0xC03B30", VA = "0xC03B30")]
		public void OnCrusherChange(FloatCrusher crusher)
		{
		}

		[Token(Token = "0x60011E0")]
		[Address(RVA = "0xC03EB4", Offset = "0xC03EB4", VA = "0xC03EB4")]
		private void OnWorldBoundsReady()
		{
		}

		[Token(Token = "0x60011E1")]
		[Address(RVA = "0xC03ED8", Offset = "0xC03ED8", VA = "0xC03ED8")]
		public void ApplyWorldCrusherSettings()
		{
		}

		[Token(Token = "0x60011E2")]
		[Address(RVA = "0xC03B48", Offset = "0xC03B48", VA = "0xC03B48")]
		public void ApplyWorldCrusherSettings(bool newUseBounds, int newBndsGrpId)
		{
		}

		[Token(Token = "0x60011E3")]
		[Address(RVA = "0xC0468C", Offset = "0xC0468C", VA = "0xC0468C")]
		private WorldBoundsGroup GetUsedWorldBounds()
		{
			return null;
		}

		[Token(Token = "0x60011E6")]
		[Address(RVA = "0xC04918", Offset = "0xC04918", VA = "0xC04918", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x60011E7")]
		[Address(RVA = "0xC0491C", Offset = "0xC0491C", VA = "0xC0491C", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x60011E8")]
		[Address(RVA = "0xC036C8", Offset = "0xC036C8", VA = "0xC036C8")]
		public void CacheValues()
		{
		}

		[Token(Token = "0x60011E9")]
		[Address(RVA = "0xC04920", Offset = "0xC04920", VA = "0xC04920")]
		private void NullUnusedCrushers()
		{
		}

		[Token(Token = "0x60011ED")]
		[Address(RVA = "0xC04C18", Offset = "0xC04C18", VA = "0xC04C18")]
		public ElementCrusher()
		{
		}

		[Token(Token = "0x60011EE")]
		[Address(RVA = "0xC02994", Offset = "0xC02994", VA = "0xC02994")]
		internal ElementCrusher(StaticTRSType staticTrsType)
		{
		}

		[Token(Token = "0x60011EF")]
		[Address(RVA = "0xC04D20", Offset = "0xC04D20", VA = "0xC04D20")]
		public ElementCrusher(bool enableTRSTypeSelector = true)
		{
		}

		[Token(Token = "0x60011F0")]
		[Address(RVA = "0xC04E48", Offset = "0xC04E48", VA = "0xC04E48")]
		public ElementCrusher(TRSType trsType, bool enableTRSTypeSelector = true)
		{
		}

		[Token(Token = "0x60011F1")]
		[Address(RVA = "0xC04378", Offset = "0xC04378", VA = "0xC04378")]
		public void Defaults(TRSType trs)
		{
		}

		[Token(Token = "0x60011F2")]
		[Address(RVA = "0xC04F70", Offset = "0xC04F70", VA = "0xC04F70")]
		public void Write(CompressedElement nonalloc, Transform trans, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60011F3")]
		[Address(RVA = "0xC05394", Offset = "0xC05394", VA = "0xC05394")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x859F94", Offset = "0x859F94")]
		public CompressedElement Write(Transform trans, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60011F4")]
		[Address(RVA = "0xC057B4", Offset = "0xC057B4", VA = "0xC057B4")]
		public void Write(CompressedElement ce, byte[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60011F5")]
		[Address(RVA = "0xC058F0", Offset = "0xC058F0", VA = "0xC058F0")]
		public void Write(CompressedElement ce, uint[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60011F6")]
		[Address(RVA = "0xC05A2C", Offset = "0xC05A2C", VA = "0xC05A2C")]
		public void Write(CompressedElement ce, ulong[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60011F7")]
		[Address(RVA = "0xC05B68", Offset = "0xC05B68", VA = "0xC05B68")]
		public void Write(CompressedElement nonalloc, Vector3 v3, byte[] bytes, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60011F8")]
		[Address(RVA = "0xC05B90", Offset = "0xC05B90", VA = "0xC05B90")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x859FA4", Offset = "0x859FA4")]
		public CompressedElement Write(Vector3 v3, byte[] bytes, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60011F9")]
		[Address(RVA = "0xC0509C", Offset = "0xC0509C", VA = "0xC0509C")]
		public void Write(CompressedElement nonalloc, Vector3 v3, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60011FA")]
		[Address(RVA = "0xC054A8", Offset = "0xC054A8", VA = "0xC054A8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x859FB4", Offset = "0x859FB4")]
		public CompressedElement Write(Vector3 v3, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60011FB")]
		[Address(RVA = "0xC052F4", Offset = "0xC052F4", VA = "0xC052F4")]
		public void Write(CompressedElement nonalloc, Quaternion quat, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60011FC")]
		[Address(RVA = "0xC056DC", Offset = "0xC056DC", VA = "0xC056DC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x859FC4", Offset = "0x859FC4")]
		public CompressedElement Write(Quaternion quat, byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60011FD")]
		[Address(RVA = "0xC05BB8", Offset = "0xC05BB8", VA = "0xC05BB8")]
		public void Write(CompressedElement nonalloc, Transform trans, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60011FE")]
		[Address(RVA = "0xC05CE4", Offset = "0xC05CE4", VA = "0xC05CE4")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60011FF")]
		[Address(RVA = "0xC05F3C", Offset = "0xC05F3C", VA = "0xC05F3C")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ulong[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001200")]
		[Address(RVA = "0xC05FDC", Offset = "0xC05FDC", VA = "0xC05FDC")]
		public void Read(CompressedElement nonalloc, byte[] bytes, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001201")]
		[Address(RVA = "0xC06298", Offset = "0xC06298", VA = "0xC06298")]
		public CompressedElement Read(byte[] buffer, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001202")]
		[Address(RVA = "0xC06008", Offset = "0xC06008", VA = "0xC06008")]
		public void Read(CompressedElement nonalloc, byte[] bytes, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001203")]
		[Address(RVA = "0xC0634C", Offset = "0xC0634C", VA = "0xC0634C")]
		public CompressedElement Read(byte[] bytes, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001204")]
		[Address(RVA = "0xC063F0", Offset = "0xC063F0", VA = "0xC063F0")]
		public void Read(CompressedElement nonalloc, ulong[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001205")]
		[Address(RVA = "0xC06680", Offset = "0xC06680", VA = "0xC06680")]
		public void Read(CompressedElement nonalloc, uint[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001206")]
		[Address(RVA = "0xC06910", Offset = "0xC06910", VA = "0xC06910")]
		public Element ReadAndDecompress(byte[] bytes, int bitposition, IncludedAxes ia = IncludedAxes.XYZ, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x6001207")]
		[Address(RVA = "0xC06B2C", Offset = "0xC06B2C", VA = "0xC06B2C")]
		public void Write(CompressedElement nonalloc, Transform trans, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001208")]
		[Address(RVA = "0xC06E58", Offset = "0xC06E58", VA = "0xC06E58")]
		public void Write(Transform trans, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001209")]
		[Address(RVA = "0xC070EC", Offset = "0xC070EC", VA = "0xC070EC")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600120A")]
		[Address(RVA = "0xC07114", Offset = "0xC07114", VA = "0xC07114")]
		public void Write(Vector3 v3, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600120B")]
		[Address(RVA = "0xC06C58", Offset = "0xC06C58", VA = "0xC06C58")]
		public void Write(CompressedElement nonalloc, Vector3 v3, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600120C")]
		[Address(RVA = "0xC06F6C", Offset = "0xC06F6C", VA = "0xC06F6C")]
		public void Write(Vector3 v3, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600120D")]
		[Address(RVA = "0xC0713C", Offset = "0xC0713C", VA = "0xC0713C")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ulong buffer)
		{
		}

		[Token(Token = "0x600120E")]
		[Address(RVA = "0xC07160", Offset = "0xC07160", VA = "0xC07160")]
		public void Write(Quaternion quat, ulong buffer)
		{
		}

		[Token(Token = "0x600120F")]
		[Address(RVA = "0xC06DA8", Offset = "0xC06DA8", VA = "0xC06DA8")]
		public void Write(CompressedElement nonalloc, Quaternion quat, ulong buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001210")]
		[Address(RVA = "0xC07048", Offset = "0xC07048", VA = "0xC07048")]
		public void Write(Quaternion quat, ulong buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001211")]
		[Address(RVA = "0xC07184", Offset = "0xC07184", VA = "0xC07184")]
		public CompressedElement Write(CompressedElement ce, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001212")]
		[Address(RVA = "0xC071AC", Offset = "0xC071AC", VA = "0xC071AC")]
		public CompressedElement Write(CompressedElement ce, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001213")]
		[Address(RVA = "0xC07310", Offset = "0xC07310", VA = "0xC07310")]
		public Element Read(ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x6001214")]
		[Address(RVA = "0xC07470", Offset = "0xC07470", VA = "0xC07470")]
		public Element Read(ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(Element);
		}

		[Token(Token = "0x6001215")]
		[Address(RVA = "0xC075CC", Offset = "0xC075CC", VA = "0xC075CC")]
		public void Read(CompressedElement nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001216")]
		[Address(RVA = "0xC075F4", Offset = "0xC075F4", VA = "0xC075F4")]
		public void Read(CompressedElement nonalloc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001217")]
		[Address(RVA = "0xC07868", Offset = "0xC07868", VA = "0xC07868")]
		public void Read(CompressedElement nonalloc, ulong frag0, ulong frag1 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001218")]
		[Address(RVA = "0xC0796C", Offset = "0xC0796C", VA = "0xC0796C")]
		public CompressedElement Read(ulong frag0, ulong frag1 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001219")]
		[Address(RVA = "0xC07A10", Offset = "0xC07A10", VA = "0xC07A10")]
		public void Compress(CompressedElement nonalloc, Transform trans)
		{
		}

		[Token(Token = "0x600121A")]
		[Address(RVA = "0xC07E50", Offset = "0xC07E50", VA = "0xC07E50")]
		public CompressedElement Compress(Transform trans)
		{
			return null;
		}

		[Token(Token = "0x600121B")]
		[Address(RVA = "0xC07EDC", Offset = "0xC07EDC", VA = "0xC07EDC")]
		public void CompressAndWrite(Transform trans, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x600121C")]
		[Address(RVA = "0xC08310", Offset = "0xC08310", VA = "0xC08310")]
		public void Compress(CompressedElement nonalloc, Element e)
		{
		}

		[Token(Token = "0x600121D")]
		[Address(RVA = "0xC08334", Offset = "0xC08334", VA = "0xC08334")]
		public CompressedElement Compress(Element e)
		{
			return null;
		}

		[Token(Token = "0x600121E")]
		[Address(RVA = "0xC0841C", Offset = "0xC0841C", VA = "0xC0841C")]
		public void CompressAndWrite(Element e, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x600121F")]
		[Address(RVA = "0xC0844C", Offset = "0xC0844C", VA = "0xC0844C")]
		public void Compress(CompressedElement nonalloc, Rigidbody rb, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6001220")]
		[Address(RVA = "0xC07B20", Offset = "0xC07B20", VA = "0xC07B20")]
		public void Compress(CompressedElement nonalloc, Vector3 v, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6001221")]
		[Address(RVA = "0xC08898", Offset = "0xC08898", VA = "0xC08898")]
		public CompressedElement Compress(Vector3 v)
		{
			return null;
		}

		[Token(Token = "0x6001222")]
		[Address(RVA = "0xC08000", Offset = "0xC08000", VA = "0xC08000")]
		public void CompressAndWrite(Vector3 v, byte[] buffer, int bitposition, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6001223")]
		[Address(RVA = "0xC07DAC", Offset = "0xC07DAC", VA = "0xC07DAC")]
		public void Compress(CompressedElement nonalloc, Quaternion quat)
		{
		}

		[Token(Token = "0x6001224")]
		[Address(RVA = "0xC08948", Offset = "0xC08948", VA = "0xC08948")]
		public CompressedElement Compress(Quaternion quat)
		{
			return null;
		}

		[Token(Token = "0x6001225")]
		[Address(RVA = "0xC0825C", Offset = "0xC0825C", VA = "0xC0825C")]
		public void CompressAndWrite(Quaternion quat, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001226")]
		[Address(RVA = "0xC069EC", Offset = "0xC069EC", VA = "0xC069EC")]
		public Element Decompress(CompressedElement compressed)
		{
			return default(Element);
		}

		[Token(Token = "0x6001227")]
		[Address(RVA = "0xC089FC", Offset = "0xC089FC", VA = "0xC089FC")]
		public Element Decompress(ulong cval, IncludedAxes ia = IncludedAxes.XYZ)
		{
			return default(Element);
		}

		[Token(Token = "0x6001228")]
		[Address(RVA = "0xC08B54", Offset = "0xC08B54", VA = "0xC08B54")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x859FD4", Offset = "0x859FD4")]
		public void Apply(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6001229")]
		[Address(RVA = "0xC08BA8", Offset = "0xC08BA8", VA = "0xC08BA8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A00C", Offset = "0x85A00C")]
		public void Apply(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x600122A")]
		[Address(RVA = "0xC08F30", Offset = "0xC08F30", VA = "0xC08F30")]
		public void Move(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x600122B")]
		[Address(RVA = "0xC08F84", Offset = "0xC08F84", VA = "0xC08F84")]
		public void Move(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x600122C")]
		[Address(RVA = "0xC09348", Offset = "0xC09348", VA = "0xC09348")]
		public void Set(Rigidbody rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x600122D")]
		[Address(RVA = "0xC09738", Offset = "0xC09738", VA = "0xC09738")]
		public void Set(Rigidbody2D rb, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x600122E")]
		[Address(RVA = "0xC0939C", Offset = "0xC0939C", VA = "0xC0939C")]
		public void Set(Rigidbody rb, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x600122F")]
		[Address(RVA = "0xC0978C", Offset = "0xC0978C", VA = "0xC0978C")]
		public void Set(Rigidbody2D rb2d, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6001230")]
		[Address(RVA = "0xC09AF8", Offset = "0xC09AF8", VA = "0xC09AF8")]
		public void Apply(Transform trans, CompressedElement ce, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6001231")]
		[Address(RVA = "0xC09B4C", Offset = "0xC09B4C", VA = "0xC09B4C")]
		public void Apply(Transform trans, Element e, IncludedAxes ia = IncludedAxes.XYZ)
		{
		}

		[Token(Token = "0x6001232")]
		[Address(RVA = "0xC0A0F0", Offset = "0xC0A0F0", VA = "0xC0A0F0")]
		public Vector3 Clamp(Vector3 v3)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001233")]
		[Address(RVA = "0xC0A2B8", Offset = "0xC0A2B8", VA = "0xC0A2B8")]
		public BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x6001234")]
		[Address(RVA = "0xC0A468", Offset = "0xC0A468", VA = "0xC0A468")]
		private bool TestMatchingUpper(uint a, uint b, int lowerbits)
		{
			return default(bool);
		}

		[Token(Token = "0x6001235")]
		[Address(RVA = "0xC0A38C", Offset = "0xC0A38C", VA = "0xC0A38C")]
		public bool TestMatchingUpper(CompressedElement a, CompressedElement b, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x6001236")]
		[Address(RVA = "0xC0A480", Offset = "0xC0A480", VA = "0xC0A480")]
		public int TallyBits(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x6001237")]
		[Address(RVA = "0xC0A618", Offset = "0xC0A618", VA = "0xC0A618", Slot = "9")]
		public void CopyFrom(ElementCrusher src)
		{
		}

		[Token(Token = "0x6001238")]
		[Address(RVA = "0xC0A75C", Offset = "0xC0A75C", VA = "0xC0A75C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001239")]
		[Address(RVA = "0xC0A824", Offset = "0xC0A824", VA = "0xC0A824", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600123A")]
		[Address(RVA = "0xC0A8B0", Offset = "0xC0A8B0", VA = "0xC0A8B0", Slot = "8")]
		public bool Equals(ElementCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x600123B")]
		[Address(RVA = "0xC0AB34", Offset = "0xC0AB34", VA = "0xC0AB34", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x600123C")]
		[Address(RVA = "0xC0ACE0", Offset = "0xC0ACE0", VA = "0xC0ACE0")]
		public static bool operator ==(ElementCrusher crusher1, ElementCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x600123D")]
		[Address(RVA = "0xC0AAB8", Offset = "0xC0AAB8", VA = "0xC0AAB8")]
		public static bool operator !=(ElementCrusher crusher1, ElementCrusher crusher2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000235")]
	public static class FloatCrusherExtensions
	{
		[Token(Token = "0x600123F")]
		[Address(RVA = "0xBA0C40", Offset = "0xBA0C40", VA = "0xBA0C40")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001240")]
		[Address(RVA = "0xBA0CD4", Offset = "0xBA0CD4", VA = "0xBA0CD4")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, uint buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001241")]
		[Address(RVA = "0xBA0D68", Offset = "0xBA0D68", VA = "0xBA0D68")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ushort buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001242")]
		[Address(RVA = "0xBA0DFC", Offset = "0xBA0DFC", VA = "0xBA0DFC")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, byte buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001243")]
		[Address(RVA = "0xBA0E90", Offset = "0xBA0E90", VA = "0xBA0E90")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001244")]
		[Address(RVA = "0xBA0F00", Offset = "0xBA0F00", VA = "0xBA0F00")]
		public static float ReadAndDecompress(this FloatCrusher fc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(float);
		}

		[Token(Token = "0x6001245")]
		[Address(RVA = "0xBA0F6C", Offset = "0xBA0F6C", VA = "0xBA0F6C")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001246")]
		[Address(RVA = "0xBA0FF0", Offset = "0xBA0FF0", VA = "0xBA0FF0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A0B4", Offset = "0x85A0B4")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001247")]
		[Address(RVA = "0xBA1090", Offset = "0xBA1090", VA = "0xBA1090")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001248")]
		[Address(RVA = "0xBA1100", Offset = "0xBA1100", VA = "0xBA1100")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001249")]
		[Address(RVA = "0xBA1170", Offset = "0xBA1170", VA = "0xBA1170")]
		public static CompressedFloat Write(this FloatCrusher fc, CompressedFloat c, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600124A")]
		[Address(RVA = "0xBA11E0", Offset = "0xBA11E0", VA = "0xBA11E0")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600124B")]
		[Address(RVA = "0xBA126C", Offset = "0xBA126C", VA = "0xBA126C")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600124C")]
		[Address(RVA = "0xBA12F8", Offset = "0xBA12F8", VA = "0xBA12F8")]
		public static CompressedFloat Write(this FloatCrusher fc, uint c, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600124D")]
		[Address(RVA = "0xBA1384", Offset = "0xBA1384", VA = "0xBA1384")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600124E")]
		[Address(RVA = "0xBA1434", Offset = "0xBA1434", VA = "0xBA1434")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x600124F")]
		[Address(RVA = "0xBA14E8", Offset = "0xBA14E8", VA = "0xBA14E8")]
		public static CompressedFloat Write(this FloatCrusher fc, float f, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001250")]
		[Address(RVA = "0xBA159C", Offset = "0xBA159C", VA = "0xBA159C")]
		public static CompressedFloat Read(this FloatCrusher fc, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001251")]
		[Address(RVA = "0xBA1620", Offset = "0xBA1620", VA = "0xBA1620")]
		public static CompressedFloat Read(this FloatCrusher fc, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001252")]
		[Address(RVA = "0xBA16A4", Offset = "0xBA16A4", VA = "0xBA16A4")]
		public static CompressedFloat Read(this FloatCrusher fc, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(CompressedFloat);
		}

		[Token(Token = "0x6001253")]
		[Address(RVA = "0xBA1728", Offset = "0xBA1728", VA = "0xBA1728")]
		public static float ReadAndDecompress(this FloatCrusher fc, byte[] buffer, int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x6001254")]
		[Address(RVA = "0xBA178C", Offset = "0xBA178C", VA = "0xBA178C")]
		public static float ReadAndDecompress(this FloatCrusher fc, uint[] buffer, int bitposition)
		{
			return default(float);
		}

		[Token(Token = "0x6001255")]
		[Address(RVA = "0xBA17F0", Offset = "0xBA17F0", VA = "0xBA17F0")]
		public static float ReadAndDecompress(this FloatCrusher fc, ulong[] buffer, int bitposition)
		{
			return default(float);
		}
	}
	[Token(Token = "0x2000236")]
	public enum CompressLevel
	{
		[Token(Token = "0x40012C2")]
		SetBits = -1,
		[Token(Token = "0x40012C3")]
		Disabled = 0,
		[Token(Token = "0x40012C4")]
		uint16Low = 16,
		[Token(Token = "0x40012C5")]
		uint32Med = 32,
		[Token(Token = "0x40012C6")]
		uint64Hi = 64
	}
	[Serializable]
	[Token(Token = "0x2000237")]
	public class QuatCrusher : Crusher<QuatCrusher>, IEquatable<QuatCrusher>, ICrusherCopy<QuatCrusher>
	{
		[Token(Token = "0x40012C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool QC_ISPRO;

		[Token(Token = "0x40012C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85245C", Offset = "0x85245C")]
		[SerializeField]
		private int bits;

		[Token(Token = "0x40012C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		public CompressLevel _compressLevel;

		[Token(Token = "0x40012CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		public Transform transform;

		[Token(Token = "0x40012CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		public bool local;

		[Token(Token = "0x40012CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[HideInInspector]
		public bool isStandalone;

		[Token(Token = "0x40012CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32")]
		[SerializeField]
		public bool showEnableToggle;

		[Token(Token = "0x40012CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33")]
		[SerializeField]
		private bool enabled;

		[Token(Token = "0x40012CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private QuatCompress.Cache cache;

		[NonSerialized]
		[Token(Token = "0x40012D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private bool initialized;

		[Token(Token = "0x17000125")]
		public int Bits
		{
			[Token(Token = "0x6001256")]
			[Address(RVA = "0xDCB468", Offset = "0xDCB468", VA = "0xDCB468")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001257")]
			[Address(RVA = "0xDCB55C", Offset = "0xDCB55C", VA = "0xDCB55C")]
			set
			{
			}
		}

		[Token(Token = "0x17000126")]
		public CompressLevel CompressLevel
		{
			[Token(Token = "0x6001258")]
			[Address(RVA = "0xDCB784", Offset = "0xDCB784", VA = "0xDCB784")]
			get
			{
				return default(CompressLevel);
			}
			[Token(Token = "0x6001259")]
			[Address(RVA = "0xDCB668", Offset = "0xDCB668", VA = "0xDCB668")]
			set
			{
			}
		}

		[Token(Token = "0x17000127")]
		[SerializeField]
		public bool Enabled
		{
			[Token(Token = "0x600125A")]
			[Address(RVA = "0xDCB78C", Offset = "0xDCB78C", VA = "0xDCB78C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600125B")]
			[Address(RVA = "0xDCB794", Offset = "0xDCB794", VA = "0xDCB794")]
			set
			{
			}
		}

		[Token(Token = "0x600125C")]
		[Address(RVA = "0xDCB80C", Offset = "0xDCB80C", VA = "0xDCB80C")]
		public QuatCrusher()
		{
		}

		[Token(Token = "0x600125D")]
		[Address(RVA = "0xDCB878", Offset = "0xDCB878", VA = "0xDCB878")]
		public QuatCrusher(int bits, bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x600125E")]
		[Address(RVA = "0xDCB988", Offset = "0xDCB988", VA = "0xDCB988")]
		public QuatCrusher(bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x600125F")]
		[Address(RVA = "0xDCBA54", Offset = "0xDCBA54", VA = "0xDCBA54")]
		public QuatCrusher(CompressLevel compressLevel, bool showEnableToggle = false, bool isStandalone = true)
		{
		}

		[Token(Token = "0x6001260")]
		[Address(RVA = "0xDCBADC", Offset = "0xDCBADC", VA = "0xDCBADC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6001261")]
		[Address(RVA = "0xDCBB94", Offset = "0xDCBB94", VA = "0xDCBB94", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001262")]
		[Address(RVA = "0xDCBB98", Offset = "0xDCBB98", VA = "0xDCBB98", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001263")]
		[Address(RVA = "0xDCB52C", Offset = "0xDCB52C", VA = "0xDCB52C")]
		public static int RoundBitsToBestPreset(int bits)
		{
			return default(int);
		}

		[Token(Token = "0x6001264")]
		[Address(RVA = "0xDCBBF8", Offset = "0xDCBBF8", VA = "0xDCBBF8")]
		public ulong Compress()
		{
			return default(ulong);
		}

		[Token(Token = "0x6001265")]
		[Address(RVA = "0xDCBD54", Offset = "0xDCBD54", VA = "0xDCBD54")]
		public ulong Compress(Quaternion quat)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001266")]
		[Address(RVA = "0xDCBE24", Offset = "0xDCBE24", VA = "0xDCBE24")]
		public Quaternion Decompress(ulong compressed)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001267")]
		[Address(RVA = "0xDCBED4", Offset = "0xDCBED4", VA = "0xDCBED4")]
		public ulong Write(Quaternion quat, byte[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001268")]
		[Address(RVA = "0xDCBF24", Offset = "0xDCBF24", VA = "0xDCBF24")]
		public ulong Write(Quaternion quat, uint[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001269")]
		[Address(RVA = "0xDCBF74", Offset = "0xDCBF74", VA = "0xDCBF74")]
		public ulong Write(Quaternion quat, ulong[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600126A")]
		[Address(RVA = "0xDCBFC4", Offset = "0xDCBFC4", VA = "0xDCBFC4")]
		public ulong Write(ulong c, byte[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600126B")]
		[Address(RVA = "0xDCBFFC", Offset = "0xDCBFFC", VA = "0xDCBFFC")]
		public ulong Write(ulong c, uint[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600126C")]
		[Address(RVA = "0xDCC034", Offset = "0xDCC034", VA = "0xDCC034")]
		public ulong Write(ulong c, ulong[] buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x600126D")]
		[Address(RVA = "0xDCC06C", Offset = "0xDCC06C", VA = "0xDCC06C")]
		public Quaternion Read(byte[] buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600126E")]
		[Address(RVA = "0xDCC0A8", Offset = "0xDCC0A8", VA = "0xDCC0A8")]
		public Quaternion Read(uint[] buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600126F")]
		[Address(RVA = "0xDCC0E4", Offset = "0xDCC0E4", VA = "0xDCC0E4")]
		public Quaternion Read(ulong[] buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001270")]
		[Address(RVA = "0xDCC120", Offset = "0xDCC120", VA = "0xDCC120")]
		public ulong Write(Quaternion quat, ulong buffer, int bitposition)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001271")]
		[Address(RVA = "0xDCC16C", Offset = "0xDCC16C", VA = "0xDCC16C")]
		public Quaternion Read(ulong buffer, int bitposition)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6001272")]
		[Address(RVA = "0xDCC1A8", Offset = "0xDCC1A8", VA = "0xDCC1A8", Slot = "9")]
		public void CopyFrom(QuatCrusher source)
		{
		}

		[Token(Token = "0x6001273")]
		[Address(RVA = "0xDCC1D8", Offset = "0xDCC1D8", VA = "0xDCC1D8", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x6001274")]
		[Address(RVA = "0xDCC264", Offset = "0xDCC264", VA = "0xDCC264", Slot = "8")]
		public bool Equals(QuatCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x6001275")]
		[Address(RVA = "0xDCC3A4", Offset = "0xDCC3A4", VA = "0xDCC3A4", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001276")]
		[Address(RVA = "0xDCC414", Offset = "0xDCC414", VA = "0xDCC414")]
		public static bool operator ==(QuatCrusher crusher1, QuatCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001277")]
		[Address(RVA = "0xDCC328", Offset = "0xDCC328", VA = "0xDCC328")]
		public static bool operator !=(QuatCrusher crusher1, QuatCrusher crusher2)
		{
			return default(bool);
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x2000238")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x848574", Offset = "0x848574")]
	public class CompressedElement : IEquatable<CompressedElement>
	{
		[Token(Token = "0x40012D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CompressedElement reusable;

		[Token(Token = "0x40012D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedFloat cx;

		[Token(Token = "0x40012D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompressedFloat cy;

		[Token(Token = "0x40012D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public CompressedFloat cz;

		[Token(Token = "0x40012D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedFloat cUniform;

		[Token(Token = "0x40012D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedQuat cQuat;

		[Token(Token = "0x40012D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ElementCrusher crusher;

		[Token(Token = "0x40012D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly ulong[] reusableArray64;

		[Token(Token = "0x40012D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly uint[] reusableArray32;

		[Token(Token = "0x40012DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly byte[] reusableArray8;

		[Token(Token = "0x40012DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x852500", Offset = "0x852500")]
		public static readonly CompressedElement Empty;

		[Token(Token = "0x40012DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static CompressedElement uppers;

		[Token(Token = "0x40012DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static CompressedElement lowers;

		[Token(Token = "0x17000128")]
		public uint Item
		{
			[Token(Token = "0x6001295")]
			[Address(RVA = "0xC4A62C", Offset = "0xC4A62C", VA = "0xC4A62C")]
			get
			{
				return default(uint);
			}
		}

		[Token(Token = "0x6001279")]
		[Address(RVA = "0xC490E8", Offset = "0xC490E8", VA = "0xC490E8")]
		public void Clear()
		{
		}

		[Token(Token = "0x600127A")]
		[Address(RVA = "0xC4919C", Offset = "0xC4919C", VA = "0xC4919C")]
		public ulong[] AsArray64(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600127B")]
		[Address(RVA = "0xC49310", Offset = "0xC49310", VA = "0xC49310")]
		public void AsArray64(ulong[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600127C")]
		[Address(RVA = "0xC4941C", Offset = "0xC4941C", VA = "0xC4941C")]
		public uint[] AsArray32(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600127D")]
		[Address(RVA = "0xC49590", Offset = "0xC49590", VA = "0xC49590")]
		public void AsArray32(uint[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600127E")]
		[Address(RVA = "0xC4969C", Offset = "0xC4969C", VA = "0xC4969C")]
		public byte[] AsArray8(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600127F")]
		[Address(RVA = "0xC49810", Offset = "0xC49810", VA = "0xC49810")]
		public void AsArray8(byte[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001280")]
		[Address(RVA = "0xC4991C", Offset = "0xC4991C", VA = "0xC4991C")]
		public static explicit operator ulong(CompressedElement ce)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001281")]
		[Address(RVA = "0xC49960", Offset = "0xC49960", VA = "0xC49960")]
		public static explicit operator uint(CompressedElement ce)
		{
			return default(uint);
		}

		[Token(Token = "0x6001282")]
		[Address(RVA = "0xC499A4", Offset = "0xC499A4", VA = "0xC499A4")]
		public static explicit operator ushort(CompressedElement ce)
		{
			return default(ushort);
		}

		[Token(Token = "0x6001283")]
		[Address(RVA = "0xC499E8", Offset = "0xC499E8", VA = "0xC499E8")]
		public static explicit operator byte(CompressedElement ce)
		{
			return default(byte);
		}

		[Token(Token = "0x6001284")]
		[Address(RVA = "0xC49A2C", Offset = "0xC49A2C", VA = "0xC49A2C")]
		public static explicit operator ulong[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001285")]
		[Address(RVA = "0xC49ABC", Offset = "0xC49ABC", VA = "0xC49ABC")]
		public static explicit operator uint[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001286")]
		[Address(RVA = "0xC49B4C", Offset = "0xC49B4C", VA = "0xC49B4C")]
		public static explicit operator byte[](CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x6001287")]
		[Address(RVA = "0xC49BDC", Offset = "0xC49BDC", VA = "0xC49BDC")]
		public static explicit operator Element(CompressedElement ce)
		{
			return default(Element);
		}

		[Token(Token = "0x6001288")]
		[Address(RVA = "0xC49C70", Offset = "0xC49C70", VA = "0xC49C70")]
		public static explicit operator Vector3(CompressedElement ce)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001289")]
		[Address(RVA = "0xC49D40", Offset = "0xC49D40", VA = "0xC49D40")]
		public static explicit operator Quaternion(CompressedElement ce)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x600128A")]
		[Address(RVA = "0xC49F0C", Offset = "0xC49F0C", VA = "0xC49F0C")]
		public CompressedElement()
		{
		}

		[Token(Token = "0x600128B")]
		[Address(RVA = "0xC49F14", Offset = "0xC49F14", VA = "0xC49F14")]
		public CompressedElement(ElementCrusher crusher, CompressedFloat cx, CompressedFloat cy, CompressedFloat cz)
		{
		}

		[Token(Token = "0x600128C")]
		[Address(RVA = "0xC49FB4", Offset = "0xC49FB4", VA = "0xC49FB4")]
		public CompressedElement(ElementCrusher crusher, uint cx, uint cy, uint cz)
		{
		}

		[Token(Token = "0x600128D")]
		[Address(RVA = "0xC4A108", Offset = "0xC4A108", VA = "0xC4A108")]
		public CompressedElement(ElementCrusher crusher, uint cUniform)
		{
		}

		[Token(Token = "0x600128E")]
		[Address(RVA = "0xC4A1F4", Offset = "0xC4A1F4", VA = "0xC4A1F4")]
		public CompressedElement(ElementCrusher crusher, ulong cQuat)
		{
		}

		[Token(Token = "0x600128F")]
		[Address(RVA = "0xC4A30C", Offset = "0xC4A30C", VA = "0xC4A30C")]
		public void Set(ElementCrusher crusher, CompressedFloat cx, CompressedFloat cy, CompressedFloat cz)
		{
		}

		[Token(Token = "0x6001290")]
		[Address(RVA = "0xC4A398", Offset = "0xC4A398", VA = "0xC4A398")]
		public void Set(ElementCrusher crusher, uint cx, uint cy, uint cz)
		{
		}

		[Token(Token = "0x6001291")]
		[Address(RVA = "0xC4A470", Offset = "0xC4A470", VA = "0xC4A470")]
		public void Set(ElementCrusher crusher, uint cUniform)
		{
		}

		[Token(Token = "0x6001292")]
		[Address(RVA = "0xC4A4E0", Offset = "0xC4A4E0", VA = "0xC4A4E0")]
		public void Set(ElementCrusher crusher, ulong cQuat)
		{
		}

		[Token(Token = "0x6001293")]
		[Address(RVA = "0xC4A550", Offset = "0xC4A550", VA = "0xC4A550")]
		public void CopyTo(CompressedElement copyTarget)
		{
		}

		[Token(Token = "0x6001294")]
		[Address(RVA = "0xC4A5C0", Offset = "0xC4A5C0", VA = "0xC4A5C0")]
		public void CopyFrom(CompressedElement copySource)
		{
		}

		[Token(Token = "0x6001296")]
		[Address(RVA = "0xC4A654", Offset = "0xC4A654", VA = "0xC4A654")]
		public uint GetUInt(int axis)
		{
			return default(uint);
		}

		[Token(Token = "0x6001297")]
		[Address(RVA = "0xC49C20", Offset = "0xC49C20", VA = "0xC49C20")]
		public Element Decompress()
		{
			return default(Element);
		}

		[Token(Token = "0x6001298")]
		[Address(RVA = "0xC4A67C", Offset = "0xC4A67C", VA = "0xC4A67C")]
		public void Serialize(byte[] buffer, int bitposition, IncludedAxes ia, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001299")]
		[Address(RVA = "0xC4A6B4", Offset = "0xC4A6B4", VA = "0xC4A6B4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A1F0", Offset = "0x85A1F0")]
		public static bool Compare(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x600129A")]
		[Address(RVA = "0xC4A768", Offset = "0xC4A768", VA = "0xC4A768")]
		public static int HighestDifferentBit(uint a, uint b)
		{
			return default(int);
		}

		[Token(Token = "0x600129B")]
		[Address(RVA = "0xC4A798", Offset = "0xC4A798", VA = "0xC4A798")]
		public static void Extrapolate(ElementCrusher crusher, CompressedElement target, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
		}

		[Token(Token = "0x600129C")]
		[Address(RVA = "0xC4A810", Offset = "0xC4A810", VA = "0xC4A810")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A228", Offset = "0x85A228")]
		public static CompressedElement Extrapolate(ElementCrusher crusher, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
			return null;
		}

		[Token(Token = "0x600129D")]
		[Address(RVA = "0xC4A8F0", Offset = "0xC4A8F0", VA = "0xC4A8F0")]
		public static void Extrapolate(CompressedElement target, CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
		}

		[Token(Token = "0x600129E")]
		[Address(RVA = "0xC4A960", Offset = "0xC4A960", VA = "0xC4A960")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A238", Offset = "0x85A238")]
		public static CompressedElement Extrapolate(CompressedElement curr, CompressedElement prev, int divisor = 2)
		{
			return null;
		}

		[Token(Token = "0x600129F")]
		[Address(RVA = "0xC4AA3C", Offset = "0xC4AA3C", VA = "0xC4AA3C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A248", Offset = "0x85A248")]
		public static void Extrapolate(ElementCrusher crusher, CompressedElement target, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
		}

		[Token(Token = "0x60012A0")]
		[Address(RVA = "0xC4AB68", Offset = "0xC4AB68", VA = "0xC4AB68")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A258", Offset = "0x85A258")]
		public static CompressedElement Extrapolate(ElementCrusher crusher, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x60012A1")]
		[Address(RVA = "0xC4ACD0", Offset = "0xC4ACD0", VA = "0xC4ACD0")]
		public static void Extrapolate(CompressedElement target, CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
		}

		[Token(Token = "0x60012A2")]
		[Address(RVA = "0xC4ADFC", Offset = "0xC4ADFC", VA = "0xC4ADFC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A268", Offset = "0x85A268")]
		public static CompressedElement Extrapolate(CompressedElement curr, CompressedElement prev, float amount = 0.5f)
		{
			return null;
		}

		[Token(Token = "0x60012A3")]
		[Address(RVA = "0xC4AF64", Offset = "0xC4AF64", VA = "0xC4AF64")]
		public static BitCullingLevel GetGuessableBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCullLvl)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x60012A4")]
		[Address(RVA = "0xC4B350", Offset = "0xC4B350", VA = "0xC4B350")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A278", Offset = "0x85A278")]
		public static BitCullingLevel GetGuessableBitCullLevel(CompressedElement oldComp, CompressedElement newComp, ElementCrusher ec, BitCullingLevel maxCullLvl)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x60012A5")]
		[Address(RVA = "0xC4B59C", Offset = "0xC4B59C", VA = "0xC4B59C")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x60012A6")]
		[Address(RVA = "0xC4B8DC", Offset = "0xC4B8DC", VA = "0xC4B8DC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A288", Offset = "0x85A288")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, ElementCrusher ec, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x60012A7")]
		[Address(RVA = "0xC4BBC8", Offset = "0xC4BBC8", VA = "0xC4BBC8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A298", Offset = "0x85A298")]
		public static BitCullingLevel FindBestBitCullLevel(CompressedElement a, CompressedElement b, FloatCrusher[] ec, BitCullingLevel maxCulling)
		{
			return default(BitCullingLevel);
		}

		[Token(Token = "0x60012A8")]
		[Address(RVA = "0xC4BE88", Offset = "0xC4BE88", VA = "0xC4BE88")]
		private static bool TestMatchingUpper(uint a, uint b, int lowerbits)
		{
			return default(bool);
		}

		[Token(Token = "0x60012A9")]
		[Address(RVA = "0xC4B76C", Offset = "0xC4B76C", VA = "0xC4B76C")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AA")]
		[Address(RVA = "0xC4BA34", Offset = "0xC4BA34", VA = "0xC4BA34")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A2A8", Offset = "0x85A2A8")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, ElementCrusher ec, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AB")]
		[Address(RVA = "0xC4BCEC", Offset = "0xC4BCEC", VA = "0xC4BCEC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A2B8", Offset = "0x85A2B8")]
		public static bool TestMatchingUpper(CompressedElement a, CompressedElement b, FloatCrusher[] ec, BitCullingLevel bcl)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AC")]
		[Address(RVA = "0xC4BEA0", Offset = "0xC4BEA0", VA = "0xC4BEA0", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60012AD")]
		[Address(RVA = "0xC4C568", Offset = "0xC4C568", VA = "0xC4C568")]
		public static bool operator ==(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AE")]
		[Address(RVA = "0xC4C5C4", Offset = "0xC4C5C4", VA = "0xC4C5C4")]
		public static bool operator !=(CompressedElement a, CompressedElement b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012AF")]
		[Address(RVA = "0xC4C620", Offset = "0xC4C620", VA = "0xC4C620", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B0")]
		[Address(RVA = "0xC4A718", Offset = "0xC4A718", VA = "0xC4A718", Slot = "4")]
		public bool Equals(CompressedElement other)
		{
			return default(bool);
		}

		[Token(Token = "0x60012B1")]
		[Address(RVA = "0xC4C6E8", Offset = "0xC4C6E8", VA = "0xC4C6E8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000239")]
	public static class CompressedElementExt
	{
		[Token(Token = "0x40012DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static uint[] reusableInts;

		[Token(Token = "0x60012B3")]
		[Address(RVA = "0xC4CA28", Offset = "0xC4CA28", VA = "0xC4CA28")]
		public static StringBuilder AppendSB(this StringBuilder strb, CompressedElement ce)
		{
			return null;
		}

		[Token(Token = "0x60012B4")]
		[Address(RVA = "0xC4CD3C", Offset = "0xC4CD3C", VA = "0xC4CD3C")]
		public static void GetChangeAmount(uint[] results, CompressedElement a, CompressedElement b)
		{
		}

		[Token(Token = "0x60012B5")]
		[Address(RVA = "0xC4CE38", Offset = "0xC4CE38", VA = "0xC4CE38")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A2D8", Offset = "0x85A2D8")]
		public static uint[] GetChangeAmount(CompressedElement a, CompressedElement b)
		{
			return null;
		}

		[Token(Token = "0x60012B6")]
		[Address(RVA = "0xC4CFA0", Offset = "0xC4CFA0", VA = "0xC4CFA0")]
		public static void GuessUpperBits(this CompressedElement newcpos, ElementCrusher ec, CompressedElement oldcpos, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x60012B7")]
		[Address(RVA = "0xC4D07C", Offset = "0xC4D07C", VA = "0xC4D07C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A2F8", Offset = "0x85A2F8")]
		public static CompressedElement GuessUpperBits(this CompressedElement newcpos, CompressedElement oldcpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x60012B8")]
		[Address(RVA = "0xC4D198", Offset = "0xC4D198", VA = "0xC4D198")]
		public static void OverwriteUpperBits(this CompressedElement low, CompressedElement uppers, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x60012B9")]
		[Address(RVA = "0xC4D278", Offset = "0xC4D278", VA = "0xC4D278")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A340", Offset = "0x85A340")]
		public static CompressedElement OverwriteUpperBits(this CompressedElement low, CompressedElement up, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x60012BA")]
		[Address(RVA = "0xC4B1B0", Offset = "0xC4B1B0", VA = "0xC4B1B0")]
		public static void ZeroLowerBits(this CompressedElement fullpos, CompressedElement target, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x60012BB")]
		[Address(RVA = "0xC4D3B8", Offset = "0xC4D3B8", VA = "0xC4D3B8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A388", Offset = "0x85A388")]
		public static CompressedElement ZeroLowerBits(this CompressedElement fullpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}

		[Token(Token = "0x60012BC")]
		[Address(RVA = "0xC4B280", Offset = "0xC4B280", VA = "0xC4B280")]
		public static void ZeroUpperBits(this CompressedElement fullpos, CompressedElement target, BitCullingLevel bcl)
		{
		}

		[Token(Token = "0x60012BD")]
		[Address(RVA = "0xC4D4E4", Offset = "0xC4D4E4", VA = "0xC4D4E4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A3D0", Offset = "0x85A3D0")]
		public static CompressedElement ZeroUpperBits(this CompressedElement fullpos, ElementCrusher ec, BitCullingLevel bcl)
		{
			return null;
		}
	}
	[Token(Token = "0x200023A")]
	public class CompressedMatrix : IEquatable<CompressedMatrix>
	{
		[Token(Token = "0x40012DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public CompressedElement cPos;

		[Token(Token = "0x40012E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public CompressedElement cRot;

		[Token(Token = "0x40012E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CompressedElement cScl;

		[Token(Token = "0x40012E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TransformCrusher crusher;

		[Token(Token = "0x40012E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static CompressedMatrix reusable;

		[Token(Token = "0x40012E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		protected static readonly ulong[] reusableArray64;

		[Token(Token = "0x40012E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected static readonly uint[] reusableArray32;

		[Token(Token = "0x40012E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected static readonly byte[] reusableArray8;

		[Token(Token = "0x60012BF")]
		[Address(RVA = "0xC4D68C", Offset = "0xC4D68C", VA = "0xC4D68C")]
		public CompressedMatrix()
		{
		}

		[Token(Token = "0x60012C0")]
		[Address(RVA = "0xC4D74C", Offset = "0xC4D74C", VA = "0xC4D74C")]
		public CompressedMatrix(TransformCrusher crusher)
		{
		}

		[Token(Token = "0x60012C1")]
		[Address(RVA = "0xC4D820", Offset = "0xC4D820", VA = "0xC4D820")]
		public CompressedMatrix(TransformCrusher crusher, CompressedElement cPos, CompressedElement cRot, CompressedElement cScl)
		{
		}

		[Token(Token = "0x60012C2")]
		[Address(RVA = "0xC4D954", Offset = "0xC4D954", VA = "0xC4D954")]
		public CompressedMatrix(TransformCrusher crusher, CompressedElement cPos, CompressedElement cRot, CompressedElement cScl, int pBits, int rBits, int sBits)
		{
		}

		[Token(Token = "0x60012C3")]
		[Address(RVA = "0xC4DA88", Offset = "0xC4DA88", VA = "0xC4DA88")]
		public void CopyTo(CompressedMatrix copyTarget)
		{
		}

		[Token(Token = "0x60012C4")]
		[Address(RVA = "0xC4DADC", Offset = "0xC4DADC", VA = "0xC4DADC")]
		public void CopyFrom(CompressedMatrix copySource)
		{
		}

		[Token(Token = "0x60012C5")]
		[Address(RVA = "0xC4DB30", Offset = "0xC4DB30", VA = "0xC4DB30")]
		public void Clear()
		{
		}

		[Token(Token = "0x60012C6")]
		[Address(RVA = "0xC4DB84", Offset = "0xC4DB84", VA = "0xC4DB84")]
		public ulong[] AsArray64(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60012C7")]
		[Address(RVA = "0xC4DC54", Offset = "0xC4DC54", VA = "0xC4DC54")]
		public void AsArray64(ulong[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60012C8")]
		[Address(RVA = "0xC4DCB4", Offset = "0xC4DCB4", VA = "0xC4DCB4")]
		public uint[] AsArray32(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60012C9")]
		[Address(RVA = "0xC4DD84", Offset = "0xC4DD84", VA = "0xC4DD84")]
		public void AsArray32(uint[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60012CA")]
		[Address(RVA = "0xC4DDE4", Offset = "0xC4DDE4", VA = "0xC4DDE4")]
		public byte[] AsArray8(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x60012CB")]
		[Address(RVA = "0xC4DEB4", Offset = "0xC4DEB4", VA = "0xC4DEB4")]
		public void AsArray8(byte[] nonalloc, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x60012CC")]
		[Address(RVA = "0xC4DF14", Offset = "0xC4DF14", VA = "0xC4DF14")]
		public static explicit operator ulong(CompressedMatrix cm)
		{
			return default(ulong);
		}

		[Token(Token = "0x60012CD")]
		[Address(RVA = "0xC4DF60", Offset = "0xC4DF60", VA = "0xC4DF60")]
		public static explicit operator uint(CompressedMatrix cm)
		{
			return default(uint);
		}

		[Token(Token = "0x60012CE")]
		[Address(RVA = "0xC4DFAC", Offset = "0xC4DFAC", VA = "0xC4DFAC")]
		public static explicit operator ushort(CompressedMatrix cm)
		{
			return default(ushort);
		}

		[Token(Token = "0x60012CF")]
		[Address(RVA = "0xC4DFF8", Offset = "0xC4DFF8", VA = "0xC4DFF8")]
		public static explicit operator byte(CompressedMatrix cm)
		{
			return default(byte);
		}

		[Token(Token = "0x60012D0")]
		[Address(RVA = "0xC4E044", Offset = "0xC4E044", VA = "0xC4E044")]
		public static explicit operator ulong[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x60012D1")]
		[Address(RVA = "0xC4E05C", Offset = "0xC4E05C", VA = "0xC4E05C")]
		public static explicit operator uint[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x60012D2")]
		[Address(RVA = "0xC4E074", Offset = "0xC4E074", VA = "0xC4E074")]
		public static explicit operator byte[](CompressedMatrix cm)
		{
			return null;
		}

		[Token(Token = "0x60012D3")]
		[Address(RVA = "0xC4E08C", Offset = "0xC4E08C", VA = "0xC4E08C")]
		public void Decompress(Matrix nonalloc)
		{
		}

		[Token(Token = "0x60012D4")]
		[Address(RVA = "0xC4E140", Offset = "0xC4E140", VA = "0xC4E140")]
		public Matrix Decompress()
		{
			return null;
		}

		[Token(Token = "0x60012D5")]
		[Address(RVA = "0xC4E1D8", Offset = "0xC4E1D8", VA = "0xC4E1D8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A408", Offset = "0x85A408")]
		public void Apply()
		{
		}

		[Token(Token = "0x60012D6")]
		[Address(RVA = "0xC4E278", Offset = "0xC4E278", VA = "0xC4E278")]
		public void Apply(Transform t)
		{
		}

		[Token(Token = "0x60012D7")]
		[Address(RVA = "0xC4E320", Offset = "0xC4E320", VA = "0xC4E320")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A440", Offset = "0x85A440")]
		public void Apply(Rigidbody rb)
		{
		}

		[Token(Token = "0x60012D8")]
		[Address(RVA = "0xC4E3C8", Offset = "0xC4E3C8", VA = "0xC4E3C8")]
		public void Set(Rigidbody rb)
		{
		}

		[Token(Token = "0x60012D9")]
		[Address(RVA = "0xC4E470", Offset = "0xC4E470", VA = "0xC4E470")]
		public void Move(Rigidbody rb)
		{
		}

		[Token(Token = "0x60012DA")]
		[Address(RVA = "0xC4E518", Offset = "0xC4E518", VA = "0xC4E518")]
		public static bool operator ==(CompressedMatrix a, CompressedMatrix b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DB")]
		[Address(RVA = "0xC4E634", Offset = "0xC4E634", VA = "0xC4E634")]
		public static bool operator !=(CompressedMatrix a, CompressedMatrix b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DC")]
		[Address(RVA = "0xC4E65C", Offset = "0xC4E65C", VA = "0xC4E65C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DD")]
		[Address(RVA = "0xC4E524", Offset = "0xC4E524", VA = "0xC4E524", Slot = "4")]
		public bool Equals(CompressedMatrix other)
		{
			return default(bool);
		}

		[Token(Token = "0x60012DE")]
		[Address(RVA = "0xC4E6E8", Offset = "0xC4E6E8", VA = "0xC4E6E8", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200023B")]
	public struct CompressedQuat
	{
		[Token(Token = "0x40012E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public readonly QuatCrusher crusher;

		[Token(Token = "0x40012E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public readonly ulong cvalue;

		[Token(Token = "0x60012E0")]
		[Address(RVA = "0xC4A2E0", Offset = "0xC4A2E0", VA = "0xC4A2E0")]
		public CompressedQuat(QuatCrusher crusher, ulong cvalue)
		{
		}

		[Token(Token = "0x60012E1")]
		[Address(RVA = "0xC4E8E4", Offset = "0xC4E8E4", VA = "0xC4E8E4")]
		public CompressedQuat(QuatCrusher crusher, uint cvalue)
		{
		}

		[Token(Token = "0x60012E2")]
		[Address(RVA = "0xC4E914", Offset = "0xC4E914", VA = "0xC4E914")]
		public CompressedQuat(QuatCrusher crusher, ushort cvalue)
		{
		}

		[Token(Token = "0x60012E3")]
		[Address(RVA = "0xC4E944", Offset = "0xC4E944", VA = "0xC4E944")]
		public CompressedQuat(QuatCrusher crusher, byte cvalue)
		{
		}

		[Token(Token = "0x60012E4")]
		[Address(RVA = "0xC4E974", Offset = "0xC4E974", VA = "0xC4E974")]
		public static implicit operator ulong(CompressedQuat cv)
		{
			return default(ulong);
		}

		[Token(Token = "0x60012E5")]
		[Address(RVA = "0xC4E97C", Offset = "0xC4E97C", VA = "0xC4E97C")]
		public static explicit operator uint(CompressedQuat cv)
		{
			return default(uint);
		}

		[Token(Token = "0x60012E6")]
		[Address(RVA = "0xC4E984", Offset = "0xC4E984", VA = "0xC4E984")]
		public static explicit operator ushort(CompressedQuat cv)
		{
			return default(ushort);
		}

		[Token(Token = "0x60012E7")]
		[Address(RVA = "0xC4E98C", Offset = "0xC4E98C", VA = "0xC4E98C")]
		public static explicit operator byte(CompressedQuat cv)
		{
			return default(byte);
		}

		[Token(Token = "0x60012E8")]
		[Address(RVA = "0xC4E994", Offset = "0xC4E994", VA = "0xC4E994")]
		public Quaternion Decompress()
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012E9")]
		[Address(RVA = "0xC4E9BC", Offset = "0xC4E9BC", VA = "0xC4E9BC", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[StructLayout(2)]
	[Token(Token = "0x200023C")]
	public struct Element : IEquatable<Element>
	{
		[Token(Token = "0x20004D3")]
		public enum VectorType
		{
			[Token(Token = "0x40023AE")]
			Vector3 = 1,
			[Token(Token = "0x40023AF")]
			Quaternion
		}

		[Token(Token = "0x40012E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VectorType vectorType;

		[Token(Token = "0x40012EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Vector3 v;

		[Token(Token = "0x40012EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public Quaternion quat;

		[Token(Token = "0x60012EA")]
		[Address(RVA = "0xC020F8", Offset = "0xC020F8", VA = "0xC020F8")]
		public Element(Vector3 v)
		{
		}

		[Token(Token = "0x60012EB")]
		[Address(RVA = "0xC02110", Offset = "0xC02110", VA = "0xC02110")]
		public Element(Quaternion quat)
		{
		}

		[Token(Token = "0x60012EC")]
		[Address(RVA = "0xC02124", Offset = "0xC02124", VA = "0xC02124")]
		public static explicit operator Quaternion(Element e)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60012ED")]
		[Address(RVA = "0xC02158", Offset = "0xC02158", VA = "0xC02158")]
		public static explicit operator Vector3(Element e)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012EE")]
		[Address(RVA = "0xC0218C", Offset = "0xC0218C", VA = "0xC0218C")]
		public static Element Slerp(Element a, Element b, float t)
		{
			return default(Element);
		}

		[Token(Token = "0x60012EF")]
		[Address(RVA = "0xC022FC", Offset = "0xC022FC", VA = "0xC022FC")]
		public static Element SlerpUnclamped(Element a, Element b, float t)
		{
			return default(Element);
		}

		[Token(Token = "0x60012F0")]
		[Address(RVA = "0xC02440", Offset = "0xC02440", VA = "0xC02440")]
		public static bool operator ==(Element a, Element b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F1")]
		[Address(RVA = "0xC024C4", Offset = "0xC024C4", VA = "0xC024C4")]
		public static bool operator !=(Element a, Element b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F2")]
		[Address(RVA = "0xC0253C", Offset = "0xC0253C", VA = "0xC0253C", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F3")]
		[Address(RVA = "0xC025D8", Offset = "0xC025D8", VA = "0xC025D8", Slot = "4")]
		public bool Equals(Element other)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F4")]
		[Address(RVA = "0xC0265C", Offset = "0xC0265C", VA = "0xC0265C")]
		public static bool Equals(Vector3 a, Vector3 b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F5")]
		[Address(RVA = "0xC02684", Offset = "0xC02684", VA = "0xC02684")]
		public static bool Equals(Quaternion a, Quaternion b)
		{
			return default(bool);
		}

		[Token(Token = "0x60012F6")]
		[Address(RVA = "0xC022D0", Offset = "0xC022D0", VA = "0xC022D0")]
		public static implicit operator Element(Quaternion q)
		{
			return default(Element);
		}

		[Token(Token = "0x60012F7")]
		[Address(RVA = "0xC022E4", Offset = "0xC022E4", VA = "0xC022E4")]
		public static implicit operator Element(Vector3 v)
		{
			return default(Element);
		}

		[Token(Token = "0x60012F8")]
		[Address(RVA = "0xC026B4", Offset = "0xC026B4", VA = "0xC026B4", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x60012F9")]
		[Address(RVA = "0xC02780", Offset = "0xC02780", VA = "0xC02780", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}
	}
	[Token(Token = "0x200023D")]
	public enum IncludedAxes
	{
		[Token(Token = "0x40012ED")]
		None = 0,
		[Token(Token = "0x40012EE")]
		X = 1,
		[Token(Token = "0x40012EF")]
		Y = 2,
		[Token(Token = "0x40012F0")]
		XY = 3,
		[Token(Token = "0x40012F1")]
		Z = 4,
		[Token(Token = "0x40012F2")]
		XZ = 5,
		[Token(Token = "0x40012F3")]
		YZ = 6,
		[Token(Token = "0x40012F4")]
		XYZ = 7,
		[Token(Token = "0x40012F5")]
		Uniform = 15
	}
	[Token(Token = "0x200023E")]
	public static class IncludeAxisExtensions
	{
		[Token(Token = "0x60012FA")]
		[Address(RVA = "0xBACCD0", Offset = "0xBACCD0", VA = "0xBACCD0")]
		public static float SqrMagnitude(this Vector3 v, IncludedAxes ia)
		{
			return default(float);
		}

		[Token(Token = "0x60012FB")]
		[Address(RVA = "0xBACD04", Offset = "0xBACD04", VA = "0xBACD04")]
		public static float Magnitude(this Vector3 v, IncludedAxes ia)
		{
			return default(float);
		}

		[Token(Token = "0x60012FC")]
		[Address(RVA = "0xBACD3C", Offset = "0xBACD3C", VA = "0xBACD3C")]
		public static Vector3 Lerp(this GameObject go, Vector3 start, Vector3 end, IncludedAxes ia, float t, bool localPosition = false)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60012FD")]
		[Address(RVA = "0xBACEDC", Offset = "0xBACEDC", VA = "0xBACEDC")]
		public static void SetPosition(this GameObject go, Vector3 pos, IncludedAxes ia, bool localPosition = false)
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class XYZSwitchMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x60012FE")]
		[Address(RVA = "0xC385E4", Offset = "0xC385E4", VA = "0xC385E4")]
		public XYZSwitchMaskAttribute()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class Matrix
	{
		[Token(Token = "0x40012F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public TransformCrusher crusher;

		[Token(Token = "0x40012F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x40012F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Element rotation;

		[Token(Token = "0x40012F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Vector3 scale;

		[Token(Token = "0x40012FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Matrix reusable;

		[Token(Token = "0x60012FF")]
		[Address(RVA = "0xCE8E90", Offset = "0xCE8E90", VA = "0xCE8E90")]
		public Matrix()
		{
		}

		[Token(Token = "0x6001300")]
		[Address(RVA = "0xCE8E98", Offset = "0xCE8E98", VA = "0xCE8E98")]
		public Matrix(TransformCrusher crusher)
		{
		}

		[Token(Token = "0x6001301")]
		[Address(RVA = "0xCE8ECC", Offset = "0xCE8ECC", VA = "0xCE8ECC")]
		public Matrix(TransformCrusher crusher, Vector3 position, Element rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6001302")]
		[Address(RVA = "0xCE8F60", Offset = "0xCE8F60", VA = "0xCE8F60")]
		public Matrix(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x6001303")]
		[Address(RVA = "0xCE929C", Offset = "0xCE929C", VA = "0xCE929C")]
		public void Set(TransformCrusher crusher, Vector3 position, Element rotation, Vector3 scale)
		{
		}

		[Token(Token = "0x6001304")]
		[Address(RVA = "0xCE9318", Offset = "0xCE9318", VA = "0xCE9318")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A4B8", Offset = "0x85A4B8")]
		public void Set(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x6001305")]
		[Address(RVA = "0xCE931C", Offset = "0xCE931C", VA = "0xCE931C")]
		public void Capture(TransformCrusher crusher, Transform transform)
		{
		}

		[Token(Token = "0x6001306")]
		[Address(RVA = "0xCE94A4", Offset = "0xCE94A4", VA = "0xCE94A4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A4F0", Offset = "0x85A4F0")]
		public void Set(Transform transform)
		{
		}

		[Token(Token = "0x6001307")]
		[Address(RVA = "0xCE94A8", Offset = "0xCE94A8", VA = "0xCE94A8")]
		public void Capture(Transform transform)
		{
		}

		[Token(Token = "0x6001308")]
		[Address(RVA = "0xCE962C", Offset = "0xCE962C", VA = "0xCE962C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A528", Offset = "0x85A528")]
		public void Set(TransformCrusher crusher, Rigidbody rb)
		{
		}

		[Token(Token = "0x6001309")]
		[Address(RVA = "0xCE9630", Offset = "0xCE9630", VA = "0xCE9630")]
		public void Capture(TransformCrusher crusher, Rigidbody rb)
		{
		}

		[Token(Token = "0x600130A")]
		[Address(RVA = "0xCE97DC", Offset = "0xCE97DC", VA = "0xCE97DC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A560", Offset = "0x85A560")]
		public void Set(Rigidbody rb)
		{
		}

		[Token(Token = "0x600130B")]
		[Address(RVA = "0xCE97E0", Offset = "0xCE97E0", VA = "0xCE97E0")]
		public void Capture(Rigidbody rb)
		{
		}

		[Token(Token = "0x600130C")]
		[Address(RVA = "0xCE9988", Offset = "0xCE9988", VA = "0xCE9988")]
		public void Clear()
		{
		}

		[Token(Token = "0x600130D")]
		[Address(RVA = "0xCE9994", Offset = "0xCE9994", VA = "0xCE9994")]
		public void Compress(CompressedMatrix nonalloc)
		{
		}

		[Token(Token = "0x600130E")]
		[Address(RVA = "0xCE99B8", Offset = "0xCE99B8", VA = "0xCE99B8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A598", Offset = "0x85A598")]
		public void Apply()
		{
		}

		[Token(Token = "0x600130F")]
		[Address(RVA = "0xCE99DC", Offset = "0xCE99DC", VA = "0xCE99DC")]
		public void Apply(Transform t)
		{
		}

		[Token(Token = "0x6001310")]
		[Address(RVA = "0xCE9ACC", Offset = "0xCE9ACC", VA = "0xCE9ACC")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A5D0", Offset = "0x85A5D0")]
		public void Apply(Rigidbody rb)
		{
		}

		[Token(Token = "0x6001311")]
		[Address(RVA = "0xCE9BBC", Offset = "0xCE9BBC", VA = "0xCE9BBC")]
		public static Matrix Lerp(Matrix target, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x6001312")]
		[Address(RVA = "0xCE9F24", Offset = "0xCE9F24", VA = "0xCE9F24")]
		public static Matrix LerpUnclamped(Matrix target, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x6001313")]
		[Address(RVA = "0xCEA260", Offset = "0xCEA260", VA = "0xCEA260")]
		public static Matrix CatmullRomLerpUnclamped(Matrix target, Matrix pre, Matrix start, Matrix end, Matrix post, float t)
		{
			return null;
		}

		[Token(Token = "0x6001314")]
		[Address(RVA = "0xCEA5D0", Offset = "0xCEA5D0", VA = "0xCEA5D0")]
		public static Matrix CatmullRomLerpUnclamped(Matrix target, Matrix pre, Matrix start, Matrix end, float t)
		{
			return null;
		}

		[Token(Token = "0x6001315")]
		[Address(RVA = "0xCEA918", Offset = "0xCEA918", VA = "0xCEA918", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x2000241")]
	public static class MatrixExtensions
	{
		[Token(Token = "0x6001317")]
		[Address(RVA = "0xCEAD00", Offset = "0xCEAD00", VA = "0xCEAD00")]
		public static void CopyFrom(this Matrix target, Matrix src)
		{
		}
	}
	[Token(Token = "0x2000242")]
	public interface IHasTransformCrusher
	{
		[Token(Token = "0x17000129")]
		TransformCrusher TC
		{
			[Token(Token = "0x6001318")]
			get;
		}
	}
	[Serializable]
	[Token(Token = "0x2000243")]
	public class TransformCrusher : Crusher<TransformCrusher>, ICrusherCopy<TransformCrusher>
	{
		[Token(Token = "0x40012FB")]
		public const int VersionMajor = 3;

		[Token(Token = "0x40012FC")]
		public const int VersionMinor = 5;

		[Token(Token = "0x40012FD")]
		public const int VersionRevision = 3;

		[Token(Token = "0x40012FE")]
		public const int Build = 3503;

		[Token(Token = "0x40012FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<int, TransformCrusher> staticTransformCrushers;

		[Token(Token = "0x4001300")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x852538", Offset = "0x852538")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x852538", Offset = "0x852538")]
		public Transform defaultTransform;

		[Token(Token = "0x4001301")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected ElementCrusher posCrusher;

		[Token(Token = "0x4001302")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected ElementCrusher rotCrusher;

		[Token(Token = "0x4001303")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		protected ElementCrusher sclCrusher;

		[NonSerialized]
		[Token(Token = "0x4001304")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected readonly int[] cached_pBits;

		[NonSerialized]
		[Token(Token = "0x4001305")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected readonly int[] cached_rBits;

		[NonSerialized]
		[Token(Token = "0x4001306")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected readonly int[] cached_sBits;

		[NonSerialized]
		[Token(Token = "0x4001307")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected readonly int[] _cached_total;

		[Token(Token = "0x4001308")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public ReadOnlyCollection<int> cached_total;

		[Token(Token = "0x4001309")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected bool cached;

		[Token(Token = "0x400130A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static ulong[] reusableArray64;

		[Token(Token = "0x400130B")]
		private const string transformMissingError = "The 'defaultTransform' is null and has not be set in the inspector. For non-editor usages of TransformCrusher you need to pass the target transform to this method.";

		[Token(Token = "0x1700012A")]
		public ElementCrusher PosCrusher
		{
			[Token(Token = "0x600131A")]
			[Address(RVA = "0xC2D3D4", Offset = "0xC2D3D4", VA = "0xC2D3D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131B")]
			[Address(RVA = "0xC2D3DC", Offset = "0xC2D3DC", VA = "0xC2D3DC")]
			set
			{
			}
		}

		[Token(Token = "0x1700012B")]
		public ElementCrusher RotCrusher
		{
			[Token(Token = "0x600131C")]
			[Address(RVA = "0xC2D5F0", Offset = "0xC2D5F0", VA = "0xC2D5F0")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131D")]
			[Address(RVA = "0xC2D5F8", Offset = "0xC2D5F8", VA = "0xC2D5F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700012C")]
		public ElementCrusher SclCrusher
		{
			[Token(Token = "0x600131E")]
			[Address(RVA = "0xC2D80C", Offset = "0xC2D80C", VA = "0xC2D80C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600131F")]
			[Address(RVA = "0xC2D814", Offset = "0xC2D814", VA = "0xC2D814")]
			set
			{
			}
		}

		[Token(Token = "0x6001319")]
		[Address(RVA = "0xC2D1D4", Offset = "0xC2D1D4", VA = "0xC2D1D4")]
		public static TransformCrusher CheckAgainstStatics(TransformCrusher tc, bool CheckElementCrusherAsWell = true)
		{
			return null;
		}

		[Token(Token = "0x6001320")]
		[Address(RVA = "0xC2DA28", Offset = "0xC2DA28", VA = "0xC2DA28")]
		public void OnCrusherChange(ElementCrusher crusher)
		{
		}

		[Token(Token = "0x6001321")]
		[Address(RVA = "0xC2DA34", Offset = "0xC2DA34", VA = "0xC2DA34")]
		public TransformCrusher()
		{
		}

		[Token(Token = "0x6001322")]
		[Address(RVA = "0xC2DB20", Offset = "0xC2DB20", VA = "0xC2DB20")]
		public TransformCrusher(bool isStatic = false)
		{
		}

		[Token(Token = "0x6001323")]
		[Address(RVA = "0xC2DC18", Offset = "0xC2DC18", VA = "0xC2DC18", Slot = "8")]
		protected virtual void ConstructDefault(bool isStatic = false)
		{
		}

		[Token(Token = "0x6001324")]
		[Address(RVA = "0xC2DE38", Offset = "0xC2DE38", VA = "0xC2DE38", Slot = "7")]
		public override void OnBeforeSerialize()
		{
		}

		[Token(Token = "0x6001325")]
		[Address(RVA = "0xC2DE3C", Offset = "0xC2DE3C", VA = "0xC2DE3C", Slot = "6")]
		public override void OnAfterDeserialize()
		{
		}

		[Token(Token = "0x6001326")]
		[Address(RVA = "0xC2DE48", Offset = "0xC2DE48", VA = "0xC2DE48", Slot = "9")]
		public virtual void CacheValues()
		{
		}

		[Token(Token = "0x6001327")]
		[Address(RVA = "0xC2E0E8", Offset = "0xC2E0E8", VA = "0xC2E0E8")]
		public void Write(CompressedMatrix cm, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001328")]
		[Address(RVA = "0xC2E244", Offset = "0xC2E244", VA = "0xC2E244")]
		public void Write(CompressedMatrix cm, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001329")]
		[Address(RVA = "0xC2E3A0", Offset = "0xC2E3A0", VA = "0xC2E3A0")]
		public void Write(CompressedMatrix cm, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600132A")]
		[Address(RVA = "0xC2E4FC", Offset = "0xC2E4FC", VA = "0xC2E4FC")]
		public void Write(CompressedMatrix nonalloc, Transform transform, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600132B")]
		[Address(RVA = "0xC2E670", Offset = "0xC2E670", VA = "0xC2E670")]
		public void Write(Transform transform, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600132C")]
		[Address(RVA = "0xC2E714", Offset = "0xC2E714", VA = "0xC2E714")]
		public Matrix ReadAndDecompress(ulong[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600132D")]
		[Address(RVA = "0xC2E7E0", Offset = "0xC2E7E0", VA = "0xC2E7E0")]
		public Matrix ReadAndDecompress(uint[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600132E")]
		[Address(RVA = "0xC2E8AC", Offset = "0xC2E8AC", VA = "0xC2E8AC")]
		public Matrix ReadAndDecompress(byte[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600132F")]
		[Address(RVA = "0xC2E978", Offset = "0xC2E978", VA = "0xC2E978")]
		public void ReadAndDecompress(Matrix nonalloc, ulong[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001330")]
		[Address(RVA = "0xC2EE28", Offset = "0xC2EE28", VA = "0xC2EE28")]
		public void ReadAndDecompress(Matrix nonalloc, uint[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001331")]
		[Address(RVA = "0xC2F044", Offset = "0xC2F044", VA = "0xC2F044")]
		public void ReadAndDecompress(Matrix nonalloc, byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001332")]
		[Address(RVA = "0xC2E73C", Offset = "0xC2E73C", VA = "0xC2E73C")]
		public Matrix ReadAndDecompress(ulong[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001333")]
		[Address(RVA = "0xC2E808", Offset = "0xC2E808", VA = "0xC2E808")]
		public Matrix ReadAndDecompress(uint[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001334")]
		[Address(RVA = "0xC2E8D4", Offset = "0xC2E8D4", VA = "0xC2E8D4")]
		public Matrix ReadAndDecompress(byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001335")]
		[Address(RVA = "0xC2F0FC", Offset = "0xC2F0FC", VA = "0xC2F0FC")]
		public void Read(CompressedMatrix nonalloc, byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001336")]
		[Address(RVA = "0xC2F260", Offset = "0xC2F260", VA = "0xC2F260")]
		public CompressedMatrix Read(ulong[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001337")]
		[Address(RVA = "0xC2F304", Offset = "0xC2F304", VA = "0xC2F304")]
		public CompressedMatrix Read(uint[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001338")]
		[Address(RVA = "0xC2F3A8", Offset = "0xC2F3A8", VA = "0xC2F3A8")]
		public CompressedMatrix Read(byte[] array, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001339")]
		[Address(RVA = "0xC2F44C", Offset = "0xC2F44C", VA = "0xC2F44C")]
		public CompressedMatrix Read(ulong[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600133A")]
		[Address(RVA = "0xC2F4F0", Offset = "0xC2F4F0", VA = "0xC2F4F0")]
		public CompressedMatrix Read(uint[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600133B")]
		[Address(RVA = "0xC2F594", Offset = "0xC2F594", VA = "0xC2F594")]
		public CompressedMatrix Read(byte[] array, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600133C")]
		[Address(RVA = "0xC2EA30", Offset = "0xC2EA30", VA = "0xC2EA30")]
		public void Read(CompressedMatrix nonalloc, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600133D")]
		[Address(RVA = "0xC2EEE0", Offset = "0xC2EEE0", VA = "0xC2EEE0")]
		public void Read(CompressedMatrix nonalloc, uint[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600133E")]
		[Address(RVA = "0xC2F638", Offset = "0xC2F638", VA = "0xC2F638")]
		public void Write(CompressedMatrix nonalloc, Transform transform, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600133F")]
		[Address(RVA = "0xC2F7AC", Offset = "0xC2F7AC", VA = "0xC2F7AC")]
		public void Write(Transform transform, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001340")]
		[Address(RVA = "0xC2F8F0", Offset = "0xC2F8F0", VA = "0xC2F8F0")]
		public void Write(CompressedMatrix cm, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001341")]
		[Address(RVA = "0xC2FA28", Offset = "0xC2FA28", VA = "0xC2FA28")]
		public void Write(CompressedMatrix nonalloc, Transform transform, ulong bitstream, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001342")]
		[Address(RVA = "0xC2FCC0", Offset = "0xC2FCC0", VA = "0xC2FCC0")]
		public void ReadAndDecompress(Matrix nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001343")]
		[Address(RVA = "0xC2FDA0", Offset = "0xC2FDA0", VA = "0xC2FDA0")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A618", Offset = "0x85A618")]
		public Matrix ReadAndDecompress(ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001344")]
		[Address(RVA = "0xC2FCE8", Offset = "0xC2FCE8", VA = "0xC2FCE8")]
		public void ReadAndDecompress(Matrix nonalloc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001345")]
		[Address(RVA = "0xC2FDC8", Offset = "0xC2FDC8", VA = "0xC2FDC8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A650", Offset = "0x85A650")]
		public Matrix ReadAndDecompress(ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001346")]
		[Address(RVA = "0xC3029C", Offset = "0xC3029C", VA = "0xC3029C")]
		public void ReadAndApply(Transform target, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001347")]
		[Address(RVA = "0xC30450", Offset = "0xC30450", VA = "0xC30450")]
		public void Read(CompressedMatrix nonalloc, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001348")]
		[Address(RVA = "0xC305CC", Offset = "0xC305CC", VA = "0xC305CC")]
		public void ReadAndDecompress(Matrix nonalloc, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001349")]
		[Address(RVA = "0xC306AC", Offset = "0xC306AC", VA = "0xC306AC")]
		public CompressedMatrix Read(ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, uint frag4 = 0u, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600134A")]
		[Address(RVA = "0xC30780", Offset = "0xC30780", VA = "0xC30780")]
		public void Read(CompressedMatrix nonalloc, ulong buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600134B")]
		[Address(RVA = "0xC2FE70", Offset = "0xC2FE70", VA = "0xC2FE70")]
		public void Read(CompressedMatrix nonalloc, ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600134C")]
		[Address(RVA = "0xC307A8", Offset = "0xC307A8", VA = "0xC307A8")]
		public CompressedMatrix Read(ulong buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600134D")]
		[Address(RVA = "0xC3084C", Offset = "0xC3084C", VA = "0xC3084C")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A688", Offset = "0x85A688")]
		public void Compress(CompressedMatrix nonalloc)
		{
		}

		[Token(Token = "0x600134E")]
		[Address(RVA = "0xC30854", Offset = "0xC30854", VA = "0xC30854")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A6C0", Offset = "0x85A6C0")]
		public CompressedMatrix Compress()
		{
			return null;
		}

		[Token(Token = "0x600134F")]
		[Address(RVA = "0xC308E8", Offset = "0xC308E8", VA = "0xC308E8")]
		public void Compress(CompressedMatrix nonalloc, Matrix matrix)
		{
		}

		[Token(Token = "0x6001350")]
		[Address(RVA = "0xC2FB7C", Offset = "0xC2FB7C", VA = "0xC2FB7C")]
		public void Compress(CompressedMatrix nonalloc, Transform transform)
		{
		}

		[Token(Token = "0x6001351")]
		[Address(RVA = "0xC3085C", Offset = "0xC3085C", VA = "0xC3085C")]
		public CompressedMatrix Compress(Transform transform)
		{
			return null;
		}

		[Token(Token = "0x6001352")]
		[Address(RVA = "0xC30A6C", Offset = "0xC30A6C", VA = "0xC30A6C")]
		public CompressedMatrix Compress(Rigidbody rb)
		{
			return null;
		}

		[Token(Token = "0x6001353")]
		[Address(RVA = "0xC30AF8", Offset = "0xC30AF8", VA = "0xC30AF8")]
		public void Compress(CompressedMatrix nonalloc, Rigidbody rb)
		{
		}

		[Token(Token = "0x6001354")]
		[Address(RVA = "0xC30BA4", Offset = "0xC30BA4", VA = "0xC30BA4")]
		public CompressedMatrix Compress(Rigidbody2D rb2d)
		{
			return null;
		}

		[Token(Token = "0x6001355")]
		[Address(RVA = "0xC30C30", Offset = "0xC30C30", VA = "0xC30C30")]
		public void Compress(CompressedMatrix nonalloc, Rigidbody2D rb2d)
		{
		}

		[Token(Token = "0x6001356")]
		[Address(RVA = "0xC30D1C", Offset = "0xC30D1C", VA = "0xC30D1C")]
		public void CompressAndWrite(Matrix matrix, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001357")]
		[Address(RVA = "0xC30E60", Offset = "0xC30E60", VA = "0xC30E60")]
		public void CompressAndWrite(Transform transform, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001358")]
		[Address(RVA = "0xC30F6C", Offset = "0xC30F6C", VA = "0xC30F6C")]
		public void CompressAndWrite(Rigidbody rb, byte[] buffer, int bitposition)
		{
		}

		[Token(Token = "0x6001359")]
		[Address(RVA = "0xC311A4", Offset = "0xC311A4", VA = "0xC311A4")]
		public void Decompress(Matrix nonalloc, ulong[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600135A")]
		[Address(RVA = "0xC31260", Offset = "0xC31260", VA = "0xC31260")]
		public void Decompress(Matrix nonalloc, uint[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600135B")]
		[Address(RVA = "0xC3131C", Offset = "0xC3131C", VA = "0xC3131C")]
		public void Decompress(Matrix nonalloc, ulong compressed, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600135C")]
		[Address(RVA = "0xC313D8", Offset = "0xC313D8", VA = "0xC313D8")]
		public Matrix Decompress(ulong[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600135D")]
		[Address(RVA = "0xC314C8", Offset = "0xC314C8", VA = "0xC314C8")]
		public Matrix Decompress(uint[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600135E")]
		[Address(RVA = "0xC315B8", Offset = "0xC315B8", VA = "0xC315B8")]
		public Matrix Decompress(byte[] buffer, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x600135F")]
		[Address(RVA = "0xC316A8", Offset = "0xC316A8", VA = "0xC316A8")]
		public Matrix Decompress(ulong compressed, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return null;
		}

		[Token(Token = "0x6001360")]
		[Address(RVA = "0xC2EB94", Offset = "0xC2EB94", VA = "0xC2EB94")]
		public void Decompress(Matrix nonalloc, CompressedMatrix compMatrix)
		{
		}

		[Token(Token = "0x6001361")]
		[Address(RVA = "0xC2FFC8", Offset = "0xC2FFC8", VA = "0xC2FFC8")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A6F8", Offset = "0x85A6F8")]
		public Matrix Decompress(CompressedMatrix compMatrix)
		{
			return null;
		}

		[Token(Token = "0x6001362")]
		[Address(RVA = "0xC31798", Offset = "0xC31798", VA = "0xC31798")]
		public void Set(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001363")]
		[Address(RVA = "0xC318A8", Offset = "0xC318A8", VA = "0xC318A8")]
		public void Set(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x6001364")]
		[Address(RVA = "0xC31A44", Offset = "0xC31A44", VA = "0xC31A44")]
		public void Set(Rigidbody rb, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x6001365")]
		[Address(RVA = "0xC31B20", Offset = "0xC31B20", VA = "0xC31B20")]
		public void Set(Rigidbody rb, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001366")]
		[Address(RVA = "0xC31BD8", Offset = "0xC31BD8", VA = "0xC31BD8")]
		public void Set(Rigidbody rb, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x6001367")]
		[Address(RVA = "0xC31C90", Offset = "0xC31C90", VA = "0xC31C90")]
		public void Set(Rigidbody2D rb2d, Matrix matrix)
		{
		}

		[Token(Token = "0x6001368")]
		[Address(RVA = "0xC31E2C", Offset = "0xC31E2C", VA = "0xC31E2C")]
		public void Set(Rigidbody2D rb2d, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001369")]
		[Address(RVA = "0xC31F3C", Offset = "0xC31F3C", VA = "0xC31F3C")]
		public void Move(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x600136A")]
		[Address(RVA = "0xC32060", Offset = "0xC32060", VA = "0xC32060")]
		public void Move(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x600136B")]
		[Address(RVA = "0xC321FC", Offset = "0xC321FC", VA = "0xC321FC")]
		public void Move(Rigidbody rb, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x600136C")]
		[Address(RVA = "0xC322D8", Offset = "0xC322D8", VA = "0xC322D8")]
		public void Move(Rigidbody rb, ulong[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600136D")]
		[Address(RVA = "0xC32390", Offset = "0xC32390", VA = "0xC32390")]
		public void Move(Rigidbody rb, byte[] buffer, int bitposition, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
		}

		[Token(Token = "0x600136E")]
		[Address(RVA = "0xC32448", Offset = "0xC32448", VA = "0xC32448")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A730", Offset = "0x85A730")]
		public void Apply(Rigidbody rb, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x600136F")]
		[Address(RVA = "0xC32558", Offset = "0xC32558", VA = "0xC32558")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A768", Offset = "0x85A768")]
		public void Apply(Rigidbody rb, Matrix matrix)
		{
		}

		[Token(Token = "0x6001370")]
		[Address(RVA = "0xC326F4", Offset = "0xC326F4", VA = "0xC326F4")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A7A0", Offset = "0x85A7A0")]
		public void Apply(ulong cvalue)
		{
		}

		[Token(Token = "0x6001371")]
		[Address(RVA = "0xC32704", Offset = "0xC32704", VA = "0xC32704")]
		public void Apply(Transform t, ulong cvalue)
		{
		}

		[Token(Token = "0x6001372")]
		[Address(RVA = "0xC32930", Offset = "0xC32930", VA = "0xC32930")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A7D8", Offset = "0x85A7D8")]
		public void Apply(ulong u0, ulong u1, ulong u2, ulong u3, uint u4)
		{
		}

		[Token(Token = "0x6001373")]
		[Address(RVA = "0xC32954", Offset = "0xC32954", VA = "0xC32954")]
		public void Apply(Transform t, ulong frag0, ulong frag1 = 0uL, ulong frag2 = 0uL, ulong frag3 = 0uL, ulong frag4 = 0uL)
		{
		}

		[Token(Token = "0x6001374")]
		[Address(RVA = "0xC32A30", Offset = "0xC32A30", VA = "0xC32A30")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A810", Offset = "0x85A810")]
		public void Apply(CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001375")]
		[Address(RVA = "0xC30354", Offset = "0xC30354", VA = "0xC30354")]
		public void Apply(Transform t, CompressedMatrix cmatrix)
		{
		}

		[Token(Token = "0x6001376")]
		[Address(RVA = "0xC32A40", Offset = "0xC32A40", VA = "0xC32A40")]
		[AttributeAttribute(Name = "ObsoleteAttribute", RVA = "0x85A848", Offset = "0x85A848")]
		public void Apply(Matrix matrix)
		{
		}

		[Token(Token = "0x6001377")]
		[Address(RVA = "0xC327A8", Offset = "0xC327A8", VA = "0xC327A8")]
		public void Apply(Transform transform, Matrix matrix)
		{
		}

		[Token(Token = "0x6001378")]
		[Address(RVA = "0xC32A50", Offset = "0xC32A50", VA = "0xC32A50")]
		public void Capture(Rigidbody rb, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x6001379")]
		[Address(RVA = "0xC32A94", Offset = "0xC32A94", VA = "0xC32A94")]
		public void Capture(Rigidbody2D rb2d, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x600137A")]
		[Address(RVA = "0xC32AD8", Offset = "0xC32AD8", VA = "0xC32AD8")]
		public void Capture(Transform tr, CompressedMatrix cm, Matrix m)
		{
		}

		[Token(Token = "0x600137B")]
		[Address(RVA = "0xC32C0C", Offset = "0xC32C0C", VA = "0xC32C0C")]
		public int TallyBits(BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x600137C")]
		[Address(RVA = "0xC32D5C", Offset = "0xC32D5C", VA = "0xC32D5C", Slot = "10")]
		public void CopyFrom(TransformCrusher source)
		{
		}

		[Token(Token = "0x600137D")]
		[Address(RVA = "0xC32DCC", Offset = "0xC32DCC", VA = "0xC32DCC", Slot = "0")]
		public override bool Equals(object obj)
		{
			return default(bool);
		}

		[Token(Token = "0x600137E")]
		[Address(RVA = "0xC32E58", Offset = "0xC32E58", VA = "0xC32E58")]
		public bool Equals(TransformCrusher other)
		{
			return default(bool);
		}

		[Token(Token = "0x600137F")]
		[Address(RVA = "0xC330EC", Offset = "0xC330EC", VA = "0xC330EC", Slot = "2")]
		public override int GetHashCode()
		{
			return default(int);
		}

		[Token(Token = "0x6001380")]
		[Address(RVA = "0xC33244", Offset = "0xC33244", VA = "0xC33244")]
		public static bool operator ==(TransformCrusher crusher1, TransformCrusher crusher2)
		{
			return default(bool);
		}

		[Token(Token = "0x6001381")]
		[Address(RVA = "0xC33070", Offset = "0xC33070", VA = "0xC33070")]
		public static bool operator !=(TransformCrusher crusher1, TransformCrusher crusher2)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000244")]
	public enum FactorBoundsOn
	{
		[Token(Token = "0x400130D")]
		EnableDisable,
		[Token(Token = "0x400130E")]
		AwakeDestroy
	}
	[Token(Token = "0x2000245")]
	[ExecuteInEditMode]
	public class WorldBounds : MonoBehaviour
	{
		[Token(Token = "0x400130F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[HideInInspector]
		private Bounds manualBounds;

		[Token(Token = "0x4001310")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x852610", Offset = "0x852610")]
		[WorldBoundsSelectAttribute]
		[SerializeField]
		[HideInInspector]
		public int worldBoundsGrp;

		[Token(Token = "0x4001311")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		[HideInInspector]
		private bool includeChildren;

		[Token(Token = "0x4001312")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8526B4", Offset = "0x8526B4")]
		[SerializeField]
		[HideInInspector]
		private BoundsTools.BoundsType factorIn;

		[Token(Token = "0x4001313")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public Bounds myBounds;

		[Token(Token = "0x4001314")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public int myBoundsCount;

		[Token(Token = "0x4001315")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Action OnWorldBoundsChange;

		[Token(Token = "0x1700012D")]
		public Bounds ManualBounds
		{
			[Token(Token = "0x6001383")]
			[Address(RVA = "0xC37170", Offset = "0xC37170", VA = "0xC37170")]
			get
			{
				return default(Bounds);
			}
			[Token(Token = "0x6001384")]
			[Address(RVA = "0xC37184", Offset = "0xC37184", VA = "0xC37184")]
			set
			{
			}
		}

		[Token(Token = "0x1700012E")]
		public BoundsTools.BoundsType FactorIn
		{
			[Token(Token = "0x6001385")]
			[Address(RVA = "0xC374E0", Offset = "0xC374E0", VA = "0xC374E0")]
			get
			{
				return default(BoundsTools.BoundsType);
			}
			[Token(Token = "0x6001386")]
			[Address(RVA = "0xC374E8", Offset = "0xC374E8", VA = "0xC374E8")]
			set
			{
			}
		}

		[Token(Token = "0x6001387")]
		[Address(RVA = "0xC374F0", Offset = "0xC374F0", VA = "0xC374F0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001388")]
		[Address(RVA = "0xC37198", Offset = "0xC37198", VA = "0xC37198")]
		public void CollectMyBounds()
		{
		}

		[Token(Token = "0x6001389")]
		[Address(RVA = "0xC37994", Offset = "0xC37994", VA = "0xC37994")]
		private void Start()
		{
		}

		[Token(Token = "0x600138A")]
		[Address(RVA = "0xC37998", Offset = "0xC37998", VA = "0xC37998")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x600138B")]
		[Address(RVA = "0xC37B90", Offset = "0xC37B90", VA = "0xC37B90")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600138C")]
		[Address(RVA = "0xC37B98", Offset = "0xC37B98", VA = "0xC37B98")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600138D")]
		[Address(RVA = "0xC379A0", Offset = "0xC379A0", VA = "0xC379A0")]
		public void FactorInBounds(bool b)
		{
		}

		[Token(Token = "0x600138E")]
		[Address(RVA = "0xC37CF8", Offset = "0xC37CF8", VA = "0xC37CF8")]
		public WorldBounds()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000246")]
	public class WorldBoundsGroup
	{
		[Token(Token = "0x4001316")]
		public const string defaultName = "Default";

		[Token(Token = "0x4001317")]
		public const string newAddName = "Unnamed";

		[Token(Token = "0x4001318")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[NonSerialized]
		[Token(Token = "0x4001319")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Action OnWorldBoundChanged;

		[Token(Token = "0x400131A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ElementCrusher crusher;

		[NonSerialized]
		[Token(Token = "0x400131B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly List<WorldBounds> activeWorldBounds;

		[NonSerialized]
		[Token(Token = "0x400131C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Bounds _combinedWorldBounds;

		[Token(Token = "0x1700012F")]
		public int ActiveBoundsObjCount
		{
			[Token(Token = "0x600138F")]
			[Address(RVA = "0xC37D70", Offset = "0xC37D70", VA = "0xC37D70")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001390")]
		[Address(RVA = "0xC37DBC", Offset = "0xC37DBC", VA = "0xC37DBC")]
		public static ElementCrusher GetUncompressedCrusher()
		{
			return null;
		}

		[Token(Token = "0x6001391")]
		[Address(RVA = "0xC37F44", Offset = "0xC37F44", VA = "0xC37F44")]
		public void ResetActiveBounds()
		{
		}

		[Token(Token = "0x6001392")]
		[Address(RVA = "0xC37738", Offset = "0xC37738", VA = "0xC37738")]
		public void RecalculateWorldCombinedBounds()
		{
		}

		[Token(Token = "0x6001393")]
		[Address(RVA = "0xC374F4", Offset = "0xC374F4", VA = "0xC374F4")]
		public WorldBoundsGroup()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public class WorldBoundsSelectAttributeAttribute : PropertyAttribute
	{
		[Token(Token = "0x6001394")]
		[Address(RVA = "0xC37F98", Offset = "0xC37F98", VA = "0xC37F98")]
		public WorldBoundsSelectAttributeAttribute()
		{
		}
	}
	[Token(Token = "0x2000248")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x8485EC", Offset = "0x8485EC")]
	public class WorldBoundsSettings : SettingsScriptableObject<WorldBoundsSettings>
	{
		[Token(Token = "0x400131D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public List<WorldBoundsGroup> worldBoundsGroups;

		[Token(Token = "0x400131E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ElementCrusher defaultWorldBoundsCrusher;

		[Token(Token = "0x6001395")]
		[Address(RVA = "0xC37FA0", Offset = "0xC37FA0", VA = "0xC37FA0")]
		[AttributeAttribute(Name = "RuntimeInitializeOnLoadMethodAttribute", RVA = "0x85A880", Offset = "0x85A880")]
		private static void Bootstrap()
		{
		}

		[Token(Token = "0x6001396")]
		[Address(RVA = "0xC380E0", Offset = "0xC380E0", VA = "0xC380E0", Slot = "5")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6001397")]
		[Address(RVA = "0xC381AC", Offset = "0xC381AC", VA = "0xC381AC", Slot = "4")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001398")]
		[Address(RVA = "0xC375C0", Offset = "0xC375C0", VA = "0xC375C0")]
		public static void RemoveWorldBoundsFromAll(WorldBounds wb)
		{
		}

		[Token(Token = "0x6001399")]
		[Address(RVA = "0xC3839C", Offset = "0xC3839C", VA = "0xC3839C")]
		public static int TallyBits(int index, BitCullingLevel bcl = BitCullingLevel.NoCulling)
		{
			return default(int);
		}

		[Token(Token = "0x600139A")]
		[Address(RVA = "0xC38510", Offset = "0xC38510", VA = "0xC38510")]
		public WorldBoundsSettings()
		{
		}
	}
}
namespace Photon.Compression.Internal
{
	[Token(Token = "0x2000249")]
	public class SyncRangedAttribute : SyncVarBaseAttribute, IPackSingle
	{
		[Token(Token = "0x400131F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LiteFloatCrusher crusher;

		[Token(Token = "0x600139B")]
		[Address(RVA = "0x105740C", Offset = "0x105740C", VA = "0x105740C")]
		public SyncRangedAttribute(LiteFloatCompressType compression, float min, float max, bool accurateCenter)
		{
		}

		[Token(Token = "0x600139C")]
		[Address(RVA = "0x10574D4", Offset = "0x10574D4", VA = "0x10574D4", Slot = "10")]
		public SerializationFlags Pack(float value, float preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}

		[Token(Token = "0x600139D")]
		[Address(RVA = "0x105760C", Offset = "0x105760C", VA = "0x105760C", Slot = "11")]
		public SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags)
		{
			return default(SerializationFlags);
		}
	}
	[Serializable]
	[Token(Token = "0x200024A")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x8485FC", Offset = "0x8485FC")]
	public abstract class SyncVarBaseAttribute : Attribute
	{
		[Token(Token = "0x4001320")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public SyncAs syncAs;

		[Token(Token = "0x4001321")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public KeyRate keyRate;

		[Token(Token = "0x4001322")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string applyCallback;

		[Token(Token = "0x4001323")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string snapshotCallback;

		[Token(Token = "0x4001324")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SetValueTiming setValueTiming;

		[Token(Token = "0x4001325")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool interpolate;

		[Token(Token = "0x4001326")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int bitCount;

		[Token(Token = "0x600139E")]
		[Address(RVA = "0x105ABE8", Offset = "0x105ABE8", VA = "0x105ABE8", Slot = "7")]
		public virtual void Initialize(Type primitiveType)
		{
		}

		[Token(Token = "0x600139F")]
		[Address(RVA = "0x105AC1C", Offset = "0x105AC1C", VA = "0x105AC1C", Slot = "8")]
		public virtual int GetDefaultBitCount(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x60013A0")]
		[Address(RVA = "0x1058818", Offset = "0x1058818", VA = "0x1058818", Slot = "9")]
		public virtual int GetMaxBits(Type fieldType)
		{
			return default(int);
		}

		[Token(Token = "0x60013A1")]
		[Address(RVA = "0x1056EF0", Offset = "0x1056EF0", VA = "0x1056EF0")]
		public bool IsKeyframe(int frameId)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A2")]
		[Address(RVA = "0x10575C0", Offset = "0x10575C0", VA = "0x10575C0")]
		public bool IsForced(int frameId, SerializationFlags writeFlags)
		{
			return default(bool);
		}

		[Token(Token = "0x60013A3")]
		public bool IsForcedClass<T>(int frameId, T value, T prevValue, SerializationFlags writeFlags) where T : class
		{
			return default(bool);
		}

		[Token(Token = "0x60013A4")]
		public bool IsForced<T>(int frameId, T value, T prevValue, SerializationFlags writeFlags) where T : struct
		{
			return default(bool);
		}

		[Token(Token = "0x60013A5")]
		[Address(RVA = "0x1056A68", Offset = "0x1056A68", VA = "0x1056A68")]
		protected SyncVarBaseAttribute()
		{
		}
	}
	[Token(Token = "0x200024B")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x848610", Offset = "0x848610")]
	public class PackSupportedTypesAttribute : Attribute
	{
		[Token(Token = "0x4001327")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Type supportedType;

		[Token(Token = "0x60013A6")]
		[Address(RVA = "0x1B65268", Offset = "0x1B65268", VA = "0x1B65268")]
		public PackSupportedTypesAttribute(Type supportedType)
		{
		}
	}
	[Token(Token = "0x200024C")]
	public delegate SerializationFlags PackDelegate<T>(T value, T prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	[Token(Token = "0x200024D")]
	public delegate SerializationFlags UnpackDelegate<T>(T value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	[Token(Token = "0x200024E")]
	public delegate SerializationFlags PackListDelegate<T>(List<T> value, List<T> prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags) where T : struct;
	[Token(Token = "0x200024F")]
	public delegate SerializationFlags UnpackListDelegate<T>(List<T> value, BitArray mask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags) where T : struct;
	[Token(Token = "0x2000250")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848624", Offset = "0x848624")]
	public interface IPackList<T> where T : struct
	{
		[Token(Token = "0x60013B7")]
		SerializationFlags Pack(List<T> value, List<T> prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013B8")]
		SerializationFlags Unpack(List<T> value, BitArray mask, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000251")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x84868C", Offset = "0x84868C")]
	public interface IPackBoolean
	{
		[Token(Token = "0x60013B9")]
		SerializationFlags Pack(bool value, bool prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013BA")]
		SerializationFlags Unpack(bool value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000252")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x8486F4", Offset = "0x8486F4")]
	public interface IPackChar
	{
		[Token(Token = "0x60013BB")]
		SerializationFlags Pack(char value, char prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013BC")]
		SerializationFlags Unpack(char value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000253")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x84875C", Offset = "0x84875C")]
	public interface IPackByte
	{
		[Token(Token = "0x60013BD")]
		SerializationFlags Pack(byte value, byte prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013BE")]
		SerializationFlags Unpack(byte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000254")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x8487C4", Offset = "0x8487C4")]
	public interface IPackSByte
	{
		[Token(Token = "0x60013BF")]
		SerializationFlags Pack(sbyte value, sbyte prevvalue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013C0")]
		SerializationFlags Unpack(sbyte value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000255")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x84882C", Offset = "0x84882C")]
	public interface IPackUInt16
	{
		[Token(Token = "0x60013C1")]
		SerializationFlags Pack(ushort value, ushort preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013C2")]
		SerializationFlags Unpack(ushort value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000256")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848894", Offset = "0x848894")]
	public interface IPackInt16
	{
		[Token(Token = "0x60013C3")]
		SerializationFlags Pack(short value, short preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013C4")]
		SerializationFlags Unpack(short value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000257")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x8488FC", Offset = "0x8488FC")]
	public interface IPackUInt32
	{
		[Token(Token = "0x60013C5")]
		SerializationFlags Pack(uint value, uint preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013C6")]
		SerializationFlags Unpack(uint value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000258")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848964", Offset = "0x848964")]
	public interface IPackInt32
	{
		[Token(Token = "0x60013C7")]
		SerializationFlags Pack(int value, int preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013C8")]
		SerializationFlags Unpack(int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000259")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x8489CC", Offset = "0x8489CC")]
	public interface IPackUInt64
	{
		[Token(Token = "0x60013C9")]
		SerializationFlags Pack(ulong value, ulong preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013CA")]
		SerializationFlags Unpack(ulong value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200025A")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848A34", Offset = "0x848A34")]
	public interface IPackInt64
	{
		[Token(Token = "0x60013CB")]
		SerializationFlags Pack(long value, long preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013CC")]
		SerializationFlags Unpack(long value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200025B")]
	public delegate SerializationFlags PackSingleDelegate(float value, float preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	[Token(Token = "0x200025C")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848A9C", Offset = "0x848A9C")]
	public interface IPackSingle
	{
		[Token(Token = "0x60013D1")]
		SerializationFlags Pack(float value, float preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013D2")]
		SerializationFlags Unpack(float value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200025D")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848B04", Offset = "0x848B04")]
	public interface IPackDouble
	{
		[Token(Token = "0x60013D3")]
		SerializationFlags Pack(double value, double preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013D4")]
		SerializationFlags Unpack(double value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200025E")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848B6C", Offset = "0x848B6C")]
	public interface IPackString
	{
		[Token(Token = "0x60013D5")]
		SerializationFlags Pack(string value, string preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013D6")]
		SerializationFlags Unpack(string value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x200025F")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848BD4", Offset = "0x848BD4")]
	public interface IPackStringBuilder
	{
		[Token(Token = "0x60013D7")]
		SerializationFlags Pack(StringBuilder value, StringBuilder preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013D8")]
		SerializationFlags Unpack(StringBuilder value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000260")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848C3C", Offset = "0x848C3C")]
	public interface IPackVector2
	{
		[Token(Token = "0x60013D9")]
		SerializationFlags Pack(Vector2 value, Vector2 preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013DA")]
		SerializationFlags Unpack(Vector2 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000261")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848CA4", Offset = "0x848CA4")]
	public interface IPackVector3
	{
		[Token(Token = "0x60013DB")]
		SerializationFlags Pack(Vector3 value, Vector3 preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013DC")]
		SerializationFlags Unpack(Vector3 value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000262")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848D0C", Offset = "0x848D0C")]
	public interface IPackVector2Int
	{
		[Token(Token = "0x60013DD")]
		SerializationFlags Pack(Vector2Int value, Vector2Int preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013DE")]
		SerializationFlags Unpack(Vector2Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000263")]
	[AttributeAttribute(Name = "PackSupportedTypesAttribute", RVA = "0x848D74", Offset = "0x848D74")]
	public interface IPackVector3Int
	{
		[Token(Token = "0x60013DF")]
		SerializationFlags Pack(Vector3Int value, Vector3Int preValue, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);

		[Token(Token = "0x60013E0")]
		SerializationFlags Unpack(Vector3Int value, byte[] buffer, int bitposition, int frameId, SerializationFlags writeFlags);
	}
	[Token(Token = "0x2000264")]
	public abstract class PackFrame
	{
		[Token(Token = "0x4001328")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public FastBitMask128 mask;

		[Token(Token = "0x4001329")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public FastBitMask128 isCompleteMask;

		[Token(Token = "0x60013E1")]
		[Address(RVA = "0x1B64B94", Offset = "0x1B64B94", VA = "0x1B64B94")]
		protected PackFrame()
		{
		}
	}
	[Token(Token = "0x2000265")]
	public static class PackObjectDatabase
	{
		[Token(Token = "0x20004D4")]
		public delegate SerializationFlags PackStructDelegate(IntPtr obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x20004D5")]
		public delegate SerializationFlags PackObjDelegate(object obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x20004D6")]
		public delegate SerializationFlags PackFrameDelegate(PackFrame obj, PackFrame prevFrame, FastBitMask128 mask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x20004D7")]
		public delegate SerializationFlags UnpackFrameDelegate(PackFrame obj, FastBitMask128 hasContentMask, FastBitMask128 isCompleteMask, int maskOffset, byte[] buffer, int bitposition, int frameId, SerializationFlags forceKeyframe);

		[Token(Token = "0x20004D8")]
		public delegate void PackCopyFrameToObjectDelegate(PackFrame src, object trg, FastBitMask128 mask, int maskOffset);

		[Token(Token = "0x20004D9")]
		public delegate void PackCopyFrameToStructDelegate(PackFrame src, IntPtr trg, FastBitMask128 mask, int maskOffset);

		[Token(Token = "0x20004DA")]
		public delegate void PackSnapshotObjectDelegate(PackFrame snap, PackFrame targ, object trg, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x20004DB")]
		public delegate void PackSnapshotStructDelegate(PackFrame snap, PackFrame targ, IntPtr trg, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x20004DC")]
		public delegate void PackInterpFrameToFrameDelegate(PackFrame start, PackFrame end, PackFrame trg, float ntime, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x20004DD")]
		public delegate void PackInterpFrameToObjectDelegate(PackFrame start, PackFrame end, object trg, float ntime, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x20004DE")]
		public delegate void PackInterpFrameToStructDelegate(PackFrame start, PackFrame end, IntPtr trg, float ntime, FastBitMask128 readyMask, int maskOffset);

		[Token(Token = "0x20004DF")]
		public class PackObjectInfo
		{
			[Token(Token = "0x40023B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public readonly Type packFrameType;

			[Token(Token = "0x40023B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public readonly int maxBits;

			[Token(Token = "0x40023B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public readonly int maxBytes;

			[Token(Token = "0x40023B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public readonly FastBitMask128 defaultReadyMask;

			[Token(Token = "0x40023B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			public readonly PackObjDelegate PackObjToBuffer;

			[Token(Token = "0x40023B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			public readonly PackStructDelegate PackStructToBuffer;

			[Token(Token = "0x40023B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			public readonly PackFrameDelegate PackFrameToBuffer;

			[Token(Token = "0x40023B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			public readonly UnpackFrameDelegate UnpackFrameFromBuffer;

			[Token(Token = "0x40023B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
			public Func<PackFrame> FactoryFrame;

			[Token(Token = "0x40023B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
			public Func<object, int, PackFrame[]> FactoryFramesObj;

			[Token(Token = "0x40023BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
			public Func<IntPtr, int, PackFrame[]> FactoryFramesStruct;

			[Token(Token = "0x40023BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
			public PackCopyFrameToObjectDelegate CopyFrameToObj;

			[Token(Token = "0x40023BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
			public PackCopyFrameToStructDelegate CopyFrameToStruct;

			[Token(Token = "0x40023BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
			public PackSnapshotObjectDelegate SnapObject;

			[Token(Token = "0x40023BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
			public PackSnapshotStructDelegate SnapStruct;

			[Token(Token = "0x40023BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
			public PackInterpFrameToFrameDelegate InterpFrameToFrame;

			[Token(Token = "0x40023C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
			public PackInterpFrameToObjectDelegate InterpFrameToObj;

			[Token(Token = "0x40023C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
			public PackInterpFrameToStructDelegate InterpFrameToStruct;

			[Token(Token = "0x40023C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
			public Action<object, PackFrame> CaptureObj;

			[Token(Token = "0x40023C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
			public Action<IntPtr, PackFrame> CaptureStruct;

			[Token(Token = "0x40023C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
			public Action<PackFrame, PackFrame> CopyFrameToFrame;

			[Token(Token = "0x40023C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
			public readonly int fieldCount;

			[Token(Token = "0x6001E86")]
			[Address(RVA = "0x19DC924", Offset = "0x19DC924", VA = "0x19DC924")]
			public PackObjectInfo(FastBitMask128 defaultReadyMask, PackObjDelegate packObjToBuffer, PackFrameDelegate packFrameToBuffer, UnpackFrameDelegate unpackFrameFromBuffer, int maxBits, Func<PackFrame> factoryFrame, Func<object, int, PackFrame[]> factoryFramesObj, PackCopyFrameToObjectDelegate copyFrameToObj, Action<object, PackFrame> captureObj, Action<PackFrame, PackFrame> copyFrameToFrame, PackSnapshotObjectDelegate snapObject, PackInterpFrameToFrameDelegate interpFrameToFrame, PackInterpFrameToObjectDelegate interpFrameToObj, int fieldCount)
			{
			}

			[Token(Token = "0x6001E87")]
			[Address(RVA = "0x19DCA8C", Offset = "0x19DCA8C", VA = "0x19DCA8C")]
			public PackObjectInfo(FastBitMask128 defaultReadyMask, PackStructDelegate packStructToBuffer, PackFrameDelegate packFrameToBuffer, UnpackFrameDelegate unpackFrameFromBuffer, int maxBits, Func<PackFrame> factoryFrame, Func<IntPtr, int, PackFrame[]> factoryFramesStruct, PackCopyFrameToStructDelegate copyFrameToStruct, Action<IntPtr, PackFrame> captureStruct, Action<PackFrame, PackFrame> copyFrameToFrame, PackSnapshotStructDelegate snapStruct, PackInterpFrameToFrameDelegate interpFrameToFrame, PackInterpFrameToStructDelegate interpFrameToStruct, int fieldCount)
			{
			}
		}

		[Token(Token = "0x400132A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Dictionary<Type, PackObjectInfo> packObjInfoLookup;

		[Token(Token = "0x60013E2")]
		[Address(RVA = "0x1B64BD0", Offset = "0x1B64BD0", VA = "0x1B64BD0")]
		public static PackObjectInfo GetPackObjectInfo(Type type)
		{
			return null;
		}
	}
}
namespace Photon.Utilities
{
	[Token(Token = "0x2000266")]
	public static class BitUtilities
	{
		[Token(Token = "0x60013E4")]
		[Address(RVA = "0xF461C8", Offset = "0xF461C8", VA = "0xF461C8")]
		public static int GetBitsForMaxValue(this int maxvalue)
		{
			return default(int);
		}

		[Token(Token = "0x60013E5")]
		[Address(RVA = "0xF461E8", Offset = "0xF461E8", VA = "0xF461E8")]
		public static int GetBitsForMaxValue(this uint maxvalue)
		{
			return default(int);
		}
	}
	[Token(Token = "0x2000267")]
	public class CatmulRom
	{
		[Token(Token = "0x60013E6")]
		[Address(RVA = "0xDC03C4", Offset = "0xDC03C4", VA = "0xDC03C4")]
		public static float CatmullRomLerp(float pre, float start, float end, float post, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60013E7")]
		[Address(RVA = "0xDC0470", Offset = "0xDC0470", VA = "0xDC0470")]
		public static float CatmullRomLerp(float pre, float start, float end, float t)
		{
			return default(float);
		}

		[Token(Token = "0x60013E8")]
		[Address(RVA = "0xDC0524", Offset = "0xDC0524", VA = "0xDC0524")]
		public static Vector3 CatmullRomLerp(Vector2 pre, Vector2 start, Vector2 end, Vector2 post, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013E9")]
		[Address(RVA = "0xDC05DC", Offset = "0xDC05DC", VA = "0xDC05DC")]
		public static Vector3 CatmullRomLerp(Vector2 pre, Vector2 start, Vector2 end, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013EA")]
		[Address(RVA = "0xDC0694", Offset = "0xDC0694", VA = "0xDC0694")]
		public static Vector3 CatmullRomLerp(Vector3 pre, Vector3 start, Vector3 end, Vector3 post, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013EB")]
		[Address(RVA = "0xDC07E4", Offset = "0xDC07E4", VA = "0xDC07E4")]
		public static Vector3 CatmullRomLerp(Vector3 pre, Vector3 start, Vector3 end, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x60013EC")]
		[Address(RVA = "0xDC0934", Offset = "0xDC0934", VA = "0xDC0934")]
		public CatmulRom()
		{
		}
	}
	[Token(Token = "0x2000268")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x848DEC", Offset = "0x848DEC")]
	public class DisableFieldAttribute : PropertyAttribute
	{
		[Token(Token = "0x60013ED")]
		[Address(RVA = "0xBFEB5C", Offset = "0xBFEB5C", VA = "0xBFEB5C")]
		public DisableFieldAttribute()
		{
		}
	}
	[Token(Token = "0x2000269")]
	public class MinMaxRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x400132B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly float max;

		[Token(Token = "0x400132C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly float min;

		[Token(Token = "0x60013EE")]
		[Address(RVA = "0xCEDBA0", Offset = "0xCEDBA0", VA = "0xCEDBA0")]
		public MinMaxRangeAttribute(float min, float max)
		{
		}
	}
	[Token(Token = "0x200026A")]
	public class BitsPerRangeAttribute : PropertyAttribute
	{
		[Token(Token = "0x400132D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly int max;

		[Token(Token = "0x400132E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public readonly int min;

		[Token(Token = "0x400132F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly string label;

		[Token(Token = "0x4001330")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly bool showLabel;

		[Token(Token = "0x4001331")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly string tooltip;

		[Token(Token = "0x4001332")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public bool show;

		[Token(Token = "0x60013EF")]
		[Address(RVA = "0xF46208", Offset = "0xF46208", VA = "0xF46208")]
		public BitsPerRangeAttribute(int min, int max, bool show, bool zeroBase = false, string label = "Max:", bool showLabel = true, string tooltip = "")
		{
		}
	}
	[Token(Token = "0x200026B")]
	public class ReadOnlyAttribute : PropertyAttribute
	{
		[Token(Token = "0x60013F0")]
		[Address(RVA = "0xDCFA54", Offset = "0xDCFA54", VA = "0xDCFA54")]
		public ReadOnlyAttribute()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200026C")]
	public class SingleUnityLayer
	{
		[Token(Token = "0x4001333")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		[HideInInspector]
		private int m_LayerIndex;

		[Token(Token = "0x17000130")]
		public int LayerIndex
		{
			[Token(Token = "0x60013F1")]
			[Address(RVA = "0xDDAC5C", Offset = "0xDDAC5C", VA = "0xDDAC5C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000131")]
		public int Mask
		{
			[Token(Token = "0x60013F3")]
			[Address(RVA = "0xDDAC78", Offset = "0xDDAC78", VA = "0xDDAC78")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x60013F2")]
		[Address(RVA = "0xDDAC64", Offset = "0xDDAC64", VA = "0xDDAC64")]
		public void Set(int _layerIndex)
		{
		}

		[Token(Token = "0x60013F4")]
		[Address(RVA = "0xDDAC88", Offset = "0xDDAC88", VA = "0xDDAC88")]
		public static implicit operator int(SingleUnityLayer m)
		{
			return default(int);
		}

		[Token(Token = "0x60013F5")]
		[Address(RVA = "0xDDACA4", Offset = "0xDDACA4", VA = "0xDDACA4")]
		public SingleUnityLayer()
		{
		}
	}
	[Token(Token = "0x200026D")]
	public class VersaMaskAttribute : PropertyAttribute
	{
		[Token(Token = "0x4001334")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool definesZero;

		[Token(Token = "0x4001335")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Type castTo;

		[Token(Token = "0x60013F6")]
		[Address(RVA = "0xC356D0", Offset = "0xC356D0", VA = "0xC356D0")]
		public VersaMaskAttribute(bool definesZero = false, [Optional] Type castTo)
		{
		}
	}
	[Token(Token = "0x200026E")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x848E00", Offset = "0x848E00")]
	public struct FastBitMask128
	{
		[Token(Token = "0x4001336")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private ulong seg1;

		[Token(Token = "0x4001337")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ulong seg2;

		[Token(Token = "0x4001338")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int bitcount;

		[Token(Token = "0x4001339")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private int seg1bitcount;

		[Token(Token = "0x400133A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int seg2bitcount;

		[Token(Token = "0x400133B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ulong alltrue1;

		[Token(Token = "0x400133C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ulong alltrue2;

		[Token(Token = "0x17000132")]
		public ulong Seg1
		{
			[Token(Token = "0x60013F7")]
			[Address(RVA = "0xB9E678", Offset = "0xB9E678", VA = "0xB9E678")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000133")]
		public ulong Seg2
		{
			[Token(Token = "0x60013F8")]
			[Address(RVA = "0xB9E680", Offset = "0xB9E680", VA = "0xB9E680")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000134")]
		public ulong AllTrue1
		{
			[Token(Token = "0x60013F9")]
			[Address(RVA = "0xB9E688", Offset = "0xB9E688", VA = "0xB9E688")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000135")]
		public ulong AllTrue2
		{
			[Token(Token = "0x60013FA")]
			[Address(RVA = "0xB9E690", Offset = "0xB9E690", VA = "0xB9E690")]
			get
			{
				return default(ulong);
			}
		}

		[Token(Token = "0x17000136")]
		public int BitCount
		{
			[Token(Token = "0x60013FB")]
			[Address(RVA = "0xB9E698", Offset = "0xB9E698", VA = "0xB9E698")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x60013FC")]
			[Address(RVA = "0xB9E6A0", Offset = "0xB9E6A0", VA = "0xB9E6A0")]
			set
			{
			}
		}

		[Token(Token = "0x17000137")]
		public bool Item
		{
			[Token(Token = "0x60013FF")]
			[Address(RVA = "0xB9E7C0", Offset = "0xB9E7C0", VA = "0xB9E7C0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001400")]
			[Address(RVA = "0xB9E7E0", Offset = "0xB9E7E0", VA = "0xB9E7E0")]
			set
			{
			}
		}

		[Token(Token = "0x17000138")]
		public bool AllAreFalse
		{
			[Token(Token = "0x6001407")]
			[Address(RVA = "0xB9E924", Offset = "0xB9E924", VA = "0xB9E924")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000139")]
		public bool AllAreTrue
		{
			[Token(Token = "0x6001408")]
			[Address(RVA = "0xB9E94C", Offset = "0xB9E94C", VA = "0xB9E94C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x60013FD")]
		[Address(RVA = "0xB9E718", Offset = "0xB9E718", VA = "0xB9E718")]
		public FastBitMask128(int bitcount)
		{
		}

		[Token(Token = "0x60013FE")]
		[Address(RVA = "0xB9E784", Offset = "0xB9E784", VA = "0xB9E784")]
		public FastBitMask128(FastBitMask128 copyFrom)
		{
		}

		[Token(Token = "0x6001401")]
		[Address(RVA = "0xB9E848", Offset = "0xB9E848", VA = "0xB9E848")]
		public bool Get(int bit)
		{
			return default(bool);
		}

		[Token(Token = "0x6001402")]
		[Address(RVA = "0xB9E868", Offset = "0xB9E868", VA = "0xB9E868")]
		public void Set(int bit, bool value)
		{
		}

		[Token(Token = "0x6001403")]
		[Address(RVA = "0xB9E8D0", Offset = "0xB9E8D0", VA = "0xB9E8D0")]
		public void SetTrue(int bit)
		{
		}

		[Token(Token = "0x6001404")]
		[Address(RVA = "0xB9E8F0", Offset = "0xB9E8F0", VA = "0xB9E8F0")]
		public void SetFalse(int bit)
		{
		}

		[Token(Token = "0x6001405")]
		[Address(RVA = "0xB9E910", Offset = "0xB9E910", VA = "0xB9E910")]
		public void SetAllTrue()
		{
		}

		[Token(Token = "0x6001406")]
		[Address(RVA = "0xB9E91C", Offset = "0xB9E91C", VA = "0xB9E91C")]
		public void SetAllFalse()
		{
		}

		[Token(Token = "0x6001409")]
		[Address(RVA = "0xB9E988", Offset = "0xB9E988", VA = "0xB9E988")]
		public void OR(FastBitMask128 other)
		{
		}

		[Token(Token = "0x600140A")]
		[Address(RVA = "0xB9E9A8", Offset = "0xB9E9A8", VA = "0xB9E9A8")]
		public void OR(FastBitMask128 other, int otherOffset)
		{
		}

		[Token(Token = "0x600140B")]
		[Address(RVA = "0xB9EA48", Offset = "0xB9EA48", VA = "0xB9EA48")]
		public void AND(FastBitMask128 other)
		{
		}

		[Token(Token = "0x600140C")]
		[Address(RVA = "0xB9EA68", Offset = "0xB9EA68", VA = "0xB9EA68")]
		public void XOR(FastBitMask128 other)
		{
		}

		[Token(Token = "0x600140D")]
		[Address(RVA = "0xB9EA88", Offset = "0xB9EA88", VA = "0xB9EA88")]
		public static FastBitMask128 operator |(FastBitMask128 a, FastBitMask128 b)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x600140E")]
		[Address(RVA = "0xB9EAB4", Offset = "0xB9EAB4", VA = "0xB9EAB4")]
		public static FastBitMask128 operator &(FastBitMask128 a, FastBitMask128 b)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x600140F")]
		[Address(RVA = "0xB9EAE0", Offset = "0xB9EAE0", VA = "0xB9EAE0")]
		public static FastBitMask128 operator ^(FastBitMask128 a, FastBitMask128 b)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x6001410")]
		[Address(RVA = "0xB9EB10", Offset = "0xB9EB10", VA = "0xB9EB10")]
		public static FastBitMask128 operator !(FastBitMask128 a)
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x6001411")]
		[Address(RVA = "0xB9EB38", Offset = "0xB9EB38", VA = "0xB9EB38")]
		public FastBitMask128 NOT()
		{
			return default(FastBitMask128);
		}

		[Token(Token = "0x6001412")]
		[Address(RVA = "0xB9EB60", Offset = "0xB9EB60", VA = "0xB9EB60")]
		public int CountTrue()
		{
			return default(int);
		}

		[Token(Token = "0x6001413")]
		[Address(RVA = "0xB9EBD0", Offset = "0xB9EBD0", VA = "0xB9EBD0")]
		public int CountFalse()
		{
			return default(int);
		}

		[Token(Token = "0x6001414")]
		[Address(RVA = "0xB9EC4C", Offset = "0xB9EC4C", VA = "0xB9EC4C")]
		public void ClearBitsBefore(int start, int count)
		{
		}

		[Token(Token = "0x6001415")]
		[Address(RVA = "0xB9ED0C", Offset = "0xB9ED0C", VA = "0xB9ED0C")]
		public int CountValidRange(int start, int lookahead)
		{
			return default(int);
		}

		[Token(Token = "0x6001416")]
		[Address(RVA = "0xB9ED64", Offset = "0xB9ED64", VA = "0xB9ED64")]
		public void Copy(FastBitMask128 other)
		{
		}

		[Token(Token = "0x6001417")]
		[Address(RVA = "0xB9EDA0", Offset = "0xB9EDA0", VA = "0xB9EDA0")]
		public bool Compare(FastBitMask128 other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200026F")]
	public static class FastBitMaskExt
	{
	}
	[Token(Token = "0x2000270")]
	[AttributeAttribute(Name = "DefaultMemberAttribute", RVA = "0x848E38", Offset = "0x848E38")]
	public struct FastBitMask64
	{
		[Token(Token = "0x400133D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong bitmask;

		[Token(Token = "0x400133E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private int bitcount;

		[Token(Token = "0x400133F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private ulong alltrue;

		[Token(Token = "0x1700013A")]
		public int BitCount
		{
			[Token(Token = "0x6001418")]
			[Address(RVA = "0xB9EDDC", Offset = "0xB9EDDC", VA = "0xB9EDDC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001419")]
			[Address(RVA = "0xB9EDE4", Offset = "0xB9EDE4", VA = "0xB9EDE4")]
			set
			{
			}
		}

		[Token(Token = "0x1700013B")]
		public bool Item
		{
			[Token(Token = "0x600141C")]
			[Address(RVA = "0xB9EE50", Offset = "0xB9EE50", VA = "0xB9EE50")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600141D")]
			[Address(RVA = "0xB9EE68", Offset = "0xB9EE68", VA = "0xB9EE68")]
			set
			{
			}
		}

		[Token(Token = "0x1700013C")]
		public bool AllAreFalse
		{
			[Token(Token = "0x6001424")]
			[Address(RVA = "0xB9EF0C", Offset = "0xB9EF0C", VA = "0xB9EF0C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700013D")]
		public bool AllAreTrue
		{
			[Token(Token = "0x6001425")]
			[Address(RVA = "0xB9EF2C", Offset = "0xB9EF2C", VA = "0xB9EF2C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600141A")]
		[Address(RVA = "0xB9EE10", Offset = "0xB9EE10", VA = "0xB9EE10")]
		public FastBitMask64(int bitcount)
		{
		}

		[Token(Token = "0x600141B")]
		[Address(RVA = "0xB9EE34", Offset = "0xB9EE34", VA = "0xB9EE34")]
		private FastBitMask64(FastBitMask64 copyFrom)
		{
		}

		[Token(Token = "0x600141E")]
		[Address(RVA = "0xB9EE8C", Offset = "0xB9EE8C", VA = "0xB9EE8C")]
		public bool Get(int bit)
		{
			return default(bool);
		}

		[Token(Token = "0x600141F")]
		[Address(RVA = "0xB9EEA4", Offset = "0xB9EEA4", VA = "0xB9EEA4")]
		public void Set(int bit, bool value)
		{
		}

		[Token(Token = "0x6001420")]
		[Address(RVA = "0xB9EEC8", Offset = "0xB9EEC8", VA = "0xB9EEC8")]
		public void SetTrue(int bit)
		{
		}

		[Token(Token = "0x6001421")]
		[Address(RVA = "0xB9EEE0", Offset = "0xB9EEE0", VA = "0xB9EEE0")]
		public void SetFalse(int bit)
		{
		}

		[Token(Token = "0x6001422")]
		[Address(RVA = "0xB9EEF8", Offset = "0xB9EEF8", VA = "0xB9EEF8")]
		public void SetAllTrue()
		{
		}

		[Token(Token = "0x6001423")]
		[Address(RVA = "0xB9EF04", Offset = "0xB9EF04", VA = "0xB9EF04")]
		public void SetAllFalse()
		{
		}

		[Token(Token = "0x6001426")]
		[Address(RVA = "0xB9EF50", Offset = "0xB9EF50", VA = "0xB9EF50")]
		public void OR(FastBitMask64 other)
		{
		}

		[Token(Token = "0x6001427")]
		[Address(RVA = "0xB9EF64", Offset = "0xB9EF64", VA = "0xB9EF64")]
		public void AND(FastBitMask64 other)
		{
		}

		[Token(Token = "0x6001428")]
		[Address(RVA = "0xB9EF78", Offset = "0xB9EF78", VA = "0xB9EF78")]
		public void XOR(FastBitMask64 other)
		{
		}

		[Token(Token = "0x6001429")]
		[Address(RVA = "0xB9EF8C", Offset = "0xB9EF8C", VA = "0xB9EF8C")]
		public int CountTrue()
		{
			return default(int);
		}

		[Token(Token = "0x600142A")]
		[Address(RVA = "0xB9EFC8", Offset = "0xB9EFC8", VA = "0xB9EFC8")]
		public int CountFalse()
		{
			return default(int);
		}

		[Token(Token = "0x600142B")]
		[Address(RVA = "0xB9F020", Offset = "0xB9F020", VA = "0xB9F020")]
		public void ClearBitsBefore(int start, int count)
		{
		}

		[Token(Token = "0x600142C")]
		[Address(RVA = "0xB9F080", Offset = "0xB9F080", VA = "0xB9F080")]
		public int CountValidRange(int start, int lookahead)
		{
			return default(int);
		}

		[Token(Token = "0x600142D")]
		[Address(RVA = "0xB9F0C8", Offset = "0xB9F0C8", VA = "0xB9F0C8")]
		public void Copy(FastBitMask64 other)
		{
		}

		[Token(Token = "0x600142E")]
		[Address(RVA = "0xB9F0E4", Offset = "0xB9F0E4", VA = "0xB9F0E4")]
		public bool Compare(FastBitMask64 other)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000271")]
	public static class FastBitMask64Ext
	{
	}
	[Token(Token = "0x2000272")]
	public abstract class SettingsScriptableObjectBase : ScriptableObject
	{
		[Token(Token = "0x600142F")]
		public abstract void Initialize();

		[Token(Token = "0x6001430")]
		[Address(RVA = "0xDD8134", Offset = "0xDD8134", VA = "0xDD8134")]
		protected SettingsScriptableObjectBase()
		{
		}
	}
	[Token(Token = "0x2000273")]
	public abstract class SettingsScriptableObject<T> : SettingsScriptableObjectBase where T : SettingsScriptableObjectBase
	{
		[Token(Token = "0x4001340")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static string AssetName;

		[Token(Token = "0x4001341")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Action OnSingletonReady;

		[Token(Token = "0x4001342")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static T single;

		[Token(Token = "0x1700013E")]
		public static T Single
		{
			[Token(Token = "0x6001431")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001432")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001433")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6001434")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001435")]
		protected SettingsScriptableObject()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public static class BoundsTools
	{
		[Token(Token = "0x20004E0")]
		public enum BoundsType
		{
			[Token(Token = "0x40023C7")]
			Both,
			[Token(Token = "0x40023C8")]
			MeshRenderer,
			[Token(Token = "0x40023C9")]
			Collider,
			[Token(Token = "0x40023CA")]
			Manual
		}

		[Token(Token = "0x4001343")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly List<MeshFilter> meshFilters;

		[Token(Token = "0x4001344")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly List<Renderer> meshRenderers;

		[Token(Token = "0x4001345")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly List<Collider> colliders;

		[Token(Token = "0x4001346")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly List<Collider> validColliders;

		[Token(Token = "0x4001347")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly List<SpriteRenderer> spriteRenderers;

		[Token(Token = "0x4001348")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static readonly List<Collider2D> colliders2D;

		[Token(Token = "0x4001349")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static readonly List<Collider2D> validColliders2D;

		[Token(Token = "0x6001437")]
		[Address(RVA = "0xF484E0", Offset = "0xF484E0", VA = "0xF484E0")]
		public static Bounds CollectMyBounds(this GameObject go, BoundsType factorIn, [Out] int numOfBoundsFound, bool includeChildren = true, bool includeInactive = false)
		{
			return default(Bounds);
		}

		[Token(Token = "0x6001438")]
		[Address(RVA = "0xF494C4", Offset = "0xF494C4", VA = "0xF494C4")]
		public static Bounds CollectMyBounds(GameObject go, BoundsType factorIn, bool includeChildren = true)
		{
			return default(Bounds);
		}
	}
}
namespace Photon.Realtime.Demo
{
	[Token(Token = "0x2000275")]
	public class ConnectAndJoinRandomLb : MonoBehaviour, IConnectionCallbacks, IMatchmakingCallbacks, ILobbyCallbacks
	{
		[Token(Token = "0x400134A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AppSettings appSettings;

		[Token(Token = "0x400134B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LoadBalancingClient lbc;

		[Token(Token = "0x400134C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private ConnectionHandler ch;

		[Token(Token = "0x400134D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Text StateUiText;

		[Token(Token = "0x600143A")]
		[Address(RVA = "0xC4EC04", Offset = "0xC4EC04", VA = "0xC4EC04")]
		public void Start()
		{
		}

		[Token(Token = "0x600143B")]
		[Address(RVA = "0xC4EDAC", Offset = "0xC4EDAC", VA = "0xC4EDAC")]
		public void Update()
		{
		}

		[Token(Token = "0x600143C")]
		[Address(RVA = "0xC4EF04", Offset = "0xC4EF04", VA = "0xC4EF04", Slot = "4")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x600143D")]
		[Address(RVA = "0xC4EF08", Offset = "0xC4EF08", VA = "0xC4EF08", Slot = "5")]
		public void OnConnectedToMaster()
		{
		}

		[Token(Token = "0x600143E")]
		[Address(RVA = "0xC4EFA0", Offset = "0xC4EFA0", VA = "0xC4EFA0", Slot = "6")]
		public void OnDisconnected(DisconnectCause cause)
		{
		}

		[Token(Token = "0x600143F")]
		[Address(RVA = "0xC4F0A8", Offset = "0xC4F0A8", VA = "0xC4F0A8", Slot = "8")]
		public void OnCustomAuthenticationResponse(Dictionary<string, object> data)
		{
		}

		[Token(Token = "0x6001440")]
		[Address(RVA = "0xC4F0AC", Offset = "0xC4F0AC", VA = "0xC4F0AC", Slot = "9")]
		public void OnCustomAuthenticationFailed(string debugMessage)
		{
		}

		[Token(Token = "0x6001441")]
		[Address(RVA = "0xC4F0B0", Offset = "0xC4F0B0", VA = "0xC4F0B0", Slot = "7")]
		public void OnRegionListReceived(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x6001442")]
		[Address(RVA = "0xC4F1B0", Offset = "0xC4F1B0", VA = "0xC4F1B0", Slot = "19")]
		public void OnRoomListUpdate(List<RoomInfo> roomList)
		{
		}

		[Token(Token = "0x6001443")]
		[Address(RVA = "0xC4F1B4", Offset = "0xC4F1B4", VA = "0xC4F1B4", Slot = "20")]
		public void OnLobbyStatisticsUpdate(List<TypedLobbyInfo> lobbyStatistics)
		{
		}

		[Token(Token = "0x6001444")]
		[Address(RVA = "0xC4F1B8", Offset = "0xC4F1B8", VA = "0xC4F1B8", Slot = "17")]
		public void OnJoinedLobby()
		{
		}

		[Token(Token = "0x6001445")]
		[Address(RVA = "0xC4F1BC", Offset = "0xC4F1BC", VA = "0xC4F1BC", Slot = "18")]
		public void OnLeftLobby()
		{
		}

		[Token(Token = "0x6001446")]
		[Address(RVA = "0xC4F1C0", Offset = "0xC4F1C0", VA = "0xC4F1C0", Slot = "10")]
		public void OnFriendListUpdate(List<FriendInfo> friendList)
		{
		}

		[Token(Token = "0x6001447")]
		[Address(RVA = "0xC4F1C4", Offset = "0xC4F1C4", VA = "0xC4F1C4", Slot = "11")]
		public void OnCreatedRoom()
		{
		}

		[Token(Token = "0x6001448")]
		[Address(RVA = "0xC4F1C8", Offset = "0xC4F1C8", VA = "0xC4F1C8", Slot = "12")]
		public void OnCreateRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x6001449")]
		[Address(RVA = "0xC4F1CC", Offset = "0xC4F1CC", VA = "0xC4F1CC", Slot = "13")]
		public void OnJoinedRoom()
		{
		}

		[Token(Token = "0x600144A")]
		[Address(RVA = "0xC4F240", Offset = "0xC4F240", VA = "0xC4F240", Slot = "14")]
		public void OnJoinRoomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600144B")]
		[Address(RVA = "0xC4F244", Offset = "0xC4F244", VA = "0xC4F244", Slot = "15")]
		public void OnJoinRandomFailed(short returnCode, string message)
		{
		}

		[Token(Token = "0x600144C")]
		[Address(RVA = "0xC4F308", Offset = "0xC4F308", VA = "0xC4F308", Slot = "16")]
		public void OnLeftRoom()
		{
		}

		[Token(Token = "0x600144D")]
		[Address(RVA = "0xC4F30C", Offset = "0xC4F30C", VA = "0xC4F30C")]
		private void OnRegionPingCompleted(RegionHandler regionHandler)
		{
		}

		[Token(Token = "0x600144E")]
		[Address(RVA = "0xC4F444", Offset = "0xC4F444", VA = "0xC4F444")]
		public ConnectAndJoinRandomLb()
		{
		}
	}
}
namespace Photon.Chat.Demo
{
	[Token(Token = "0x2000276")]
	public static class AppSettingsExtensions
	{
		[Token(Token = "0x600144F")]
		[Address(RVA = "0x1192654", Offset = "0x1192654", VA = "0x1192654")]
		public static ChatAppSettings GetChatSettings(this AppSettings appSettings)
		{
			return null;
		}
	}
	[Token(Token = "0x2000277")]
	public class ChannelSelector : MonoBehaviour, IPointerClickHandler, IEventSystemHandler
	{
		[Token(Token = "0x400134E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string Channel;

		[Token(Token = "0x6001450")]
		[Address(RVA = "0xDC093C", Offset = "0xDC093C", VA = "0xDC093C")]
		public void SetChannel(string channel)
		{
		}

		[Token(Token = "0x6001451")]
		[Address(RVA = "0xDC09C4", Offset = "0xDC09C4", VA = "0xDC09C4", Slot = "4")]
		public void OnPointerClick(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001452")]
		[Address(RVA = "0xDC0A54", Offset = "0xDC0A54", VA = "0xDC0A54")]
		public ChannelSelector()
		{
		}
	}
	[Token(Token = "0x2000278")]
	[ExecuteInEditMode]
	public class ChatAppIdCheckerUI : MonoBehaviour
	{
		[Token(Token = "0x400134F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text Description;

		[Token(Token = "0x6001453")]
		[Address(RVA = "0xC446D0", Offset = "0xC446D0", VA = "0xC446D0")]
		public void Update()
		{
		}

		[Token(Token = "0x6001454")]
		[Address(RVA = "0xC44840", Offset = "0xC44840", VA = "0xC44840")]
		public ChatAppIdCheckerUI()
		{
		}
	}
	[Token(Token = "0x2000279")]
	public class ChatGui : MonoBehaviour, IChatClientListener
	{
		[Token(Token = "0x4001350")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string[] ChannelsToJoinOnConnect;

		[Token(Token = "0x4001351")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string[] FriendsList;

		[Token(Token = "0x4001352")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int HistoryLengthToFetch;

		[Token(Token = "0x4001353")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x852788", Offset = "0x852788")]
		private string <UserName>k__BackingField;

		[Token(Token = "0x4001354")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private string selectedChannelName;

		[Token(Token = "0x4001355")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public ChatClient chatClient;

		[Token(Token = "0x4001356")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected internal ChatAppSettings chatAppSettings;

		[Token(Token = "0x4001357")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject missingAppIdErrorPanel;

		[Token(Token = "0x4001358")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject ConnectingLabel;

		[Token(Token = "0x4001359")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public RectTransform ChatPanel;

		[Token(Token = "0x400135A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public GameObject UserIdFormPanel;

		[Token(Token = "0x400135B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public InputField InputFieldChat;

		[Token(Token = "0x400135C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Text CurrentChannelText;

		[Token(Token = "0x400135D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public Toggle ChannelToggleToInstantiate;

		[Token(Token = "0x400135E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public GameObject FriendListUiItemtoInstantiate;

		[Token(Token = "0x400135F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private readonly Dictionary<string, Toggle> channelToggles;

		[Token(Token = "0x4001360")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private readonly Dictionary<string, FriendItem> friendListItemLUT;

		[Token(Token = "0x4001361")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool ShowState;

		[Token(Token = "0x4001362")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public GameObject Title;

		[Token(Token = "0x4001363")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public Text StateText;

		[Token(Token = "0x4001364")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public Text UserIdText;

		[Token(Token = "0x4001365")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string HelpText;

		[Token(Token = "0x4001366")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public int TestLength;

		[Token(Token = "0x4001367")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private byte[] testBytes;

		[Token(Token = "0x1700013F")]
		public string UserName
		{
			[Token(Token = "0x6001455")]
			[Address(RVA = "0xC44848", Offset = "0xC44848", VA = "0xC44848")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A8D4", Offset = "0x85A8D4")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001456")]
			[Address(RVA = "0xC44850", Offset = "0xC44850", VA = "0xC44850")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A8E4", Offset = "0x85A8E4")]
			set
			{
			}
		}

		[Token(Token = "0x6001457")]
		[Address(RVA = "0xC44858", Offset = "0xC44858", VA = "0xC44858")]
		public void Start()
		{
		}

		[Token(Token = "0x6001458")]
		[Address(RVA = "0xC44B44", Offset = "0xC44B44", VA = "0xC44B44")]
		public void Connect()
		{
		}

		[Token(Token = "0x6001459")]
		[Address(RVA = "0xC44CEC", Offset = "0xC44CEC", VA = "0xC44CEC")]
		public void OnDestroy()
		{
		}

		[Token(Token = "0x600145A")]
		[Address(RVA = "0xC44D04", Offset = "0xC44D04", VA = "0xC44D04")]
		public void OnApplicationQuit()
		{
		}

		[Token(Token = "0x600145B")]
		[Address(RVA = "0xC44D1C", Offset = "0xC44D1C", VA = "0xC44D1C")]
		public void Update()
		{
		}

		[Token(Token = "0x600145C")]
		[Address(RVA = "0xC44E0C", Offset = "0xC44E0C", VA = "0xC44E0C")]
		public void OnEnterSend()
		{
		}

		[Token(Token = "0x600145D")]
		[Address(RVA = "0xC45888", Offset = "0xC45888", VA = "0xC45888")]
		public void OnClickSend()
		{
		}

		[Token(Token = "0x600145E")]
		[Address(RVA = "0xC44EA4", Offset = "0xC44EA4", VA = "0xC44EA4")]
		private void SendChatMessage(string inputLine)
		{
		}

		[Token(Token = "0x600145F")]
		[Address(RVA = "0xC45950", Offset = "0xC45950", VA = "0xC45950")]
		public void PostHelpToCurrentChannel()
		{
		}

		[Token(Token = "0x6001460")]
		[Address(RVA = "0xC45C8C", Offset = "0xC45C8C", VA = "0xC45C8C", Slot = "4")]
		public void DebugReturn(DebugLevel level, string message)
		{
		}

		[Token(Token = "0x6001461")]
		[Address(RVA = "0xC45D68", Offset = "0xC45D68", VA = "0xC45D68", Slot = "6")]
		public void OnConnected()
		{
		}

		[Token(Token = "0x6001462")]
		[Address(RVA = "0xC460C4", Offset = "0xC460C4", VA = "0xC460C4", Slot = "5")]
		public void OnDisconnected()
		{
		}

		[Token(Token = "0x6001463")]
		[Address(RVA = "0xC460E8", Offset = "0xC460E8", VA = "0xC460E8", Slot = "7")]
		public void OnChatStateChange(ChatState state)
		{
		}

		[Token(Token = "0x6001464")]
		[Address(RVA = "0xC46190", Offset = "0xC46190", VA = "0xC46190", Slot = "10")]
		public void OnSubscribed(string[] channels, bool[] results)
		{
		}

		[Token(Token = "0x6001465")]
		[Address(RVA = "0xC46514", Offset = "0xC46514", VA = "0xC46514")]
		public void OnSubscribed(string channel, string[] users, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x6001466")]
		[Address(RVA = "0xC46340", Offset = "0xC46340", VA = "0xC46340")]
		private void InstantiateChannelButton(string channelName)
		{
		}

		[Token(Token = "0x6001467")]
		[Address(RVA = "0xC45F70", Offset = "0xC45F70", VA = "0xC45F70")]
		private void InstantiateFriendButton(string friendId)
		{
		}

		[Token(Token = "0x6001468")]
		[Address(RVA = "0xC466F0", Offset = "0xC466F0", VA = "0xC466F0", Slot = "11")]
		public void OnUnsubscribed(string[] channels)
		{
		}

		[Token(Token = "0x6001469")]
		[Address(RVA = "0xC46B58", Offset = "0xC46B58", VA = "0xC46B58", Slot = "8")]
		public void OnGetMessages(string channelName, string[] senders, object[] messages)
		{
		}

		[Token(Token = "0x600146A")]
		[Address(RVA = "0xC46BA8", Offset = "0xC46BA8", VA = "0xC46BA8", Slot = "9")]
		public void OnPrivateMessage(string sender, object message, string channelName)
		{
		}

		[Token(Token = "0x600146B")]
		[Address(RVA = "0xC46CC8", Offset = "0xC46CC8", VA = "0xC46CC8", Slot = "12")]
		public void OnStatusUpdate(string user, int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x600146C")]
		[Address(RVA = "0xC46EA8", Offset = "0xC46EA8", VA = "0xC46EA8", Slot = "13")]
		public void OnUserSubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x600146D")]
		[Address(RVA = "0xC46FD4", Offset = "0xC46FD4", VA = "0xC46FD4", Slot = "14")]
		public void OnUserUnsubscribed(string channel, string user)
		{
		}

		[Token(Token = "0x600146E")]
		[Address(RVA = "0xC47100", Offset = "0xC47100", VA = "0xC47100")]
		public void OnChannelPropertiesChanged(string channel, string userId, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x600146F")]
		[Address(RVA = "0xC472A8", Offset = "0xC472A8", VA = "0xC472A8")]
		public void OnUserPropertiesChanged(string channel, string targetUserId, string senderUserId, Dictionary<object, object> properties)
		{
		}

		[Token(Token = "0x6001470")]
		[Address(RVA = "0xC47488", Offset = "0xC47488", VA = "0xC47488")]
		public void OnErrorInfo(string channel, string error, object data)
		{
		}

		[Token(Token = "0x6001471")]
		[Address(RVA = "0xC475F4", Offset = "0xC475F4", VA = "0xC475F4")]
		public void AddMessageToSelectedChannel(string msg)
		{
		}

		[Token(Token = "0x6001472")]
		[Address(RVA = "0xC45A08", Offset = "0xC45A08", VA = "0xC45A08")]
		public void ShowChannel(string channelName)
		{
		}

		[Token(Token = "0x6001473")]
		[Address(RVA = "0xC476EC", Offset = "0xC476EC", VA = "0xC476EC")]
		public void OpenDashboard()
		{
		}

		[Token(Token = "0x6001474")]
		[Address(RVA = "0xC47734", Offset = "0xC47734", VA = "0xC47734")]
		public ChatGui()
		{
		}
	}
	[Token(Token = "0x200027A")]
	public class FriendItem : MonoBehaviour
	{
		[Token(Token = "0x4001368")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text NameLabel;

		[Token(Token = "0x4001369")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text StatusLabel;

		[Token(Token = "0x400136A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Text Health;

		[Token(Token = "0x17000140")]
		[HideInInspector]
		public string FriendId
		{
			[Token(Token = "0x6001477")]
			[Address(RVA = "0xBA1D24", Offset = "0xBA1D24", VA = "0xBA1D24")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001476")]
			[Address(RVA = "0xBA1CFC", Offset = "0xBA1CFC", VA = "0xBA1CFC")]
			set
			{
			}
		}

		[Token(Token = "0x6001478")]
		[Address(RVA = "0xBA1D4C", Offset = "0xBA1D4C", VA = "0xBA1D4C")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001479")]
		[Address(RVA = "0xBA1DB4", Offset = "0xBA1DB4", VA = "0xBA1DB4")]
		public void OnFriendStatusUpdate(int status, bool gotMessage, object message)
		{
		}

		[Token(Token = "0x600147A")]
		[Address(RVA = "0xBA1F44", Offset = "0xBA1F44", VA = "0xBA1F44")]
		public FriendItem()
		{
		}
	}
	[Token(Token = "0x200027B")]
	public class IgnoreUiRaycastWhenInactive : MonoBehaviour, ICanvasRaycastFilter
	{
		[Token(Token = "0x600147B")]
		[Address(RVA = "0xBACCA4", Offset = "0xBACCA4", VA = "0xBACCA4", Slot = "4")]
		public bool IsRaycastLocationValid(Vector2 screenPoint, Camera eventCamera)
		{
			return default(bool);
		}

		[Token(Token = "0x600147C")]
		[Address(RVA = "0xBACCC8", Offset = "0xBACCC8", VA = "0xBACCC8")]
		public IgnoreUiRaycastWhenInactive()
		{
		}
	}
	[Token(Token = "0x200027C")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x848EA0", Offset = "0x848EA0")]
	public class NamePickGui : MonoBehaviour
	{
		[Token(Token = "0x400136B")]
		private const string UserNamePlayerPref = "NamePickUserName";

		[Token(Token = "0x400136C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ChatGui chatNewComponent;

		[Token(Token = "0x400136D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InputField idInput;

		[Token(Token = "0x600147D")]
		[Address(RVA = "0x1563BE8", Offset = "0x1563BE8", VA = "0x1563BE8")]
		public void Start()
		{
		}

		[Token(Token = "0x600147E")]
		[Address(RVA = "0x1563CCC", Offset = "0x1563CCC", VA = "0x1563CCC")]
		public void EndEditOnEnter()
		{
		}

		[Token(Token = "0x600147F")]
		[Address(RVA = "0x1563D18", Offset = "0x1563D18", VA = "0x1563D18")]
		public void StartChat()
		{
		}

		[Token(Token = "0x6001480")]
		[Address(RVA = "0x1563E0C", Offset = "0x1563E0C", VA = "0x1563E0C")]
		public NamePickGui()
		{
		}
	}
}
namespace Photon.Chat.UtilityScripts
{
	[Token(Token = "0x200027D")]
	public class EventSystemSpawner : MonoBehaviour
	{
		[Token(Token = "0x6001481")]
		[Address(RVA = "0xB9BAB8", Offset = "0xB9BAB8", VA = "0xB9BAB8")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001482")]
		[Address(RVA = "0xB9BBCC", Offset = "0xB9BBCC", VA = "0xB9BBCC")]
		public EventSystemSpawner()
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class OnStartDelete : MonoBehaviour
	{
		[Token(Token = "0x6001483")]
		[Address(RVA = "0x1B617BC", Offset = "0x1B617BC", VA = "0x1B617BC")]
		private void Start()
		{
		}

		[Token(Token = "0x6001484")]
		[Address(RVA = "0x1B6183C", Offset = "0x1B6183C", VA = "0x1B6183C")]
		public OnStartDelete()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x848F08", Offset = "0x848F08")]
	public class TextButtonTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x400136E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Text _text;

		[Token(Token = "0x400136F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Selectable Selectable;

		[Token(Token = "0x4001370")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalColor;

		[Token(Token = "0x4001371")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color HoverColor;

		[Token(Token = "0x6001485")]
		[Address(RVA = "0x1060EE8", Offset = "0x1060EE8", VA = "0x1060EE8")]
		public void Awake()
		{
		}

		[Token(Token = "0x6001486")]
		[Address(RVA = "0x1060F4C", Offset = "0x1060F4C", VA = "0x1060F4C")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x6001487")]
		[Address(RVA = "0x1060F80", Offset = "0x1060F80", VA = "0x1060F80")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x6001488")]
		[Address(RVA = "0x1060FB4", Offset = "0x1060FB4", VA = "0x1060FB4", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001489")]
		[Address(RVA = "0x106107C", Offset = "0x106107C", VA = "0x106107C", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600148A")]
		[Address(RVA = "0x1061144", Offset = "0x1061144", VA = "0x1061144")]
		public TextButtonTransition()
		{
		}
	}
	[Token(Token = "0x2000280")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x848F70", Offset = "0x848F70")]
	public class TextToggleIsOnTransition : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4001372")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Toggle toggle;

		[Token(Token = "0x4001373")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Text _text;

		[Token(Token = "0x4001374")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color NormalOnColor;

		[Token(Token = "0x4001375")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color NormalOffColor;

		[Token(Token = "0x4001376")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color HoverOnColor;

		[Token(Token = "0x4001377")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Color HoverOffColor;

		[Token(Token = "0x4001378")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool isHover;

		[Token(Token = "0x600148B")]
		[Address(RVA = "0x1061188", Offset = "0x1061188", VA = "0x1061188")]
		public void OnEnable()
		{
		}

		[Token(Token = "0x600148C")]
		[Address(RVA = "0x10612FC", Offset = "0x10612FC", VA = "0x10612FC")]
		public void OnDisable()
		{
		}

		[Token(Token = "0x600148D")]
		[Address(RVA = "0x1061294", Offset = "0x1061294", VA = "0x1061294")]
		public void OnValueChanged(bool isOn)
		{
		}

		[Token(Token = "0x600148E")]
		[Address(RVA = "0x10613C0", Offset = "0x10613C0", VA = "0x10613C0", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600148F")]
		[Address(RVA = "0x1061438", Offset = "0x1061438", VA = "0x1061438", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6001490")]
		[Address(RVA = "0x10614AC", Offset = "0x10614AC", VA = "0x10614AC")]
		public TextToggleIsOnTransition()
		{
		}
	}
}
namespace OculusSampleFramework
{
	[Token(Token = "0x2000281")]
	public class ColorGrabbable : OVRGrabbable
	{
		[Token(Token = "0x4001379")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color COLOR_GRAB;

		[Token(Token = "0x400137A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static readonly Color COLOR_HIGHLIGHT;

		[Token(Token = "0x400137B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Color m_color;

		[Token(Token = "0x400137C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private MeshRenderer[] m_meshRenderers;

		[Token(Token = "0x400137D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_highlight;

		[Token(Token = "0x17000141")]
		public bool Highlight
		{
			[Token(Token = "0x6001491")]
			[Address(RVA = "0xC47A08", Offset = "0xC47A08", VA = "0xC47A08")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001492")]
			[Address(RVA = "0xC47A10", Offset = "0xC47A10", VA = "0xC47A10")]
			set
			{
			}
		}

		[Token(Token = "0x6001493")]
		[Address(RVA = "0xC47A1C", Offset = "0xC47A1C", VA = "0xC47A1C")]
		protected void UpdateColor()
		{
		}

		[Token(Token = "0x6001494")]
		[Address(RVA = "0xC47BDC", Offset = "0xC47BDC", VA = "0xC47BDC", Slot = "4")]
		public override void GrabBegin(OVRGrabber hand, Collider grabPoint)
		{
		}

		[Token(Token = "0x6001495")]
		[Address(RVA = "0xC47C04", Offset = "0xC47C04", VA = "0xC47C04", Slot = "5")]
		public override void GrabEnd(Vector3 linearVelocity, Vector3 angularVelocity)
		{
		}

		[Token(Token = "0x6001496")]
		[Address(RVA = "0xC47C2C", Offset = "0xC47C2C", VA = "0xC47C2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001497")]
		[Address(RVA = "0xC47ADC", Offset = "0xC47ADC", VA = "0xC47ADC")]
		private void SetColor(Color color)
		{
		}

		[Token(Token = "0x6001498")]
		[Address(RVA = "0xC47F08", Offset = "0xC47F08", VA = "0xC47F08")]
		public ColorGrabbable()
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class DistanceGrabbable : OVRGrabbable
	{
		[Token(Token = "0x400137E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public string m_materialColorField;

		[Token(Token = "0x400137F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private GrabbableCrosshair m_crosshair;

		[Token(Token = "0x4001380")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private GrabManager m_crosshairManager;

		[Token(Token = "0x4001381")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer m_renderer;

		[Token(Token = "0x4001382")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private MaterialPropertyBlock m_mpb;

		[Token(Token = "0x4001383")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private bool m_inRange;

		[Token(Token = "0x4001384")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
		private bool m_targeted;

		[Token(Token = "0x17000142")]
		public bool InRange
		{
			[Token(Token = "0x600149A")]
			[Address(RVA = "0xBFEB64", Offset = "0xBFEB64", VA = "0xBFEB64")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600149B")]
			[Address(RVA = "0xBFEB6C", Offset = "0xBFEB6C", VA = "0xBFEB6C")]
			set
			{
			}
		}

		[Token(Token = "0x17000143")]
		public bool Targeted
		{
			[Token(Token = "0x600149C")]
			[Address(RVA = "0xBFECF4", Offset = "0xBFECF4", VA = "0xBFECF4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600149D")]
			[Address(RVA = "0xBFECFC", Offset = "0xBFECFC", VA = "0xBFECFC")]
			set
			{
			}
		}

		[Token(Token = "0x600149E")]
		[Address(RVA = "0xBFED08", Offset = "0xBFED08", VA = "0xBFED08", Slot = "6")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600149F")]
		[Address(RVA = "0xBFEB78", Offset = "0xBFEB78", VA = "0xBFEB78")]
		private void RefreshCrosshair()
		{
		}

		[Token(Token = "0x60014A0")]
		[Address(RVA = "0xBFEE74", Offset = "0xBFEE74", VA = "0xBFEE74")]
		public DistanceGrabbable()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x848FD8", Offset = "0x848FD8")]
	public class DistanceGrabber : OVRGrabber
	{
		[Token(Token = "0x4001385")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		[SerializeField]
		private float m_spherecastRadius;

		[Token(Token = "0x4001386")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private float m_noSnapThreshhold;

		[Token(Token = "0x4001387")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		[SerializeField]
		private bool m_useSpherecast;

		[Token(Token = "0x4001388")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCD")]
		[SerializeField]
		public bool m_preventGrabThroughWalls;

		[Token(Token = "0x4001389")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private float m_objectPullVelocity;

		[Token(Token = "0x400138A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float m_objectPullMaxRotationRate;

		[Token(Token = "0x400138B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool m_movingObjectToHand;

		[Token(Token = "0x400138C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		[SerializeField]
		private float m_maxGrabDistance;

		[Token(Token = "0x400138D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		[SerializeField]
		private int m_grabObjectsInLayer;

		[Token(Token = "0x400138E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		[SerializeField]
		private int m_obstructionLayer;

		[Token(Token = "0x400138F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private DistanceGrabber m_otherHand;

		[Token(Token = "0x4001390")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		protected DistanceGrabbable m_target;

		[Token(Token = "0x4001391")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		protected Collider m_targetCollider;

		[Token(Token = "0x17000144")]
		public bool UseSpherecast
		{
			[Token(Token = "0x60014A1")]
			[Address(RVA = "0xBFEE7C", Offset = "0xBFEE7C", VA = "0xBFEE7C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60014A2")]
			[Address(RVA = "0xBFEE84", Offset = "0xBFEE84", VA = "0xBFEE84")]
			set
			{
			}
		}

		[Token(Token = "0x60014A3")]
		[Address(RVA = "0xBFEEA0", Offset = "0xBFEEA0", VA = "0xBFEEA0", Slot = "5")]
		protected override void Start()
		{
		}

		[Token(Token = "0x60014A4")]
		[Address(RVA = "0xBFF0E0", Offset = "0xBFF0E0", VA = "0xBFF0E0", Slot = "6")]
		public override void Update()
		{
		}

		[Token(Token = "0x60014A5")]
		[Address(RVA = "0xBFFA04", Offset = "0xBFFA04", VA = "0xBFFA04", Slot = "7")]
		protected override void GrabBegin()
		{
		}

		[Token(Token = "0x60014A6")]
		[Address(RVA = "0xBFFE98", Offset = "0xBFFE98", VA = "0xBFFE98", Slot = "8")]
		protected override void MoveGrabbedObject(Vector3 pos, Quaternion rot, bool forceTeleport = false)
		{
		}

		[Token(Token = "0x60014A7")]
		[Address(RVA = "0xC0015C", Offset = "0xC0015C", VA = "0xC0015C")]
		private static DistanceGrabbable HitInfoToGrabbable(RaycastHit hitInfo)
		{
			return null;
		}

		[Token(Token = "0x60014A8")]
		[Address(RVA = "0xBFF354", Offset = "0xBFF354", VA = "0xBFF354")]
		protected bool FindTarget([Out] DistanceGrabbable dgOut, [Out] Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60014A9")]
		[Address(RVA = "0xC00260", Offset = "0xC00260", VA = "0xC00260")]
		protected bool FindTargetWithSpherecast([Out] DistanceGrabbable dgOut, [Out] Collider collOut)
		{
			return default(bool);
		}

		[Token(Token = "0x60014AA")]
		[Address(RVA = "0xC006A4", Offset = "0xC006A4", VA = "0xC006A4", Slot = "9")]
		protected override void GrabVolumeEnable(bool enabled)
		{
		}

		[Token(Token = "0x60014AB")]
		[Address(RVA = "0xC006BC", Offset = "0xC006BC", VA = "0xC006BC", Slot = "10")]
		protected override void OffhandGrabbed(OVRGrabbable grabbable)
		{
		}

		[Token(Token = "0x60014AC")]
		[Address(RVA = "0xC006C4", Offset = "0xC006C4", VA = "0xC006C4")]
		public DistanceGrabber()
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class GrabbableCrosshair : MonoBehaviour
	{
		[Token(Token = "0x20004E1")]
		public enum CrosshairState
		{
			[Token(Token = "0x40023CC")]
			Disabled,
			[Token(Token = "0x40023CD")]
			Enabled,
			[Token(Token = "0x40023CE")]
			Targeted
		}

		[Token(Token = "0x4001392")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CrosshairState m_state;

		[Token(Token = "0x4001393")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Transform m_centerEyeAnchor;

		[Token(Token = "0x4001394")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject m_targetedCrosshair;

		[Token(Token = "0x4001395")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private GameObject m_enabledCrosshair;

		[Token(Token = "0x60014AD")]
		[Address(RVA = "0xBA3070", Offset = "0xBA3070", VA = "0xBA3070")]
		private void Start()
		{
		}

		[Token(Token = "0x60014AE")]
		[Address(RVA = "0xBA30E4", Offset = "0xBA30E4", VA = "0xBA30E4")]
		public void SetState(CrosshairState cs)
		{
		}

		[Token(Token = "0x60014AF")]
		[Address(RVA = "0xBA3180", Offset = "0xBA3180", VA = "0xBA3180")]
		private void Update()
		{
		}

		[Token(Token = "0x60014B0")]
		[Address(RVA = "0xBA31C8", Offset = "0xBA31C8", VA = "0xBA31C8")]
		public GrabbableCrosshair()
		{
		}
	}
	[Token(Token = "0x2000285")]
	public class GrabManager : MonoBehaviour
	{
		[Token(Token = "0x4001396")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Collider m_grabVolume;

		[Token(Token = "0x4001397")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Color OutlineColorInRange;

		[Token(Token = "0x4001398")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Color OutlineColorHighlighted;

		[Token(Token = "0x4001399")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Color OutlineColorOutOfRange;

		[Token(Token = "0x60014B1")]
		[Address(RVA = "0xBA2EF8", Offset = "0xBA2EF8", VA = "0xBA2EF8")]
		private void OnTriggerEnter(Collider otherCollider)
		{
		}

		[Token(Token = "0x60014B2")]
		[Address(RVA = "0xBA2FB0", Offset = "0xBA2FB0", VA = "0xBA2FB0")]
		private void OnTriggerExit(Collider otherCollider)
		{
		}

		[Token(Token = "0x60014B3")]
		[Address(RVA = "0xBA3068", Offset = "0xBA3068", VA = "0xBA3068")]
		public GrabManager()
		{
		}
	}
	[Token(Token = "0x2000286")]
	public class PauseOnInputLoss : MonoBehaviour
	{
		[Token(Token = "0x60014B4")]
		[Address(RVA = "0x1B66BE0", Offset = "0x1B66BE0", VA = "0x1B66BE0")]
		private void Start()
		{
		}

		[Token(Token = "0x60014B5")]
		[Address(RVA = "0x1B66CD4", Offset = "0x1B66CD4", VA = "0x1B66CD4")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x60014B6")]
		[Address(RVA = "0x1B66CE0", Offset = "0x1B66CE0", VA = "0x1B66CE0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x60014B7")]
		[Address(RVA = "0x1B66CEC", Offset = "0x1B66CEC", VA = "0x1B66CEC")]
		public PauseOnInputLoss()
		{
		}
	}
	[Token(Token = "0x2000287")]
	public class BoneCapsuleTriggerLogic : MonoBehaviour
	{
		[Token(Token = "0x400139A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableToolTags ToolTags;

		[Token(Token = "0x400139B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HashSet<ColliderZone> CollidersTouchingUs;

		[Token(Token = "0x400139C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<ColliderZone> _elementsToCleanUp;

		[Token(Token = "0x60014B8")]
		[Address(RVA = "0xF468CC", Offset = "0xF468CC", VA = "0xF468CC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60014B9")]
		[Address(RVA = "0xF46920", Offset = "0xF46920", VA = "0xF46920")]
		private void Update()
		{
		}

		[Token(Token = "0x60014BA")]
		[Address(RVA = "0xF46C7C", Offset = "0xF46C7C", VA = "0xF46C7C")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x60014BB")]
		[Address(RVA = "0xF46D80", Offset = "0xF46D80", VA = "0xF46D80")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x60014BC")]
		[Address(RVA = "0xF46924", Offset = "0xF46924", VA = "0xF46924")]
		private void CleanUpDeadColliders()
		{
		}

		[Token(Token = "0x60014BD")]
		[Address(RVA = "0xF46E84", Offset = "0xF46E84", VA = "0xF46E84")]
		public BoneCapsuleTriggerLogic()
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class ButtonController : Interactable
	{
		[Token(Token = "0x20004E2")]
		public enum ContactTest
		{
			[Token(Token = "0x40023D0")]
			PerpenTest,
			[Token(Token = "0x40023D1")]
			BackwardsPress
		}

		[Token(Token = "0x400139D")]
		private const float ENTRY_DOT_THRESHOLD = 0.8f;

		[Token(Token = "0x400139E")]
		private const float PERP_DOT_THRESHOLD = 0.5f;

		[Token(Token = "0x400139F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private GameObject _proximityZone;

		[Token(Token = "0x40013A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _contactZone;

		[Token(Token = "0x40013A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _actionZone;

		[Token(Token = "0x40013A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ContactTest[] _contactTests;

		[Token(Token = "0x40013A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Transform _buttonPlaneCenter;

		[Token(Token = "0x40013A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _makeSureToolIsOnPositiveSide;

		[Token(Token = "0x40013A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 _localButtonDirection;

		[Token(Token = "0x40013A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private InteractableToolTags[] _allValidToolsTags;

		[Token(Token = "0x40013A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _toolTagsMask;

		[Token(Token = "0x40013A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private InteractableState _currentButtonState;

		[Token(Token = "0x40013A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Dictionary<InteractableTool, InteractableState> _toolToState;

		[Token(Token = "0x17000145")]
		public override int ValidToolTagsMask
		{
			[Token(Token = "0x60014BE")]
			[Address(RVA = "0xF497B0", Offset = "0xF497B0", VA = "0xF497B0", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000146")]
		public Vector3 LocalButtonDirection
		{
			[Token(Token = "0x60014BF")]
			[Address(RVA = "0xF497B8", Offset = "0xF497B8", VA = "0xF497B8")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x60014C0")]
		[Address(RVA = "0xF497C4", Offset = "0xF497C4", VA = "0xF497C4", Slot = "9")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60014C1")]
		[Address(RVA = "0xF498D8", Offset = "0xF498D8", VA = "0xF498D8")]
		private void FireInteractionEventsOnDepth(InteractableCollisionDepth oldDepth, InteractableTool collidingTool, InteractionType interactionType)
		{
		}

		[Token(Token = "0x60014C2")]
		[Address(RVA = "0xF49A34", Offset = "0xF49A34", VA = "0xF49A34", Slot = "8")]
		public override void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth)
		{
		}

		[Token(Token = "0x60014C3")]
		[Address(RVA = "0xF49FC4", Offset = "0xF49FC4", VA = "0xF49FC4")]
		private InteractableState GetUpcomingStateNearField(InteractableState oldState, InteractableCollisionDepth newCollisionDepth, bool toolIsInActionZone, bool toolIsInContactZone, bool toolIsInProximity, bool validContact, bool onPositiveSideOfInteractable)
		{
			return default(InteractableState);
		}

		[Token(Token = "0x60014C4")]
		[Address(RVA = "0xF49EDC", Offset = "0xF49EDC", VA = "0xF49EDC")]
		private bool IsValidContact(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C5")]
		[Address(RVA = "0xF4A074", Offset = "0xF4A074", VA = "0xF4A074")]
		private bool PassEntryTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C6")]
		[Address(RVA = "0xF4A0F8", Offset = "0xF4A0F8", VA = "0xF4A0F8")]
		private bool PassPerpTest(InteractableTool collidingTool, Vector3 buttonDirection)
		{
			return default(bool);
		}

		[Token(Token = "0x60014C7")]
		[Address(RVA = "0xF4A184", Offset = "0xF4A184", VA = "0xF4A184")]
		public ButtonController()
		{
		}
	}
	[Token(Token = "0x2000289")]
	public class ButtonTriggerZone : MonoBehaviour, ColliderZone
	{
		[Token(Token = "0x40013AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _parentInteractableObj;

		[Token(Token = "0x40013AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8528C8", Offset = "0x8528C8")]
		private Collider <Collider>k__BackingField;

		[Token(Token = "0x40013AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8528D8", Offset = "0x8528D8")]
		private Interactable <ParentInteractable>k__BackingField;

		[Token(Token = "0x17000147")]
		public Collider Collider
		{
			[Token(Token = "0x60014C8")]
			[Address(RVA = "0xF4A3D8", Offset = "0xF4A3D8", VA = "0xF4A3D8", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A8F4", Offset = "0x85A8F4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014C9")]
			[Address(RVA = "0xF4A3E0", Offset = "0xF4A3E0", VA = "0xF4A3E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A904", Offset = "0x85A904")]
			private set
			{
			}
		}

		[Token(Token = "0x17000148")]
		public Interactable ParentInteractable
		{
			[Token(Token = "0x60014CA")]
			[Address(RVA = "0xF4A3E8", Offset = "0xF4A3E8", VA = "0xF4A3E8", Slot = "5")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A914", Offset = "0x85A914")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014CB")]
			[Address(RVA = "0xF4A3F0", Offset = "0xF4A3F0", VA = "0xF4A3F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A924", Offset = "0x85A924")]
			private set
			{
			}
		}

		[Token(Token = "0x17000149")]
		public InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60014CC")]
			[Address(RVA = "0xF4A3F8", Offset = "0xF4A3F8", VA = "0xF4A3F8", Slot = "6")]
			get
			{
				return default(InteractableCollisionDepth);
			}
		}

		[Token(Token = "0x60014CD")]
		[Address(RVA = "0xF4A44C", Offset = "0xF4A44C", VA = "0xF4A44C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014CE")]
		[Address(RVA = "0xF4A4EC", Offset = "0xF4A4EC", VA = "0xF4A4EC")]
		public ButtonTriggerZone()
		{
		}
	}
	[Token(Token = "0x200028A")]
	public interface ColliderZone
	{
		[Token(Token = "0x1700014A")]
		Collider Collider
		{
			[Token(Token = "0x60014CF")]
			get;
		}

		[Token(Token = "0x1700014B")]
		Interactable ParentInteractable
		{
			[Token(Token = "0x60014D0")]
			get;
		}

		[Token(Token = "0x1700014C")]
		InteractableCollisionDepth CollisionDepth
		{
			[Token(Token = "0x60014D1")]
			get;
		}
	}
	[Token(Token = "0x200028B")]
	public class ColliderZoneArgs : EventArgs
	{
		[Token(Token = "0x40013AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly ColliderZone Collider;

		[Token(Token = "0x40013AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly float FrameTime;

		[Token(Token = "0x40013AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableTool CollidingTool;

		[Token(Token = "0x40013B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly InteractionType InteractionT;

		[Token(Token = "0x60014D2")]
		[Address(RVA = "0xC47950", Offset = "0xC47950", VA = "0xC47950")]
		public ColliderZoneArgs(ColliderZone collider, float frameTime, InteractableTool collidingTool, InteractionType interactionType)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public enum InteractionType
	{
		[Token(Token = "0x40013B2")]
		Enter,
		[Token(Token = "0x40013B3")]
		Stay,
		[Token(Token = "0x40013B4")]
		Exit
	}
	[Token(Token = "0x200028D")]
	public class HandsManager : MonoBehaviour
	{
		[Token(Token = "0x20004E3")]
		public enum HandsVisualMode
		{
			[Token(Token = "0x40023D3")]
			Mesh,
			[Token(Token = "0x40023D4")]
			Skeleton,
			[Token(Token = "0x40023D5")]
			Both
		}

		[Token(Token = "0x20004E4")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849D84", Offset = "0x849D84")]
		private sealed class <FindSkeletonVisualGameObjects>d__52 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HandsManager <>4__this;

			[Token(Token = "0x17000301")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E8B")]
				[Address(RVA = "0x19B11F0", Offset = "0x19B11F0", VA = "0x19B11F0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000302")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E8D")]
				[Address(RVA = "0x19B1238", Offset = "0x19B1238", VA = "0x19B1238", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E88")]
			[Address(RVA = "0x19B0F64", Offset = "0x19B0F64", VA = "0x19B0F64")]
			[DebuggerHidden]
			public <FindSkeletonVisualGameObjects>d__52(int <>1__state)
			{
			}

			[Token(Token = "0x6001E89")]
			[Address(RVA = "0x19B0F90", Offset = "0x19B0F90", VA = "0x19B0F90", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E8A")]
			[Address(RVA = "0x19B0F94", Offset = "0x19B0F94", VA = "0x19B0F94", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E8C")]
			[Address(RVA = "0x19B11F8", Offset = "0x19B11F8", VA = "0x19B11F8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013B5")]
		private const string SKELETON_VISUALIZER_NAME = "SkeletonRenderer";

		[Token(Token = "0x40013B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _leftHand;

		[Token(Token = "0x40013B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private GameObject _rightHand;

		[Token(Token = "0x40013B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public HandsVisualMode VisualMode;

		[Token(Token = "0x40013B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private OVRHand[] _hand;

		[Token(Token = "0x40013BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private OVRSkeleton[] _handSkeleton;

		[Token(Token = "0x40013BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRSkeletonRenderer[] _handSkeletonRenderer;

		[Token(Token = "0x40013BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private OVRMesh[] _handMesh;

		[Token(Token = "0x40013BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private OVRMeshRenderer[] _handMeshRenderer;

		[Token(Token = "0x40013BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private SkinnedMeshRenderer _leftMeshRenderer;

		[Token(Token = "0x40013BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private SkinnedMeshRenderer _rightMeshRenderer;

		[Token(Token = "0x40013C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private GameObject _leftSkeletonVisual;

		[Token(Token = "0x40013C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private GameObject _rightSkeletonVisual;

		[Token(Token = "0x40013C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _currentHandAlpha;

		[Token(Token = "0x40013C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private int HandAlphaId;

		[Token(Token = "0x40013C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x852908", Offset = "0x852908")]
		private static HandsManager <Instance>k__BackingField;

		[Token(Token = "0x1700014D")]
		public OVRHand RightHand
		{
			[Token(Token = "0x60014D3")]
			[Address(RVA = "0xBA03A4", Offset = "0xBA03A4", VA = "0xBA03A4")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D4")]
			[Address(RVA = "0xBA44C0", Offset = "0xBA44C0", VA = "0xBA44C0")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014E")]
		public OVRSkeleton RightHandSkeleton
		{
			[Token(Token = "0x60014D5")]
			[Address(RVA = "0xBA452C", Offset = "0xBA452C", VA = "0xBA452C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D6")]
			[Address(RVA = "0xBA4564", Offset = "0xBA4564", VA = "0xBA4564")]
			private set
			{
			}
		}

		[Token(Token = "0x1700014F")]
		public OVRSkeletonRenderer RightHandSkeletonRenderer
		{
			[Token(Token = "0x60014D7")]
			[Address(RVA = "0xBA45D0", Offset = "0xBA45D0", VA = "0xBA45D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014D8")]
			[Address(RVA = "0xBA4608", Offset = "0xBA4608", VA = "0xBA4608")]
			private set
			{
			}
		}

		[Token(Token = "0x17000150")]
		public OVRMesh RightHandMesh
		{
			[Token(Token = "0x60014D9")]
			[Address(RVA = "0xBA4674", Offset = "0xBA4674", VA = "0xBA4674")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DA")]
			[Address(RVA = "0xBA46AC", Offset = "0xBA46AC", VA = "0xBA46AC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000151")]
		public OVRMeshRenderer RightHandMeshRenderer
		{
			[Token(Token = "0x60014DB")]
			[Address(RVA = "0xBA4718", Offset = "0xBA4718", VA = "0xBA4718")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DC")]
			[Address(RVA = "0xBA4750", Offset = "0xBA4750", VA = "0xBA4750")]
			private set
			{
			}
		}

		[Token(Token = "0x17000152")]
		public OVRHand LeftHand
		{
			[Token(Token = "0x60014DD")]
			[Address(RVA = "0xBA0370", Offset = "0xBA0370", VA = "0xBA0370")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014DE")]
			[Address(RVA = "0xBA47BC", Offset = "0xBA47BC", VA = "0xBA47BC")]
			private set
			{
			}
		}

		[Token(Token = "0x17000153")]
		public OVRSkeleton LeftHandSkeleton
		{
			[Token(Token = "0x60014DF")]
			[Address(RVA = "0xBA4824", Offset = "0xBA4824", VA = "0xBA4824")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E0")]
			[Address(RVA = "0xBA4858", Offset = "0xBA4858", VA = "0xBA4858")]
			private set
			{
			}
		}

		[Token(Token = "0x17000154")]
		public OVRSkeletonRenderer LeftHandSkeletonRenderer
		{
			[Token(Token = "0x60014E1")]
			[Address(RVA = "0xBA48C0", Offset = "0xBA48C0", VA = "0xBA48C0")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E2")]
			[Address(RVA = "0xBA48F4", Offset = "0xBA48F4", VA = "0xBA48F4")]
			private set
			{
			}
		}

		[Token(Token = "0x17000155")]
		public OVRMesh LeftHandMesh
		{
			[Token(Token = "0x60014E3")]
			[Address(RVA = "0xBA495C", Offset = "0xBA495C", VA = "0xBA495C")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E4")]
			[Address(RVA = "0xBA4990", Offset = "0xBA4990", VA = "0xBA4990")]
			private set
			{
			}
		}

		[Token(Token = "0x17000156")]
		public OVRMeshRenderer LeftHandMeshRenderer
		{
			[Token(Token = "0x60014E5")]
			[Address(RVA = "0xBA49F8", Offset = "0xBA49F8", VA = "0xBA49F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E6")]
			[Address(RVA = "0xBA4A2C", Offset = "0xBA4A2C", VA = "0xBA4A2C")]
			private set
			{
			}
		}

		[Token(Token = "0x17000157")]
		public static HandsManager Instance
		{
			[Token(Token = "0x60014E7")]
			[Address(RVA = "0xBA4A94", Offset = "0xBA4A94", VA = "0xBA4A94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A934", Offset = "0x85A934")]
			get
			{
				return null;
			}
			[Token(Token = "0x60014E8")]
			[Address(RVA = "0xBA4AE0", Offset = "0xBA4AE0", VA = "0xBA4AE0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A944", Offset = "0x85A944")]
			private set
			{
			}
		}

		[Token(Token = "0x60014E9")]
		[Address(RVA = "0xBA4B3C", Offset = "0xBA4B3C", VA = "0xBA4B3C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60014EA")]
		[Address(RVA = "0xBA4F18", Offset = "0xBA4F18", VA = "0xBA4F18")]
		private void Update()
		{
		}

		[Token(Token = "0x60014EB")]
		[Address(RVA = "0xBA4E98", Offset = "0xBA4E98", VA = "0xBA4E98")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85A954", Offset = "0x85A954")]
		private IEnumerator FindSkeletonVisualGameObjects()
		{
			return null;
		}

		[Token(Token = "0x60014EC")]
		[Address(RVA = "0xBA4FA0", Offset = "0xBA4FA0", VA = "0xBA4FA0")]
		public void SwitchVisualization()
		{
		}

		[Token(Token = "0x60014ED")]
		[Address(RVA = "0xBA5084", Offset = "0xBA5084", VA = "0xBA5084")]
		private void SetToCurrentVisualMode()
		{
		}

		[Token(Token = "0x60014EE")]
		[Address(RVA = "0xBA5264", Offset = "0xBA5264", VA = "0xBA5264")]
		public static List<OVRBoneCapsule> GetCapsulesPerBone(OVRSkeleton skeleton, OVRSkeleton.BoneId boneId)
		{
			return null;
		}

		[Token(Token = "0x60014EF")]
		[Address(RVA = "0xBA01E4", Offset = "0xBA01E4", VA = "0xBA01E4")]
		public bool IsInitialized()
		{
			return default(bool);
		}

		[Token(Token = "0x60014F0")]
		[Address(RVA = "0xBA5488", Offset = "0xBA5488", VA = "0xBA5488")]
		public HandsManager()
		{
		}
	}
	[Token(Token = "0x200028E")]
	public abstract class Interactable : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004E5")]
		public class InteractableStateArgsEvent : UnityEvent<InteractableStateArgs>
		{
			[Token(Token = "0x6001E8E")]
			[Address(RVA = "0x19D4FF0", Offset = "0x19D4FF0", VA = "0x19D4FF0")]
			public InteractableStateArgsEvent()
			{
			}
		}

		[Token(Token = "0x40013C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected ColliderZone _proximityZoneCollider;

		[Token(Token = "0x40013C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		protected ColliderZone _contactZoneCollider;

		[Token(Token = "0x40013C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		protected ColliderZone _actionZoneCollider;

		[Token(Token = "0x40013CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public InteractableStateArgsEvent InteractableStateChanged;

		[Token(Token = "0x17000158")]
		public ColliderZone ProximityCollider
		{
			[Token(Token = "0x60014F1")]
			[Address(RVA = "0xBAD280", Offset = "0xBAD280", VA = "0xBAD280")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000159")]
		public ColliderZone ContactCollider
		{
			[Token(Token = "0x60014F2")]
			[Address(RVA = "0xBAD288", Offset = "0xBAD288", VA = "0xBAD288")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015A")]
		public ColliderZone ActionCollider
		{
			[Token(Token = "0x60014F3")]
			[Address(RVA = "0xBAD290", Offset = "0xBAD290", VA = "0xBAD290")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700015B")]
		public virtual int ValidToolTagsMask
		{
			[Token(Token = "0x60014F4")]
			[Address(RVA = "0xBAD298", Offset = "0xBAD298", VA = "0xBAD298", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x14000010")]
		public event Action<ColliderZoneArgs> ProximityZoneEvent
		{
			[Token(Token = "0x60014F5")]
			[Address(RVA = "0xBAD2A0", Offset = "0xBAD2A0", VA = "0xBAD2A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A9BC", Offset = "0x85A9BC")]
			add
			{
			}
			[Token(Token = "0x60014F6")]
			[Address(RVA = "0xBAD340", Offset = "0xBAD340", VA = "0xBAD340")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A9CC", Offset = "0x85A9CC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000011")]
		public event Action<ColliderZoneArgs> ContactZoneEvent
		{
			[Token(Token = "0x60014F8")]
			[Address(RVA = "0xBAD450", Offset = "0xBAD450", VA = "0xBAD450")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A9DC", Offset = "0x85A9DC")]
			add
			{
			}
			[Token(Token = "0x60014F9")]
			[Address(RVA = "0xBAD4F0", Offset = "0xBAD4F0", VA = "0xBAD4F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A9EC", Offset = "0x85A9EC")]
			remove
			{
			}
		}

		[Token(Token = "0x14000012")]
		public event Action<ColliderZoneArgs> ActionZoneEvent
		{
			[Token(Token = "0x60014FB")]
			[Address(RVA = "0xBAD600", Offset = "0xBAD600", VA = "0xBAD600")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85A9FC", Offset = "0x85A9FC")]
			add
			{
			}
			[Token(Token = "0x60014FC")]
			[Address(RVA = "0xBAD6A0", Offset = "0xBAD6A0", VA = "0xBAD6A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AA0C", Offset = "0x85AA0C")]
			remove
			{
			}
		}

		[Token(Token = "0x60014F7")]
		[Address(RVA = "0xBAD3E0", Offset = "0xBAD3E0", VA = "0xBAD3E0", Slot = "5")]
		protected virtual void OnProximityZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60014FA")]
		[Address(RVA = "0xBAD590", Offset = "0xBAD590", VA = "0xBAD590", Slot = "6")]
		protected virtual void OnContactZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60014FD")]
		[Address(RVA = "0xBAD740", Offset = "0xBAD740", VA = "0xBAD740", Slot = "7")]
		protected virtual void OnActionZoneEvent(ColliderZoneArgs args)
		{
		}

		[Token(Token = "0x60014FE")]
		public abstract void UpdateCollisionDepth(InteractableTool interactableTool, InteractableCollisionDepth oldCollisionDepth, InteractableCollisionDepth newCollisionDepth);

		[Token(Token = "0x60014FF")]
		[Address(RVA = "0xBAD7B0", Offset = "0xBAD7B0", VA = "0xBAD7B0", Slot = "9")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6001500")]
		[Address(RVA = "0xBAD8E4", Offset = "0xBAD8E4", VA = "0xBAD8E4", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6001501")]
		[Address(RVA = "0xBADA18", Offset = "0xBADA18", VA = "0xBADA18")]
		protected Interactable()
		{
		}
	}
	[Token(Token = "0x200028F")]
	public enum InteractableCollisionDepth
	{
		[Token(Token = "0x40013CD")]
		None,
		[Token(Token = "0x40013CE")]
		Proximity,
		[Token(Token = "0x40013CF")]
		Contact,
		[Token(Token = "0x40013D0")]
		Action
	}
	[Token(Token = "0x2000290")]
	public enum InteractableState
	{
		[Token(Token = "0x40013D2")]
		Default,
		[Token(Token = "0x40013D3")]
		ProximityState,
		[Token(Token = "0x40013D4")]
		ContactState,
		[Token(Token = "0x40013D5")]
		ActionState
	}
	[Token(Token = "0x2000291")]
	public class InteractableStateArgs : EventArgs
	{
		[Token(Token = "0x40013D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly Interactable Interactable;

		[Token(Token = "0x40013D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public readonly InteractableTool Tool;

		[Token(Token = "0x40013D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public readonly InteractableState OldInteractableState;

		[Token(Token = "0x40013D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public readonly InteractableState NewInteractableState;

		[Token(Token = "0x40013DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public readonly ColliderZoneArgs ColliderArgs;

		[Token(Token = "0x6001502")]
		[Address(RVA = "0xBADB20", Offset = "0xBADB20", VA = "0xBADB20")]
		public InteractableStateArgs(Interactable interactable, InteractableTool tool, InteractableState newInteractableState, InteractableState oldState, ColliderZoneArgs colliderArgs)
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class InteractableRegistry : MonoBehaviour
	{
		[Token(Token = "0x40013DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static HashSet<Interactable> _interactables;

		[Token(Token = "0x1700015C")]
		public static HashSet<Interactable> Interactables
		{
			[Token(Token = "0x6001503")]
			[Address(RVA = "0xBADA20", Offset = "0xBADA20", VA = "0xBADA20")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001504")]
		[Address(RVA = "0xBAD818", Offset = "0xBAD818", VA = "0xBAD818")]
		public static void RegisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001505")]
		[Address(RVA = "0xBAD94C", Offset = "0xBAD94C", VA = "0xBAD94C")]
		public static void UnregisterInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001506")]
		[Address(RVA = "0xBADA84", Offset = "0xBADA84", VA = "0xBADA84")]
		public InteractableRegistry()
		{
		}
	}
	[Token(Token = "0x2000293")]
	public class InteractableToolsCreator : MonoBehaviour
	{
		[Token(Token = "0x20004E6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849D94", Offset = "0x849D94")]
		private sealed class <AttachToolsToHands>d__3 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public Transform[] toolObjects;

			[Token(Token = "0x40023DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public bool isRightHand;

			[Token(Token = "0x40023DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public InteractableToolsCreator <>4__this;

			[Token(Token = "0x40023DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private HandsManager <handsManagerObj>5__2;

			[Token(Token = "0x40023DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private HashSet<Transform>.Enumerator <>7__wrap2;

			[Token(Token = "0x40023E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private Transform <toolObject>5__4;

			[Token(Token = "0x40023E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private OVRSkeleton <handSkeletonToAttachTo>5__5;

			[Token(Token = "0x17000303")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E93")]
				[Address(RVA = "0x19D5558", Offset = "0x19D5558", VA = "0x19D5558", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000304")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E95")]
				[Address(RVA = "0x19D55A0", Offset = "0x19D55A0", VA = "0x19D55A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E8F")]
			[Address(RVA = "0x19D5044", Offset = "0x19D5044", VA = "0x19D5044")]
			[DebuggerHidden]
			public <AttachToolsToHands>d__3(int <>1__state)
			{
			}

			[Token(Token = "0x6001E90")]
			[Address(RVA = "0x19D5070", Offset = "0x19D5070", VA = "0x19D5070", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E91")]
			[Address(RVA = "0x19D50E8", Offset = "0x19D50E8", VA = "0x19D50E8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E92")]
			[Address(RVA = "0x19D508C", Offset = "0x19D508C", VA = "0x19D508C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001E94")]
			[Address(RVA = "0x19D5560", Offset = "0x19D5560", VA = "0x19D5560", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform[] LeftHandTools;

		[Token(Token = "0x40013DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform[] RightHandTools;

		[Token(Token = "0x6001508")]
		[Address(RVA = "0xBAE71C", Offset = "0xBAE71C", VA = "0xBAE71C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001509")]
		[Address(RVA = "0xBAE798", Offset = "0xBAE798", VA = "0xBAE798")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85AA1C", Offset = "0x85AA1C")]
		private IEnumerator AttachToolsToHands(Transform[] toolObjects, bool isRightHand)
		{
			return null;
		}

		[Token(Token = "0x600150A")]
		[Address(RVA = "0xBAE840", Offset = "0xBAE840", VA = "0xBAE840")]
		private void AttachToolToHandTransform(Transform tool, bool isRightHanded)
		{
		}

		[Token(Token = "0x600150B")]
		[Address(RVA = "0xBAE928", Offset = "0xBAE928", VA = "0xBAE928")]
		public InteractableToolsCreator()
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class InteractableToolsInputRouter : MonoBehaviour
	{
		[Token(Token = "0x40013DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static InteractableToolsInputRouter _instance;

		[Token(Token = "0x40013DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _leftPinch;

		[Token(Token = "0x40013E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool _rightPinch;

		[Token(Token = "0x40013E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private HashSet<InteractableTool> _leftHandNearTools;

		[Token(Token = "0x40013E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private HashSet<InteractableTool> _leftHandFarTools;

		[Token(Token = "0x40013E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private HashSet<InteractableTool> _rightHandNearTools;

		[Token(Token = "0x40013E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private HashSet<InteractableTool> _rightHandFarTools;

		[Token(Token = "0x1700015D")]
		public static InteractableToolsInputRouter Instance
		{
			[Token(Token = "0x600150C")]
			[Address(RVA = "0xB9FCA4", Offset = "0xB9FCA4", VA = "0xB9FCA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600150D")]
		[Address(RVA = "0xB9FE24", Offset = "0xB9FE24", VA = "0xB9FE24")]
		public void RegisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600150E")]
		[Address(RVA = "0xBAE930", Offset = "0xBAE930", VA = "0xBAE930")]
		public void UnregisterInteractableTool(InteractableTool interactableTool)
		{
		}

		[Token(Token = "0x600150F")]
		[Address(RVA = "0xBAE9D8", Offset = "0xBAE9D8", VA = "0xBAE9D8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001510")]
		[Address(RVA = "0xBAEC84", Offset = "0xBAEC84", VA = "0xBAEC84")]
		private bool UpdateToolsAndEnableState(HashSet<InteractableTool> tools, bool toolsAreEnabledThisFrame)
		{
			return default(bool);
		}

		[Token(Token = "0x6001511")]
		[Address(RVA = "0xBAECCC", Offset = "0xBAECCC", VA = "0xBAECCC")]
		private bool UpdateTools(HashSet<InteractableTool> tools, bool resetCollisionData = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001512")]
		[Address(RVA = "0xBAEF74", Offset = "0xBAEF74", VA = "0xBAEF74")]
		private void ToggleToolsEnableState(HashSet<InteractableTool> tools, bool enableState)
		{
		}

		[Token(Token = "0x6001513")]
		[Address(RVA = "0xBAF0B8", Offset = "0xBAF0B8", VA = "0xBAF0B8")]
		public InteractableToolsInputRouter()
		{
		}
	}
	[Token(Token = "0x2000295")]
	public class FingerTipPokeTool : InteractableTool
	{
		[Token(Token = "0x20004E7")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849DA4", Offset = "0x849DA4")]
		private sealed class <AttachTriggerLogic>d__21 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public FingerTipPokeTool <>4__this;

			[Token(Token = "0x17000305")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E99")]
				[Address(RVA = "0x19B0CB0", Offset = "0x19B0CB0", VA = "0x19B0CB0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000306")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001E9B")]
				[Address(RVA = "0x19B0CF8", Offset = "0x19B0CF8", VA = "0x19B0CF8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E96")]
			[Address(RVA = "0x19B087C", Offset = "0x19B087C", VA = "0x19B087C")]
			[DebuggerHidden]
			public <AttachTriggerLogic>d__21(int <>1__state)
			{
			}

			[Token(Token = "0x6001E97")]
			[Address(RVA = "0x19B08A8", Offset = "0x19B08A8", VA = "0x19B08A8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E98")]
			[Address(RVA = "0x19B08AC", Offset = "0x19B08AC", VA = "0x19B08AC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001E9A")]
			[Address(RVA = "0x19B0CB8", Offset = "0x19B0CB8", VA = "0x19B0CB8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40013E5")]
		private const int NUM_VELOCITY_FRAMES = 10;

		[Token(Token = "0x40013E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private FingerTipPokeToolView _fingerTipPokeToolView;

		[Token(Token = "0x40013E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private OVRPlugin.HandFinger _fingerToFollow;

		[Token(Token = "0x40013E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3[] _velocityFrames;

		[Token(Token = "0x40013E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int _currVelocityFrame;

		[Token(Token = "0x40013EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private bool _sampledMaxFramesAlready;

		[Token(Token = "0x40013EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector3 _position;

		[Token(Token = "0x40013EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private BoneCapsuleTriggerLogic[] _boneCapsuleTriggerLogic;

		[Token(Token = "0x40013ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float _lastScale;

		[Token(Token = "0x40013EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private bool _isInitialized;

		[Token(Token = "0x40013EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private OVRBoneCapsule _capsuleToTrack;

		[Token(Token = "0x1700015E")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001514")]
			[Address(RVA = "0xB9FB70", Offset = "0xB9FB70", VA = "0xB9FB70", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x1700015F")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001515")]
			[Address(RVA = "0xB9FB78", Offset = "0xB9FB78", VA = "0xB9FB78", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000160")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001516")]
			[Address(RVA = "0xB9FB80", Offset = "0xB9FB80", VA = "0xB9FB80", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000161")]
		public override bool EnableState
		{
			[Token(Token = "0x6001517")]
			[Address(RVA = "0xB9FB88", Offset = "0xB9FB88", VA = "0xB9FB88", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001518")]
			[Address(RVA = "0xB9FBB4", Offset = "0xB9FBB4", VA = "0xB9FBB4", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001519")]
		[Address(RVA = "0xB9FBF0", Offset = "0xB9FBF0", VA = "0xB9FBF0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x600151A")]
		[Address(RVA = "0xB9FECC", Offset = "0xB9FECC", VA = "0xB9FECC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85AA84", Offset = "0x85AA84")]
		private IEnumerator AttachTriggerLogic()
		{
			return null;
		}

		[Token(Token = "0x600151B")]
		[Address(RVA = "0xB9FF4C", Offset = "0xB9FF4C", VA = "0xB9FF4C")]
		private void Update()
		{
		}

		[Token(Token = "0x600151C")]
		[Address(RVA = "0xBA03DC", Offset = "0xBA03DC", VA = "0xBA03DC")]
		private void UpdateAverageVelocity()
		{
		}

		[Token(Token = "0x600151D")]
		[Address(RVA = "0xBA0568", Offset = "0xBA0568", VA = "0xBA0568")]
		private void CheckAndUpdateScale()
		{
		}

		[Token(Token = "0x600151E")]
		[Address(RVA = "0xBA065C", Offset = "0xBA065C", VA = "0xBA065C", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x600151F")]
		[Address(RVA = "0xBA09B8", Offset = "0xBA09B8", VA = "0xBA09B8", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x6001520")]
		[Address(RVA = "0xBA09BC", Offset = "0xBA09BC", VA = "0xBA09BC", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x6001521")]
		[Address(RVA = "0xBA09C0", Offset = "0xBA09C0", VA = "0xBA09C0")]
		public FingerTipPokeTool()
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class FingerTipPokeToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x40013F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _sphereMeshRenderer;

		[Token(Token = "0x40013F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x852998", Offset = "0x852998")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x40013F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8529A8", Offset = "0x8529A8")]
		private bool <ToolActivateState>k__BackingField;

		[Token(Token = "0x40013F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8529B8", Offset = "0x8529B8")]
		private float <SphereRadius>k__BackingField;

		[Token(Token = "0x17000162")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001522")]
			[Address(RVA = "0xBA0B74", Offset = "0xBA0B74", VA = "0xBA0B74", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AAEC", Offset = "0x85AAEC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001523")]
			[Address(RVA = "0xBA0B7C", Offset = "0xBA0B7C", VA = "0xBA0B7C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AAFC", Offset = "0x85AAFC")]
			set
			{
			}
		}

		[Token(Token = "0x17000163")]
		public bool EnableState
		{
			[Token(Token = "0x6001524")]
			[Address(RVA = "0xBA0B84", Offset = "0xBA0B84", VA = "0xBA0B84", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001525")]
			[Address(RVA = "0xBA0BA4", Offset = "0xBA0BA4", VA = "0xBA0BA4", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000164")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001526")]
			[Address(RVA = "0xBA0BC8", Offset = "0xBA0BC8", VA = "0xBA0BC8", Slot = "8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AB0C", Offset = "0x85AB0C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001527")]
			[Address(RVA = "0xBA0BD0", Offset = "0xBA0BD0", VA = "0xBA0BD0", Slot = "9")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AB1C", Offset = "0x85AB1C")]
			set
			{
			}
		}

		[Token(Token = "0x17000165")]
		public float SphereRadius
		{
			[Token(Token = "0x6001528")]
			[Address(RVA = "0xBA0BDC", Offset = "0xBA0BDC", VA = "0xBA0BDC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AB2C", Offset = "0x85AB2C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001529")]
			[Address(RVA = "0xBA0BE4", Offset = "0xBA0BE4", VA = "0xBA0BE4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AB3C", Offset = "0x85AB3C")]
			private set
			{
			}
		}

		[Token(Token = "0x600152A")]
		[Address(RVA = "0xBA0BEC", Offset = "0xBA0BEC", VA = "0xBA0BEC")]
		private void Awake()
		{
		}

		[Token(Token = "0x600152B")]
		[Address(RVA = "0xBA0C34", Offset = "0xBA0C34", VA = "0xBA0C34", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x600152C")]
		[Address(RVA = "0xBA0C38", Offset = "0xBA0C38", VA = "0xBA0C38")]
		public FingerTipPokeToolView()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[Flags]
	public enum InteractableToolTags
	{
		[Token(Token = "0x40013F5")]
		None = 0,
		[Token(Token = "0x40013F6")]
		Ray = 1,
		[Token(Token = "0x40013F7")]
		Poke = 4,
		[Token(Token = "0x40013F8")]
		All = -1
	}
	[Token(Token = "0x2000298")]
	public enum ToolInputState
	{
		[Token(Token = "0x40013FA")]
		Inactive,
		[Token(Token = "0x40013FB")]
		PrimaryInputDown,
		[Token(Token = "0x40013FC")]
		PrimaryInputDownStay,
		[Token(Token = "0x40013FD")]
		PrimaryInputUp
	}
	[Token(Token = "0x2000299")]
	public class InteractableCollisionInfo
	{
		[Token(Token = "0x40013FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ColliderZone InteractableCollider;

		[Token(Token = "0x40013FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public InteractableCollisionDepth CollisionDepth;

		[Token(Token = "0x4001400")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public InteractableTool CollidingTool;

		[Token(Token = "0x600152D")]
		[Address(RVA = "0xBA0960", Offset = "0xBA0960", VA = "0xBA0960")]
		public InteractableCollisionInfo(ColliderZone collider, InteractableCollisionDepth collisionDepth, InteractableTool collidingTool)
		{
		}
	}
	[Token(Token = "0x200029A")]
	public abstract class InteractableTool : MonoBehaviour
	{
		[Token(Token = "0x4001401")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8529C8", Offset = "0x8529C8")]
		private bool <IsRightHandedTool>k__BackingField;

		[Token(Token = "0x4001402")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8529D8", Offset = "0x8529D8")]
		private Vector3 <Velocity>k__BackingField;

		[Token(Token = "0x4001403")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8529E8", Offset = "0x8529E8")]
		private Vector3 <InteractionPosition>k__BackingField;

		[Token(Token = "0x4001404")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected List<InteractableCollisionInfo> _currentIntersectingObjects;

		[Token(Token = "0x4001405")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Interactable> _addedInteractables;

		[Token(Token = "0x4001406")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Interactable> _removedInteractables;

		[Token(Token = "0x4001407")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<Interactable> _remainingInteractables;

		[Token(Token = "0x4001408")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Dictionary<Interactable, InteractableCollisionInfo> _currInteractableToCollisionInfos;

		[Token(Token = "0x4001409")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<Interactable, InteractableCollisionInfo> _prevInteractableToCollisionInfos;

		[Token(Token = "0x17000166")]
		public Transform ToolTransform
		{
			[Token(Token = "0x600152E")]
			[Address(RVA = "0xBADBE4", Offset = "0xBADBE4", VA = "0xBADBE4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000167")]
		public bool IsRightHandedTool
		{
			[Token(Token = "0x600152F")]
			[Address(RVA = "0xBADBEC", Offset = "0xBADBEC", VA = "0xBADBEC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AB4C", Offset = "0x85AB4C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001530")]
			[Address(RVA = "0xBADBF4", Offset = "0xBADBF4", VA = "0xBADBF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AB5C", Offset = "0x85AB5C")]
			set
			{
			}
		}

		[Token(Token = "0x17000168")]
		public abstract InteractableToolTags ToolTags
		{
			[Token(Token = "0x6001531")]
			get;
		}

		[Token(Token = "0x17000169")]
		public abstract ToolInputState ToolInputState
		{
			[Token(Token = "0x6001532")]
			get;
		}

		[Token(Token = "0x1700016A")]
		public abstract bool IsFarFieldTool
		{
			[Token(Token = "0x6001533")]
			get;
		}

		[Token(Token = "0x1700016B")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6001534")]
			[Address(RVA = "0xBADC00", Offset = "0xBADC00", VA = "0xBADC00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AB6C", Offset = "0x85AB6C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001535")]
			[Address(RVA = "0xBADC0C", Offset = "0xBADC0C", VA = "0xBADC0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AB7C", Offset = "0x85AB7C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700016C")]
		public Vector3 InteractionPosition
		{
			[Token(Token = "0x6001536")]
			[Address(RVA = "0xBADC18", Offset = "0xBADC18", VA = "0xBADC18")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AB8C", Offset = "0x85AB8C")]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6001537")]
			[Address(RVA = "0xBADC24", Offset = "0xBADC24", VA = "0xBADC24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AB9C", Offset = "0x85AB9C")]
			protected set
			{
			}
		}

		[Token(Token = "0x1700016D")]
		public abstract bool EnableState
		{
			[Token(Token = "0x600153C")]
			get;
			[Token(Token = "0x600153D")]
			set;
		}

		[Token(Token = "0x6001538")]
		[Address(RVA = "0xBADC30", Offset = "0xBADC30", VA = "0xBADC30")]
		public List<InteractableCollisionInfo> GetCurrentIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001539")]
		public abstract List<InteractableCollisionInfo> GetNextIntersectingObjects();

		[Token(Token = "0x600153A")]
		public abstract void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone);

		[Token(Token = "0x600153B")]
		public abstract void DeFocus();

		[Token(Token = "0x600153E")]
		public abstract void Initialize();

		[Token(Token = "0x600153F")]
		[Address(RVA = "0xBADC38", Offset = "0xBADC38", VA = "0xBADC38")]
		public KeyValuePair<Interactable, InteractableCollisionInfo> GetFirstCurrentCollisionInfo()
		{
			return default(KeyValuePair<Interactable, InteractableCollisionInfo>);
		}

		[Token(Token = "0x6001540")]
		[Address(RVA = "0xBADC8C", Offset = "0xBADC8C", VA = "0xBADC8C")]
		public void ClearAllCurrentCollisionInfos()
		{
		}

		[Token(Token = "0x6001541")]
		[Address(RVA = "0xBADCE0", Offset = "0xBADCE0", VA = "0xBADCE0", Slot = "13")]
		public virtual void UpdateCurrentCollisionsBasedOnDepth()
		{
		}

		[Token(Token = "0x6001542")]
		[Address(RVA = "0xBADF88", Offset = "0xBADF88", VA = "0xBADF88", Slot = "14")]
		public virtual void UpdateLatestCollisionData()
		{
		}

		[Token(Token = "0x6001543")]
		[Address(RVA = "0xBA09D4", Offset = "0xBA09D4", VA = "0xBA09D4")]
		protected InteractableTool()
		{
		}
	}
	[Token(Token = "0x200029B")]
	public interface InteractableToolView
	{
		[Token(Token = "0x1700016E")]
		InteractableTool InteractableTool
		{
			[Token(Token = "0x6001544")]
			get;
		}

		[Token(Token = "0x1700016F")]
		bool EnableState
		{
			[Token(Token = "0x6001546")]
			get;
			[Token(Token = "0x6001547")]
			set;
		}

		[Token(Token = "0x17000170")]
		bool ToolActivateState
		{
			[Token(Token = "0x6001548")]
			get;
			[Token(Token = "0x6001549")]
			set;
		}

		[Token(Token = "0x6001545")]
		void SetFocusedInteractable(Interactable interactable);
	}
	[Token(Token = "0x200029C")]
	public class PinchStateModule
	{
		[Token(Token = "0x20004E8")]
		private enum PinchState
		{
			[Token(Token = "0x40023E6")]
			None,
			[Token(Token = "0x40023E7")]
			PinchDown,
			[Token(Token = "0x40023E8")]
			PinchStay,
			[Token(Token = "0x40023E9")]
			PinchUp
		}

		[Token(Token = "0x400140A")]
		private const float PINCH_STRENGTH_THRESHOLD = 1f;

		[Token(Token = "0x400140B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private PinchState _currPinchState;

		[Token(Token = "0x400140C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Interactable _firstFocusedInteractable;

		[Token(Token = "0x17000171")]
		public bool PinchUpAndDownOnFocusedObject
		{
			[Token(Token = "0x600154A")]
			[Address(RVA = "0x1B69AA0", Offset = "0x1B69AA0", VA = "0x1B69AA0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000172")]
		public bool PinchSteadyOnFocusedObject
		{
			[Token(Token = "0x600154B")]
			[Address(RVA = "0x1B69B28", Offset = "0x1B69B28", VA = "0x1B69B28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000173")]
		public bool PinchDownOnFocusedObject
		{
			[Token(Token = "0x600154C")]
			[Address(RVA = "0x1B69BB0", Offset = "0x1B69BB0", VA = "0x1B69BB0")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x600154D")]
		[Address(RVA = "0x1B69C38", Offset = "0x1B69C38", VA = "0x1B69C38")]
		public PinchStateModule()
		{
		}

		[Token(Token = "0x600154E")]
		[Address(RVA = "0x1B69C6C", Offset = "0x1B69C6C", VA = "0x1B69C6C")]
		public void UpdateState(OVRHand hand, Interactable currFocusedInteractable)
		{
		}
	}
	[Token(Token = "0x200029D")]
	public class RayTool : InteractableTool
	{
		[Token(Token = "0x400140D")]
		private const float MINIMUM_RAY_CAST_DISTANCE = 0.8f;

		[Token(Token = "0x400140E")]
		private const float COLLIDER_RADIUS = 0.01f;

		[Token(Token = "0x400140F")]
		private const int NUM_MAX_PRIMARY_HITS = 10;

		[Token(Token = "0x4001410")]
		private const int NUM_MAX_SECONDARY_HITS = 25;

		[Token(Token = "0x4001411")]
		private const int NUM_COLLIDERS_TO_TEST = 20;

		[Token(Token = "0x4001412")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private RayToolView _rayToolView;

		[Token(Token = "0x4001413")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x852A08", Offset = "0x852A08")]
		[SerializeField]
		private float _coneAngleDegrees;

		[Token(Token = "0x4001414")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[SerializeField]
		private float _farFieldMaxDistance;

		[Token(Token = "0x4001415")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private PinchStateModule _pinchStateModule;

		[Token(Token = "0x4001416")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Interactable _focusedInteractable;

		[Token(Token = "0x4001417")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Collider[] _collidersOverlapped;

		[Token(Token = "0x4001418")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Interactable _currInteractableCastedAgainst;

		[Token(Token = "0x4001419")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float _coneAngleReleaseDegrees;

		[Token(Token = "0x400141A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private RaycastHit[] _primaryHits;

		[Token(Token = "0x400141B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Collider[] _secondaryOverlapResults;

		[Token(Token = "0x400141C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private bool _initialized;

		[Token(Token = "0x17000174")]
		public override InteractableToolTags ToolTags
		{
			[Token(Token = "0x600154F")]
			[Address(RVA = "0xDCDD5C", Offset = "0xDCDD5C", VA = "0xDCDD5C", Slot = "4")]
			get
			{
				return default(InteractableToolTags);
			}
		}

		[Token(Token = "0x17000175")]
		public override ToolInputState ToolInputState
		{
			[Token(Token = "0x6001550")]
			[Address(RVA = "0xDCDD64", Offset = "0xDCDD64", VA = "0xDCDD64", Slot = "5")]
			get
			{
				return default(ToolInputState);
			}
		}

		[Token(Token = "0x17000176")]
		public override bool IsFarFieldTool
		{
			[Token(Token = "0x6001551")]
			[Address(RVA = "0xDCDDD8", Offset = "0xDCDDD8", VA = "0xDCDDD8", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000177")]
		public override bool EnableState
		{
			[Token(Token = "0x6001552")]
			[Address(RVA = "0xDCDDE0", Offset = "0xDCDDE0", VA = "0xDCDDE0", Slot = "10")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001553")]
			[Address(RVA = "0xDCDE28", Offset = "0xDCDE28", VA = "0xDCDE28", Slot = "11")]
			set
			{
			}
		}

		[Token(Token = "0x6001554")]
		[Address(RVA = "0xDCDEA0", Offset = "0xDCDEA0", VA = "0xDCDEA0", Slot = "12")]
		public override void Initialize()
		{
		}

		[Token(Token = "0x6001555")]
		[Address(RVA = "0xDCDF08", Offset = "0xDCDF08", VA = "0xDCDF08")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001556")]
		[Address(RVA = "0xDCDFB8", Offset = "0xDCDFB8", VA = "0xDCDFB8")]
		private void Update()
		{
		}

		[Token(Token = "0x6001557")]
		[Address(RVA = "0xDCE280", Offset = "0xDCE280", VA = "0xDCE280")]
		private Vector3 GetRayCastOrigin()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001558")]
		[Address(RVA = "0xDCE308", Offset = "0xDCE308", VA = "0xDCE308", Slot = "7")]
		public override List<InteractableCollisionInfo> GetNextIntersectingObjects()
		{
			return null;
		}

		[Token(Token = "0x6001559")]
		[Address(RVA = "0xDCE6C8", Offset = "0xDCE6C8", VA = "0xDCE6C8")]
		private bool HasRayReleasedInteractable(Interactable focusedInteractable)
		{
			return default(bool);
		}

		[Token(Token = "0x600155A")]
		[Address(RVA = "0xDCE7D8", Offset = "0xDCE7D8", VA = "0xDCE7D8")]
		private Interactable FindTargetInteractable()
		{
			return null;
		}

		[Token(Token = "0x600155B")]
		[Address(RVA = "0xDCE8FC", Offset = "0xDCE8FC", VA = "0xDCE8FC")]
		private Interactable FindPrimaryRaycastHit(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600155C")]
		[Address(RVA = "0xDCEBF4", Offset = "0xDCEBF4", VA = "0xDCEBF4")]
		private Interactable FindInteractableViaConeTest(Vector3 rayOrigin, Vector3 rayDirection)
		{
			return null;
		}

		[Token(Token = "0x600155D")]
		[Address(RVA = "0xDCEF7C", Offset = "0xDCEF7C", VA = "0xDCEF7C", Slot = "8")]
		public override void FocusOnInteractable(Interactable focusedInteractable, ColliderZone colliderZone)
		{
		}

		[Token(Token = "0x600155E")]
		[Address(RVA = "0xDCF064", Offset = "0xDCF064", VA = "0xDCF064", Slot = "9")]
		public override void DeFocus()
		{
		}

		[Token(Token = "0x600155F")]
		[Address(RVA = "0xDCF0A0", Offset = "0xDCF0A0", VA = "0xDCF0A0")]
		public RayTool()
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class RayToolView : MonoBehaviour, InteractableToolView
	{
		[Token(Token = "0x400141D")]
		private const int NUM_RAY_LINE_POSITIONS = 25;

		[Token(Token = "0x400141E")]
		private const float DEFAULT_RAY_CAST_DISTANCE = 3f;

		[Token(Token = "0x400141F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform _targetTransform;

		[Token(Token = "0x4001420")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private LineRenderer _lineRenderer;

		[Token(Token = "0x4001421")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _toolActivateState;

		[Token(Token = "0x4001422")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _focusedTransform;

		[Token(Token = "0x4001423")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3[] linePositions;

		[Token(Token = "0x4001424")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Gradient _oldColorGradient;

		[Token(Token = "0x4001425")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Gradient _highLightColorGradient;

		[Token(Token = "0x4001426")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x852A7C", Offset = "0x852A7C")]
		private InteractableTool <InteractableTool>k__BackingField;

		[Token(Token = "0x17000178")]
		public bool EnableState
		{
			[Token(Token = "0x6001560")]
			[Address(RVA = "0xDCDE08", Offset = "0xDCDE08", VA = "0xDCDE08", Slot = "6")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001561")]
			[Address(RVA = "0xDCDE48", Offset = "0xDCDE48", VA = "0xDCDE48", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x17000179")]
		public bool ToolActivateState
		{
			[Token(Token = "0x6001562")]
			[Address(RVA = "0xDCF1A8", Offset = "0xDCF1A8", VA = "0xDCF1A8", Slot = "8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001563")]
			[Address(RVA = "0xDCE240", Offset = "0xDCE240", VA = "0xDCE240", Slot = "9")]
			set
			{
			}
		}

		[Token(Token = "0x1700017A")]
		public InteractableTool InteractableTool
		{
			[Token(Token = "0x6001565")]
			[Address(RVA = "0xDCF408", Offset = "0xDCF408", VA = "0xDCF408", Slot = "4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85ABAC", Offset = "0x85ABAC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001566")]
			[Address(RVA = "0xDCF410", Offset = "0xDCF410", VA = "0xDCF410")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85ABBC", Offset = "0x85ABBC")]
			set
			{
			}
		}

		[Token(Token = "0x6001564")]
		[Address(RVA = "0xDCF1B0", Offset = "0xDCF1B0", VA = "0xDCF1B0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001567")]
		[Address(RVA = "0xDCEFB8", Offset = "0xDCEFB8", VA = "0xDCEFB8", Slot = "5")]
		public void SetFocusedInteractable(Interactable interactable)
		{
		}

		[Token(Token = "0x6001568")]
		[Address(RVA = "0xDCF418", Offset = "0xDCF418", VA = "0xDCF418")]
		private void Update()
		{
		}

		[Token(Token = "0x6001569")]
		[Address(RVA = "0xDCF68C", Offset = "0xDCF68C", VA = "0xDCF68C")]
		public static Vector3 GetPointOnBezierCurve(Vector3 p0, Vector3 p1, Vector3 p2, Vector3 p3, float t)
		{
			return default(Vector3);
		}

		[Token(Token = "0x600156A")]
		[Address(RVA = "0xDCF77C", Offset = "0xDCF77C", VA = "0xDCF77C")]
		public RayToolView()
		{
		}
	}
	[Token(Token = "0x200029F")]
	public class DistanceGrabberSample : MonoBehaviour
	{
		[Token(Token = "0x4001427")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool useSpherecast;

		[Token(Token = "0x4001428")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		private bool allowGrabThroughWalls;

		[Token(Token = "0x4001429")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DistanceGrabber[] m_grabbers;

		[Token(Token = "0x1700017B")]
		public bool UseSpherecast
		{
			[Token(Token = "0x600156B")]
			[Address(RVA = "0xC006E4", Offset = "0xC006E4", VA = "0xC006E4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600156C")]
			[Address(RVA = "0xC006EC", Offset = "0xC006EC", VA = "0xC006EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700017C")]
		public bool AllowGrabThroughWalls
		{
			[Token(Token = "0x600156D")]
			[Address(RVA = "0xC00774", Offset = "0xC00774", VA = "0xC00774")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600156E")]
			[Address(RVA = "0xC0077C", Offset = "0xC0077C", VA = "0xC0077C")]
			set
			{
			}
		}

		[Token(Token = "0x600156F")]
		[Address(RVA = "0xC007E8", Offset = "0xC007E8", VA = "0xC007E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6001570")]
		[Address(RVA = "0xC00A94", Offset = "0xC00A94", VA = "0xC00A94")]
		public void ToggleSphereCasting(Toggle t)
		{
		}

		[Token(Token = "0x6001571")]
		[Address(RVA = "0xC00AA4", Offset = "0xC00AA4", VA = "0xC00AA4")]
		public void ToggleGrabThroughWalls(Toggle t)
		{
		}

		[Token(Token = "0x6001572")]
		[Address(RVA = "0xC00AB4", Offset = "0xC00AB4", VA = "0xC00AB4")]
		public DistanceGrabberSample()
		{
		}
	}
	[Token(Token = "0x20002A0")]
	public class ControllerBoxController : MonoBehaviour
	{
		[Token(Token = "0x400142A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TrainLocomotive _locomotive;

		[Token(Token = "0x400142B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private CowController _cowController;

		[Token(Token = "0x6001573")]
		[Address(RVA = "0xC4F4BC", Offset = "0xC4F4BC", VA = "0xC4F4BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001574")]
		[Address(RVA = "0xC4F4C0", Offset = "0xC4F4C0", VA = "0xC4F4C0")]
		public void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001575")]
		[Address(RVA = "0xC4F4F8", Offset = "0xC4F4F8", VA = "0xC4F4F8")]
		public void DecreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001576")]
		[Address(RVA = "0xC4F530", Offset = "0xC4F530", VA = "0xC4F530")]
		public void IncreaseSpeedStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001577")]
		[Address(RVA = "0xC4F568", Offset = "0xC4F568", VA = "0xC4F568")]
		public void SmokeButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001578")]
		[Address(RVA = "0xC4F5A0", Offset = "0xC4F5A0", VA = "0xC4F5A0")]
		public void WhistleButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x6001579")]
		[Address(RVA = "0xC4F5D8", Offset = "0xC4F5D8", VA = "0xC4F5D8")]
		public void ReverseButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600157A")]
		[Address(RVA = "0xC4F610", Offset = "0xC4F610", VA = "0xC4F610")]
		public void SwitchVisualization(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600157B")]
		[Address(RVA = "0xC4F684", Offset = "0xC4F684", VA = "0xC4F684")]
		public void GoMoo(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x600157C")]
		[Address(RVA = "0xC4F6F4", Offset = "0xC4F6F4", VA = "0xC4F6F4")]
		public ControllerBoxController()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	public class CowController : MonoBehaviour
	{
		[Token(Token = "0x400142C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Animation _cowAnimation;

		[Token(Token = "0x400142D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioSource _mooCowAudioSource;

		[Token(Token = "0x600157D")]
		[Address(RVA = "0xC4F7B0", Offset = "0xC4F7B0", VA = "0xC4F7B0")]
		private void Start()
		{
		}

		[Token(Token = "0x600157E")]
		[Address(RVA = "0xC4F7B4", Offset = "0xC4F7B4", VA = "0xC4F7B4")]
		public void PlayMooSound()
		{
		}

		[Token(Token = "0x600157F")]
		[Address(RVA = "0xC4F6B8", Offset = "0xC4F6B8", VA = "0xC4F6B8")]
		public void GoMooCowGo()
		{
		}

		[Token(Token = "0x6001580")]
		[Address(RVA = "0xC4F7F4", Offset = "0xC4F7F4", VA = "0xC4F7F4")]
		public CowController()
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class PanelHMDFollower : MonoBehaviour
	{
		[Token(Token = "0x20004E9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849DB4", Offset = "0x849DB4")]
		private sealed class <LerpToHMD>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public PanelHMDFollower <>4__this;

			[Token(Token = "0x40023ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private Vector3 <newPanelPosition>5__2;

			[Token(Token = "0x40023EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <startTime>5__3;

			[Token(Token = "0x40023EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <endTime>5__4;

			[Token(Token = "0x17000307")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001E9F")]
				[Address(RVA = "0x19DDB98", Offset = "0x19DDB98", VA = "0x19DDB98", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000308")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA1")]
				[Address(RVA = "0x19DDBE0", Offset = "0x19DDBE0", VA = "0x19DDBE0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001E9C")]
			[Address(RVA = "0x19DD9A8", Offset = "0x19DD9A8", VA = "0x19DD9A8")]
			[DebuggerHidden]
			public <LerpToHMD>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001E9D")]
			[Address(RVA = "0x19DD9D4", Offset = "0x19DD9D4", VA = "0x19DD9D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001E9E")]
			[Address(RVA = "0x19DD9D8", Offset = "0x19DD9D8", VA = "0x19DD9D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA0")]
			[Address(RVA = "0x19DDBA0", Offset = "0x19DDBA0", VA = "0x19DDBA0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400142E")]
		private const float TOTAL_DURATION = 3f;

		[Token(Token = "0x400142F")]
		private const float HMD_MOVEMENT_THRESHOLD = 0.3f;

		[Token(Token = "0x4001430")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _maxDistance;

		[Token(Token = "0x4001431")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _minDistance;

		[Token(Token = "0x4001432")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _minZDistance;

		[Token(Token = "0x4001433")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private OVRCameraRig _cameraRig;

		[Token(Token = "0x4001434")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Vector3 _panelInitialPosition;

		[Token(Token = "0x4001435")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _coroutine;

		[Token(Token = "0x4001436")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Vector3 _prevPos;

		[Token(Token = "0x4001437")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private Vector3 _lastMovedToPos;

		[Token(Token = "0x6001581")]
		[Address(RVA = "0x1B6529C", Offset = "0x1B6529C", VA = "0x1B6529C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001582")]
		[Address(RVA = "0x1B65350", Offset = "0x1B65350", VA = "0x1B65350")]
		private void Update()
		{
		}

		[Token(Token = "0x6001583")]
		[Address(RVA = "0x1B655A8", Offset = "0x1B655A8", VA = "0x1B655A8")]
		private Vector3 CalculateIdealAnchorPosition()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6001584")]
		[Address(RVA = "0x1B65528", Offset = "0x1B65528", VA = "0x1B65528")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85ABCC", Offset = "0x85ABCC")]
		private IEnumerator LerpToHMD()
		{
			return null;
		}

		[Token(Token = "0x6001585")]
		[Address(RVA = "0x1B655F4", Offset = "0x1B655F4", VA = "0x1B655F4")]
		public PanelHMDFollower()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	public class SelectionCylinder : MonoBehaviour
	{
		[Token(Token = "0x20004EA")]
		public enum SelectionState
		{
			[Token(Token = "0x40023F1")]
			Off,
			[Token(Token = "0x40023F2")]
			Selected,
			[Token(Token = "0x40023F3")]
			Highlighted
		}

		[Token(Token = "0x4001438")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _selectionMeshRenderer;

		[Token(Token = "0x4001439")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static int _colorId;

		[Token(Token = "0x400143A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Material[] _selectionMaterials;

		[Token(Token = "0x400143B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Color[] _defaultSelectionColors;

		[Token(Token = "0x400143C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Color[] _highlightColors;

		[Token(Token = "0x400143D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SelectionState _currSelectionState;

		[Token(Token = "0x1700017D")]
		public SelectionState CurrSelectionState
		{
			[Token(Token = "0x6001586")]
			[Address(RVA = "0xDD7BA0", Offset = "0xDD7BA0", VA = "0xDD7BA0")]
			get
			{
				return default(SelectionState);
			}
			[Token(Token = "0x6001587")]
			[Address(RVA = "0xDD7BA8", Offset = "0xDD7BA8", VA = "0xDD7BA8")]
			set
			{
			}
		}

		[Token(Token = "0x6001588")]
		[Address(RVA = "0xDD7D2C", Offset = "0xDD7D2C", VA = "0xDD7D2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001589")]
		[Address(RVA = "0xDD7F28", Offset = "0xDD7F28", VA = "0xDD7F28")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x600158A")]
		[Address(RVA = "0xDD7C30", Offset = "0xDD7C30", VA = "0xDD7C30")]
		private void AffectSelectionColor(Color[] newColors)
		{
		}

		[Token(Token = "0x600158B")]
		[Address(RVA = "0xDD8014", Offset = "0xDD8014", VA = "0xDD8014")]
		public SelectionCylinder()
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class TrackSegment : MonoBehaviour
	{
		[Token(Token = "0x20004EB")]
		public enum SegmentType
		{
			[Token(Token = "0x40023F5")]
			Straight,
			[Token(Token = "0x40023F6")]
			LeftTurn,
			[Token(Token = "0x40023F7")]
			RightTurn,
			[Token(Token = "0x40023F8")]
			Switch
		}

		[Token(Token = "0x400143E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private SegmentType _segmentType;

		[Token(Token = "0x400143F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshFilter _straight;

		[Token(Token = "0x4001440")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshFilter _leftTurn;

		[Token(Token = "0x4001441")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshFilter _rightTurn;

		[Token(Token = "0x4001442")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _gridSize;

		[Token(Token = "0x4001443")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int _subDivCount;

		[Token(Token = "0x4001444")]
		private const float _originalGridSize = 0.8f;

		[Token(Token = "0x4001445")]
		private const float _trackWidth = 0.15f;

		[Token(Token = "0x4001446")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private GameObject _mesh;

		[Token(Token = "0x4001447")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x852B5C", Offset = "0x852B5C")]
		private float <StartDistance>k__BackingField;

		[Token(Token = "0x4001448")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Pose _p1;

		[Token(Token = "0x4001449")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Pose _p2;

		[Token(Token = "0x400144A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Pose _endPose;

		[Token(Token = "0x1700017E")]
		public float StartDistance
		{
			[Token(Token = "0x600158D")]
			[Address(RVA = "0x10621C8", Offset = "0x10621C8", VA = "0x10621C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AC34", Offset = "0x85AC34")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600158E")]
			[Address(RVA = "0x10621D0", Offset = "0x10621D0", VA = "0x10621D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AC44", Offset = "0x85AC44")]
			set
			{
			}
		}

		[Token(Token = "0x1700017F")]
		public float GridSize
		{
			[Token(Token = "0x600158F")]
			[Address(RVA = "0x10621D8", Offset = "0x10621D8", VA = "0x10621D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001590")]
			[Address(RVA = "0x10621E0", Offset = "0x10621E0", VA = "0x10621E0")]
			private set
			{
			}
		}

		[Token(Token = "0x17000180")]
		public int SubDivCount
		{
			[Token(Token = "0x6001591")]
			[Address(RVA = "0x10621E8", Offset = "0x10621E8", VA = "0x10621E8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001592")]
			[Address(RVA = "0x10621F0", Offset = "0x10621F0", VA = "0x10621F0")]
			set
			{
			}
		}

		[Token(Token = "0x17000181")]
		public SegmentType Type
		{
			[Token(Token = "0x6001593")]
			[Address(RVA = "0x10621F8", Offset = "0x10621F8", VA = "0x10621F8")]
			get
			{
				return default(SegmentType);
			}
		}

		[Token(Token = "0x17000182")]
		public Pose EndPose
		{
			[Token(Token = "0x6001594")]
			[Address(RVA = "0x1062200", Offset = "0x1062200", VA = "0x1062200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000183")]
		public float Radius
		{
			[Token(Token = "0x6001595")]
			[Address(RVA = "0x1062514", Offset = "0x1062514", VA = "0x1062514")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000184")]
		public float SegmentLength
		{
			[Token(Token = "0x6001597")]
			[Address(RVA = "0x1062268", Offset = "0x1062268", VA = "0x1062268")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x6001596")]
		[Address(RVA = "0x1062524", Offset = "0x1062524", VA = "0x1062524")]
		public float setGridSize(float size)
		{
			return default(float);
		}

		[Token(Token = "0x6001598")]
		[Address(RVA = "0x106253C", Offset = "0x106253C", VA = "0x106253C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001599")]
		[Address(RVA = "0x10622A8", Offset = "0x10622A8", VA = "0x10622A8")]
		public void UpdatePose(float distanceIntoSegment, Pose pose)
		{
		}

		[Token(Token = "0x600159A")]
		[Address(RVA = "0x1062540", Offset = "0x1062540", VA = "0x1062540")]
		private void Update()
		{
		}

		[Token(Token = "0x600159B")]
		[Address(RVA = "0x1062544", Offset = "0x1062544", VA = "0x1062544")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600159C")]
		[Address(RVA = "0x10625B4", Offset = "0x10625B4", VA = "0x10625B4")]
		private void DrawDebugLines()
		{
		}

		[Token(Token = "0x600159D")]
		[Address(RVA = "0x1062E74", Offset = "0x1062E74", VA = "0x1062E74")]
		public void RegenerateTrackAndMesh()
		{
		}

		[Token(Token = "0x600159E")]
		[Address(RVA = "0x106311C", Offset = "0x106311C", VA = "0x106311C")]
		public TrackSegment()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	public class TrainButtonVisualController : MonoBehaviour
	{
		[Token(Token = "0x20004EC")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849DC4", Offset = "0x849DC4")]
		private sealed class <ResetPosition>d__26 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023F9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023FA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40023FB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainButtonVisualController <>4__this;

			[Token(Token = "0x40023FC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private float <startTime>5__2;

			[Token(Token = "0x40023FD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <endTime>5__3;

			[Token(Token = "0x17000309")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EA5")]
				[Address(RVA = "0xFD3A50", Offset = "0xFD3A50", VA = "0xFD3A50", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EA7")]
				[Address(RVA = "0xFD3A98", Offset = "0xFD3A98", VA = "0xFD3A98", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA2")]
			[Address(RVA = "0xFD38AC", Offset = "0xFD38AC", VA = "0xFD38AC")]
			[DebuggerHidden]
			public <ResetPosition>d__26(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA3")]
			[Address(RVA = "0xFD38D8", Offset = "0xFD38D8", VA = "0xFD38D8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EA4")]
			[Address(RVA = "0xFD38DC", Offset = "0xFD38DC", VA = "0xFD38DC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EA6")]
			[Address(RVA = "0xFD3A58", Offset = "0xFD3A58", VA = "0xFD3A58", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x400144B")]
		private const float LERP_TO_OLD_POS_DURATION = 1f;

		[Token(Token = "0x400144C")]
		private const float LOCAL_SIZE_HALVED = 0.5f;

		[Token(Token = "0x400144D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private MeshRenderer _meshRenderer;

		[Token(Token = "0x400144E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private MeshRenderer _glowRenderer;

		[Token(Token = "0x400144F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ButtonController _buttonController;

		[Token(Token = "0x4001450")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Color _buttonContactColor;

		[Token(Token = "0x4001451")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Color _buttonActionColor;

		[Token(Token = "0x4001452")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001453")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private AudioClip _actionSoundEffect;

		[Token(Token = "0x4001454")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Transform _buttonContactTransform;

		[Token(Token = "0x4001455")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _contactMaxDisplacementDistance;

		[Token(Token = "0x4001456")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Material _buttonMaterial;

		[Token(Token = "0x4001457")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Color _buttonDefaultColor;

		[Token(Token = "0x4001458")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _materialColorId;

		[Token(Token = "0x4001459")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private bool _buttonInContactOrActionStates;

		[Token(Token = "0x400145A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Coroutine _lerpToOldPositionCr;

		[Token(Token = "0x400145B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 _oldPosition;

		[Token(Token = "0x600159F")]
		[Address(RVA = "0x10631EC", Offset = "0x10631EC", VA = "0x10631EC")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015A0")]
		[Address(RVA = "0x10632B0", Offset = "0x10632B0", VA = "0x10632B0")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015A1")]
		[Address(RVA = "0x1063360", Offset = "0x1063360", VA = "0x1063360")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015A2")]
		[Address(RVA = "0x10634D8", Offset = "0x10634D8", VA = "0x10634D8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015A3")]
		[Address(RVA = "0x10636A0", Offset = "0x10636A0", VA = "0x10636A0")]
		private void ActionOrInContactZoneStayEvent(ColliderZoneArgs collisionArgs)
		{
		}

		[Token(Token = "0x60015A4")]
		[Address(RVA = "0x1063788", Offset = "0x1063788", VA = "0x1063788")]
		private void InteractableStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60015A5")]
		[Address(RVA = "0x106399C", Offset = "0x106399C", VA = "0x106399C")]
		private void PlaySound(AudioClip clip)
		{
		}

		[Token(Token = "0x60015A6")]
		[Address(RVA = "0x106389C", Offset = "0x106389C", VA = "0x106389C")]
		private void StopResetLerping()
		{
		}

		[Token(Token = "0x60015A7")]
		[Address(RVA = "0x10638B0", Offset = "0x10638B0", VA = "0x10638B0")]
		private void LerpToOldPosition()
		{
		}

		[Token(Token = "0x60015A8")]
		[Address(RVA = "0x10639F4", Offset = "0x10639F4", VA = "0x10639F4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85AC54", Offset = "0x85AC54")]
		private IEnumerator ResetPosition()
		{
			return null;
		}

		[Token(Token = "0x60015A9")]
		[Address(RVA = "0x1063A74", Offset = "0x1063A74", VA = "0x1063A74")]
		public TrainButtonVisualController()
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class TrainCar : TrainCarBase
	{
		[Token(Token = "0x400145C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private TrainCarBase _parentLocomotive;

		[Token(Token = "0x400145D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		protected float _distanceBehindParent;

		[Token(Token = "0x17000185")]
		public float DistanceBehindParentScaled
		{
			[Token(Token = "0x60015AA")]
			[Address(RVA = "0x1063B24", Offset = "0x1063B24", VA = "0x1063B24")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x60015AB")]
		[Address(RVA = "0x1063B34", Offset = "0x1063B34", VA = "0x1063B34", Slot = "4")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60015AC")]
		[Address(RVA = "0x1063B3C", Offset = "0x1063B3C", VA = "0x1063B3C", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60015AD")]
		[Address(RVA = "0x1063E7C", Offset = "0x1063E7C", VA = "0x1063E7C")]
		public TrainCar()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	public abstract class TrainCarBase : MonoBehaviour
	{
		[Token(Token = "0x400145E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static Vector3 OFFSET;

		[Token(Token = "0x400145F")]
		private const float WHEEL_RADIUS = 0.027f;

		[Token(Token = "0x4001460")]
		private const float TWO_PI = (float)Math.PI * 2f;

		[Token(Token = "0x4001461")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected Transform _frontWheels;

		[Token(Token = "0x4001462")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		protected Transform _rearWheels;

		[Token(Token = "0x4001463")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		protected TrainTrack _trainTrack;

		[Token(Token = "0x4001464")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		protected Transform[] _individualWheels;

		[Token(Token = "0x4001465")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x852C5C", Offset = "0x852C5C")]
		private float <Distance>k__BackingField;

		[Token(Token = "0x4001466")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		protected float scale;

		[Token(Token = "0x4001467")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Pose _frontPose;

		[Token(Token = "0x4001468")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Pose _rearPose;

		[Token(Token = "0x17000186")]
		public float Distance
		{
			[Token(Token = "0x60015AE")]
			[Address(RVA = "0x1063F94", Offset = "0x1063F94", VA = "0x1063F94")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85ACBC", Offset = "0x85ACBC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015AF")]
			[Address(RVA = "0x1063F9C", Offset = "0x1063F9C", VA = "0x1063F9C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85ACCC", Offset = "0x85ACCC")]
			protected set
			{
			}
		}

		[Token(Token = "0x17000187")]
		public float Scale
		{
			[Token(Token = "0x60015B0")]
			[Address(RVA = "0x1063FA4", Offset = "0x1063FA4", VA = "0x1063FA4")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015B1")]
			[Address(RVA = "0x1063FAC", Offset = "0x1063FAC", VA = "0x1063FAC")]
			set
			{
			}
		}

		[Token(Token = "0x60015B2")]
		[Address(RVA = "0x1063B38", Offset = "0x1063B38", VA = "0x1063B38", Slot = "4")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x60015B3")]
		[Address(RVA = "0x1063FB4", Offset = "0x1063FB4", VA = "0x1063FB4")]
		public void UpdatePose(float distance, TrainCarBase train, Pose pose)
		{
		}

		[Token(Token = "0x60015B4")]
		[Address(RVA = "0x1063B84", Offset = "0x1063B84", VA = "0x1063B84")]
		protected void UpdateCarPosition()
		{
		}

		[Token(Token = "0x60015B5")]
		[Address(RVA = "0x1063DA8", Offset = "0x1063DA8", VA = "0x1063DA8")]
		protected void RotateCarWheels()
		{
		}

		[Token(Token = "0x60015B6")]
		public abstract void UpdatePosition();

		[Token(Token = "0x60015B7")]
		[Address(RVA = "0x1063EF0", Offset = "0x1063EF0", VA = "0x1063EF0")]
		protected TrainCarBase()
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class TrainCrossingController : MonoBehaviour
	{
		[Token(Token = "0x20004ED")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849DD4", Offset = "0x849DD4")]
		private sealed class <AnimateCrossing>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40023FE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40023FF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002400")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TrainCrossingController <>4__this;

			[Token(Token = "0x4002401")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float animationLength;

			[Token(Token = "0x4002402")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <animationEndTime>5__2;

			[Token(Token = "0x4002403")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <lightBlinkDuration>5__3;

			[Token(Token = "0x4002404")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <lightBlinkStartTime>5__4;

			[Token(Token = "0x4002405")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <lightBlinkEndTime>5__5;

			[Token(Token = "0x4002406")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private Material <lightToBlinkOn>5__6;

			[Token(Token = "0x4002407")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private Material <lightToBlinkOff>5__7;

			[Token(Token = "0x4002408")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private Color <onColor>5__8;

			[Token(Token = "0x4002409")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Color <offColor>5__9;

			[Token(Token = "0x1700030B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EAB")]
				[Address(RVA = "0xFD3D34", Offset = "0xFD3D34", VA = "0xFD3D34", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EAD")]
				[Address(RVA = "0xFD3D7C", Offset = "0xFD3D7C", VA = "0xFD3D7C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EA8")]
			[Address(RVA = "0xFD3AA0", Offset = "0xFD3AA0", VA = "0xFD3AA0")]
			[DebuggerHidden]
			public <AnimateCrossing>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x6001EA9")]
			[Address(RVA = "0xFD3ACC", Offset = "0xFD3ACC", VA = "0xFD3ACC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EAA")]
			[Address(RVA = "0xFD3AD0", Offset = "0xFD3AD0", VA = "0xFD3AD0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EAC")]
			[Address(RVA = "0xFD3D3C", Offset = "0xFD3D3C", VA = "0xFD3D3C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001469")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400146A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip[] _crossingSounds;

		[Token(Token = "0x400146B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private MeshRenderer _lightSide1Renderer;

		[Token(Token = "0x400146C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private MeshRenderer _lightSide2Renderer;

		[Token(Token = "0x400146D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x400146E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _lightsSide1Mat;

		[Token(Token = "0x400146F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _lightsSide2Mat;

		[Token(Token = "0x4001470")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int _colorId;

		[Token(Token = "0x4001471")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Coroutine _xingAnimationCr;

		[Token(Token = "0x4001472")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60015B9")]
		[Address(RVA = "0x106407C", Offset = "0x106407C", VA = "0x106407C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015BA")]
		[Address(RVA = "0x10640DC", Offset = "0x10640DC", VA = "0x10640DC")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015BB")]
		[Address(RVA = "0x10641E4", Offset = "0x10641E4", VA = "0x10641E4")]
		public void CrossingButtonStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60015BC")]
		[Address(RVA = "0x106433C", Offset = "0x106433C", VA = "0x106433C")]
		private void Update()
		{
		}

		[Token(Token = "0x60015BD")]
		[Address(RVA = "0x1064244", Offset = "0x1064244", VA = "0x1064244")]
		private void ActivateTrainCrossing()
		{
		}

		[Token(Token = "0x60015BE")]
		[Address(RVA = "0x106441C", Offset = "0x106441C", VA = "0x106441C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85ACDC", Offset = "0x85ACDC")]
		private IEnumerator AnimateCrossing(float animationLength)
		{
			return null;
		}

		[Token(Token = "0x60015BF")]
		[Address(RVA = "0x10644AC", Offset = "0x10644AC", VA = "0x10644AC")]
		private void AffectMaterials(Material[] materials, Color newColor)
		{
		}

		[Token(Token = "0x60015C0")]
		[Address(RVA = "0x1064558", Offset = "0x1064558", VA = "0x1064558")]
		private void ToggleLightObjects(bool enableState)
		{
		}

		[Token(Token = "0x60015C1")]
		[Address(RVA = "0x10645B8", Offset = "0x10645B8", VA = "0x10645B8")]
		public TrainCrossingController()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	public class TrainLocomotive : TrainCarBase
	{
		[Token(Token = "0x20004EE")]
		private enum EngineSoundState
		{
			[Token(Token = "0x400240B")]
			Start,
			[Token(Token = "0x400240C")]
			AccelerateOrSetProperSpeed,
			[Token(Token = "0x400240D")]
			Stop
		}

		[Token(Token = "0x20004EF")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849DE4", Offset = "0x849DE4")]
		private sealed class <StartStopTrain>d__34 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400240E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400240F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002410")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public bool startTrain;

			[Token(Token = "0x4002411")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public TrainLocomotive <>4__this;

			[Token(Token = "0x4002412")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <endSpeed>5__2;

			[Token(Token = "0x4002413")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <timePeriodForSpeedChange>5__3;

			[Token(Token = "0x4002414")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002415")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <endTime>5__5;

			[Token(Token = "0x4002416")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <startSpeed>5__6;

			[Token(Token = "0x1700030D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB1")]
				[Address(RVA = "0xFD3FF0", Offset = "0xFD3FF0", VA = "0xFD3FF0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700030E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB3")]
				[Address(RVA = "0xFD4038", Offset = "0xFD4038", VA = "0xFD4038", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EAE")]
			[Address(RVA = "0xFD3D84", Offset = "0xFD3D84", VA = "0xFD3D84")]
			[DebuggerHidden]
			public <StartStopTrain>d__34(int <>1__state)
			{
			}

			[Token(Token = "0x6001EAF")]
			[Address(RVA = "0xFD3DB0", Offset = "0xFD3DB0", VA = "0xFD3DB0", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB0")]
			[Address(RVA = "0xFD3DB4", Offset = "0xFD3DB4", VA = "0xFD3DB4", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB2")]
			[Address(RVA = "0xFD3FF8", Offset = "0xFD3FF8", VA = "0xFD3FF8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001473")]
		private const float MIN_SPEED = 0.2f;

		[Token(Token = "0x4001474")]
		private const float MAX_SPEED = 2.7f;

		[Token(Token = "0x4001475")]
		private const float SMOKE_SPEED_MULTIPLIER = 8f;

		[Token(Token = "0x4001476")]
		private const int MAX_PARTICLES_MULTIPLIER = 3;

		[Token(Token = "0x4001477")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x852CBC", Offset = "0x852CBC")]
		protected float _initialSpeed;

		[Token(Token = "0x4001478")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x4001479")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private GameObject _decreaseSpeedButton;

		[Token(Token = "0x400147A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject _increaseSpeedButton;

		[Token(Token = "0x400147B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private GameObject _smokeButton;

		[Token(Token = "0x400147C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private GameObject _whistleButton;

		[Token(Token = "0x400147D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private GameObject _reverseButton;

		[Token(Token = "0x400147E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		private AudioSource _whistleAudioSource;

		[Token(Token = "0x400147F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private AudioClip _whistleSound;

		[Token(Token = "0x4001480")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private AudioSource _engineAudioSource;

		[Token(Token = "0x4001481")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private AudioClip[] _accelerationSounds;

		[Token(Token = "0x4001482")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private AudioClip[] _decelerationSounds;

		[Token(Token = "0x4001483")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[SerializeField]
		private AudioClip _startUpSound;

		[Token(Token = "0x4001484")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[SerializeField]
		private AudioSource _smokeStackAudioSource;

		[Token(Token = "0x4001485")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[SerializeField]
		private AudioClip _smokeSound;

		[Token(Token = "0x4001486")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		[SerializeField]
		private ParticleSystem _smoke1;

		[Token(Token = "0x4001487")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[SerializeField]
		private ParticleSystem _smoke2;

		[Token(Token = "0x4001488")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		[SerializeField]
		private TrainCarBase[] _childCars;

		[Token(Token = "0x4001489")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private bool _isMoving;

		[Token(Token = "0x400148A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		private bool _reverse;

		[Token(Token = "0x400148B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float _currentSpeed;

		[Token(Token = "0x400148C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float _speedDiv;

		[Token(Token = "0x400148D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float _standardRateOverTimeMultiplier;

		[Token(Token = "0x400148E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private int _standardMaxParticles;

		[Token(Token = "0x400148F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Coroutine _startStopTrainCr;

		[Token(Token = "0x60015C2")]
		[Address(RVA = "0x106461C", Offset = "0x106461C", VA = "0x106461C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015C3")]
		[Address(RVA = "0x1064788", Offset = "0x1064788", VA = "0x1064788")]
		private void Update()
		{
		}

		[Token(Token = "0x60015C4")]
		[Address(RVA = "0x1064794", Offset = "0x1064794", VA = "0x1064794", Slot = "5")]
		public override void UpdatePosition()
		{
		}

		[Token(Token = "0x60015C5")]
		[Address(RVA = "0x10648E4", Offset = "0x10648E4", VA = "0x10648E4")]
		public void StartStopStateChanged()
		{
		}

		[Token(Token = "0x60015C6")]
		[Address(RVA = "0x10646FC", Offset = "0x10646FC", VA = "0x10646FC")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85AD44", Offset = "0x85AD44")]
		private IEnumerator StartStopTrain(bool startTrain)
		{
			return null;
		}

		[Token(Token = "0x60015C7")]
		[Address(RVA = "0x1064944", Offset = "0x1064944", VA = "0x1064944")]
		private float PlayEngineSound(EngineSoundState engineSoundState)
		{
			return default(float);
		}

		[Token(Token = "0x60015C8")]
		[Address(RVA = "0x1064880", Offset = "0x1064880", VA = "0x1064880")]
		private void UpdateDistance()
		{
		}

		[Token(Token = "0x60015C9")]
		[Address(RVA = "0x1064B48", Offset = "0x1064B48", VA = "0x1064B48")]
		public void DecreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60015CA")]
		[Address(RVA = "0x1064C6C", Offset = "0x1064C6C", VA = "0x1064C6C")]
		public void IncreaseSpeedStateChanged()
		{
		}

		[Token(Token = "0x60015CB")]
		[Address(RVA = "0x1064BB4", Offset = "0x1064BB4", VA = "0x1064BB4")]
		private void UpdateSmokeEmissionBasedOnSpeed()
		{
		}

		[Token(Token = "0x60015CC")]
		[Address(RVA = "0x1064CD8", Offset = "0x1064CD8", VA = "0x1064CD8")]
		private float GetCurrentSmokeEmission()
		{
			return default(float);
		}

		[Token(Token = "0x60015CD")]
		[Address(RVA = "0x1064CF8", Offset = "0x1064CF8", VA = "0x1064CF8")]
		public void SmokeButtonStateChanged()
		{
		}

		[Token(Token = "0x60015CE")]
		[Address(RVA = "0x1064D84", Offset = "0x1064D84", VA = "0x1064D84")]
		public void WhistleButtonStateChanged()
		{
		}

		[Token(Token = "0x60015CF")]
		[Address(RVA = "0x1064E48", Offset = "0x1064E48", VA = "0x1064E48")]
		public void ReverseButtonStateChanged()
		{
		}

		[Token(Token = "0x60015D0")]
		[Address(RVA = "0x1064E58", Offset = "0x1064E58", VA = "0x1064E58")]
		public TrainLocomotive()
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class TrainTrack : MonoBehaviour
	{
		[Token(Token = "0x4001490")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _gridSize;

		[Token(Token = "0x4001491")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _subDivCount;

		[Token(Token = "0x4001492")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform _segmentParent;

		[Token(Token = "0x4001493")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform _trainParent;

		[Token(Token = "0x4001494")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _regnerateTrackMeshOnAwake;

		[Token(Token = "0x4001495")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private float _trainLength;

		[Token(Token = "0x4001496")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private TrackSegment[] _trackSegments;

		[Token(Token = "0x17000188")]
		public float TrackLength
		{
			[Token(Token = "0x60015D1")]
			[Address(RVA = "0xC2CDF8", Offset = "0xC2CDF8", VA = "0xC2CDF8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x60015D2")]
			[Address(RVA = "0xC2CE00", Offset = "0xC2CE00", VA = "0xC2CE00")]
			private set
			{
			}
		}

		[Token(Token = "0x60015D3")]
		[Address(RVA = "0xC2CE08", Offset = "0xC2CE08", VA = "0xC2CE08")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015D4")]
		[Address(RVA = "0xC2CFF4", Offset = "0xC2CFF4", VA = "0xC2CFF4")]
		public TrackSegment GetSegment(float distance)
		{
			return null;
		}

		[Token(Token = "0x60015D5")]
		[Address(RVA = "0xC2CE0C", Offset = "0xC2CE0C", VA = "0xC2CE0C")]
		public void Regenerate()
		{
		}

		[Token(Token = "0x60015D6")]
		[Address(RVA = "0xC2D0BC", Offset = "0xC2D0BC", VA = "0xC2D0BC")]
		private void SetScale(float ratio)
		{
		}

		[Token(Token = "0x60015D7")]
		[Address(RVA = "0xC2D1B8", Offset = "0xC2D1B8", VA = "0xC2D1B8")]
		public TrainTrack()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	public class Pose
	{
		[Token(Token = "0x4001497")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Position;

		[Token(Token = "0x4001498")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Quaternion Rotation;

		[Token(Token = "0x60015D8")]
		[Address(RVA = "0x1B6D87C", Offset = "0x1B6D87C", VA = "0x1B6D87C")]
		public Pose()
		{
		}

		[Token(Token = "0x60015D9")]
		[Address(RVA = "0x1B6D8C0", Offset = "0x1B6D8C0", VA = "0x1B6D8C0")]
		public Pose(Vector3 position, Quaternion rotation)
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class WindmillBladesController : MonoBehaviour
	{
		[Token(Token = "0x20004F0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849DF4", Offset = "0x849DF4")]
		private sealed class <LerpToSpeed>d__17 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002417")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002418")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002419")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x400241A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float goalSpeed;

			[Token(Token = "0x400241B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			private float <totalTime>5__2;

			[Token(Token = "0x400241C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <startSpeed>5__3;

			[Token(Token = "0x1700030F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EB7")]
				[Address(RVA = "0xFD4450", Offset = "0xFD4450", VA = "0xFD4450", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000310")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EB9")]
				[Address(RVA = "0xFD4498", Offset = "0xFD4498", VA = "0xFD4498", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EB4")]
			[Address(RVA = "0xFD4280", Offset = "0xFD4280", VA = "0xFD4280")]
			[DebuggerHidden]
			public <LerpToSpeed>d__17(int <>1__state)
			{
			}

			[Token(Token = "0x6001EB5")]
			[Address(RVA = "0xFD42AC", Offset = "0xFD42AC", VA = "0xFD42AC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EB6")]
			[Address(RVA = "0xFD42B0", Offset = "0xFD42B0", VA = "0xFD42B0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EB8")]
			[Address(RVA = "0xFD4458", Offset = "0xFD4458", VA = "0xFD4458", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F1")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849E04", Offset = "0x849E04")]
		private sealed class <PlaySoundDelayed>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400241D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400241E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400241F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WindmillBladesController <>4__this;

			[Token(Token = "0x4002420")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public AudioClip initial;

			[Token(Token = "0x4002421")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float timeDelayAfterInitial;

			[Token(Token = "0x4002422")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public AudioClip clip;

			[Token(Token = "0x17000311")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EBD")]
				[Address(RVA = "0xFD45A8", Offset = "0xFD45A8", VA = "0xFD45A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000312")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EBF")]
				[Address(RVA = "0xFD45F0", Offset = "0xFD45F0", VA = "0xFD45F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EBA")]
			[Address(RVA = "0xFD44A0", Offset = "0xFD44A0", VA = "0xFD44A0")]
			[DebuggerHidden]
			public <PlaySoundDelayed>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x6001EBB")]
			[Address(RVA = "0xFD44CC", Offset = "0xFD44CC", VA = "0xFD44CC", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EBC")]
			[Address(RVA = "0xFD44D0", Offset = "0xFD44D0", VA = "0xFD44D0", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EBE")]
			[Address(RVA = "0xFD45B0", Offset = "0xFD45B0", VA = "0xFD45B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001499")]
		private const float MAX_TIME = 1f;

		[Token(Token = "0x400149A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x400149B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AudioClip _windMillRotationSound;

		[Token(Token = "0x400149C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip _windMillStartSound;

		[Token(Token = "0x400149D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AudioClip _windMillStopSound;

		[Token(Token = "0x400149E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x852EA4", Offset = "0x852EA4")]
		private bool <IsMoving>k__BackingField;

		[Token(Token = "0x400149F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _currentSpeed;

		[Token(Token = "0x40014A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Coroutine _lerpSpeedCoroutine;

		[Token(Token = "0x40014A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Coroutine _audioChangeCr;

		[Token(Token = "0x40014A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private Quaternion _originalRotation;

		[Token(Token = "0x40014A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _rotAngle;

		[Token(Token = "0x17000189")]
		public bool IsMoving
		{
			[Token(Token = "0x60015DA")]
			[Address(RVA = "0xC369F8", Offset = "0xC369F8", VA = "0xC369F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85ADAC", Offset = "0x85ADAC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60015DB")]
			[Address(RVA = "0xC36A00", Offset = "0xC36A00", VA = "0xC36A00")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85ADBC", Offset = "0x85ADBC")]
			private set
			{
			}
		}

		[Token(Token = "0x60015DC")]
		[Address(RVA = "0xC36A0C", Offset = "0xC36A0C", VA = "0xC36A0C")]
		private void Start()
		{
		}

		[Token(Token = "0x60015DD")]
		[Address(RVA = "0xC36A48", Offset = "0xC36A48", VA = "0xC36A48")]
		private void Update()
		{
		}

		[Token(Token = "0x60015DE")]
		[Address(RVA = "0xC36B2C", Offset = "0xC36B2C", VA = "0xC36B2C")]
		public void SetMoveState(bool newMoveState, float goalSpeed)
		{
		}

		[Token(Token = "0x60015DF")]
		[Address(RVA = "0xC36BA0", Offset = "0xC36BA0", VA = "0xC36BA0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85ADCC", Offset = "0x85ADCC")]
		private IEnumerator LerpToSpeed(float goalSpeed)
		{
			return null;
		}

		[Token(Token = "0x60015E0")]
		[Address(RVA = "0xC36C30", Offset = "0xC36C30", VA = "0xC36C30")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85AE34", Offset = "0x85AE34")]
		private IEnumerator PlaySoundDelayed(AudioClip initial, AudioClip clip, float timeDelayAfterInitial)
		{
			return null;
		}

		[Token(Token = "0x60015E1")]
		[Address(RVA = "0xC36CF0", Offset = "0xC36CF0", VA = "0xC36CF0")]
		private void PlaySound(AudioClip clip, bool loop = false)
		{
		}

		[Token(Token = "0x60015E2")]
		[Address(RVA = "0xC36D5C", Offset = "0xC36D5C", VA = "0xC36D5C")]
		public WindmillBladesController()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	public class WindmillController : MonoBehaviour
	{
		[Token(Token = "0x40014A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject _startStopButton;

		[Token(Token = "0x40014A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _maxSpeed;

		[Token(Token = "0x40014A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private SelectionCylinder _selectionCylinder;

		[Token(Token = "0x40014A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private WindmillBladesController _bladesRotation;

		[Token(Token = "0x40014A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private InteractableTool _toolInteractingWithMe;

		[Token(Token = "0x60015E3")]
		[Address(RVA = "0xC36D64", Offset = "0xC36D64", VA = "0xC36D64")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015E4")]
		[Address(RVA = "0xC36DE4", Offset = "0xC36DE4", VA = "0xC36DE4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60015E5")]
		[Address(RVA = "0xC36EC8", Offset = "0xC36EC8", VA = "0xC36EC8")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60015E6")]
		[Address(RVA = "0xC37000", Offset = "0xC37000", VA = "0xC37000")]
		private void StartStopStateChanged(InteractableStateArgs obj)
		{
		}

		[Token(Token = "0x60015E7")]
		[Address(RVA = "0xC37080", Offset = "0xC37080", VA = "0xC37080")]
		private void Update()
		{
		}

		[Token(Token = "0x60015E8")]
		[Address(RVA = "0xC37160", Offset = "0xC37160", VA = "0xC37160")]
		public WindmillController()
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public enum EUiDisplayType
	{
		[Token(Token = "0x40014AA")]
		EUDT_WorldGeoQuad,
		[Token(Token = "0x40014AB")]
		EUDT_OverlayQuad,
		[Token(Token = "0x40014AC")]
		EUDT_None,
		[Token(Token = "0x40014AD")]
		EUDT_MaxDislayTypes
	}
	[Token(Token = "0x20002AF")]
	public class OVROverlaySample : MonoBehaviour
	{
		[Token(Token = "0x20004F2")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849E14", Offset = "0x849E14")]
		private sealed class <WaitforOVROverlay>d__30 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002423")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002424")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002425")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public OVROverlaySample <>4__this;

			[Token(Token = "0x17000313")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EC3")]
				[Address(RVA = "0x19DA090", Offset = "0x19DA090", VA = "0x19DA090", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000314")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EC5")]
				[Address(RVA = "0x19DA0D8", Offset = "0x19DA0D8", VA = "0x19DA0D8", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EC0")]
			[Address(RVA = "0x19D9E60", Offset = "0x19D9E60", VA = "0x19D9E60")]
			[DebuggerHidden]
			public <WaitforOVROverlay>d__30(int <>1__state)
			{
			}

			[Token(Token = "0x6001EC1")]
			[Address(RVA = "0x19D9E8C", Offset = "0x19D9E8C", VA = "0x19D9E8C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EC2")]
			[Address(RVA = "0x19D9E90", Offset = "0x19D9E90", VA = "0x19D9E90", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EC4")]
			[Address(RVA = "0x19DA098", Offset = "0x19DA098", VA = "0x19DA098", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40014AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool inMenu;

		[Token(Token = "0x40014AF")]
		private const string ovrOverlayID = "OVROverlayID";

		[Token(Token = "0x40014B0")]
		private const string applicationID = "ApplicationID";

		[Token(Token = "0x40014B1")]
		private const string noneID = "NoneID";

		[Token(Token = "0x40014B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Toggle applicationRadioButton;

		[Token(Token = "0x40014B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Toggle noneRadioButton;

		[Token(Token = "0x40014B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x852EE4", Offset = "0x852EE4")]
		public GameObject mainCamera;

		[Token(Token = "0x40014B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public GameObject uiCamera;

		[Token(Token = "0x40014B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject uiGeoParent;

		[Token(Token = "0x40014B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public GameObject worldspaceGeoParent;

		[Token(Token = "0x40014B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public OVROverlay cameraRenderOverlay;

		[Token(Token = "0x40014B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public OVROverlay renderingLabelOverlay;

		[Token(Token = "0x40014BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Texture applicationLabelTexture;

		[Token(Token = "0x40014BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Texture compositorLabelTexture;

		[Token(Token = "0x40014BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x852F1C", Offset = "0x852F1C")]
		public GameObject prefabForLevelLoadSim;

		[Token(Token = "0x40014BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public OVROverlay cubemapOverlay;

		[Token(Token = "0x40014BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public OVROverlay loadingTextQuadOverlay;

		[Token(Token = "0x40014BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float distanceFromCamToLoadText;

		[Token(Token = "0x40014C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float cubeSpawnRadius;

		[Token(Token = "0x40014C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float heightBetweenItems;

		[Token(Token = "0x40014C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public int numObjectsPerLevel;

		[Token(Token = "0x40014C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public int numLevels;

		[Token(Token = "0x40014C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public int numLoopsTrigger;

		[Token(Token = "0x40014C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private List<GameObject> spawnedCubes;

		[Token(Token = "0x60015E9")]
		[Address(RVA = "0x15766C8", Offset = "0x15766C8", VA = "0x15766C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60015EA")]
		[Address(RVA = "0x1576F00", Offset = "0x1576F00", VA = "0x1576F00")]
		private void Update()
		{
		}

		[Token(Token = "0x60015EB")]
		[Address(RVA = "0x1577054", Offset = "0x1577054", VA = "0x1577054")]
		private void ActivateWorldGeo()
		{
		}

		[Token(Token = "0x60015EC")]
		[Address(RVA = "0x1577194", Offset = "0x1577194", VA = "0x1577194")]
		private void ActivateOVROverlay()
		{
		}

		[Token(Token = "0x60015ED")]
		[Address(RVA = "0x15772D4", Offset = "0x15772D4", VA = "0x15772D4")]
		private void ActivateNone()
		{
		}

		[Token(Token = "0x60015EE")]
		[Address(RVA = "0x1577028", Offset = "0x1577028", VA = "0x1577028")]
		private void TriggerLoad()
		{
		}

		[Token(Token = "0x60015EF")]
		[Address(RVA = "0x15773B4", Offset = "0x15773B4", VA = "0x15773B4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85AE9C", Offset = "0x85AE9C")]
		private IEnumerator WaitforOVROverlay()
		{
			return null;
		}

		[Token(Token = "0x60015F0")]
		[Address(RVA = "0x1577434", Offset = "0x1577434", VA = "0x1577434")]
		private void TriggerUnload()
		{
		}

		[Token(Token = "0x60015F1")]
		[Address(RVA = "0x1576B20", Offset = "0x1576B20", VA = "0x1576B20")]
		private void CameraAndRenderTargetSetup()
		{
		}

		[Token(Token = "0x60015F2")]
		[Address(RVA = "0x1577590", Offset = "0x1577590", VA = "0x1577590")]
		private void SimulateLevelLoad()
		{
		}

		[Token(Token = "0x60015F3")]
		[Address(RVA = "0x1577468", Offset = "0x1577468", VA = "0x1577468")]
		private void ClearObjects()
		{
		}

		[Token(Token = "0x60015F4")]
		[Address(RVA = "0x15778A0", Offset = "0x15778A0", VA = "0x15778A0")]
		public void RadioPressed(string radioLabel, string group, Toggle t)
		{
		}

		[Token(Token = "0x60015F5")]
		[Address(RVA = "0x1577990", Offset = "0x1577990", VA = "0x1577990")]
		public OVROverlaySample()
		{
		}

		[Token(Token = "0x60015F6")]
		[Address(RVA = "0x1577A28", Offset = "0x1577A28", VA = "0x1577A28")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AF04", Offset = "0x85AF04")]
		private void <Start>b__24_0(Toggle t)
		{
		}

		[Token(Token = "0x60015F7")]
		[Address(RVA = "0x1577A88", Offset = "0x1577A88", VA = "0x1577A88")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AF14", Offset = "0x85AF14")]
		private void <Start>b__24_1(Toggle t)
		{
		}

		[Token(Token = "0x60015F8")]
		[Address(RVA = "0x1577AE8", Offset = "0x1577AE8", VA = "0x1577AE8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85AF24", Offset = "0x85AF24")]
		private void <Start>b__24_2(Toggle t)
		{
		}
	}
}
namespace OVRTouchSample
{
	[Token(Token = "0x20002B0")]
	[AttributeAttribute(Name = "RequireComponent", RVA = "0x849050", Offset = "0x849050")]
	public class Hand : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x20004F3")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849E24", Offset = "0x849E24")]
		private sealed class <>c
		{
			[Token(Token = "0x4002426")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x4002427")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<Collider, bool> <>9__28_0;

			[Token(Token = "0x6001EC7")]
			[Address(RVA = "0x19B0D64", Offset = "0x19B0D64", VA = "0x19B0D64")]
			public <>c()
			{
			}

			[Token(Token = "0x6001EC8")]
			[Address(RVA = "0x19B0D6C", Offset = "0x19B0D6C", VA = "0x19B0D6C")]
			internal bool <Start>b__28_0(Collider childCollider)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x40014C6")]
		public const string ANIM_LAYER_NAME_POINT = "Point Layer";

		[Token(Token = "0x40014C7")]
		public const string ANIM_LAYER_NAME_THUMB = "Thumb Layer";

		[Token(Token = "0x40014C8")]
		public const string ANIM_PARAM_NAME_FLEX = "Flex";

		[Token(Token = "0x40014C9")]
		public const string ANIM_PARAM_NAME_POSE = "Pose";

		[Token(Token = "0x40014CA")]
		public const float THRESH_COLLISION_FLEX = 0.9f;

		[Token(Token = "0x40014CB")]
		public const float INPUT_RATE_CHANGE = 20f;

		[Token(Token = "0x40014CC")]
		public const float COLLIDER_SCALE_MIN = 0.01f;

		[Token(Token = "0x40014CD")]
		public const float COLLIDER_SCALE_MAX = 1f;

		[Token(Token = "0x40014CE")]
		public const float COLLIDER_SCALE_PER_SECOND = 1f;

		[Token(Token = "0x40014CF")]
		public const float TRIGGER_DEBOUNCE_TIME = 0.05f;

		[Token(Token = "0x40014D0")]
		public const float THUMB_DEBOUNCE_TIME = 0.15f;

		[Token(Token = "0x40014D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40014D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40014D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HandPose m_defaultGrabPose;

		[Token(Token = "0x40014D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Collider[] m_colliders;

		[Token(Token = "0x40014D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool m_collisionEnabled;

		[Token(Token = "0x40014D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private OVRGrabber m_grabber;

		[Token(Token = "0x40014D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<Renderer> m_showAfterInputFocusAcquired;

		[Token(Token = "0x40014D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int m_animLayerIndexThumb;

		[Token(Token = "0x40014D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int m_animLayerIndexPoint;

		[Token(Token = "0x40014DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private int m_animParamIndexFlex;

		[Token(Token = "0x40014DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int m_animParamIndexPose;

		[Token(Token = "0x40014DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool m_isPointing;

		[Token(Token = "0x40014DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool m_isGivingThumbsUp;

		[Token(Token = "0x40014DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float m_pointBlend;

		[Token(Token = "0x40014DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float m_thumbsUpBlend;

		[Token(Token = "0x40014E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x40014E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float m_collisionScaleCurrent;

		[Token(Token = "0x60015F9")]
		[Address(RVA = "0xBA31D0", Offset = "0xBA31D0", VA = "0xBA31D0")]
		private void Awake()
		{
		}

		[Token(Token = "0x60015FA")]
		[Address(RVA = "0xBA3234", Offset = "0xBA3234", VA = "0xBA3234")]
		private void Start()
		{
		}

		[Token(Token = "0x60015FB")]
		[Address(RVA = "0xBA36D8", Offset = "0xBA36D8", VA = "0xBA36D8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60015FC")]
		[Address(RVA = "0xBA37CC", Offset = "0xBA37CC", VA = "0xBA37CC")]
		private void Update()
		{
		}

		[Token(Token = "0x60015FD")]
		[Address(RVA = "0xBA3938", Offset = "0xBA3938", VA = "0xBA3938")]
		private void UpdateCapTouchStates()
		{
		}

		[Token(Token = "0x60015FE")]
		[Address(RVA = "0xBA3C48", Offset = "0xBA3C48", VA = "0xBA3C48")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60015FF")]
		[Address(RVA = "0xBA3D40", Offset = "0xBA3D40", VA = "0xBA3D40")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x6001600")]
		[Address(RVA = "0xBA3EA0", Offset = "0xBA3EA0", VA = "0xBA3EA0")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x6001601")]
		[Address(RVA = "0xBA39D8", Offset = "0xBA39D8", VA = "0xBA39D8")]
		private float InputValueRateChange(bool isDown, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6001602")]
		[Address(RVA = "0xBA3A2C", Offset = "0xBA3A2C", VA = "0xBA3A2C")]
		private void UpdateAnimStates()
		{
		}

		[Token(Token = "0x6001603")]
		[Address(RVA = "0xBA357C", Offset = "0xBA357C", VA = "0xBA357C")]
		private void CollisionEnable(bool enabled)
		{
		}

		[Token(Token = "0x6001604")]
		[Address(RVA = "0xBA3FDC", Offset = "0xBA3FDC", VA = "0xBA3FDC")]
		public Hand()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	public enum HandPoseId
	{
		[Token(Token = "0x40014E3")]
		Default,
		[Token(Token = "0x40014E4")]
		Generic,
		[Token(Token = "0x40014E5")]
		PingPongBall,
		[Token(Token = "0x40014E6")]
		Controller
	}
	[Token(Token = "0x20002B2")]
	public class HandPose : MonoBehaviour
	{
		[Token(Token = "0x40014E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private bool m_allowPointing;

		[Token(Token = "0x40014E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool m_allowThumbsUp;

		[Token(Token = "0x40014E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private HandPoseId m_poseId;

		[Token(Token = "0x1700018A")]
		public bool AllowPointing
		{
			[Token(Token = "0x6001605")]
			[Address(RVA = "0xBA3FF4", Offset = "0xBA3FF4", VA = "0xBA3FF4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018B")]
		public bool AllowThumbsUp
		{
			[Token(Token = "0x6001606")]
			[Address(RVA = "0xBA3FFC", Offset = "0xBA3FFC", VA = "0xBA3FFC")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018C")]
		public HandPoseId PoseId
		{
			[Token(Token = "0x6001607")]
			[Address(RVA = "0xBA4004", Offset = "0xBA4004", VA = "0xBA4004")]
			get
			{
				return default(HandPoseId);
			}
		}

		[Token(Token = "0x6001608")]
		[Address(RVA = "0xBA400C", Offset = "0xBA400C", VA = "0xBA400C")]
		public HandPose()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	public class TouchController : MonoBehaviour
	{
		[Token(Token = "0x40014EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private OVRInput.Controller m_controller;

		[Token(Token = "0x40014EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Animator m_animator;

		[Token(Token = "0x40014EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool m_restoreOnInputAcquired;

		[Token(Token = "0x6001609")]
		[Address(RVA = "0x1061A5C", Offset = "0x1061A5C", VA = "0x1061A5C")]
		private void Update()
		{
		}

		[Token(Token = "0x600160A")]
		[Address(RVA = "0x1061D4C", Offset = "0x1061D4C", VA = "0x1061D4C")]
		private void OnInputFocusLost()
		{
		}

		[Token(Token = "0x600160B")]
		[Address(RVA = "0x1061DA8", Offset = "0x1061DA8", VA = "0x1061DA8")]
		private void OnInputFocusAcquired()
		{
		}

		[Token(Token = "0x600160C")]
		[Address(RVA = "0x1061DEC", Offset = "0x1061DEC", VA = "0x1061DEC")]
		public TouchController()
		{
		}
	}
}
namespace OVR
{
	[Token(Token = "0x20002B4")]
	public class TestScript : MonoBehaviour
	{
		[Token(Token = "0x40014ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "InspectorNoteAttribute", RVA = "0x852FD4", Offset = "0x852FD4")]
		public SoundFXRef testSound1;

		[Token(Token = "0x40014EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SoundFXRef testSound2;

		[Token(Token = "0x600160D")]
		[Address(RVA = "0x1060E3C", Offset = "0x1060E3C", VA = "0x1060E3C")]
		private void Start()
		{
		}

		[Token(Token = "0x600160E")]
		[Address(RVA = "0x1060E40", Offset = "0x1060E40", VA = "0x1060E40")]
		private void Update()
		{
		}

		[Token(Token = "0x600160F")]
		[Address(RVA = "0x1060EE0", Offset = "0x1060EE0", VA = "0x1060EE0")]
		public TestScript()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	public class AmbienceEmitter : MonoBehaviour
	{
		[Token(Token = "0x40014EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFXRef[] ambientSounds;

		[Token(Token = "0x40014F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool autoActivate;

		[Token(Token = "0x40014F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853020", Offset = "0x853020")]
		public bool autoRetrigger;

		[Token(Token = "0x40014F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x853058", Offset = "0x853058")]
		public Vector2 randomRetriggerDelaySecs;

		[Token(Token = "0x40014F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85307C", Offset = "0x85307C")]
		public Transform[] playPositions;

		[Token(Token = "0x40014F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool activated;

		[Token(Token = "0x40014F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private int playingIdx;

		[Token(Token = "0x40014F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float nextPlayTime;

		[Token(Token = "0x40014F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float fadeTime;

		[Token(Token = "0x40014F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int lastPosIdx;

		[Token(Token = "0x6001610")]
		[Address(RVA = "0x118A4C4", Offset = "0x118A4C4", VA = "0x118A4C4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001611")]
		[Address(RVA = "0x118A6A0", Offset = "0x118A6A0", VA = "0x118A6A0")]
		private void Update()
		{
		}

		[Token(Token = "0x6001612")]
		[Address(RVA = "0x118A87C", Offset = "0x118A87C", VA = "0x118A87C")]
		public void OnTriggerEnter(Collider col)
		{
		}

		[Token(Token = "0x6001613")]
		[Address(RVA = "0x118A700", Offset = "0x118A700", VA = "0x118A700")]
		public void Play()
		{
		}

		[Token(Token = "0x6001614")]
		[Address(RVA = "0x118A944", Offset = "0x118A944", VA = "0x118A944")]
		public void EnableEmitter(bool enable)
		{
		}

		[Token(Token = "0x6001615")]
		[Address(RVA = "0x118AABC", Offset = "0x118AABC", VA = "0x118AABC")]
		public AmbienceEmitter()
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public enum PreloadSounds
	{
		[Token(Token = "0x40014FA")]
		Default,
		[Token(Token = "0x40014FB")]
		Preload,
		[Token(Token = "0x40014FC")]
		ManualPreload
	}
	[Token(Token = "0x20002B7")]
	public enum Fade
	{
		[Token(Token = "0x40014FE")]
		In,
		[Token(Token = "0x40014FF")]
		Out
	}
	[Serializable]
	[Token(Token = "0x20002B8")]
	public class SoundGroup
	{
		[Token(Token = "0x4001500")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4001501")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public SoundFX[] soundList;

		[Token(Token = "0x4001502")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioMixerGroup mixerGroup;

		[Token(Token = "0x4001503")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8530B4", Offset = "0x8530B4")]
		public int maxPlayingSounds;

		[Token(Token = "0x4001504")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public PreloadSounds preloadAudio;

		[Token(Token = "0x4001505")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float volumeOverride;

		[Token(Token = "0x4001506")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public int playingSoundCount;

		[Token(Token = "0x6001616")]
		[Address(RVA = "0x1054640", Offset = "0x1054640", VA = "0x1054640")]
		public SoundGroup(string name)
		{
		}

		[Token(Token = "0x6001617")]
		[Address(RVA = "0x1054704", Offset = "0x1054704", VA = "0x1054704")]
		public SoundGroup()
		{
		}

		[Token(Token = "0x6001618")]
		[Address(RVA = "0x10528EC", Offset = "0x10528EC", VA = "0x10528EC")]
		public void IncrementPlayCount()
		{
		}

		[Token(Token = "0x6001619")]
		[Address(RVA = "0x1052C60", Offset = "0x1052C60", VA = "0x1052C60")]
		public void DecrementPlayCount()
		{
		}

		[Token(Token = "0x600161A")]
		[Address(RVA = "0x1053BC0", Offset = "0x1053BC0", VA = "0x1053BC0")]
		public bool CanPlaySound()
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002B9")]
	public class AudioManager : MonoBehaviour
	{
		[Token(Token = "0x20004F4")]
		public enum Fade
		{
			[Token(Token = "0x4002429")]
			In,
			[Token(Token = "0x400242A")]
			Out
		}

		[Token(Token = "0x20004F5")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849E34", Offset = "0x849E34")]
		private sealed class <>c__DisplayClass77_0
		{
			[Token(Token = "0x400242B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public SoundPriority priority;

			[Token(Token = "0x6001EC9")]
			[Address(RVA = "0x19AA588", Offset = "0x19AA588", VA = "0x19AA588")]
			public <>c__DisplayClass77_0()
			{
			}

			[Token(Token = "0x6001ECA")]
			[Address(RVA = "0x19AA590", Offset = "0x19AA590", VA = "0x19AA590")]
			internal bool <FindFreeEmitter>b__0(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Serializable]
		[Token(Token = "0x20004F6")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849E44", Offset = "0x849E44")]
		private sealed class <>c
		{
			[Token(Token = "0x400242C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x400242D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Predicate<SoundEmitter> <>9__77_1;

			[Token(Token = "0x6001ECC")]
			[Address(RVA = "0x19AA4EC", Offset = "0x19AA4EC", VA = "0x19AA4EC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001ECD")]
			[Address(RVA = "0x19AA4F4", Offset = "0x19AA4F4", VA = "0x19AA4F4")]
			internal bool <FindFreeEmitter>b__77_1(SoundEmitter item)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001507")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8530E0", Offset = "0x8530E0")]
		public bool makePersistent;

		[Token(Token = "0x4001508")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853118", Offset = "0x853118")]
		public bool enableSpatializedAudio;

		[Token(Token = "0x4001509")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853150", Offset = "0x853150")]
		public bool enableSpatializedFastOverride;

		[Token(Token = "0x400150A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853188", Offset = "0x853188")]
		public AudioMixer audioMixer;

		[Token(Token = "0x400150B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8531C0", Offset = "0x8531C0")]
		public AudioMixerGroup defaultMixerGroup;

		[Token(Token = "0x400150C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8531F8", Offset = "0x8531F8")]
		public AudioMixerGroup reservedMixerGroup;

		[Token(Token = "0x400150D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853230", Offset = "0x853230")]
		public AudioMixerGroup voiceChatMixerGroup;

		[Token(Token = "0x400150E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853268", Offset = "0x853268")]
		public bool verboseLogging;

		[Token(Token = "0x400150F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8532A0", Offset = "0x8532A0")]
		public int maxSoundEmitters;

		[Token(Token = "0x4001510")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8532D8", Offset = "0x8532D8")]
		public float volumeSoundFX;

		[Token(Token = "0x4001511")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853310", Offset = "0x853310")]
		public float soundFxFadeSecs;

		[Token(Token = "0x4001512")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float audioMinFallOffDistance;

		[Token(Token = "0x4001513")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float audioMaxFallOffDistance;

		[Token(Token = "0x4001514")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public SoundGroup[] soundGroupings;

		[Token(Token = "0x4001515")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Dictionary<string, SoundFX> soundFXCache;

		[Token(Token = "0x4001516")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static AudioManager theAudioManager;

		[Token(Token = "0x4001517")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static FastList<string> names;

		[Token(Token = "0x4001518")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string[] defaultSound;

		[Token(Token = "0x4001519")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static SoundFX nullSound;

		[Token(Token = "0x400151A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static bool hideWarnings;

		[Token(Token = "0x400151B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float audioMaxFallOffDistanceSqr;

		[Token(Token = "0x400151C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private SoundEmitter[] soundEmitters;

		[Token(Token = "0x400151D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private FastList<SoundEmitter> playingEmitters;

		[Token(Token = "0x400151E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private FastList<SoundEmitter> nextFreeEmitters;

		[Token(Token = "0x400151F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private MixerSnapshot currentSnapshot;

		[Token(Token = "0x4001520")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private static GameObject soundEmitterParent;

		[Token(Token = "0x4001521")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private static Transform staticListenerPosition;

		[Token(Token = "0x4001522")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static bool showPlayingEmitterCount;

		[Token(Token = "0x4001523")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		private static bool forceShowEmitterCount;

		[Token(Token = "0x4001524")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		private static bool soundEnabled;

		[Token(Token = "0x4001525")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private static readonly AnimationCurve defaultReverbZoneMix;

		[Token(Token = "0x1700018D")]
		public static bool enableSpatialization
		{
			[Token(Token = "0x600161B")]
			[Address(RVA = "0x1192BB4", Offset = "0x1192BB4", VA = "0x1192BB4")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700018E")]
		public static AudioManager Instance
		{
			[Token(Token = "0x600161C")]
			[Address(RVA = "0x1192C9C", Offset = "0x1192C9C", VA = "0x1192C9C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700018F")]
		public static float NearFallOff
		{
			[Token(Token = "0x600161D")]
			[Address(RVA = "0x1192D00", Offset = "0x1192D00", VA = "0x1192D00")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000190")]
		public static float FarFallOff
		{
			[Token(Token = "0x600161E")]
			[Address(RVA = "0x1192D70", Offset = "0x1192D70", VA = "0x1192D70")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000191")]
		public static AudioMixerGroup EmitterGroup
		{
			[Token(Token = "0x600161F")]
			[Address(RVA = "0x1192DE0", Offset = "0x1192DE0", VA = "0x1192DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000192")]
		public static AudioMixerGroup ReservedGroup
		{
			[Token(Token = "0x6001620")]
			[Address(RVA = "0x1192E50", Offset = "0x1192E50", VA = "0x1192E50")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000193")]
		public static AudioMixerGroup VoipGroup
		{
			[Token(Token = "0x6001621")]
			[Address(RVA = "0x1192EC0", Offset = "0x1192EC0", VA = "0x1192EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000194")]
		public static bool SoundEnabled
		{
			[Token(Token = "0x600162C")]
			[Address(RVA = "0x1194E78", Offset = "0x1194E78", VA = "0x1194E78")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001622")]
		[Address(RVA = "0x1192F30", Offset = "0x1192F30", VA = "0x1192F30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001623")]
		[Address(RVA = "0x1193178", Offset = "0x1193178", VA = "0x1193178")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6001624")]
		[Address(RVA = "0x1192F34", Offset = "0x1192F34", VA = "0x1192F34")]
		private void Init()
		{
		}

		[Token(Token = "0x6001625")]
		[Address(RVA = "0x1193E84", Offset = "0x1193E84", VA = "0x1193E84")]
		private void Update()
		{
		}

		[Token(Token = "0x6001626")]
		[Address(RVA = "0x11932D8", Offset = "0x11932D8", VA = "0x11932D8")]
		private void RebuildSoundFXCache()
		{
		}

		[Token(Token = "0x6001627")]
		[Address(RVA = "0x1194574", Offset = "0x1194574", VA = "0x1194574")]
		public static SoundFX FindSoundFX(string name, bool rebuildCache = false)
		{
			return null;
		}

		[Token(Token = "0x6001628")]
		[Address(RVA = "0x1194700", Offset = "0x1194700", VA = "0x1194700")]
		private static bool FindAudioManager()
		{
			return default(bool);
		}

		[Token(Token = "0x6001629")]
		[Address(RVA = "0x11948D4", Offset = "0x11948D4", VA = "0x11948D4")]
		public static GameObject GetGameObject()
		{
			return null;
		}

		[Token(Token = "0x600162A")]
		[Address(RVA = "0x11949DC", Offset = "0x11949DC", VA = "0x11949DC")]
		public static string NameMinusGroup(string name)
		{
			return null;
		}

		[Token(Token = "0x600162B")]
		[Address(RVA = "0x1194A68", Offset = "0x1194A68", VA = "0x1194A68")]
		public static string[] GetSoundFXNames(string currentValue, [Out] int currentIdx)
		{
			return null;
		}

		[Token(Token = "0x600162D")]
		[Address(RVA = "0x1194EDC", Offset = "0x1194EDC", VA = "0x1194EDC")]
		private static int CalculateMaxEmittersSize()
		{
			return default(int);
		}

		[Token(Token = "0x600162E")]
		[Address(RVA = "0x1194F50", Offset = "0x1194F50", VA = "0x1194F50")]
		private static bool ValidateEmitterIndex(int index)
		{
			return default(bool);
		}

		[Token(Token = "0x600162F")]
		[Address(RVA = "0x1193814", Offset = "0x1193814", VA = "0x1193814")]
		private void InitializeSoundSystem()
		{
		}

		[Token(Token = "0x6001630")]
		[Address(RVA = "0x1193E88", Offset = "0x1193E88", VA = "0x1193E88")]
		private void UpdateFreeEmitters()
		{
		}

		[Token(Token = "0x6001631")]
		[Address(RVA = "0x1195098", Offset = "0x1195098", VA = "0x1195098")]
		private string Fmt(int count)
		{
			return null;
		}

		[Token(Token = "0x6001632")]
		[Address(RVA = "0x11951D8", Offset = "0x11951D8", VA = "0x11951D8")]
		private string FmtFree(int count)
		{
			return null;
		}

		[Token(Token = "0x6001633")]
		[Address(RVA = "0x119531C", Offset = "0x119531C", VA = "0x119531C")]
		private void OnPreSceneLoad()
		{
		}

		[Token(Token = "0x6001634")]
		[Address(RVA = "0x1194FC4", Offset = "0x1194FC4", VA = "0x1194FC4")]
		private void ResetFreeEmitters()
		{
		}

		[Token(Token = "0x6001635")]
		[Address(RVA = "0x1195464", Offset = "0x1195464", VA = "0x1195464")]
		public static void FadeOutSoundChannel(int channel, float delaySecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001636")]
		[Address(RVA = "0x1195524", Offset = "0x1195524", VA = "0x1195524")]
		public static bool StopSound(int idx, bool fadeOut = true, bool stopReserved = false)
		{
			return default(bool);
		}

		[Token(Token = "0x6001637")]
		[Address(RVA = "0x1195640", Offset = "0x1195640", VA = "0x1195640")]
		public static void FadeInSound(int idx, float fadeTime, float volume)
		{
		}

		[Token(Token = "0x6001638")]
		[Address(RVA = "0x118A88C", Offset = "0x118A88C", VA = "0x118A88C")]
		public static void FadeInSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x6001639")]
		[Address(RVA = "0x118AA04", Offset = "0x118AA04", VA = "0x118AA04")]
		public static void FadeOutSound(int idx, float fadeTime)
		{
		}

		[Token(Token = "0x600163A")]
		[Address(RVA = "0x1195700", Offset = "0x1195700", VA = "0x1195700")]
		public static void StopAllSounds(bool fadeOut, bool stopReserved = false)
		{
		}

		[Token(Token = "0x600163B")]
		[Address(RVA = "0x11957C8", Offset = "0x11957C8", VA = "0x11957C8")]
		public void MuteAllSounds(bool mute, bool muteReserved = false)
		{
		}

		[Token(Token = "0x600163C")]
		[Address(RVA = "0x119585C", Offset = "0x119585C", VA = "0x119585C")]
		public void UnMuteAllSounds(bool unmute, bool unmuteReserved = false)
		{
		}

		[Token(Token = "0x600163D")]
		[Address(RVA = "0x1195920", Offset = "0x1195920", VA = "0x1195920")]
		public static float GetEmitterEndTime(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x600163E")]
		[Address(RVA = "0x11959C8", Offset = "0x11959C8", VA = "0x11959C8")]
		public static float SetEmitterTime(int idx, float time)
		{
			return default(float);
		}

		[Token(Token = "0x600163F")]
		[Address(RVA = "0x1195A88", Offset = "0x1195A88", VA = "0x1195A88")]
		public static int PlaySound(AudioClip clip, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitchVariance = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001640")]
		[Address(RVA = "0x1196604", Offset = "0x1196604", VA = "0x1196604")]
		private static int FindFreeEmitter(EmitterChannel src, SoundPriority priority)
		{
			return default(int);
		}

		[Token(Token = "0x6001641")]
		[Address(RVA = "0x1196CF4", Offset = "0x1196CF4", VA = "0x1196CF4")]
		public static int PlaySound(SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001642")]
		[Address(RVA = "0x1196EB8", Offset = "0x1196EB8", VA = "0x1196EB8")]
		public static int PlaySoundAt(Vector3 position, SoundFX soundFX, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001643")]
		[Address(RVA = "0x1197AC8", Offset = "0x1197AC8", VA = "0x1197AC8")]
		public static int PlayRandomSoundAt(Vector3 position, AudioClip[] clips, float volume, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001644")]
		[Address(RVA = "0x1195C74", Offset = "0x1195C74", VA = "0x1195C74")]
		public static int PlaySoundAt(Vector3 position, AudioClip clip, float volume = 1f, EmitterChannel src = EmitterChannel.Any, float delay = 0f, float pitch = 1f, bool loop = false)
		{
			return default(int);
		}

		[Token(Token = "0x6001645")]
		[Address(RVA = "0x1197BE4", Offset = "0x1197BE4", VA = "0x1197BE4")]
		public static void SetOnFinished(int emitterIdx, Action onFinished)
		{
		}

		[Token(Token = "0x6001646")]
		[Address(RVA = "0x1197CC8", Offset = "0x1197CC8", VA = "0x1197CC8")]
		public static void SetOnFinished(int emitterIdx, Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001647")]
		[Address(RVA = "0x1197DC0", Offset = "0x1197DC0", VA = "0x1197DC0")]
		public static void AttachSoundToParent(int idx, Transform parent)
		{
		}

		[Token(Token = "0x6001648")]
		[Address(RVA = "0x1197FF0", Offset = "0x1197FF0", VA = "0x1197FF0")]
		public static void DetachSoundFromParent(int idx)
		{
		}

		[Token(Token = "0x6001649")]
		[Address(RVA = "0x1198144", Offset = "0x1198144", VA = "0x1198144")]
		public static void DetachSoundsFromParent(SoundEmitter[] emitters, bool stopSounds = true)
		{
		}

		[Token(Token = "0x600164A")]
		[Address(RVA = "0x1198268", Offset = "0x1198268", VA = "0x1198268")]
		public static void SetEmitterMixerGroup(int idx, AudioMixerGroup mixerGroup)
		{
		}

		[Token(Token = "0x600164B")]
		[Address(RVA = "0x1198394", Offset = "0x1198394", VA = "0x1198394")]
		public static MixerSnapshot GetActiveSnapshot()
		{
			return null;
		}

		[Token(Token = "0x600164C")]
		[Address(RVA = "0x1198474", Offset = "0x1198474", VA = "0x1198474")]
		public static void SetCurrentSnapshot(MixerSnapshot mixerSnapshot)
		{
		}

		[Token(Token = "0x600164D")]
		[Address(RVA = "0x11985C4", Offset = "0x11985C4", VA = "0x11985C4")]
		public static void BlendWithCurrentSnapshot(MixerSnapshot blendSnapshot, float weight, float blendTime = 0f)
		{
		}

		[Token(Token = "0x600164E")]
		[Address(RVA = "0x11989DC", Offset = "0x11989DC", VA = "0x11989DC")]
		public AudioManager()
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public enum EmitterChannel
	{
		[Token(Token = "0x4001527")]
		None = -1,
		[Token(Token = "0x4001528")]
		Reserved,
		[Token(Token = "0x4001529")]
		Any
	}
	[Serializable]
	[Token(Token = "0x20002BB")]
	public class MixerSnapshot
	{
		[Token(Token = "0x400152A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioMixerSnapshot snapshot;

		[Token(Token = "0x400152B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float transitionTime;

		[Token(Token = "0x6001650")]
		[Address(RVA = "0xCEEB70", Offset = "0xCEEB70", VA = "0xCEEB70")]
		public MixerSnapshot()
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class MinMaxAttribute : PropertyAttribute
	{
		[Token(Token = "0x400152C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float minDefaultVal;

		[Token(Token = "0x400152D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxDefaultVal;

		[Token(Token = "0x400152E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float min;

		[Token(Token = "0x400152F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float max;

		[Token(Token = "0x6001651")]
		[Address(RVA = "0xCEDB44", Offset = "0xCEDB44", VA = "0xCEDB44")]
		public MinMaxAttribute(float minDefaultVal, float maxDefaultVal, float min, float max)
		{
		}
	}
	[Token(Token = "0x20002BD")]
	public class SoundEmitter : MonoBehaviour
	{
		[Token(Token = "0x20004F7")]
		public enum FadeState
		{
			[Token(Token = "0x400242F")]
			Null,
			[Token(Token = "0x4002430")]
			FadingIn,
			[Token(Token = "0x4002431")]
			FadingOut,
			[Token(Token = "0x4002432")]
			Ducking
		}

		[Token(Token = "0x20004F8")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849E54", Offset = "0x849E54")]
		private sealed class <DelayedSyncTo>d__57 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002433")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002434")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002435")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002436")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public SoundEmitter other;

			[Token(Token = "0x4002437")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public float fadeTime;

			[Token(Token = "0x4002438")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public float toVolume;

			[Token(Token = "0x17000315")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED1")]
				[Address(RVA = "0x19E29A8", Offset = "0x19E29A8", VA = "0x19E29A8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000316")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED3")]
				[Address(RVA = "0x19E29F0", Offset = "0x19E29F0", VA = "0x19E29F0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ECE")]
			[Address(RVA = "0x19E2888", Offset = "0x19E2888", VA = "0x19E2888")]
			[DebuggerHidden]
			public <DelayedSyncTo>d__57(int <>1__state)
			{
			}

			[Token(Token = "0x6001ECF")]
			[Address(RVA = "0x19E28B4", Offset = "0x19E28B4", VA = "0x19E28B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED0")]
			[Address(RVA = "0x19E28B8", Offset = "0x19E28B8", VA = "0x19E28B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED2")]
			[Address(RVA = "0x19E29B0", Offset = "0x19E29B0", VA = "0x19E29B0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004F9")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849E64", Offset = "0x849E64")]
		private sealed class <FadeSoundChannelTo>d__63 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002439")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400243A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400243B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x400243C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float toVolume;

			[Token(Token = "0x400243D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
			public float fadeTime;

			[Token(Token = "0x400243E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <start>5__2;

			[Token(Token = "0x400243F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			private float <end>5__3;

			[Token(Token = "0x4002440")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private float <startTime>5__4;

			[Token(Token = "0x4002441")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <elapsedTime>5__5;

			[Token(Token = "0x17000317")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001ED7")]
				[Address(RVA = "0xFD2C24", Offset = "0xFD2C24", VA = "0xFD2C24", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000318")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001ED9")]
				[Address(RVA = "0xFD2C6C", Offset = "0xFD2C6C", VA = "0xFD2C6C", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001ED4")]
			[Address(RVA = "0xFD2AB8", Offset = "0xFD2AB8", VA = "0xFD2AB8")]
			[DebuggerHidden]
			public <FadeSoundChannelTo>d__63(int <>1__state)
			{
			}

			[Token(Token = "0x6001ED5")]
			[Address(RVA = "0xFD2AE4", Offset = "0xFD2AE4", VA = "0xFD2AE4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001ED6")]
			[Address(RVA = "0xFD2AE8", Offset = "0xFD2AE8", VA = "0xFD2AE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001ED8")]
			[Address(RVA = "0xFD2C2C", Offset = "0xFD2C2C", VA = "0xFD2C2C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x20004FA")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849E74", Offset = "0x849E74")]
		private sealed class <FadeSoundChannel>d__64 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002442")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002443")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002444")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecs;

			[Token(Token = "0x4002445")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public Fade fadeType;

			[Token(Token = "0x4002446")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public float defaultVolume;

			[Token(Token = "0x4002447")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public SoundEmitter <>4__this;

			[Token(Token = "0x4002448")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public float fadeTime;

			[Token(Token = "0x4002449")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
			private float <start>5__2;

			[Token(Token = "0x400244A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private float <end>5__3;

			[Token(Token = "0x400244B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
			private bool <restartPlay>5__4;

			[Token(Token = "0x400244C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private float <startTime>5__5;

			[Token(Token = "0x400244D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
			private float <elapsedTime>5__6;

			[Token(Token = "0x17000319")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EDD")]
				[Address(RVA = "0x19E2C8C", Offset = "0x19E2C8C", VA = "0x19E2C8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EDF")]
				[Address(RVA = "0x19E2CD4", Offset = "0x19E2CD4", VA = "0x19E2CD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EDA")]
			[Address(RVA = "0x19E29F8", Offset = "0x19E29F8", VA = "0x19E29F8")]
			[DebuggerHidden]
			public <FadeSoundChannel>d__64(int <>1__state)
			{
			}

			[Token(Token = "0x6001EDB")]
			[Address(RVA = "0x19E2A24", Offset = "0x19E2A24", VA = "0x19E2A24", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EDC")]
			[Address(RVA = "0x19E2A28", Offset = "0x19E2A28", VA = "0x19E2A28", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EDE")]
			[Address(RVA = "0x19E2C94", Offset = "0x19E2C94", VA = "0x19E2C94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001530")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EmitterChannel channel;

		[Token(Token = "0x4001531")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool disableSpatialization;

		[Token(Token = "0x4001532")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private FadeState state;

		[NonSerialized]
		[Token(Token = "0x4001533")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public AudioSource audioSource;

		[NonSerialized]
		[Token(Token = "0x4001534")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public SoundPriority priority;

		[NonSerialized]
		[Token(Token = "0x4001535")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public ONSPAudioSource osp;

		[NonSerialized]
		[Token(Token = "0x4001536")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float endPlayTime;

		[Token(Token = "0x4001537")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform lastParentTransform;

		[NonSerialized]
		[Token(Token = "0x4001538")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public float defaultVolume;

		[NonSerialized]
		[Token(Token = "0x4001539")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Transform defaultParent;

		[NonSerialized]
		[Token(Token = "0x400153A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public int originalIdx;

		[NonSerialized]
		[Token(Token = "0x400153B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Action onFinished;

		[NonSerialized]
		[Token(Token = "0x400153C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public Action<object> onFinishedObject;

		[NonSerialized]
		[Token(Token = "0x400153D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public object onFinishedParam;

		[NonSerialized]
		[Token(Token = "0x400153E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[HideInInspector]
		public SoundGroup playingSoundGroup;

		[Token(Token = "0x17000195")]
		public float volume
		{
			[Token(Token = "0x6001652")]
			[Address(RVA = "0x1052418", Offset = "0x1052418", VA = "0x1052418")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001653")]
			[Address(RVA = "0x1052438", Offset = "0x1052438", VA = "0x1052438")]
			set
			{
			}
		}

		[Token(Token = "0x17000196")]
		public float pitch
		{
			[Token(Token = "0x6001654")]
			[Address(RVA = "0x1052458", Offset = "0x1052458", VA = "0x1052458")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001655")]
			[Address(RVA = "0x1052478", Offset = "0x1052478", VA = "0x1052478")]
			set
			{
			}
		}

		[Token(Token = "0x17000197")]
		public AudioClip clip
		{
			[Token(Token = "0x6001656")]
			[Address(RVA = "0x1052498", Offset = "0x1052498", VA = "0x1052498")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001657")]
			[Address(RVA = "0x10524B8", Offset = "0x10524B8", VA = "0x10524B8")]
			set
			{
			}
		}

		[Token(Token = "0x17000198")]
		public float time
		{
			[Token(Token = "0x6001658")]
			[Address(RVA = "0x10524D8", Offset = "0x10524D8", VA = "0x10524D8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001659")]
			[Address(RVA = "0x10524F8", Offset = "0x10524F8", VA = "0x10524F8")]
			set
			{
			}
		}

		[Token(Token = "0x17000199")]
		public float length
		{
			[Token(Token = "0x600165A")]
			[Address(RVA = "0x1052518", Offset = "0x1052518", VA = "0x1052518")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700019A")]
		public bool loop
		{
			[Token(Token = "0x600165B")]
			[Address(RVA = "0x10525CC", Offset = "0x10525CC", VA = "0x10525CC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600165C")]
			[Address(RVA = "0x10525EC", Offset = "0x10525EC", VA = "0x10525EC")]
			set
			{
			}
		}

		[Token(Token = "0x1700019B")]
		public bool mute
		{
			[Token(Token = "0x600165D")]
			[Address(RVA = "0x1052610", Offset = "0x1052610", VA = "0x1052610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600165E")]
			[Address(RVA = "0x1052630", Offset = "0x1052630", VA = "0x1052630")]
			set
			{
			}
		}

		[Token(Token = "0x1700019C")]
		public AudioVelocityUpdateMode velocityUpdateMode
		{
			[Token(Token = "0x600165F")]
			[Address(RVA = "0x1052654", Offset = "0x1052654", VA = "0x1052654")]
			get
			{
				return default(AudioVelocityUpdateMode);
			}
			[Token(Token = "0x6001660")]
			[Address(RVA = "0x1052674", Offset = "0x1052674", VA = "0x1052674")]
			set
			{
			}
		}

		[Token(Token = "0x1700019D")]
		public bool isPlaying
		{
			[Token(Token = "0x6001661")]
			[Address(RVA = "0x1052694", Offset = "0x1052694", VA = "0x1052694")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001662")]
		[Address(RVA = "0x10526B4", Offset = "0x10526B4", VA = "0x10526B4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001663")]
		[Address(RVA = "0x10528A4", Offset = "0x10528A4", VA = "0x10528A4")]
		public void SetPlayingSoundGroup(SoundGroup soundGroup)
		{
		}

		[Token(Token = "0x6001664")]
		[Address(RVA = "0x1052928", Offset = "0x1052928", VA = "0x1052928")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x6001665")]
		[Address(RVA = "0x1052930", Offset = "0x1052930", VA = "0x1052930")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x6001666")]
		[Address(RVA = "0x1052964", Offset = "0x1052964", VA = "0x1052964")]
		public void SetChannel(int _channel)
		{
		}

		[Token(Token = "0x6001667")]
		[Address(RVA = "0x105296C", Offset = "0x105296C", VA = "0x105296C")]
		public void SetDefaultParent(Transform parent)
		{
		}

		[Token(Token = "0x6001668")]
		[Address(RVA = "0x1052974", Offset = "0x1052974", VA = "0x1052974")]
		public void SetAudioMixer(AudioMixerGroup _mixer)
		{
		}

		[Token(Token = "0x6001669")]
		[Address(RVA = "0x1052A18", Offset = "0x1052A18", VA = "0x1052A18")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600166A")]
		[Address(RVA = "0x1052A84", Offset = "0x1052A84", VA = "0x1052A84")]
		public void Play()
		{
		}

		[Token(Token = "0x600166B")]
		[Address(RVA = "0x1052AE4", Offset = "0x1052AE4", VA = "0x1052AE4")]
		public void Pause()
		{
		}

		[Token(Token = "0x600166C")]
		[Address(RVA = "0x1052B1C", Offset = "0x1052B1C", VA = "0x1052B1C")]
		public void Stop()
		{
		}

		[Token(Token = "0x600166D")]
		[Address(RVA = "0x1052C9C", Offset = "0x1052C9C", VA = "0x1052C9C")]
		private int GetSampleTime()
		{
			return default(int);
		}

		[Token(Token = "0x600166E")]
		[Address(RVA = "0x1052CF4", Offset = "0x1052CF4", VA = "0x1052CF4")]
		public void ParentTo(Transform parent)
		{
		}

		[Token(Token = "0x600166F")]
		[Address(RVA = "0x1052E20", Offset = "0x1052E20", VA = "0x1052E20")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x6001670")]
		[Address(RVA = "0x1052EEC", Offset = "0x1052EEC", VA = "0x1052EEC")]
		public void ResetParent(Transform parent)
		{
		}

		[Token(Token = "0x6001671")]
		[Address(RVA = "0x1052F34", Offset = "0x1052F34", VA = "0x1052F34")]
		public void SyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001672")]
		[Address(RVA = "0x1052F60", Offset = "0x1052F60", VA = "0x1052F60")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85AF34", Offset = "0x85AF34")]
		private IEnumerator DelayedSyncTo(SoundEmitter other, float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001673")]
		[Address(RVA = "0x1053008", Offset = "0x1053008", VA = "0x1053008")]
		public void FadeTo(float fadeTime, float toVolume)
		{
		}

		[Token(Token = "0x6001674")]
		[Address(RVA = "0x1053110", Offset = "0x1053110", VA = "0x1053110")]
		public void FadeIn(float fadeTime, float defaultVolume)
		{
		}

		[Token(Token = "0x6001675")]
		[Address(RVA = "0x105323C", Offset = "0x105323C", VA = "0x105323C")]
		public void FadeIn(float fadeTime)
		{
		}

		[Token(Token = "0x6001676")]
		[Address(RVA = "0x10532B4", Offset = "0x10532B4", VA = "0x10532B4")]
		public void FadeOut(float fadeTime)
		{
		}

		[Token(Token = "0x6001677")]
		[Address(RVA = "0x105334C", Offset = "0x105334C", VA = "0x105334C")]
		public void FadeOutDelayed(float delayedSecs, float fadeTime)
		{
		}

		[Token(Token = "0x6001678")]
		[Address(RVA = "0x105307C", Offset = "0x105307C", VA = "0x105307C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85AF9C", Offset = "0x85AF9C")]
		private IEnumerator FadeSoundChannelTo(float fadeTime, float toVolume)
		{
			return null;
		}

		[Token(Token = "0x6001679")]
		[Address(RVA = "0x105318C", Offset = "0x105318C", VA = "0x105318C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B004", Offset = "0x85B004")]
		private IEnumerator FadeSoundChannel(float delaySecs, float fadeTime, Fade fadeType, float defaultVolume)
		{
			return null;
		}

		[Token(Token = "0x600167A")]
		[Address(RVA = "0x10533E8", Offset = "0x10533E8", VA = "0x10533E8")]
		public SoundEmitter()
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public enum SoundFXNext
	{
		[Token(Token = "0x4001540")]
		Random,
		[Token(Token = "0x4001541")]
		Sequential
	}
	[Token(Token = "0x20002BF")]
	public enum FreqHint
	{
		[Token(Token = "0x4001543")]
		None,
		[Token(Token = "0x4001544")]
		Wide,
		[Token(Token = "0x4001545")]
		Narrow
	}
	[Token(Token = "0x20002C0")]
	public enum SoundPriority
	{
		[Token(Token = "0x4001547")]
		VeryLow = -2,
		[Token(Token = "0x4001548")]
		Low,
		[Token(Token = "0x4001549")]
		Default,
		[Token(Token = "0x400154A")]
		High,
		[Token(Token = "0x400154B")]
		VeryHigh
	}
	[Serializable]
	[Token(Token = "0x20002C1")]
	public class OSPProps
	{
		[Token(Token = "0x400154C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8533F8", Offset = "0x8533F8")]
		public bool enableSpatialization;

		[Token(Token = "0x400154D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853430", Offset = "0x853430")]
		public bool useFastOverride;

		[Token(Token = "0x400154E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853468", Offset = "0x853468")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x853468", Offset = "0x853468")]
		public float gain;

		[Token(Token = "0x400154F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8534BC", Offset = "0x8534BC")]
		public bool enableInvSquare;

		[Token(Token = "0x4001550")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8534F4", Offset = "0x8534F4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8534F4", Offset = "0x8534F4")]
		public float volumetric;

		[Token(Token = "0x4001551")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85354C", Offset = "0x85354C")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x85354C", Offset = "0x85354C")]
		public Vector2 invSquareFalloff;

		[Token(Token = "0x600167B")]
		[Address(RVA = "0x1574EB0", Offset = "0x1574EB0", VA = "0x1574EB0")]
		public OSPProps()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C2")]
	public class SoundFX
	{
		[Token(Token = "0x4001552")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8535AC", Offset = "0x8535AC")]
		public string name;

		[Token(Token = "0x4001553")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8535E4", Offset = "0x8535E4")]
		public SoundFXNext playback;

		[Token(Token = "0x4001554")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85361C", Offset = "0x85361C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85361C", Offset = "0x85361C")]
		public float volume;

		[Token(Token = "0x4001555")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853670", Offset = "0x853670")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x853670", Offset = "0x853670")]
		public Vector2 pitchVariance;

		[Token(Token = "0x4001556")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8536CC", Offset = "0x8536CC")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8536CC", Offset = "0x8536CC")]
		public Vector2 falloffDistance;

		[Token(Token = "0x4001557")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85372C", Offset = "0x85372C")]
		public AudioRolloffMode falloffCurve;

		[Token(Token = "0x4001558")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853764", Offset = "0x853764")]
		public AnimationCurve volumeFalloffCurve;

		[Token(Token = "0x4001559")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85379C", Offset = "0x85379C")]
		public AnimationCurve reverbZoneMix;

		[Token(Token = "0x400155A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8537D4", Offset = "0x8537D4")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8537D4", Offset = "0x8537D4")]
		public float spread;

		[Token(Token = "0x400155B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85382C", Offset = "0x85382C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x85382C", Offset = "0x85382C")]
		public float pctChanceToPlay;

		[Token(Token = "0x400155C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853880", Offset = "0x853880")]
		public SoundPriority priority;

		[Token(Token = "0x400155D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8538B8", Offset = "0x8538B8")]
		[AttributeAttribute(Name = "MinMaxAttribute", RVA = "0x8538B8", Offset = "0x8538B8")]
		public Vector2 delay;

		[Token(Token = "0x400155E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x853914", Offset = "0x853914")]
		public bool looping;

		[Token(Token = "0x400155F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public OSPProps ospProps;

		[Token(Token = "0x4001560")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x85394C", Offset = "0x85394C")]
		public AudioClip[] soundClips;

		[Token(Token = "0x4001561")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public bool visibilityToggle;

		[NonSerialized]
		[Token(Token = "0x4001562")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private SoundGroup soundGroup;

		[Token(Token = "0x4001563")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private int lastIdx;

		[Token(Token = "0x4001564")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private int playingIdx;

		[Token(Token = "0x1700019E")]
		public int Length
		{
			[Token(Token = "0x600167D")]
			[Address(RVA = "0x1053938", Offset = "0x1053938", VA = "0x1053938")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x1700019F")]
		public bool IsValid
		{
			[Token(Token = "0x600167E")]
			[Address(RVA = "0x1053958", Offset = "0x1053958", VA = "0x1053958")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001A0")]
		public SoundGroup Group
		{
			[Token(Token = "0x600167F")]
			[Address(RVA = "0x10539F8", Offset = "0x10539F8", VA = "0x10539F8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001680")]
			[Address(RVA = "0x1053A00", Offset = "0x1053A00", VA = "0x1053A00")]
			set
			{
			}
		}

		[Token(Token = "0x170001A1")]
		public float MaxFalloffDistSquared
		{
			[Token(Token = "0x6001681")]
			[Address(RVA = "0x1053A08", Offset = "0x1053A08", VA = "0x1053A08")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x170001A2")]
		public float GroupVolumeOverride
		{
			[Token(Token = "0x6001682")]
			[Address(RVA = "0x1053A14", Offset = "0x1053A14", VA = "0x1053A14")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x600167C")]
		[Address(RVA = "0x1053400", Offset = "0x1053400", VA = "0x1053400")]
		public SoundFX()
		{
		}

		[Token(Token = "0x6001683")]
		[Address(RVA = "0x1053A2C", Offset = "0x1053A2C", VA = "0x1053A2C")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001684")]
		[Address(RVA = "0x1053AFC", Offset = "0x1053AFC", VA = "0x1053AFC")]
		public AudioMixerGroup GetMixerGroup(AudioMixerGroup defaultMixerGroup)
		{
			return null;
		}

		[Token(Token = "0x6001685")]
		[Address(RVA = "0x1053B98", Offset = "0x1053B98", VA = "0x1053B98")]
		public bool ReachedGroupPlayLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6001686")]
		[Address(RVA = "0x1053BE0", Offset = "0x1053BE0", VA = "0x1053BE0")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001687")]
		[Address(RVA = "0x1053CD8", Offset = "0x1053CD8", VA = "0x1053CD8")]
		public float GetPitch()
		{
			return default(float);
		}

		[Token(Token = "0x6001688")]
		[Address(RVA = "0x1053CE4", Offset = "0x1053CE4", VA = "0x1053CE4")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001689")]
		[Address(RVA = "0x1053DC0", Offset = "0x1053DC0", VA = "0x1053DC0")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volumeOverride = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x600168A")]
		[Address(RVA = "0x1053ED4", Offset = "0x1053ED4", VA = "0x1053ED4")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600168B")]
		[Address(RVA = "0x1053F60", Offset = "0x1053F60", VA = "0x1053F60")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600168C")]
		[Address(RVA = "0x1053FF4", Offset = "0x1053FF4", VA = "0x1053FF4")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600168D")]
		[Address(RVA = "0x1054080", Offset = "0x1054080", VA = "0x1054080")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600168E")]
		[Address(RVA = "0x105410C", Offset = "0x105410C", VA = "0x105410C")]
		public void DetachFromParent()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002C3")]
	public class SoundFXRef
	{
		[Token(Token = "0x4001565")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string soundFXName;

		[Token(Token = "0x4001566")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool initialized;

		[Token(Token = "0x4001567")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private SoundFX soundFXCached;

		[Token(Token = "0x170001A3")]
		public SoundFX soundFX
		{
			[Token(Token = "0x600168F")]
			[Address(RVA = "0x1054184", Offset = "0x1054184", VA = "0x1054184")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001A4")]
		public string name
		{
			[Token(Token = "0x6001690")]
			[Address(RVA = "0x10542A8", Offset = "0x10542A8", VA = "0x10542A8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001691")]
			[Address(RVA = "0x10542B0", Offset = "0x10542B0", VA = "0x10542B0")]
			set
			{
			}
		}

		[Token(Token = "0x170001A5")]
		public int Length
		{
			[Token(Token = "0x6001693")]
			[Address(RVA = "0x10542D8", Offset = "0x10542D8", VA = "0x10542D8")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001A6")]
		public bool IsValid
		{
			[Token(Token = "0x6001694")]
			[Address(RVA = "0x105431C", Offset = "0x105431C", VA = "0x105431C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x6001692")]
		[Address(RVA = "0x10541B4", Offset = "0x10541B4", VA = "0x10541B4")]
		private void Init()
		{
		}

		[Token(Token = "0x6001695")]
		[Address(RVA = "0x1054354", Offset = "0x1054354", VA = "0x1054354")]
		public AudioClip GetClip()
		{
			return null;
		}

		[Token(Token = "0x6001696")]
		[Address(RVA = "0x105438C", Offset = "0x105438C", VA = "0x105438C")]
		public float GetClipLength(int idx)
		{
			return default(float);
		}

		[Token(Token = "0x6001697")]
		[Address(RVA = "0x10543CC", Offset = "0x10543CC", VA = "0x10543CC")]
		public int PlaySound(float delaySecs = 0f)
		{
			return default(int);
		}

		[Token(Token = "0x6001698")]
		[Address(RVA = "0x1054414", Offset = "0x1054414", VA = "0x1054414")]
		public int PlaySoundAt(Vector3 pos, float delaySecs = 0f, float volume = 1f, float pitchMultiplier = 1f)
		{
			return default(int);
		}

		[Token(Token = "0x6001699")]
		[Address(RVA = "0x1054494", Offset = "0x1054494", VA = "0x1054494")]
		public void SetOnFinished(Action onFinished)
		{
		}

		[Token(Token = "0x600169A")]
		[Address(RVA = "0x10544D4", Offset = "0x10544D4", VA = "0x10544D4")]
		public void SetOnFinished(Action<object> onFinished, object obj)
		{
		}

		[Token(Token = "0x600169B")]
		[Address(RVA = "0x1054524", Offset = "0x1054524", VA = "0x1054524")]
		public bool StopSound()
		{
			return default(bool);
		}

		[Token(Token = "0x600169C")]
		[Address(RVA = "0x105455C", Offset = "0x105455C", VA = "0x105455C")]
		public void AttachToParent(Transform parent)
		{
		}

		[Token(Token = "0x600169D")]
		[Address(RVA = "0x105459C", Offset = "0x105459C", VA = "0x105459C")]
		public void DetachFromParent()
		{
		}

		[Token(Token = "0x600169E")]
		[Address(RVA = "0x10545D4", Offset = "0x10545D4", VA = "0x10545D4")]
		public SoundFXRef()
		{
		}
	}
}
namespace MagicLightProbes
{
	[Token(Token = "0x20002C4")]
	public class MLPDataSaver
	{
		[Token(Token = "0x600169F")]
		public static void SaveData<T>(T data, string fullFilePath, string consoleString = "")
		{
		}

		[Token(Token = "0x60016A0")]
		public static T LoadData<T>(T dataRecipient, string fullFilePath, string consoleStringSuccess = "", string consoleStringFail = "")
		{
			return (T)null;
		}

		[Token(Token = "0x60016A1")]
		[Address(RVA = "0xCE7664", Offset = "0xCE7664", VA = "0xCE7664")]
		public MLPDataSaver()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	public static class TransformExtensions
	{
		[Token(Token = "0x60016A2")]
		[Address(RVA = "0xC33388", Offset = "0xC33388", VA = "0xC33388")]
		public static bool MLP_IsVisibleFrom(this Transform transform, Camera camera)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002C6")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8490C8", Offset = "0x8490C8")]
	public class MagicLightProbes : MonoBehaviour
	{
		[Token(Token = "0x20004FB")]
		public struct VolumeParameters
		{
			[Token(Token = "0x400244E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int volumeIndex;

			[Token(Token = "0x400244F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public Vector3 position;

			[Token(Token = "0x4002450")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public Vector3 demensions;

			[Token(Token = "0x6001EE0")]
			[Address(RVA = "0x19D6540", Offset = "0x19D6540", VA = "0x19D6540")]
			public VolumeParameters(int _volumeIndex, Vector3 _position, Vector3 _demensions)
			{
			}
		}

		[Token(Token = "0x20004FC")]
		public enum FillingMode
		{
			[Token(Token = "0x4002452")]
			VerticalDublicating,
			[Token(Token = "0x4002453")]
			FullFilling,
			[Token(Token = "0x4002454")]
			SeparateFilling
		}

		[Token(Token = "0x20004FD")]
		public enum Workflow
		{
			[Token(Token = "0x4002456")]
			Simple,
			[Token(Token = "0x4002457")]
			Advanced
		}

		[Token(Token = "0x20004FE")]
		public enum BoundsDisplayMode
		{
			[Token(Token = "0x4002459")]
			Always,
			[Token(Token = "0x400245A")]
			OnSelection
		}

		[Token(Token = "0x20004FF")]
		public enum DebugPasses
		{
			[Token(Token = "0x400245C")]
			MaximumHeight,
			[Token(Token = "0x400245D")]
			GeometryCollision,
			[Token(Token = "0x400245E")]
			GeometryIntersections,
			[Token(Token = "0x400245F")]
			NearGeometry,
			[Token(Token = "0x4002460")]
			OutOfRange,
			[Token(Token = "0x4002461")]
			OutOfRangeBorders,
			[Token(Token = "0x4002462")]
			ShadingBorders,
			[Token(Token = "0x4002463")]
			ContrastAreas,
			[Token(Token = "0x4002464")]
			NearLights,
			[Token(Token = "0x4002465")]
			LightIntensity,
			[Token(Token = "0x4002466")]
			UnlitProbes,
			[Token(Token = "0x4002467")]
			EqualProbes,
			[Token(Token = "0x4002468")]
			GeometryEdges,
			[Token(Token = "0x4002469")]
			EqualColor
		}

		[Token(Token = "0x2000500")]
		public enum DrawModes
		{
			[Token(Token = "0x400246B")]
			Accepted,
			[Token(Token = "0x400246C")]
			Culled,
			[Token(Token = "0x400246D")]
			Both
		}

		[Token(Token = "0x2000501")]
		public enum CalculationTarget
		{
			[Token(Token = "0x400246F")]
			GeometryEdges,
			[Token(Token = "0x4002470")]
			GeneralCalculation
		}

		[Serializable]
		[Token(Token = "0x2000502")]
		private struct TempPointData
		{
			[Token(Token = "0x4002471")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float xPos;

			[Token(Token = "0x4002472")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float yPos;

			[Token(Token = "0x4002473")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public float zPos;

			[Token(Token = "0x6001EE1")]
			[Address(RVA = "0x19D6534", Offset = "0x19D6534", VA = "0x19D6534")]
			public TempPointData(Vector3 _position)
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000503")]
		public class WorkPathFoundEvent : UnityEvent<string>
		{
			[Token(Token = "0x6001EE2")]
			[Address(RVA = "0x19D6554", Offset = "0x19D6554", VA = "0x19D6554")]
			public WorkPathFoundEvent()
			{
			}
		}

		[Token(Token = "0x4001568")]
		private const string COMPUTE_SHADERS_FOLDER = "/Passes/Compute Shaders/";

		[Token(Token = "0x4001569")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IEnumerator colorThresholdRecalculationRoutine;

		[Token(Token = "0x400156A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IEnumerator lightProbesVolumeCalculatingRoutine;

		[Token(Token = "0x400156B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IEnumerator lightProbesVolumeCalculatingSubRoutine;

		[Token(Token = "0x400156C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IEnumerator executingPassesRoutine;

		[Token(Token = "0x400156D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IEnumerator volumeDivideingRoutine;

		[Token(Token = "0x400156E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<string> groundAndFloorObjects;

		[Token(Token = "0x400156F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<string> storedGroundAndFloorKeywords;

		[Token(Token = "0x4001570")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public GameObject probesVolume;

		[Token(Token = "0x4001571")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useDynamicDensity;

		[Token(Token = "0x4001572")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float volumeSpacing;

		[Token(Token = "0x4001573")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public float volumeSpacingMin;

		[Token(Token = "0x4001574")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float volumeSpacingMax;

		[Token(Token = "0x4001575")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float cornersDetectionThreshold;

		[Token(Token = "0x4001576")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public float cornersDetectionThresholdMin;

		[Token(Token = "0x4001577")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float cornersDetectionThresholdMax;

		[Token(Token = "0x4001578")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public float lastCornersDetectionThreshold;

		[Token(Token = "0x4001579")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public float lastCornersDetectionThresholdMin;

		[Token(Token = "0x400157A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public float lastCornersDetectionThresholdMax;

		[Token(Token = "0x400157B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public int lastMaxProbesInVolume;

		[Token(Token = "0x400157C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public int maxProbesInVolume;

		[Token(Token = "0x400157D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public int defaultMaxProbesCount;

		[Token(Token = "0x400157E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float lastVolumeSpacing;

		[Token(Token = "0x400157F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float lastVolumeSpacingMin;

		[Token(Token = "0x4001580")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		public float lastVolumeSpacingMax;

		[Token(Token = "0x4001581")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public bool volumeSpacingChanged;

		[Token(Token = "0x4001582")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x99")]
		public bool tooManySubVolumes;

		[Token(Token = "0x4001583")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		public FillingMode fillingMode;

		[Token(Token = "0x4001584")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Workflow workflow;

		[Token(Token = "0x4001585")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		public float maxHeightAboveGeometry;

		[Token(Token = "0x4001586")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public float lastMaxHeightAboveGeometry;

		[Token(Token = "0x4001587")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		public float maxHeightAboveTerrain;

		[Token(Token = "0x4001588")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool considerDistanceToLights;

		[Token(Token = "0x4001589")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public float lightIntensityTreshold;

		[Token(Token = "0x400158A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public float colorTreshold;

		[Token(Token = "0x400158B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float collisionDetectionRadius;

		[Token(Token = "0x400158C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool saveProbesNearbyGeometry;

		[Token(Token = "0x400158D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public float cornerProbesSpacing;

		[Token(Token = "0x400158E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public float nearbyGeometryDetectionRadius;

		[Token(Token = "0x400158F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		public float nearbyGeometryDetectionRadiusMin;

		[Token(Token = "0x4001590")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public float nearbyGeometryDetectionRadiusMax;

		[Token(Token = "0x4001591")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		public float distanceFromNearbyGeometry;

		[Token(Token = "0x4001592")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public bool fillEquivalentVolume;

		[Token(Token = "0x4001593")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		public float equivalentVolumeFillingRate;

		[Token(Token = "0x4001594")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public bool fillUnlitVolume;

		[Token(Token = "0x4001595")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE1")]
		public bool fillFreeVolume;

		[Token(Token = "0x4001596")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		public float unlitVolumeFillingRate;

		[Token(Token = "0x4001597")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public float freeVolumeFillingRate;

		[Token(Token = "0x4001598")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		public bool cullAcceptedVolume;

		[Token(Token = "0x4001599")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		public float acceptedVolumeFillingRate;

		[Token(Token = "0x400159A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		public float nearbyGeometryVolumeFillingRate;

		[Token(Token = "0x400159B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		public float verticalDublicatingHeight;

		[Token(Token = "0x400159C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		public float verticalDublicatingStep;

		[Token(Token = "0x400159D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		public LayerMask raycastFilter;

		[Token(Token = "0x400159E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		public List<MLPLight> excludedLights;

		[Token(Token = "0x400159F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		public LayerMask layerMask;

		[Token(Token = "0x40015A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x114")]
		public int firstCollisionLayer;

		[Token(Token = "0x40015A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		public bool useMultithreading;

		[Token(Token = "0x40015A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		public GameObject previousSelection;

		[Token(Token = "0x40015A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		public bool unloaded;

		[Token(Token = "0x40015A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x129")]
		public bool sceneChanging;

		[Token(Token = "0x40015A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x12A")]
		public bool waitForPrevious;

		[Token(Token = "0x40015A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		public MagicLightProbes previousVolume;

		[Token(Token = "0x40015A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		public bool optimizeForMixedLighting;

		[Token(Token = "0x40015A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x139")]
		public bool lastOptimizeForMixedLightingValue;

		[Token(Token = "0x40015A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13A")]
		public bool lastUseDynamicDensityValue;

		[Token(Token = "0x40015AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13B")]
		public bool preventLeakageThroughWalls;

		[Token(Token = "0x40015AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13C")]
		public bool useVolumeBottom;

		[Token(Token = "0x40015AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x13D")]
		public bool placeProbesOnGeometryEdges;

		[Token(Token = "0x40015AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		public float lastColorThreshold;

		[Token(Token = "0x40015AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x144")]
		public float lastLightIntensityThreshold;

		[Token(Token = "0x40015AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		public float lastEquivalentVolumeFillingRate;

		[Token(Token = "0x40015B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
		public float lastUnlitVolumeFillingRate;

		[Token(Token = "0x40015B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		public float lastFreeVolumeFillingRate;

		[Token(Token = "0x40015B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x154")]
		public float lastCornerProbesSpacing;

		[Token(Token = "0x40015B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		public float lastDistanceFromGeometry;

		[Token(Token = "0x40015B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x15C")]
		public bool debugMode;

		[Token(Token = "0x40015B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		public float debugObjectScale;

		[Token(Token = "0x40015B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x164")]
		public BoundsDisplayMode boundsDisplayMode;

		[Token(Token = "0x40015B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		public DebugPasses debugPass;

		[Token(Token = "0x40015B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x16C")]
		public DrawModes drawMode;

		[Token(Token = "0x40015B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		public bool debugShowLightIntensity;

		[Token(Token = "0x40015BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x171")]
		public bool showPreviewGrid;

		[Token(Token = "0x40015BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x172")]
		public bool nextStep;

		[Token(Token = "0x40015BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x173")]
		public bool cullByColor;

		[Token(Token = "0x40015BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x174")]
		public bool forceSaveProbesOnShadingBorders;

		[Token(Token = "0x40015BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		public string dataPath;

		[Token(Token = "0x40015BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		public string workPath;

		[Token(Token = "0x40015C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		public bool workPathFound;

		[Token(Token = "0x40015C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		public List<Vector3> localFinishedPositions;

		[Token(Token = "0x40015C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		public ComputeShader calculateVolumeFilling;

		[Token(Token = "0x40015C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		public ComputeShader calculateProbeSpacing;

		[Token(Token = "0x40015C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		public ComputeShader calculateDistanceFromGeometry;

		[Token(Token = "0x40015C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		public MLPVolume currentVolume;

		[Token(Token = "0x40015C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		public MLPQuickEditing quickEditingComponent;

		[Token(Token = "0x40015C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		public bool recalculationRequired;

		[Token(Token = "0x40015C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		private List<Collider> lightColliders;

		[Token(Token = "0x40015C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		private List<Collider> objectColliders;

		[Token(Token = "0x40015CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		private List<MLPPointData> finalDebugAcceptedPoints;

		[Token(Token = "0x40015CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		private List<MLPPointData> finalDebugCulledPoints;

		[Token(Token = "0x40015CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		private List<GameObject> tempObjects;

		[Token(Token = "0x40015CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		private List<GameObject> temporarilyDisabledDynamicObjects;

		[Token(Token = "0x40015CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		private List<GameObject> staticObjectsWithoutCollider;

		[Token(Token = "0x40015CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		private GameObject combinedVolumeObject;

		[Token(Token = "0x40015D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		private VolumeParameters currentEditingVolume;

		[Token(Token = "0x40015D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x224")]
		private Vector3 currentSelectedObjectLastPosition;

		[Token(Token = "0x40015D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		private GameObject lastSelectedObject;

		[Token(Token = "0x40015D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		public bool cancelCombination;

		[Token(Token = "0x40015D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		public List<IEnumerator> passesToExecute;

		[Token(Token = "0x40015D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		public List<GameObject> staticObjects;

		[Token(Token = "0x40015D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		public List<MLPLight> lights;

		[Token(Token = "0x40015D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		public List<MLPPointData> tmpSharedPointsArray;

		[Token(Token = "0x40015D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		public List<MLPPointData> tmpOutOfRangePoints;

		[Token(Token = "0x40015D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		public List<MLPPointData> tmpOutOfMaxHeightPoints;

		[Token(Token = "0x40015DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		public List<MLPPointData> tmpGeometryCollisionPoints;

		[Token(Token = "0x40015DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		public List<MLPPointData> tmpContrastOnOutOfRangePoints;

		[Token(Token = "0x40015DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		public List<MLPPointData> tmpContrastShadingBordersPoints;

		[Token(Token = "0x40015DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		public List<MLPPointData> tmpUnlitPoints;

		[Token(Token = "0x40015DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x290")]
		public List<MLPPointData> tmpFreePoints;

		[Token(Token = "0x40015DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x298")]
		public List<MLPPointData> tmpNearbyGeometryPoints;

		[Token(Token = "0x40015E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A0")]
		public List<MLPPointData> tmpPointsNearGeometryIntersections;

		[Token(Token = "0x40015E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A8")]
		public List<MLPPointData> tmpNearbyLightsPoints;

		[Token(Token = "0x40015E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B0")]
		public List<MLPPointData> tmpEqualPoints;

		[Token(Token = "0x40015E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B8")]
		public List<MLPPointData> debugCulledPoints;

		[Token(Token = "0x40015E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C0")]
		public List<MLPPointData> debugAcceptedPoints;

		[Token(Token = "0x40015E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C8")]
		public List<GameObject> subVolumesDivided;

		[Token(Token = "0x40015E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D0")]
		public List<Vector3> points;

		[Token(Token = "0x40015E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D8")]
		public List<VolumeParameters> innerVolumes;

		[Token(Token = "0x40015E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E0")]
		public List<VolumeParameters> subVolumesParameters;

		[Token(Token = "0x40015E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E8")]
		public List<MagicLightProbes> innerVolumesObjects;

		[Token(Token = "0x40015EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F0")]
		public List<LayerMask> layerMasks;

		[Token(Token = "0x40015EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2F8")]
		public List<Vector3> transformedPoints;

		[Token(Token = "0x40015EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x300")]
		public string assetEditorPath;

		[Token(Token = "0x40015ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x308")]
		public MagicLightProbes parentVolume;

		[Token(Token = "0x40015EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool operationalDataLost;

		[Token(Token = "0x40015EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x310")]
		public bool localOperationalDataLost;

		[Token(Token = "0x40015F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x311")]
		public bool recombinationNeeded;

		[Token(Token = "0x40015F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x312")]
		public bool isInBackground;

		[Token(Token = "0x40015F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x313")]
		public bool realtimeEditing;

		[Token(Token = "0x40015F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x314")]
		public bool calculated;

		[Token(Token = "0x40015F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x315")]
		public bool calculatingError;

		[Token(Token = "0x40015F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x318")]
		public int xPointsCount;

		[Token(Token = "0x40015F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31C")]
		public int yPointsCount;

		[Token(Token = "0x40015F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x320")]
		public int zPointsCount;

		[Token(Token = "0x40015F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x324")]
		public float prevVolumeScaleX;

		[Token(Token = "0x40015F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x328")]
		public float prevVolumeScaleY;

		[Token(Token = "0x40015FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x32C")]
		public float prevVolumeScaleZ;

		[Token(Token = "0x40015FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x330")]
		public int totalProbes;

		[Token(Token = "0x40015FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x334")]
		public int totalProbesInSubVolume;

		[Token(Token = "0x40015FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x338")]
		public int totalProbesInVolume;

		[Token(Token = "0x40015FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33C")]
		public bool calculatingVolume;

		[Token(Token = "0x40015FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x33D")]
		public bool calculatingVolumeSubPass;

		[Token(Token = "0x4001600")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x340")]
		public string currentPass;

		[Token(Token = "0x4001601")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x348")]
		public int currentPassProgressCounter;

		[Token(Token = "0x4001602")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34C")]
		public int currentPassProgressFrameSkipper;

		[Token(Token = "0x4001603")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x350")]
		public float totalProgress;

		[Token(Token = "0x4001604")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x354")]
		public float currentPassProgress;

		[Token(Token = "0x4001605")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x358")]
		public int selectedTab;

		[Token(Token = "0x4001606")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35C")]
		public bool showOptionsInManagerWindow;

		[Token(Token = "0x4001607")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35D")]
		public bool restored;

		[Token(Token = "0x4001608")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x360")]
		public int currentVolumePart;

		[Token(Token = "0x4001609")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x364")]
		public float eta;

		[Token(Token = "0x400160A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x368")]
		public bool changed;

		[Token(Token = "0x400160B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x369")]
		public bool redivideParts;

		[Token(Token = "0x400160C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36A")]
		public bool combinedVolumeError;

		[Token(Token = "0x400160D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36B")]
		private bool passesExecuting;

		[Token(Token = "0x400160E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36C")]
		private int totalProgressCounter;

		[Token(Token = "0x400160F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x370")]
		private int totalProgressFrameSkipper;

		[Token(Token = "0x4001610")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x374")]
		private float startTime;

		[Token(Token = "0x4001611")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x378")]
		private float endTime;

		[Token(Token = "0x4001612")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x37C")]
		private bool scenePreparing;

		[Token(Token = "0x60016A3")]
		[Address(RVA = "0xCE806C", Offset = "0xCE806C", VA = "0xCE806C")]
		public void CheckForNearContrast(MLPPointData pointForCheck)
		{
		}

		[Token(Token = "0x60016A4")]
		[Address(RVA = "0xCE8350", Offset = "0xCE8350", VA = "0xCE8350")]
		public bool UpdateProgress(int count, int period = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A5")]
		[Address(RVA = "0xCE8398", Offset = "0xCE8398", VA = "0xCE8398")]
		private bool UpdateTotalProgress(int count, int period = 100)
		{
			return default(bool);
		}

		[Token(Token = "0x60016A6")]
		[Address(RVA = "0xCE83E0", Offset = "0xCE83E0", VA = "0xCE83E0")]
		public MagicLightProbes()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x849114", Offset = "0x849114")]
	public class MLPCombinedVolume : MonoBehaviour
	{
		[Token(Token = "0x60016A8")]
		[Address(RVA = "0xCE765C", Offset = "0xCE765C", VA = "0xCE765C")]
		public MLPCombinedVolume()
		{
		}
	}
	[Token(Token = "0x20002C8")]
	[DisallowMultipleComponent]
	[ExecuteInEditMode]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x849160", Offset = "0x849160")]
	public class MLPLight : MonoBehaviour
	{
		[Token(Token = "0x2000504")]
		public enum CalculationMode
		{
			[Token(Token = "0x4002475")]
			AccurateShadows,
			[Token(Token = "0x4002476")]
			LightIntensity
		}

		[Token(Token = "0x2000505")]
		public enum MLPLightType
		{
			[Token(Token = "0x4002478")]
			Spot,
			[Token(Token = "0x4002479")]
			Directional,
			[Token(Token = "0x400247A")]
			Point,
			[Token(Token = "0x400247B")]
			Area,
			[Token(Token = "0x400247C")]
			Mesh
		}

		[Token(Token = "0x2000506")]
		public enum MLPLightTypeMA
		{
			[Token(Token = "0x400247E")]
			Area = 3,
			[Token(Token = "0x400247F")]
			Mesh
		}

		[Token(Token = "0x2000507")]
		public enum TracePointSettingMode
		{
			[Token(Token = "0x4002481")]
			Auto,
			[Token(Token = "0x4002482")]
			Custom
		}

		[Token(Token = "0x2000508")]
		public enum ShadowmaskMode
		{
			[Token(Token = "0x4002484")]
			Shadowmask,
			[Token(Token = "0x4002485")]
			DistanceShadowmask
		}

		[Token(Token = "0x4001613")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MLPLightType lightType;

		[Token(Token = "0x4001614")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public MLPLightType lastLightType;

		[Token(Token = "0x4001615")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MLPLightTypeMA lightTypeMA;

		[Token(Token = "0x4001616")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public CalculationMode calculationMode;

		[Token(Token = "0x4001617")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public TracePointSettingMode tracePointSettingType;

		[Token(Token = "0x4001618")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public LightmapBakeType lightMode;

		[Token(Token = "0x4001619")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ShadowmaskMode shadowmaskMode;

		[Token(Token = "0x400161A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Light targetLight;

		[Token(Token = "0x400161B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public GameObject parentGameObject;

		[Token(Token = "0x400161C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Vector3 position;

		[Token(Token = "0x400161D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public Vector3 forward;

		[Token(Token = "0x400161E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool saveNearbyProbes;

		[Token(Token = "0x400161F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		public float saveRadius;

		[Token(Token = "0x4001620")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public float range;

		[Token(Token = "0x4001621")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool useSourceParameters;

		[Token(Token = "0x4001622")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool reverseDirection;

		[Token(Token = "0x4001623")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public float angle;

		[Token(Token = "0x4001624")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public bool customTracePoints;

		[Token(Token = "0x4001625")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x75")]
		public bool accurateTrace;

		[Token(Token = "0x4001626")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public int accuracy;

		[Token(Token = "0x4001627")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public int lastAccuracy;

		[Token(Token = "0x4001628")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public bool isDirectional;

		[Token(Token = "0x4001629")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public float tracePointSize;

		[Token(Token = "0x400162A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public float lastTracePointSize;

		[Token(Token = "0x400162B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public MeshFilter lastMesh;

		[Token(Token = "0x400162C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<GameObject> tracePoints;

		[Token(Token = "0x400162D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<MLPTracePoint> tracePointsData;

		[Token(Token = "0x400162E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public MLPTracePoint mainTracePoint;

		[Token(Token = "0x400162F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public MagicLightProbes parentVolume;

		[Token(Token = "0x4001630")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public bool showOptionsInManagerWindow;

		[Token(Token = "0x4001631")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float intensity;

		[Token(Token = "0x4001632")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool resetEditor;

		[Token(Token = "0x4001633")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC1")]
		public bool showLightOnScene;

		[Token(Token = "0x4001634")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC2")]
		public bool saveOnOutOfRange;

		[Token(Token = "0x4001635")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC3")]
		public bool isHDRP;

		[Token(Token = "0x4001636")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		public Vector2 hdrpAreaSize;

		[Token(Token = "0x60016A9")]
		[Address(RVA = "0xCE7674", Offset = "0xCE7674", VA = "0xCE7674")]
		public MLPLight()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	public class MLPPointData
	{
		[Token(Token = "0x4001637")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float lightIntensity;

		[Token(Token = "0x4001638")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float maxIntencity;

		[Token(Token = "0x4001639")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 position;

		[Token(Token = "0x400163A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int col;

		[Token(Token = "0x400163B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int row;

		[Token(Token = "0x400163C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public int depth;

		[Token(Token = "0x400163D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public List<float> distancesToLights;

		[Token(Token = "0x400163E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public List<Vector3> collisionPoints;

		[Token(Token = "0x400163F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public List<MLPPointData> nearbyPoints;

		[Token(Token = "0x4001640")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MLPPointData> nearbyPointsOptimaziable;

		[Token(Token = "0x4001641")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public bool removed;

		[Token(Token = "0x4001642")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		public bool outOfRange;

		[Token(Token = "0x4001643")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		public bool inSaveRange;

		[Token(Token = "0x4001644")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		public bool savedNearGeometry;

		[Token(Token = "0x4001645")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public bool contrastOnOutOfRangeArea;

		[Token(Token = "0x4001646")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x55")]
		public bool inRangeOfLight;

		[Token(Token = "0x4001647")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x56")]
		public bool contrastOnShadingArea;

		[Token(Token = "0x4001648")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x57")]
		public bool equalIntensity;

		[Token(Token = "0x4001649")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool equalColor;

		[Token(Token = "0x400164A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
		public bool borderPoint;

		[Token(Token = "0x400164B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
		public bool outOfMaxHeight;

		[Token(Token = "0x400164C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float angleToLight;

		[Token(Token = "0x400164D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Vector3 contactPoint;

		[Token(Token = "0x400164E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool inCorner;

		[Token(Token = "0x400164F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		public bool lockForCull;

		[Token(Token = "0x4001650")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		public bool onGeometryEdge;

		[Token(Token = "0x4001651")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6F")]
		public bool lightLeakLocked;

		[Token(Token = "0x4001652")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public Vector3 collisionNormal;

		[Token(Token = "0x4001653")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<MLPLight> inRangeForLights;

		[Token(Token = "0x4001654")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<MLPLight> inShadowForLights;

		[Token(Token = "0x4001655")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public GameObject temporaryObject;

		[Token(Token = "0x4001656")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public GameObject collisionObject;

		[Token(Token = "0x4001657")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public Color averagedColor;

		[Token(Token = "0x4001658")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public bool xEndPoint;

		[Token(Token = "0x4001659")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB1")]
		public bool yEndPoint;

		[Token(Token = "0x400165A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB2")]
		public bool zEndPoint;

		[Token(Token = "0x400165B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB3")]
		public bool xStartPoint;

		[Token(Token = "0x400165C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		public bool yStartPoint;

		[Token(Token = "0x400165D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB5")]
		public bool zStartPoint;

		[Token(Token = "0x400165E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public int equivalent;

		[Token(Token = "0x400165F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
		public float avaragedColorValue;

		[Token(Token = "0x4001660")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public bool isUnlit;

		[Token(Token = "0x60016AA")]
		[Address(RVA = "0xCE7760", Offset = "0xCE7760", VA = "0xCE7760")]
		public void SetPosition(Vector3 position)
		{
		}

		[Token(Token = "0x60016AB")]
		[Address(RVA = "0xCE776C", Offset = "0xCE776C", VA = "0xCE776C")]
		public void SetOutOfRange(bool visibility)
		{
		}

		[Token(Token = "0x60016AC")]
		[Address(RVA = "0xCE7778", Offset = "0xCE7778", VA = "0xCE7778")]
		public void SetLightIntensity(float intensity)
		{
		}

		[Token(Token = "0x60016AD")]
		[Address(RVA = "0xCE7780", Offset = "0xCE7780", VA = "0xCE7780")]
		public void SetInSaveRange(bool value)
		{
		}

		[Token(Token = "0x60016AE")]
		[Address(RVA = "0xCE778C", Offset = "0xCE778C", VA = "0xCE778C")]
		public void SetInContrastArea(bool value)
		{
		}

		[Token(Token = "0x60016AF")]
		[Address(RVA = "0xCE7798", Offset = "0xCE7798", VA = "0xCE7798")]
		public MLPPointData()
		{
		}
	}
	[Token(Token = "0x20002CA")]
	[ExecuteInEditMode]
	public class MLPPortal : MonoBehaviour
	{
		[Token(Token = "0x4001661")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float yStep;

		[Token(Token = "0x4001662")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float zStep;

		[Token(Token = "0x4001663")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int yCounter;

		[Token(Token = "0x4001664")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public int zCounter;

		[Token(Token = "0x4001665")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool calculate;

		[Token(Token = "0x60016B0")]
		[Address(RVA = "0xCE7968", Offset = "0xCE7968", VA = "0xCE7968")]
		private void Start()
		{
		}

		[Token(Token = "0x60016B1")]
		[Address(RVA = "0xCE796C", Offset = "0xCE796C", VA = "0xCE796C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016B2")]
		[Address(RVA = "0xCE79AC", Offset = "0xCE79AC", VA = "0xCE79AC")]
		private void DrawRayX(Vector3 dir)
		{
		}

		[Token(Token = "0x60016B3")]
		[Address(RVA = "0xCE7B88", Offset = "0xCE7B88", VA = "0xCE7B88")]
		private void DrawRayZ(Vector3 dir)
		{
		}

		[Token(Token = "0x60016B4")]
		[Address(RVA = "0xCE7D50", Offset = "0xCE7D50", VA = "0xCE7D50")]
		public MLPPortal()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[AttributeAttribute(Name = "HelpURLAttribute", RVA = "0x8491CC", Offset = "0x8491CC")]
	public class MLPQuickEditing : MonoBehaviour
	{
		[Token(Token = "0x4001666")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public MagicLightProbes parent;

		[Token(Token = "0x4001667")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float gizmoScale;

		[Token(Token = "0x4001668")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float drawDistance;

		[Token(Token = "0x60016B5")]
		[Address(RVA = "0xCE7D58", Offset = "0xCE7D58", VA = "0xCE7D58")]
		public MLPQuickEditing()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002CC")]
	public class MLPTracePoint
	{
		[Token(Token = "0x4001669")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 position;

		[Token(Token = "0x400166A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 forward;

		[Token(Token = "0x400166B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string name;

		[Token(Token = "0x400166C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public GameObject pointGameObject;

		[Token(Token = "0x60016B6")]
		[Address(RVA = "0xCE7D68", Offset = "0xCE7D68", VA = "0xCE7D68")]
		public MLPTracePoint()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[ExecuteInEditMode]
	public class MLPVolume : MonoBehaviour
	{
		[Token(Token = "0x400166D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public MagicLightProbes parentRootComponent;

		[Token(Token = "0x400166E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public MeshRenderer selfRenderer;

		[Token(Token = "0x400166F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[HideInInspector]
		public bool showGizmo;

		[Token(Token = "0x4001670")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool showGizmoSelected;

		[Token(Token = "0x4001671")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		public bool isPartVolume;

		[Token(Token = "0x4001672")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		public bool isSubdividedPart;

		[Token(Token = "0x4001673")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool isCalculated;

		[Token(Token = "0x4001674")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
		public bool isInProcess;

		[Token(Token = "0x4001675")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2E")]
		public bool skipped;

		[Token(Token = "0x4001676")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int id;

		[Token(Token = "0x4001677")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public Color colorOnSelection;

		[Token(Token = "0x4001678")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<MLPPointData> localAcceptedPoints;

		[Token(Token = "0x4001679")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<MLPPointData> localNearbyGeometryPoints;

		[Token(Token = "0x400167A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<MLPPointData> localContrastPoints;

		[Token(Token = "0x400167B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<MLPPointData> localCornerPoints;

		[Token(Token = "0x400167C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public List<Vector3> localNearbyGeometryPointsPositions;

		[Token(Token = "0x400167D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public List<Vector3> resultNearbyGeometryPointsPositions;

		[Token(Token = "0x400167E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public List<Vector3> localCornerPointsPositions;

		[Token(Token = "0x400167F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public List<Vector3> resultLocalCornerPointsPositions;

		[Token(Token = "0x4001680")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public List<Vector3> localEquivalentPointsPositions;

		[Token(Token = "0x4001681")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public List<Vector3> resultLocalEquivalentPointsPositions;

		[Token(Token = "0x4001682")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public List<Vector3> resultLocalFreePointsPositions;

		[Token(Token = "0x4001683")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public List<Vector3> localUnlitPointsPositions;

		[Token(Token = "0x4001684")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public List<Vector3> localFreePointsPositions;

		[Token(Token = "0x4001685")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public List<Vector3> resultLocalUnlitPointsPositions;

		[Token(Token = "0x4001686")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public List<Vector3> localDirections;

		[Token(Token = "0x4001687")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public List<Vector3> localAvaragedDirections;

		[Token(Token = "0x4001688")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public List<MLPPointData> localColorThresholdEditingPoints;

		[Token(Token = "0x4001689")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public int objectsInside;

		[Token(Token = "0x60016B7")]
		[Address(RVA = "0xCE7D70", Offset = "0xCE7D70", VA = "0xCE7D70")]
		public MLPVolume()
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class CheckForLightLeakAreas
	{
		[Token(Token = "0x2000509")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849E84", Offset = "0x849E84")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002486")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002487")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002488")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4002489")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <i>5__2;

			[Token(Token = "0x1700031B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EE6")]
				[Address(RVA = "0x19AD794", Offset = "0x19AD794", VA = "0x19AD794", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EE8")]
				[Address(RVA = "0x19AD7DC", Offset = "0x19AD7DC", VA = "0x19AD7DC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EE3")]
			[Address(RVA = "0x19AD100", Offset = "0x19AD100", VA = "0x19AD100")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001EE4")]
			[Address(RVA = "0x19AD12C", Offset = "0x19AD12C", VA = "0x19AD12C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EE5")]
			[Address(RVA = "0x19AD130", Offset = "0x19AD130", VA = "0x19AD130", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EE7")]
			[Address(RVA = "0x19AD79C", Offset = "0x19AD79C", VA = "0x19AD79C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60016B8")]
		[Address(RVA = "0xC478C8", Offset = "0xC478C8", VA = "0xC478C8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B07C", Offset = "0x85B07C")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x60016B9")]
		[Address(RVA = "0xC47948", Offset = "0xC47948", VA = "0xC47948")]
		public CheckForLightLeakAreas()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	public class DublicateVertical
	{
		[Token(Token = "0x200050A")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849E94", Offset = "0x849E94")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400248A")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400248B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x400248C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x400248D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private int <steps>5__2;

			[Token(Token = "0x400248E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private List<MLPPointData> <candidates>5__3;

			[Token(Token = "0x400248F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private List<MLPPointData> <savedNearGeometry>5__4;

			[Token(Token = "0x4002490")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private int <i>5__5;

			[Token(Token = "0x4002491")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<MLPPointData>.Enumerator <>7__wrap5;

			[Token(Token = "0x1700031D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EED")]
				[Address(RVA = "0x19AF3C8", Offset = "0x19AF3C8", VA = "0x19AF3C8", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700031E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EEF")]
				[Address(RVA = "0x19AF410", Offset = "0x19AF410", VA = "0x19AF410", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EE9")]
			[Address(RVA = "0x19AEA44", Offset = "0x19AEA44", VA = "0x19AEA44")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001EEA")]
			[Address(RVA = "0x19AEA70", Offset = "0x19AEA70", VA = "0x19AEA70", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EEB")]
			[Address(RVA = "0x19AEAE8", Offset = "0x19AEAE8", VA = "0x19AEAE8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EEC")]
			[Address(RVA = "0x19AEA8C", Offset = "0x19AEA8C", VA = "0x19AEA8C")]
			private void <>m__Finally1()
			{
			}

			[Token(Token = "0x6001EEE")]
			[Address(RVA = "0x19AF3D0", Offset = "0x19AF3D0", VA = "0x19AF3D0", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60016BA")]
		[Address(RVA = "0xC015F0", Offset = "0xC015F0", VA = "0xC015F0")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B0E4", Offset = "0x85B0E4")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x60016BB")]
		[Address(RVA = "0xC01670", Offset = "0xC01670", VA = "0xC01670")]
		public DublicateVertical()
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public static class RandomGen
	{
		[Token(Token = "0x400168A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static System.Random _global;

		[Token(Token = "0x400168B")]
		[ThreadStatic]
		private static System.Random _local;

		[Token(Token = "0x60016BC")]
		[Address(RVA = "0xDCDAD0", Offset = "0xDCDAD0", VA = "0xDCDAD0")]
		public static int Next(int min, int max)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002D1")]
	public class EquivalentProbesOptimization
	{
		[Token(Token = "0x200050B")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849EA4", Offset = "0x849EA4")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4002492")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4002493")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4002494")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x4002495")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MLPVolume currentVolume;

			[Token(Token = "0x4002496")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public bool realtimeEditing;

			[Token(Token = "0x4002497")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private Vector3[] <exit>5__2;

			[Token(Token = "0x4002498")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<MLPPointData> <tempList>5__3;

			[Token(Token = "0x4002499")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private int <i>5__4;

			[Token(Token = "0x1700031F")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EF3")]
				[Address(RVA = "0x19AFD64", Offset = "0x19AFD64", VA = "0x19AFD64", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000320")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EF5")]
				[Address(RVA = "0x19AFDAC", Offset = "0x19AFDAC", VA = "0x19AFDAC", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EF0")]
			[Address(RVA = "0x19AF66C", Offset = "0x19AF66C", VA = "0x19AF66C")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001EF1")]
			[Address(RVA = "0x19AF698", Offset = "0x19AF698", VA = "0x19AF698", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EF2")]
			[Address(RVA = "0x19AF69C", Offset = "0x19AF69C", VA = "0x19AF69C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EF4")]
			[Address(RVA = "0x19AFD6C", Offset = "0x19AFD6C", VA = "0x19AFD6C", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60016BE")]
		[Address(RVA = "0xB9BA08", Offset = "0xB9BA08", VA = "0xB9BA08")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B14C", Offset = "0x85B14C")]
		public IEnumerator ExecutePass(MagicLightProbes parent, [Optional] MLPVolume currentVolume, bool realtimeEditing = false)
		{
			return null;
		}

		[Token(Token = "0x60016BF")]
		[Address(RVA = "0xB9BAB0", Offset = "0xB9BAB0", VA = "0xB9BAB0")]
		public EquivalentProbesOptimization()
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class PartialVolumeFilling
	{
		[Token(Token = "0x200050C")]
		public enum TargetPoint
		{
			[Token(Token = "0x400249B")]
			Unlit,
			[Token(Token = "0x400249C")]
			Equivalent,
			[Token(Token = "0x400249D")]
			Free
		}

		[Token(Token = "0x200050D")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849EB4", Offset = "0x849EB4")]
		private sealed class <ExecutePass>d__1 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x400249E")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x400249F")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024A0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public TargetPoint targetPoint;

			[Token(Token = "0x40024A1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagicLightProbes parent;

			[Token(Token = "0x40024A2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public MLPVolume currentVolume;

			[Token(Token = "0x40024A3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			public bool realtimeEditing;

			[Token(Token = "0x40024A4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private List<MLPPointData> <tempList>5__2;

			[Token(Token = "0x40024A5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private List<Vector3> <realTimeEditingList>5__3;

			[Token(Token = "0x40024A6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private List<Vector3> <targetPoints>5__4;

			[Token(Token = "0x40024A7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private float <fillingRate>5__5;

			[Token(Token = "0x40024A8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private Vector3[] <exit>5__6;

			[Token(Token = "0x40024A9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
			private int <i>5__7;

			[Token(Token = "0x17000321")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EF9")]
				[Address(RVA = "0x19DFA8C", Offset = "0x19DFA8C", VA = "0x19DFA8C", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000322")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001EFB")]
				[Address(RVA = "0x19DFAD4", Offset = "0x19DFAD4", VA = "0x19DFAD4", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EF6")]
			[Address(RVA = "0x19DED7C", Offset = "0x19DED7C", VA = "0x19DED7C")]
			[DebuggerHidden]
			public <ExecutePass>d__1(int <>1__state)
			{
			}

			[Token(Token = "0x6001EF7")]
			[Address(RVA = "0x19DEDA8", Offset = "0x19DEDA8", VA = "0x19DEDA8", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EF8")]
			[Address(RVA = "0x19DEDAC", Offset = "0x19DEDAC", VA = "0x19DEDAC", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001EFA")]
			[Address(RVA = "0x19DFA94", Offset = "0x19DFA94", VA = "0x19DFA94", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60016C0")]
		[Address(RVA = "0x1B65FC4", Offset = "0x1B65FC4", VA = "0x1B65FC4")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B1B4", Offset = "0x85B1B4")]
		public IEnumerator ExecutePass(MagicLightProbes parent, TargetPoint targetPoint, [Optional] MLPVolume currentVolume, bool realtimeEditing = false)
		{
			return null;
		}

		[Token(Token = "0x60016C1")]
		[Address(RVA = "0x1B66074", Offset = "0x1B66074", VA = "0x1B66074")]
		public PartialVolumeFilling()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	public class RemoveUnusedPoints
	{
		[Token(Token = "0x200050E")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849EC4", Offset = "0x849EC4")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024AA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024AB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024AC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MagicLightProbes parent;

			[Token(Token = "0x40024AD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private List<MLPPointData> <pointsToRemove>5__2;

			[Token(Token = "0x40024AE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private int <i>5__3;

			[Token(Token = "0x17000323")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001EFF")]
				[Address(RVA = "0x19E1A38", Offset = "0x19E1A38", VA = "0x19E1A38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000324")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F01")]
				[Address(RVA = "0x19E1A80", Offset = "0x19E1A80", VA = "0x19E1A80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001EFC")]
			[Address(RVA = "0x19E14F4", Offset = "0x19E14F4", VA = "0x19E14F4")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001EFD")]
			[Address(RVA = "0x19E1520", Offset = "0x19E1520", VA = "0x19E1520", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001EFE")]
			[Address(RVA = "0x19E1524", Offset = "0x19E1524", VA = "0x19E1524", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F00")]
			[Address(RVA = "0x19E1A40", Offset = "0x19E1A40", VA = "0x19E1A40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60016C2")]
		[Address(RVA = "0xDCFA64", Offset = "0xDCFA64", VA = "0xDCFA64")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B21C", Offset = "0x85B21C")]
		public IEnumerator ExecutePass(MagicLightProbes parent)
		{
			return null;
		}

		[Token(Token = "0x60016C3")]
		[Address(RVA = "0xDCFAE4", Offset = "0xDCFAE4", VA = "0xDCFAE4")]
		public RemoveUnusedPoints()
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class SetDistanceFromGeometry
	{
		[Token(Token = "0x200050F")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849ED4", Offset = "0x849ED4")]
		private sealed class <ExecutePass>d__0 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024AF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024B0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024B1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MLPVolume currentVolume;

			[Token(Token = "0x40024B2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public MagicLightProbes parent;

			[Token(Token = "0x40024B3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private Vector3[] <exit>5__2;

			[Token(Token = "0x40024B4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private int <i>5__3;

			[Token(Token = "0x17000325")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F05")]
				[Address(RVA = "0x19E2638", Offset = "0x19E2638", VA = "0x19E2638", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000326")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F07")]
				[Address(RVA = "0x19E2680", Offset = "0x19E2680", VA = "0x19E2680", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F02")]
			[Address(RVA = "0x19E2104", Offset = "0x19E2104", VA = "0x19E2104")]
			[DebuggerHidden]
			public <ExecutePass>d__0(int <>1__state)
			{
			}

			[Token(Token = "0x6001F03")]
			[Address(RVA = "0x19E2130", Offset = "0x19E2130", VA = "0x19E2130", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F04")]
			[Address(RVA = "0x19E2134", Offset = "0x19E2134", VA = "0x19E2134", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F06")]
			[Address(RVA = "0x19E2640", Offset = "0x19E2640", VA = "0x19E2640", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x60016C4")]
		[Address(RVA = "0xDD8090", Offset = "0xDD8090", VA = "0xDD8090")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B284", Offset = "0x85B284")]
		public IEnumerator ExecutePass(MagicLightProbes parent, MLPVolume currentVolume)
		{
			return null;
		}

		[Token(Token = "0x60016C5")]
		[Address(RVA = "0xDD8124", Offset = "0xDD8124", VA = "0xDD8124")]
		public SetDistanceFromGeometry()
		{
		}
	}
}
namespace LIV.SDK.Unity
{
	[Token(Token = "0x20002D5")]
	public static class Calibration
	{
		[Serializable]
		[Token(Token = "0x2000510")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849EE4", Offset = "0x849EE4")]
		private sealed class <>c
		{
			[Token(Token = "0x40024B5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x6001F09")]
			[Address(RVA = "0x19ACF0C", Offset = "0x19ACF0C", VA = "0x19ACF0C")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F0A")]
			[Address(RVA = "0x19ACF14", Offset = "0x19ACF14", VA = "0x19ACF14")]
			internal void <.cctor>b__20_0(object o, FileSystemEventArgs e)
			{
			}
		}

		[Token(Token = "0x400168C")]
		private const string ConfigFileName = "externalcamera.cfg";

		[Token(Token = "0x400168E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static float X;

		[Token(Token = "0x400168F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public static float Y;

		[Token(Token = "0x4001690")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static float Z;

		[Token(Token = "0x4001691")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public static float Yaw;

		[Token(Token = "0x4001692")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static float Pitch;

		[Token(Token = "0x4001693")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public static float Roll;

		[Token(Token = "0x4001694")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public static float FieldOfVision;

		[Token(Token = "0x4001695")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public static float NearClip;

		[Token(Token = "0x4001696")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public static float FarClip;

		[Token(Token = "0x4001697")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public static float HMDOffset;

		[Token(Token = "0x4001698")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public static float NearOffset;

		[Token(Token = "0x4001699")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private static readonly FileSystemWatcher ConfigWatcher;

		[Token(Token = "0x170001A7")]
		public static Vector3 PositionOffset
		{
			[Token(Token = "0x60016C8")]
			[Address(RVA = "0xDBDE6C", Offset = "0xDBDE6C", VA = "0xDBDE6C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x170001A8")]
		public static Quaternion RotationOffset
		{
			[Token(Token = "0x60016C9")]
			[Address(RVA = "0xDBDED4", Offset = "0xDBDED4", VA = "0xDBDED4")]
			get
			{
				return default(Quaternion);
			}
		}

		[Token(Token = "0x14000013")]
		public static event EventHandler Changed
		{
			[Token(Token = "0x60016C6")]
			[Address(RVA = "0xDBDC84", Offset = "0xDBDC84", VA = "0xDBDC84")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B2EC", Offset = "0x85B2EC")]
			add
			{
			}
			[Token(Token = "0x60016C7")]
			[Address(RVA = "0xDBDD78", Offset = "0xDBDD78", VA = "0xDBDD78")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B2FC", Offset = "0x85B2FC")]
			remove
			{
			}
		}

		[Token(Token = "0x60016CA")]
		[Address(RVA = "0xDBDF40", Offset = "0xDBDF40", VA = "0xDBDF40")]
		static Calibration()
		{
		}

		[Token(Token = "0x60016CB")]
		[Address(RVA = "0xDBE9F8", Offset = "0xDBE9F8", VA = "0xDBE9F8")]
		private static void Reset()
		{
		}

		[Token(Token = "0x60016CC")]
		[Address(RVA = "0xDBE1BC", Offset = "0xDBE1BC", VA = "0xDBE1BC")]
		public static void Read()
		{
		}

		[Token(Token = "0x60016CD")]
		[Address(RVA = "0xDBEABC", Offset = "0xDBEABC", VA = "0xDBEABC")]
		private static bool TryParseInvariantFloat(string number, [Out] float result)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002D6")]
	public static class Extensions
	{
		[Token(Token = "0x60016CE")]
		[Address(RVA = "0xB9CFB4", Offset = "0xB9CFB4", VA = "0xB9CFB4")]
		private static float _copysign(float sizeval, float signval)
		{
			return default(float);
		}

		[Token(Token = "0x60016CF")]
		[Address(RVA = "0xB9CFF0", Offset = "0xB9CFF0", VA = "0xB9CFF0")]
		public static Quaternion GetRotation(this Matrix4x4 matrix)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x60016D0")]
		[Address(RVA = "0xB9D160", Offset = "0xB9D160", VA = "0xB9D160")]
		public static Vector3 GetPosition(this Matrix4x4 matrix)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20002D7")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x849224", Offset = "0x849224")]
	public class ExternalCamera : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000511")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849EF4", Offset = "0x849EF4")]
		private sealed class <>c
		{
			[Token(Token = "0x40024B6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public static readonly <>c <>9;

			[Token(Token = "0x40024B7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public static Func<TrackedDevicePose_t, int, global::<>f__AnonymousType0<TrackedDevicePose_t, uint>> <>9__17_0;

			[Token(Token = "0x40024B8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public static Func<global::<>f__AnonymousType0<TrackedDevicePose_t, uint>, bool> <>9__17_1;

			[Token(Token = "0x40024B9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public static Func<global::<>f__AnonymousType0<TrackedDevicePose_t, uint>, <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>> <>9__17_2;

			[Token(Token = "0x40024BA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, bool> <>9__17_3;

			[Token(Token = "0x40024BB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public static Func<<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass>, <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>> <>9__17_4;

			[Token(Token = "0x40024BC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public static Func<<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string>, int> <>9__17_5;

			[Token(Token = "0x6001F0C")]
			[Address(RVA = "0x19B01BC", Offset = "0x19B01BC", VA = "0x19B01BC")]
			public <>c()
			{
			}

			[Token(Token = "0x6001F0D")]
			[Address(RVA = "0x19B01C4", Offset = "0x19B01C4", VA = "0x19B01C4")]
			internal global::<>f__AnonymousType0<TrackedDevicePose_t, uint> <IdentifyExternalCameraDevice>b__17_0(TrackedDevicePose_t pose, int index)
			{
				return null;
			}

			[Token(Token = "0x6001F0E")]
			[Address(RVA = "0x19B0280", Offset = "0x19B0280", VA = "0x19B0280")]
			internal bool <IdentifyExternalCameraDevice>b__17_1(global::<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F0F")]
			[Address(RVA = "0x19B02D0", Offset = "0x19B02D0", VA = "0x19B02D0")]
			internal <>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> <IdentifyExternalCameraDevice>b__17_2(global::<>f__AnonymousType0<TrackedDevicePose_t, uint> candidate)
			{
				return null;
			}

			[Token(Token = "0x6001F10")]
			[Address(RVA = "0x19B03F4", Offset = "0x19B03F4", VA = "0x19B03F4")]
			internal bool <IdentifyExternalCameraDevice>b__17_3(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return default(bool);
			}

			[Token(Token = "0x6001F11")]
			[Address(RVA = "0x19B0448", Offset = "0x19B0448", VA = "0x19B0448")]
			internal <>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> <IdentifyExternalCameraDevice>b__17_4(<>f__AnonymousType1<TrackedDevicePose_t, uint, ETrackedDeviceClass> candidate)
			{
				return null;
			}

			[Token(Token = "0x6001F12")]
			[Address(RVA = "0x19B05C4", Offset = "0x19B05C4", VA = "0x19B05C4")]
			internal int <IdentifyExternalCameraDevice>b__17_5(<>f__AnonymousType2<TrackedDevicePose_t, uint, ETrackedDeviceClass, ETrackedControllerRole, string, string> candidate)
			{
				return default(int);
			}
		}

		[Token(Token = "0x400169A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8539D4", Offset = "0x8539D4")]
		private uint <OpenVRTrackedDeviceId>k__BackingField;

		[Token(Token = "0x400169B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private TrackedDevicePose_t _trackedDevicePose;

		[Token(Token = "0x400169C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private TrackedDevicePose_t[] _devices;

		[Token(Token = "0x400169D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private TrackedDevicePose_t[] _gameDevices;

		[Token(Token = "0x170001A9")]
		public bool IsValid
		{
			[Token(Token = "0x60016D1")]
			[Address(RVA = "0xB9D16C", Offset = "0xB9D16C", VA = "0xB9D16C")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AA")]
		public uint OpenVRTrackedDeviceId
		{
			[Token(Token = "0x60016D2")]
			[Address(RVA = "0xB9D17C", Offset = "0xB9D17C", VA = "0xB9D17C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B32C", Offset = "0x85B32C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x60016D3")]
			[Address(RVA = "0xB9D184", Offset = "0xB9D184", VA = "0xB9D184")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B33C", Offset = "0x85B33C")]
			protected set
			{
			}
		}

		[Token(Token = "0x60016D4")]
		[Address(RVA = "0xB9D18C", Offset = "0xB9D18C", VA = "0xB9D18C")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016D5")]
		[Address(RVA = "0xB9D220", Offset = "0xB9D220", VA = "0xB9D220")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016D6")]
		[Address(RVA = "0xB9D278", Offset = "0xB9D278", VA = "0xB9D278")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x60016D7")]
		[Address(RVA = "0xB9D2F4", Offset = "0xB9D2F4", VA = "0xB9D2F4")]
		private void OnPreCull()
		{
		}

		[Token(Token = "0x60016D8")]
		[Address(RVA = "0xB9D27C", Offset = "0xB9D27C", VA = "0xB9D27C")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x60016D9")]
		[Address(RVA = "0xB9D2F8", Offset = "0xB9D2F8", VA = "0xB9D2F8")]
		private void UpdateOpenVRPose()
		{
		}

		[Token(Token = "0x60016DA")]
		[Address(RVA = "0xB9D3B8", Offset = "0xB9D3B8", VA = "0xB9D3B8")]
		private void UpdateTransform(HmdMatrix34_t deviceToAbsolute)
		{
		}

		[Token(Token = "0x60016DB")]
		[Address(RVA = "0xB9D1FC", Offset = "0xB9D1FC", VA = "0xB9D1FC")]
		private void UpdateOpenVRDevice()
		{
		}

		[Token(Token = "0x60016DC")]
		[Address(RVA = "0xB9D5A8", Offset = "0xB9D5A8", VA = "0xB9D5A8")]
		private uint IdentifyExternalCameraDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x60016DD")]
		[Address(RVA = "0xB9DC94", Offset = "0xB9DC94", VA = "0xB9DC94")]
		private static string GetStringTrackedDeviceProperty(uint device, ETrackedDeviceProperty property)
		{
			return null;
		}

		[Token(Token = "0x60016DE")]
		[Address(RVA = "0xB9DE54", Offset = "0xB9DE54", VA = "0xB9DE54")]
		public ExternalCamera()
		{
		}
	}
	[Token(Token = "0x20002D8")]
	[AttributeAttribute(Name = "AttributeUsageAttribute", RVA = "0x84925C", Offset = "0x84925C")]
	public class HelpAttribute : PropertyAttribute
	{
		[Token(Token = "0x400169E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public readonly string text;

		[Token(Token = "0x60016DF")]
		[Address(RVA = "0xBA8EF4", Offset = "0xBA8EF4", VA = "0xBA8EF4")]
		public HelpAttribute(string text)
		{
		}
	}
	[Token(Token = "0x20002D9")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x849294", Offset = "0x849294")]
	public class LIV : MonoBehaviour
	{
		[Token(Token = "0x400169F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "TooltipAttribute", RVA = "0x8539E4", Offset = "0x8539E4")]
		public Transform TrackedSpaceOrigin;

		[Token(Token = "0x40016A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x853A1C", Offset = "0x853A1C")]
		public Camera HMDCamera;

		[Token(Token = "0x40016A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x853A2C", Offset = "0x853A2C")]
		public bool DisableStandardAssets;

		[Token(Token = "0x40016A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "SpaceAttribute", RVA = "0x853A3C", Offset = "0x853A3C")]
		public LayerMask SpectatorLayerMask;

		[Token(Token = "0x40016A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected bool WasActive;

		[Token(Token = "0x40016A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private SharedTextureProtocol _sharedTextureProtocol;

		[Token(Token = "0x40016A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ExternalCamera _externalCamera;

		[Token(Token = "0x40016A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private MixedRealityRender _mixedRealityRender;

		[Token(Token = "0x40016A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _wasSteamVRExternalCameraActive;

		[Token(Token = "0x170001AB")]
		public Transform Origin
		{
			[Token(Token = "0x60016E0")]
			[Address(RVA = "0xCE0EBC", Offset = "0xCE0EBC", VA = "0xCE0EBC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60016E1")]
		[Address(RVA = "0xCE0F64", Offset = "0xCE0F64", VA = "0xCE0F64")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016E2")]
		[Address(RVA = "0xCE11EC", Offset = "0xCE11EC", VA = "0xCE11EC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x60016E3")]
		[Address(RVA = "0xCE137C", Offset = "0xCE137C", VA = "0xCE137C")]
		private void Update()
		{
		}

		[Token(Token = "0x60016E4")]
		[Address(RVA = "0xCE13D8", Offset = "0xCE13D8", VA = "0xCE13D8")]
		private void OnCompositorActivated()
		{
		}

		[Token(Token = "0x60016E5")]
		[Address(RVA = "0xCE11FC", Offset = "0xCE11FC", VA = "0xCE11FC")]
		private void OnCompositorDeactivated()
		{
		}

		[Token(Token = "0x60016E6")]
		[Address(RVA = "0xCE157C", Offset = "0xCE157C", VA = "0xCE157C")]
		private void CreateSharedTextureProtocol()
		{
		}

		[Token(Token = "0x60016E7")]
		[Address(RVA = "0xCE1A48", Offset = "0xCE1A48", VA = "0xCE1A48")]
		private void DestroySharedTextureProtocol()
		{
		}

		[Token(Token = "0x60016E8")]
		[Address(RVA = "0xCE15E8", Offset = "0xCE15E8", VA = "0xCE15E8")]
		private void CreateExternalCamera()
		{
		}

		[Token(Token = "0x60016E9")]
		[Address(RVA = "0xCE1BE0", Offset = "0xCE1BE0", VA = "0xCE1BE0")]
		private void DestroyExternalCamera()
		{
		}

		[Token(Token = "0x60016EA")]
		[Address(RVA = "0xCE16C0", Offset = "0xCE16C0", VA = "0xCE16C0")]
		private void CreateMixedRealityRender()
		{
		}

		[Token(Token = "0x60016EB")]
		[Address(RVA = "0xCE1B08", Offset = "0xCE1B08", VA = "0xCE1B08")]
		private void DestroyMixedRealityRender()
		{
		}

		[Token(Token = "0x60016EC")]
		[Address(RVA = "0xCE1EA0", Offset = "0xCE1EA0", VA = "0xCE1EA0")]
		public LIV()
		{
		}
	}
	[Token(Token = "0x20002DA")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x8492CC", Offset = "0x8492CC")]
	public class MixedRealityRender : MonoBehaviour
	{
		[Token(Token = "0x2000512")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849F04", Offset = "0x849F04")]
		private sealed class <RenderLoop>d__20 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024BD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024BE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024BF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public MixedRealityRender <>4__this;

			[Token(Token = "0x17000327")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F16")]
				[Address(RVA = "0x19D68C0", Offset = "0x19D68C0", VA = "0x19D68C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000328")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F18")]
				[Address(RVA = "0x19D6908", Offset = "0x19D6908", VA = "0x19D6908", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F13")]
			[Address(RVA = "0x19D676C", Offset = "0x19D676C", VA = "0x19D676C")]
			[DebuggerHidden]
			public <RenderLoop>d__20(int <>1__state)
			{
			}

			[Token(Token = "0x6001F14")]
			[Address(RVA = "0x19D6798", Offset = "0x19D6798", VA = "0x19D6798", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F15")]
			[Address(RVA = "0x19D679C", Offset = "0x19D679C", VA = "0x19D679C", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F17")]
			[Address(RVA = "0x19D68C8", Offset = "0x19D68C8", VA = "0x19D68C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x40016A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool _isSetup;

		[Token(Token = "0x40016A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private LIV _liv;

		[Token(Token = "0x40016AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Camera _mrCamera;

		[Token(Token = "0x40016AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform _hmd;

		[Token(Token = "0x40016AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private GameObject _clipQuad;

		[Token(Token = "0x40016AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Material _clipMaterial;

		[Token(Token = "0x40016AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Material _blitMaterial;

		[Token(Token = "0x40016AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RenderTexture _compositeTexture;

		[Token(Token = "0x40016B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private RenderTexture _foregroundTexture;

		[Token(Token = "0x40016B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private RenderTexture _backgroundTexture;

		[Token(Token = "0x60016ED")]
		[Address(RVA = "0xCE1CB8", Offset = "0xCE1CB8", VA = "0xCE1CB8")]
		public void Setup(LIV liv)
		{
		}

		[Token(Token = "0x60016EE")]
		[Address(RVA = "0xCEDBD8", Offset = "0xCEDBD8", VA = "0xCEDBD8")]
		private void CreateClipQuad()
		{
		}

		[Token(Token = "0x60016EF")]
		[Address(RVA = "0xCEDDC0", Offset = "0xCEDDC0", VA = "0xCEDDC0")]
		private void UpdateCamera()
		{
		}

		[Token(Token = "0x60016F0")]
		[Address(RVA = "0xCEDF48", Offset = "0xCEDF48", VA = "0xCEDF48")]
		private void UpdateTextures()
		{
		}

		[Token(Token = "0x60016F1")]
		[Address(RVA = "0xCEE278", Offset = "0xCEE278", VA = "0xCEE278")]
		public float GetDistanceToHMD()
		{
			return default(float);
		}

		[Token(Token = "0x60016F2")]
		[Address(RVA = "0xCEE4A0", Offset = "0xCEE4A0", VA = "0xCEE4A0")]
		private void OrientClipQuad()
		{
		}

		[Token(Token = "0x60016F3")]
		[Address(RVA = "0xCEE66C", Offset = "0xCEE66C", VA = "0xCEE66C")]
		private void RenderNear()
		{
		}

		[Token(Token = "0x60016F4")]
		[Address(RVA = "0xCEE96C", Offset = "0xCEE96C", VA = "0xCEE96C")]
		private void RenderFar()
		{
		}

		[Token(Token = "0x60016F5")]
		[Address(RVA = "0xCEE9C4", Offset = "0xCEE9C4", VA = "0xCEE9C4")]
		private void Composite()
		{
		}

		[Token(Token = "0x60016F6")]
		[Address(RVA = "0xCEEABC", Offset = "0xCEEABC", VA = "0xCEEABC")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60016F7")]
		[Address(RVA = "0xCEEAE8", Offset = "0xCEEAE8", VA = "0xCEEAE8")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B34C", Offset = "0x85B34C")]
		private IEnumerator RenderLoop()
		{
			return null;
		}

		[Token(Token = "0x60016F8")]
		[Address(RVA = "0xCEEB68", Offset = "0xCEEB68", VA = "0xCEEB68")]
		public MixedRealityRender()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[AttributeAttribute(Name = "AddComponentMenu", RVA = "0x849304", Offset = "0x849304")]
	public class SharedTextureProtocol : MonoBehaviour
	{
		[Token(Token = "0x2000513")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x849F14", Offset = "0x849F14")]
		private sealed class <CallPluginAtEndOfFrames>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024C0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024C1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024C2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public SharedTextureProtocol <>4__this;

			[Token(Token = "0x17000329")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6001F1C")]
				[Address(RVA = "0x19E2788", Offset = "0x19E2788", VA = "0x19E2788", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032A")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6001F1E")]
				[Address(RVA = "0x19E27D0", Offset = "0x19E27D0", VA = "0x19E27D0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x6001F19")]
			[Address(RVA = "0x19E2688", Offset = "0x19E2688", VA = "0x19E2688")]
			[DebuggerHidden]
			public <CallPluginAtEndOfFrames>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x6001F1A")]
			[Address(RVA = "0x19E26B4", Offset = "0x19E26B4", VA = "0x19E26B4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6001F1B")]
			[Address(RVA = "0x19E26B8", Offset = "0x19E26B8", VA = "0x19E26B8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6001F1D")]
			[Address(RVA = "0x19E2790", Offset = "0x19E2790", VA = "0x19E2790", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x170001AC")]
		public static bool IsActive
		{
			[Token(Token = "0x60016FE")]
			[Address(RVA = "0xDD8394", Offset = "0xDD8394", VA = "0xDD8394")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170001AD")]
		public static int TextureWidth
		{
			[Token(Token = "0x60016FF")]
			[Address(RVA = "0xDD8398", Offset = "0xDD8398", VA = "0xDD8398")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170001AE")]
		public static int TextureHeight
		{
			[Token(Token = "0x6001700")]
			[Address(RVA = "0xDD839C", Offset = "0xDD839C", VA = "0xDD839C")]
			get
			{
				return default(int);
			}
		}

		[PreserveSig]
		[Token(Token = "0x60016F9")]
		[Address(RVA = "0xDD813C", Offset = "0xDD813C", VA = "0xDD813C")]
		private static extern IntPtr GetRenderEventFunc();

		[PreserveSig]
		[Token(Token = "0x60016FA")]
		[Address(RVA = "0xDD81B0", Offset = "0xDD81B0", VA = "0xDD81B0")]
		private static extern bool GetIsCaptureActive();

		[PreserveSig]
		[Token(Token = "0x60016FB")]
		[Address(RVA = "0xDD822C", Offset = "0xDD822C", VA = "0xDD822C")]
		private static extern int GetTextureWidth();

		[PreserveSig]
		[Token(Token = "0x60016FC")]
		[Address(RVA = "0xDD82A0", Offset = "0xDD82A0", VA = "0xDD82A0")]
		private static extern int GetTextureHeight();

		[PreserveSig]
		[Token(Token = "0x60016FD")]
		[Address(RVA = "0xDD8314", Offset = "0xDD8314", VA = "0xDD8314")]
		private static extern void SetTexture(IntPtr texture);

		[Token(Token = "0x6001701")]
		[Address(RVA = "0xDD83A0", Offset = "0xDD83A0", VA = "0xDD83A0")]
		public static void SetOutputTexture(Texture texture)
		{
		}

		[Token(Token = "0x6001702")]
		[Address(RVA = "0xDD83E4", Offset = "0xDD83E4", VA = "0xDD83E4")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6001703")]
		[Address(RVA = "0xDD8410", Offset = "0xDD8410", VA = "0xDD8410")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B3B4", Offset = "0x85B3B4")]
		private IEnumerator CallPluginAtEndOfFrames()
		{
			return null;
		}

		[Token(Token = "0x6001704")]
		[Address(RVA = "0xDD8490", Offset = "0xDD8490", VA = "0xDD8490")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6001705")]
		[Address(RVA = "0xDD84CC", Offset = "0xDD84CC", VA = "0xDD84CC")]
		public SharedTextureProtocol()
		{
		}
	}
	[Token(Token = "0x20002DC")]
	internal static class SteamVRCompatibility
	{
		[Token(Token = "0x40016B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static bool IsAvailable;

		[Token(Token = "0x40016B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static Type SteamVRCamera;

		[Token(Token = "0x40016B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static Type SteamVRExternalCamera;

		[Token(Token = "0x40016B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public static Type SteamVRFade;

		[Token(Token = "0x6001706")]
		[Address(RVA = "0x1054AFC", Offset = "0x1054AFC", VA = "0x1054AFC")]
		static SteamVRCompatibility()
		{
		}

		[Token(Token = "0x6001707")]
		[Address(RVA = "0x1054B50", Offset = "0x1054B50", VA = "0x1054B50")]
		private static bool FindSteamVRAsset()
		{
			return default(bool);
		}
	}
}
namespace Valve.VR
{
	[Token(Token = "0x20002DD")]
	public struct IVRSystem
	{
		[Token(Token = "0x2000514")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849F24", Offset = "0x849F24")]
		internal delegate void _GetRecommendedRenderTargetSize(uint pnWidth, uint pnHeight);

		[Token(Token = "0x2000515")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849F38", Offset = "0x849F38")]
		internal delegate HmdMatrix44_t _GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ);

		[Token(Token = "0x2000516")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849F4C", Offset = "0x849F4C")]
		internal delegate void _GetProjectionRaw(EVREye eEye, float pfLeft, float pfRight, float pfTop, float pfBottom);

		[Token(Token = "0x2000517")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849F60", Offset = "0x849F60")]
		internal delegate bool _ComputeDistortion(EVREye eEye, float fU, float fV, DistortionCoordinates_t pDistortionCoordinates);

		[Token(Token = "0x2000518")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849F74", Offset = "0x849F74")]
		internal delegate HmdMatrix34_t _GetEyeToHeadTransform(EVREye eEye);

		[Token(Token = "0x2000519")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849F88", Offset = "0x849F88")]
		internal delegate bool _GetTimeSinceLastVsync(float pfSecondsSinceLastVsync, ulong pulFrameCounter);

		[Token(Token = "0x200051A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849F9C", Offset = "0x849F9C")]
		internal delegate int _GetD3D9AdapterIndex();

		[Token(Token = "0x200051B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849FB0", Offset = "0x849FB0")]
		internal delegate void _GetDXGIOutputInfo(int pnAdapterIndex);

		[Token(Token = "0x200051C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849FC4", Offset = "0x849FC4")]
		internal delegate void _GetOutputDevice(ulong pnDevice, ETextureType textureType, IntPtr pInstance);

		[Token(Token = "0x200051D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849FD8", Offset = "0x849FD8")]
		internal delegate bool _IsDisplayOnDesktop();

		[Token(Token = "0x200051E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x849FEC", Offset = "0x849FEC")]
		internal delegate bool _SetDisplayVisibility(bool bIsVisibleOnDesktop);

		[Token(Token = "0x200051F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A000", Offset = "0x84A000")]
		internal delegate void _GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, [In][Out] TrackedDevicePose_t[] pTrackedDevicePoseArray, uint unTrackedDevicePoseArrayCount);

		[Token(Token = "0x2000520")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A014", Offset = "0x84A014")]
		internal delegate void _ResetSeatedZeroPose();

		[Token(Token = "0x2000521")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A028", Offset = "0x84A028")]
		internal delegate HmdMatrix34_t _GetSeatedZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000522")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A03C", Offset = "0x84A03C")]
		internal delegate HmdMatrix34_t _GetRawZeroPoseToStandingAbsoluteTrackingPose();

		[Token(Token = "0x2000523")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A050", Offset = "0x84A050")]
		internal delegate uint _GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, [In][Out] uint[] punTrackedDeviceIndexArray, uint unTrackedDeviceIndexArrayCount, uint unRelativeToTrackedDeviceIndex);

		[Token(Token = "0x2000524")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A064", Offset = "0x84A064")]
		internal delegate EDeviceActivityLevel _GetTrackedDeviceActivityLevel(uint unDeviceId);

		[Token(Token = "0x2000525")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A078", Offset = "0x84A078")]
		internal delegate void _ApplyTransform(TrackedDevicePose_t pOutputPose, TrackedDevicePose_t pTrackedDevicePose, HmdMatrix34_t pTransform);

		[Token(Token = "0x2000526")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A08C", Offset = "0x84A08C")]
		internal delegate uint _GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType);

		[Token(Token = "0x2000527")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A0A0", Offset = "0x84A0A0")]
		internal delegate ETrackedControllerRole _GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex);

		[Token(Token = "0x2000528")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A0B4", Offset = "0x84A0B4")]
		internal delegate ETrackedDeviceClass _GetTrackedDeviceClass(uint unDeviceIndex);

		[Token(Token = "0x2000529")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A0C8", Offset = "0x84A0C8")]
		internal delegate bool _IsTrackedDeviceConnected(uint unDeviceIndex);

		[Token(Token = "0x200052A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A0DC", Offset = "0x84A0DC")]
		internal delegate bool _GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError);

		[Token(Token = "0x200052B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A0F0", Offset = "0x84A0F0")]
		internal delegate float _GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError);

		[Token(Token = "0x200052C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A104", Offset = "0x84A104")]
		internal delegate int _GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError);

		[Token(Token = "0x200052D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A118", Offset = "0x84A118")]
		internal delegate ulong _GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError);

		[Token(Token = "0x200052E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A12C", Offset = "0x84A12C")]
		internal delegate HmdMatrix34_t _GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError);

		[Token(Token = "0x200052F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A140", Offset = "0x84A140")]
		internal delegate uint _GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ETrackedPropertyError pError);

		[Token(Token = "0x2000530")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A154", Offset = "0x84A154")]
		internal delegate uint _GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ETrackedPropertyError pError);

		[Token(Token = "0x2000531")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A168", Offset = "0x84A168")]
		internal delegate IntPtr _GetPropErrorNameFromEnum(ETrackedPropertyError error);

		[Token(Token = "0x2000532")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A17C", Offset = "0x84A17C")]
		internal delegate bool _PollNextEvent(VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x2000533")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A190", Offset = "0x84A190")]
		internal delegate bool _PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, VREvent_t pEvent, uint uncbVREvent, TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000534")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A1A4", Offset = "0x84A1A4")]
		internal delegate IntPtr _GetEventTypeNameFromEnum(EVREventType eType);

		[Token(Token = "0x2000535")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A1B8", Offset = "0x84A1B8")]
		internal delegate HiddenAreaMesh_t _GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type);

		[Token(Token = "0x2000536")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A1CC", Offset = "0x84A1CC")]
		internal delegate bool _GetControllerState(uint unControllerDeviceIndex, VRControllerState_t pControllerState, uint unControllerStateSize);

		[Token(Token = "0x2000537")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A1E0", Offset = "0x84A1E0")]
		internal delegate bool _GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, VRControllerState_t pControllerState, uint unControllerStateSize, TrackedDevicePose_t pTrackedDevicePose);

		[Token(Token = "0x2000538")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A1F4", Offset = "0x84A1F4")]
		internal delegate void _TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec);

		[Token(Token = "0x2000539")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A208", Offset = "0x84A208")]
		internal delegate IntPtr _GetButtonIdNameFromEnum(EVRButtonId eButtonId);

		[Token(Token = "0x200053A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A21C", Offset = "0x84A21C")]
		internal delegate IntPtr _GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType);

		[Token(Token = "0x200053B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A230", Offset = "0x84A230")]
		internal delegate bool _IsInputAvailable();

		[Token(Token = "0x200053C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A244", Offset = "0x84A244")]
		internal delegate bool _IsSteamVRDrawingControllers();

		[Token(Token = "0x200053D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A258", Offset = "0x84A258")]
		internal delegate bool _ShouldApplicationPause();

		[Token(Token = "0x200053E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A26C", Offset = "0x84A26C")]
		internal delegate bool _ShouldApplicationReduceRenderingWork();

		[Token(Token = "0x200053F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A280", Offset = "0x84A280")]
		internal delegate uint _DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize);

		[Token(Token = "0x2000540")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A294", Offset = "0x84A294")]
		internal delegate EVRFirmwareError _PerformFirmwareUpdate(uint unDeviceIndex);

		[Token(Token = "0x2000541")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A2A8", Offset = "0x84A2A8")]
		internal delegate void _AcknowledgeQuit_Exiting();

		[Token(Token = "0x2000542")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A2BC", Offset = "0x84A2BC")]
		internal delegate void _AcknowledgeQuit_UserPrompt();

		[Token(Token = "0x40016B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetRecommendedRenderTargetSize GetRecommendedRenderTargetSize;

		[Token(Token = "0x40016B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetProjectionMatrix GetProjectionMatrix;

		[Token(Token = "0x40016B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetProjectionRaw GetProjectionRaw;

		[Token(Token = "0x40016B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ComputeDistortion ComputeDistortion;

		[Token(Token = "0x40016BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetEyeToHeadTransform GetEyeToHeadTransform;

		[Token(Token = "0x40016BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetTimeSinceLastVsync GetTimeSinceLastVsync;

		[Token(Token = "0x40016BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetD3D9AdapterIndex GetD3D9AdapterIndex;

		[Token(Token = "0x40016BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;

		[Token(Token = "0x40016BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOutputDevice GetOutputDevice;

		[Token(Token = "0x40016BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _IsDisplayOnDesktop IsDisplayOnDesktop;

		[Token(Token = "0x40016C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetDisplayVisibility SetDisplayVisibility;

		[Token(Token = "0x40016C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetDeviceToAbsoluteTrackingPose GetDeviceToAbsoluteTrackingPose;

		[Token(Token = "0x40016C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ResetSeatedZeroPose ResetSeatedZeroPose;

		[Token(Token = "0x40016C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetSeatedZeroPoseToStandingAbsoluteTrackingPose GetSeatedZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x40016C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetRawZeroPoseToStandingAbsoluteTrackingPose GetRawZeroPoseToStandingAbsoluteTrackingPose;

		[Token(Token = "0x40016C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetSortedTrackedDeviceIndicesOfClass GetSortedTrackedDeviceIndicesOfClass;

		[Token(Token = "0x40016C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetTrackedDeviceActivityLevel GetTrackedDeviceActivityLevel;

		[Token(Token = "0x40016C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ApplyTransform ApplyTransform;

		[Token(Token = "0x40016C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetTrackedDeviceIndexForControllerRole GetTrackedDeviceIndexForControllerRole;

		[Token(Token = "0x40016C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetControllerRoleForTrackedDeviceIndex GetControllerRoleForTrackedDeviceIndex;

		[Token(Token = "0x40016CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetTrackedDeviceClass GetTrackedDeviceClass;

		[Token(Token = "0x40016CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsTrackedDeviceConnected IsTrackedDeviceConnected;

		[Token(Token = "0x40016CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetBoolTrackedDeviceProperty GetBoolTrackedDeviceProperty;

		[Token(Token = "0x40016CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetFloatTrackedDeviceProperty GetFloatTrackedDeviceProperty;

		[Token(Token = "0x40016CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetInt32TrackedDeviceProperty GetInt32TrackedDeviceProperty;

		[Token(Token = "0x40016CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetUint64TrackedDeviceProperty GetUint64TrackedDeviceProperty;

		[Token(Token = "0x40016D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _GetMatrix34TrackedDeviceProperty GetMatrix34TrackedDeviceProperty;

		[Token(Token = "0x40016D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetArrayTrackedDeviceProperty GetArrayTrackedDeviceProperty;

		[Token(Token = "0x40016D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _GetStringTrackedDeviceProperty GetStringTrackedDeviceProperty;

		[Token(Token = "0x40016D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetPropErrorNameFromEnum GetPropErrorNameFromEnum;

		[Token(Token = "0x40016D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _PollNextEvent PollNextEvent;

		[Token(Token = "0x40016D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _PollNextEventWithPose PollNextEventWithPose;

		[Token(Token = "0x40016D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetEventTypeNameFromEnum GetEventTypeNameFromEnum;

		[Token(Token = "0x40016D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetHiddenAreaMesh GetHiddenAreaMesh;

		[Token(Token = "0x40016D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetControllerState GetControllerState;

		[Token(Token = "0x40016D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetControllerStateWithPose GetControllerStateWithPose;

		[Token(Token = "0x40016DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _TriggerHapticPulse TriggerHapticPulse;

		[Token(Token = "0x40016DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _GetButtonIdNameFromEnum GetButtonIdNameFromEnum;

		[Token(Token = "0x40016DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetControllerAxisTypeNameFromEnum GetControllerAxisTypeNameFromEnum;

		[Token(Token = "0x40016DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _IsInputAvailable IsInputAvailable;

		[Token(Token = "0x40016DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _IsSteamVRDrawingControllers IsSteamVRDrawingControllers;

		[Token(Token = "0x40016DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShouldApplicationPause ShouldApplicationPause;

		[Token(Token = "0x40016E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _ShouldApplicationReduceRenderingWork ShouldApplicationReduceRenderingWork;

		[Token(Token = "0x40016E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _DriverDebugRequest DriverDebugRequest;

		[Token(Token = "0x40016E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _PerformFirmwareUpdate PerformFirmwareUpdate;

		[Token(Token = "0x40016E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _AcknowledgeQuit_Exiting AcknowledgeQuit_Exiting;

		[Token(Token = "0x40016E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _AcknowledgeQuit_UserPrompt AcknowledgeQuit_UserPrompt;
	}
	[Token(Token = "0x20002DE")]
	public struct IVRExtendedDisplay
	{
		[Token(Token = "0x2000543")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A2D0", Offset = "0x84A2D0")]
		internal delegate void _GetWindowBounds(int pnX, int pnY, uint pnWidth, uint pnHeight);

		[Token(Token = "0x2000544")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A2E4", Offset = "0x84A2E4")]
		internal delegate void _GetEyeOutputViewport(EVREye eEye, uint pnX, uint pnY, uint pnWidth, uint pnHeight);

		[Token(Token = "0x2000545")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A2F8", Offset = "0x84A2F8")]
		internal delegate void _GetDXGIOutputInfo(int pnAdapterIndex, int pnAdapterOutputIndex);

		[Token(Token = "0x40016E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetWindowBounds GetWindowBounds;

		[Token(Token = "0x40016E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetEyeOutputViewport GetEyeOutputViewport;

		[Token(Token = "0x40016E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDXGIOutputInfo GetDXGIOutputInfo;
	}
	[Token(Token = "0x20002DF")]
	public struct IVRTrackedCamera
	{
		[Token(Token = "0x2000546")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A30C", Offset = "0x84A30C")]
		internal delegate IntPtr _GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError);

		[Token(Token = "0x2000547")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A320", Offset = "0x84A320")]
		internal delegate EVRTrackedCameraError _HasCamera(uint nDeviceIndex, bool pHasCamera);

		[Token(Token = "0x2000548")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A334", Offset = "0x84A334")]
		internal delegate EVRTrackedCameraError _GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, uint pnWidth, uint pnHeight, uint pnFrameBufferSize);

		[Token(Token = "0x2000549")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A348", Offset = "0x84A348")]
		internal delegate EVRTrackedCameraError _GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, HmdVector2_t pFocalLength, HmdVector2_t pCenter);

		[Token(Token = "0x200054A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A35C", Offset = "0x84A35C")]
		internal delegate EVRTrackedCameraError _GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, HmdMatrix44_t pProjection);

		[Token(Token = "0x200054B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A370", Offset = "0x84A370")]
		internal delegate EVRTrackedCameraError _AcquireVideoStreamingService(uint nDeviceIndex, ulong pHandle);

		[Token(Token = "0x200054C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A384", Offset = "0x84A384")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamingService(ulong hTrackedCamera);

		[Token(Token = "0x200054D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A398", Offset = "0x84A398")]
		internal delegate EVRTrackedCameraError _GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x200054E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A3AC", Offset = "0x84A3AC")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, VRTextureBounds_t pTextureBounds, uint pnWidth, uint pnHeight);

		[Token(Token = "0x200054F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A3C0", Offset = "0x84A3C0")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, IntPtr ppD3D11ShaderResourceView, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000550")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A3D4", Offset = "0x84A3D4")]
		internal delegate EVRTrackedCameraError _GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, uint pglTextureId, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize);

		[Token(Token = "0x2000551")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A3E8", Offset = "0x84A3E8")]
		internal delegate EVRTrackedCameraError _ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId);

		[Token(Token = "0x40016E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCameraErrorNameFromEnum GetCameraErrorNameFromEnum;

		[Token(Token = "0x40016E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HasCamera HasCamera;

		[Token(Token = "0x40016EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetCameraFrameSize GetCameraFrameSize;

		[Token(Token = "0x40016EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetCameraIntrinsics GetCameraIntrinsics;

		[Token(Token = "0x40016EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetCameraProjection GetCameraProjection;

		[Token(Token = "0x40016ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _AcquireVideoStreamingService AcquireVideoStreamingService;

		[Token(Token = "0x40016EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ReleaseVideoStreamingService ReleaseVideoStreamingService;

		[Token(Token = "0x40016EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetVideoStreamFrameBuffer GetVideoStreamFrameBuffer;

		[Token(Token = "0x40016F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetVideoStreamTextureSize GetVideoStreamTextureSize;

		[Token(Token = "0x40016F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetVideoStreamTextureD3D11 GetVideoStreamTextureD3D11;

		[Token(Token = "0x40016F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetVideoStreamTextureGL GetVideoStreamTextureGL;

		[Token(Token = "0x40016F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _ReleaseVideoStreamTextureGL ReleaseVideoStreamTextureGL;
	}
	[Token(Token = "0x20002E0")]
	public struct IVRApplications
	{
		[Token(Token = "0x2000552")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A3FC", Offset = "0x84A3FC")]
		internal delegate EVRApplicationError _AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary);

		[Token(Token = "0x2000553")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A410", Offset = "0x84A410")]
		internal delegate EVRApplicationError _RemoveApplicationManifest(string pchApplicationManifestFullPath);

		[Token(Token = "0x2000554")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A424", Offset = "0x84A424")]
		internal delegate bool _IsApplicationInstalled(string pchAppKey);

		[Token(Token = "0x2000555")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A438", Offset = "0x84A438")]
		internal delegate uint _GetApplicationCount();

		[Token(Token = "0x2000556")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A44C", Offset = "0x84A44C")]
		internal delegate EVRApplicationError _GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000557")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A460", Offset = "0x84A460")]
		internal delegate EVRApplicationError _GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000558")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A474", Offset = "0x84A474")]
		internal delegate EVRApplicationError _LaunchApplication(string pchAppKey);

		[Token(Token = "0x2000559")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A488", Offset = "0x84A488")]
		internal delegate EVRApplicationError _LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, [In][Out] AppOverrideKeys_t[] pKeys, uint unKeys);

		[Token(Token = "0x200055A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A49C", Offset = "0x84A49C")]
		internal delegate EVRApplicationError _LaunchApplicationFromMimeType(string pchMimeType, string pchArgs);

		[Token(Token = "0x200055B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A4B0", Offset = "0x84A4B0")]
		internal delegate EVRApplicationError _LaunchDashboardOverlay(string pchAppKey);

		[Token(Token = "0x200055C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A4C4", Offset = "0x84A4C4")]
		internal delegate bool _CancelApplicationLaunch(string pchAppKey);

		[Token(Token = "0x200055D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A4D8", Offset = "0x84A4D8")]
		internal delegate EVRApplicationError _IdentifyApplication(uint unProcessId, string pchAppKey);

		[Token(Token = "0x200055E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A4EC", Offset = "0x84A4EC")]
		internal delegate uint _GetApplicationProcessId(string pchAppKey);

		[Token(Token = "0x200055F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A500", Offset = "0x84A500")]
		internal delegate IntPtr _GetApplicationsErrorNameFromEnum(EVRApplicationError error);

		[Token(Token = "0x2000560")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A514", Offset = "0x84A514")]
		internal delegate uint _GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, EVRApplicationError peError);

		[Token(Token = "0x2000561")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A528", Offset = "0x84A528")]
		internal delegate bool _GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, EVRApplicationError peError);

		[Token(Token = "0x2000562")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A53C", Offset = "0x84A53C")]
		internal delegate ulong _GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, EVRApplicationError peError);

		[Token(Token = "0x2000563")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A550", Offset = "0x84A550")]
		internal delegate EVRApplicationError _SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch);

		[Token(Token = "0x2000564")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A564", Offset = "0x84A564")]
		internal delegate bool _GetApplicationAutoLaunch(string pchAppKey);

		[Token(Token = "0x2000565")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A578", Offset = "0x84A578")]
		internal delegate EVRApplicationError _SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType);

		[Token(Token = "0x2000566")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A58C", Offset = "0x84A58C")]
		internal delegate bool _GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x2000567")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A5A0", Offset = "0x84A5A0")]
		internal delegate bool _GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer);

		[Token(Token = "0x2000568")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A5B4", Offset = "0x84A5B4")]
		internal delegate uint _GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer);

		[Token(Token = "0x2000569")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A5C8", Offset = "0x84A5C8")]
		internal delegate uint _GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs);

		[Token(Token = "0x200056A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A5DC", Offset = "0x84A5DC")]
		internal delegate EVRApplicationError _GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen);

		[Token(Token = "0x200056B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A5F0", Offset = "0x84A5F0")]
		internal delegate EVRApplicationTransitionState _GetTransitionState();

		[Token(Token = "0x200056C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A604", Offset = "0x84A604")]
		internal delegate EVRApplicationError _PerformApplicationPrelaunchCheck(string pchAppKey);

		[Token(Token = "0x200056D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A618", Offset = "0x84A618")]
		internal delegate IntPtr _GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state);

		[Token(Token = "0x200056E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A62C", Offset = "0x84A62C")]
		internal delegate bool _IsQuitUserPromptRequested();

		[Token(Token = "0x200056F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A640", Offset = "0x84A640")]
		internal delegate EVRApplicationError _LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory);

		[Token(Token = "0x2000570")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A654", Offset = "0x84A654")]
		internal delegate uint _GetCurrentSceneProcessId();

		[Token(Token = "0x40016F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _AddApplicationManifest AddApplicationManifest;

		[Token(Token = "0x40016F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveApplicationManifest RemoveApplicationManifest;

		[Token(Token = "0x40016F6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _IsApplicationInstalled IsApplicationInstalled;

		[Token(Token = "0x40016F7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetApplicationCount GetApplicationCount;

		[Token(Token = "0x40016F8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetApplicationKeyByIndex GetApplicationKeyByIndex;

		[Token(Token = "0x40016F9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetApplicationKeyByProcessId GetApplicationKeyByProcessId;

		[Token(Token = "0x40016FA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _LaunchApplication LaunchApplication;

		[Token(Token = "0x40016FB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _LaunchTemplateApplication LaunchTemplateApplication;

		[Token(Token = "0x40016FC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _LaunchApplicationFromMimeType LaunchApplicationFromMimeType;

		[Token(Token = "0x40016FD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _LaunchDashboardOverlay LaunchDashboardOverlay;

		[Token(Token = "0x40016FE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _CancelApplicationLaunch CancelApplicationLaunch;

		[Token(Token = "0x40016FF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _IdentifyApplication IdentifyApplication;

		[Token(Token = "0x4001700")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetApplicationProcessId GetApplicationProcessId;

		[Token(Token = "0x4001701")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetApplicationsErrorNameFromEnum GetApplicationsErrorNameFromEnum;

		[Token(Token = "0x4001702")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _GetApplicationPropertyString GetApplicationPropertyString;

		[Token(Token = "0x4001703")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetApplicationPropertyBool GetApplicationPropertyBool;

		[Token(Token = "0x4001704")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetApplicationPropertyUint64 GetApplicationPropertyUint64;

		[Token(Token = "0x4001705")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _SetApplicationAutoLaunch SetApplicationAutoLaunch;

		[Token(Token = "0x4001706")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _GetApplicationAutoLaunch GetApplicationAutoLaunch;

		[Token(Token = "0x4001707")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _SetDefaultApplicationForMimeType SetDefaultApplicationForMimeType;

		[Token(Token = "0x4001708")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _GetDefaultApplicationForMimeType GetDefaultApplicationForMimeType;

		[Token(Token = "0x4001709")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetApplicationSupportedMimeTypes GetApplicationSupportedMimeTypes;

		[Token(Token = "0x400170A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetApplicationsThatSupportMimeType GetApplicationsThatSupportMimeType;

		[Token(Token = "0x400170B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetApplicationLaunchArguments GetApplicationLaunchArguments;

		[Token(Token = "0x400170C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _GetStartingApplication GetStartingApplication;

		[Token(Token = "0x400170D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetTransitionState GetTransitionState;

		[Token(Token = "0x400170E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _PerformApplicationPrelaunchCheck PerformApplicationPrelaunchCheck;

		[Token(Token = "0x400170F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetApplicationsTransitionStateNameFromEnum GetApplicationsTransitionStateNameFromEnum;

		[Token(Token = "0x4001710")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _IsQuitUserPromptRequested IsQuitUserPromptRequested;

		[Token(Token = "0x4001711")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _LaunchInternalProcess LaunchInternalProcess;

		[Token(Token = "0x4001712")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetCurrentSceneProcessId GetCurrentSceneProcessId;
	}
	[Token(Token = "0x20002E1")]
	public struct IVRChaperone
	{
		[Token(Token = "0x2000571")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A668", Offset = "0x84A668")]
		internal delegate ChaperoneCalibrationState _GetCalibrationState();

		[Token(Token = "0x2000572")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A67C", Offset = "0x84A67C")]
		internal delegate bool _GetPlayAreaSize(float pSizeX, float pSizeZ);

		[Token(Token = "0x2000573")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A690", Offset = "0x84A690")]
		internal delegate bool _GetPlayAreaRect(HmdQuad_t rect);

		[Token(Token = "0x2000574")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A6A4", Offset = "0x84A6A4")]
		internal delegate void _ReloadInfo();

		[Token(Token = "0x2000575")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A6B8", Offset = "0x84A6B8")]
		internal delegate void _SetSceneColor(HmdColor_t color);

		[Token(Token = "0x2000576")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A6CC", Offset = "0x84A6CC")]
		internal delegate void _GetBoundsColor(HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, HmdColor_t pOutputCameraColor);

		[Token(Token = "0x2000577")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A6E0", Offset = "0x84A6E0")]
		internal delegate bool _AreBoundsVisible();

		[Token(Token = "0x2000578")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A6F4", Offset = "0x84A6F4")]
		internal delegate void _ForceBoundsVisible(bool bForce);

		[Token(Token = "0x4001713")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetCalibrationState GetCalibrationState;

		[Token(Token = "0x4001714")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetPlayAreaSize GetPlayAreaSize;

		[Token(Token = "0x4001715")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetPlayAreaRect GetPlayAreaRect;

		[Token(Token = "0x4001716")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _ReloadInfo ReloadInfo;

		[Token(Token = "0x4001717")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetSceneColor SetSceneColor;

		[Token(Token = "0x4001718")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetBoundsColor GetBoundsColor;

		[Token(Token = "0x4001719")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _AreBoundsVisible AreBoundsVisible;

		[Token(Token = "0x400171A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _ForceBoundsVisible ForceBoundsVisible;
	}
	[Token(Token = "0x20002E2")]
	public struct IVRChaperoneSetup
	{
		[Token(Token = "0x2000579")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A708", Offset = "0x84A708")]
		internal delegate bool _CommitWorkingCopy(EChaperoneConfigFile configFile);

		[Token(Token = "0x200057A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A71C", Offset = "0x84A71C")]
		internal delegate void _RevertWorkingCopy();

		[Token(Token = "0x200057B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A730", Offset = "0x84A730")]
		internal delegate bool _GetWorkingPlayAreaSize(float pSizeX, float pSizeZ);

		[Token(Token = "0x200057C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A744", Offset = "0x84A744")]
		internal delegate bool _GetWorkingPlayAreaRect(HmdQuad_t rect);

		[Token(Token = "0x200057D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A758", Offset = "0x84A758")]
		internal delegate bool _GetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint punQuadsCount);

		[Token(Token = "0x200057E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A76C", Offset = "0x84A76C")]
		internal delegate bool _GetLiveCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint punQuadsCount);

		[Token(Token = "0x200057F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A780", Offset = "0x84A780")]
		internal delegate bool _GetWorkingSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000580")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A794", Offset = "0x84A794")]
		internal delegate bool _GetWorkingStandingZeroPoseToRawTrackingPose(HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000581")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A7A8", Offset = "0x84A7A8")]
		internal delegate void _SetWorkingPlayAreaSize(float sizeX, float sizeZ);

		[Token(Token = "0x2000582")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A7BC", Offset = "0x84A7BC")]
		internal delegate void _SetWorkingCollisionBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x2000583")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A7D0", Offset = "0x84A7D0")]
		internal delegate void _SetWorkingSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000584")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A7E4", Offset = "0x84A7E4")]
		internal delegate void _SetWorkingStandingZeroPoseToRawTrackingPose(HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000585")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A7F8", Offset = "0x84A7F8")]
		internal delegate void _ReloadFromDisk(EChaperoneConfigFile configFile);

		[Token(Token = "0x2000586")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A80C", Offset = "0x84A80C")]
		internal delegate bool _GetLiveSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose);

		[Token(Token = "0x2000587")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A820", Offset = "0x84A820")]
		internal delegate void _SetWorkingCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint unTagCount);

		[Token(Token = "0x2000588")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A834", Offset = "0x84A834")]
		internal delegate bool _GetLiveCollisionBoundsTagsInfo([In][Out] byte[] pTagsBuffer, uint punTagCount);

		[Token(Token = "0x2000589")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A848", Offset = "0x84A848")]
		internal delegate bool _SetWorkingPhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint unQuadsCount);

		[Token(Token = "0x200058A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A85C", Offset = "0x84A85C")]
		internal delegate bool _GetLivePhysicalBoundsInfo([In][Out] HmdQuad_t[] pQuadsBuffer, uint punQuadsCount);

		[Token(Token = "0x200058B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A870", Offset = "0x84A870")]
		internal delegate bool _ExportLiveToBuffer(StringBuilder pBuffer, uint pnBufferLength);

		[Token(Token = "0x200058C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A884", Offset = "0x84A884")]
		internal delegate bool _ImportFromBufferToWorking(string pBuffer, uint nImportFlags);

		[Token(Token = "0x400171B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CommitWorkingCopy CommitWorkingCopy;

		[Token(Token = "0x400171C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RevertWorkingCopy RevertWorkingCopy;

		[Token(Token = "0x400171D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetWorkingPlayAreaSize GetWorkingPlayAreaSize;

		[Token(Token = "0x400171E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetWorkingPlayAreaRect GetWorkingPlayAreaRect;

		[Token(Token = "0x400171F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetWorkingCollisionBoundsInfo GetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001720")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetLiveCollisionBoundsInfo GetLiveCollisionBoundsInfo;

		[Token(Token = "0x4001721")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetWorkingSeatedZeroPoseToRawTrackingPose GetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001722")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetWorkingStandingZeroPoseToRawTrackingPose GetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001723")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _SetWorkingPlayAreaSize SetWorkingPlayAreaSize;

		[Token(Token = "0x4001724")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _SetWorkingCollisionBoundsInfo SetWorkingCollisionBoundsInfo;

		[Token(Token = "0x4001725")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetWorkingSeatedZeroPoseToRawTrackingPose SetWorkingSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001726")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _SetWorkingStandingZeroPoseToRawTrackingPose SetWorkingStandingZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001727")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _ReloadFromDisk ReloadFromDisk;

		[Token(Token = "0x4001728")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetLiveSeatedZeroPoseToRawTrackingPose GetLiveSeatedZeroPoseToRawTrackingPose;

		[Token(Token = "0x4001729")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetWorkingCollisionBoundsTagsInfo SetWorkingCollisionBoundsTagsInfo;

		[Token(Token = "0x400172A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetLiveCollisionBoundsTagsInfo GetLiveCollisionBoundsTagsInfo;

		[Token(Token = "0x400172B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetWorkingPhysicalBoundsInfo SetWorkingPhysicalBoundsInfo;

		[Token(Token = "0x400172C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetLivePhysicalBoundsInfo GetLivePhysicalBoundsInfo;

		[Token(Token = "0x400172D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _ExportLiveToBuffer ExportLiveToBuffer;

		[Token(Token = "0x400172E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _ImportFromBufferToWorking ImportFromBufferToWorking;
	}
	[Token(Token = "0x20002E3")]
	public struct IVRCompositor
	{
		[Token(Token = "0x200058D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A898", Offset = "0x84A898")]
		internal delegate void _SetTrackingSpace(ETrackingUniverseOrigin eOrigin);

		[Token(Token = "0x200058E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A8AC", Offset = "0x84A8AC")]
		internal delegate ETrackingUniverseOrigin _GetTrackingSpace();

		[Token(Token = "0x200058F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A8C0", Offset = "0x84A8C0")]
		internal delegate EVRCompositorError _WaitGetPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000590")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A8D4", Offset = "0x84A8D4")]
		internal delegate EVRCompositorError _GetLastPoses([In][Out] TrackedDevicePose_t[] pRenderPoseArray, uint unRenderPoseArrayCount, [In][Out] TrackedDevicePose_t[] pGamePoseArray, uint unGamePoseArrayCount);

		[Token(Token = "0x2000591")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A8E8", Offset = "0x84A8E8")]
		internal delegate EVRCompositorError _GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, TrackedDevicePose_t pOutputPose, TrackedDevicePose_t pOutputGamePose);

		[Token(Token = "0x2000592")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A8FC", Offset = "0x84A8FC")]
		internal delegate EVRCompositorError _Submit(EVREye eEye, Texture_t pTexture, VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags);

		[Token(Token = "0x2000593")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A910", Offset = "0x84A910")]
		internal delegate void _ClearLastSubmittedFrame();

		[Token(Token = "0x2000594")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A924", Offset = "0x84A924")]
		internal delegate void _PostPresentHandoff();

		[Token(Token = "0x2000595")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A938", Offset = "0x84A938")]
		internal delegate bool _GetFrameTiming(Compositor_FrameTiming pTiming, uint unFramesAgo);

		[Token(Token = "0x2000596")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A94C", Offset = "0x84A94C")]
		internal delegate uint _GetFrameTimings(Compositor_FrameTiming pTiming, uint nFrames);

		[Token(Token = "0x2000597")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A960", Offset = "0x84A960")]
		internal delegate float _GetFrameTimeRemaining();

		[Token(Token = "0x2000598")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A974", Offset = "0x84A974")]
		internal delegate void _GetCumulativeStats(Compositor_CumulativeStats pStats, uint nStatsSizeInBytes);

		[Token(Token = "0x2000599")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A988", Offset = "0x84A988")]
		internal delegate void _FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground);

		[Token(Token = "0x200059A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A99C", Offset = "0x84A99C")]
		internal delegate HmdColor_t _GetCurrentFadeColor(bool bBackground);

		[Token(Token = "0x200059B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A9B0", Offset = "0x84A9B0")]
		internal delegate void _FadeGrid(float fSeconds, bool bFadeIn);

		[Token(Token = "0x200059C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A9C4", Offset = "0x84A9C4")]
		internal delegate float _GetCurrentGridAlpha();

		[Token(Token = "0x200059D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A9D8", Offset = "0x84A9D8")]
		internal delegate EVRCompositorError _SetSkyboxOverride([In][Out] Texture_t[] pTextures, uint unTextureCount);

		[Token(Token = "0x200059E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84A9EC", Offset = "0x84A9EC")]
		internal delegate void _ClearSkyboxOverride();

		[Token(Token = "0x200059F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AA00", Offset = "0x84AA00")]
		internal delegate void _CompositorBringToFront();

		[Token(Token = "0x20005A0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AA14", Offset = "0x84AA14")]
		internal delegate void _CompositorGoToBack();

		[Token(Token = "0x20005A1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AA28", Offset = "0x84AA28")]
		internal delegate void _CompositorQuit();

		[Token(Token = "0x20005A2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AA3C", Offset = "0x84AA3C")]
		internal delegate bool _IsFullscreen();

		[Token(Token = "0x20005A3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AA50", Offset = "0x84AA50")]
		internal delegate uint _GetCurrentSceneFocusProcess();

		[Token(Token = "0x20005A4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AA64", Offset = "0x84AA64")]
		internal delegate uint _GetLastFrameRenderer();

		[Token(Token = "0x20005A5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AA78", Offset = "0x84AA78")]
		internal delegate bool _CanRenderScene();

		[Token(Token = "0x20005A6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AA8C", Offset = "0x84AA8C")]
		internal delegate void _ShowMirrorWindow();

		[Token(Token = "0x20005A7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AAA0", Offset = "0x84AAA0")]
		internal delegate void _HideMirrorWindow();

		[Token(Token = "0x20005A8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AAB4", Offset = "0x84AAB4")]
		internal delegate bool _IsMirrorWindowVisible();

		[Token(Token = "0x20005A9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AAC8", Offset = "0x84AAC8")]
		internal delegate void _CompositorDumpImages();

		[Token(Token = "0x20005AA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AADC", Offset = "0x84AADC")]
		internal delegate bool _ShouldAppRenderWithLowResources();

		[Token(Token = "0x20005AB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AAF0", Offset = "0x84AAF0")]
		internal delegate void _ForceInterleavedReprojectionOn(bool bOverride);

		[Token(Token = "0x20005AC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AB04", Offset = "0x84AB04")]
		internal delegate void _ForceReconnectProcess();

		[Token(Token = "0x20005AD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AB18", Offset = "0x84AB18")]
		internal delegate void _SuspendRendering(bool bSuspend);

		[Token(Token = "0x20005AE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AB2C", Offset = "0x84AB2C")]
		internal delegate EVRCompositorError _GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, IntPtr ppD3D11ShaderResourceView);

		[Token(Token = "0x20005AF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AB40", Offset = "0x84AB40")]
		internal delegate void _ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView);

		[Token(Token = "0x20005B0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AB54", Offset = "0x84AB54")]
		internal delegate EVRCompositorError _GetMirrorTextureGL(EVREye eEye, uint pglTextureId, IntPtr pglSharedTextureHandle);

		[Token(Token = "0x20005B1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AB68", Offset = "0x84AB68")]
		internal delegate bool _ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle);

		[Token(Token = "0x20005B2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AB7C", Offset = "0x84AB7C")]
		internal delegate void _LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20005B3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AB90", Offset = "0x84AB90")]
		internal delegate void _UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle);

		[Token(Token = "0x20005B4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ABA4", Offset = "0x84ABA4")]
		internal delegate uint _GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20005B5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ABB8", Offset = "0x84ABB8")]
		internal delegate uint _GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x20005B6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ABCC", Offset = "0x84ABCC")]
		internal delegate void _SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode);

		[Token(Token = "0x20005B7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ABE0", Offset = "0x84ABE0")]
		internal delegate EVRCompositorError _SubmitExplicitTimingData();

		[Token(Token = "0x400172F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _SetTrackingSpace SetTrackingSpace;

		[Token(Token = "0x4001730")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetTrackingSpace GetTrackingSpace;

		[Token(Token = "0x4001731")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _WaitGetPoses WaitGetPoses;

		[Token(Token = "0x4001732")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetLastPoses GetLastPoses;

		[Token(Token = "0x4001733")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetLastPoseForTrackedDeviceIndex GetLastPoseForTrackedDeviceIndex;

		[Token(Token = "0x4001734")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _Submit Submit;

		[Token(Token = "0x4001735")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _ClearLastSubmittedFrame ClearLastSubmittedFrame;

		[Token(Token = "0x4001736")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _PostPresentHandoff PostPresentHandoff;

		[Token(Token = "0x4001737")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFrameTiming GetFrameTiming;

		[Token(Token = "0x4001738")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetFrameTimings GetFrameTimings;

		[Token(Token = "0x4001739")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetFrameTimeRemaining GetFrameTimeRemaining;

		[Token(Token = "0x400173A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetCumulativeStats GetCumulativeStats;

		[Token(Token = "0x400173B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _FadeToColor FadeToColor;

		[Token(Token = "0x400173C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetCurrentFadeColor GetCurrentFadeColor;

		[Token(Token = "0x400173D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _FadeGrid FadeGrid;

		[Token(Token = "0x400173E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetCurrentGridAlpha GetCurrentGridAlpha;

		[Token(Token = "0x400173F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetSkyboxOverride SetSkyboxOverride;

		[Token(Token = "0x4001740")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _ClearSkyboxOverride ClearSkyboxOverride;

		[Token(Token = "0x4001741")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _CompositorBringToFront CompositorBringToFront;

		[Token(Token = "0x4001742")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _CompositorGoToBack CompositorGoToBack;

		[Token(Token = "0x4001743")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _CompositorQuit CompositorQuit;

		[Token(Token = "0x4001744")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _IsFullscreen IsFullscreen;

		[Token(Token = "0x4001745")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _GetCurrentSceneFocusProcess GetCurrentSceneFocusProcess;

		[Token(Token = "0x4001746")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetLastFrameRenderer GetLastFrameRenderer;

		[Token(Token = "0x4001747")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _CanRenderScene CanRenderScene;

		[Token(Token = "0x4001748")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _ShowMirrorWindow ShowMirrorWindow;

		[Token(Token = "0x4001749")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _HideMirrorWindow HideMirrorWindow;

		[Token(Token = "0x400174A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _IsMirrorWindowVisible IsMirrorWindowVisible;

		[Token(Token = "0x400174B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _CompositorDumpImages CompositorDumpImages;

		[Token(Token = "0x400174C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _ShouldAppRenderWithLowResources ShouldAppRenderWithLowResources;

		[Token(Token = "0x400174D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _ForceInterleavedReprojectionOn ForceInterleavedReprojectionOn;

		[Token(Token = "0x400174E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _ForceReconnectProcess ForceReconnectProcess;

		[Token(Token = "0x400174F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _SuspendRendering SuspendRendering;

		[Token(Token = "0x4001750")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _GetMirrorTextureD3D11 GetMirrorTextureD3D11;

		[Token(Token = "0x4001751")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _ReleaseMirrorTextureD3D11 ReleaseMirrorTextureD3D11;

		[Token(Token = "0x4001752")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _GetMirrorTextureGL GetMirrorTextureGL;

		[Token(Token = "0x4001753")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _ReleaseSharedGLTexture ReleaseSharedGLTexture;

		[Token(Token = "0x4001754")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _LockGLSharedTextureForAccess LockGLSharedTextureForAccess;

		[Token(Token = "0x4001755")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _UnlockGLSharedTextureForAccess UnlockGLSharedTextureForAccess;

		[Token(Token = "0x4001756")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetVulkanInstanceExtensionsRequired GetVulkanInstanceExtensionsRequired;

		[Token(Token = "0x4001757")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _GetVulkanDeviceExtensionsRequired GetVulkanDeviceExtensionsRequired;

		[Token(Token = "0x4001758")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _SetExplicitTimingMode SetExplicitTimingMode;

		[Token(Token = "0x4001759")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _SubmitExplicitTimingData SubmitExplicitTimingData;
	}
	[Token(Token = "0x20002E4")]
	public struct IVROverlay
	{
		[Token(Token = "0x20005B8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ABF4", Offset = "0x84ABF4")]
		internal delegate EVROverlayError _FindOverlay(string pchOverlayKey, ulong pOverlayHandle);

		[Token(Token = "0x20005B9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AC08", Offset = "0x84AC08")]
		internal delegate EVROverlayError _CreateOverlay(string pchOverlayKey, string pchOverlayName, ulong pOverlayHandle);

		[Token(Token = "0x20005BA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AC1C", Offset = "0x84AC1C")]
		internal delegate EVROverlayError _DestroyOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005BB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AC30", Offset = "0x84AC30")]
		internal delegate EVROverlayError _SetHighQualityOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005BC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AC44", Offset = "0x84AC44")]
		internal delegate ulong _GetHighQualityOverlay();

		[Token(Token = "0x20005BD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AC58", Offset = "0x84AC58")]
		internal delegate uint _GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, EVROverlayError pError);

		[Token(Token = "0x20005BE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AC6C", Offset = "0x84AC6C")]
		internal delegate uint _GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, EVROverlayError pError);

		[Token(Token = "0x20005BF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AC80", Offset = "0x84AC80")]
		internal delegate EVROverlayError _SetOverlayName(ulong ulOverlayHandle, string pchName);

		[Token(Token = "0x20005C0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AC94", Offset = "0x84AC94")]
		internal delegate EVROverlayError _GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, uint punWidth, uint punHeight);

		[Token(Token = "0x20005C1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ACA8", Offset = "0x84ACA8")]
		internal delegate IntPtr _GetOverlayErrorNameFromEnum(EVROverlayError error);

		[Token(Token = "0x20005C2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ACBC", Offset = "0x84ACBC")]
		internal delegate EVROverlayError _SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID);

		[Token(Token = "0x20005C3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ACD0", Offset = "0x84ACD0")]
		internal delegate uint _GetOverlayRenderingPid(ulong ulOverlayHandle);

		[Token(Token = "0x20005C4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ACE4", Offset = "0x84ACE4")]
		internal delegate EVROverlayError _SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled);

		[Token(Token = "0x20005C5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ACF8", Offset = "0x84ACF8")]
		internal delegate EVROverlayError _GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool pbEnabled);

		[Token(Token = "0x20005C6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AD0C", Offset = "0x84AD0C")]
		internal delegate EVROverlayError _SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue);

		[Token(Token = "0x20005C7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AD20", Offset = "0x84AD20")]
		internal delegate EVROverlayError _GetOverlayColor(ulong ulOverlayHandle, float pfRed, float pfGreen, float pfBlue);

		[Token(Token = "0x20005C8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AD34", Offset = "0x84AD34")]
		internal delegate EVROverlayError _SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha);

		[Token(Token = "0x20005C9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AD48", Offset = "0x84AD48")]
		internal delegate EVROverlayError _GetOverlayAlpha(ulong ulOverlayHandle, float pfAlpha);

		[Token(Token = "0x20005CA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AD5C", Offset = "0x84AD5C")]
		internal delegate EVROverlayError _SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect);

		[Token(Token = "0x20005CB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AD70", Offset = "0x84AD70")]
		internal delegate EVROverlayError _GetOverlayTexelAspect(ulong ulOverlayHandle, float pfTexelAspect);

		[Token(Token = "0x20005CC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AD84", Offset = "0x84AD84")]
		internal delegate EVROverlayError _SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder);

		[Token(Token = "0x20005CD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AD98", Offset = "0x84AD98")]
		internal delegate EVROverlayError _GetOverlaySortOrder(ulong ulOverlayHandle, uint punSortOrder);

		[Token(Token = "0x20005CE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ADAC", Offset = "0x84ADAC")]
		internal delegate EVROverlayError _SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters);

		[Token(Token = "0x20005CF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ADC0", Offset = "0x84ADC0")]
		internal delegate EVROverlayError _GetOverlayWidthInMeters(ulong ulOverlayHandle, float pfWidthInMeters);

		[Token(Token = "0x20005D0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ADD4", Offset = "0x84ADD4")]
		internal delegate EVROverlayError _SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters);

		[Token(Token = "0x20005D1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ADE8", Offset = "0x84ADE8")]
		internal delegate EVROverlayError _GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float pfMinDistanceInMeters, float pfMaxDistanceInMeters);

		[Token(Token = "0x20005D2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84ADFC", Offset = "0x84ADFC")]
		internal delegate EVROverlayError _SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace);

		[Token(Token = "0x20005D3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AE10", Offset = "0x84AE10")]
		internal delegate EVROverlayError _GetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace peTextureColorSpace);

		[Token(Token = "0x20005D4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AE24", Offset = "0x84AE24")]
		internal delegate EVROverlayError _SetOverlayTextureBounds(ulong ulOverlayHandle, VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20005D5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AE38", Offset = "0x84AE38")]
		internal delegate EVROverlayError _GetOverlayTextureBounds(ulong ulOverlayHandle, VRTextureBounds_t pOverlayTextureBounds);

		[Token(Token = "0x20005D6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AE4C", Offset = "0x84AE4C")]
		internal delegate uint _GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, HmdColor_t pColor, EVROverlayError pError);

		[Token(Token = "0x20005D7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AE60", Offset = "0x84AE60")]
		internal delegate EVROverlayError _SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, HmdColor_t pColor);

		[Token(Token = "0x20005D8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AE74", Offset = "0x84AE74")]
		internal delegate EVROverlayError _GetOverlayTransformType(ulong ulOverlayHandle, VROverlayTransformType peTransformType);

		[Token(Token = "0x20005D9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AE88", Offset = "0x84AE88")]
		internal delegate EVROverlayError _SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20005DA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AE9C", Offset = "0x84AE9C")]
		internal delegate EVROverlayError _GetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin peTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToOverlayTransform);

		[Token(Token = "0x20005DB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AEB0", Offset = "0x84AEB0")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20005DC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AEC4", Offset = "0x84AEC4")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint punTrackedDevice, HmdMatrix34_t pmatTrackedDeviceToOverlayTransform);

		[Token(Token = "0x20005DD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AED8", Offset = "0x84AED8")]
		internal delegate EVROverlayError _SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName);

		[Token(Token = "0x20005DE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AEEC", Offset = "0x84AEEC")]
		internal delegate EVROverlayError _GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize);

		[Token(Token = "0x20005DF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AF00", Offset = "0x84AF00")]
		internal delegate EVROverlayError _GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20005E0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AF14", Offset = "0x84AF14")]
		internal delegate EVROverlayError _SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, HmdMatrix34_t pmatParentOverlayToOverlayTransform);

		[Token(Token = "0x20005E1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AF28", Offset = "0x84AF28")]
		internal delegate EVROverlayError _ShowOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005E2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AF3C", Offset = "0x84AF3C")]
		internal delegate EVROverlayError _HideOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005E3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AF50", Offset = "0x84AF50")]
		internal delegate bool _IsOverlayVisible(ulong ulOverlayHandle);

		[Token(Token = "0x20005E4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AF64", Offset = "0x84AF64")]
		internal delegate EVROverlayError _GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, HmdMatrix34_t pmatTransform);

		[Token(Token = "0x20005E5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AF78", Offset = "0x84AF78")]
		internal delegate bool _PollNextOverlayEvent(ulong ulOverlayHandle, VREvent_t pEvent, uint uncbVREvent);

		[Token(Token = "0x20005E6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AF8C", Offset = "0x84AF8C")]
		internal delegate EVROverlayError _GetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod peInputMethod);

		[Token(Token = "0x20005E7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AFA0", Offset = "0x84AFA0")]
		internal delegate EVROverlayError _SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod);

		[Token(Token = "0x20005E8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AFB4", Offset = "0x84AFB4")]
		internal delegate EVROverlayError _GetOverlayMouseScale(ulong ulOverlayHandle, HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20005E9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AFC8", Offset = "0x84AFC8")]
		internal delegate EVROverlayError _SetOverlayMouseScale(ulong ulOverlayHandle, HmdVector2_t pvecMouseScale);

		[Token(Token = "0x20005EA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AFDC", Offset = "0x84AFDC")]
		internal delegate bool _ComputeOverlayIntersection(ulong ulOverlayHandle, VROverlayIntersectionParams_t pParams, VROverlayIntersectionResults_t pResults);

		[Token(Token = "0x20005EB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84AFF0", Offset = "0x84AFF0")]
		internal delegate bool _IsHoverTargetOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005EC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B004", Offset = "0x84B004")]
		internal delegate ulong _GetGamepadFocusOverlay();

		[Token(Token = "0x20005ED")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B018", Offset = "0x84B018")]
		internal delegate EVROverlayError _SetGamepadFocusOverlay(ulong ulNewFocusOverlay);

		[Token(Token = "0x20005EE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B02C", Offset = "0x84B02C")]
		internal delegate EVROverlayError _SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo);

		[Token(Token = "0x20005EF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B040", Offset = "0x84B040")]
		internal delegate EVROverlayError _MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom);

		[Token(Token = "0x20005F0")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B054", Offset = "0x84B054")]
		internal delegate EVROverlayError _SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius);

		[Token(Token = "0x20005F1")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B068", Offset = "0x84B068")]
		internal delegate EVROverlayError _GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, HmdVector2_t pvCenter, float pfRadius);

		[Token(Token = "0x20005F2")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B07C", Offset = "0x84B07C")]
		internal delegate EVROverlayError _SetOverlayTexture(ulong ulOverlayHandle, Texture_t pTexture);

		[Token(Token = "0x20005F3")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B090", Offset = "0x84B090")]
		internal delegate EVROverlayError _ClearOverlayTexture(ulong ulOverlayHandle);

		[Token(Token = "0x20005F4")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B0A4", Offset = "0x84B0A4")]
		internal delegate EVROverlayError _SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth);

		[Token(Token = "0x20005F5")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B0B8", Offset = "0x84B0B8")]
		internal delegate EVROverlayError _SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath);

		[Token(Token = "0x20005F6")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B0CC", Offset = "0x84B0CC")]
		internal delegate EVROverlayError _GetOverlayTexture(ulong ulOverlayHandle, IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, uint pWidth, uint pHeight, uint pNativeFormat, ETextureType pAPIType, EColorSpace pColorSpace, VRTextureBounds_t pTextureBounds);

		[Token(Token = "0x20005F7")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B0E0", Offset = "0x84B0E0")]
		internal delegate EVROverlayError _ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle);

		[Token(Token = "0x20005F8")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B0F4", Offset = "0x84B0F4")]
		internal delegate EVROverlayError _GetOverlayTextureSize(ulong ulOverlayHandle, uint pWidth, uint pHeight);

		[Token(Token = "0x20005F9")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B108", Offset = "0x84B108")]
		internal delegate EVROverlayError _CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ulong pMainHandle, ulong pThumbnailHandle);

		[Token(Token = "0x20005FA")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B11C", Offset = "0x84B11C")]
		internal delegate bool _IsDashboardVisible();

		[Token(Token = "0x20005FB")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B130", Offset = "0x84B130")]
		internal delegate bool _IsActiveDashboardOverlay(ulong ulOverlayHandle);

		[Token(Token = "0x20005FC")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B144", Offset = "0x84B144")]
		internal delegate EVROverlayError _SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId);

		[Token(Token = "0x20005FD")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B158", Offset = "0x84B158")]
		internal delegate EVROverlayError _GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint punProcessId);

		[Token(Token = "0x20005FE")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B16C", Offset = "0x84B16C")]
		internal delegate void _ShowDashboard(string pchOverlayToShow);

		[Token(Token = "0x20005FF")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B180", Offset = "0x84B180")]
		internal delegate uint _GetPrimaryDashboardDevice();

		[Token(Token = "0x2000600")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B194", Offset = "0x84B194")]
		internal delegate EVROverlayError _ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000601")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B1A8", Offset = "0x84B1A8")]
		internal delegate EVROverlayError _ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue);

		[Token(Token = "0x2000602")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B1BC", Offset = "0x84B1BC")]
		internal delegate uint _GetKeyboardText(StringBuilder pchText, uint cchText);

		[Token(Token = "0x2000603")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B1D0", Offset = "0x84B1D0")]
		internal delegate void _HideKeyboard();

		[Token(Token = "0x2000604")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B1E4", Offset = "0x84B1E4")]
		internal delegate void _SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToKeyboardTransform);

		[Token(Token = "0x2000605")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B1F8", Offset = "0x84B1F8")]
		internal delegate void _SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect);

		[Token(Token = "0x2000606")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B20C", Offset = "0x84B20C")]
		internal delegate EVROverlayError _SetOverlayIntersectionMask(ulong ulOverlayHandle, VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize);

		[Token(Token = "0x2000607")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B220", Offset = "0x84B220")]
		internal delegate EVROverlayError _GetOverlayFlags(ulong ulOverlayHandle, uint pFlags);

		[Token(Token = "0x2000608")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B234", Offset = "0x84B234")]
		internal delegate VRMessageOverlayResponse _ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text);

		[Token(Token = "0x2000609")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B248", Offset = "0x84B248")]
		internal delegate void _CloseMessageOverlay();

		[Token(Token = "0x400175A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _FindOverlay FindOverlay;

		[Token(Token = "0x400175B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _CreateOverlay CreateOverlay;

		[Token(Token = "0x400175C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _DestroyOverlay DestroyOverlay;

		[Token(Token = "0x400175D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetHighQualityOverlay SetHighQualityOverlay;

		[Token(Token = "0x400175E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _GetHighQualityOverlay GetHighQualityOverlay;

		[Token(Token = "0x400175F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _GetOverlayKey GetOverlayKey;

		[Token(Token = "0x4001760")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetOverlayName GetOverlayName;

		[Token(Token = "0x4001761")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _SetOverlayName SetOverlayName;

		[Token(Token = "0x4001762")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetOverlayImageData GetOverlayImageData;

		[Token(Token = "0x4001763")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetOverlayErrorNameFromEnum GetOverlayErrorNameFromEnum;

		[Token(Token = "0x4001764")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _SetOverlayRenderingPid SetOverlayRenderingPid;

		[Token(Token = "0x4001765")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetOverlayRenderingPid GetOverlayRenderingPid;

		[Token(Token = "0x4001766")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _SetOverlayFlag SetOverlayFlag;

		[Token(Token = "0x4001767")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetOverlayFlag GetOverlayFlag;

		[Token(Token = "0x4001768")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _SetOverlayColor SetOverlayColor;

		[Token(Token = "0x4001769")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetOverlayColor GetOverlayColor;

		[Token(Token = "0x400176A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _SetOverlayAlpha SetOverlayAlpha;

		[Token(Token = "0x400176B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetOverlayAlpha GetOverlayAlpha;

		[Token(Token = "0x400176C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		internal _SetOverlayTexelAspect SetOverlayTexelAspect;

		[Token(Token = "0x400176D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		internal _GetOverlayTexelAspect GetOverlayTexelAspect;

		[Token(Token = "0x400176E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		internal _SetOverlaySortOrder SetOverlaySortOrder;

		[Token(Token = "0x400176F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		internal _GetOverlaySortOrder GetOverlaySortOrder;

		[Token(Token = "0x4001770")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		internal _SetOverlayWidthInMeters SetOverlayWidthInMeters;

		[Token(Token = "0x4001771")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		internal _GetOverlayWidthInMeters GetOverlayWidthInMeters;

		[Token(Token = "0x4001772")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		internal _SetOverlayAutoCurveDistanceRangeInMeters SetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001773")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		internal _GetOverlayAutoCurveDistanceRangeInMeters GetOverlayAutoCurveDistanceRangeInMeters;

		[Token(Token = "0x4001774")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		internal _SetOverlayTextureColorSpace SetOverlayTextureColorSpace;

		[Token(Token = "0x4001775")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		internal _GetOverlayTextureColorSpace GetOverlayTextureColorSpace;

		[Token(Token = "0x4001776")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		internal _SetOverlayTextureBounds SetOverlayTextureBounds;

		[Token(Token = "0x4001777")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		internal _GetOverlayTextureBounds GetOverlayTextureBounds;

		[Token(Token = "0x4001778")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		internal _GetOverlayRenderModel GetOverlayRenderModel;

		[Token(Token = "0x4001779")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		internal _SetOverlayRenderModel SetOverlayRenderModel;

		[Token(Token = "0x400177A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		internal _GetOverlayTransformType GetOverlayTransformType;

		[Token(Token = "0x400177B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		internal _SetOverlayTransformAbsolute SetOverlayTransformAbsolute;

		[Token(Token = "0x400177C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		internal _GetOverlayTransformAbsolute GetOverlayTransformAbsolute;

		[Token(Token = "0x400177D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		internal _SetOverlayTransformTrackedDeviceRelative SetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x400177E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		internal _GetOverlayTransformTrackedDeviceRelative GetOverlayTransformTrackedDeviceRelative;

		[Token(Token = "0x400177F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		internal _SetOverlayTransformTrackedDeviceComponent SetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001780")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		internal _GetOverlayTransformTrackedDeviceComponent GetOverlayTransformTrackedDeviceComponent;

		[Token(Token = "0x4001781")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		internal _GetOverlayTransformOverlayRelative GetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001782")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		internal _SetOverlayTransformOverlayRelative SetOverlayTransformOverlayRelative;

		[Token(Token = "0x4001783")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
		internal _ShowOverlay ShowOverlay;

		[Token(Token = "0x4001784")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
		internal _HideOverlay HideOverlay;

		[Token(Token = "0x4001785")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
		internal _IsOverlayVisible IsOverlayVisible;

		[Token(Token = "0x4001786")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x160")]
		internal _GetTransformForOverlayCoordinates GetTransformForOverlayCoordinates;

		[Token(Token = "0x4001787")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x168")]
		internal _PollNextOverlayEvent PollNextOverlayEvent;

		[Token(Token = "0x4001788")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x170")]
		internal _GetOverlayInputMethod GetOverlayInputMethod;

		[Token(Token = "0x4001789")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x178")]
		internal _SetOverlayInputMethod SetOverlayInputMethod;

		[Token(Token = "0x400178A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x180")]
		internal _GetOverlayMouseScale GetOverlayMouseScale;

		[Token(Token = "0x400178B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x188")]
		internal _SetOverlayMouseScale SetOverlayMouseScale;

		[Token(Token = "0x400178C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x190")]
		internal _ComputeOverlayIntersection ComputeOverlayIntersection;

		[Token(Token = "0x400178D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x198")]
		internal _IsHoverTargetOverlay IsHoverTargetOverlay;

		[Token(Token = "0x400178E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A0")]
		internal _GetGamepadFocusOverlay GetGamepadFocusOverlay;

		[Token(Token = "0x400178F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A8")]
		internal _SetGamepadFocusOverlay SetGamepadFocusOverlay;

		[Token(Token = "0x4001790")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B0")]
		internal _SetOverlayNeighbor SetOverlayNeighbor;

		[Token(Token = "0x4001791")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B8")]
		internal _MoveGamepadFocusToNeighbor MoveGamepadFocusToNeighbor;

		[Token(Token = "0x4001792")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C0")]
		internal _SetOverlayDualAnalogTransform SetOverlayDualAnalogTransform;

		[Token(Token = "0x4001793")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C8")]
		internal _GetOverlayDualAnalogTransform GetOverlayDualAnalogTransform;

		[Token(Token = "0x4001794")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D0")]
		internal _SetOverlayTexture SetOverlayTexture;

		[Token(Token = "0x4001795")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D8")]
		internal _ClearOverlayTexture ClearOverlayTexture;

		[Token(Token = "0x4001796")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E0")]
		internal _SetOverlayRaw SetOverlayRaw;

		[Token(Token = "0x4001797")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1E8")]
		internal _SetOverlayFromFile SetOverlayFromFile;

		[Token(Token = "0x4001798")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F0")]
		internal _GetOverlayTexture GetOverlayTexture;

		[Token(Token = "0x4001799")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1F8")]
		internal _ReleaseNativeOverlayHandle ReleaseNativeOverlayHandle;

		[Token(Token = "0x400179A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x200")]
		internal _GetOverlayTextureSize GetOverlayTextureSize;

		[Token(Token = "0x400179B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x208")]
		internal _CreateDashboardOverlay CreateDashboardOverlay;

		[Token(Token = "0x400179C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x210")]
		internal _IsDashboardVisible IsDashboardVisible;

		[Token(Token = "0x400179D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x218")]
		internal _IsActiveDashboardOverlay IsActiveDashboardOverlay;

		[Token(Token = "0x400179E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x220")]
		internal _SetDashboardOverlaySceneProcess SetDashboardOverlaySceneProcess;

		[Token(Token = "0x400179F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x228")]
		internal _GetDashboardOverlaySceneProcess GetDashboardOverlaySceneProcess;

		[Token(Token = "0x40017A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x230")]
		internal _ShowDashboard ShowDashboard;

		[Token(Token = "0x40017A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x238")]
		internal _GetPrimaryDashboardDevice GetPrimaryDashboardDevice;

		[Token(Token = "0x40017A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x240")]
		internal _ShowKeyboard ShowKeyboard;

		[Token(Token = "0x40017A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x248")]
		internal _ShowKeyboardForOverlay ShowKeyboardForOverlay;

		[Token(Token = "0x40017A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x250")]
		internal _GetKeyboardText GetKeyboardText;

		[Token(Token = "0x40017A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x258")]
		internal _HideKeyboard HideKeyboard;

		[Token(Token = "0x40017A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x260")]
		internal _SetKeyboardTransformAbsolute SetKeyboardTransformAbsolute;

		[Token(Token = "0x40017A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x268")]
		internal _SetKeyboardPositionForOverlay SetKeyboardPositionForOverlay;

		[Token(Token = "0x40017A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x270")]
		internal _SetOverlayIntersectionMask SetOverlayIntersectionMask;

		[Token(Token = "0x40017A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x278")]
		internal _GetOverlayFlags GetOverlayFlags;

		[Token(Token = "0x40017AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x280")]
		internal _ShowMessageOverlay ShowMessageOverlay;

		[Token(Token = "0x40017AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x288")]
		internal _CloseMessageOverlay CloseMessageOverlay;
	}
	[Token(Token = "0x20002E5")]
	public struct IVRRenderModels
	{
		[Token(Token = "0x200060A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B25C", Offset = "0x84B25C")]
		internal delegate EVRRenderModelError _LoadRenderModel_Async(string pchRenderModelName, IntPtr ppRenderModel);

		[Token(Token = "0x200060B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B270", Offset = "0x84B270")]
		internal delegate void _FreeRenderModel(IntPtr pRenderModel);

		[Token(Token = "0x200060C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B284", Offset = "0x84B284")]
		internal delegate EVRRenderModelError _LoadTexture_Async(int textureId, IntPtr ppTexture);

		[Token(Token = "0x200060D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B298", Offset = "0x84B298")]
		internal delegate void _FreeTexture(IntPtr pTexture);

		[Token(Token = "0x200060E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B2AC", Offset = "0x84B2AC")]
		internal delegate EVRRenderModelError _LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, IntPtr ppD3D11Texture2D);

		[Token(Token = "0x200060F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B2C0", Offset = "0x84B2C0")]
		internal delegate EVRRenderModelError _LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture);

		[Token(Token = "0x2000610")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B2D4", Offset = "0x84B2D4")]
		internal delegate void _FreeTextureD3D11(IntPtr pD3D11Texture2D);

		[Token(Token = "0x2000611")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B2E8", Offset = "0x84B2E8")]
		internal delegate uint _GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen);

		[Token(Token = "0x2000612")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B2FC", Offset = "0x84B2FC")]
		internal delegate uint _GetRenderModelCount();

		[Token(Token = "0x2000613")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B310", Offset = "0x84B310")]
		internal delegate uint _GetComponentCount(string pchRenderModelName);

		[Token(Token = "0x2000614")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B324", Offset = "0x84B324")]
		internal delegate uint _GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen);

		[Token(Token = "0x2000615")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B338", Offset = "0x84B338")]
		internal delegate ulong _GetComponentButtonMask(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000616")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B34C", Offset = "0x84B34C")]
		internal delegate uint _GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen);

		[Token(Token = "0x2000617")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B360", Offset = "0x84B360")]
		internal delegate bool _GetComponentState(string pchRenderModelName, string pchComponentName, VRControllerState_t pControllerState, RenderModel_ControllerMode_State_t pState, RenderModel_ComponentState_t pComponentState);

		[Token(Token = "0x2000618")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B374", Offset = "0x84B374")]
		internal delegate bool _RenderModelHasComponent(string pchRenderModelName, string pchComponentName);

		[Token(Token = "0x2000619")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B388", Offset = "0x84B388")]
		internal delegate uint _GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, EVRRenderModelError peError);

		[Token(Token = "0x200061A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B39C", Offset = "0x84B39C")]
		internal delegate uint _GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, EVRRenderModelError peError);

		[Token(Token = "0x200061B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B3B0", Offset = "0x84B3B0")]
		internal delegate IntPtr _GetRenderModelErrorNameFromEnum(EVRRenderModelError error);

		[Token(Token = "0x40017AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadRenderModel_Async LoadRenderModel_Async;

		[Token(Token = "0x40017AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _FreeRenderModel FreeRenderModel;

		[Token(Token = "0x40017AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _LoadTexture_Async LoadTexture_Async;

		[Token(Token = "0x40017AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _FreeTexture FreeTexture;

		[Token(Token = "0x40017B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _LoadTextureD3D11_Async LoadTextureD3D11_Async;

		[Token(Token = "0x40017B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _LoadIntoTextureD3D11_Async LoadIntoTextureD3D11_Async;

		[Token(Token = "0x40017B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _FreeTextureD3D11 FreeTextureD3D11;

		[Token(Token = "0x40017B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetRenderModelName GetRenderModelName;

		[Token(Token = "0x40017B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetRenderModelCount GetRenderModelCount;

		[Token(Token = "0x40017B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetComponentCount GetComponentCount;

		[Token(Token = "0x40017B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _GetComponentName GetComponentName;

		[Token(Token = "0x40017B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _GetComponentButtonMask GetComponentButtonMask;

		[Token(Token = "0x40017B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		internal _GetComponentRenderModelName GetComponentRenderModelName;

		[Token(Token = "0x40017B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		internal _GetComponentState GetComponentState;

		[Token(Token = "0x40017BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		internal _RenderModelHasComponent RenderModelHasComponent;

		[Token(Token = "0x40017BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		internal _GetRenderModelThumbnailURL GetRenderModelThumbnailURL;

		[Token(Token = "0x40017BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		internal _GetRenderModelOriginalPath GetRenderModelOriginalPath;

		[Token(Token = "0x40017BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		internal _GetRenderModelErrorNameFromEnum GetRenderModelErrorNameFromEnum;
	}
	[Token(Token = "0x20002E6")]
	public struct IVRNotifications
	{
		[Token(Token = "0x200061C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B3C4", Offset = "0x84B3C4")]
		internal delegate EVRNotificationError _CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, NotificationBitmap_t pImage, uint pNotificationId);

		[Token(Token = "0x200061D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B3D8", Offset = "0x84B3D8")]
		internal delegate EVRNotificationError _RemoveNotification(uint notificationId);

		[Token(Token = "0x40017BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _CreateNotification CreateNotification;

		[Token(Token = "0x40017BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _RemoveNotification RemoveNotification;
	}
	[Token(Token = "0x20002E7")]
	public struct IVRSettings
	{
		[Token(Token = "0x200061E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B3EC", Offset = "0x84B3EC")]
		internal delegate IntPtr _GetSettingsErrorNameFromEnum(EVRSettingsError eError);

		[Token(Token = "0x200061F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B400", Offset = "0x84B400")]
		internal delegate bool _Sync(bool bForce, EVRSettingsError peError);

		[Token(Token = "0x2000620")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B414", Offset = "0x84B414")]
		internal delegate void _SetBool(string pchSection, string pchSettingsKey, bool bValue, EVRSettingsError peError);

		[Token(Token = "0x2000621")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B428", Offset = "0x84B428")]
		internal delegate void _SetInt32(string pchSection, string pchSettingsKey, int nValue, EVRSettingsError peError);

		[Token(Token = "0x2000622")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B43C", Offset = "0x84B43C")]
		internal delegate void _SetFloat(string pchSection, string pchSettingsKey, float flValue, EVRSettingsError peError);

		[Token(Token = "0x2000623")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B450", Offset = "0x84B450")]
		internal delegate void _SetString(string pchSection, string pchSettingsKey, string pchValue, EVRSettingsError peError);

		[Token(Token = "0x2000624")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B464", Offset = "0x84B464")]
		internal delegate bool _GetBool(string pchSection, string pchSettingsKey, EVRSettingsError peError);

		[Token(Token = "0x2000625")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B478", Offset = "0x84B478")]
		internal delegate int _GetInt32(string pchSection, string pchSettingsKey, EVRSettingsError peError);

		[Token(Token = "0x2000626")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B48C", Offset = "0x84B48C")]
		internal delegate float _GetFloat(string pchSection, string pchSettingsKey, EVRSettingsError peError);

		[Token(Token = "0x2000627")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B4A0", Offset = "0x84B4A0")]
		internal delegate void _GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, EVRSettingsError peError);

		[Token(Token = "0x2000628")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B4B4", Offset = "0x84B4B4")]
		internal delegate void _RemoveSection(string pchSection, EVRSettingsError peError);

		[Token(Token = "0x2000629")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B4C8", Offset = "0x84B4C8")]
		internal delegate void _RemoveKeyInSection(string pchSection, string pchSettingsKey, EVRSettingsError peError);

		[Token(Token = "0x40017C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetSettingsErrorNameFromEnum GetSettingsErrorNameFromEnum;

		[Token(Token = "0x40017C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _Sync Sync;

		[Token(Token = "0x40017C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _SetBool SetBool;

		[Token(Token = "0x40017C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _SetInt32 SetInt32;

		[Token(Token = "0x40017C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _SetFloat SetFloat;

		[Token(Token = "0x40017C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _SetString SetString;

		[Token(Token = "0x40017C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _GetBool GetBool;

		[Token(Token = "0x40017C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		internal _GetInt32 GetInt32;

		[Token(Token = "0x40017C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		internal _GetFloat GetFloat;

		[Token(Token = "0x40017C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		internal _GetString GetString;

		[Token(Token = "0x40017CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		internal _RemoveSection RemoveSection;

		[Token(Token = "0x40017CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		internal _RemoveKeyInSection RemoveKeyInSection;
	}
	[Token(Token = "0x20002E8")]
	public struct IVRScreenshots
	{
		[Token(Token = "0x200062A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B4DC", Offset = "0x84B4DC")]
		internal delegate EVRScreenshotError _RequestScreenshot(uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x200062B")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B4F0", Offset = "0x84B4F0")]
		internal delegate EVRScreenshotError _HookScreenshot([In][Out] EVRScreenshotType[] pSupportedTypes, int numTypes);

		[Token(Token = "0x200062C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B504", Offset = "0x84B504")]
		internal delegate EVRScreenshotType _GetScreenshotPropertyType(uint screenshotHandle, EVRScreenshotError pError);

		[Token(Token = "0x200062D")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B518", Offset = "0x84B518")]
		internal delegate uint _GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, EVRScreenshotError pError);

		[Token(Token = "0x200062E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B52C", Offset = "0x84B52C")]
		internal delegate EVRScreenshotError _UpdateScreenshotProgress(uint screenshotHandle, float flProgress);

		[Token(Token = "0x200062F")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B540", Offset = "0x84B540")]
		internal delegate EVRScreenshotError _TakeStereoScreenshot(uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename);

		[Token(Token = "0x2000630")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B554", Offset = "0x84B554")]
		internal delegate EVRScreenshotError _SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename);

		[Token(Token = "0x40017CC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _RequestScreenshot RequestScreenshot;

		[Token(Token = "0x40017CD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _HookScreenshot HookScreenshot;

		[Token(Token = "0x40017CE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetScreenshotPropertyType GetScreenshotPropertyType;

		[Token(Token = "0x40017CF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		internal _GetScreenshotPropertyFilename GetScreenshotPropertyFilename;

		[Token(Token = "0x40017D0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		internal _UpdateScreenshotProgress UpdateScreenshotProgress;

		[Token(Token = "0x40017D1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		internal _TakeStereoScreenshot TakeStereoScreenshot;

		[Token(Token = "0x40017D2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		internal _SubmitScreenshot SubmitScreenshot;
	}
	[Token(Token = "0x20002E9")]
	public struct IVRResources
	{
		[Token(Token = "0x2000631")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B568", Offset = "0x84B568")]
		internal delegate uint _LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen);

		[Token(Token = "0x2000632")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B57C", Offset = "0x84B57C")]
		internal delegate uint _GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen);

		[Token(Token = "0x40017D3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _LoadSharedResource LoadSharedResource;

		[Token(Token = "0x40017D4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetResourceFullPath GetResourceFullPath;
	}
	[Token(Token = "0x20002EA")]
	public struct IVRDriverManager
	{
		[Token(Token = "0x2000633")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B590", Offset = "0x84B590")]
		internal delegate uint _GetDriverCount();

		[Token(Token = "0x2000634")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B5A4", Offset = "0x84B5A4")]
		internal delegate uint _GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize);

		[Token(Token = "0x2000635")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B5B8", Offset = "0x84B5B8")]
		internal delegate ulong _GetDriverHandle(string pchDriverName);

		[Token(Token = "0x40017D5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		internal _GetDriverCount GetDriverCount;

		[Token(Token = "0x40017D6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		internal _GetDriverName GetDriverName;

		[Token(Token = "0x40017D7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		internal _GetDriverHandle GetDriverHandle;
	}
	[Token(Token = "0x20002EB")]
	public class CVRSystem
	{
		[Token(Token = "0x2000636")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B5CC", Offset = "0x84B5CC")]
		internal delegate bool _PollNextEventPacked(VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x2000637")]
		private struct PollNextEventUnion
		{
			[Token(Token = "0x40024C3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._PollNextEvent pPollNextEvent;

			[Token(Token = "0x40024C4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextEventPacked pPollNextEventPacked;
		}

		[Token(Token = "0x2000638")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B5E0", Offset = "0x84B5E0")]
		internal delegate bool _GetControllerStatePacked(uint unControllerDeviceIndex, VRControllerState_t_Packed pControllerState, uint unControllerStateSize);

		[StructLayout(2)]
		[Token(Token = "0x2000639")]
		private struct GetControllerStateUnion
		{
			[Token(Token = "0x40024C5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerState pGetControllerState;

			[Token(Token = "0x40024C6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStatePacked pGetControllerStatePacked;
		}

		[Token(Token = "0x200063A")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B5F4", Offset = "0x84B5F4")]
		internal delegate bool _GetControllerStateWithPosePacked(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, VRControllerState_t_Packed pControllerState, uint unControllerStateSize, TrackedDevicePose_t pTrackedDevicePose);

		[StructLayout(2)]
		[Token(Token = "0x200063B")]
		private struct GetControllerStateWithPoseUnion
		{
			[Token(Token = "0x40024C7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRSystem._GetControllerStateWithPose pGetControllerStateWithPose;

			[Token(Token = "0x40024C8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetControllerStateWithPosePacked pGetControllerStateWithPosePacked;
		}

		[Token(Token = "0x40017D8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSystem FnTable;

		[Token(Token = "0x6001708")]
		[Address(RVA = "0xDBCA4C", Offset = "0xDBCA4C", VA = "0xDBCA4C")]
		internal CVRSystem(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001709")]
		[Address(RVA = "0xDBCB88", Offset = "0xDBCB88", VA = "0xDBCB88")]
		public void GetRecommendedRenderTargetSize(uint pnWidth, uint pnHeight)
		{
		}

		[Token(Token = "0x600170A")]
		[Address(RVA = "0xDBCBB0", Offset = "0xDBCBB0", VA = "0xDBCBB0")]
		public HmdMatrix44_t GetProjectionMatrix(EVREye eEye, float fNearZ, float fFarZ)
		{
			return default(HmdMatrix44_t);
		}

		[Token(Token = "0x600170B")]
		[Address(RVA = "0xDBCBFC", Offset = "0xDBCBFC", VA = "0xDBCBFC")]
		public void GetProjectionRaw(EVREye eEye, float pfLeft, float pfRight, float pfTop, float pfBottom)
		{
		}

		[Token(Token = "0x600170C")]
		[Address(RVA = "0xDBCC2C", Offset = "0xDBCC2C", VA = "0xDBCC2C")]
		public bool ComputeDistortion(EVREye eEye, float fU, float fV, DistortionCoordinates_t pDistortionCoordinates)
		{
			return default(bool);
		}

		[Token(Token = "0x600170D")]
		[Address(RVA = "0xDBCC4C", Offset = "0xDBCC4C", VA = "0xDBCC4C")]
		public HmdMatrix34_t GetEyeToHeadTransform(EVREye eEye)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x600170E")]
		[Address(RVA = "0xDBCC98", Offset = "0xDBCC98", VA = "0xDBCC98")]
		public bool GetTimeSinceLastVsync(float pfSecondsSinceLastVsync, ulong pulFrameCounter)
		{
			return default(bool);
		}

		[Token(Token = "0x600170F")]
		[Address(RVA = "0xDBCCC0", Offset = "0xDBCCC0", VA = "0xDBCCC0")]
		public int GetD3D9AdapterIndex()
		{
			return default(int);
		}

		[Token(Token = "0x6001710")]
		[Address(RVA = "0xDBCCE0", Offset = "0xDBCCE0", VA = "0xDBCCE0")]
		public void GetDXGIOutputInfo(int pnAdapterIndex)
		{
		}

		[Token(Token = "0x6001711")]
		[Address(RVA = "0xDBCD04", Offset = "0xDBCD04", VA = "0xDBCD04")]
		public void GetOutputDevice(ulong pnDevice, ETextureType textureType, IntPtr pInstance)
		{
		}

		[Token(Token = "0x6001712")]
		[Address(RVA = "0xDBCD28", Offset = "0xDBCD28", VA = "0xDBCD28")]
		public bool IsDisplayOnDesktop()
		{
			return default(bool);
		}

		[Token(Token = "0x6001713")]
		[Address(RVA = "0xDBCD48", Offset = "0xDBCD48", VA = "0xDBCD48")]
		public bool SetDisplayVisibility(bool bIsVisibleOnDesktop)
		{
			return default(bool);
		}

		[Token(Token = "0x6001714")]
		[Address(RVA = "0xDBCD6C", Offset = "0xDBCD6C", VA = "0xDBCD6C")]
		public void GetDeviceToAbsoluteTrackingPose(ETrackingUniverseOrigin eOrigin, float fPredictedSecondsToPhotonsFromNow, TrackedDevicePose_t[] pTrackedDevicePoseArray)
		{
		}

		[Token(Token = "0x6001715")]
		[Address(RVA = "0xDBCD94", Offset = "0xDBCD94", VA = "0xDBCD94")]
		public void ResetSeatedZeroPose()
		{
		}

		[Token(Token = "0x6001716")]
		[Address(RVA = "0xDBCDB4", Offset = "0xDBCDB4", VA = "0xDBCDB4")]
		public HmdMatrix34_t GetSeatedZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001717")]
		[Address(RVA = "0xDBCE00", Offset = "0xDBCE00", VA = "0xDBCE00")]
		public HmdMatrix34_t GetRawZeroPoseToStandingAbsoluteTrackingPose()
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001718")]
		[Address(RVA = "0xDBCE4C", Offset = "0xDBCE4C", VA = "0xDBCE4C")]
		public uint GetSortedTrackedDeviceIndicesOfClass(ETrackedDeviceClass eTrackedDeviceClass, uint[] punTrackedDeviceIndexArray, uint unRelativeToTrackedDeviceIndex)
		{
			return default(uint);
		}

		[Token(Token = "0x6001719")]
		[Address(RVA = "0xDBCE78", Offset = "0xDBCE78", VA = "0xDBCE78")]
		public EDeviceActivityLevel GetTrackedDeviceActivityLevel(uint unDeviceId)
		{
			return default(EDeviceActivityLevel);
		}

		[Token(Token = "0x600171A")]
		[Address(RVA = "0xDBCE98", Offset = "0xDBCE98", VA = "0xDBCE98")]
		public void ApplyTransform(TrackedDevicePose_t pOutputPose, TrackedDevicePose_t pTrackedDevicePose, HmdMatrix34_t pTransform)
		{
		}

		[Token(Token = "0x600171B")]
		[Address(RVA = "0xDBCEB8", Offset = "0xDBCEB8", VA = "0xDBCEB8")]
		public uint GetTrackedDeviceIndexForControllerRole(ETrackedControllerRole unDeviceType)
		{
			return default(uint);
		}

		[Token(Token = "0x600171C")]
		[Address(RVA = "0xDBCED8", Offset = "0xDBCED8", VA = "0xDBCED8")]
		public ETrackedControllerRole GetControllerRoleForTrackedDeviceIndex(uint unDeviceIndex)
		{
			return default(ETrackedControllerRole);
		}

		[Token(Token = "0x600171D")]
		[Address(RVA = "0xDBCEF8", Offset = "0xDBCEF8", VA = "0xDBCEF8")]
		public ETrackedDeviceClass GetTrackedDeviceClass(uint unDeviceIndex)
		{
			return default(ETrackedDeviceClass);
		}

		[Token(Token = "0x600171E")]
		[Address(RVA = "0xDBCF18", Offset = "0xDBCF18", VA = "0xDBCF18")]
		public bool IsTrackedDeviceConnected(uint unDeviceIndex)
		{
			return default(bool);
		}

		[Token(Token = "0x600171F")]
		[Address(RVA = "0xDBCF38", Offset = "0xDBCF38", VA = "0xDBCF38")]
		public bool GetBoolTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001720")]
		[Address(RVA = "0xDBCF58", Offset = "0xDBCF58", VA = "0xDBCF58")]
		public float GetFloatTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError)
		{
			return default(float);
		}

		[Token(Token = "0x6001721")]
		[Address(RVA = "0xDBCF78", Offset = "0xDBCF78", VA = "0xDBCF78")]
		public int GetInt32TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError)
		{
			return default(int);
		}

		[Token(Token = "0x6001722")]
		[Address(RVA = "0xDBCF98", Offset = "0xDBCF98", VA = "0xDBCF98")]
		public ulong GetUint64TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001723")]
		[Address(RVA = "0xDBCFB8", Offset = "0xDBCFB8", VA = "0xDBCFB8")]
		public HmdMatrix34_t GetMatrix34TrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, ETrackedPropertyError pError)
		{
			return default(HmdMatrix34_t);
		}

		[Token(Token = "0x6001724")]
		[Address(RVA = "0xDBD004", Offset = "0xDBD004", VA = "0xDBD004")]
		public uint GetArrayTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, uint propType, IntPtr pBuffer, uint unBufferSize, ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001725")]
		[Address(RVA = "0xDBD024", Offset = "0xDBD024", VA = "0xDBD024")]
		public uint GetStringTrackedDeviceProperty(uint unDeviceIndex, ETrackedDeviceProperty prop, StringBuilder pchValue, uint unBufferSize, ETrackedPropertyError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001726")]
		[Address(RVA = "0xDBD044", Offset = "0xDBD044", VA = "0xDBD044")]
		public string GetPropErrorNameFromEnum(ETrackedPropertyError error)
		{
			return null;
		}

		[Token(Token = "0x6001727")]
		[Address(RVA = "0xDBD0D4", Offset = "0xDBD0D4", VA = "0xDBD0D4")]
		public bool PollNextEvent(VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x6001728")]
		[Address(RVA = "0xDBD278", Offset = "0xDBD278", VA = "0xDBD278")]
		public bool PollNextEventWithPose(ETrackingUniverseOrigin eOrigin, VREvent_t pEvent, uint uncbVREvent, TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001729")]
		[Address(RVA = "0xDBD298", Offset = "0xDBD298", VA = "0xDBD298")]
		public string GetEventTypeNameFromEnum(EVREventType eType)
		{
			return null;
		}

		[Token(Token = "0x600172A")]
		[Address(RVA = "0xDBD328", Offset = "0xDBD328", VA = "0xDBD328")]
		public HiddenAreaMesh_t GetHiddenAreaMesh(EVREye eEye, EHiddenAreaMeshType type)
		{
			return default(HiddenAreaMesh_t);
		}

		[Token(Token = "0x600172B")]
		[Address(RVA = "0xDBD348", Offset = "0xDBD348", VA = "0xDBD348")]
		public bool GetControllerState(uint unControllerDeviceIndex, VRControllerState_t pControllerState, uint unControllerStateSize)
		{
			return default(bool);
		}

		[Token(Token = "0x600172C")]
		[Address(RVA = "0xDBD510", Offset = "0xDBD510", VA = "0xDBD510")]
		public bool GetControllerStateWithPose(ETrackingUniverseOrigin eOrigin, uint unControllerDeviceIndex, VRControllerState_t pControllerState, uint unControllerStateSize, TrackedDevicePose_t pTrackedDevicePose)
		{
			return default(bool);
		}

		[Token(Token = "0x600172D")]
		[Address(RVA = "0xDBD6F8", Offset = "0xDBD6F8", VA = "0xDBD6F8")]
		public void TriggerHapticPulse(uint unControllerDeviceIndex, uint unAxisId, char usDurationMicroSec)
		{
		}

		[Token(Token = "0x600172E")]
		[Address(RVA = "0xDBD718", Offset = "0xDBD718", VA = "0xDBD718")]
		public string GetButtonIdNameFromEnum(EVRButtonId eButtonId)
		{
			return null;
		}

		[Token(Token = "0x600172F")]
		[Address(RVA = "0xDBD7A8", Offset = "0xDBD7A8", VA = "0xDBD7A8")]
		public string GetControllerAxisTypeNameFromEnum(EVRControllerAxisType eAxisType)
		{
			return null;
		}

		[Token(Token = "0x6001730")]
		[Address(RVA = "0xDBD838", Offset = "0xDBD838", VA = "0xDBD838")]
		public bool IsInputAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001731")]
		[Address(RVA = "0xDBD858", Offset = "0xDBD858", VA = "0xDBD858")]
		public bool IsSteamVRDrawingControllers()
		{
			return default(bool);
		}

		[Token(Token = "0x6001732")]
		[Address(RVA = "0xDBD878", Offset = "0xDBD878", VA = "0xDBD878")]
		public bool ShouldApplicationPause()
		{
			return default(bool);
		}

		[Token(Token = "0x6001733")]
		[Address(RVA = "0xDBD898", Offset = "0xDBD898", VA = "0xDBD898")]
		public bool ShouldApplicationReduceRenderingWork()
		{
			return default(bool);
		}

		[Token(Token = "0x6001734")]
		[Address(RVA = "0xDBD8B8", Offset = "0xDBD8B8", VA = "0xDBD8B8")]
		public uint DriverDebugRequest(uint unDeviceIndex, string pchRequest, StringBuilder pchResponseBuffer, uint unResponseBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001735")]
		[Address(RVA = "0xDBD8D8", Offset = "0xDBD8D8", VA = "0xDBD8D8")]
		public EVRFirmwareError PerformFirmwareUpdate(uint unDeviceIndex)
		{
			return default(EVRFirmwareError);
		}

		[Token(Token = "0x6001736")]
		[Address(RVA = "0xDBD8F8", Offset = "0xDBD8F8", VA = "0xDBD8F8")]
		public void AcknowledgeQuit_Exiting()
		{
		}

		[Token(Token = "0x6001737")]
		[Address(RVA = "0xDBD918", Offset = "0xDBD918", VA = "0xDBD918")]
		public void AcknowledgeQuit_UserPrompt()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public class CVRExtendedDisplay
	{
		[Token(Token = "0x40017D9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRExtendedDisplay FnTable;

		[Token(Token = "0x6001738")]
		[Address(RVA = "0xDBAD3C", Offset = "0xDBAD3C", VA = "0xDBAD3C")]
		internal CVRExtendedDisplay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001739")]
		[Address(RVA = "0xDBAE74", Offset = "0xDBAE74", VA = "0xDBAE74")]
		public void GetWindowBounds(int pnX, int pnY, uint pnWidth, uint pnHeight)
		{
		}

		[Token(Token = "0x600173A")]
		[Address(RVA = "0xDBAEA4", Offset = "0xDBAEA4", VA = "0xDBAEA4")]
		public void GetEyeOutputViewport(EVREye eEye, uint pnX, uint pnY, uint pnWidth, uint pnHeight)
		{
		}

		[Token(Token = "0x600173B")]
		[Address(RVA = "0xDBAED4", Offset = "0xDBAED4", VA = "0xDBAED4")]
		public void GetDXGIOutputInfo(int pnAdapterIndex, int pnAdapterOutputIndex)
		{
		}
	}
	[Token(Token = "0x20002ED")]
	public class CVRTrackedCamera
	{
		[Token(Token = "0x40017DA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRTrackedCamera FnTable;

		[Token(Token = "0x600173C")]
		[Address(RVA = "0xDBD938", Offset = "0xDBD938", VA = "0xDBD938")]
		internal CVRTrackedCamera(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600173D")]
		[Address(RVA = "0xDBDA74", Offset = "0xDBDA74", VA = "0xDBDA74")]
		public string GetCameraErrorNameFromEnum(EVRTrackedCameraError eCameraError)
		{
			return null;
		}

		[Token(Token = "0x600173E")]
		[Address(RVA = "0xDBDB04", Offset = "0xDBDB04", VA = "0xDBDB04")]
		public EVRTrackedCameraError HasCamera(uint nDeviceIndex, bool pHasCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x600173F")]
		[Address(RVA = "0xDBDB28", Offset = "0xDBDB28", VA = "0xDBDB28")]
		public EVRTrackedCameraError GetCameraFrameSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, uint pnWidth, uint pnHeight, uint pnFrameBufferSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001740")]
		[Address(RVA = "0xDBDB54", Offset = "0xDBDB54", VA = "0xDBDB54")]
		public EVRTrackedCameraError GetCameraIntrinsics(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, HmdVector2_t pFocalLength, HmdVector2_t pCenter)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001741")]
		[Address(RVA = "0xDBDB74", Offset = "0xDBDB74", VA = "0xDBDB74")]
		public EVRTrackedCameraError GetCameraProjection(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, float flZNear, float flZFar, HmdMatrix44_t pProjection)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001742")]
		[Address(RVA = "0xDBDB94", Offset = "0xDBDB94", VA = "0xDBDB94")]
		public EVRTrackedCameraError AcquireVideoStreamingService(uint nDeviceIndex, ulong pHandle)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001743")]
		[Address(RVA = "0xDBDBB8", Offset = "0xDBDBB8", VA = "0xDBDBB8")]
		public EVRTrackedCameraError ReleaseVideoStreamingService(ulong hTrackedCamera)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001744")]
		[Address(RVA = "0xDBDBD8", Offset = "0xDBDBD8", VA = "0xDBDBD8")]
		public EVRTrackedCameraError GetVideoStreamFrameBuffer(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pFrameBuffer, uint nFrameBufferSize, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001745")]
		[Address(RVA = "0xDBDBF8", Offset = "0xDBDBF8", VA = "0xDBDBF8")]
		public EVRTrackedCameraError GetVideoStreamTextureSize(uint nDeviceIndex, EVRTrackedCameraFrameType eFrameType, VRTextureBounds_t pTextureBounds, uint pnWidth, uint pnHeight)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001746")]
		[Address(RVA = "0xDBDC20", Offset = "0xDBDC20", VA = "0xDBDC20")]
		public EVRTrackedCameraError GetVideoStreamTextureD3D11(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, IntPtr pD3D11DeviceOrResource, IntPtr ppD3D11ShaderResourceView, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001747")]
		[Address(RVA = "0xDBDC40", Offset = "0xDBDC40", VA = "0xDBDC40")]
		public EVRTrackedCameraError GetVideoStreamTextureGL(ulong hTrackedCamera, EVRTrackedCameraFrameType eFrameType, uint pglTextureId, CameraVideoStreamFrameHeader_t pFrameHeader, uint nFrameHeaderSize)
		{
			return default(EVRTrackedCameraError);
		}

		[Token(Token = "0x6001748")]
		[Address(RVA = "0xDBDC64", Offset = "0xDBDC64", VA = "0xDBDC64")]
		public EVRTrackedCameraError ReleaseVideoStreamTextureGL(ulong hTrackedCamera, uint glTextureId)
		{
			return default(EVRTrackedCameraError);
		}
	}
	[Token(Token = "0x20002EE")]
	public class CVRApplications
	{
		[Token(Token = "0x40017DB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRApplications FnTable;

		[Token(Token = "0x6001749")]
		[Address(RVA = "0xDB966C", Offset = "0xDB966C", VA = "0xDB966C")]
		internal CVRApplications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600174A")]
		[Address(RVA = "0xDB97A8", Offset = "0xDB97A8", VA = "0xDB97A8")]
		public EVRApplicationError AddApplicationManifest(string pchApplicationManifestFullPath, bool bTemporary)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600174B")]
		[Address(RVA = "0xDB97CC", Offset = "0xDB97CC", VA = "0xDB97CC")]
		public EVRApplicationError RemoveApplicationManifest(string pchApplicationManifestFullPath)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600174C")]
		[Address(RVA = "0xDB97EC", Offset = "0xDB97EC", VA = "0xDB97EC")]
		public bool IsApplicationInstalled(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600174D")]
		[Address(RVA = "0xDB980C", Offset = "0xDB980C", VA = "0xDB980C")]
		public uint GetApplicationCount()
		{
			return default(uint);
		}

		[Token(Token = "0x600174E")]
		[Address(RVA = "0xDB982C", Offset = "0xDB982C", VA = "0xDB982C")]
		public EVRApplicationError GetApplicationKeyByIndex(uint unApplicationIndex, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600174F")]
		[Address(RVA = "0xDB984C", Offset = "0xDB984C", VA = "0xDB984C")]
		public EVRApplicationError GetApplicationKeyByProcessId(uint unProcessId, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001750")]
		[Address(RVA = "0xDB986C", Offset = "0xDB986C", VA = "0xDB986C")]
		public EVRApplicationError LaunchApplication(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001751")]
		[Address(RVA = "0xDB988C", Offset = "0xDB988C", VA = "0xDB988C")]
		public EVRApplicationError LaunchTemplateApplication(string pchTemplateAppKey, string pchNewAppKey, AppOverrideKeys_t[] pKeys)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001752")]
		[Address(RVA = "0xDB98B4", Offset = "0xDB98B4", VA = "0xDB98B4")]
		public EVRApplicationError LaunchApplicationFromMimeType(string pchMimeType, string pchArgs)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001753")]
		[Address(RVA = "0xDB98D4", Offset = "0xDB98D4", VA = "0xDB98D4")]
		public EVRApplicationError LaunchDashboardOverlay(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001754")]
		[Address(RVA = "0xDB98F4", Offset = "0xDB98F4", VA = "0xDB98F4")]
		public bool CancelApplicationLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x6001755")]
		[Address(RVA = "0xDB9914", Offset = "0xDB9914", VA = "0xDB9914")]
		public EVRApplicationError IdentifyApplication(uint unProcessId, string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001756")]
		[Address(RVA = "0xDB9934", Offset = "0xDB9934", VA = "0xDB9934")]
		public uint GetApplicationProcessId(string pchAppKey)
		{
			return default(uint);
		}

		[Token(Token = "0x6001757")]
		[Address(RVA = "0xDB9954", Offset = "0xDB9954", VA = "0xDB9954")]
		public string GetApplicationsErrorNameFromEnum(EVRApplicationError error)
		{
			return null;
		}

		[Token(Token = "0x6001758")]
		[Address(RVA = "0xDB99E4", Offset = "0xDB99E4", VA = "0xDB99E4")]
		public uint GetApplicationPropertyString(string pchAppKey, EVRApplicationProperty eProperty, StringBuilder pchPropertyValueBuffer, uint unPropertyValueBufferLen, EVRApplicationError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001759")]
		[Address(RVA = "0xDB9A04", Offset = "0xDB9A04", VA = "0xDB9A04")]
		public bool GetApplicationPropertyBool(string pchAppKey, EVRApplicationProperty eProperty, EVRApplicationError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x600175A")]
		[Address(RVA = "0xDB9A24", Offset = "0xDB9A24", VA = "0xDB9A24")]
		public ulong GetApplicationPropertyUint64(string pchAppKey, EVRApplicationProperty eProperty, EVRApplicationError peError)
		{
			return default(ulong);
		}

		[Token(Token = "0x600175B")]
		[Address(RVA = "0xDB9A44", Offset = "0xDB9A44", VA = "0xDB9A44")]
		public EVRApplicationError SetApplicationAutoLaunch(string pchAppKey, bool bAutoLaunch)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600175C")]
		[Address(RVA = "0xDB9A68", Offset = "0xDB9A68", VA = "0xDB9A68")]
		public bool GetApplicationAutoLaunch(string pchAppKey)
		{
			return default(bool);
		}

		[Token(Token = "0x600175D")]
		[Address(RVA = "0xDB9A88", Offset = "0xDB9A88", VA = "0xDB9A88")]
		public EVRApplicationError SetDefaultApplicationForMimeType(string pchAppKey, string pchMimeType)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x600175E")]
		[Address(RVA = "0xDB9AA8", Offset = "0xDB9AA8", VA = "0xDB9AA8")]
		public bool GetDefaultApplicationForMimeType(string pchMimeType, StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(bool);
		}

		[Token(Token = "0x600175F")]
		[Address(RVA = "0xDB9AC8", Offset = "0xDB9AC8", VA = "0xDB9AC8")]
		public bool GetApplicationSupportedMimeTypes(string pchAppKey, StringBuilder pchMimeTypesBuffer, uint unMimeTypesBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001760")]
		[Address(RVA = "0xDB9AE8", Offset = "0xDB9AE8", VA = "0xDB9AE8")]
		public uint GetApplicationsThatSupportMimeType(string pchMimeType, StringBuilder pchAppKeysThatSupportBuffer, uint unAppKeysThatSupportBuffer)
		{
			return default(uint);
		}

		[Token(Token = "0x6001761")]
		[Address(RVA = "0xDB9B08", Offset = "0xDB9B08", VA = "0xDB9B08")]
		public uint GetApplicationLaunchArguments(uint unHandle, StringBuilder pchArgs, uint unArgs)
		{
			return default(uint);
		}

		[Token(Token = "0x6001762")]
		[Address(RVA = "0xDB9B28", Offset = "0xDB9B28", VA = "0xDB9B28")]
		public EVRApplicationError GetStartingApplication(StringBuilder pchAppKeyBuffer, uint unAppKeyBufferLen)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001763")]
		[Address(RVA = "0xDB9B48", Offset = "0xDB9B48", VA = "0xDB9B48")]
		public EVRApplicationTransitionState GetTransitionState()
		{
			return default(EVRApplicationTransitionState);
		}

		[Token(Token = "0x6001764")]
		[Address(RVA = "0xDB9B68", Offset = "0xDB9B68", VA = "0xDB9B68")]
		public EVRApplicationError PerformApplicationPrelaunchCheck(string pchAppKey)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001765")]
		[Address(RVA = "0xDB9B88", Offset = "0xDB9B88", VA = "0xDB9B88")]
		public string GetApplicationsTransitionStateNameFromEnum(EVRApplicationTransitionState state)
		{
			return null;
		}

		[Token(Token = "0x6001766")]
		[Address(RVA = "0xDB9C18", Offset = "0xDB9C18", VA = "0xDB9C18")]
		public bool IsQuitUserPromptRequested()
		{
			return default(bool);
		}

		[Token(Token = "0x6001767")]
		[Address(RVA = "0xDB9C38", Offset = "0xDB9C38", VA = "0xDB9C38")]
		public EVRApplicationError LaunchInternalProcess(string pchBinaryPath, string pchArguments, string pchWorkingDirectory)
		{
			return default(EVRApplicationError);
		}

		[Token(Token = "0x6001768")]
		[Address(RVA = "0xDB9C58", Offset = "0xDB9C58", VA = "0xDB9C58")]
		public uint GetCurrentSceneProcessId()
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20002EF")]
	public class CVRChaperone
	{
		[Token(Token = "0x40017DC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperone FnTable;

		[Token(Token = "0x6001769")]
		[Address(RVA = "0xDB9C78", Offset = "0xDB9C78", VA = "0xDB9C78")]
		internal CVRChaperone(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600176A")]
		[Address(RVA = "0xDB9DB4", Offset = "0xDB9DB4", VA = "0xDB9DB4")]
		public ChaperoneCalibrationState GetCalibrationState()
		{
			return default(ChaperoneCalibrationState);
		}

		[Token(Token = "0x600176B")]
		[Address(RVA = "0xDB9DD4", Offset = "0xDB9DD4", VA = "0xDB9DD4")]
		public bool GetPlayAreaSize(float pSizeX, float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x600176C")]
		[Address(RVA = "0xDB9DFC", Offset = "0xDB9DFC", VA = "0xDB9DFC")]
		public bool GetPlayAreaRect(HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x600176D")]
		[Address(RVA = "0xDB9E1C", Offset = "0xDB9E1C", VA = "0xDB9E1C")]
		public void ReloadInfo()
		{
		}

		[Token(Token = "0x600176E")]
		[Address(RVA = "0xDB9E3C", Offset = "0xDB9E3C", VA = "0xDB9E3C")]
		public void SetSceneColor(HmdColor_t color)
		{
		}

		[Token(Token = "0x600176F")]
		[Address(RVA = "0xDB9E5C", Offset = "0xDB9E5C", VA = "0xDB9E5C")]
		public void GetBoundsColor(HmdColor_t pOutputColorArray, int nNumOutputColors, float flCollisionBoundsFadeDistance, HmdColor_t pOutputCameraColor)
		{
		}

		[Token(Token = "0x6001770")]
		[Address(RVA = "0xDB9E7C", Offset = "0xDB9E7C", VA = "0xDB9E7C")]
		public bool AreBoundsVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x6001771")]
		[Address(RVA = "0xDB9E9C", Offset = "0xDB9E9C", VA = "0xDB9E9C")]
		public void ForceBoundsVisible(bool bForce)
		{
		}
	}
	[Token(Token = "0x20002F0")]
	public class CVRChaperoneSetup
	{
		[Token(Token = "0x40017DD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRChaperoneSetup FnTable;

		[Token(Token = "0x6001772")]
		[Address(RVA = "0xDB9EC0", Offset = "0xDB9EC0", VA = "0xDB9EC0")]
		internal CVRChaperoneSetup(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001773")]
		[Address(RVA = "0xDB9FFC", Offset = "0xDB9FFC", VA = "0xDB9FFC")]
		public bool CommitWorkingCopy(EChaperoneConfigFile configFile)
		{
			return default(bool);
		}

		[Token(Token = "0x6001774")]
		[Address(RVA = "0xDBA01C", Offset = "0xDBA01C", VA = "0xDBA01C")]
		public void RevertWorkingCopy()
		{
		}

		[Token(Token = "0x6001775")]
		[Address(RVA = "0xDBA03C", Offset = "0xDBA03C", VA = "0xDBA03C")]
		public bool GetWorkingPlayAreaSize(float pSizeX, float pSizeZ)
		{
			return default(bool);
		}

		[Token(Token = "0x6001776")]
		[Address(RVA = "0xDBA064", Offset = "0xDBA064", VA = "0xDBA064")]
		public bool GetWorkingPlayAreaRect(HmdQuad_t rect)
		{
			return default(bool);
		}

		[Token(Token = "0x6001777")]
		[Address(RVA = "0xDBA084", Offset = "0xDBA084", VA = "0xDBA084")]
		public bool GetWorkingCollisionBoundsInfo([Out] HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001778")]
		[Address(RVA = "0xDBA12C", Offset = "0xDBA12C", VA = "0xDBA12C")]
		public bool GetLiveCollisionBoundsInfo([Out] HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001779")]
		[Address(RVA = "0xDBA1D4", Offset = "0xDBA1D4", VA = "0xDBA1D4")]
		public bool GetWorkingSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x600177A")]
		[Address(RVA = "0xDBA1F4", Offset = "0xDBA1F4", VA = "0xDBA1F4")]
		public bool GetWorkingStandingZeroPoseToRawTrackingPose(HmdMatrix34_t pmatStandingZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x600177B")]
		[Address(RVA = "0xDBA214", Offset = "0xDBA214", VA = "0xDBA214")]
		public void SetWorkingPlayAreaSize(float sizeX, float sizeZ)
		{
		}

		[Token(Token = "0x600177C")]
		[Address(RVA = "0xDBA234", Offset = "0xDBA234", VA = "0xDBA234")]
		public void SetWorkingCollisionBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
		}

		[Token(Token = "0x600177D")]
		[Address(RVA = "0xDBA25C", Offset = "0xDBA25C", VA = "0xDBA25C")]
		public void SetWorkingSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pMatSeatedZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x600177E")]
		[Address(RVA = "0xDBA27C", Offset = "0xDBA27C", VA = "0xDBA27C")]
		public void SetWorkingStandingZeroPoseToRawTrackingPose(HmdMatrix34_t pMatStandingZeroPoseToRawTrackingPose)
		{
		}

		[Token(Token = "0x600177F")]
		[Address(RVA = "0xDBA29C", Offset = "0xDBA29C", VA = "0xDBA29C")]
		public void ReloadFromDisk(EChaperoneConfigFile configFile)
		{
		}

		[Token(Token = "0x6001780")]
		[Address(RVA = "0xDBA2BC", Offset = "0xDBA2BC", VA = "0xDBA2BC")]
		public bool GetLiveSeatedZeroPoseToRawTrackingPose(HmdMatrix34_t pmatSeatedZeroPoseToRawTrackingPose)
		{
			return default(bool);
		}

		[Token(Token = "0x6001781")]
		[Address(RVA = "0xDBA2DC", Offset = "0xDBA2DC", VA = "0xDBA2DC")]
		public void SetWorkingCollisionBoundsTagsInfo(byte[] pTagsBuffer)
		{
		}

		[Token(Token = "0x6001782")]
		[Address(RVA = "0xDBA304", Offset = "0xDBA304", VA = "0xDBA304")]
		public bool GetLiveCollisionBoundsTagsInfo([Out] byte[] pTagsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001783")]
		[Address(RVA = "0xDBA3AC", Offset = "0xDBA3AC", VA = "0xDBA3AC")]
		public bool SetWorkingPhysicalBoundsInfo(HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001784")]
		[Address(RVA = "0xDBA3D4", Offset = "0xDBA3D4", VA = "0xDBA3D4")]
		public bool GetLivePhysicalBoundsInfo([Out] HmdQuad_t[] pQuadsBuffer)
		{
			return default(bool);
		}

		[Token(Token = "0x6001785")]
		[Address(RVA = "0xDBA47C", Offset = "0xDBA47C", VA = "0xDBA47C")]
		public bool ExportLiveToBuffer(StringBuilder pBuffer, uint pnBufferLength)
		{
			return default(bool);
		}

		[Token(Token = "0x6001786")]
		[Address(RVA = "0xDBA4A0", Offset = "0xDBA4A0", VA = "0xDBA4A0")]
		public bool ImportFromBufferToWorking(string pBuffer, uint nImportFlags)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x20002F1")]
	public class CVRCompositor
	{
		[Token(Token = "0x40017DE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRCompositor FnTable;

		[Token(Token = "0x6001787")]
		[Address(RVA = "0xDBA4C0", Offset = "0xDBA4C0", VA = "0xDBA4C0")]
		internal CVRCompositor(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001788")]
		[Address(RVA = "0xDBA5FC", Offset = "0xDBA5FC", VA = "0xDBA5FC")]
		public void SetTrackingSpace(ETrackingUniverseOrigin eOrigin)
		{
		}

		[Token(Token = "0x6001789")]
		[Address(RVA = "0xDBA61C", Offset = "0xDBA61C", VA = "0xDBA61C")]
		public ETrackingUniverseOrigin GetTrackingSpace()
		{
			return default(ETrackingUniverseOrigin);
		}

		[Token(Token = "0x600178A")]
		[Address(RVA = "0xDBA63C", Offset = "0xDBA63C", VA = "0xDBA63C")]
		public EVRCompositorError WaitGetPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600178B")]
		[Address(RVA = "0xDBA670", Offset = "0xDBA670", VA = "0xDBA670")]
		public EVRCompositorError GetLastPoses(TrackedDevicePose_t[] pRenderPoseArray, TrackedDevicePose_t[] pGamePoseArray)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600178C")]
		[Address(RVA = "0xDBA6A4", Offset = "0xDBA6A4", VA = "0xDBA6A4")]
		public EVRCompositorError GetLastPoseForTrackedDeviceIndex(uint unDeviceIndex, TrackedDevicePose_t pOutputPose, TrackedDevicePose_t pOutputGamePose)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600178D")]
		[Address(RVA = "0xDBA6C4", Offset = "0xDBA6C4", VA = "0xDBA6C4")]
		public EVRCompositorError Submit(EVREye eEye, Texture_t pTexture, VRTextureBounds_t pBounds, EVRSubmitFlags nSubmitFlags)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x600178E")]
		[Address(RVA = "0xDBA6E4", Offset = "0xDBA6E4", VA = "0xDBA6E4")]
		public void ClearLastSubmittedFrame()
		{
		}

		[Token(Token = "0x600178F")]
		[Address(RVA = "0xDBA704", Offset = "0xDBA704", VA = "0xDBA704")]
		public void PostPresentHandoff()
		{
		}

		[Token(Token = "0x6001790")]
		[Address(RVA = "0xDBA724", Offset = "0xDBA724", VA = "0xDBA724")]
		public bool GetFrameTiming(Compositor_FrameTiming pTiming, uint unFramesAgo)
		{
			return default(bool);
		}

		[Token(Token = "0x6001791")]
		[Address(RVA = "0xDBA744", Offset = "0xDBA744", VA = "0xDBA744")]
		public uint GetFrameTimings(Compositor_FrameTiming pTiming, uint nFrames)
		{
			return default(uint);
		}

		[Token(Token = "0x6001792")]
		[Address(RVA = "0xDBA764", Offset = "0xDBA764", VA = "0xDBA764")]
		public float GetFrameTimeRemaining()
		{
			return default(float);
		}

		[Token(Token = "0x6001793")]
		[Address(RVA = "0xDBA784", Offset = "0xDBA784", VA = "0xDBA784")]
		public void GetCumulativeStats(Compositor_CumulativeStats pStats, uint nStatsSizeInBytes)
		{
		}

		[Token(Token = "0x6001794")]
		[Address(RVA = "0xDBA7A4", Offset = "0xDBA7A4", VA = "0xDBA7A4")]
		public void FadeToColor(float fSeconds, float fRed, float fGreen, float fBlue, float fAlpha, bool bBackground)
		{
		}

		[Token(Token = "0x6001795")]
		[Address(RVA = "0xDBA7C8", Offset = "0xDBA7C8", VA = "0xDBA7C8")]
		public HmdColor_t GetCurrentFadeColor(bool bBackground)
		{
			return default(HmdColor_t);
		}

		[Token(Token = "0x6001796")]
		[Address(RVA = "0xDBA7EC", Offset = "0xDBA7EC", VA = "0xDBA7EC")]
		public void FadeGrid(float fSeconds, bool bFadeIn)
		{
		}

		[Token(Token = "0x6001797")]
		[Address(RVA = "0xDBA810", Offset = "0xDBA810", VA = "0xDBA810")]
		public float GetCurrentGridAlpha()
		{
			return default(float);
		}

		[Token(Token = "0x6001798")]
		[Address(RVA = "0xDBA830", Offset = "0xDBA830", VA = "0xDBA830")]
		public EVRCompositorError SetSkyboxOverride(Texture_t[] pTextures)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x6001799")]
		[Address(RVA = "0xDBA858", Offset = "0xDBA858", VA = "0xDBA858")]
		public void ClearSkyboxOverride()
		{
		}

		[Token(Token = "0x600179A")]
		[Address(RVA = "0xDBA878", Offset = "0xDBA878", VA = "0xDBA878")]
		public void CompositorBringToFront()
		{
		}

		[Token(Token = "0x600179B")]
		[Address(RVA = "0xDBA898", Offset = "0xDBA898", VA = "0xDBA898")]
		public void CompositorGoToBack()
		{
		}

		[Token(Token = "0x600179C")]
		[Address(RVA = "0xDBA8B8", Offset = "0xDBA8B8", VA = "0xDBA8B8")]
		public void CompositorQuit()
		{
		}

		[Token(Token = "0x600179D")]
		[Address(RVA = "0xDBA8D8", Offset = "0xDBA8D8", VA = "0xDBA8D8")]
		public bool IsFullscreen()
		{
			return default(bool);
		}

		[Token(Token = "0x600179E")]
		[Address(RVA = "0xDBA8F8", Offset = "0xDBA8F8", VA = "0xDBA8F8")]
		public uint GetCurrentSceneFocusProcess()
		{
			return default(uint);
		}

		[Token(Token = "0x600179F")]
		[Address(RVA = "0xDBA918", Offset = "0xDBA918", VA = "0xDBA918")]
		public uint GetLastFrameRenderer()
		{
			return default(uint);
		}

		[Token(Token = "0x60017A0")]
		[Address(RVA = "0xDBA938", Offset = "0xDBA938", VA = "0xDBA938")]
		public bool CanRenderScene()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A1")]
		[Address(RVA = "0xDBA958", Offset = "0xDBA958", VA = "0xDBA958")]
		public void ShowMirrorWindow()
		{
		}

		[Token(Token = "0x60017A2")]
		[Address(RVA = "0xDBA978", Offset = "0xDBA978", VA = "0xDBA978")]
		public void HideMirrorWindow()
		{
		}

		[Token(Token = "0x60017A3")]
		[Address(RVA = "0xDBA998", Offset = "0xDBA998", VA = "0xDBA998")]
		public bool IsMirrorWindowVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A4")]
		[Address(RVA = "0xDBA9B8", Offset = "0xDBA9B8", VA = "0xDBA9B8")]
		public void CompositorDumpImages()
		{
		}

		[Token(Token = "0x60017A5")]
		[Address(RVA = "0xDBA9D8", Offset = "0xDBA9D8", VA = "0xDBA9D8")]
		public bool ShouldAppRenderWithLowResources()
		{
			return default(bool);
		}

		[Token(Token = "0x60017A6")]
		[Address(RVA = "0xDBA9F8", Offset = "0xDBA9F8", VA = "0xDBA9F8")]
		public void ForceInterleavedReprojectionOn(bool bOverride)
		{
		}

		[Token(Token = "0x60017A7")]
		[Address(RVA = "0xDBAA1C", Offset = "0xDBAA1C", VA = "0xDBAA1C")]
		public void ForceReconnectProcess()
		{
		}

		[Token(Token = "0x60017A8")]
		[Address(RVA = "0xDBAA3C", Offset = "0xDBAA3C", VA = "0xDBAA3C")]
		public void SuspendRendering(bool bSuspend)
		{
		}

		[Token(Token = "0x60017A9")]
		[Address(RVA = "0xDBAA60", Offset = "0xDBAA60", VA = "0xDBAA60")]
		public EVRCompositorError GetMirrorTextureD3D11(EVREye eEye, IntPtr pD3D11DeviceOrResource, IntPtr ppD3D11ShaderResourceView)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60017AA")]
		[Address(RVA = "0xDBAA80", Offset = "0xDBAA80", VA = "0xDBAA80")]
		public void ReleaseMirrorTextureD3D11(IntPtr pD3D11ShaderResourceView)
		{
		}

		[Token(Token = "0x60017AB")]
		[Address(RVA = "0xDBAAA0", Offset = "0xDBAAA0", VA = "0xDBAAA0")]
		public EVRCompositorError GetMirrorTextureGL(EVREye eEye, uint pglTextureId, IntPtr pglSharedTextureHandle)
		{
			return default(EVRCompositorError);
		}

		[Token(Token = "0x60017AC")]
		[Address(RVA = "0xDBAAC4", Offset = "0xDBAAC4", VA = "0xDBAAC4")]
		public bool ReleaseSharedGLTexture(uint glTextureId, IntPtr glSharedTextureHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60017AD")]
		[Address(RVA = "0xDBAAE4", Offset = "0xDBAAE4", VA = "0xDBAAE4")]
		public void LockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x60017AE")]
		[Address(RVA = "0xDBAB04", Offset = "0xDBAB04", VA = "0xDBAB04")]
		public void UnlockGLSharedTextureForAccess(IntPtr glSharedTextureHandle)
		{
		}

		[Token(Token = "0x60017AF")]
		[Address(RVA = "0xDBAB24", Offset = "0xDBAB24", VA = "0xDBAB24")]
		public uint GetVulkanInstanceExtensionsRequired(StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60017B0")]
		[Address(RVA = "0xDBAB44", Offset = "0xDBAB44", VA = "0xDBAB44")]
		public uint GetVulkanDeviceExtensionsRequired(IntPtr pPhysicalDevice, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x60017B1")]
		[Address(RVA = "0xDBAB64", Offset = "0xDBAB64", VA = "0xDBAB64")]
		public void SetExplicitTimingMode(EVRCompositorTimingMode eTimingMode)
		{
		}

		[Token(Token = "0x60017B2")]
		[Address(RVA = "0xDBAB84", Offset = "0xDBAB84", VA = "0xDBAB84")]
		public EVRCompositorError SubmitExplicitTimingData()
		{
			return default(EVRCompositorError);
		}
	}
	[Token(Token = "0x20002F2")]
	public class CVROverlay
	{
		[Token(Token = "0x200063C")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B608", Offset = "0x84B608")]
		internal delegate bool _PollNextOverlayEventPacked(ulong ulOverlayHandle, VREvent_t_Packed pEvent, uint uncbVREvent);

		[StructLayout(2)]
		[Token(Token = "0x200063D")]
		private struct PollNextOverlayEventUnion
		{
			[Token(Token = "0x40024C9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVROverlay._PollNextOverlayEvent pPollNextOverlayEvent;

			[Token(Token = "0x40024CA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _PollNextOverlayEventPacked pPollNextOverlayEventPacked;
		}

		[Token(Token = "0x40017DF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVROverlay FnTable;

		[Token(Token = "0x60017B3")]
		[Address(RVA = "0xDBB070", Offset = "0xDBB070", VA = "0xDBB070")]
		internal CVROverlay(IntPtr pInterface)
		{
		}

		[Token(Token = "0x60017B4")]
		[Address(RVA = "0xDBB1AC", Offset = "0xDBB1AC", VA = "0xDBB1AC")]
		public EVROverlayError FindOverlay(string pchOverlayKey, ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017B5")]
		[Address(RVA = "0xDBB1D0", Offset = "0xDBB1D0", VA = "0xDBB1D0")]
		public EVROverlayError CreateOverlay(string pchOverlayKey, string pchOverlayName, ulong pOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017B6")]
		[Address(RVA = "0xDBB1F4", Offset = "0xDBB1F4", VA = "0xDBB1F4")]
		public EVROverlayError DestroyOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017B7")]
		[Address(RVA = "0xDBB214", Offset = "0xDBB214", VA = "0xDBB214")]
		public EVROverlayError SetHighQualityOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017B8")]
		[Address(RVA = "0xDBB234", Offset = "0xDBB234", VA = "0xDBB234")]
		public ulong GetHighQualityOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x60017B9")]
		[Address(RVA = "0xDBB254", Offset = "0xDBB254", VA = "0xDBB254")]
		public uint GetOverlayKey(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60017BA")]
		[Address(RVA = "0xDBB274", Offset = "0xDBB274", VA = "0xDBB274")]
		public uint GetOverlayName(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60017BB")]
		[Address(RVA = "0xDBB294", Offset = "0xDBB294", VA = "0xDBB294")]
		public EVROverlayError SetOverlayName(ulong ulOverlayHandle, string pchName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017BC")]
		[Address(RVA = "0xDBB2B4", Offset = "0xDBB2B4", VA = "0xDBB2B4")]
		public EVROverlayError GetOverlayImageData(ulong ulOverlayHandle, IntPtr pvBuffer, uint unBufferSize, uint punWidth, uint punHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017BD")]
		[Address(RVA = "0xDBB2DC", Offset = "0xDBB2DC", VA = "0xDBB2DC")]
		public string GetOverlayErrorNameFromEnum(EVROverlayError error)
		{
			return null;
		}

		[Token(Token = "0x60017BE")]
		[Address(RVA = "0xDBB36C", Offset = "0xDBB36C", VA = "0xDBB36C")]
		public EVROverlayError SetOverlayRenderingPid(ulong ulOverlayHandle, uint unPID)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017BF")]
		[Address(RVA = "0xDBB38C", Offset = "0xDBB38C", VA = "0xDBB38C")]
		public uint GetOverlayRenderingPid(ulong ulOverlayHandle)
		{
			return default(uint);
		}

		[Token(Token = "0x60017C0")]
		[Address(RVA = "0xDBB3AC", Offset = "0xDBB3AC", VA = "0xDBB3AC")]
		public EVROverlayError SetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool bEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017C1")]
		[Address(RVA = "0xDBB3D0", Offset = "0xDBB3D0", VA = "0xDBB3D0")]
		public EVROverlayError GetOverlayFlag(ulong ulOverlayHandle, VROverlayFlags eOverlayFlag, bool pbEnabled)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017C2")]
		[Address(RVA = "0xDBB3F4", Offset = "0xDBB3F4", VA = "0xDBB3F4")]
		public EVROverlayError SetOverlayColor(ulong ulOverlayHandle, float fRed, float fGreen, float fBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017C3")]
		[Address(RVA = "0xDBB414", Offset = "0xDBB414", VA = "0xDBB414")]
		public EVROverlayError GetOverlayColor(ulong ulOverlayHandle, float pfRed, float pfGreen, float pfBlue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017C4")]
		[Address(RVA = "0xDBB440", Offset = "0xDBB440", VA = "0xDBB440")]
		public EVROverlayError SetOverlayAlpha(ulong ulOverlayHandle, float fAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017C5")]
		[Address(RVA = "0xDBB460", Offset = "0xDBB460", VA = "0xDBB460")]
		public EVROverlayError GetOverlayAlpha(ulong ulOverlayHandle, float pfAlpha)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017C6")]
		[Address(RVA = "0xDBB484", Offset = "0xDBB484", VA = "0xDBB484")]
		public EVROverlayError SetOverlayTexelAspect(ulong ulOverlayHandle, float fTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017C7")]
		[Address(RVA = "0xDBB4A4", Offset = "0xDBB4A4", VA = "0xDBB4A4")]
		public EVROverlayError GetOverlayTexelAspect(ulong ulOverlayHandle, float pfTexelAspect)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017C8")]
		[Address(RVA = "0xDBB4C8", Offset = "0xDBB4C8", VA = "0xDBB4C8")]
		public EVROverlayError SetOverlaySortOrder(ulong ulOverlayHandle, uint unSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017C9")]
		[Address(RVA = "0xDBB4E8", Offset = "0xDBB4E8", VA = "0xDBB4E8")]
		public EVROverlayError GetOverlaySortOrder(ulong ulOverlayHandle, uint punSortOrder)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017CA")]
		[Address(RVA = "0xDBB50C", Offset = "0xDBB50C", VA = "0xDBB50C")]
		public EVROverlayError SetOverlayWidthInMeters(ulong ulOverlayHandle, float fWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017CB")]
		[Address(RVA = "0xDBB52C", Offset = "0xDBB52C", VA = "0xDBB52C")]
		public EVROverlayError GetOverlayWidthInMeters(ulong ulOverlayHandle, float pfWidthInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017CC")]
		[Address(RVA = "0xDBB550", Offset = "0xDBB550", VA = "0xDBB550")]
		public EVROverlayError SetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float fMinDistanceInMeters, float fMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017CD")]
		[Address(RVA = "0xDBB570", Offset = "0xDBB570", VA = "0xDBB570")]
		public EVROverlayError GetOverlayAutoCurveDistanceRangeInMeters(ulong ulOverlayHandle, float pfMinDistanceInMeters, float pfMaxDistanceInMeters)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017CE")]
		[Address(RVA = "0xDBB598", Offset = "0xDBB598", VA = "0xDBB598")]
		public EVROverlayError SetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace eTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017CF")]
		[Address(RVA = "0xDBB5B8", Offset = "0xDBB5B8", VA = "0xDBB5B8")]
		public EVROverlayError GetOverlayTextureColorSpace(ulong ulOverlayHandle, EColorSpace peTextureColorSpace)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017D0")]
		[Address(RVA = "0xDBB5D8", Offset = "0xDBB5D8", VA = "0xDBB5D8")]
		public EVROverlayError SetOverlayTextureBounds(ulong ulOverlayHandle, VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017D1")]
		[Address(RVA = "0xDBB5F8", Offset = "0xDBB5F8", VA = "0xDBB5F8")]
		public EVROverlayError GetOverlayTextureBounds(ulong ulOverlayHandle, VRTextureBounds_t pOverlayTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017D2")]
		[Address(RVA = "0xDBB618", Offset = "0xDBB618", VA = "0xDBB618")]
		public uint GetOverlayRenderModel(ulong ulOverlayHandle, StringBuilder pchValue, uint unBufferSize, HmdColor_t pColor, EVROverlayError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x60017D3")]
		[Address(RVA = "0xDBB638", Offset = "0xDBB638", VA = "0xDBB638")]
		public EVROverlayError SetOverlayRenderModel(ulong ulOverlayHandle, string pchRenderModel, HmdColor_t pColor)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017D4")]
		[Address(RVA = "0xDBB658", Offset = "0xDBB658", VA = "0xDBB658")]
		public EVROverlayError GetOverlayTransformType(ulong ulOverlayHandle, VROverlayTransformType peTransformType)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017D5")]
		[Address(RVA = "0xDBB678", Offset = "0xDBB678", VA = "0xDBB678")]
		public EVROverlayError SetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017D6")]
		[Address(RVA = "0xDBB698", Offset = "0xDBB698", VA = "0xDBB698")]
		public EVROverlayError GetOverlayTransformAbsolute(ulong ulOverlayHandle, ETrackingUniverseOrigin peTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017D7")]
		[Address(RVA = "0xDBB6B8", Offset = "0xDBB6B8", VA = "0xDBB6B8")]
		public EVROverlayError SetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint unTrackedDevice, HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017D8")]
		[Address(RVA = "0xDBB6D8", Offset = "0xDBB6D8", VA = "0xDBB6D8")]
		public EVROverlayError GetOverlayTransformTrackedDeviceRelative(ulong ulOverlayHandle, uint punTrackedDevice, HmdMatrix34_t pmatTrackedDeviceToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017D9")]
		[Address(RVA = "0xDBB6FC", Offset = "0xDBB6FC", VA = "0xDBB6FC")]
		public EVROverlayError SetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint unDeviceIndex, string pchComponentName)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017DA")]
		[Address(RVA = "0xDBB71C", Offset = "0xDBB71C", VA = "0xDBB71C")]
		public EVROverlayError GetOverlayTransformTrackedDeviceComponent(ulong ulOverlayHandle, uint punDeviceIndex, StringBuilder pchComponentName, uint unComponentNameSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017DB")]
		[Address(RVA = "0xDBB740", Offset = "0xDBB740", VA = "0xDBB740")]
		public EVROverlayError GetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017DC")]
		[Address(RVA = "0xDBB764", Offset = "0xDBB764", VA = "0xDBB764")]
		public EVROverlayError SetOverlayTransformOverlayRelative(ulong ulOverlayHandle, ulong ulOverlayHandleParent, HmdMatrix34_t pmatParentOverlayToOverlayTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017DD")]
		[Address(RVA = "0xDBB784", Offset = "0xDBB784", VA = "0xDBB784")]
		public EVROverlayError ShowOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017DE")]
		[Address(RVA = "0xDBB7A4", Offset = "0xDBB7A4", VA = "0xDBB7A4")]
		public EVROverlayError HideOverlay(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017DF")]
		[Address(RVA = "0xDBB7C4", Offset = "0xDBB7C4", VA = "0xDBB7C4")]
		public bool IsOverlayVisible(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E0")]
		[Address(RVA = "0xDBB7E4", Offset = "0xDBB7E4", VA = "0xDBB7E4")]
		public EVROverlayError GetTransformForOverlayCoordinates(ulong ulOverlayHandle, ETrackingUniverseOrigin eTrackingOrigin, HmdVector2_t coordinatesInOverlay, HmdMatrix34_t pmatTransform)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017E1")]
		[Address(RVA = "0xDBB804", Offset = "0xDBB804", VA = "0xDBB804")]
		public bool PollNextOverlayEvent(ulong ulOverlayHandle, VREvent_t pEvent, uint uncbVREvent)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E2")]
		[Address(RVA = "0xDBB9B4", Offset = "0xDBB9B4", VA = "0xDBB9B4")]
		public EVROverlayError GetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod peInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017E3")]
		[Address(RVA = "0xDBB9D4", Offset = "0xDBB9D4", VA = "0xDBB9D4")]
		public EVROverlayError SetOverlayInputMethod(ulong ulOverlayHandle, VROverlayInputMethod eInputMethod)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017E4")]
		[Address(RVA = "0xDBB9F4", Offset = "0xDBB9F4", VA = "0xDBB9F4")]
		public EVROverlayError GetOverlayMouseScale(ulong ulOverlayHandle, HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017E5")]
		[Address(RVA = "0xDBBA14", Offset = "0xDBBA14", VA = "0xDBBA14")]
		public EVROverlayError SetOverlayMouseScale(ulong ulOverlayHandle, HmdVector2_t pvecMouseScale)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017E6")]
		[Address(RVA = "0xDBBA34", Offset = "0xDBBA34", VA = "0xDBBA34")]
		public bool ComputeOverlayIntersection(ulong ulOverlayHandle, VROverlayIntersectionParams_t pParams, VROverlayIntersectionResults_t pResults)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E7")]
		[Address(RVA = "0xDBBA54", Offset = "0xDBBA54", VA = "0xDBBA54")]
		public bool IsHoverTargetOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60017E8")]
		[Address(RVA = "0xDBBA74", Offset = "0xDBBA74", VA = "0xDBBA74")]
		public ulong GetGamepadFocusOverlay()
		{
			return default(ulong);
		}

		[Token(Token = "0x60017E9")]
		[Address(RVA = "0xDBBA94", Offset = "0xDBBA94", VA = "0xDBBA94")]
		public EVROverlayError SetGamepadFocusOverlay(ulong ulNewFocusOverlay)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017EA")]
		[Address(RVA = "0xDBBAB4", Offset = "0xDBBAB4", VA = "0xDBBAB4")]
		public EVROverlayError SetOverlayNeighbor(EOverlayDirection eDirection, ulong ulFrom, ulong ulTo)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017EB")]
		[Address(RVA = "0xDBBAD4", Offset = "0xDBBAD4", VA = "0xDBBAD4")]
		public EVROverlayError MoveGamepadFocusToNeighbor(EOverlayDirection eDirection, ulong ulFrom)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017EC")]
		[Address(RVA = "0xDBBAF4", Offset = "0xDBBAF4", VA = "0xDBBAF4")]
		public EVROverlayError SetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, IntPtr vCenter, float fRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017ED")]
		[Address(RVA = "0xDBBB14", Offset = "0xDBBB14", VA = "0xDBBB14")]
		public EVROverlayError GetOverlayDualAnalogTransform(ulong ulOverlay, EDualAnalogWhich eWhich, HmdVector2_t pvCenter, float pfRadius)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017EE")]
		[Address(RVA = "0xDBBB38", Offset = "0xDBBB38", VA = "0xDBBB38")]
		public EVROverlayError SetOverlayTexture(ulong ulOverlayHandle, Texture_t pTexture)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017EF")]
		[Address(RVA = "0xDBBB58", Offset = "0xDBBB58", VA = "0xDBBB58")]
		public EVROverlayError ClearOverlayTexture(ulong ulOverlayHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017F0")]
		[Address(RVA = "0xDBBB78", Offset = "0xDBBB78", VA = "0xDBBB78")]
		public EVROverlayError SetOverlayRaw(ulong ulOverlayHandle, IntPtr pvBuffer, uint unWidth, uint unHeight, uint unDepth)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017F1")]
		[Address(RVA = "0xDBBB98", Offset = "0xDBBB98", VA = "0xDBBB98")]
		public EVROverlayError SetOverlayFromFile(ulong ulOverlayHandle, string pchFilePath)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017F2")]
		[Address(RVA = "0xDBBBB8", Offset = "0xDBBBB8", VA = "0xDBBBB8")]
		public EVROverlayError GetOverlayTexture(ulong ulOverlayHandle, IntPtr pNativeTextureHandle, IntPtr pNativeTextureRef, uint pWidth, uint pHeight, uint pNativeFormat, ETextureType pAPIType, EColorSpace pColorSpace, VRTextureBounds_t pTextureBounds)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017F3")]
		[Address(RVA = "0xDBBBEC", Offset = "0xDBBBEC", VA = "0xDBBBEC")]
		public EVROverlayError ReleaseNativeOverlayHandle(ulong ulOverlayHandle, IntPtr pNativeTextureHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017F4")]
		[Address(RVA = "0xDBBC0C", Offset = "0xDBBC0C", VA = "0xDBBC0C")]
		public EVROverlayError GetOverlayTextureSize(ulong ulOverlayHandle, uint pWidth, uint pHeight)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017F5")]
		[Address(RVA = "0xDBBC34", Offset = "0xDBBC34", VA = "0xDBBC34")]
		public EVROverlayError CreateDashboardOverlay(string pchOverlayKey, string pchOverlayFriendlyName, ulong pMainHandle, ulong pThumbnailHandle)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017F6")]
		[Address(RVA = "0xDBBC5C", Offset = "0xDBBC5C", VA = "0xDBBC5C")]
		public bool IsDashboardVisible()
		{
			return default(bool);
		}

		[Token(Token = "0x60017F7")]
		[Address(RVA = "0xDBBC7C", Offset = "0xDBBC7C", VA = "0xDBBC7C")]
		public bool IsActiveDashboardOverlay(ulong ulOverlayHandle)
		{
			return default(bool);
		}

		[Token(Token = "0x60017F8")]
		[Address(RVA = "0xDBBC9C", Offset = "0xDBBC9C", VA = "0xDBBC9C")]
		public EVROverlayError SetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint unProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017F9")]
		[Address(RVA = "0xDBBCBC", Offset = "0xDBBCBC", VA = "0xDBBCBC")]
		public EVROverlayError GetDashboardOverlaySceneProcess(ulong ulOverlayHandle, uint punProcessId)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017FA")]
		[Address(RVA = "0xDBBCE0", Offset = "0xDBBCE0", VA = "0xDBBCE0")]
		public void ShowDashboard(string pchOverlayToShow)
		{
		}

		[Token(Token = "0x60017FB")]
		[Address(RVA = "0xDBBD00", Offset = "0xDBBD00", VA = "0xDBBD00")]
		public uint GetPrimaryDashboardDevice()
		{
			return default(uint);
		}

		[Token(Token = "0x60017FC")]
		[Address(RVA = "0xDBBD20", Offset = "0xDBBD20", VA = "0xDBBD20")]
		public EVROverlayError ShowKeyboard(int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017FD")]
		[Address(RVA = "0xDBBD44", Offset = "0xDBBD44", VA = "0xDBBD44")]
		public EVROverlayError ShowKeyboardForOverlay(ulong ulOverlayHandle, int eInputMode, int eLineInputMode, string pchDescription, uint unCharMax, string pchExistingText, bool bUseMinimalMode, ulong uUserValue)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x60017FE")]
		[Address(RVA = "0xDBBD6C", Offset = "0xDBBD6C", VA = "0xDBBD6C")]
		public uint GetKeyboardText(StringBuilder pchText, uint cchText)
		{
			return default(uint);
		}

		[Token(Token = "0x60017FF")]
		[Address(RVA = "0xDBBD8C", Offset = "0xDBBD8C", VA = "0xDBBD8C")]
		public void HideKeyboard()
		{
		}

		[Token(Token = "0x6001800")]
		[Address(RVA = "0xDBBDAC", Offset = "0xDBBDAC", VA = "0xDBBDAC")]
		public void SetKeyboardTransformAbsolute(ETrackingUniverseOrigin eTrackingOrigin, HmdMatrix34_t pmatTrackingOriginToKeyboardTransform)
		{
		}

		[Token(Token = "0x6001801")]
		[Address(RVA = "0xDBBDCC", Offset = "0xDBBDCC", VA = "0xDBBDCC")]
		public void SetKeyboardPositionForOverlay(ulong ulOverlayHandle, HmdRect2_t avoidRect)
		{
		}

		[Token(Token = "0x6001802")]
		[Address(RVA = "0xDBBDEC", Offset = "0xDBBDEC", VA = "0xDBBDEC")]
		public EVROverlayError SetOverlayIntersectionMask(ulong ulOverlayHandle, VROverlayIntersectionMaskPrimitive_t pMaskPrimitives, uint unNumMaskPrimitives, uint unPrimitiveSize)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001803")]
		[Address(RVA = "0xDBBE0C", Offset = "0xDBBE0C", VA = "0xDBBE0C")]
		public EVROverlayError GetOverlayFlags(ulong ulOverlayHandle, uint pFlags)
		{
			return default(EVROverlayError);
		}

		[Token(Token = "0x6001804")]
		[Address(RVA = "0xDBBE30", Offset = "0xDBBE30", VA = "0xDBBE30")]
		public VRMessageOverlayResponse ShowMessageOverlay(string pchText, string pchCaption, string pchButton0Text, string pchButton1Text, string pchButton2Text, string pchButton3Text)
		{
			return default(VRMessageOverlayResponse);
		}

		[Token(Token = "0x6001805")]
		[Address(RVA = "0xDBBE50", Offset = "0xDBBE50", VA = "0xDBBE50")]
		public void CloseMessageOverlay()
		{
		}
	}
	[Token(Token = "0x20002F3")]
	public class CVRRenderModels
	{
		[Token(Token = "0x200063E")]
		[AttributeAttribute(Name = "UnmanagedFunctionPointerAttribute", RVA = "0x84B61C", Offset = "0x84B61C")]
		internal delegate bool _GetComponentStatePacked(string pchRenderModelName, string pchComponentName, VRControllerState_t_Packed pControllerState, RenderModel_ControllerMode_State_t pState, RenderModel_ComponentState_t pComponentState);

		[StructLayout(2)]
		[Token(Token = "0x200063F")]
		private struct GetComponentStateUnion
		{
			[Token(Token = "0x40024CB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public IVRRenderModels._GetComponentState pGetComponentState;

			[Token(Token = "0x40024CC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public _GetComponentStatePacked pGetComponentStatePacked;
		}

		[Token(Token = "0x40017E0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRRenderModels FnTable;

		[Token(Token = "0x6001806")]
		[Address(RVA = "0xDBBE70", Offset = "0xDBBE70", VA = "0xDBBE70")]
		internal CVRRenderModels(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001807")]
		[Address(RVA = "0xDBBFAC", Offset = "0xDBBFAC", VA = "0xDBBFAC")]
		public EVRRenderModelError LoadRenderModel_Async(string pchRenderModelName, IntPtr ppRenderModel)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x6001808")]
		[Address(RVA = "0xDBBFCC", Offset = "0xDBBFCC", VA = "0xDBBFCC")]
		public void FreeRenderModel(IntPtr pRenderModel)
		{
		}

		[Token(Token = "0x6001809")]
		[Address(RVA = "0xDBBFEC", Offset = "0xDBBFEC", VA = "0xDBBFEC")]
		public EVRRenderModelError LoadTexture_Async(int textureId, IntPtr ppTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600180A")]
		[Address(RVA = "0xDBC00C", Offset = "0xDBC00C", VA = "0xDBC00C")]
		public void FreeTexture(IntPtr pTexture)
		{
		}

		[Token(Token = "0x600180B")]
		[Address(RVA = "0xDBC02C", Offset = "0xDBC02C", VA = "0xDBC02C")]
		public EVRRenderModelError LoadTextureD3D11_Async(int textureId, IntPtr pD3D11Device, IntPtr ppD3D11Texture2D)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600180C")]
		[Address(RVA = "0xDBC04C", Offset = "0xDBC04C", VA = "0xDBC04C")]
		public EVRRenderModelError LoadIntoTextureD3D11_Async(int textureId, IntPtr pDstTexture)
		{
			return default(EVRRenderModelError);
		}

		[Token(Token = "0x600180D")]
		[Address(RVA = "0xDBC06C", Offset = "0xDBC06C", VA = "0xDBC06C")]
		public void FreeTextureD3D11(IntPtr pD3D11Texture2D)
		{
		}

		[Token(Token = "0x600180E")]
		[Address(RVA = "0xDBC08C", Offset = "0xDBC08C", VA = "0xDBC08C")]
		public uint GetRenderModelName(uint unRenderModelIndex, StringBuilder pchRenderModelName, uint unRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x600180F")]
		[Address(RVA = "0xDBC0AC", Offset = "0xDBC0AC", VA = "0xDBC0AC")]
		public uint GetRenderModelCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001810")]
		[Address(RVA = "0xDBC0CC", Offset = "0xDBC0CC", VA = "0xDBC0CC")]
		public uint GetComponentCount(string pchRenderModelName)
		{
			return default(uint);
		}

		[Token(Token = "0x6001811")]
		[Address(RVA = "0xDBC0EC", Offset = "0xDBC0EC", VA = "0xDBC0EC")]
		public uint GetComponentName(string pchRenderModelName, uint unComponentIndex, StringBuilder pchComponentName, uint unComponentNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001812")]
		[Address(RVA = "0xDBC10C", Offset = "0xDBC10C", VA = "0xDBC10C")]
		public ulong GetComponentButtonMask(string pchRenderModelName, string pchComponentName)
		{
			return default(ulong);
		}

		[Token(Token = "0x6001813")]
		[Address(RVA = "0xDBC12C", Offset = "0xDBC12C", VA = "0xDBC12C")]
		public uint GetComponentRenderModelName(string pchRenderModelName, string pchComponentName, StringBuilder pchComponentRenderModelName, uint unComponentRenderModelNameLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001814")]
		[Address(RVA = "0xDBC14C", Offset = "0xDBC14C", VA = "0xDBC14C")]
		public bool GetComponentState(string pchRenderModelName, string pchComponentName, VRControllerState_t pControllerState, RenderModel_ControllerMode_State_t pState, RenderModel_ComponentState_t pComponentState)
		{
			return default(bool);
		}

		[Token(Token = "0x6001815")]
		[Address(RVA = "0xDBC284", Offset = "0xDBC284", VA = "0xDBC284")]
		public bool RenderModelHasComponent(string pchRenderModelName, string pchComponentName)
		{
			return default(bool);
		}

		[Token(Token = "0x6001816")]
		[Address(RVA = "0xDBC2A4", Offset = "0xDBC2A4", VA = "0xDBC2A4")]
		public uint GetRenderModelThumbnailURL(string pchRenderModelName, StringBuilder pchThumbnailURL, uint unThumbnailURLLen, EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001817")]
		[Address(RVA = "0xDBC2C4", Offset = "0xDBC2C4", VA = "0xDBC2C4")]
		public uint GetRenderModelOriginalPath(string pchRenderModelName, StringBuilder pchOriginalPath, uint unOriginalPathLen, EVRRenderModelError peError)
		{
			return default(uint);
		}

		[Token(Token = "0x6001818")]
		[Address(RVA = "0xDBC2E4", Offset = "0xDBC2E4", VA = "0xDBC2E4")]
		public string GetRenderModelErrorNameFromEnum(EVRRenderModelError error)
		{
			return null;
		}
	}
	[Token(Token = "0x20002F4")]
	public class CVRNotifications
	{
		[Token(Token = "0x40017E1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRNotifications FnTable;

		[Token(Token = "0x6001819")]
		[Address(RVA = "0xDBAEFC", Offset = "0xDBAEFC", VA = "0xDBAEFC")]
		internal CVRNotifications(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600181A")]
		[Address(RVA = "0xDBB02C", Offset = "0xDBB02C", VA = "0xDBB02C")]
		public EVRNotificationError CreateNotification(ulong ulOverlayHandle, ulong ulUserValue, EVRNotificationType type, string pchText, EVRNotificationStyle style, NotificationBitmap_t pImage, uint pNotificationId)
		{
			return default(EVRNotificationError);
		}

		[Token(Token = "0x600181B")]
		[Address(RVA = "0xDBB050", Offset = "0xDBB050", VA = "0xDBB050")]
		public EVRNotificationError RemoveNotification(uint notificationId)
		{
			return default(EVRNotificationError);
		}
	}
	[Token(Token = "0x20002F5")]
	public class CVRSettings
	{
		[Token(Token = "0x40017E2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRSettings FnTable;

		[Token(Token = "0x600181C")]
		[Address(RVA = "0xDBC718", Offset = "0xDBC718", VA = "0xDBC718")]
		internal CVRSettings(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600181D")]
		[Address(RVA = "0xDBC854", Offset = "0xDBC854", VA = "0xDBC854")]
		public string GetSettingsErrorNameFromEnum(EVRSettingsError eError)
		{
			return null;
		}

		[Token(Token = "0x600181E")]
		[Address(RVA = "0xDBC8E4", Offset = "0xDBC8E4", VA = "0xDBC8E4")]
		public bool Sync(bool bForce, EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x600181F")]
		[Address(RVA = "0xDBC908", Offset = "0xDBC908", VA = "0xDBC908")]
		public void SetBool(string pchSection, string pchSettingsKey, bool bValue, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001820")]
		[Address(RVA = "0xDBC92C", Offset = "0xDBC92C", VA = "0xDBC92C")]
		public void SetInt32(string pchSection, string pchSettingsKey, int nValue, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001821")]
		[Address(RVA = "0xDBC94C", Offset = "0xDBC94C", VA = "0xDBC94C")]
		public void SetFloat(string pchSection, string pchSettingsKey, float flValue, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001822")]
		[Address(RVA = "0xDBC96C", Offset = "0xDBC96C", VA = "0xDBC96C")]
		public void SetString(string pchSection, string pchSettingsKey, string pchValue, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001823")]
		[Address(RVA = "0xDBC98C", Offset = "0xDBC98C", VA = "0xDBC98C")]
		public bool GetBool(string pchSection, string pchSettingsKey, EVRSettingsError peError)
		{
			return default(bool);
		}

		[Token(Token = "0x6001824")]
		[Address(RVA = "0xDBC9AC", Offset = "0xDBC9AC", VA = "0xDBC9AC")]
		public int GetInt32(string pchSection, string pchSettingsKey, EVRSettingsError peError)
		{
			return default(int);
		}

		[Token(Token = "0x6001825")]
		[Address(RVA = "0xDBC9CC", Offset = "0xDBC9CC", VA = "0xDBC9CC")]
		public float GetFloat(string pchSection, string pchSettingsKey, EVRSettingsError peError)
		{
			return default(float);
		}

		[Token(Token = "0x6001826")]
		[Address(RVA = "0xDBC9EC", Offset = "0xDBC9EC", VA = "0xDBC9EC")]
		public void GetString(string pchSection, string pchSettingsKey, StringBuilder pchValue, uint unValueLen, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001827")]
		[Address(RVA = "0xDBCA0C", Offset = "0xDBCA0C", VA = "0xDBCA0C")]
		public void RemoveSection(string pchSection, EVRSettingsError peError)
		{
		}

		[Token(Token = "0x6001828")]
		[Address(RVA = "0xDBCA2C", Offset = "0xDBCA2C", VA = "0xDBCA2C")]
		public void RemoveKeyInSection(string pchSection, string pchSettingsKey, EVRSettingsError peError)
		{
		}
	}
	[Token(Token = "0x20002F6")]
	public class CVRScreenshots
	{
		[Token(Token = "0x40017E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRScreenshots FnTable;

		[Token(Token = "0x6001829")]
		[Address(RVA = "0xDBC4E4", Offset = "0xDBC4E4", VA = "0xDBC4E4")]
		internal CVRScreenshots(IntPtr pInterface)
		{
		}

		[Token(Token = "0x600182A")]
		[Address(RVA = "0xDBC628", Offset = "0xDBC628", VA = "0xDBC628")]
		public EVRScreenshotError RequestScreenshot(uint pOutScreenshotHandle, EVRScreenshotType type, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x600182B")]
		[Address(RVA = "0xDBC64C", Offset = "0xDBC64C", VA = "0xDBC64C")]
		public EVRScreenshotError HookScreenshot(EVRScreenshotType[] pSupportedTypes)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x600182C")]
		[Address(RVA = "0xDBC674", Offset = "0xDBC674", VA = "0xDBC674")]
		public EVRScreenshotType GetScreenshotPropertyType(uint screenshotHandle, EVRScreenshotError pError)
		{
			return default(EVRScreenshotType);
		}

		[Token(Token = "0x600182D")]
		[Address(RVA = "0xDBC694", Offset = "0xDBC694", VA = "0xDBC694")]
		public uint GetScreenshotPropertyFilename(uint screenshotHandle, EVRScreenshotPropertyFilenames filenameType, StringBuilder pchFilename, uint cchFilename, EVRScreenshotError pError)
		{
			return default(uint);
		}

		[Token(Token = "0x600182E")]
		[Address(RVA = "0xDBC6B4", Offset = "0xDBC6B4", VA = "0xDBC6B4")]
		public EVRScreenshotError UpdateScreenshotProgress(uint screenshotHandle, float flProgress)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x600182F")]
		[Address(RVA = "0xDBC6D4", Offset = "0xDBC6D4", VA = "0xDBC6D4")]
		public EVRScreenshotError TakeStereoScreenshot(uint pOutScreenshotHandle, string pchPreviewFilename, string pchVRFilename)
		{
			return default(EVRScreenshotError);
		}

		[Token(Token = "0x6001830")]
		[Address(RVA = "0xDBC6F8", Offset = "0xDBC6F8", VA = "0xDBC6F8")]
		public EVRScreenshotError SubmitScreenshot(uint screenshotHandle, EVRScreenshotType type, string pchSourcePreviewFilename, string pchSourceVRFilename)
		{
			return default(EVRScreenshotError);
		}
	}
	[Token(Token = "0x20002F7")]
	public class CVRResources
	{
		[Token(Token = "0x40017E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRResources FnTable;

		[Token(Token = "0x6001831")]
		[Address(RVA = "0xDBC374", Offset = "0xDBC374", VA = "0xDBC374")]
		internal CVRResources(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001832")]
		[Address(RVA = "0xDBC4A4", Offset = "0xDBC4A4", VA = "0xDBC4A4")]
		public uint LoadSharedResource(string pchResourceName, string pchBuffer, uint unBufferLen)
		{
			return default(uint);
		}

		[Token(Token = "0x6001833")]
		[Address(RVA = "0xDBC4C4", Offset = "0xDBC4C4", VA = "0xDBC4C4")]
		public uint GetResourceFullPath(string pchResourceName, string pchResourceTypeDirectory, StringBuilder pchPathBuffer, uint unBufferLen)
		{
			return default(uint);
		}
	}
	[Token(Token = "0x20002F8")]
	public class CVRDriverManager
	{
		[Token(Token = "0x40017E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private IVRDriverManager FnTable;

		[Token(Token = "0x6001834")]
		[Address(RVA = "0xDBABA4", Offset = "0xDBABA4", VA = "0xDBABA4")]
		internal CVRDriverManager(IntPtr pInterface)
		{
		}

		[Token(Token = "0x6001835")]
		[Address(RVA = "0xDBACDC", Offset = "0xDBACDC", VA = "0xDBACDC")]
		public uint GetDriverCount()
		{
			return default(uint);
		}

		[Token(Token = "0x6001836")]
		[Address(RVA = "0xDBACFC", Offset = "0xDBACFC", VA = "0xDBACFC")]
		public uint GetDriverName(uint nDriver, StringBuilder pchValue, uint unBufferSize)
		{
			return default(uint);
		}

		[Token(Token = "0x6001837")]
		[Address(RVA = "0xDBAD1C", Offset = "0xDBAD1C", VA = "0xDBAD1C")]
		public ulong GetDriverHandle(string pchDriverName)
		{
			return default(ulong);
		}
	}
	[Token(Token = "0x20002F9")]
	public class OpenVRInterop
	{
		[PreserveSig]
		[Token(Token = "0x6001838")]
		[Address(RVA = "0x1B61848", Offset = "0x1B61848", VA = "0x1B61848")]
		internal static extern uint InitInternal(EVRInitError peError, EVRApplicationType eApplicationType);

		[PreserveSig]
		[Token(Token = "0x6001839")]
		[Address(RVA = "0x1B618DC", Offset = "0x1B618DC", VA = "0x1B618DC")]
		internal static extern void ShutdownInternal();

		[PreserveSig]
		[Token(Token = "0x600183A")]
		[Address(RVA = "0x1B61950", Offset = "0x1B61950", VA = "0x1B61950")]
		internal static extern bool IsHmdPresent();

		[PreserveSig]
		[Token(Token = "0x600183B")]
		[Address(RVA = "0x1B619D0", Offset = "0x1B619D0", VA = "0x1B619D0")]
		internal static extern bool IsRuntimeInstalled();

		[PreserveSig]
		[Token(Token = "0x600183C")]
		[Address(RVA = "0x1B61AC8", Offset = "0x1B61AC8", VA = "0x1B61AC8")]
		internal static extern IntPtr GetStringForHmdError(EVRInitError error);

		[PreserveSig]
		[Token(Token = "0x600183D")]
		[Address(RVA = "0x1B61B4C", Offset = "0x1B61B4C", VA = "0x1B61B4C")]
		internal static extern IntPtr GetGenericInterface([In] string pchInterfaceVersion, EVRInitError peError);

		[PreserveSig]
		[Token(Token = "0x600183E")]
		[Address(RVA = "0x1B61BF8", Offset = "0x1B61BF8", VA = "0x1B61BF8")]
		internal static extern bool IsInterfaceVersionValid([In] string pchInterfaceVersion);

		[PreserveSig]
		[Token(Token = "0x600183F")]
		[Address(RVA = "0x1B61C98", Offset = "0x1B61C98", VA = "0x1B61C98")]
		internal static extern uint GetInitToken();

		[Token(Token = "0x6001840")]
		[Address(RVA = "0x1B624FC", Offset = "0x1B624FC", VA = "0x1B624FC")]
		public OpenVRInterop()
		{
		}
	}
	[Token(Token = "0x20002FA")]
	public enum EVREye
	{
		[Token(Token = "0x40017E7")]
		Eye_Left,
		[Token(Token = "0x40017E8")]
		Eye_Right
	}
	[Token(Token = "0x20002FB")]
	public enum ETextureType
	{
		[Token(Token = "0x40017EA")]
		DirectX,
		[Token(Token = "0x40017EB")]
		OpenGL,
		[Token(Token = "0x40017EC")]
		Vulkan,
		[Token(Token = "0x40017ED")]
		IOSurface,
		[Token(Token = "0x40017EE")]
		DirectX12,
		[Token(Token = "0x40017EF")]
		DXGISharedHandle
	}
	[Token(Token = "0x20002FC")]
	public enum EColorSpace
	{
		[Token(Token = "0x40017F1")]
		Auto,
		[Token(Token = "0x40017F2")]
		Gamma,
		[Token(Token = "0x40017F3")]
		Linear
	}
	[Token(Token = "0x20002FD")]
	public enum ETrackingResult
	{
		[Token(Token = "0x40017F5")]
		Uninitialized = 1,
		[Token(Token = "0x40017F6")]
		Calibrating_InProgress = 100,
		[Token(Token = "0x40017F7")]
		Calibrating_OutOfRange = 101,
		[Token(Token = "0x40017F8")]
		Running_OK = 200,
		[Token(Token = "0x40017F9")]
		Running_OutOfRange = 201
	}
	[Token(Token = "0x20002FE")]
	public enum ETrackedDeviceClass
	{
		[Token(Token = "0x40017FB")]
		Invalid,
		[Token(Token = "0x40017FC")]
		HMD,
		[Token(Token = "0x40017FD")]
		Controller,
		[Token(Token = "0x40017FE")]
		GenericTracker,
		[Token(Token = "0x40017FF")]
		TrackingReference,
		[Token(Token = "0x4001800")]
		DisplayRedirect
	}
	[Token(Token = "0x20002FF")]
	public enum ETrackedControllerRole
	{
		[Token(Token = "0x4001802")]
		Invalid,
		[Token(Token = "0x4001803")]
		LeftHand,
		[Token(Token = "0x4001804")]
		RightHand,
		[Token(Token = "0x4001805")]
		OptOut
	}
	[Token(Token = "0x2000300")]
	public enum ETrackingUniverseOrigin
	{
		[Token(Token = "0x4001807")]
		TrackingUniverseSeated,
		[Token(Token = "0x4001808")]
		TrackingUniverseStanding,
		[Token(Token = "0x4001809")]
		TrackingUniverseRawAndUncalibrated
	}
	[Token(Token = "0x2000301")]
	public enum ETrackedDeviceProperty
	{
		[Token(Token = "0x400180B")]
		Prop_Invalid = 0,
		[Token(Token = "0x400180C")]
		Prop_TrackingSystemName_String = 1000,
		[Token(Token = "0x400180D")]
		Prop_ModelNumber_String = 1001,
		[Token(Token = "0x400180E")]
		Prop_SerialNumber_String = 1002,
		[Token(Token = "0x400180F")]
		Prop_RenderModelName_String = 1003,
		[Token(Token = "0x4001810")]
		Prop_WillDriftInYaw_Bool = 1004,
		[Token(Token = "0x4001811")]
		Prop_ManufacturerName_String = 1005,
		[Token(Token = "0x4001812")]
		Prop_TrackingFirmwareVersion_String = 1006,
		[Token(Token = "0x4001813")]
		Prop_HardwareRevision_String = 1007,
		[Token(Token = "0x4001814")]
		Prop_AllWirelessDongleDescriptions_String = 1008,
		[Token(Token = "0x4001815")]
		Prop_ConnectedWirelessDongle_String = 1009,
		[Token(Token = "0x4001816")]
		Prop_DeviceIsWireless_Bool = 1010,
		[Token(Token = "0x4001817")]
		Prop_DeviceIsCharging_Bool = 1011,
		[Token(Token = "0x4001818")]
		Prop_DeviceBatteryPercentage_Float = 1012,
		[Token(Token = "0x4001819")]
		Prop_StatusDisplayTransform_Matrix34 = 1013,
		[Token(Token = "0x400181A")]
		Prop_Firmware_UpdateAvailable_Bool = 1014,
		[Token(Token = "0x400181B")]
		Prop_Firmware_ManualUpdate_Bool = 1015,
		[Token(Token = "0x400181C")]
		Prop_Firmware_ManualUpdateURL_String = 1016,
		[Token(Token = "0x400181D")]
		Prop_HardwareRevision_Uint64 = 1017,
		[Token(Token = "0x400181E")]
		Prop_FirmwareVersion_Uint64 = 1018,
		[Token(Token = "0x400181F")]
		Prop_FPGAVersion_Uint64 = 1019,
		[Token(Token = "0x4001820")]
		Prop_VRCVersion_Uint64 = 1020,
		[Token(Token = "0x4001821")]
		Prop_RadioVersion_Uint64 = 1021,
		[Token(Token = "0x4001822")]
		Prop_DongleVersion_Uint64 = 1022,
		[Token(Token = "0x4001823")]
		Prop_BlockServerShutdown_Bool = 1023,
		[Token(Token = "0x4001824")]
		Prop_CanUnifyCoordinateSystemWithHmd_Bool = 1024,
		[Token(Token = "0x4001825")]
		Prop_ContainsProximitySensor_Bool = 1025,
		[Token(Token = "0x4001826")]
		Prop_DeviceProvidesBatteryStatus_Bool = 1026,
		[Token(Token = "0x4001827")]
		Prop_DeviceCanPowerOff_Bool = 1027,
		[Token(Token = "0x4001828")]
		Prop_Firmware_ProgrammingTarget_String = 1028,
		[Token(Token = "0x4001829")]
		Prop_DeviceClass_Int32 = 1029,
		[Token(Token = "0x400182A")]
		Prop_HasCamera_Bool = 1030,
		[Token(Token = "0x400182B")]
		Prop_DriverVersion_String = 1031,
		[Token(Token = "0x400182C")]
		Prop_Firmware_ForceUpdateRequired_Bool = 1032,
		[Token(Token = "0x400182D")]
		Prop_ViveSystemButtonFixRequired_Bool = 1033,
		[Token(Token = "0x400182E")]
		Prop_ParentDriver_Uint64 = 1034,
		[Token(Token = "0x400182F")]
		Prop_ResourceRoot_String = 1035,
		[Token(Token = "0x4001830")]
		Prop_RegisteredDeviceType_String = 1036,
		[Token(Token = "0x4001831")]
		Prop_InputProfilePath_String = 1037,
		[Token(Token = "0x4001832")]
		Prop_NeverTracked_Bool = 1038,
		[Token(Token = "0x4001833")]
		Prop_ReportsTimeSinceVSync_Bool = 2000,
		[Token(Token = "0x4001834")]
		Prop_SecondsFromVsyncToPhotons_Float = 2001,
		[Token(Token = "0x4001835")]
		Prop_DisplayFrequency_Float = 2002,
		[Token(Token = "0x4001836")]
		Prop_UserIpdMeters_Float = 2003,
		[Token(Token = "0x4001837")]
		Prop_CurrentUniverseId_Uint64 = 2004,
		[Token(Token = "0x4001838")]
		Prop_PreviousUniverseId_Uint64 = 2005,
		[Token(Token = "0x4001839")]
		Prop_DisplayFirmwareVersion_Uint64 = 2006,
		[Token(Token = "0x400183A")]
		Prop_IsOnDesktop_Bool = 2007,
		[Token(Token = "0x400183B")]
		Prop_DisplayMCType_Int32 = 2008,
		[Token(Token = "0x400183C")]
		Prop_DisplayMCOffset_Float = 2009,
		[Token(Token = "0x400183D")]
		Prop_DisplayMCScale_Float = 2010,
		[Token(Token = "0x400183E")]
		Prop_EdidVendorID_Int32 = 2011,
		[Token(Token = "0x400183F")]
		Prop_DisplayMCImageLeft_String = 2012,
		[Token(Token = "0x4001840")]
		Prop_DisplayMCImageRight_String = 2013,
		[Token(Token = "0x4001841")]
		Prop_DisplayGCBlackClamp_Float = 2014,
		[Token(Token = "0x4001842")]
		Prop_EdidProductID_Int32 = 2015,
		[Token(Token = "0x4001843")]
		Prop_CameraToHeadTransform_Matrix34 = 2016,
		[Token(Token = "0x4001844")]
		Prop_DisplayGCType_Int32 = 2017,
		[Token(Token = "0x4001845")]
		Prop_DisplayGCOffset_Float = 2018,
		[Token(Token = "0x4001846")]
		Prop_DisplayGCScale_Float = 2019,
		[Token(Token = "0x4001847")]
		Prop_DisplayGCPrescale_Float = 2020,
		[Token(Token = "0x4001848")]
		Prop_DisplayGCImage_String = 2021,
		[Token(Token = "0x4001849")]
		Prop_LensCenterLeftU_Float = 2022,
		[Token(Token = "0x400184A")]
		Prop_LensCenterLeftV_Float = 2023,
		[Token(Token = "0x400184B")]
		Prop_LensCenterRightU_Float = 2024,
		[Token(Token = "0x400184C")]
		Prop_LensCenterRightV_Float = 2025,
		[Token(Token = "0x400184D")]
		Prop_UserHeadToEyeDepthMeters_Float = 2026,
		[Token(Token = "0x400184E")]
		Prop_CameraFirmwareVersion_Uint64 = 2027,
		[Token(Token = "0x400184F")]
		Prop_CameraFirmwareDescription_String = 2028,
		[Token(Token = "0x4001850")]
		Prop_DisplayFPGAVersion_Uint64 = 2029,
		[Token(Token = "0x4001851")]
		Prop_DisplayBootloaderVersion_Uint64 = 2030,
		[Token(Token = "0x4001852")]
		Prop_DisplayHardwareVersion_Uint64 = 2031,
		[Token(Token = "0x4001853")]
		Prop_AudioFirmwareVersion_Uint64 = 2032,
		[Token(Token = "0x4001854")]
		Prop_CameraCompatibilityMode_Int32 = 2033,
		[Token(Token = "0x4001855")]
		Prop_ScreenshotHorizontalFieldOfViewDegrees_Float = 2034,
		[Token(Token = "0x4001856")]
		Prop_ScreenshotVerticalFieldOfViewDegrees_Float = 2035,
		[Token(Token = "0x4001857")]
		Prop_DisplaySuppressed_Bool = 2036,
		[Token(Token = "0x4001858")]
		Prop_DisplayAllowNightMode_Bool = 2037,
		[Token(Token = "0x4001859")]
		Prop_DisplayMCImageWidth_Int32 = 2038,
		[Token(Token = "0x400185A")]
		Prop_DisplayMCImageHeight_Int32 = 2039,
		[Token(Token = "0x400185B")]
		Prop_DisplayMCImageNumChannels_Int32 = 2040,
		[Token(Token = "0x400185C")]
		Prop_DisplayMCImageData_Binary = 2041,
		[Token(Token = "0x400185D")]
		Prop_SecondsFromPhotonsToVblank_Float = 2042,
		[Token(Token = "0x400185E")]
		Prop_DriverDirectModeSendsVsyncEvents_Bool = 2043,
		[Token(Token = "0x400185F")]
		Prop_DisplayDebugMode_Bool = 2044,
		[Token(Token = "0x4001860")]
		Prop_GraphicsAdapterLuid_Uint64 = 2045,
		[Token(Token = "0x4001861")]
		Prop_DriverProvidedChaperonePath_String = 2048,
		[Token(Token = "0x4001862")]
		Prop_ExpectedTrackingReferenceCount_Int32 = 2049,
		[Token(Token = "0x4001863")]
		Prop_ExpectedControllerCount_Int32 = 2050,
		[Token(Token = "0x4001864")]
		Prop_NamedIconPathControllerLeftDeviceOff_String = 2051,
		[Token(Token = "0x4001865")]
		Prop_NamedIconPathControllerRightDeviceOff_String = 2052,
		[Token(Token = "0x4001866")]
		Prop_NamedIconPathTrackingReferenceDeviceOff_String = 2053,
		[Token(Token = "0x4001867")]
		Prop_DoNotApplyPrediction_Bool = 2054,
		[Token(Token = "0x4001868")]
		Prop_CameraToHeadTransforms_Matrix34_Array = 2055,
		[Token(Token = "0x4001869")]
		Prop_DistortionMeshResolution_Int32 = 2056,
		[Token(Token = "0x400186A")]
		Prop_DriverIsDrawingControllers_Bool = 2057,
		[Token(Token = "0x400186B")]
		Prop_DriverRequestsApplicationPause_Bool = 2058,
		[Token(Token = "0x400186C")]
		Prop_DriverRequestsReducedRendering_Bool = 2059,
		[Token(Token = "0x400186D")]
		Prop_MinimumIpdStepMeters_Float = 2060,
		[Token(Token = "0x400186E")]
		Prop_AudioBridgeFirmwareVersion_Uint64 = 2061,
		[Token(Token = "0x400186F")]
		Prop_ImageBridgeFirmwareVersion_Uint64 = 2062,
		[Token(Token = "0x4001870")]
		Prop_AttachedDeviceId_String = 3000,
		[Token(Token = "0x4001871")]
		Prop_SupportedButtons_Uint64 = 3001,
		[Token(Token = "0x4001872")]
		Prop_Axis0Type_Int32 = 3002,
		[Token(Token = "0x4001873")]
		Prop_Axis1Type_Int32 = 3003,
		[Token(Token = "0x4001874")]
		Prop_Axis2Type_Int32 = 3004,
		[Token(Token = "0x4001875")]
		Prop_Axis3Type_Int32 = 3005,
		[Token(Token = "0x4001876")]
		Prop_Axis4Type_Int32 = 3006,
		[Token(Token = "0x4001877")]
		Prop_ControllerRoleHint_Int32 = 3007,
		[Token(Token = "0x4001878")]
		Prop_FieldOfViewLeftDegrees_Float = 4000,
		[Token(Token = "0x4001879")]
		Prop_FieldOfViewRightDegrees_Float = 4001,
		[Token(Token = "0x400187A")]
		Prop_FieldOfViewTopDegrees_Float = 4002,
		[Token(Token = "0x400187B")]
		Prop_FieldOfViewBottomDegrees_Float = 4003,
		[Token(Token = "0x400187C")]
		Prop_TrackingRangeMinimumMeters_Float = 4004,
		[Token(Token = "0x400187D")]
		Prop_TrackingRangeMaximumMeters_Float = 4005,
		[Token(Token = "0x400187E")]
		Prop_ModeLabel_String = 4006,
		[Token(Token = "0x400187F")]
		Prop_IconPathName_String = 5000,
		[Token(Token = "0x4001880")]
		Prop_NamedIconPathDeviceOff_String = 5001,
		[Token(Token = "0x4001881")]
		Prop_NamedIconPathDeviceSearching_String = 5002,
		[Token(Token = "0x4001882")]
		Prop_NamedIconPathDeviceSearchingAlert_String = 5003,
		[Token(Token = "0x4001883")]
		Prop_NamedIconPathDeviceReady_String = 5004,
		[Token(Token = "0x4001884")]
		Prop_NamedIconPathDeviceReadyAlert_String = 5005,
		[Token(Token = "0x4001885")]
		Prop_NamedIconPathDeviceNotReady_String = 5006,
		[Token(Token = "0x4001886")]
		Prop_NamedIconPathDeviceStandby_String = 5007,
		[Token(Token = "0x4001887")]
		Prop_NamedIconPathDeviceAlertLow_String = 5008,
		[Token(Token = "0x4001888")]
		Prop_DisplayHiddenArea_Binary_Start = 5100,
		[Token(Token = "0x4001889")]
		Prop_DisplayHiddenArea_Binary_End = 5150,
		[Token(Token = "0x400188A")]
		Prop_ParentContainer = 5151,
		[Token(Token = "0x400188B")]
		Prop_UserConfigPath_String = 6000,
		[Token(Token = "0x400188C")]
		Prop_InstallPath_String = 6001,
		[Token(Token = "0x400188D")]
		Prop_HasDisplayComponent_Bool = 6002,
		[Token(Token = "0x400188E")]
		Prop_HasControllerComponent_Bool = 6003,
		[Token(Token = "0x400188F")]
		Prop_HasCameraComponent_Bool = 6004,
		[Token(Token = "0x4001890")]
		Prop_HasDriverDirectModeComponent_Bool = 6005,
		[Token(Token = "0x4001891")]
		Prop_HasVirtualDisplayComponent_Bool = 6006,
		[Token(Token = "0x4001892")]
		Prop_ControllerType_String = 7000,
		[Token(Token = "0x4001893")]
		Prop_LegacyInputProfile_String = 7001,
		[Token(Token = "0x4001894")]
		Prop_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001895")]
		Prop_VendorSpecific_Reserved_End = 10999,
		[Token(Token = "0x4001896")]
		Prop_TrackedDeviceProperty_Max = 1000000
	}
	[Token(Token = "0x2000302")]
	public enum ETrackedPropertyError
	{
		[Token(Token = "0x4001898")]
		TrackedProp_Success,
		[Token(Token = "0x4001899")]
		TrackedProp_WrongDataType,
		[Token(Token = "0x400189A")]
		TrackedProp_WrongDeviceClass,
		[Token(Token = "0x400189B")]
		TrackedProp_BufferTooSmall,
		[Token(Token = "0x400189C")]
		TrackedProp_UnknownProperty,
		[Token(Token = "0x400189D")]
		TrackedProp_InvalidDevice,
		[Token(Token = "0x400189E")]
		TrackedProp_CouldNotContactServer,
		[Token(Token = "0x400189F")]
		TrackedProp_ValueNotProvidedByDevice,
		[Token(Token = "0x40018A0")]
		TrackedProp_StringExceedsMaximumLength,
		[Token(Token = "0x40018A1")]
		TrackedProp_NotYetAvailable,
		[Token(Token = "0x40018A2")]
		TrackedProp_PermissionDenied,
		[Token(Token = "0x40018A3")]
		TrackedProp_InvalidOperation,
		[Token(Token = "0x40018A4")]
		TrackedProp_CannotWriteToWildcards
	}
	[Token(Token = "0x2000303")]
	public enum EVRSubmitFlags
	{
		[Token(Token = "0x40018A6")]
		Submit_Default = 0,
		[Token(Token = "0x40018A7")]
		Submit_LensDistortionAlreadyApplied = 1,
		[Token(Token = "0x40018A8")]
		Submit_GlRenderBuffer = 2,
		[Token(Token = "0x40018A9")]
		Submit_Reserved = 4,
		[Token(Token = "0x40018AA")]
		Submit_TextureWithPose = 8,
		[Token(Token = "0x40018AB")]
		Submit_TextureWithDepth = 0x10
	}
	[Token(Token = "0x2000304")]
	public enum EVRState
	{
		[Token(Token = "0x40018AD")]
		Undefined = -1,
		[Token(Token = "0x40018AE")]
		Off,
		[Token(Token = "0x40018AF")]
		Searching,
		[Token(Token = "0x40018B0")]
		Searching_Alert,
		[Token(Token = "0x40018B1")]
		Ready,
		[Token(Token = "0x40018B2")]
		Ready_Alert,
		[Token(Token = "0x40018B3")]
		NotReady,
		[Token(Token = "0x40018B4")]
		Standby,
		[Token(Token = "0x40018B5")]
		Ready_Alert_Low
	}
	[Token(Token = "0x2000305")]
	public enum EVREventType
	{
		[Token(Token = "0x40018B7")]
		VREvent_None = 0,
		[Token(Token = "0x40018B8")]
		VREvent_TrackedDeviceActivated = 100,
		[Token(Token = "0x40018B9")]
		VREvent_TrackedDeviceDeactivated = 101,
		[Token(Token = "0x40018BA")]
		VREvent_TrackedDeviceUpdated = 102,
		[Token(Token = "0x40018BB")]
		VREvent_TrackedDeviceUserInteractionStarted = 103,
		[Token(Token = "0x40018BC")]
		VREvent_TrackedDeviceUserInteractionEnded = 104,
		[Token(Token = "0x40018BD")]
		VREvent_IpdChanged = 105,
		[Token(Token = "0x40018BE")]
		VREvent_EnterStandbyMode = 106,
		[Token(Token = "0x40018BF")]
		VREvent_LeaveStandbyMode = 107,
		[Token(Token = "0x40018C0")]
		VREvent_TrackedDeviceRoleChanged = 108,
		[Token(Token = "0x40018C1")]
		VREvent_WatchdogWakeUpRequested = 109,
		[Token(Token = "0x40018C2")]
		VREvent_LensDistortionChanged = 110,
		[Token(Token = "0x40018C3")]
		VREvent_PropertyChanged = 111,
		[Token(Token = "0x40018C4")]
		VREvent_WirelessDisconnect = 112,
		[Token(Token = "0x40018C5")]
		VREvent_WirelessReconnect = 113,
		[Token(Token = "0x40018C6")]
		VREvent_ButtonPress = 200,
		[Token(Token = "0x40018C7")]
		VREvent_ButtonUnpress = 201,
		[Token(Token = "0x40018C8")]
		VREvent_ButtonTouch = 202,
		[Token(Token = "0x40018C9")]
		VREvent_ButtonUntouch = 203,
		[Token(Token = "0x40018CA")]
		VREvent_DualAnalog_Press = 250,
		[Token(Token = "0x40018CB")]
		VREvent_DualAnalog_Unpress = 251,
		[Token(Token = "0x40018CC")]
		VREvent_DualAnalog_Touch = 252,
		[Token(Token = "0x40018CD")]
		VREvent_DualAnalog_Untouch = 253,
		[Token(Token = "0x40018CE")]
		VREvent_DualAnalog_Move = 254,
		[Token(Token = "0x40018CF")]
		VREvent_DualAnalog_ModeSwitch1 = 255,
		[Token(Token = "0x40018D0")]
		VREvent_DualAnalog_ModeSwitch2 = 256,
		[Token(Token = "0x40018D1")]
		VREvent_DualAnalog_Cancel = 257,
		[Token(Token = "0x40018D2")]
		VREvent_MouseMove = 300,
		[Token(Token = "0x40018D3")]
		VREvent_MouseButtonDown = 301,
		[Token(Token = "0x40018D4")]
		VREvent_MouseButtonUp = 302,
		[Token(Token = "0x40018D5")]
		VREvent_FocusEnter = 303,
		[Token(Token = "0x40018D6")]
		VREvent_FocusLeave = 304,
		[Token(Token = "0x40018D7")]
		VREvent_Scroll = 305,
		[Token(Token = "0x40018D8")]
		VREvent_TouchPadMove = 306,
		[Token(Token = "0x40018D9")]
		VREvent_OverlayFocusChanged = 307,
		[Token(Token = "0x40018DA")]
		VREvent_InputFocusCaptured = 400,
		[Token(Token = "0x40018DB")]
		VREvent_InputFocusReleased = 401,
		[Token(Token = "0x40018DC")]
		VREvent_SceneFocusLost = 402,
		[Token(Token = "0x40018DD")]
		VREvent_SceneFocusGained = 403,
		[Token(Token = "0x40018DE")]
		VREvent_SceneApplicationChanged = 404,
		[Token(Token = "0x40018DF")]
		VREvent_SceneFocusChanged = 405,
		[Token(Token = "0x40018E0")]
		VREvent_InputFocusChanged = 406,
		[Token(Token = "0x40018E1")]
		VREvent_SceneApplicationSecondaryRenderingStarted = 407,
		[Token(Token = "0x40018E2")]
		VREvent_SceneApplicationUsingWrongGraphicsAdapter = 408,
		[Token(Token = "0x40018E3")]
		VREvent_HideRenderModels = 410,
		[Token(Token = "0x40018E4")]
		VREvent_ShowRenderModels = 411,
		[Token(Token = "0x40018E5")]
		VREvent_ConsoleOpened = 420,
		[Token(Token = "0x40018E6")]
		VREvent_ConsoleClosed = 421,
		[Token(Token = "0x40018E7")]
		VREvent_OverlayShown = 500,
		[Token(Token = "0x40018E8")]
		VREvent_OverlayHidden = 501,
		[Token(Token = "0x40018E9")]
		VREvent_DashboardActivated = 502,
		[Token(Token = "0x40018EA")]
		VREvent_DashboardDeactivated = 503,
		[Token(Token = "0x40018EB")]
		VREvent_DashboardThumbSelected = 504,
		[Token(Token = "0x40018EC")]
		VREvent_DashboardRequested = 505,
		[Token(Token = "0x40018ED")]
		VREvent_ResetDashboard = 506,
		[Token(Token = "0x40018EE")]
		VREvent_RenderToast = 507,
		[Token(Token = "0x40018EF")]
		VREvent_ImageLoaded = 508,
		[Token(Token = "0x40018F0")]
		VREvent_ShowKeyboard = 509,
		[Token(Token = "0x40018F1")]
		VREvent_HideKeyboard = 510,
		[Token(Token = "0x40018F2")]
		VREvent_OverlayGamepadFocusGained = 511,
		[Token(Token = "0x40018F3")]
		VREvent_OverlayGamepadFocusLost = 512,
		[Token(Token = "0x40018F4")]
		VREvent_OverlaySharedTextureChanged = 513,
		[Token(Token = "0x40018F5")]
		VREvent_ScreenshotTriggered = 516,
		[Token(Token = "0x40018F6")]
		VREvent_ImageFailed = 517,
		[Token(Token = "0x40018F7")]
		VREvent_DashboardOverlayCreated = 518,
		[Token(Token = "0x40018F8")]
		VREvent_SwitchGamepadFocus = 519,
		[Token(Token = "0x40018F9")]
		VREvent_RequestScreenshot = 520,
		[Token(Token = "0x40018FA")]
		VREvent_ScreenshotTaken = 521,
		[Token(Token = "0x40018FB")]
		VREvent_ScreenshotFailed = 522,
		[Token(Token = "0x40018FC")]
		VREvent_SubmitScreenshotToDashboard = 523,
		[Token(Token = "0x40018FD")]
		VREvent_ScreenshotProgressToDashboard = 524,
		[Token(Token = "0x40018FE")]
		VREvent_PrimaryDashboardDeviceChanged = 525,
		[Token(Token = "0x40018FF")]
		VREvent_RoomViewShown = 526,
		[Token(Token = "0x4001900")]
		VREvent_RoomViewHidden = 527,
		[Token(Token = "0x4001901")]
		VREvent_Notification_Shown = 600,
		[Token(Token = "0x4001902")]
		VREvent_Notification_Hidden = 601,
		[Token(Token = "0x4001903")]
		VREvent_Notification_BeginInteraction = 602,
		[Token(Token = "0x4001904")]
		VREvent_Notification_Destroyed = 603,
		[Token(Token = "0x4001905")]
		VREvent_Quit = 700,
		[Token(Token = "0x4001906")]
		VREvent_ProcessQuit = 701,
		[Token(Token = "0x4001907")]
		VREvent_QuitAborted_UserPrompt = 702,
		[Token(Token = "0x4001908")]
		VREvent_QuitAcknowledged = 703,
		[Token(Token = "0x4001909")]
		VREvent_DriverRequestedQuit = 704,
		[Token(Token = "0x400190A")]
		VREvent_ChaperoneDataHasChanged = 800,
		[Token(Token = "0x400190B")]
		VREvent_ChaperoneUniverseHasChanged = 801,
		[Token(Token = "0x400190C")]
		VREvent_ChaperoneTempDataHasChanged = 802,
		[Token(Token = "0x400190D")]
		VREvent_ChaperoneSettingsHaveChanged = 803,
		[Token(Token = "0x400190E")]
		VREvent_SeatedZeroPoseReset = 804,
		[Token(Token = "0x400190F")]
		VREvent_AudioSettingsHaveChanged = 820,
		[Token(Token = "0x4001910")]
		VREvent_BackgroundSettingHasChanged = 850,
		[Token(Token = "0x4001911")]
		VREvent_CameraSettingsHaveChanged = 851,
		[Token(Token = "0x4001912")]
		VREvent_ReprojectionSettingHasChanged = 852,
		[Token(Token = "0x4001913")]
		VREvent_ModelSkinSettingsHaveChanged = 853,
		[Token(Token = "0x4001914")]
		VREvent_EnvironmentSettingsHaveChanged = 854,
		[Token(Token = "0x4001915")]
		VREvent_PowerSettingsHaveChanged = 855,
		[Token(Token = "0x4001916")]
		VREvent_EnableHomeAppSettingsHaveChanged = 856,
		[Token(Token = "0x4001917")]
		VREvent_SteamVRSectionSettingChanged = 857,
		[Token(Token = "0x4001918")]
		VREvent_LighthouseSectionSettingChanged = 858,
		[Token(Token = "0x4001919")]
		VREvent_NullSectionSettingChanged = 859,
		[Token(Token = "0x400191A")]
		VREvent_UserInterfaceSectionSettingChanged = 860,
		[Token(Token = "0x400191B")]
		VREvent_NotificationsSectionSettingChanged = 861,
		[Token(Token = "0x400191C")]
		VREvent_KeyboardSectionSettingChanged = 862,
		[Token(Token = "0x400191D")]
		VREvent_PerfSectionSettingChanged = 863,
		[Token(Token = "0x400191E")]
		VREvent_DashboardSectionSettingChanged = 864,
		[Token(Token = "0x400191F")]
		VREvent_WebInterfaceSectionSettingChanged = 865,
		[Token(Token = "0x4001920")]
		VREvent_StatusUpdate = 900,
		[Token(Token = "0x4001921")]
		VREvent_WebInterface_InstallDriverCompleted = 950,
		[Token(Token = "0x4001922")]
		VREvent_MCImageUpdated = 1000,
		[Token(Token = "0x4001923")]
		VREvent_FirmwareUpdateStarted = 1100,
		[Token(Token = "0x4001924")]
		VREvent_FirmwareUpdateFinished = 1101,
		[Token(Token = "0x4001925")]
		VREvent_KeyboardClosed = 1200,
		[Token(Token = "0x4001926")]
		VREvent_KeyboardCharInput = 1201,
		[Token(Token = "0x4001927")]
		VREvent_KeyboardDone = 1202,
		[Token(Token = "0x4001928")]
		VREvent_ApplicationTransitionStarted = 1300,
		[Token(Token = "0x4001929")]
		VREvent_ApplicationTransitionAborted = 1301,
		[Token(Token = "0x400192A")]
		VREvent_ApplicationTransitionNewAppStarted = 1302,
		[Token(Token = "0x400192B")]
		VREvent_ApplicationListUpdated = 1303,
		[Token(Token = "0x400192C")]
		VREvent_ApplicationMimeTypeLoad = 1304,
		[Token(Token = "0x400192D")]
		VREvent_ApplicationTransitionNewAppLaunchComplete = 1305,
		[Token(Token = "0x400192E")]
		VREvent_ProcessConnected = 1306,
		[Token(Token = "0x400192F")]
		VREvent_ProcessDisconnected = 1307,
		[Token(Token = "0x4001930")]
		VREvent_Compositor_MirrorWindowShown = 1400,
		[Token(Token = "0x4001931")]
		VREvent_Compositor_MirrorWindowHidden = 1401,
		[Token(Token = "0x4001932")]
		VREvent_Compositor_ChaperoneBoundsShown = 1410,
		[Token(Token = "0x4001933")]
		VREvent_Compositor_ChaperoneBoundsHidden = 1411,
		[Token(Token = "0x4001934")]
		VREvent_TrackedCamera_StartVideoStream = 1500,
		[Token(Token = "0x4001935")]
		VREvent_TrackedCamera_StopVideoStream = 1501,
		[Token(Token = "0x4001936")]
		VREvent_TrackedCamera_PauseVideoStream = 1502,
		[Token(Token = "0x4001937")]
		VREvent_TrackedCamera_ResumeVideoStream = 1503,
		[Token(Token = "0x4001938")]
		VREvent_TrackedCamera_EditingSurface = 1550,
		[Token(Token = "0x4001939")]
		VREvent_PerformanceTest_EnableCapture = 1600,
		[Token(Token = "0x400193A")]
		VREvent_PerformanceTest_DisableCapture = 1601,
		[Token(Token = "0x400193B")]
		VREvent_PerformanceTest_FidelityLevel = 1602,
		[Token(Token = "0x400193C")]
		VREvent_MessageOverlay_Closed = 1650,
		[Token(Token = "0x400193D")]
		VREvent_MessageOverlayCloseRequested = 1651,
		[Token(Token = "0x400193E")]
		VREvent_Input_HapticVibration = 1700,
		[Token(Token = "0x400193F")]
		VREvent_VendorSpecific_Reserved_Start = 10000,
		[Token(Token = "0x4001940")]
		VREvent_VendorSpecific_Reserved_End = 19999
	}
	[Token(Token = "0x2000306")]
	public enum EDeviceActivityLevel
	{
		[Token(Token = "0x4001942")]
		k_EDeviceActivityLevel_Unknown = -1,
		[Token(Token = "0x4001943")]
		k_EDeviceActivityLevel_Idle,
		[Token(Token = "0x4001944")]
		k_EDeviceActivityLevel_UserInteraction,
		[Token(Token = "0x4001945")]
		k_EDeviceActivityLevel_UserInteraction_Timeout,
		[Token(Token = "0x4001946")]
		k_EDeviceActivityLevel_Standby
	}
	[Token(Token = "0x2000307")]
	public enum EVRButtonId
	{
		[Token(Token = "0x4001948")]
		k_EButton_System = 0,
		[Token(Token = "0x4001949")]
		k_EButton_ApplicationMenu = 1,
		[Token(Token = "0x400194A")]
		k_EButton_Grip = 2,
		[Token(Token = "0x400194B")]
		k_EButton_DPad_Left = 3,
		[Token(Token = "0x400194C")]
		k_EButton_DPad_Up = 4,
		[Token(Token = "0x400194D")]
		k_EButton_DPad_Right = 5,
		[Token(Token = "0x400194E")]
		k_EButton_DPad_Down = 6,
		[Token(Token = "0x400194F")]
		k_EButton_A = 7,
		[Token(Token = "0x4001950")]
		k_EButton_ProximitySensor = 31,
		[Token(Token = "0x4001951")]
		k_EButton_Axis0 = 32,
		[Token(Token = "0x4001952")]
		k_EButton_Axis1 = 33,
		[Token(Token = "0x4001953")]
		k_EButton_Axis2 = 34,
		[Token(Token = "0x4001954")]
		k_EButton_Axis3 = 35,
		[Token(Token = "0x4001955")]
		k_EButton_Axis4 = 36,
		[Token(Token = "0x4001956")]
		k_EButton_SteamVR_Touchpad = 32,
		[Token(Token = "0x4001957")]
		k_EButton_SteamVR_Trigger = 33,
		[Token(Token = "0x4001958")]
		k_EButton_Dashboard_Back = 2,
		[Token(Token = "0x4001959")]
		k_EButton_Max = 64
	}
	[Token(Token = "0x2000308")]
	public enum EVRMouseButton
	{
		[Token(Token = "0x400195B")]
		Left = 1,
		[Token(Token = "0x400195C")]
		Right = 2,
		[Token(Token = "0x400195D")]
		Middle = 4
	}
	[Token(Token = "0x2000309")]
	public enum EDualAnalogWhich
	{
		[Token(Token = "0x400195F")]
		k_EDualAnalog_Left,
		[Token(Token = "0x4001960")]
		k_EDualAnalog_Right
	}
	[Token(Token = "0x200030A")]
	public enum EVRInputError
	{
		[Token(Token = "0x4001962")]
		None,
		[Token(Token = "0x4001963")]
		NameNotFound,
		[Token(Token = "0x4001964")]
		WrongType,
		[Token(Token = "0x4001965")]
		InvalidHandle,
		[Token(Token = "0x4001966")]
		InvalidParam,
		[Token(Token = "0x4001967")]
		NoSteam,
		[Token(Token = "0x4001968")]
		MaxCapacityReached,
		[Token(Token = "0x4001969")]
		IPCError,
		[Token(Token = "0x400196A")]
		NoActiveActionSet,
		[Token(Token = "0x400196B")]
		InvalidDevice
	}
	[Token(Token = "0x200030B")]
	public enum EHiddenAreaMeshType
	{
		[Token(Token = "0x400196D")]
		k_eHiddenAreaMesh_Standard,
		[Token(Token = "0x400196E")]
		k_eHiddenAreaMesh_Inverse,
		[Token(Token = "0x400196F")]
		k_eHiddenAreaMesh_LineLoop,
		[Token(Token = "0x4001970")]
		k_eHiddenAreaMesh_Max
	}
	[Token(Token = "0x200030C")]
	public enum EVRControllerAxisType
	{
		[Token(Token = "0x4001972")]
		k_eControllerAxis_None,
		[Token(Token = "0x4001973")]
		k_eControllerAxis_TrackPad,
		[Token(Token = "0x4001974")]
		k_eControllerAxis_Joystick,
		[Token(Token = "0x4001975")]
		k_eControllerAxis_Trigger
	}
	[Token(Token = "0x200030D")]
	public enum EVRControllerEventOutputType
	{
		[Token(Token = "0x4001977")]
		ControllerEventOutput_OSEvents,
		[Token(Token = "0x4001978")]
		ControllerEventOutput_VREvents
	}
	[Token(Token = "0x200030E")]
	public enum ECollisionBoundsStyle
	{
		[Token(Token = "0x400197A")]
		COLLISION_BOUNDS_STYLE_BEGINNER,
		[Token(Token = "0x400197B")]
		COLLISION_BOUNDS_STYLE_INTERMEDIATE,
		[Token(Token = "0x400197C")]
		COLLISION_BOUNDS_STYLE_SQUARES,
		[Token(Token = "0x400197D")]
		COLLISION_BOUNDS_STYLE_ADVANCED,
		[Token(Token = "0x400197E")]
		COLLISION_BOUNDS_STYLE_NONE,
		[Token(Token = "0x400197F")]
		COLLISION_BOUNDS_STYLE_COUNT
	}
	[Token(Token = "0x200030F")]
	public enum EVROverlayError
	{
		[Token(Token = "0x4001981")]
		None = 0,
		[Token(Token = "0x4001982")]
		UnknownOverlay = 10,
		[Token(Token = "0x4001983")]
		InvalidHandle = 11,
		[Token(Token = "0x4001984")]
		PermissionDenied = 12,
		[Token(Token = "0x4001985")]
		OverlayLimitExceeded = 13,
		[Token(Token = "0x4001986")]
		WrongVisibilityType = 14,
		[Token(Token = "0x4001987")]
		KeyTooLong = 15,
		[Token(Token = "0x4001988")]
		NameTooLong = 16,
		[Token(Token = "0x4001989")]
		KeyInUse = 17,
		[Token(Token = "0x400198A")]
		WrongTransformType = 18,
		[Token(Token = "0x400198B")]
		InvalidTrackedDevice = 19,
		[Token(Token = "0x400198C")]
		InvalidParameter = 20,
		[Token(Token = "0x400198D")]
		ThumbnailCantBeDestroyed = 21,
		[Token(Token = "0x400198E")]
		ArrayTooSmall = 22,
		[Token(Token = "0x400198F")]
		RequestFailed = 23,
		[Token(Token = "0x4001990")]
		InvalidTexture = 24,
		[Token(Token = "0x4001991")]
		UnableToLoadFile = 25,
		[Token(Token = "0x4001992")]
		KeyboardAlreadyInUse = 26,
		[Token(Token = "0x4001993")]
		NoNeighbor = 27,
		[Token(Token = "0x4001994")]
		TooManyMaskPrimitives = 29,
		[Token(Token = "0x4001995")]
		BadMaskPrimitive = 30,
		[Token(Token = "0x4001996")]
		TextureAlreadyLocked = 31,
		[Token(Token = "0x4001997")]
		TextureLockCapacityReached = 32,
		[Token(Token = "0x4001998")]
		TextureNotLocked = 33
	}
	[Token(Token = "0x2000310")]
	public enum EVRApplicationType
	{
		[Token(Token = "0x400199A")]
		VRApplication_Other,
		[Token(Token = "0x400199B")]
		VRApplication_Scene,
		[Token(Token = "0x400199C")]
		VRApplication_Overlay,
		[Token(Token = "0x400199D")]
		VRApplication_Background,
		[Token(Token = "0x400199E")]
		VRApplication_Utility,
		[Token(Token = "0x400199F")]
		VRApplication_VRMonitor,
		[Token(Token = "0x40019A0")]
		VRApplication_SteamWatchdog,
		[Token(Token = "0x40019A1")]
		VRApplication_Bootstrapper,
		[Token(Token = "0x40019A2")]
		VRApplication_Max
	}
	[Token(Token = "0x2000311")]
	public enum EVRFirmwareError
	{
		[Token(Token = "0x40019A4")]
		None,
		[Token(Token = "0x40019A5")]
		Success,
		[Token(Token = "0x40019A6")]
		Fail
	}
	[Token(Token = "0x2000312")]
	public enum EVRNotificationError
	{
		[Token(Token = "0x40019A8")]
		OK = 0,
		[Token(Token = "0x40019A9")]
		InvalidNotificationId = 100,
		[Token(Token = "0x40019AA")]
		NotificationQueueFull = 101,
		[Token(Token = "0x40019AB")]
		InvalidOverlayHandle = 102,
		[Token(Token = "0x40019AC")]
		SystemWithUserValueAlreadyExists = 103
	}
	[Token(Token = "0x2000313")]
	public enum EVRInitError
	{
		[Token(Token = "0x40019AE")]
		None = 0,
		[Token(Token = "0x40019AF")]
		Unknown = 1,
		[Token(Token = "0x40019B0")]
		Init_InstallationNotFound = 100,
		[Token(Token = "0x40019B1")]
		Init_InstallationCorrupt = 101,
		[Token(Token = "0x40019B2")]
		Init_VRClientDLLNotFound = 102,
		[Token(Token = "0x40019B3")]
		Init_FileNotFound = 103,
		[Token(Token = "0x40019B4")]
		Init_FactoryNotFound = 104,
		[Token(Token = "0x40019B5")]
		Init_InterfaceNotFound = 105,
		[Token(Token = "0x40019B6")]
		Init_InvalidInterface = 106,
		[Token(Token = "0x40019B7")]
		Init_UserConfigDirectoryInvalid = 107,
		[Token(Token = "0x40019B8")]
		Init_HmdNotFound = 108,
		[Token(Token = "0x40019B9")]
		Init_NotInitialized = 109,
		[Token(Token = "0x40019BA")]
		Init_PathRegistryNotFound = 110,
		[Token(Token = "0x40019BB")]
		Init_NoConfigPath = 111,
		[Token(Token = "0x40019BC")]
		Init_NoLogPath = 112,
		[Token(Token = "0x40019BD")]
		Init_PathRegistryNotWritable = 113,
		[Token(Token = "0x40019BE")]
		Init_AppInfoInitFailed = 114,
		[Token(Token = "0x40019BF")]
		Init_Retry = 115,
		[Token(Token = "0x40019C0")]
		Init_InitCanceledByUser = 116,
		[Token(Token = "0x40019C1")]
		Init_AnotherAppLaunching = 117,
		[Token(Token = "0x40019C2")]
		Init_SettingsInitFailed = 118,
		[Token(Token = "0x40019C3")]
		Init_ShuttingDown = 119,
		[Token(Token = "0x40019C4")]
		Init_TooManyObjects = 120,
		[Token(Token = "0x40019C5")]
		Init_NoServerForBackgroundApp = 121,
		[Token(Token = "0x40019C6")]
		Init_NotSupportedWithCompositor = 122,
		[Token(Token = "0x40019C7")]
		Init_NotAvailableToUtilityApps = 123,
		[Token(Token = "0x40019C8")]
		Init_Internal = 124,
		[Token(Token = "0x40019C9")]
		Init_HmdDriverIdIsNone = 125,
		[Token(Token = "0x40019CA")]
		Init_HmdNotFoundPresenceFailed = 126,
		[Token(Token = "0x40019CB")]
		Init_VRMonitorNotFound = 127,
		[Token(Token = "0x40019CC")]
		Init_VRMonitorStartupFailed = 128,
		[Token(Token = "0x40019CD")]
		Init_LowPowerWatchdogNotSupported = 129,
		[Token(Token = "0x40019CE")]
		Init_InvalidApplicationType = 130,
		[Token(Token = "0x40019CF")]
		Init_NotAvailableToWatchdogApps = 131,
		[Token(Token = "0x40019D0")]
		Init_WatchdogDisabledInSettings = 132,
		[Token(Token = "0x40019D1")]
		Init_VRDashboardNotFound = 133,
		[Token(Token = "0x40019D2")]
		Init_VRDashboardStartupFailed = 134,
		[Token(Token = "0x40019D3")]
		Init_VRHomeNotFound = 135,
		[Token(Token = "0x40019D4")]
		Init_VRHomeStartupFailed = 136,
		[Token(Token = "0x40019D5")]
		Init_RebootingBusy = 137,
		[Token(Token = "0x40019D6")]
		Init_FirmwareUpdateBusy = 138,
		[Token(Token = "0x40019D7")]
		Init_FirmwareRecoveryBusy = 139,
		[Token(Token = "0x40019D8")]
		Init_USBServiceBusy = 140,
		[Token(Token = "0x40019D9")]
		Init_VRWebHelperStartupFailed = 141,
		[Token(Token = "0x40019DA")]
		Driver_Failed = 200,
		[Token(Token = "0x40019DB")]
		Driver_Unknown = 201,
		[Token(Token = "0x40019DC")]
		Driver_HmdUnknown = 202,
		[Token(Token = "0x40019DD")]
		Driver_NotLoaded = 203,
		[Token(Token = "0x40019DE")]
		Driver_RuntimeOutOfDate = 204,
		[Token(Token = "0x40019DF")]
		Driver_HmdInUse = 205,
		[Token(Token = "0x40019E0")]
		Driver_NotCalibrated = 206,
		[Token(Token = "0x40019E1")]
		Driver_CalibrationInvalid = 207,
		[Token(Token = "0x40019E2")]
		Driver_HmdDisplayNotFound = 208,
		[Token(Token = "0x40019E3")]
		Driver_TrackedDeviceInterfaceUnknown = 209,
		[Token(Token = "0x40019E4")]
		Driver_HmdDriverIdOutOfBounds = 211,
		[Token(Token = "0x40019E5")]
		Driver_HmdDisplayMirrored = 212,
		[Token(Token = "0x40019E6")]
		IPC_ServerInitFailed = 300,
		[Token(Token = "0x40019E7")]
		IPC_ConnectFailed = 301,
		[Token(Token = "0x40019E8")]
		IPC_SharedStateInitFailed = 302,
		[Token(Token = "0x40019E9")]
		IPC_CompositorInitFailed = 303,
		[Token(Token = "0x40019EA")]
		IPC_MutexInitFailed = 304,
		[Token(Token = "0x40019EB")]
		IPC_Failed = 305,
		[Token(Token = "0x40019EC")]
		IPC_CompositorConnectFailed = 306,
		[Token(Token = "0x40019ED")]
		IPC_CompositorInvalidConnectResponse = 307,
		[Token(Token = "0x40019EE")]
		IPC_ConnectFailedAfterMultipleAttempts = 308,
		[Token(Token = "0x40019EF")]
		Compositor_Failed = 400,
		[Token(Token = "0x40019F0")]
		Compositor_D3D11HardwareRequired = 401,
		[Token(Token = "0x40019F1")]
		Compositor_FirmwareRequiresUpdate = 402,
		[Token(Token = "0x40019F2")]
		Compositor_OverlayInitFailed = 403,
		[Token(Token = "0x40019F3")]
		Compositor_ScreenshotsInitFailed = 404,
		[Token(Token = "0x40019F4")]
		Compositor_UnableToCreateDevice = 405,
		[Token(Token = "0x40019F5")]
		VendorSpecific_UnableToConnectToOculusRuntime = 1000,
		[Token(Token = "0x40019F6")]
		VendorSpecific_WindowsNotInDevMode = 1001,
		[Token(Token = "0x40019F7")]
		VendorSpecific_HmdFound_CantOpenDevice = 1101,
		[Token(Token = "0x40019F8")]
		VendorSpecific_HmdFound_UnableToRequestConfigStart = 1102,
		[Token(Token = "0x40019F9")]
		VendorSpecific_HmdFound_NoStoredConfig = 1103,
		[Token(Token = "0x40019FA")]
		VendorSpecific_HmdFound_ConfigTooBig = 1104,
		[Token(Token = "0x40019FB")]
		VendorSpecific_HmdFound_ConfigTooSmall = 1105,
		[Token(Token = "0x40019FC")]
		VendorSpecific_HmdFound_UnableToInitZLib = 1106,
		[Token(Token = "0x40019FD")]
		VendorSpecific_HmdFound_CantReadFirmwareVersion = 1107,
		[Token(Token = "0x40019FE")]
		VendorSpecific_HmdFound_UnableToSendUserDataStart = 1108,
		[Token(Token = "0x40019FF")]
		VendorSpecific_HmdFound_UnableToGetUserDataStart = 1109,
		[Token(Token = "0x4001A00")]
		VendorSpecific_HmdFound_UnableToGetUserDataNext = 1110,
		[Token(Token = "0x4001A01")]
		VendorSpecific_HmdFound_UserDataAddressRange = 1111,
		[Token(Token = "0x4001A02")]
		VendorSpecific_HmdFound_UserDataError = 1112,
		[Token(Token = "0x4001A03")]
		VendorSpecific_HmdFound_ConfigFailedSanityCheck = 1113,
		[Token(Token = "0x4001A04")]
		Steam_SteamInstallationNotFound = 2000
	}
	[Token(Token = "0x2000314")]
	public enum EVRScreenshotType
	{
		[Token(Token = "0x4001A06")]
		None,
		[Token(Token = "0x4001A07")]
		Mono,
		[Token(Token = "0x4001A08")]
		Stereo,
		[Token(Token = "0x4001A09")]
		Cubemap,
		[Token(Token = "0x4001A0A")]
		MonoPanorama,
		[Token(Token = "0x4001A0B")]
		StereoPanorama
	}
	[Token(Token = "0x2000315")]
	public enum EVRScreenshotPropertyFilenames
	{
		[Token(Token = "0x4001A0D")]
		Preview,
		[Token(Token = "0x4001A0E")]
		VR
	}
	[Token(Token = "0x2000316")]
	public enum EVRTrackedCameraError
	{
		[Token(Token = "0x4001A10")]
		None = 0,
		[Token(Token = "0x4001A11")]
		OperationFailed = 100,
		[Token(Token = "0x4001A12")]
		InvalidHandle = 101,
		[Token(Token = "0x4001A13")]
		InvalidFrameHeaderVersion = 102,
		[Token(Token = "0x4001A14")]
		OutOfHandles = 103,
		[Token(Token = "0x4001A15")]
		IPCFailure = 104,
		[Token(Token = "0x4001A16")]
		NotSupportedForThisDevice = 105,
		[Token(Token = "0x4001A17")]
		SharedMemoryFailure = 106,
		[Token(Token = "0x4001A18")]
		FrameBufferingFailure = 107,
		[Token(Token = "0x4001A19")]
		StreamSetupFailure = 108,
		[Token(Token = "0x4001A1A")]
		InvalidGLTextureId = 109,
		[Token(Token = "0x4001A1B")]
		InvalidSharedTextureHandle = 110,
		[Token(Token = "0x4001A1C")]
		FailedToGetGLTextureId = 111,
		[Token(Token = "0x4001A1D")]
		SharedTextureFailure = 112,
		[Token(Token = "0x4001A1E")]
		NoFrameAvailable = 113,
		[Token(Token = "0x4001A1F")]
		InvalidArgument = 114,
		[Token(Token = "0x4001A20")]
		InvalidFrameBufferSize = 115
	}
	[Token(Token = "0x2000317")]
	public enum EVRTrackedCameraFrameType
	{
		[Token(Token = "0x4001A22")]
		Distorted,
		[Token(Token = "0x4001A23")]
		Undistorted,
		[Token(Token = "0x4001A24")]
		MaximumUndistorted,
		[Token(Token = "0x4001A25")]
		MAX_CAMERA_FRAME_TYPES
	}
	[Token(Token = "0x2000318")]
	public enum EVRApplicationError
	{
		[Token(Token = "0x4001A27")]
		None = 0,
		[Token(Token = "0x4001A28")]
		AppKeyAlreadyExists = 100,
		[Token(Token = "0x4001A29")]
		NoManifest = 101,
		[Token(Token = "0x4001A2A")]
		NoApplication = 102,
		[Token(Token = "0x4001A2B")]
		InvalidIndex = 103,
		[Token(Token = "0x4001A2C")]
		UnknownApplication = 104,
		[Token(Token = "0x4001A2D")]
		IPCFailed = 105,
		[Token(Token = "0x4001A2E")]
		ApplicationAlreadyRunning = 106,
		[Token(Token = "0x4001A2F")]
		InvalidManifest = 107,
		[Token(Token = "0x4001A30")]
		InvalidApplication = 108,
		[Token(Token = "0x4001A31")]
		LaunchFailed = 109,
		[Token(Token = "0x4001A32")]
		ApplicationAlreadyStarting = 110,
		[Token(Token = "0x4001A33")]
		LaunchInProgress = 111,
		[Token(Token = "0x4001A34")]
		OldApplicationQuitting = 112,
		[Token(Token = "0x4001A35")]
		TransitionAborted = 113,
		[Token(Token = "0x4001A36")]
		IsTemplate = 114,
		[Token(Token = "0x4001A37")]
		SteamVRIsExiting = 115,
		[Token(Token = "0x4001A38")]
		BufferTooSmall = 200,
		[Token(Token = "0x4001A39")]
		PropertyNotSet = 201,
		[Token(Token = "0x4001A3A")]
		UnknownProperty = 202,
		[Token(Token = "0x4001A3B")]
		InvalidParameter = 203
	}
	[Token(Token = "0x2000319")]
	public enum EVRApplicationProperty
	{
		[Token(Token = "0x4001A3D")]
		Name_String = 0,
		[Token(Token = "0x4001A3E")]
		LaunchType_String = 11,
		[Token(Token = "0x4001A3F")]
		WorkingDirectory_String = 12,
		[Token(Token = "0x4001A40")]
		BinaryPath_String = 13,
		[Token(Token = "0x4001A41")]
		Arguments_String = 14,
		[Token(Token = "0x4001A42")]
		URL_String = 15,
		[Token(Token = "0x4001A43")]
		Description_String = 50,
		[Token(Token = "0x4001A44")]
		NewsURL_String = 51,
		[Token(Token = "0x4001A45")]
		ImagePath_String = 52,
		[Token(Token = "0x4001A46")]
		Source_String = 53,
		[Token(Token = "0x4001A47")]
		ActionManifestURL_String = 54,
		[Token(Token = "0x4001A48")]
		IsDashboardOverlay_Bool = 60,
		[Token(Token = "0x4001A49")]
		IsTemplate_Bool = 61,
		[Token(Token = "0x4001A4A")]
		IsInstanced_Bool = 62,
		[Token(Token = "0x4001A4B")]
		IsInternal_Bool = 63,
		[Token(Token = "0x4001A4C")]
		WantsCompositorPauseInStandby_Bool = 64,
		[Token(Token = "0x4001A4D")]
		LastLaunchTime_Uint64 = 70
	}
	[Token(Token = "0x200031A")]
	public enum EVRApplicationTransitionState
	{
		[Token(Token = "0x4001A4F")]
		VRApplicationTransition_None = 0,
		[Token(Token = "0x4001A50")]
		VRApplicationTransition_OldAppQuitSent = 10,
		[Token(Token = "0x4001A51")]
		VRApplicationTransition_WaitingForExternalLaunch = 11,
		[Token(Token = "0x4001A52")]
		VRApplicationTransition_NewAppLaunched = 20
	}
	[Token(Token = "0x200031B")]
	public enum ChaperoneCalibrationState
	{
		[Token(Token = "0x4001A54")]
		OK = 1,
		[Token(Token = "0x4001A55")]
		Warning = 100,
		[Token(Token = "0x4001A56")]
		Warning_BaseStationMayHaveMoved = 101,
		[Token(Token = "0x4001A57")]
		Warning_BaseStationRemoved = 102,
		[Token(Token = "0x4001A58")]
		Warning_SeatedBoundsInvalid = 103,
		[Token(Token = "0x4001A59")]
		Error = 200,
		[Token(Token = "0x4001A5A")]
		Error_BaseStationUninitialized = 201,
		[Token(Token = "0x4001A5B")]
		Error_BaseStationConflict = 202,
		[Token(Token = "0x4001A5C")]
		Error_PlayAreaInvalid = 203,
		[Token(Token = "0x4001A5D")]
		Error_CollisionBoundsInvalid = 204
	}
	[Token(Token = "0x200031C")]
	public enum EChaperoneConfigFile
	{
		[Token(Token = "0x4001A5F")]
		Live = 1,
		[Token(Token = "0x4001A60")]
		Temp
	}
	[Token(Token = "0x200031D")]
	public enum EChaperoneImportFlags
	{
		[Token(Token = "0x4001A62")]
		EChaperoneImport_BoundsOnly = 1
	}
	[Token(Token = "0x200031E")]
	public enum EVRCompositorError
	{
		[Token(Token = "0x4001A64")]
		None = 0,
		[Token(Token = "0x4001A65")]
		RequestFailed = 1,
		[Token(Token = "0x4001A66")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001A67")]
		DoNotHaveFocus = 101,
		[Token(Token = "0x4001A68")]
		InvalidTexture = 102,
		[Token(Token = "0x4001A69")]
		IsNotSceneApplication = 103,
		[Token(Token = "0x4001A6A")]
		TextureIsOnWrongDevice = 104,
		[Token(Token = "0x4001A6B")]
		TextureUsesUnsupportedFormat = 105,
		[Token(Token = "0x4001A6C")]
		SharedTexturesNotSupported = 106,
		[Token(Token = "0x4001A6D")]
		IndexOutOfRange = 107,
		[Token(Token = "0x4001A6E")]
		AlreadySubmitted = 108,
		[Token(Token = "0x4001A6F")]
		InvalidBounds = 109
	}
	[Token(Token = "0x200031F")]
	public enum EVRCompositorTimingMode
	{
		[Token(Token = "0x4001A71")]
		Implicit,
		[Token(Token = "0x4001A72")]
		Explicit_RuntimePerformsPostPresentHandoff,
		[Token(Token = "0x4001A73")]
		Explicit_ApplicationPerformsPostPresentHandoff
	}
	[Token(Token = "0x2000320")]
	public enum VROverlayInputMethod
	{
		[Token(Token = "0x4001A75")]
		None,
		[Token(Token = "0x4001A76")]
		Mouse,
		[Token(Token = "0x4001A77")]
		DualAnalog
	}
	[Token(Token = "0x2000321")]
	public enum VROverlayTransformType
	{
		[Token(Token = "0x4001A79")]
		VROverlayTransform_Absolute,
		[Token(Token = "0x4001A7A")]
		VROverlayTransform_TrackedDeviceRelative,
		[Token(Token = "0x4001A7B")]
		VROverlayTransform_SystemOverlay,
		[Token(Token = "0x4001A7C")]
		VROverlayTransform_TrackedComponent
	}
	[Token(Token = "0x2000322")]
	public enum VROverlayFlags
	{
		[Token(Token = "0x4001A7E")]
		None,
		[Token(Token = "0x4001A7F")]
		Curved,
		[Token(Token = "0x4001A80")]
		RGSS4X,
		[Token(Token = "0x4001A81")]
		NoDashboardTab,
		[Token(Token = "0x4001A82")]
		AcceptsGamepadEvents,
		[Token(Token = "0x4001A83")]
		ShowGamepadFocus,
		[Token(Token = "0x4001A84")]
		SendVRScrollEvents,
		[Token(Token = "0x4001A85")]
		SendVRTouchpadEvents,
		[Token(Token = "0x4001A86")]
		ShowTouchPadScrollWheel,
		[Token(Token = "0x4001A87")]
		TransferOwnershipToInternalProcess,
		[Token(Token = "0x4001A88")]
		SideBySide_Parallel,
		[Token(Token = "0x4001A89")]
		SideBySide_Crossed,
		[Token(Token = "0x4001A8A")]
		Panorama,
		[Token(Token = "0x4001A8B")]
		StereoPanorama,
		[Token(Token = "0x4001A8C")]
		SortWithNonSceneOverlays,
		[Token(Token = "0x4001A8D")]
		VisibleInDashboard
	}
	[Token(Token = "0x2000323")]
	public enum VRMessageOverlayResponse
	{
		[Token(Token = "0x4001A8F")]
		ButtonPress_0,
		[Token(Token = "0x4001A90")]
		ButtonPress_1,
		[Token(Token = "0x4001A91")]
		ButtonPress_2,
		[Token(Token = "0x4001A92")]
		ButtonPress_3,
		[Token(Token = "0x4001A93")]
		CouldntFindSystemOverlay,
		[Token(Token = "0x4001A94")]
		CouldntFindOrCreateClientOverlay,
		[Token(Token = "0x4001A95")]
		ApplicationQuit
	}
	[Token(Token = "0x2000324")]
	public enum EGamepadTextInputMode
	{
		[Token(Token = "0x4001A97")]
		k_EGamepadTextInputModeNormal,
		[Token(Token = "0x4001A98")]
		k_EGamepadTextInputModePassword,
		[Token(Token = "0x4001A99")]
		k_EGamepadTextInputModeSubmit
	}
	[Token(Token = "0x2000325")]
	public enum EGamepadTextInputLineMode
	{
		[Token(Token = "0x4001A9B")]
		k_EGamepadTextInputLineModeSingleLine,
		[Token(Token = "0x4001A9C")]
		k_EGamepadTextInputLineModeMultipleLines
	}
	[Token(Token = "0x2000326")]
	public enum EOverlayDirection
	{
		[Token(Token = "0x4001A9E")]
		Up,
		[Token(Token = "0x4001A9F")]
		Down,
		[Token(Token = "0x4001AA0")]
		Left,
		[Token(Token = "0x4001AA1")]
		Right,
		[Token(Token = "0x4001AA2")]
		Count
	}
	[Token(Token = "0x2000327")]
	public enum EVROverlayIntersectionMaskPrimitiveType
	{
		[Token(Token = "0x4001AA4")]
		OverlayIntersectionPrimitiveType_Rectangle,
		[Token(Token = "0x4001AA5")]
		OverlayIntersectionPrimitiveType_Circle
	}
	[Token(Token = "0x2000328")]
	public enum EVRRenderModelError
	{
		[Token(Token = "0x4001AA7")]
		None = 0,
		[Token(Token = "0x4001AA8")]
		Loading = 100,
		[Token(Token = "0x4001AA9")]
		NotSupported = 200,
		[Token(Token = "0x4001AAA")]
		InvalidArg = 300,
		[Token(Token = "0x4001AAB")]
		InvalidModel = 301,
		[Token(Token = "0x4001AAC")]
		NoShapes = 302,
		[Token(Token = "0x4001AAD")]
		MultipleShapes = 303,
		[Token(Token = "0x4001AAE")]
		TooManyVertices = 304,
		[Token(Token = "0x4001AAF")]
		MultipleTextures = 305,
		[Token(Token = "0x4001AB0")]
		BufferTooSmall = 306,
		[Token(Token = "0x4001AB1")]
		NotEnoughNormals = 307,
		[Token(Token = "0x4001AB2")]
		NotEnoughTexCoords = 308,
		[Token(Token = "0x4001AB3")]
		InvalidTexture = 400
	}
	[Token(Token = "0x2000329")]
	public enum EVRComponentProperty
	{
		[Token(Token = "0x4001AB5")]
		IsStatic = 1,
		[Token(Token = "0x4001AB6")]
		IsVisible = 2,
		[Token(Token = "0x4001AB7")]
		IsTouched = 4,
		[Token(Token = "0x4001AB8")]
		IsPressed = 8,
		[Token(Token = "0x4001AB9")]
		IsScrolled = 0x10
	}
	[Token(Token = "0x200032A")]
	public enum EVRNotificationType
	{
		[Token(Token = "0x4001ABB")]
		Transient,
		[Token(Token = "0x4001ABC")]
		Persistent,
		[Token(Token = "0x4001ABD")]
		Transient_SystemWithUserValue
	}
	[Token(Token = "0x200032B")]
	public enum EVRNotificationStyle
	{
		[Token(Token = "0x4001ABF")]
		None = 0,
		[Token(Token = "0x4001AC0")]
		Application = 100,
		[Token(Token = "0x4001AC1")]
		Contact_Disabled = 200,
		[Token(Token = "0x4001AC2")]
		Contact_Enabled = 201,
		[Token(Token = "0x4001AC3")]
		Contact_Active = 202
	}
	[Token(Token = "0x200032C")]
	public enum EVRSettingsError
	{
		[Token(Token = "0x4001AC5")]
		None,
		[Token(Token = "0x4001AC6")]
		IPCFailed,
		[Token(Token = "0x4001AC7")]
		WriteFailed,
		[Token(Token = "0x4001AC8")]
		ReadFailed,
		[Token(Token = "0x4001AC9")]
		JsonParseFailed,
		[Token(Token = "0x4001ACA")]
		UnsetSettingHasNoDefault
	}
	[Token(Token = "0x200032D")]
	public enum EVRScreenshotError
	{
		[Token(Token = "0x4001ACC")]
		None = 0,
		[Token(Token = "0x4001ACD")]
		RequestFailed = 1,
		[Token(Token = "0x4001ACE")]
		IncompatibleVersion = 100,
		[Token(Token = "0x4001ACF")]
		NotFound = 101,
		[Token(Token = "0x4001AD0")]
		BufferTooSmall = 102,
		[Token(Token = "0x4001AD1")]
		ScreenshotAlreadyInProgress = 108
	}
	[StructLayout(2)]
	[Token(Token = "0x200032E")]
	public struct VREvent_Data_t
	{
		[Token(Token = "0x4001AD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Reserved_t reserved;

		[Token(Token = "0x4001AD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Controller_t controller;

		[Token(Token = "0x4001AD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Mouse_t mouse;

		[Token(Token = "0x4001AD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Scroll_t scroll;

		[Token(Token = "0x4001AD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Process_t process;

		[Token(Token = "0x4001AD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Notification_t notification;

		[Token(Token = "0x4001AD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Overlay_t overlay;

		[Token(Token = "0x4001AD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Status_t status;

		[Token(Token = "0x4001ADA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Ipd_t ipd;

		[Token(Token = "0x4001ADB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Chaperone_t chaperone;

		[Token(Token = "0x4001ADC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_PerformanceTest_t performanceTest;

		[Token(Token = "0x4001ADD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_TouchPadMove_t touchPadMove;

		[Token(Token = "0x4001ADE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_SeatedZeroPoseReset_t seatedZeroPoseReset;

		[Token(Token = "0x4001ADF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Screenshot_t screenshot;

		[Token(Token = "0x4001AE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ScreenshotProgress_t screenshotProgress;

		[Token(Token = "0x4001AE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_ApplicationLaunch_t applicationLaunch;

		[Token(Token = "0x4001AE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_EditingCameraSurface_t cameraSurface;

		[Token(Token = "0x4001AE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_MessageOverlay_t messageOverlay;

		[Token(Token = "0x4001AE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Property_t property;

		[Token(Token = "0x4001AE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_DualAnalog_t dualAnalog;

		[Token(Token = "0x4001AE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_HapticVibration_t hapticVibration;

		[Token(Token = "0x4001AE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VREvent_Keyboard_t keyboard;
	}
	[StructLayout(2)]
	[Token(Token = "0x200032F")]
	public struct VROverlayIntersectionMaskPrimitive_Data_t
	{
		[Token(Token = "0x4001AE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskRectangle_t m_Rectangle;

		[Token(Token = "0x4001AE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntersectionMaskCircle_t m_Circle;
	}
	[Token(Token = "0x2000330")]
	public struct HmdMatrix34_t
	{
		[Token(Token = "0x4001AEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001AEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001AEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001AED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001AEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001AEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001AF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001AF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001AF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001AF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001AF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001AF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;
	}
	[Token(Token = "0x2000331")]
	public struct HmdMatrix44_t
	{
		[Token(Token = "0x4001AF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m0;

		[Token(Token = "0x4001AF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m1;

		[Token(Token = "0x4001AF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m2;

		[Token(Token = "0x4001AF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m3;

		[Token(Token = "0x4001AFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float m4;

		[Token(Token = "0x4001AFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float m5;

		[Token(Token = "0x4001AFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float m6;

		[Token(Token = "0x4001AFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float m7;

		[Token(Token = "0x4001AFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m8;

		[Token(Token = "0x4001AFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m9;

		[Token(Token = "0x4001B00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m10;

		[Token(Token = "0x4001B01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m11;

		[Token(Token = "0x4001B02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m12;

		[Token(Token = "0x4001B03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m13;

		[Token(Token = "0x4001B04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m14;

		[Token(Token = "0x4001B05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m15;
	}
	[Token(Token = "0x2000332")]
	public struct HmdVector3_t
	{
		[Token(Token = "0x4001B06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001B07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001B08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;
	}
	[Token(Token = "0x2000333")]
	public struct HmdVector4_t
	{
		[Token(Token = "0x4001B09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001B0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;

		[Token(Token = "0x4001B0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float v2;

		[Token(Token = "0x4001B0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float v3;
	}
	[Token(Token = "0x2000334")]
	public struct HmdVector3d_t
	{
		[Token(Token = "0x4001B0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double v0;

		[Token(Token = "0x4001B0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double v1;

		[Token(Token = "0x4001B0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double v2;
	}
	[Token(Token = "0x2000335")]
	public struct HmdVector2_t
	{
		[Token(Token = "0x4001B10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float v0;

		[Token(Token = "0x4001B11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float v1;
	}
	[Token(Token = "0x2000336")]
	public struct HmdQuaternion_t
	{
		[Token(Token = "0x4001B12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public double w;

		[Token(Token = "0x4001B13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public double x;

		[Token(Token = "0x4001B14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public double y;

		[Token(Token = "0x4001B15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double z;
	}
	[Token(Token = "0x2000337")]
	public struct HmdColor_t
	{
		[Token(Token = "0x4001B16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float r;

		[Token(Token = "0x4001B17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float g;

		[Token(Token = "0x4001B18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float b;

		[Token(Token = "0x4001B19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float a;
	}
	[Token(Token = "0x2000338")]
	public struct HmdQuad_t
	{
		[Token(Token = "0x4001B1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vCorners0;

		[Token(Token = "0x4001B1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vCorners1;

		[Token(Token = "0x4001B1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector3_t vCorners2;

		[Token(Token = "0x4001B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public HmdVector3_t vCorners3;
	}
	[Token(Token = "0x2000339")]
	public struct HmdRect2_t
	{
		[Token(Token = "0x4001B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector2_t vTopLeft;

		[Token(Token = "0x4001B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdVector2_t vBottomRight;
	}
	[Token(Token = "0x200033A")]
	public struct DistortionCoordinates_t
	{
		[Token(Token = "0x4001B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float rfRed0;

		[Token(Token = "0x4001B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float rfRed1;

		[Token(Token = "0x4001B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float rfGreen0;

		[Token(Token = "0x4001B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float rfGreen1;

		[Token(Token = "0x4001B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float rfBlue0;

		[Token(Token = "0x4001B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float rfBlue1;
	}
	[Token(Token = "0x200033B")]
	public struct Texture_t
	{
		[Token(Token = "0x4001B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETextureType eType;

		[Token(Token = "0x4001B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public EColorSpace eColorSpace;
	}
	[Token(Token = "0x200033C")]
	public struct TrackedDevicePose_t
	{
		[Token(Token = "0x4001B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;

		[Token(Token = "0x4001B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdVector3_t vVelocity;

		[Token(Token = "0x4001B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public HmdVector3_t vAngularVelocity;

		[Token(Token = "0x4001B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public ETrackingResult eTrackingResult;

		[Token(Token = "0x4001B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public bool bPoseIsValid;

		[Token(Token = "0x4001B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
		public bool bDeviceIsConnected;
	}
	[Token(Token = "0x200033D")]
	public struct VRTextureBounds_t
	{
		[Token(Token = "0x4001B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float uMin;

		[Token(Token = "0x4001B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float vMin;

		[Token(Token = "0x4001B31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float uMax;

		[Token(Token = "0x4001B32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float vMax;
	}
	[Token(Token = "0x200033E")]
	public struct VRTextureWithPose_t
	{
		[Token(Token = "0x4001B33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mDeviceToAbsoluteTracking;
	}
	[Token(Token = "0x200033F")]
	public struct VRTextureDepthInfo_t
	{
		[Token(Token = "0x4001B34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr handle;

		[Token(Token = "0x4001B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public HmdMatrix44_t mProjection;

		[Token(Token = "0x4001B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public HmdVector2_t vRange;
	}
	[Token(Token = "0x2000340")]
	public struct VRTextureWithDepth_t
	{
		[Token(Token = "0x4001B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000341")]
	public struct VRTextureWithPoseAndDepth_t
	{
		[Token(Token = "0x4001B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public VRTextureDepthInfo_t depth;
	}
	[Token(Token = "0x2000342")]
	public struct VRVulkanTextureData_t
	{
		[Token(Token = "0x4001B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nImage;

		[Token(Token = "0x4001B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pDevice;

		[Token(Token = "0x4001B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pPhysicalDevice;

		[Token(Token = "0x4001B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pInstance;

		[Token(Token = "0x4001B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pQueue;

		[Token(Token = "0x4001B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nQueueFamilyIndex;

		[Token(Token = "0x4001B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nWidth;

		[Token(Token = "0x4001B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nHeight;

		[Token(Token = "0x4001B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nFormat;

		[Token(Token = "0x4001B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nSampleCount;
	}
	[Token(Token = "0x2000343")]
	public struct D3D12TextureData_t
	{
		[Token(Token = "0x4001B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pResource;

		[Token(Token = "0x4001B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pCommandQueue;

		[Token(Token = "0x4001B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNodeMask;
	}
	[Token(Token = "0x2000344")]
	public struct VREvent_Controller_t
	{
		[Token(Token = "0x4001B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint button;
	}
	[Token(Token = "0x2000345")]
	public struct VREvent_Mouse_t
	{
		[Token(Token = "0x4001B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint button;
	}
	[Token(Token = "0x2000346")]
	public struct VREvent_Scroll_t
	{
		[Token(Token = "0x4001B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float xdelta;

		[Token(Token = "0x4001B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float ydelta;

		[Token(Token = "0x4001B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint repeatCount;
	}
	[Token(Token = "0x2000347")]
	public struct VREvent_TouchPadMove_t
	{
		[Token(Token = "0x4001B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bFingerDown;

		[Token(Token = "0x4001B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float flSecondsFingerDown;

		[Token(Token = "0x4001B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float fValueXFirst;

		[Token(Token = "0x4001B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float fValueYFirst;

		[Token(Token = "0x4001B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fValueXRaw;

		[Token(Token = "0x4001B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fValueYRaw;
	}
	[Token(Token = "0x2000348")]
	public struct VREvent_Notification_t
	{
		[Token(Token = "0x4001B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong ulUserValue;

		[Token(Token = "0x4001B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint notificationId;
	}
	[Token(Token = "0x2000349")]
	public struct VREvent_Process_t
	{
		[Token(Token = "0x4001B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint oldPid;

		[Token(Token = "0x4001B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public bool bForced;
	}
	[Token(Token = "0x200034A")]
	public struct VREvent_Overlay_t
	{
		[Token(Token = "0x4001B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;
	}
	[Token(Token = "0x200034B")]
	public struct VREvent_Status_t
	{
		[Token(Token = "0x4001B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint statusState;
	}
	[Token(Token = "0x200034C")]
	public struct VREvent_Keyboard_t
	{
		[Token(Token = "0x4001B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public byte cNewInput0;

		[Token(Token = "0x4001B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
		public byte cNewInput1;

		[Token(Token = "0x4001B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public byte cNewInput2;

		[Token(Token = "0x4001B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3")]
		public byte cNewInput3;

		[Token(Token = "0x4001B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public byte cNewInput4;

		[Token(Token = "0x4001B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public byte cNewInput5;

		[Token(Token = "0x4001B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6")]
		public byte cNewInput6;

		[Token(Token = "0x4001B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7")]
		public byte cNewInput7;

		[Token(Token = "0x4001B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong uUserValue;
	}
	[Token(Token = "0x200034D")]
	public struct VREvent_Ipd_t
	{
		[Token(Token = "0x4001B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float ipdMeters;
	}
	[Token(Token = "0x200034E")]
	public struct VREvent_Chaperone_t
	{
		[Token(Token = "0x4001B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong m_nPreviousUniverse;

		[Token(Token = "0x4001B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong m_nCurrentUniverse;
	}
	[Token(Token = "0x200034F")]
	public struct VREvent_Reserved_t
	{
		[Token(Token = "0x4001B66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong reserved0;

		[Token(Token = "0x4001B67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong reserved1;

		[Token(Token = "0x4001B68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong reserved2;

		[Token(Token = "0x4001B69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ulong reserved3;
	}
	[Token(Token = "0x2000350")]
	public struct VREvent_PerformanceTest_t
	{
		[Token(Token = "0x4001B6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nFidelityLevel;
	}
	[Token(Token = "0x2000351")]
	public struct VREvent_SeatedZeroPoseReset_t
	{
		[Token(Token = "0x4001B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bResetBySystemMenu;
	}
	[Token(Token = "0x2000352")]
	public struct VREvent_Screenshot_t
	{
		[Token(Token = "0x4001B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint handle;

		[Token(Token = "0x4001B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint type;
	}
	[Token(Token = "0x2000353")]
	public struct VREvent_ScreenshotProgress_t
	{
		[Token(Token = "0x4001B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float progress;
	}
	[Token(Token = "0x2000354")]
	public struct VREvent_ApplicationLaunch_t
	{
		[Token(Token = "0x4001B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint pid;

		[Token(Token = "0x4001B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint unArgsHandle;
	}
	[Token(Token = "0x2000355")]
	public struct VREvent_EditingCameraSurface_t
	{
		[Token(Token = "0x4001B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong overlayHandle;

		[Token(Token = "0x4001B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nVisualMode;
	}
	[Token(Token = "0x2000356")]
	public struct VREvent_MessageOverlay_t
	{
		[Token(Token = "0x4001B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unVRMessageOverlayResponse;
	}
	[Token(Token = "0x2000357")]
	public struct VREvent_Property_t
	{
		[Token(Token = "0x4001B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong container;

		[Token(Token = "0x4001B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ETrackedDeviceProperty prop;
	}
	[Token(Token = "0x2000358")]
	public struct VREvent_DualAnalog_t
	{
		[Token(Token = "0x4001B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;

		[Token(Token = "0x4001B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float transformedX;

		[Token(Token = "0x4001B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float transformedY;

		[Token(Token = "0x4001B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public EDualAnalogWhich which;
	}
	[Token(Token = "0x2000359")]
	public struct VREvent_HapticVibration_t
	{
		[Token(Token = "0x4001B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public ulong containerHandle;

		[Token(Token = "0x4001B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong componentHandle;

		[Token(Token = "0x4001B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float fDurationSeconds;

		[Token(Token = "0x4001B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float fFrequency;

		[Token(Token = "0x4001B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float fAmplitude;
	}
	[Token(Token = "0x200035A")]
	public struct VREvent_t
	{
		[Token(Token = "0x4001B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public VREvent_Data_t data;
	}
	[Token(Token = "0x200035B")]
	public struct VREvent_t_Packed
	{
		[Token(Token = "0x4001B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint eventType;

		[Token(Token = "0x4001B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint trackedDeviceIndex;

		[Token(Token = "0x4001B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float eventAgeSeconds;

		[Token(Token = "0x4001B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public VREvent_Data_t data;

		[Token(Token = "0x6001841")]
		[Address(RVA = "0xC35024", Offset = "0xC35024", VA = "0xC35024")]
		public VREvent_t_Packed(VREvent_t unpacked)
		{
		}

		[Token(Token = "0x6001842")]
		[Address(RVA = "0xC35060", Offset = "0xC35060", VA = "0xC35060")]
		public void Unpack(VREvent_t unpacked)
		{
		}
	}
	[Token(Token = "0x200035C")]
	public struct HiddenAreaMesh_t
	{
		[Token(Token = "0x4001B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pVertexData;

		[Token(Token = "0x4001B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unTriangleCount;
	}
	[Token(Token = "0x200035D")]
	public struct VRControllerAxis_t
	{
		[Token(Token = "0x4001B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float x;

		[Token(Token = "0x4001B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float y;
	}
	[Token(Token = "0x200035E")]
	public struct VRControllerState_t
	{
		[Token(Token = "0x4001B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public VRControllerAxis_t rAxis4;
	}
	[Token(Token = "0x200035F")]
	public struct VRControllerState_t_Packed
	{
		[Token(Token = "0x4001B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint unPacketNum;

		[Token(Token = "0x4001B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public ulong ulButtonPressed;

		[Token(Token = "0x4001B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public ulong ulButtonTouched;

		[Token(Token = "0x4001B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public VRControllerAxis_t rAxis0;

		[Token(Token = "0x4001B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public VRControllerAxis_t rAxis1;

		[Token(Token = "0x4001B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public VRControllerAxis_t rAxis2;

		[Token(Token = "0x4001B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public VRControllerAxis_t rAxis3;

		[Token(Token = "0x4001B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public VRControllerAxis_t rAxis4;

		[Token(Token = "0x6001843")]
		[Address(RVA = "0xC34F9C", Offset = "0xC34F9C", VA = "0xC34F9C")]
		public VRControllerState_t_Packed(VRControllerState_t unpacked)
		{
		}

		[Token(Token = "0x6001844")]
		[Address(RVA = "0xC34FE0", Offset = "0xC34FE0", VA = "0xC34FE0")]
		public void Unpack(VRControllerState_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000360")]
	public struct Compositor_OverlaySettings
	{
		[Token(Token = "0x4001B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint size;

		[Token(Token = "0x4001B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public bool curved;

		[Token(Token = "0x4001B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5")]
		public bool antialias;

		[Token(Token = "0x4001B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float scale;

		[Token(Token = "0x4001BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float distance;

		[Token(Token = "0x4001BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float alpha;

		[Token(Token = "0x4001BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float uOffset;

		[Token(Token = "0x4001BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float vOffset;

		[Token(Token = "0x4001BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float uScale;

		[Token(Token = "0x4001BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float vScale;

		[Token(Token = "0x4001BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float gridDivs;

		[Token(Token = "0x4001BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float gridWidth;

		[Token(Token = "0x4001BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float gridScale;

		[Token(Token = "0x4001BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix44_t transform;
	}
	[Token(Token = "0x2000361")]
	public struct CameraVideoStreamFrameHeader_t
	{
		[Token(Token = "0x4001BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVRTrackedCameraFrameType eFrameType;

		[Token(Token = "0x4001BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint nWidth;

		[Token(Token = "0x4001BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint nHeight;

		[Token(Token = "0x4001BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint nBytesPerPixel;

		[Token(Token = "0x4001BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint nFrameSequence;

		[Token(Token = "0x4001BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public TrackedDevicePose_t standingTrackedDevicePose;
	}
	[Token(Token = "0x2000362")]
	public struct DriverDirectMode_FrameTiming
	{
		[Token(Token = "0x4001BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nReprojectionFlags;
	}
	[Token(Token = "0x2000363")]
	public struct AppOverrideKeys_t
	{
		[Token(Token = "0x4001BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr pchKey;

		[Token(Token = "0x4001BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr pchValue;
	}
	[Token(Token = "0x2000364")]
	public struct Compositor_FrameTiming
	{
		[Token(Token = "0x4001BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nSize;

		[Token(Token = "0x4001BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nFrameIndex;

		[Token(Token = "0x4001BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumMisPresented;

		[Token(Token = "0x4001BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nReprojectionFlags;

		[Token(Token = "0x4001BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public double m_flSystemTimeInSeconds;

		[Token(Token = "0x4001BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float m_flPreSubmitGpuMs;

		[Token(Token = "0x4001BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float m_flPostSubmitGpuMs;

		[Token(Token = "0x4001BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float m_flTotalRenderGpuMs;

		[Token(Token = "0x4001BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float m_flCompositorRenderGpuMs;

		[Token(Token = "0x4001BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float m_flCompositorRenderCpuMs;

		[Token(Token = "0x4001BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float m_flCompositorIdleCpuMs;

		[Token(Token = "0x4001BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float m_flClientFrameIntervalMs;

		[Token(Token = "0x4001BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float m_flPresentCallCpuMs;

		[Token(Token = "0x4001BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float m_flWaitForPresentCpuMs;

		[Token(Token = "0x4001BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float m_flSubmitFrameMs;

		[Token(Token = "0x4001BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float m_flWaitGetPosesCalledMs;

		[Token(Token = "0x4001BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float m_flNewPosesReadyMs;

		[Token(Token = "0x4001BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float m_flNewFrameReadyMs;

		[Token(Token = "0x4001BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float m_flCompositorUpdateStartMs;

		[Token(Token = "0x4001BCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float m_flCompositorUpdateEndMs;

		[Token(Token = "0x4001BCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		public float m_flCompositorRenderStartMs;

		[Token(Token = "0x4001BCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public TrackedDevicePose_t m_HmdPose;
	}
	[Token(Token = "0x2000365")]
	public struct Compositor_CumulativeStats
	{
		[Token(Token = "0x4001BCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public uint m_nPid;

		[Token(Token = "0x4001BD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public uint m_nNumFramePresents;

		[Token(Token = "0x4001BD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint m_nNumDroppedFrames;

		[Token(Token = "0x4001BD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public uint m_nNumReprojectedFrames;

		[Token(Token = "0x4001BD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public uint m_nNumFramePresentsOnStartup;

		[Token(Token = "0x4001BD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint m_nNumDroppedFramesOnStartup;

		[Token(Token = "0x4001BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint m_nNumReprojectedFramesOnStartup;

		[Token(Token = "0x4001BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public uint m_nNumLoading;

		[Token(Token = "0x4001BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public uint m_nNumFramePresentsLoading;

		[Token(Token = "0x4001BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public uint m_nNumDroppedFramesLoading;

		[Token(Token = "0x4001BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public uint m_nNumReprojectedFramesLoading;

		[Token(Token = "0x4001BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public uint m_nNumTimedOut;

		[Token(Token = "0x4001BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public uint m_nNumFramePresentsTimedOut;

		[Token(Token = "0x4001BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public uint m_nNumDroppedFramesTimedOut;

		[Token(Token = "0x4001BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public uint m_nNumReprojectedFramesTimedOut;
	}
	[Token(Token = "0x2000366")]
	public struct VROverlayIntersectionParams_t
	{
		[Token(Token = "0x4001BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vSource;

		[Token(Token = "0x4001BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vDirection;

		[Token(Token = "0x4001BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ETrackingUniverseOrigin eOrigin;
	}
	[Token(Token = "0x2000367")]
	public struct VROverlayIntersectionResults_t
	{
		[Token(Token = "0x4001BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPoint;

		[Token(Token = "0x4001BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HmdVector2_t vUVs;

		[Token(Token = "0x4001BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float fDistance;
	}
	[Token(Token = "0x2000368")]
	public struct IntersectionMaskRectangle_t
	{
		[Token(Token = "0x4001BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flTopLeftX;

		[Token(Token = "0x4001BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flTopLeftY;

		[Token(Token = "0x4001BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flWidth;

		[Token(Token = "0x4001BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public float m_flHeight;
	}
	[Token(Token = "0x2000369")]
	public struct IntersectionMaskCircle_t
	{
		[Token(Token = "0x4001BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float m_flCenterX;

		[Token(Token = "0x4001BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float m_flCenterY;

		[Token(Token = "0x4001BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float m_flRadius;
	}
	[Token(Token = "0x200036A")]
	public struct VROverlayIntersectionMaskPrimitive_t
	{
		[Token(Token = "0x4001BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public EVROverlayIntersectionMaskPrimitiveType m_nPrimitiveType;

		[Token(Token = "0x4001BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public VROverlayIntersectionMaskPrimitive_Data_t m_Primitive;
	}
	[Token(Token = "0x200036B")]
	public struct RenderModel_ComponentState_t
	{
		[Token(Token = "0x4001BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdMatrix34_t mTrackingToComponentRenderModel;

		[Token(Token = "0x4001BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HmdMatrix34_t mTrackingToComponentLocal;

		[Token(Token = "0x4001BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public uint uProperties;
	}
	[Token(Token = "0x200036C")]
	public struct RenderModel_Vertex_t
	{
		[Token(Token = "0x4001BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public HmdVector3_t vPosition;

		[Token(Token = "0x4001BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public HmdVector3_t vNormal;

		[Token(Token = "0x4001BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rfTextureCoord0;

		[Token(Token = "0x4001BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float rfTextureCoord1;
	}
	[Token(Token = "0x200036D")]
	public struct RenderModel_TextureMap_t
	{
		[Token(Token = "0x4001BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr rubTextureMapData;
	}
	[Token(Token = "0x200036E")]
	public struct RenderModel_TextureMap_t_Packed
	{
		[Token(Token = "0x4001BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public char unWidth;

		[Token(Token = "0x4001BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
		public char unHeight;

		[Token(Token = "0x4001BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public IntPtr rubTextureMapData;

		[Token(Token = "0x6001845")]
		[Address(RVA = "0xDCFAEC", Offset = "0xDCFAEC", VA = "0xDCFAEC")]
		public RenderModel_TextureMap_t_Packed(RenderModel_TextureMap_t unpacked)
		{
		}

		[Token(Token = "0x6001846")]
		[Address(RVA = "0xDCFB00", Offset = "0xDCFB00", VA = "0xDCFB00")]
		public void Unpack(RenderModel_TextureMap_t unpacked)
		{
		}
	}
	[Token(Token = "0x200036F")]
	public struct RenderModel_t
	{
		[Token(Token = "0x4001BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001BFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public uint unTriangleCount;

		[Token(Token = "0x4001BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int diffuseTextureId;
	}
	[Token(Token = "0x2000370")]
	public struct RenderModel_t_Packed
	{
		[Token(Token = "0x4001C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr rVertexData;

		[Token(Token = "0x4001C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public uint unVertexCount;

		[Token(Token = "0x4001C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public IntPtr rIndexData;

		[Token(Token = "0x4001C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public uint unTriangleCount;

		[Token(Token = "0x4001C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int diffuseTextureId;

		[Token(Token = "0x6001847")]
		[Address(RVA = "0xDCFB1C", Offset = "0xDCFB1C", VA = "0xDCFB1C")]
		public RenderModel_t_Packed(RenderModel_t unpacked)
		{
		}

		[Token(Token = "0x6001848")]
		[Address(RVA = "0xDCFB48", Offset = "0xDCFB48", VA = "0xDCFB48")]
		public void Unpack(RenderModel_t unpacked)
		{
		}
	}
	[Token(Token = "0x2000371")]
	public struct RenderModel_ControllerMode_State_t
	{
		[Token(Token = "0x4001C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public bool bScrollWheelVisible;
	}
	[Token(Token = "0x2000372")]
	public struct NotificationBitmap_t
	{
		[Token(Token = "0x4001C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pImageData;

		[Token(Token = "0x4001C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public int m_nWidth;

		[Token(Token = "0x4001C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public int m_nHeight;

		[Token(Token = "0x4001C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int m_nBytesPerPixel;
	}
	[Token(Token = "0x2000373")]
	public struct COpenVRContext
	{
		[Token(Token = "0x4001C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IntPtr m_pVRSystem;

		[Token(Token = "0x4001C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public IntPtr m_pVRChaperone;

		[Token(Token = "0x4001C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public IntPtr m_pVRChaperoneSetup;

		[Token(Token = "0x4001C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public IntPtr m_pVRCompositor;

		[Token(Token = "0x4001C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public IntPtr m_pVROverlay;

		[Token(Token = "0x4001C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public IntPtr m_pVRResources;

		[Token(Token = "0x4001C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public IntPtr m_pVRRenderModels;

		[Token(Token = "0x4001C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public IntPtr m_pVRExtendedDisplay;

		[Token(Token = "0x4001C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public IntPtr m_pVRSettings;

		[Token(Token = "0x4001C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public IntPtr m_pVRApplications;

		[Token(Token = "0x4001C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public IntPtr m_pVRTrackedCamera;

		[Token(Token = "0x4001C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public IntPtr m_pVRScreenshots;

		[Token(Token = "0x4001C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public IntPtr m_pVRDriverManager;
	}
	[Token(Token = "0x2000374")]
	public class OpenVR
	{
		[Token(Token = "0x2000640")]
		private class COpenVRContext
		{
			[Token(Token = "0x40024CD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private CVRSystem m_pVRSystem;

			[Token(Token = "0x40024CE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private CVRChaperone m_pVRChaperone;

			[Token(Token = "0x40024CF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			private CVRChaperoneSetup m_pVRChaperoneSetup;

			[Token(Token = "0x40024D0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private CVRCompositor m_pVRCompositor;

			[Token(Token = "0x40024D1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private CVROverlay m_pVROverlay;

			[Token(Token = "0x40024D2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
			private CVRRenderModels m_pVRRenderModels;

			[Token(Token = "0x40024D3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
			private CVRExtendedDisplay m_pVRExtendedDisplay;

			[Token(Token = "0x40024D4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
			private CVRSettings m_pVRSettings;

			[Token(Token = "0x40024D5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
			private CVRApplications m_pVRApplications;

			[Token(Token = "0x40024D6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
			private CVRScreenshots m_pVRScreenshots;

			[Token(Token = "0x40024D7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
			private CVRTrackedCamera m_pVRTrackedCamera;

			[Token(Token = "0x60023BB")]
			[Address(RVA = "0x19DA394", Offset = "0x19DA394", VA = "0x19DA394")]
			public COpenVRContext()
			{
			}

			[Token(Token = "0x60023BC")]
			[Address(RVA = "0x19DA3BC", Offset = "0x19DA3BC", VA = "0x19DA3BC")]
			public void Clear()
			{
			}

			[Token(Token = "0x60023BD")]
			[Address(RVA = "0x19DA480", Offset = "0x19DA480", VA = "0x19DA480")]
			private void CheckClear()
			{
			}

			[Token(Token = "0x60023BE")]
			[Address(RVA = "0x19DA5A8", Offset = "0x19DA5A8", VA = "0x19DA5A8")]
			public CVRSystem VRSystem()
			{
				return null;
			}

			[Token(Token = "0x60023BF")]
			[Address(RVA = "0x19DA684", Offset = "0x19DA684", VA = "0x19DA684")]
			public CVRChaperone VRChaperone()
			{
				return null;
			}

			[Token(Token = "0x60023C0")]
			[Address(RVA = "0x19DA760", Offset = "0x19DA760", VA = "0x19DA760")]
			public CVRChaperoneSetup VRChaperoneSetup()
			{
				return null;
			}

			[Token(Token = "0x60023C1")]
			[Address(RVA = "0x19DA83C", Offset = "0x19DA83C", VA = "0x19DA83C")]
			public CVRCompositor VRCompositor()
			{
				return null;
			}

			[Token(Token = "0x60023C2")]
			[Address(RVA = "0x19DA918", Offset = "0x19DA918", VA = "0x19DA918")]
			public CVROverlay VROverlay()
			{
				return null;
			}

			[Token(Token = "0x60023C3")]
			[Address(RVA = "0x19DA9F4", Offset = "0x19DA9F4", VA = "0x19DA9F4")]
			public CVRRenderModels VRRenderModels()
			{
				return null;
			}

			[Token(Token = "0x60023C4")]
			[Address(RVA = "0x19DAAD0", Offset = "0x19DAAD0", VA = "0x19DAAD0")]
			public CVRExtendedDisplay VRExtendedDisplay()
			{
				return null;
			}

			[Token(Token = "0x60023C5")]
			[Address(RVA = "0x19DABAC", Offset = "0x19DABAC", VA = "0x19DABAC")]
			public CVRSettings VRSettings()
			{
				return null;
			}

			[Token(Token = "0x60023C6")]
			[Address(RVA = "0x19DAC88", Offset = "0x19DAC88", VA = "0x19DAC88")]
			public CVRApplications VRApplications()
			{
				return null;
			}

			[Token(Token = "0x60023C7")]
			[Address(RVA = "0x19DAD64", Offset = "0x19DAD64", VA = "0x19DAD64")]
			public CVRScreenshots VRScreenshots()
			{
				return null;
			}

			[Token(Token = "0x60023C8")]
			[Address(RVA = "0x19DAE40", Offset = "0x19DAE40", VA = "0x19DAE40")]
			public CVRTrackedCamera VRTrackedCamera()
			{
				return null;
			}
		}

		[Token(Token = "0x4001C17")]
		public const uint k_nDriverNone = uint.MaxValue;

		[Token(Token = "0x4001C18")]
		public const uint k_unMaxDriverDebugResponseSize = 32768u;

		[Token(Token = "0x4001C19")]
		public const uint k_unTrackedDeviceIndex_Hmd = 0u;

		[Token(Token = "0x4001C1A")]
		public const uint k_unMaxTrackedDeviceCount = 64u;

		[Token(Token = "0x4001C1B")]
		public const uint k_unTrackedDeviceIndexOther = 4294967294u;

		[Token(Token = "0x4001C1C")]
		public const uint k_unTrackedDeviceIndexInvalid = uint.MaxValue;

		[Token(Token = "0x4001C1D")]
		public const ulong k_ulInvalidPropertyContainer = 0uL;

		[Token(Token = "0x4001C1E")]
		public const uint k_unInvalidPropertyTag = 0u;

		[Token(Token = "0x4001C1F")]
		public const ulong k_ulInvalidDriverHandle = 0uL;

		[Token(Token = "0x4001C20")]
		public const uint k_unFloatPropertyTag = 1u;

		[Token(Token = "0x4001C21")]
		public const uint k_unInt32PropertyTag = 2u;

		[Token(Token = "0x4001C22")]
		public const uint k_unUint64PropertyTag = 3u;

		[Token(Token = "0x4001C23")]
		public const uint k_unBoolPropertyTag = 4u;

		[Token(Token = "0x4001C24")]
		public const uint k_unStringPropertyTag = 5u;

		[Token(Token = "0x4001C25")]
		public const uint k_unHmdMatrix34PropertyTag = 20u;

		[Token(Token = "0x4001C26")]
		public const uint k_unHmdMatrix44PropertyTag = 21u;

		[Token(Token = "0x4001C27")]
		public const uint k_unHmdVector3PropertyTag = 22u;

		[Token(Token = "0x4001C28")]
		public const uint k_unHmdVector4PropertyTag = 23u;

		[Token(Token = "0x4001C29")]
		public const uint k_unHiddenAreaPropertyTag = 30u;

		[Token(Token = "0x4001C2A")]
		public const uint k_unPathHandleInfoTag = 31u;

		[Token(Token = "0x4001C2B")]
		public const uint k_unActionPropertyTag = 32u;

		[Token(Token = "0x4001C2C")]
		public const uint k_unInputValuePropertyTag = 33u;

		[Token(Token = "0x4001C2D")]
		public const uint k_unWildcardPropertyTag = 34u;

		[Token(Token = "0x4001C2E")]
		public const uint k_unHapticVibrationPropertyTag = 35u;

		[Token(Token = "0x4001C2F")]
		public const uint k_unOpenVRInternalReserved_Start = 1000u;

		[Token(Token = "0x4001C30")]
		public const uint k_unOpenVRInternalReserved_End = 10000u;

		[Token(Token = "0x4001C31")]
		public const uint k_unMaxPropertyStringSize = 32768u;

		[Token(Token = "0x4001C32")]
		public const uint k_unControllerStateAxisCount = 5u;

		[Token(Token = "0x4001C33")]
		public const ulong k_ulOverlayHandleInvalid = 0uL;

		[Token(Token = "0x4001C34")]
		public const uint k_unScreenshotHandleInvalid = 0u;

		[Token(Token = "0x4001C35")]
		public const string IVRSystem_Version = "IVRSystem_019";

		[Token(Token = "0x4001C36")]
		public const string IVRExtendedDisplay_Version = "IVRExtendedDisplay_001";

		[Token(Token = "0x4001C37")]
		public const string IVRTrackedCamera_Version = "IVRTrackedCamera_003";

		[Token(Token = "0x4001C38")]
		public const uint k_unMaxApplicationKeyLength = 128u;

		[Token(Token = "0x4001C39")]
		public const string k_pch_MimeType_HomeApp = "vr/home";

		[Token(Token = "0x4001C3A")]
		public const string k_pch_MimeType_GameTheater = "vr/game_theater";

		[Token(Token = "0x4001C3B")]
		public const string IVRApplications_Version = "IVRApplications_006";

		[Token(Token = "0x4001C3C")]
		public const string IVRChaperone_Version = "IVRChaperone_003";

		[Token(Token = "0x4001C3D")]
		public const string IVRChaperoneSetup_Version = "IVRChaperoneSetup_005";

		[Token(Token = "0x4001C3E")]
		public const string IVRCompositor_Version = "IVRCompositor_022";

		[Token(Token = "0x4001C3F")]
		public const uint k_unVROverlayMaxKeyLength = 128u;

		[Token(Token = "0x4001C40")]
		public const uint k_unVROverlayMaxNameLength = 128u;

		[Token(Token = "0x4001C41")]
		public const uint k_unMaxOverlayCount = 64u;

		[Token(Token = "0x4001C42")]
		public const uint k_unMaxOverlayIntersectionMaskPrimitivesCount = 32u;

		[Token(Token = "0x4001C43")]
		public const string IVROverlay_Version = "IVROverlay_018";

		[Token(Token = "0x4001C44")]
		public const string k_pch_Controller_Component_GDC2015 = "gdc2015";

		[Token(Token = "0x4001C45")]
		public const string k_pch_Controller_Component_Base = "base";

		[Token(Token = "0x4001C46")]
		public const string k_pch_Controller_Component_Tip = "tip";

		[Token(Token = "0x4001C47")]
		public const string k_pch_Controller_Component_HandGrip = "handgrip";

		[Token(Token = "0x4001C48")]
		public const string k_pch_Controller_Component_Status = "status";

		[Token(Token = "0x4001C49")]
		public const string IVRRenderModels_Version = "IVRRenderModels_005";

		[Token(Token = "0x4001C4A")]
		public const uint k_unNotificationTextMaxSize = 256u;

		[Token(Token = "0x4001C4B")]
		public const string IVRNotifications_Version = "IVRNotifications_002";

		[Token(Token = "0x4001C4C")]
		public const uint k_unMaxSettingsKeyLength = 128u;

		[Token(Token = "0x4001C4D")]
		public const string IVRSettings_Version = "IVRSettings_002";

		[Token(Token = "0x4001C4E")]
		public const string k_pch_SteamVR_Section = "steamvr";

		[Token(Token = "0x4001C4F")]
		public const string k_pch_SteamVR_RequireHmd_String = "requireHmd";

		[Token(Token = "0x4001C50")]
		public const string k_pch_SteamVR_ForcedDriverKey_String = "forcedDriver";

		[Token(Token = "0x4001C51")]
		public const string k_pch_SteamVR_ForcedHmdKey_String = "forcedHmd";

		[Token(Token = "0x4001C52")]
		public const string k_pch_SteamVR_DisplayDebug_Bool = "displayDebug";

		[Token(Token = "0x4001C53")]
		public const string k_pch_SteamVR_DebugProcessPipe_String = "debugProcessPipe";

		[Token(Token = "0x4001C54")]
		public const string k_pch_SteamVR_DisplayDebugX_Int32 = "displayDebugX";

		[Token(Token = "0x4001C55")]
		public const string k_pch_SteamVR_DisplayDebugY_Int32 = "displayDebugY";

		[Token(Token = "0x4001C56")]
		public const string k_pch_SteamVR_SendSystemButtonToAllApps_Bool = "sendSystemButtonToAllApps";

		[Token(Token = "0x4001C57")]
		public const string k_pch_SteamVR_LogLevel_Int32 = "loglevel";

		[Token(Token = "0x4001C58")]
		public const string k_pch_SteamVR_IPD_Float = "ipd";

		[Token(Token = "0x4001C59")]
		public const string k_pch_SteamVR_Background_String = "background";

		[Token(Token = "0x4001C5A")]
		public const string k_pch_SteamVR_BackgroundUseDomeProjection_Bool = "backgroundUseDomeProjection";

		[Token(Token = "0x4001C5B")]
		public const string k_pch_SteamVR_BackgroundCameraHeight_Float = "backgroundCameraHeight";

		[Token(Token = "0x4001C5C")]
		public const string k_pch_SteamVR_BackgroundDomeRadius_Float = "backgroundDomeRadius";

		[Token(Token = "0x4001C5D")]
		public const string k_pch_SteamVR_GridColor_String = "gridColor";

		[Token(Token = "0x4001C5E")]
		public const string k_pch_SteamVR_PlayAreaColor_String = "playAreaColor";

		[Token(Token = "0x4001C5F")]
		public const string k_pch_SteamVR_ShowStage_Bool = "showStage";

		[Token(Token = "0x4001C60")]
		public const string k_pch_SteamVR_ActivateMultipleDrivers_Bool = "activateMultipleDrivers";

		[Token(Token = "0x4001C61")]
		public const string k_pch_SteamVR_DirectMode_Bool = "directMode";

		[Token(Token = "0x4001C62")]
		public const string k_pch_SteamVR_DirectModeEdidVid_Int32 = "directModeEdidVid";

		[Token(Token = "0x4001C63")]
		public const string k_pch_SteamVR_DirectModeEdidPid_Int32 = "directModeEdidPid";

		[Token(Token = "0x4001C64")]
		public const string k_pch_SteamVR_UsingSpeakers_Bool = "usingSpeakers";

		[Token(Token = "0x4001C65")]
		public const string k_pch_SteamVR_SpeakersForwardYawOffsetDegrees_Float = "speakersForwardYawOffsetDegrees";

		[Token(Token = "0x4001C66")]
		public const string k_pch_SteamVR_BaseStationPowerManagement_Bool = "basestationPowerManagement";

		[Token(Token = "0x4001C67")]
		public const string k_pch_SteamVR_NeverKillProcesses_Bool = "neverKillProcesses";

		[Token(Token = "0x4001C68")]
		public const string k_pch_SteamVR_SupersampleScale_Float = "supersampleScale";

		[Token(Token = "0x4001C69")]
		public const string k_pch_SteamVR_AllowAsyncReprojection_Bool = "allowAsyncReprojection";

		[Token(Token = "0x4001C6A")]
		public const string k_pch_SteamVR_AllowReprojection_Bool = "allowInterleavedReprojection";

		[Token(Token = "0x4001C6B")]
		public const string k_pch_SteamVR_ForceReprojection_Bool = "forceReprojection";

		[Token(Token = "0x4001C6C")]
		public const string k_pch_SteamVR_ForceFadeOnBadTracking_Bool = "forceFadeOnBadTracking";

		[Token(Token = "0x4001C6D")]
		public const string k_pch_SteamVR_DefaultMirrorView_Int32 = "defaultMirrorView";

		[Token(Token = "0x4001C6E")]
		public const string k_pch_SteamVR_ShowMirrorView_Bool = "showMirrorView";

		[Token(Token = "0x4001C6F")]
		public const string k_pch_SteamVR_MirrorViewGeometry_String = "mirrorViewGeometry";

		[Token(Token = "0x4001C70")]
		public const string k_pch_SteamVR_StartMonitorFromAppLaunch = "startMonitorFromAppLaunch";

		[Token(Token = "0x4001C71")]
		public const string k_pch_SteamVR_StartCompositorFromAppLaunch_Bool = "startCompositorFromAppLaunch";

		[Token(Token = "0x4001C72")]
		public const string k_pch_SteamVR_StartDashboardFromAppLaunch_Bool = "startDashboardFromAppLaunch";

		[Token(Token = "0x4001C73")]
		public const string k_pch_SteamVR_StartOverlayAppsFromDashboard_Bool = "startOverlayAppsFromDashboard";

		[Token(Token = "0x4001C74")]
		public const string k_pch_SteamVR_EnableHomeApp = "enableHomeApp";

		[Token(Token = "0x4001C75")]
		public const string k_pch_SteamVR_CycleBackgroundImageTimeSec_Int32 = "CycleBackgroundImageTimeSec";

		[Token(Token = "0x4001C76")]
		public const string k_pch_SteamVR_RetailDemo_Bool = "retailDemo";

		[Token(Token = "0x4001C77")]
		public const string k_pch_SteamVR_IpdOffset_Float = "ipdOffset";

		[Token(Token = "0x4001C78")]
		public const string k_pch_SteamVR_AllowSupersampleFiltering_Bool = "allowSupersampleFiltering";

		[Token(Token = "0x4001C79")]
		public const string k_pch_SteamVR_EnableLinuxVulkanAsync_Bool = "enableLinuxVulkanAsync";

		[Token(Token = "0x4001C7A")]
		public const string k_pch_SteamVR_AllowDisplayLockedMode_Bool = "allowDisplayLockedMode";

		[Token(Token = "0x4001C7B")]
		public const string k_pch_SteamVR_HaveStartedTutorialForNativeChaperoneDriver_Bool = "haveStartedTutorialForNativeChaperoneDriver";

		[Token(Token = "0x4001C7C")]
		public const string k_pch_SteamVR_ForceWindows32bitVRMonitor = "forceWindows32BitVRMonitor";

		[Token(Token = "0x4001C7D")]
		public const string k_pch_SteamVR_DebugInput = "debugInput";

		[Token(Token = "0x4001C7E")]
		public const string k_pch_Lighthouse_Section = "driver_lighthouse";

		[Token(Token = "0x4001C7F")]
		public const string k_pch_Lighthouse_DisableIMU_Bool = "disableimu";

		[Token(Token = "0x4001C80")]
		public const string k_pch_Lighthouse_DisableIMUExceptHMD_Bool = "disableimuexcepthmd";

		[Token(Token = "0x4001C81")]
		public const string k_pch_Lighthouse_UseDisambiguation_String = "usedisambiguation";

		[Token(Token = "0x4001C82")]
		public const string k_pch_Lighthouse_DisambiguationDebug_Int32 = "disambiguationdebug";

		[Token(Token = "0x4001C83")]
		public const string k_pch_Lighthouse_PrimaryBasestation_Int32 = "primarybasestation";

		[Token(Token = "0x4001C84")]
		public const string k_pch_Lighthouse_DBHistory_Bool = "dbhistory";

		[Token(Token = "0x4001C85")]
		public const string k_pch_Lighthouse_EnableBluetooth_Bool = "enableBluetooth";

		[Token(Token = "0x4001C86")]
		public const string k_pch_Lighthouse_PowerManagedBaseStations_String = "PowerManagedBaseStations";

		[Token(Token = "0x4001C87")]
		public const string k_pch_Null_Section = "driver_null";

		[Token(Token = "0x4001C88")]
		public const string k_pch_Null_SerialNumber_String = "serialNumber";

		[Token(Token = "0x4001C89")]
		public const string k_pch_Null_ModelNumber_String = "modelNumber";

		[Token(Token = "0x4001C8A")]
		public const string k_pch_Null_WindowX_Int32 = "windowX";

		[Token(Token = "0x4001C8B")]
		public const string k_pch_Null_WindowY_Int32 = "windowY";

		[Token(Token = "0x4001C8C")]
		public const string k_pch_Null_WindowWidth_Int32 = "windowWidth";

		[Token(Token = "0x4001C8D")]
		public const string k_pch_Null_WindowHeight_Int32 = "windowHeight";

		[Token(Token = "0x4001C8E")]
		public const string k_pch_Null_RenderWidth_Int32 = "renderWidth";

		[Token(Token = "0x4001C8F")]
		public const string k_pch_Null_RenderHeight_Int32 = "renderHeight";

		[Token(Token = "0x4001C90")]
		public const string k_pch_Null_SecondsFromVsyncToPhotons_Float = "secondsFromVsyncToPhotons";

		[Token(Token = "0x4001C91")]
		public const string k_pch_Null_DisplayFrequency_Float = "displayFrequency";

		[Token(Token = "0x4001C92")]
		public const string k_pch_UserInterface_Section = "userinterface";

		[Token(Token = "0x4001C93")]
		public const string k_pch_UserInterface_StatusAlwaysOnTop_Bool = "StatusAlwaysOnTop";

		[Token(Token = "0x4001C94")]
		public const string k_pch_UserInterface_MinimizeToTray_Bool = "MinimizeToTray";

		[Token(Token = "0x4001C95")]
		public const string k_pch_UserInterface_Screenshots_Bool = "screenshots";

		[Token(Token = "0x4001C96")]
		public const string k_pch_UserInterface_ScreenshotType_Int = "screenshotType";

		[Token(Token = "0x4001C97")]
		public const string k_pch_Notifications_Section = "notifications";

		[Token(Token = "0x4001C98")]
		public const string k_pch_Notifications_DoNotDisturb_Bool = "DoNotDisturb";

		[Token(Token = "0x4001C99")]
		public const string k_pch_Keyboard_Section = "keyboard";

		[Token(Token = "0x4001C9A")]
		public const string k_pch_Keyboard_TutorialCompletions = "TutorialCompletions";

		[Token(Token = "0x4001C9B")]
		public const string k_pch_Keyboard_ScaleX = "ScaleX";

		[Token(Token = "0x4001C9C")]
		public const string k_pch_Keyboard_ScaleY = "ScaleY";

		[Token(Token = "0x4001C9D")]
		public const string k_pch_Keyboard_OffsetLeftX = "OffsetLeftX";

		[Token(Token = "0x4001C9E")]
		public const string k_pch_Keyboard_OffsetRightX = "OffsetRightX";

		[Token(Token = "0x4001C9F")]
		public const string k_pch_Keyboard_OffsetY = "OffsetY";

		[Token(Token = "0x4001CA0")]
		public const string k_pch_Keyboard_Smoothing = "Smoothing";

		[Token(Token = "0x4001CA1")]
		public const string k_pch_Perf_Section = "perfcheck";

		[Token(Token = "0x4001CA2")]
		public const string k_pch_Perf_HeuristicActive_Bool = "heuristicActive";

		[Token(Token = "0x4001CA3")]
		public const string k_pch_Perf_NotifyInHMD_Bool = "warnInHMD";

		[Token(Token = "0x4001CA4")]
		public const string k_pch_Perf_NotifyOnlyOnce_Bool = "warnOnlyOnce";

		[Token(Token = "0x4001CA5")]
		public const string k_pch_Perf_AllowTimingStore_Bool = "allowTimingStore";

		[Token(Token = "0x4001CA6")]
		public const string k_pch_Perf_SaveTimingsOnExit_Bool = "saveTimingsOnExit";

		[Token(Token = "0x4001CA7")]
		public const string k_pch_Perf_TestData_Float = "perfTestData";

		[Token(Token = "0x4001CA8")]
		public const string k_pch_Perf_LinuxGPUProfiling_Bool = "linuxGPUProfiling";

		[Token(Token = "0x4001CA9")]
		public const string k_pch_CollisionBounds_Section = "collisionBounds";

		[Token(Token = "0x4001CAA")]
		public const string k_pch_CollisionBounds_Style_Int32 = "CollisionBoundsStyle";

		[Token(Token = "0x4001CAB")]
		public const string k_pch_CollisionBounds_GroundPerimeterOn_Bool = "CollisionBoundsGroundPerimeterOn";

		[Token(Token = "0x4001CAC")]
		public const string k_pch_CollisionBounds_CenterMarkerOn_Bool = "CollisionBoundsCenterMarkerOn";

		[Token(Token = "0x4001CAD")]
		public const string k_pch_CollisionBounds_PlaySpaceOn_Bool = "CollisionBoundsPlaySpaceOn";

		[Token(Token = "0x4001CAE")]
		public const string k_pch_CollisionBounds_FadeDistance_Float = "CollisionBoundsFadeDistance";

		[Token(Token = "0x4001CAF")]
		public const string k_pch_CollisionBounds_ColorGammaR_Int32 = "CollisionBoundsColorGammaR";

		[Token(Token = "0x4001CB0")]
		public const string k_pch_CollisionBounds_ColorGammaG_Int32 = "CollisionBoundsColorGammaG";

		[Token(Token = "0x4001CB1")]
		public const string k_pch_CollisionBounds_ColorGammaB_Int32 = "CollisionBoundsColorGammaB";

		[Token(Token = "0x4001CB2")]
		public const string k_pch_CollisionBounds_ColorGammaA_Int32 = "CollisionBoundsColorGammaA";

		[Token(Token = "0x4001CB3")]
		public const string k_pch_Camera_Section = "camera";

		[Token(Token = "0x4001CB4")]
		public const string k_pch_Camera_EnableCamera_Bool = "enableCamera";

		[Token(Token = "0x4001CB5")]
		public const string k_pch_Camera_EnableCameraInDashboard_Bool = "enableCameraInDashboard";

		[Token(Token = "0x4001CB6")]
		public const string k_pch_Camera_EnableCameraForCollisionBounds_Bool = "enableCameraForCollisionBounds";

		[Token(Token = "0x4001CB7")]
		public const string k_pch_Camera_EnableCameraForRoomView_Bool = "enableCameraForRoomView";

		[Token(Token = "0x4001CB8")]
		public const string k_pch_Camera_BoundsColorGammaR_Int32 = "cameraBoundsColorGammaR";

		[Token(Token = "0x4001CB9")]
		public const string k_pch_Camera_BoundsColorGammaG_Int32 = "cameraBoundsColorGammaG";

		[Token(Token = "0x4001CBA")]
		public const string k_pch_Camera_BoundsColorGammaB_Int32 = "cameraBoundsColorGammaB";

		[Token(Token = "0x4001CBB")]
		public const string k_pch_Camera_BoundsColorGammaA_Int32 = "cameraBoundsColorGammaA";

		[Token(Token = "0x4001CBC")]
		public const string k_pch_Camera_BoundsStrength_Int32 = "cameraBoundsStrength";

		[Token(Token = "0x4001CBD")]
		public const string k_pch_audio_Section = "audio";

		[Token(Token = "0x4001CBE")]
		public const string k_pch_audio_OnPlaybackDevice_String = "onPlaybackDevice";

		[Token(Token = "0x4001CBF")]
		public const string k_pch_audio_OnRecordDevice_String = "onRecordDevice";

		[Token(Token = "0x4001CC0")]
		public const string k_pch_audio_OnPlaybackMirrorDevice_String = "onPlaybackMirrorDevice";

		[Token(Token = "0x4001CC1")]
		public const string k_pch_audio_OffPlaybackDevice_String = "offPlaybackDevice";

		[Token(Token = "0x4001CC2")]
		public const string k_pch_audio_OffRecordDevice_String = "offRecordDevice";

		[Token(Token = "0x4001CC3")]
		public const string k_pch_audio_VIVEHDMIGain = "viveHDMIGain";

		[Token(Token = "0x4001CC4")]
		public const string k_pch_Power_Section = "power";

		[Token(Token = "0x4001CC5")]
		public const string k_pch_Power_PowerOffOnExit_Bool = "powerOffOnExit";

		[Token(Token = "0x4001CC6")]
		public const string k_pch_Power_TurnOffScreensTimeout_Float = "turnOffScreensTimeout";

		[Token(Token = "0x4001CC7")]
		public const string k_pch_Power_TurnOffControllersTimeout_Float = "turnOffControllersTimeout";

		[Token(Token = "0x4001CC8")]
		public const string k_pch_Power_ReturnToWatchdogTimeout_Float = "returnToWatchdogTimeout";

		[Token(Token = "0x4001CC9")]
		public const string k_pch_Power_AutoLaunchSteamVROnButtonPress = "autoLaunchSteamVROnButtonPress";

		[Token(Token = "0x4001CCA")]
		public const string k_pch_Power_PauseCompositorOnStandby_Bool = "pauseCompositorOnStandby";

		[Token(Token = "0x4001CCB")]
		public const string k_pch_Dashboard_Section = "dashboard";

		[Token(Token = "0x4001CCC")]
		public const string k_pch_Dashboard_EnableDashboard_Bool = "enableDashboard";

		[Token(Token = "0x4001CCD")]
		public const string k_pch_Dashboard_ArcadeMode_Bool = "arcadeMode";

		[Token(Token = "0x4001CCE")]
		public const string k_pch_Dashboard_EnableWebUI = "webUI";

		[Token(Token = "0x4001CCF")]
		public const string k_pch_modelskin_Section = "modelskins";

		[Token(Token = "0x4001CD0")]
		public const string k_pch_Driver_Enable_Bool = "enable";

		[Token(Token = "0x4001CD1")]
		public const string k_pch_WebInterface_Section = "WebInterface";

		[Token(Token = "0x4001CD2")]
		public const string k_pch_WebInterface_WebPort_String = "WebPort";

		[Token(Token = "0x4001CD3")]
		public const string IVRScreenshots_Version = "IVRScreenshots_001";

		[Token(Token = "0x4001CD4")]
		public const string IVRResources_Version = "IVRResources_001";

		[Token(Token = "0x4001CD5")]
		public const string IVRDriverManager_Version = "IVRDriverManager_001";

		[Token(Token = "0x4001CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853A4C", Offset = "0x853A4C")]
		private static uint <VRToken>k__BackingField;

		[Token(Token = "0x4001CD7")]
		private const string FnTable_Prefix = "FnTable:";

		[Token(Token = "0x4001CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static COpenVRContext _OpenVRInternal_ModuleContext;

		[Token(Token = "0x170001AF")]
		private static uint VRToken
		{
			[Token(Token = "0x6001851")]
			[Address(RVA = "0x1B61D0C", Offset = "0x1B61D0C", VA = "0x1B61D0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B41C", Offset = "0x85B41C")]
			get
			{
				return default(uint);
			}
			[Token(Token = "0x6001852")]
			[Address(RVA = "0x1B61D70", Offset = "0x1B61D70", VA = "0x1B61D70")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B42C", Offset = "0x85B42C")]
			set
			{
			}
		}

		[Token(Token = "0x170001B0")]
		private static COpenVRContext OpenVRInternal_ModuleContext
		{
			[Token(Token = "0x6001853")]
			[Address(RVA = "0x1B61DE0", Offset = "0x1B61DE0", VA = "0x1B61DE0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B1")]
		public static CVRSystem System
		{
			[Token(Token = "0x6001854")]
			[Address(RVA = "0x1B61EC0", Offset = "0x1B61EC0", VA = "0x1B61EC0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B2")]
		public static CVRChaperone Chaperone
		{
			[Token(Token = "0x6001855")]
			[Address(RVA = "0x1B61F28", Offset = "0x1B61F28", VA = "0x1B61F28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B3")]
		public static CVRChaperoneSetup ChaperoneSetup
		{
			[Token(Token = "0x6001856")]
			[Address(RVA = "0x1B61F90", Offset = "0x1B61F90", VA = "0x1B61F90")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B4")]
		public static CVRCompositor Compositor
		{
			[Token(Token = "0x6001857")]
			[Address(RVA = "0x1B61FF8", Offset = "0x1B61FF8", VA = "0x1B61FF8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B5")]
		public static CVROverlay Overlay
		{
			[Token(Token = "0x6001858")]
			[Address(RVA = "0x1B62060", Offset = "0x1B62060", VA = "0x1B62060")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B6")]
		public static CVRRenderModels RenderModels
		{
			[Token(Token = "0x6001859")]
			[Address(RVA = "0x1B620C8", Offset = "0x1B620C8", VA = "0x1B620C8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B7")]
		public static CVRExtendedDisplay ExtendedDisplay
		{
			[Token(Token = "0x600185A")]
			[Address(RVA = "0x1B62130", Offset = "0x1B62130", VA = "0x1B62130")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B8")]
		public static CVRSettings Settings
		{
			[Token(Token = "0x600185B")]
			[Address(RVA = "0x1B62198", Offset = "0x1B62198", VA = "0x1B62198")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001B9")]
		public static CVRApplications Applications
		{
			[Token(Token = "0x600185C")]
			[Address(RVA = "0x1B62200", Offset = "0x1B62200", VA = "0x1B62200")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BA")]
		public static CVRScreenshots Screenshots
		{
			[Token(Token = "0x600185D")]
			[Address(RVA = "0x1B62268", Offset = "0x1B62268", VA = "0x1B62268")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170001BB")]
		public static CVRTrackedCamera TrackedCamera
		{
			[Token(Token = "0x600185E")]
			[Address(RVA = "0x1B622D0", Offset = "0x1B622D0", VA = "0x1B622D0")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6001849")]
		[Address(RVA = "0x1B61844", Offset = "0x1B61844", VA = "0x1B61844")]
		public static uint InitInternal(EVRInitError peError, EVRApplicationType eApplicationType)
		{
			return default(uint);
		}

		[Token(Token = "0x600184A")]
		[Address(RVA = "0x1B618D8", Offset = "0x1B618D8", VA = "0x1B618D8")]
		public static void ShutdownInternal()
		{
		}

		[Token(Token = "0x600184B")]
		[Address(RVA = "0x1B6194C", Offset = "0x1B6194C", VA = "0x1B6194C")]
		public static bool IsHmdPresent()
		{
			return default(bool);
		}

		[Token(Token = "0x600184C")]
		[Address(RVA = "0x1B619CC", Offset = "0x1B619CC", VA = "0x1B619CC")]
		public static bool IsRuntimeInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x600184D")]
		[Address(RVA = "0x1B61A4C", Offset = "0x1B61A4C", VA = "0x1B61A4C")]
		public static string GetStringForHmdError(EVRInitError error)
		{
			return null;
		}

		[Token(Token = "0x600184E")]
		[Address(RVA = "0x1B61B48", Offset = "0x1B61B48", VA = "0x1B61B48")]
		public static IntPtr GetGenericInterface(string pchInterfaceVersion, EVRInitError peError)
		{
			return default(IntPtr);
		}

		[Token(Token = "0x600184F")]
		[Address(RVA = "0x1B61BF4", Offset = "0x1B61BF4", VA = "0x1B61BF4")]
		public static bool IsInterfaceVersionValid(string pchInterfaceVersion)
		{
			return default(bool);
		}

		[Token(Token = "0x6001850")]
		[Address(RVA = "0x1B61C94", Offset = "0x1B61C94", VA = "0x1B61C94")]
		public static uint GetInitToken()
		{
			return default(uint);
		}

		[Token(Token = "0x600185F")]
		[Address(RVA = "0x1B62338", Offset = "0x1B62338", VA = "0x1B62338")]
		public static CVRSystem Init(EVRInitError peError, EVRApplicationType eApplicationType = EVRApplicationType.VRApplication_Scene)
		{
			return null;
		}

		[Token(Token = "0x6001860")]
		[Address(RVA = "0x1B62498", Offset = "0x1B62498", VA = "0x1B62498")]
		public static void Shutdown()
		{
		}

		[Token(Token = "0x6001861")]
		[Address(RVA = "0x1B624F0", Offset = "0x1B624F0", VA = "0x1B624F0")]
		public OpenVR()
		{
		}
	}
}
namespace Bhaptics.Tact.Unity
{
	[Token(Token = "0x2000375")]
	public class AndroidHaptic : IHaptic
	{
		[Token(Token = "0x4001CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected static AndroidJavaObject androidJavaObject;

		[Token(Token = "0x4001CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		protected List<HapticDevice> deviceList;

		[Token(Token = "0x4001CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<string> registeredCache;

		[Token(Token = "0x4001CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static readonly object[] SubmitRegisteredParams;

		[Token(Token = "0x4001CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int[] Empty;

		[Token(Token = "0x4001CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly object[] EmptyParams;

		[Token(Token = "0x4001CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private static readonly RotationOption DefaultRotationOption;

		[Token(Token = "0x4001CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private readonly object syncLock;

		[Token(Token = "0x4001CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Dictionary<PositionType, int[]> updatedList;

		[Token(Token = "0x4001CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		protected IntPtr AndroidJavaObjectPtr;

		[Token(Token = "0x4001CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		protected IntPtr SubmitRegisteredPtr;

		[Token(Token = "0x4001CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		protected IntPtr SubmitRegisteredWithTimePtr;

		[Token(Token = "0x4001CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		protected IntPtr RegisterPtr;

		[Token(Token = "0x4001CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		protected IntPtr RegisterReflectedPtr;

		[Token(Token = "0x4001CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		protected IntPtr PingPtr;

		[Token(Token = "0x4001CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		protected IntPtr PingAllPtr;

		[Token(Token = "0x4001CE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		protected IntPtr IsRegisteredPtr;

		[Token(Token = "0x4001CEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		protected IntPtr IsPlayingPtr;

		[Token(Token = "0x4001CEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		protected IntPtr IsPlayingAnythingPtr;

		[Token(Token = "0x4001CEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		protected IntPtr ToggleStreamPtr;

		[Token(Token = "0x4001CED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		protected IntPtr IsStreamingEnablePtr;

		[Token(Token = "0x4001CEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		protected IntPtr GetStreamingHostsPtr;

		[Token(Token = "0x4001CEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		protected IntPtr ShowBluetoothPtr;

		[Token(Token = "0x4001CF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		protected IntPtr RefreshPairingInfoPtr;

		[Token(Token = "0x4001CF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		protected IntPtr EnableDevicePtr;

		[Token(Token = "0x6001863")]
		[Address(RVA = "0x118AB84", Offset = "0x118AB84", VA = "0x118AB84")]
		public AndroidHaptic()
		{
		}

		[Token(Token = "0x6001864")]
		[Address(RVA = "0x118B658", Offset = "0x118B658", VA = "0x118B658")]
		public List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x6001865")]
		[Address(RVA = "0x118BA98", Offset = "0x118BA98", VA = "0x118BA98")]
		public bool IsStreamingEnable()
		{
			return default(bool);
		}

		[Token(Token = "0x6001866")]
		[Address(RVA = "0x118BBBC", Offset = "0x118BBBC", VA = "0x118BBBC")]
		public void ToggleStreaming()
		{
		}

		[Token(Token = "0x6001867")]
		[Address(RVA = "0x118BD10", Offset = "0x118BD10", VA = "0x118BD10", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x6001868")]
		[Address(RVA = "0x118BE58", Offset = "0x118BE58", VA = "0x118BE58", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x6001869")]
		[Address(RVA = "0x118BFFC", Offset = "0x118BFFC", VA = "0x118BFFC", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600186A")]
		[Address(RVA = "0x118C108", Offset = "0x118C108", VA = "0x118C108", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x600186B")]
		[Address(RVA = "0x118C268", Offset = "0x118C268", VA = "0x118C268", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600186C")]
		[Address(RVA = "0x118C31C", Offset = "0x118C31C", VA = "0x118C31C", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600186D")]
		[Address(RVA = "0x118C468", Offset = "0x118C468", VA = "0x118C468", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x600186E")]
		[Address(RVA = "0x118C5B4", Offset = "0x118C5B4", VA = "0x118C5B4", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x600186F")]
		[Address(RVA = "0x118CB58", Offset = "0x118CB58", VA = "0x118CB58", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x6001870")]
		[Address(RVA = "0x118D1E4", Offset = "0x118D1E4", VA = "0x118D1E4", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x6001871")]
		[Address(RVA = "0x118D278", Offset = "0x118D278", VA = "0x118D278", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6001872")]
		[Address(RVA = "0x118D584", Offset = "0x118D584", VA = "0x118D584", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001873")]
		[Address(RVA = "0x118D59C", Offset = "0x118D59C", VA = "0x118D59C", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001874")]
		[Address(RVA = "0x118D6C8", Offset = "0x118D6C8", VA = "0x118D6C8", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001875")]
		[Address(RVA = "0x118D950", Offset = "0x118D950", VA = "0x118D950", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001876")]
		[Address(RVA = "0x118DBD0", Offset = "0x118DBD0", VA = "0x118DBD0", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001877")]
		[Address(RVA = "0x118D29C", Offset = "0x118D29C", VA = "0x118D29C")]
		private void SubmitRequest(string key, string altKey, float intensity, float duration, float offsetAngleX, float offsetY)
		{
		}

		[Token(Token = "0x6001878")]
		[Address(RVA = "0x118DD30", Offset = "0x118DD30", VA = "0x118DD30", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x6001879")]
		[Address(RVA = "0x118B508", Offset = "0x118B508", VA = "0x118B508")]
		public List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x600187A")]
		[Address(RVA = "0x118E184", Offset = "0x118E184", VA = "0x118E184")]
		public void TogglePosition(string address)
		{
		}

		[Token(Token = "0x600187B")]
		[Address(RVA = "0x118E2E4", Offset = "0x118E2E4", VA = "0x118E2E4")]
		public void PingAll()
		{
		}

		[Token(Token = "0x600187C")]
		[Address(RVA = "0x118E394", Offset = "0x118E394", VA = "0x118E394")]
		public void Ping(string address)
		{
		}

		[Token(Token = "0x600187D")]
		[Address(RVA = "0x118E49C", Offset = "0x118E49C", VA = "0x118E49C")]
		public void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x600187E")]
		[Address(RVA = "0x118E550", Offset = "0x118E550", VA = "0x118E550")]
		public void EnableDevice(string address, bool boo)
		{
		}

		[Token(Token = "0x600187F")]
		[Address(RVA = "0x118E6C0", Offset = "0x118E6C0", VA = "0x118E6C0")]
		public void RefreshPairingInfo()
		{
		}

		[Token(Token = "0x6001880")]
		[Address(RVA = "0x118BC6C", Offset = "0x118BC6C", VA = "0x118BC6C")]
		private void CallNativeVoidMethod(IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x6001881")]
		[Address(RVA = "0x118BB14", Offset = "0x118BB14", VA = "0x118BB14")]
		private bool CallNativeBoolMethod(IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x2000376")]
	public class HapticDevice
	{
		[Token(Token = "0x4001CF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsPaired;

		[Token(Token = "0x4001CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
		public bool IsConnected;

		[Token(Token = "0x4001CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string DeviceName;

		[Token(Token = "0x4001CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositionType Position;

		[Token(Token = "0x4001CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string Address;

		[Token(Token = "0x4001CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositionType[] Candidates;

		[Token(Token = "0x4001CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public bool IsEnable;

		[Token(Token = "0x4001CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		public bool IsAudioJack;

		[Token(Token = "0x4001CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public int Battery;

		[Token(Token = "0x6001883")]
		[Address(RVA = "0xBA6B04", Offset = "0xBA6B04", VA = "0xBA6B04")]
		public HapticDevice()
		{
		}
	}
	[Token(Token = "0x2000377")]
	public static class AndroidUtils
	{
		[Serializable]
		[Token(Token = "0x2000641")]
		private class Wrapper<T>
		{
			[Token(Token = "0x40024D8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public T[] array;

			[Token(Token = "0x60023C9")]
			public Wrapper()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000642")]
		private class Device
		{
			[Token(Token = "0x40024D9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool paired;

			[Token(Token = "0x40024DA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public string deviceName;

			[Token(Token = "0x40024DB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public int position;

			[Token(Token = "0x40024DC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public bool connected;

			[Token(Token = "0x40024DD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public string address;

			[Token(Token = "0x40024DE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			public int battery;

			[Token(Token = "0x40024DF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
			public bool enable;

			[Token(Token = "0x40024E0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
			public bool audioJackIn;

			[Token(Token = "0x60023CA")]
			[Address(RVA = "0x19AA478", Offset = "0x19AA478", VA = "0x19AA478")]
			public Device()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000643")]
		public class StreamHost
		{
			[Token(Token = "0x40024E1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public string ip;

			[Token(Token = "0x40024E2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public bool connected;

			[Token(Token = "0x60023CB")]
			[Address(RVA = "0x19AA480", Offset = "0x19AA480", VA = "0x19AA480")]
			public StreamHost()
			{
			}
		}

		[Token(Token = "0x6001884")]
		[Address(RVA = "0x118ECB0", Offset = "0x118ECB0", VA = "0x118ECB0")]
		private static PositionType ToDeviceType(int type)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001885")]
		[Address(RVA = "0x118ECD4", Offset = "0x118ECD4", VA = "0x118ECD4")]
		private static PositionType[] ToCandidates(int type)
		{
			return null;
		}

		[Token(Token = "0x6001886")]
		[Address(RVA = "0x118EE34", Offset = "0x118EE34", VA = "0x118EE34")]
		public static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001887")]
		[Address(RVA = "0x118EE5C", Offset = "0x118EE5C", VA = "0x118EE5C")]
		public static bool CanChangePosition(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6001888")]
		public static T[] GetJsonArray<T>(string json)
		{
			return null;
		}

		[Token(Token = "0x6001889")]
		[Address(RVA = "0x118EE6C", Offset = "0x118EE6C", VA = "0x118EE6C")]
		private static HapticDevice Convert(Device d)
		{
			return null;
		}

		[Token(Token = "0x600188A")]
		[Address(RVA = "0x118E074", Offset = "0x118E074", VA = "0x118E074")]
		public static List<HapticDevice> ConvertToBhapticsDevices(string[] deviceJson)
		{
			return null;
		}

		[Token(Token = "0x600188B")]
		[Address(RVA = "0x118E774", Offset = "0x118E774", VA = "0x118E774")]
		public static void CallNativeVoidMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
		}

		[Token(Token = "0x600188C")]
		[Address(RVA = "0x118E980", Offset = "0x118E980", VA = "0x118E980")]
		public static bool CallNativeBoolMethod(IntPtr androidObjPtr, IntPtr methodPtr, object[] param)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x2000378")]
	public class AndroidWidget_ControlButton : MonoBehaviour
	{
		[Token(Token = "0x4001CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private PositionType DeviceType;

		[Token(Token = "0x4001CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x853A6C", Offset = "0x853A6C")]
		[SerializeField]
		private Sprite defaultImage;

		[Token(Token = "0x4001CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite pairImage;

		[Token(Token = "0x4001CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Sprite defaultHoverImage;

		[Token(Token = "0x4001CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Sprite pairHoverImage;

		[Token(Token = "0x4001D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Transform pairDeviceCount;

		[Token(Token = "0x4001D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Button button;

		[Token(Token = "0x600188D")]
		[Address(RVA = "0x118EF64", Offset = "0x118EF64", VA = "0x118EF64")]
		private void Awake()
		{
		}

		[Token(Token = "0x600188E")]
		[Address(RVA = "0x118F034", Offset = "0x118F034", VA = "0x118F034")]
		public void Refresh()
		{
		}

		[Token(Token = "0x600188F")]
		[Address(RVA = "0x118F618", Offset = "0x118F618", VA = "0x118F618")]
		public void OnPingDevice()
		{
		}

		[Token(Token = "0x6001890")]
		[Address(RVA = "0x118F688", Offset = "0x118F688", VA = "0x118F688")]
		public void OnClickDevice()
		{
		}

		[Token(Token = "0x6001891")]
		[Address(RVA = "0x118F730", Offset = "0x118F730", VA = "0x118F730")]
		public AndroidWidget_ControlButton()
		{
		}
	}
	[Token(Token = "0x2000379")]
	public class AndroidWidget_ObjectPool : MonoBehaviour
	{
		[Token(Token = "0x4001D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ScrollRect pariedDeviceScrollrect;

		[Token(Token = "0x4001D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private AndroidWidget_PairedDeviceUI pairedDeviceUIGameObject;

		[Token(Token = "0x4001D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private int objectCount;

		[Token(Token = "0x4001D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private List<AndroidWidget_PairedDeviceUI> pairedUIList;

		[Token(Token = "0x6001892")]
		[Address(RVA = "0x118F738", Offset = "0x118F738", VA = "0x118F738")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001893")]
		[Address(RVA = "0x118F8D8", Offset = "0x118F8D8", VA = "0x118F8D8")]
		public AndroidWidget_PairedDeviceUI GetPairedDeviceUI()
		{
			return null;
		}

		[Token(Token = "0x6001894")]
		[Address(RVA = "0x118F9B8", Offset = "0x118F9B8", VA = "0x118F9B8")]
		public void DisableAll()
		{
		}

		[Token(Token = "0x6001895")]
		[Address(RVA = "0x118FA68", Offset = "0x118FA68", VA = "0x118FA68")]
		public AndroidWidget_ObjectPool()
		{
		}
	}
	[Token(Token = "0x200037A")]
	public class AndroidWidget_PairedDeviceUI : MonoBehaviour
	{
		[Token(Token = "0x4001D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x853B28", Offset = "0x853B28")]
		[SerializeField]
		private Image deviceImage;

		[Token(Token = "0x4001D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Text deviceName;

		[Token(Token = "0x4001D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button toggleButton;

		[Token(Token = "0x4001D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x853BA4", Offset = "0x853BA4")]
		[SerializeField]
		private Sprite leftSide;

		[Token(Token = "0x4001D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Sprite rightSide;

		[Token(Token = "0x4001D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private HapticDevice device;

		[Token(Token = "0x6001896")]
		[Address(RVA = "0x118FA70", Offset = "0x118FA70", VA = "0x118FA70")]
		private void Start()
		{
		}

		[Token(Token = "0x6001897")]
		[Address(RVA = "0x118FB5C", Offset = "0x118FB5C", VA = "0x118FB5C")]
		public void Refresh(HapticDevice tactDevice, Bhaptics_Widget_Setting setting)
		{
		}

		[Token(Token = "0x6001898")]
		[Address(RVA = "0x118FD14", Offset = "0x118FD14", VA = "0x118FD14")]
		private void OnPing()
		{
		}

		[Token(Token = "0x6001899")]
		[Address(RVA = "0x118FD98", Offset = "0x118FD98", VA = "0x118FD98")]
		private void OnSwap()
		{
		}

		[Token(Token = "0x600189A")]
		[Address(RVA = "0x118FE78", Offset = "0x118FE78", VA = "0x118FE78")]
		public AndroidWidget_PairedDeviceUI()
		{
		}
	}
	[Token(Token = "0x200037B")]
	public class AndroidWidget_SettingUIAnimation : MonoBehaviour
	{
		[Token(Token = "0x4001D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject SettingUI;

		[Token(Token = "0x4001D0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Animator animator;

		[Token(Token = "0x4001D0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool settingPanelEnable;

		[Token(Token = "0x600189B")]
		[Address(RVA = "0x118FE80", Offset = "0x118FE80", VA = "0x118FE80")]
		private void Start()
		{
		}

		[Token(Token = "0x600189C")]
		[Address(RVA = "0x118FEFC", Offset = "0x118FEFC", VA = "0x118FEFC")]
		public void Hide()
		{
		}

		[Token(Token = "0x600189D")]
		[Address(RVA = "0x118FF20", Offset = "0x118FF20", VA = "0x118FF20")]
		public void Show()
		{
		}

		[Token(Token = "0x600189E")]
		[Address(RVA = "0x118FF44", Offset = "0x118FF44", VA = "0x118FF44")]
		public void ToggleSettingButton()
		{
		}

		[Token(Token = "0x600189F")]
		[Address(RVA = "0x1190068", Offset = "0x1190068", VA = "0x1190068")]
		public AndroidWidget_SettingUIAnimation()
		{
		}
	}
	[Token(Token = "0x200037C")]
	public class AndroidWidget_UI : MonoBehaviour
	{
		[Token(Token = "0x4001D10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private GameObject uiContainer;

		[Token(Token = "0x4001D11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Button pingAllButton;

		[Token(Token = "0x4001D12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x853C30", Offset = "0x853C30")]
		[SerializeField]
		private Bhaptics_Widget_Setting WidgetSetting;

		[Token(Token = "0x4001D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AndroidWidget_ObjectPool settingObjectPool;

		[Token(Token = "0x4001D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private AudioSource buttonClickAudio;

		[Token(Token = "0x4001D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Animator animator;

		[Token(Token = "0x4001D16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private bool widgetActive;

		[Token(Token = "0x4001D17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private AndroidWidget_ControlButton[] controllButtons;

		[Token(Token = "0x4001D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidWidget_UI Instance;

		[Token(Token = "0x60018A0")]
		[Address(RVA = "0x1190070", Offset = "0x1190070", VA = "0x1190070")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018A1")]
		[Address(RVA = "0x11904C8", Offset = "0x11904C8", VA = "0x11904C8")]
		private void Start()
		{
		}

		[Token(Token = "0x60018A2")]
		[Address(RVA = "0x1190268", Offset = "0x1190268", VA = "0x1190268")]
		private void InitializeButtons()
		{
		}

		[Token(Token = "0x60018A3")]
		[Address(RVA = "0x1190740", Offset = "0x1190740", VA = "0x1190740")]
		public void ToggleWidgetButton()
		{
		}

		[Token(Token = "0x60018A4")]
		[Address(RVA = "0x11907E0", Offset = "0x11907E0", VA = "0x11907E0")]
		public void ShowWidget()
		{
		}

		[Token(Token = "0x60018A5")]
		[Address(RVA = "0x1190804", Offset = "0x1190804", VA = "0x1190804")]
		public void HideWidget()
		{
		}

		[Token(Token = "0x60018A6")]
		[Address(RVA = "0x1190828", Offset = "0x1190828", VA = "0x1190828")]
		public void ButtonClickSound()
		{
		}

		[Token(Token = "0x60018A7")]
		[Address(RVA = "0x1190848", Offset = "0x1190848", VA = "0x1190848")]
		private void RefreshPairedDevices(List<HapticDevice> devices)
		{
		}

		[Token(Token = "0x60018A8")]
		[Address(RVA = "0x1190620", Offset = "0x1190620", VA = "0x1190620")]
		public void Refresh()
		{
		}

		[Token(Token = "0x60018A9")]
		[Address(RVA = "0x1190A24", Offset = "0x1190A24", VA = "0x1190A24")]
		public AndroidWidget_UI()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037D")]
	public class PositonIconSetting
	{
		[Token(Token = "0x4001D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite connect;

		[Token(Token = "0x4001D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite disconnect;

		[Token(Token = "0x60018AA")]
		[Address(RVA = "0x1B6D930", Offset = "0x1B6D930", VA = "0x1B6D930")]
		public PositonIconSetting()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x200037E")]
	public class IconSetting
	{
		[Token(Token = "0x4001D1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x853C7C", Offset = "0x853C7C")]
		public PositonIconSetting Vest;

		[Token(Token = "0x4001D1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PositonIconSetting Head;

		[Token(Token = "0x4001D1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public PositonIconSetting Arm;

		[Token(Token = "0x4001D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public PositonIconSetting Foot;

		[Token(Token = "0x4001D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PositonIconSetting Hand;

		[Token(Token = "0x60018AB")]
		[Address(RVA = "0xBACC9C", Offset = "0xBACC9C", VA = "0xBACC9C")]
		public IconSetting()
		{
		}
	}
	[Token(Token = "0x200037F")]
	public class Android_DeviceController : MonoBehaviour
	{
		[Token(Token = "0x4001D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x853CB4", Offset = "0x853CB4")]
		[SerializeField]
		private Image icon;

		[Token(Token = "0x4001D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private IconSetting widgetSetting;

		[Token(Token = "0x4001D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Sprite TactsuitWiredIcon;

		[Token(Token = "0x4001D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Image batteryLowImage;

		[Token(Token = "0x4001D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x853D30", Offset = "0x853D30")]
		[SerializeField]
		private GameObject ConnectMenu;

		[Token(Token = "0x4001D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Button pingButton;

		[Token(Token = "0x4001D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Button lButton;

		[Token(Token = "0x4001D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private Button rButton;

		[Token(Token = "0x4001D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private GameObject wiredNotification;

		[Token(Token = "0x4001D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x853DBC", Offset = "0x853DBC")]
		[SerializeField]
		private GameObject DisconnectMenu;

		[Token(Token = "0x4001D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static string SelectHexColor;

		[Token(Token = "0x4001D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string SelectHoverHexColor;

		[Token(Token = "0x4001D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static string DisableHexColor;

		[Token(Token = "0x4001D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static string DisableHoverHexColor;

		[Token(Token = "0x4001D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private HapticDevice device;

		[Token(Token = "0x60018AC")]
		[Address(RVA = "0x1190A34", Offset = "0x1190A34", VA = "0x1190A34")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018AD")]
		[Address(RVA = "0x1190C30", Offset = "0x1190C30", VA = "0x1190C30")]
		public void RefreshDevice(HapticDevice d)
		{
		}

		[Token(Token = "0x60018AE")]
		[Address(RVA = "0x1190E00", Offset = "0x1190E00", VA = "0x1190E00")]
		private void RenderConnectMenu()
		{
		}

		[Token(Token = "0x60018AF")]
		[Address(RVA = "0x1190E94", Offset = "0x1190E94", VA = "0x1190E94")]
		private void RenderDisconnectMenu()
		{
		}

		[Token(Token = "0x60018B0")]
		[Address(RVA = "0x1190F10", Offset = "0x1190F10", VA = "0x1190F10")]
		private void UpdateButtons()
		{
		}

		[Token(Token = "0x60018B1")]
		[Address(RVA = "0x1190CF4", Offset = "0x1190CF4", VA = "0x1190CF4")]
		private void UpdateIcon(HapticDevice d)
		{
		}

		[Token(Token = "0x60018B2")]
		[Address(RVA = "0x1191398", Offset = "0x1191398", VA = "0x1191398")]
		private Sprite GetSprite(PositonIconSetting icon, bool connected)
		{
			return null;
		}

		[Token(Token = "0x60018B3")]
		[Address(RVA = "0x11913C4", Offset = "0x11913C4", VA = "0x11913C4")]
		private void Ping()
		{
		}

		[Token(Token = "0x60018B4")]
		[Address(RVA = "0x119143C", Offset = "0x119143C", VA = "0x119143C")]
		private void ToLeft()
		{
		}

		[Token(Token = "0x60018B5")]
		[Address(RVA = "0x1191528", Offset = "0x1191528", VA = "0x1191528")]
		private void ToRight()
		{
		}

		[Token(Token = "0x60018B6")]
		[Address(RVA = "0x1191614", Offset = "0x1191614", VA = "0x1191614")]
		private Color ToColor(string hex)
		{
			return default(Color);
		}

		[Token(Token = "0x60018B7")]
		[Address(RVA = "0x1191228", Offset = "0x1191228", VA = "0x1191228")]
		private void ChangeButtonColor(Button targetButton, bool isSelect)
		{
		}

		[Token(Token = "0x60018B8")]
		[Address(RVA = "0x11911C0", Offset = "0x11911C0", VA = "0x11911C0")]
		private static bool IsLeft(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60018B9")]
		[Address(RVA = "0x11911F4", Offset = "0x11911F4", VA = "0x11911F4")]
		private static bool IsRight(PositionType pos)
		{
			return default(bool);
		}

		[Token(Token = "0x60018BA")]
		[Address(RVA = "0x1191660", Offset = "0x1191660", VA = "0x1191660")]
		public Android_DeviceController()
		{
		}
	}
	[Token(Token = "0x2000380")]
	public class Android_UIController : MonoBehaviour
	{
		[Token(Token = "0x4001D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private RectTransform mainPanel;

		[Token(Token = "0x4001D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Transform devicesContainer;

		[Token(Token = "0x4001D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform deviceListPageUi;

		[Token(Token = "0x4001D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Button deviceListNextPageButton;

		[Token(Token = "0x4001D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Button deviceListBackPageButton;

		[Token(Token = "0x4001D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private Text deviceListPageText;

		[Token(Token = "0x4001D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private Android_DeviceController devicePrefab;

		[Token(Token = "0x4001D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x853E78", Offset = "0x853E78")]
		[SerializeField]
		private GameObject noPairedDeviceUi;

		[Token(Token = "0x4001D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private Button helpButton;

		[Token(Token = "0x4001D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private Button bHpaticsLinkButton;

		[Token(Token = "0x4001D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private GameObject helpUi;

		[Token(Token = "0x4001D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private Button helpCloseButton;

		[Token(Token = "0x4001D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private List<Android_DeviceController> controllers;

		[Token(Token = "0x4001D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private BoxCollider mainPanelCollider;

		[Token(Token = "0x4001D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private Vector2 defaultMainPanelSize;

		[Token(Token = "0x4001D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Vector2 defaultDeviceContainerSize;

		[Token(Token = "0x4001D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int deviceListSize;

		[Token(Token = "0x4001D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int deviceListPageIndex;

		[Token(Token = "0x4001D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private int expandHeight;

		[Token(Token = "0x4001D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private int expandDeviceCount;

		[Token(Token = "0x4001D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private int pageActivateDeviceCount;

		[Token(Token = "0x4001D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private int pageExpandHeight;

		[Token(Token = "0x4001D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private int maxPageIndex;

		[Token(Token = "0x60018BC")]
		[Address(RVA = "0x1191754", Offset = "0x1191754", VA = "0x1191754")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018BD")]
		[Address(RVA = "0x1191C20", Offset = "0x1191C20", VA = "0x1191C20")]
		private void Refresh()
		{
		}

		[Token(Token = "0x60018BE")]
		[Address(RVA = "0x1192284", Offset = "0x1192284", VA = "0x1192284")]
		private void OnHelp()
		{
		}

		[Token(Token = "0x60018BF")]
		[Address(RVA = "0x1192324", Offset = "0x1192324", VA = "0x1192324")]
		private void CloseHelpNotification()
		{
		}

		[Token(Token = "0x60018C0")]
		[Address(RVA = "0x11923C4", Offset = "0x11923C4", VA = "0x11923C4")]
		private void OpenLink()
		{
		}

		[Token(Token = "0x60018C1")]
		[Address(RVA = "0x119240C", Offset = "0x119240C", VA = "0x119240C")]
		private void NextPage()
		{
		}

		[Token(Token = "0x60018C2")]
		[Address(RVA = "0x1192444", Offset = "0x1192444", VA = "0x1192444")]
		private void BackPage()
		{
		}

		[Token(Token = "0x60018C3")]
		[Address(RVA = "0x119247C", Offset = "0x119247C", VA = "0x119247C")]
		public Android_UIController()
		{
		}
	}
	[Token(Token = "0x2000381")]
	public class BhapticsAndroidManager : MonoBehaviour
	{
		[Token(Token = "0x4001D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static BhapticsAndroidManager Instance;

		[Token(Token = "0x4001D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static bool pcAndoidTestMode;

		[Token(Token = "0x4001D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<HapticDevice> Devices;

		[Token(Token = "0x4001D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static List<UnityAction> refreshActions;

		[Token(Token = "0x60018C4")]
		[Address(RVA = "0xF31E2C", Offset = "0xF31E2C", VA = "0xF31E2C")]
		private void Awake()
		{
		}

		[Token(Token = "0x60018C5")]
		[Address(RVA = "0xF31F5C", Offset = "0xF31F5C", VA = "0xF31F5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60018C6")]
		[Address(RVA = "0xF32008", Offset = "0xF32008", VA = "0xF32008")]
		private void RefreshDevices()
		{
		}

		[Token(Token = "0x60018C7")]
		[Address(RVA = "0xF31BF8", Offset = "0xF31BF8", VA = "0xF31BF8")]
		public static void Ping(PositionType pos)
		{
		}

		[Token(Token = "0x60018C8")]
		[Address(RVA = "0xF31B28", Offset = "0xF31B28", VA = "0xF31B28")]
		public static void TogglePosition(string address)
		{
		}

		[Token(Token = "0x60018C9")]
		[Address(RVA = "0xF32910", Offset = "0xF32910", VA = "0xF32910")]
		public static void Ping(HapticDevice device)
		{
		}

		[Token(Token = "0x60018CA")]
		[Address(RVA = "0xF32AD8", Offset = "0xF32AD8", VA = "0xF32AD8")]
		public static void PingAll()
		{
		}

		[Token(Token = "0x60018CB")]
		[Address(RVA = "0xF31750", Offset = "0xF31750", VA = "0xF31750")]
		public static List<HapticDevice> GetDevices()
		{
			return null;
		}

		[Token(Token = "0x60018CC")]
		[Address(RVA = "0xF313B8", Offset = "0xF313B8", VA = "0xF313B8")]
		public static List<HapticDevice> GetConnectedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60018CD")]
		[Address(RVA = "0xF31588", Offset = "0xF31588", VA = "0xF31588")]
		public static List<HapticDevice> GetPairedDevices(PositionType pos)
		{
			return null;
		}

		[Token(Token = "0x60018CE")]
		[Address(RVA = "0xF3107C", Offset = "0xF3107C", VA = "0xF3107C")]
		public static void AddRefreshAction(UnityAction action)
		{
		}

		[Token(Token = "0x60018CF")]
		[Address(RVA = "0xF32B94", Offset = "0xF32B94", VA = "0xF32B94")]
		public static void RemoveRefreshAction()
		{
		}

		[Token(Token = "0x60018D0")]
		[Address(RVA = "0xF32C18", Offset = "0xF32C18", VA = "0xF32C18")]
		public static bool IsStreaming()
		{
			return default(bool);
		}

		[Token(Token = "0x60018D1")]
		[Address(RVA = "0xF32CD8", Offset = "0xF32CD8", VA = "0xF32CD8")]
		public static void ToggleStreaming()
		{
		}

		[Token(Token = "0x60018D2")]
		[Address(RVA = "0xF32D94", Offset = "0xF32D94", VA = "0xF32D94")]
		public static List<AndroidUtils.StreamHost> GetStreamingHosts()
		{
			return null;
		}

		[Token(Token = "0x60018D3")]
		[Address(RVA = "0xF32E84", Offset = "0xF32E84", VA = "0xF32E84")]
		public static void ShowBluetoothSetting()
		{
		}

		[Token(Token = "0x60018D4")]
		[Address(RVA = "0xF32F40", Offset = "0xF32F40", VA = "0xF32F40")]
		public static void ToggleEnableDevice(HapticDevice device)
		{
		}

		[Token(Token = "0x60018D5")]
		[Address(RVA = "0xF33020", Offset = "0xF33020", VA = "0xF33020")]
		private void OnApplicationFocus(bool pauseStatus)
		{
		}

		[Token(Token = "0x60018D6")]
		[Address(RVA = "0xF330E4", Offset = "0xF330E4", VA = "0xF330E4")]
		public BhapticsAndroidManager()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000382")]
	public class SettingDeviceIcon
	{
		[Token(Token = "0x4001D4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Sprite pairImage;

		[Token(Token = "0x4001D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Sprite unpairImage;

		[Token(Token = "0x60018D8")]
		[Address(RVA = "0xDD812C", Offset = "0xDD812C", VA = "0xDD812C")]
		public SettingDeviceIcon()
		{
		}
	}
	[Token(Token = "0x2000383")]
	public class Bhaptics_Widget_Setting : ScriptableObject
	{
		[Token(Token = "0x4001D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "HeaderAttribute", RVA = "0x853F04", Offset = "0x853F04")]
		public SettingDeviceIcon SettingTactot;

		[Token(Token = "0x4001D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public SettingDeviceIcon SettingTactal;

		[Token(Token = "0x4001D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SettingDeviceIcon SettingTactosyArm;

		[Token(Token = "0x4001D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SettingDeviceIcon SettingTactosyFoot;

		[Token(Token = "0x4001D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SettingDeviceIcon SettingTactosyHand;

		[Token(Token = "0x60018D9")]
		[Address(RVA = "0xF39F48", Offset = "0xF39F48", VA = "0xF39F48")]
		public Sprite GetPairedDeviceSprite(HapticDevice device)
		{
			return null;
		}

		[Token(Token = "0x60018DA")]
		[Address(RVA = "0xF3A0B0", Offset = "0xF3A0B0", VA = "0xF3A0B0")]
		public Bhaptics_Widget_Setting()
		{
		}
	}
	[Token(Token = "0x2000384")]
	public class HapticApi
	{
		[Token(Token = "0x2000644")]
		public struct point
		{
			[Token(Token = "0x40024E3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public float x;

			[Token(Token = "0x40024E4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
			public float y;

			[Token(Token = "0x40024E5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
			public int intensity;

			[Token(Token = "0x40024E6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
			public int motorCount;
		}

		[Token(Token = "0x2000645")]
		public struct status
		{
			[Token(Token = "0x40024E7")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int[] values;
		}

		[PreserveSig]
		[Token(Token = "0x60018DB")]
		[Address(RVA = "0xBA55F4", Offset = "0xBA55F4", VA = "0xBA55F4")]
		public static extern bool TryGetExePath(byte[] buf, int size);

		[PreserveSig]
		[Token(Token = "0x60018DC")]
		[Address(RVA = "0xBA5694", Offset = "0xBA5694", VA = "0xBA5694")]
		public static extern void Initialise(string appId, string appName);

		[PreserveSig]
		[Token(Token = "0x60018DD")]
		[Address(RVA = "0xBA574C", Offset = "0xBA574C", VA = "0xBA574C")]
		public static extern void Destroy();

		[PreserveSig]
		[Token(Token = "0x60018DE")]
		[Address(RVA = "0xBA57BC", Offset = "0xBA57BC", VA = "0xBA57BC")]
		public static extern void RegisterFeedback(string str, string projectJson);

		[PreserveSig]
		[Token(Token = "0x60018DF")]
		[Address(RVA = "0xBA5870", Offset = "0xBA5870", VA = "0xBA5870")]
		public static extern void RegisterFeedbackFromTactFile(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60018E0")]
		[Address(RVA = "0xBA5928", Offset = "0xBA5928", VA = "0xBA5928")]
		public static extern void RegisterFeedbackFromTactFileReflected(string str, string tactFileStr);

		[PreserveSig]
		[Token(Token = "0x60018E1")]
		[Address(RVA = "0xBA59E0", Offset = "0xBA59E0", VA = "0xBA59E0")]
		public static extern void SubmitRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x60018E2")]
		[Address(RVA = "0xBA5A70", Offset = "0xBA5A70", VA = "0xBA5A70")]
		public static extern void SubmitRegisteredStartMillis(string key, int startTimeMillis);

		[PreserveSig]
		[Token(Token = "0x60018E3")]
		[Address(RVA = "0xBA5B10", Offset = "0xBA5B10", VA = "0xBA5B10")]
		public static extern void SubmitRegisteredWithOption(string key, string altKey, float intensity, float duration, float offsetX, float offsetY);

		[PreserveSig]
		[Token(Token = "0x60018E4")]
		[Address(RVA = "0xBA5BF8", Offset = "0xBA5BF8", VA = "0xBA5BF8")]
		public static extern void SubmitByteArray(string key, PositionType pos, byte[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x60018E5")]
		[Address(RVA = "0xBA5CC0", Offset = "0xBA5CC0", VA = "0xBA5CC0")]
		public static extern void SubmitPathArray(string key, PositionType pos, point[] charPtr, int length, int durationMillis);

		[PreserveSig]
		[Token(Token = "0x60018E6")]
		[Address(RVA = "0xBA5D88", Offset = "0xBA5D88", VA = "0xBA5D88")]
		public static extern bool IsFeedbackRegistered(string key);

		[PreserveSig]
		[Token(Token = "0x60018E7")]
		[Address(RVA = "0xBA5E24", Offset = "0xBA5E24", VA = "0xBA5E24")]
		public static extern bool IsPlaying();

		[PreserveSig]
		[Token(Token = "0x60018E8")]
		[Address(RVA = "0xBA5EA0", Offset = "0xBA5EA0", VA = "0xBA5EA0")]
		public static extern bool IsPlayingKey(string key);

		[PreserveSig]
		[Token(Token = "0x60018E9")]
		[Address(RVA = "0xBA5F3C", Offset = "0xBA5F3C", VA = "0xBA5F3C")]
		public static extern void TurnOff();

		[PreserveSig]
		[Token(Token = "0x60018EA")]
		[Address(RVA = "0xBA5FAC", Offset = "0xBA5FAC", VA = "0xBA5FAC")]
		public static extern void TurnOffKey(string key);

		[PreserveSig]
		[Token(Token = "0x60018EB")]
		[Address(RVA = "0xBA603C", Offset = "0xBA603C", VA = "0xBA603C")]
		public static extern void EnableFeedback();

		[PreserveSig]
		[Token(Token = "0x60018EC")]
		[Address(RVA = "0xBA60A8", Offset = "0xBA60A8", VA = "0xBA60A8")]
		public static extern void DisableFeedback();

		[PreserveSig]
		[Token(Token = "0x60018ED")]
		[Address(RVA = "0xBA6118", Offset = "0xBA6118", VA = "0xBA6118")]
		public static extern void ToggleFeedback();

		[PreserveSig]
		[Token(Token = "0x60018EE")]
		[Address(RVA = "0xBA6184", Offset = "0xBA6184", VA = "0xBA6184")]
		public static extern bool IsDevicePlaying(PositionType pos);

		[PreserveSig]
		[Token(Token = "0x60018EF")]
		[Address(RVA = "0xBA620C", Offset = "0xBA620C", VA = "0xBA620C")]
		public static extern bool TryGetResponseForPosition(PositionType pos, [Out] status status);

		[Token(Token = "0x60018F0")]
		[Address(RVA = "0xBA62E4", Offset = "0xBA62E4", VA = "0xBA62E4")]
		public HapticApi()
		{
		}
	}
	[Token(Token = "0x2000385")]
	public class ArmsHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public bool IsReflect;

		[Token(Token = "0x60018F1")]
		[Address(RVA = "0x1192794", Offset = "0x1192794", VA = "0x1192794", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60018F2")]
		[Address(RVA = "0x1192B84", Offset = "0x1192B84", VA = "0x1192B84", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60018F3")]
		[Address(RVA = "0x1192BAC", Offset = "0x1192BAC", VA = "0x1192BAC")]
		public ArmsHapticClip()
		{
		}
	}
	[Token(Token = "0x2000386")]
	public class BhapticsHaptic : IHaptic
	{
		[Token(Token = "0x60018F4")]
		[Address(RVA = "0xF350CC", Offset = "0xF350CC", VA = "0xF350CC")]
		public BhapticsHaptic()
		{
		}

		[Token(Token = "0x60018F5")]
		[Address(RVA = "0xF3510C", Offset = "0xF3510C", VA = "0xF3510C", Slot = "4")]
		public bool IsConnect(PositionType type)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F6")]
		[Address(RVA = "0xF35118", Offset = "0xF35118", VA = "0xF35118", Slot = "5")]
		public bool IsConnect(HapticDeviceType type, bool isLeft = true)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F7")]
		[Address(RVA = "0xF351D8", Offset = "0xF351D8", VA = "0xF351D8", Slot = "6")]
		public bool IsPlaying(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F8")]
		[Address(RVA = "0xF351E4", Offset = "0xF351E4", VA = "0xF351E4", Slot = "7")]
		public bool IsFeedbackRegistered(string key)
		{
			return default(bool);
		}

		[Token(Token = "0x60018F9")]
		[Address(RVA = "0xF351F0", Offset = "0xF351F0", VA = "0xF351F0", Slot = "8")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60018FA")]
		[Address(RVA = "0xF351F8", Offset = "0xF351F8", VA = "0xF351F8", Slot = "9")]
		public void RegisterTactFileStr(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x60018FB")]
		[Address(RVA = "0xF35208", Offset = "0xF35208", VA = "0xF35208", Slot = "10")]
		public void RegisterTactFileStrReflected(string key, string tactFileStr)
		{
		}

		[Token(Token = "0x60018FC")]
		[Address(RVA = "0xF35218", Offset = "0xF35218", VA = "0xF35218", Slot = "11")]
		public void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x60018FD")]
		[Address(RVA = "0xF3532C", Offset = "0xF3532C", VA = "0xF3532C", Slot = "12")]
		public void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis)
		{
		}

		[Token(Token = "0x60018FE")]
		[Address(RVA = "0xF354FC", Offset = "0xF354FC", VA = "0xF354FC", Slot = "13")]
		public void SubmitRegistered(string key, string altKey, ScaleOption option)
		{
		}

		[Token(Token = "0x60018FF")]
		[Address(RVA = "0xF3552C", Offset = "0xF3552C", VA = "0xF3552C", Slot = "14")]
		public void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption)
		{
		}

		[Token(Token = "0x6001900")]
		[Address(RVA = "0xF3555C", Offset = "0xF3555C", VA = "0xF3555C", Slot = "15")]
		public void SubmitRegistered(string key)
		{
		}

		[Token(Token = "0x6001901")]
		[Address(RVA = "0xF35568", Offset = "0xF35568", VA = "0xF35568", Slot = "16")]
		public void SubmitRegistered(string key, int startTimeMillis)
		{
		}

		[Token(Token = "0x6001902")]
		[Address(RVA = "0xF35578", Offset = "0xF35578", VA = "0xF35578", Slot = "17")]
		public void TurnOff(string key)
		{
		}

		[Token(Token = "0x6001903")]
		[Address(RVA = "0xF35584", Offset = "0xF35584", VA = "0xF35584", Slot = "18")]
		public void TurnOff()
		{
		}

		[Token(Token = "0x6001904")]
		[Address(RVA = "0xF3558C", Offset = "0xF3558C", VA = "0xF3558C", Slot = "19")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6001905")]
		[Address(RVA = "0xF35594", Offset = "0xF35594", VA = "0xF35594", Slot = "20")]
		public int[] GetCurrentFeedback(PositionType pos)
		{
			return null;
		}
	}
	[Token(Token = "0x2000387")]
	public class BhapticsProject
	{
		[Token(Token = "0x4001D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853F3C", Offset = "0x853F3C")]
		private Track[] <Tracks>k__BackingField;

		[Token(Token = "0x4001D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853F4C", Offset = "0x853F4C")]
		private Layout <Layout>k__BackingField;

		[Token(Token = "0x170001BC")]
		public Track[] Tracks
		{
			[Token(Token = "0x6001906")]
			[Address(RVA = "0xF372F0", Offset = "0xF372F0", VA = "0xF372F0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B43C", Offset = "0x85B43C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001907")]
			[Address(RVA = "0xF372F8", Offset = "0xF372F8", VA = "0xF372F8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B44C", Offset = "0x85B44C")]
			set
			{
			}
		}

		[Token(Token = "0x170001BD")]
		public Layout Layout
		{
			[Token(Token = "0x6001908")]
			[Address(RVA = "0xF37300", Offset = "0xF37300", VA = "0xF37300")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B45C", Offset = "0x85B45C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001909")]
			[Address(RVA = "0xF37308", Offset = "0xF37308", VA = "0xF37308")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B46C", Offset = "0x85B46C")]
			set
			{
			}
		}

		[Token(Token = "0x600190A")]
		[Address(RVA = "0xF37310", Offset = "0xF37310", VA = "0xF37310")]
		public static BhapticsProject ToProject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600190B")]
		[Address(RVA = "0xF37540", Offset = "0xF37540", VA = "0xF37540")]
		public JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600190C")]
		[Address(RVA = "0xF37538", Offset = "0xF37538", VA = "0xF37538")]
		public BhapticsProject()
		{
		}
	}
	[Token(Token = "0x2000388")]
	public class HapticFeedbackFile
	{
		[Token(Token = "0x4001D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BhapticsProject Project;

		[Token(Token = "0x600190D")]
		[Address(RVA = "0xB9F36C", Offset = "0xB9F36C", VA = "0xB9F36C")]
		public static HapticFeedbackFile ToHapticFeedbackFile(string jsonStr)
		{
			return null;
		}

		[Token(Token = "0x600190E")]
		[Address(RVA = "0xBA76B8", Offset = "0xBA76B8", VA = "0xBA76B8")]
		public HapticFeedbackFile()
		{
		}
	}
	[Token(Token = "0x2000389")]
	public class Track
	{
		[Token(Token = "0x4001D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853F5C", Offset = "0x853F5C")]
		private HapticEffect[] <Effects>k__BackingField;

		[Token(Token = "0x170001BE")]
		public HapticEffect[] Effects
		{
			[Token(Token = "0x600190F")]
			[Address(RVA = "0x1061DF4", Offset = "0x1061DF4", VA = "0x1061DF4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B47C", Offset = "0x85B47C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001910")]
			[Address(RVA = "0x1061DFC", Offset = "0x1061DFC", VA = "0x1061DFC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B48C", Offset = "0x85B48C")]
			set
			{
			}
		}

		[Token(Token = "0x6001911")]
		[Address(RVA = "0x1061E04", Offset = "0x1061E04", VA = "0x1061E04", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x6001912")]
		[Address(RVA = "0x1061E94", Offset = "0x1061E94", VA = "0x1061E94")]
		internal static Track ToTrack(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001913")]
		[Address(RVA = "0x10620A0", Offset = "0x10620A0", VA = "0x10620A0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001914")]
		[Address(RVA = "0x1062098", Offset = "0x1062098", VA = "0x1062098")]
		public Track()
		{
		}
	}
	[Token(Token = "0x200038A")]
	public class HapticEffect
	{
		[Token(Token = "0x4001D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853F6C", Offset = "0x853F6C")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4001D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853F7C", Offset = "0x853F7C")]
		private int <OffsetTime>k__BackingField;

		[Token(Token = "0x4001D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853F8C", Offset = "0x853F8C")]
		private Dictionary<string, HapticEffectMode> <Modes>k__BackingField;

		[Token(Token = "0x170001BF")]
		public int StartTime
		{
			[Token(Token = "0x6001915")]
			[Address(RVA = "0xBA6B0C", Offset = "0xBA6B0C", VA = "0xBA6B0C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B49C", Offset = "0x85B49C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001916")]
			[Address(RVA = "0xBA6B14", Offset = "0xBA6B14", VA = "0xBA6B14")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B4AC", Offset = "0x85B4AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C0")]
		public int OffsetTime
		{
			[Token(Token = "0x6001917")]
			[Address(RVA = "0xBA6B1C", Offset = "0xBA6B1C", VA = "0xBA6B1C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B4BC", Offset = "0x85B4BC")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001918")]
			[Address(RVA = "0xBA6B24", Offset = "0xBA6B24", VA = "0xBA6B24")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B4CC", Offset = "0x85B4CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C1")]
		public Dictionary<string, HapticEffectMode> Modes
		{
			[Token(Token = "0x6001919")]
			[Address(RVA = "0xBA6B2C", Offset = "0xBA6B2C", VA = "0xBA6B2C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B4DC", Offset = "0x85B4DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x600191A")]
			[Address(RVA = "0xBA6B34", Offset = "0xBA6B34", VA = "0xBA6B34")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B4EC", Offset = "0x85B4EC")]
			set
			{
			}
		}

		[Token(Token = "0x600191B")]
		[Address(RVA = "0xBA6B3C", Offset = "0xBA6B3C", VA = "0xBA6B3C", Slot = "3")]
		public override string ToString()
		{
			return null;
		}

		[Token(Token = "0x600191C")]
		[Address(RVA = "0xBA6E2C", Offset = "0xBA6E2C", VA = "0xBA6E2C")]
		internal static HapticEffect ToEffect(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600191D")]
		[Address(RVA = "0xBA7270", Offset = "0xBA7270", VA = "0xBA7270")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600191E")]
		[Address(RVA = "0xBA70DC", Offset = "0xBA70DC", VA = "0xBA70DC")]
		public HapticEffect()
		{
		}
	}
	[Token(Token = "0x200038B")]
	public class Layout
	{
		[Token(Token = "0x4001D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853F9C", Offset = "0x853F9C")]
		private string <Type>k__BackingField;

		[Token(Token = "0x4001D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853FAC", Offset = "0x853FAC")]
		private Dictionary<string, LayoutObject[]> <Layouts>k__BackingField;

		[Token(Token = "0x170001C2")]
		public string Type
		{
			[Token(Token = "0x600191F")]
			[Address(RVA = "0xCE334C", Offset = "0xCE334C", VA = "0xCE334C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B4FC", Offset = "0x85B4FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001920")]
			[Address(RVA = "0xCE3354", Offset = "0xCE3354", VA = "0xCE3354")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B50C", Offset = "0x85B50C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C3")]
		public Dictionary<string, LayoutObject[]> Layouts
		{
			[Token(Token = "0x6001921")]
			[Address(RVA = "0xCE335C", Offset = "0xCE335C", VA = "0xCE335C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B51C", Offset = "0x85B51C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001922")]
			[Address(RVA = "0xCE3364", Offset = "0xCE3364", VA = "0xCE3364")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B52C", Offset = "0x85B52C")]
			set
			{
			}
		}

		[Token(Token = "0x6001923")]
		[Address(RVA = "0xCE336C", Offset = "0xCE336C", VA = "0xCE336C")]
		internal static Layout ToLayout(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001924")]
		[Address(RVA = "0xCE3868", Offset = "0xCE3868", VA = "0xCE3868")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001925")]
		[Address(RVA = "0xCE371C", Offset = "0xCE371C", VA = "0xCE371C")]
		public Layout()
		{
		}
	}
	[Token(Token = "0x200038C")]
	public class LayoutObject
	{
		[Token(Token = "0x4001D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853FBC", Offset = "0x853FBC")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4001D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853FCC", Offset = "0x853FCC")]
		private float <X>k__BackingField;

		[Token(Token = "0x4001D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853FDC", Offset = "0x853FDC")]
		private float <Y>k__BackingField;

		[Token(Token = "0x170001C4")]
		public int Index
		{
			[Token(Token = "0x6001926")]
			[Address(RVA = "0xCE3CA0", Offset = "0xCE3CA0", VA = "0xCE3CA0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B53C", Offset = "0x85B53C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001927")]
			[Address(RVA = "0xCE3CA8", Offset = "0xCE3CA8", VA = "0xCE3CA8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B54C", Offset = "0x85B54C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C5")]
		public float X
		{
			[Token(Token = "0x6001928")]
			[Address(RVA = "0xCE3CB0", Offset = "0xCE3CB0", VA = "0xCE3CB0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B55C", Offset = "0x85B55C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6001929")]
			[Address(RVA = "0xCE3CB8", Offset = "0xCE3CB8", VA = "0xCE3CB8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B56C", Offset = "0x85B56C")]
			set
			{
			}
		}

		[Token(Token = "0x170001C6")]
		public float Y
		{
			[Token(Token = "0x600192A")]
			[Address(RVA = "0xCE3CC0", Offset = "0xCE3CC0", VA = "0xCE3CC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B57C", Offset = "0x85B57C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600192B")]
			[Address(RVA = "0xCE3CC8", Offset = "0xCE3CC8", VA = "0xCE3CC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B58C", Offset = "0x85B58C")]
			set
			{
			}
		}

		[Token(Token = "0x600192C")]
		[Address(RVA = "0xCE3724", Offset = "0xCE3724", VA = "0xCE3724")]
		internal static LayoutObject ToLayoutObject(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600192D")]
		[Address(RVA = "0xCE3B5C", Offset = "0xCE3B5C", VA = "0xCE3B5C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600192E")]
		[Address(RVA = "0xCE3CD0", Offset = "0xCE3CD0", VA = "0xCE3CD0")]
		public LayoutObject()
		{
		}
	}
	[Token(Token = "0x200038D")]
	public class HapticEffectMode
	{
		[Token(Token = "0x4001D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853FEC", Offset = "0x853FEC")]
		private FeedbackMode <Mode>k__BackingField;

		[Token(Token = "0x4001D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x853FFC", Offset = "0x853FFC")]
		private DotMode <DotMode>k__BackingField;

		[Token(Token = "0x4001D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85400C", Offset = "0x85400C")]
		private PathMode <PathMode>k__BackingField;

		[Token(Token = "0x170001C7")]
		public FeedbackMode Mode
		{
			[Token(Token = "0x600192F")]
			[Address(RVA = "0xBA7680", Offset = "0xBA7680", VA = "0xBA7680")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B59C", Offset = "0x85B59C")]
			get
			{
				return default(FeedbackMode);
			}
			[Token(Token = "0x6001930")]
			[Address(RVA = "0xBA7688", Offset = "0xBA7688", VA = "0xBA7688")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B5AC", Offset = "0x85B5AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C8")]
		public DotMode DotMode
		{
			[Token(Token = "0x6001931")]
			[Address(RVA = "0xBA7690", Offset = "0xBA7690", VA = "0xBA7690")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B5BC", Offset = "0x85B5BC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001932")]
			[Address(RVA = "0xBA7698", Offset = "0xBA7698", VA = "0xBA7698")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B5CC", Offset = "0x85B5CC")]
			set
			{
			}
		}

		[Token(Token = "0x170001C9")]
		public PathMode PathMode
		{
			[Token(Token = "0x6001933")]
			[Address(RVA = "0xBA76A0", Offset = "0xBA76A0", VA = "0xBA76A0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B5DC", Offset = "0x85B5DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001934")]
			[Address(RVA = "0xBA76A8", Offset = "0xBA76A8", VA = "0xBA76A8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B5EC", Offset = "0x85B5EC")]
			set
			{
			}
		}

		[Token(Token = "0x6001935")]
		[Address(RVA = "0xBA70E4", Offset = "0xBA70E4", VA = "0xBA70E4")]
		internal static HapticEffectMode ToMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x6001936")]
		[Address(RVA = "0xBA74E0", Offset = "0xBA74E0", VA = "0xBA74E0")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001937")]
		[Address(RVA = "0xBA76B0", Offset = "0xBA76B0", VA = "0xBA76B0")]
		public HapticEffectMode()
		{
		}
	}
	[Token(Token = "0x200038E")]
	public class DotMode
	{
		[Token(Token = "0x4001D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85401C", Offset = "0x85401C")]
		private bool <DotConnected>k__BackingField;

		[Token(Token = "0x4001D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85402C", Offset = "0x85402C")]
		private DotModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x170001CA")]
		public bool DotConnected
		{
			[Token(Token = "0x6001938")]
			[Address(RVA = "0xC00ABC", Offset = "0xC00ABC", VA = "0xC00ABC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B5FC", Offset = "0x85B5FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6001939")]
			[Address(RVA = "0xC00AC4", Offset = "0xC00AC4", VA = "0xC00AC4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B60C", Offset = "0x85B60C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CB")]
		public DotModeObjectCollection[] Feedback
		{
			[Token(Token = "0x600193A")]
			[Address(RVA = "0xC00AD0", Offset = "0xC00AD0", VA = "0xC00AD0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B61C", Offset = "0x85B61C")]
			get
			{
				return null;
			}
			[Token(Token = "0x600193B")]
			[Address(RVA = "0xC00AD8", Offset = "0xC00AD8", VA = "0xC00AD8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B62C", Offset = "0x85B62C")]
			set
			{
			}
		}

		[Token(Token = "0x600193C")]
		[Address(RVA = "0xC00AE0", Offset = "0xC00AE0", VA = "0xC00AE0")]
		internal static DotMode ToDotMode(JSONObject jsonObj)
		{
			return null;
		}

		[Token(Token = "0x600193D")]
		[Address(RVA = "0xC00FDC", Offset = "0xC00FDC", VA = "0xC00FDC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600193E")]
		[Address(RVA = "0xC00D1C", Offset = "0xC00D1C", VA = "0xC00D1C")]
		public DotMode()
		{
		}
	}
	[Token(Token = "0x200038F")]
	public class DotModeObjectCollection
	{
		[Token(Token = "0x4001D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85403C", Offset = "0x85403C")]
		private int <StartTime>k__BackingField;

		[Token(Token = "0x4001D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85404C", Offset = "0x85404C")]
		private int <EndTime>k__BackingField;

		[Token(Token = "0x4001D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4001D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85405C", Offset = "0x85405C")]
		private DotModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x170001CC")]
		public int StartTime
		{
			[Token(Token = "0x600193F")]
			[Address(RVA = "0xC015B8", Offset = "0xC015B8", VA = "0xC015B8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B63C", Offset = "0x85B63C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001940")]
			[Address(RVA = "0xC015C0", Offset = "0xC015C0", VA = "0xC015C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B64C", Offset = "0x85B64C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CD")]
		public int EndTime
		{
			[Token(Token = "0x6001941")]
			[Address(RVA = "0xC015C8", Offset = "0xC015C8", VA = "0xC015C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B65C", Offset = "0x85B65C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001942")]
			[Address(RVA = "0xC015D0", Offset = "0xC015D0", VA = "0xC015D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B66C", Offset = "0x85B66C")]
			set
			{
			}
		}

		[Token(Token = "0x170001CE")]
		public DotModeObject[] PointList
		{
			[Token(Token = "0x6001943")]
			[Address(RVA = "0xC015D8", Offset = "0xC015D8", VA = "0xC015D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B67C", Offset = "0x85B67C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001944")]
			[Address(RVA = "0xC015E0", Offset = "0xC015E0", VA = "0xC015E0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B68C", Offset = "0x85B68C")]
			set
			{
			}
		}

		[Token(Token = "0x6001945")]
		[Address(RVA = "0xC00D24", Offset = "0xC00D24", VA = "0xC00D24")]
		internal static DotModeObjectCollection ToObject(JSONObject val)
		{
			return null;
		}

		[Token(Token = "0x6001946")]
		[Address(RVA = "0xC0116C", Offset = "0xC0116C", VA = "0xC0116C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001947")]
		[Address(RVA = "0xC015E8", Offset = "0xC015E8", VA = "0xC015E8")]
		public DotModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x2000390")]
	public class DotModeObject
	{
		[Token(Token = "0x4001D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85406C", Offset = "0x85406C")]
		private int <Index>k__BackingField;

		[Token(Token = "0x4001D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85407C", Offset = "0x85407C")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x170001CF")]
		public int Index
		{
			[Token(Token = "0x6001948")]
			[Address(RVA = "0xC013C0", Offset = "0xC013C0", VA = "0xC013C0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B69C", Offset = "0x85B69C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001949")]
			[Address(RVA = "0xC013C8", Offset = "0xC013C8", VA = "0xC013C8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B6AC", Offset = "0x85B6AC")]
			set
			{
			}
		}

		[Token(Token = "0x170001D0")]
		public float Intensity
		{
			[Token(Token = "0x600194A")]
			[Address(RVA = "0xC013D0", Offset = "0xC013D0", VA = "0xC013D0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B6BC", Offset = "0x85B6BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600194B")]
			[Address(RVA = "0xC013D8", Offset = "0xC013D8", VA = "0xC013D8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B6CC", Offset = "0x85B6CC")]
			set
			{
			}
		}

		[Token(Token = "0x600194C")]
		[Address(RVA = "0xC013E0", Offset = "0xC013E0", VA = "0xC013E0")]
		internal static DotModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x600194D")]
		[Address(RVA = "0xC014AC", Offset = "0xC014AC", VA = "0xC014AC")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x600194E")]
		[Address(RVA = "0xC014A4", Offset = "0xC014A4", VA = "0xC014A4")]
		public DotModeObject()
		{
		}
	}
	[Token(Token = "0x2000391")]
	public class PathMode
	{
		[Token(Token = "0x4001D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85408C", Offset = "0x85408C")]
		private PathModeObjectCollection[] <Feedback>k__BackingField;

		[Token(Token = "0x170001D1")]
		public PathModeObjectCollection[] Feedback
		{
			[Token(Token = "0x600194F")]
			[Address(RVA = "0x1B6607C", Offset = "0x1B6607C", VA = "0x1B6607C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B6DC", Offset = "0x85B6DC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001950")]
			[Address(RVA = "0x1B66084", Offset = "0x1B66084", VA = "0x1B66084")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B6EC", Offset = "0x85B6EC")]
			set
			{
			}
		}

		[Token(Token = "0x6001951")]
		[Address(RVA = "0x1B6608C", Offset = "0x1B6608C", VA = "0x1B6608C")]
		internal static PathMode ToPathMode(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001952")]
		[Address(RVA = "0x1B6654C", Offset = "0x1B6654C", VA = "0x1B6654C")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001953")]
		[Address(RVA = "0x1B66274", Offset = "0x1B66274", VA = "0x1B66274")]
		public PathMode()
		{
		}
	}
	[Token(Token = "0x2000392")]
	public class PathModeObjectCollection
	{
		[Token(Token = "0x4001D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PlaybackType PlaybackType;

		[Token(Token = "0x4001D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public PathMovingPattern MovingPattern;

		[Token(Token = "0x4001D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85409C", Offset = "0x85409C")]
		private PathModeObject[] <PointList>k__BackingField;

		[Token(Token = "0x170001D2")]
		public PathModeObject[] PointList
		{
			[Token(Token = "0x6001954")]
			[Address(RVA = "0x1B66BC0", Offset = "0x1B66BC0", VA = "0x1B66BC0")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B6FC", Offset = "0x85B6FC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6001955")]
			[Address(RVA = "0x1B66BC8", Offset = "0x1B66BC8", VA = "0x1B66BC8")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B70C", Offset = "0x85B70C")]
			set
			{
			}
		}

		[Token(Token = "0x6001956")]
		[Address(RVA = "0x1B6627C", Offset = "0x1B6627C", VA = "0x1B6627C")]
		internal static PathModeObjectCollection ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001957")]
		[Address(RVA = "0x1B66670", Offset = "0x1B66670", VA = "0x1B66670")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001958")]
		[Address(RVA = "0x1B66BD0", Offset = "0x1B66BD0", VA = "0x1B66BD0")]
		public PathModeObjectCollection()
		{
		}
	}
	[Token(Token = "0x2000393")]
	public class PathModeObject
	{
		[Token(Token = "0x4001D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8540AC", Offset = "0x8540AC")]
		private float <X>k__BackingField;

		[Token(Token = "0x4001D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8540BC", Offset = "0x8540BC")]
		private float <Y>k__BackingField;

		[Token(Token = "0x4001D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8540CC", Offset = "0x8540CC")]
		private float <Intensity>k__BackingField;

		[Token(Token = "0x4001D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x8540DC", Offset = "0x8540DC")]
		private int <Time>k__BackingField;

		[Token(Token = "0x170001D3")]
		public float X
		{
			[Token(Token = "0x6001959")]
			[Address(RVA = "0x1B668D4", Offset = "0x1B668D4", VA = "0x1B668D4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B71C", Offset = "0x85B71C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600195A")]
			[Address(RVA = "0x1B668DC", Offset = "0x1B668DC", VA = "0x1B668DC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B72C", Offset = "0x85B72C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D4")]
		public float Y
		{
			[Token(Token = "0x600195B")]
			[Address(RVA = "0x1B668E4", Offset = "0x1B668E4", VA = "0x1B668E4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B73C", Offset = "0x85B73C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600195C")]
			[Address(RVA = "0x1B668EC", Offset = "0x1B668EC", VA = "0x1B668EC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B74C", Offset = "0x85B74C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D5")]
		public float Intensity
		{
			[Token(Token = "0x600195D")]
			[Address(RVA = "0x1B668F4", Offset = "0x1B668F4", VA = "0x1B668F4")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B75C", Offset = "0x85B75C")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600195E")]
			[Address(RVA = "0x1B668FC", Offset = "0x1B668FC", VA = "0x1B668FC")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B76C", Offset = "0x85B76C")]
			set
			{
			}
		}

		[Token(Token = "0x170001D6")]
		public int Time
		{
			[Token(Token = "0x600195F")]
			[Address(RVA = "0x1B66904", Offset = "0x1B66904", VA = "0x1B66904")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B77C", Offset = "0x85B77C")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6001960")]
			[Address(RVA = "0x1B6690C", Offset = "0x1B6690C", VA = "0x1B6690C")]
			[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x85B78C", Offset = "0x85B78C")]
			set
			{
			}
		}

		[Token(Token = "0x6001961")]
		[Address(RVA = "0x1B66914", Offset = "0x1B66914", VA = "0x1B66914")]
		internal static PathModeObject ToObject(JSONObject jsonObject)
		{
			return null;
		}

		[Token(Token = "0x6001962")]
		[Address(RVA = "0x1B66A34", Offset = "0x1B66A34", VA = "0x1B66A34")]
		internal JSONObject ToJsonObject()
		{
			return null;
		}

		[Token(Token = "0x6001963")]
		[Address(RVA = "0x1B66A2C", Offset = "0x1B66A2C", VA = "0x1B66A2C")]
		public PathModeObject()
		{
		}
	}
	[Token(Token = "0x2000394")]
	internal class ParseUtil
	{
		[Token(Token = "0x6001964")]
		[Address(RVA = "0x1B65CFC", Offset = "0x1B65CFC", VA = "0x1B65CFC")]
		internal static float GetFloat(JSONObject obj, string key, float defaultValue = -1f)
		{
			return default(float);
		}

		[Token(Token = "0x6001965")]
		[Address(RVA = "0x1B65E5C", Offset = "0x1B65E5C", VA = "0x1B65E5C")]
		internal static int GetInt(JSONObject obj, string key, int defaultValue = -1)
		{
			return default(int);
		}

		[Token(Token = "0x6001966")]
		[Address(RVA = "0x1B65FBC", Offset = "0x1B65FBC", VA = "0x1B65FBC")]
		public ParseUtil()
		{
		}
	}
	[Token(Token = "0x2000395")]
	public class BhapticsUtils
	{
		[Token(Token = "0x4001D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static bool isInit;

		[Token(Token = "0x4001D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static string exeFilePath;

		[Token(Token = "0x4001D73")]
		public const string TypeHead = "Head";

		[Token(Token = "0x4001D74")]
		public const string TypeTactal = "Tactal";

		[Token(Token = "0x4001D75")]
		public const string TypeVest = "Vest";

		[Token(Token = "0x4001D76")]
		public const string TypeTactot = "Tactot";

		[Token(Token = "0x4001D77")]
		public const string TypeTactosy = "Tactosy";

		[Token(Token = "0x4001D78")]
		public const string TypeTactosy2 = "Tactosy2";

		[Token(Token = "0x4001D79")]
		public const string TypeHand = "Hand";

		[Token(Token = "0x4001D7A")]
		public const string TypeFoot = "Foot";

		[Token(Token = "0x6001967")]
		private static T[] SubArray<T>(T[] data, int index, int length)
		{
			return null;
		}

		[Token(Token = "0x6001968")]
		[Address(RVA = "0xF38F58", Offset = "0xF38F58", VA = "0xF38F58")]
		public static string GetExePath()
		{
			return null;
		}

		[Token(Token = "0x6001969")]
		[Address(RVA = "0xF38F9C", Offset = "0xF38F9C", VA = "0xF38F9C")]
		public static bool IsPlayerInstalled()
		{
			return default(bool);
		}

		[Token(Token = "0x600196A")]
		[Address(RVA = "0xF38FA4", Offset = "0xF38FA4", VA = "0xF38FA4")]
		public static bool IsPlayerRunning()
		{
			return default(bool);
		}

		[Token(Token = "0x600196B")]
		[Address(RVA = "0xF38FAC", Offset = "0xF38FAC", VA = "0xF38FAC")]
		private static bool Is64BitBuild()
		{
			return default(bool);
		}

		[Token(Token = "0x600196C")]
		[Address(RVA = "0xF38FCC", Offset = "0xF38FCC", VA = "0xF38FCC")]
		public static void LaunchPlayer(bool tryLaunch)
		{
		}

		[Token(Token = "0x600196D")]
		[Address(RVA = "0xF38FD0", Offset = "0xF38FD0", VA = "0xF38FD0")]
		public static float Angle(Vector3 fwd, Vector3 targetDir)
		{
			return default(float);
		}

		[Token(Token = "0x600196E")]
		[Address(RVA = "0xF390F0", Offset = "0xF390F0", VA = "0xF390F0")]
		private static int AngleDir(Vector3 fwd, Vector3 targetDir, Vector3 up)
		{
			return default(int);
		}

		[Token(Token = "0x600196F")]
		[Address(RVA = "0xF349F8", Offset = "0xF349F8", VA = "0xF349F8")]
		public static PositionType ToPositionType(HapticClipPositionType pos)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001970")]
		[Address(RVA = "0xF3135C", Offset = "0xF3135C", VA = "0xF3135C")]
		public static PositionType ToPositionType(HapticDeviceType pos, bool isLeft = true)
		{
			return default(PositionType);
		}

		[Token(Token = "0x6001971")]
		[Address(RVA = "0xF39148", Offset = "0xF39148", VA = "0xF39148")]
		public BhapticsUtils()
		{
		}
	}
	[Token(Token = "0x2000396")]
	public class FeetHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6001973")]
		[Address(RVA = "0xB9F278", Offset = "0xB9F278", VA = "0xB9F278")]
		public FeetHapticClip()
		{
		}
	}
	[Token(Token = "0x2000397")]
	public class FileHapticClip : HapticClip
	{
		[Token(Token = "0x4001D7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8540EC", Offset = "0x8540EC")]
		public float Intensity;

		[Token(Token = "0x4001D7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854108", Offset = "0x854108")]
		public float Duration;

		[Token(Token = "0x4001D7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public HapticDeviceType ClipType;

		[Token(Token = "0x4001D7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string JsonValue;

		[Token(Token = "0x4001D7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		protected int _clipDurationTime;

		[Token(Token = "0x170001D7")]
		public int ClipDurationTime
		{
			[Token(Token = "0x6001974")]
			[Address(RVA = "0xB9F334", Offset = "0xB9F334", VA = "0xB9F334")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6001975")]
		[Address(RVA = "0xB9F4E8", Offset = "0xB9F4E8", VA = "0xB9F4E8", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x6001976")]
		[Address(RVA = "0xB9F550", Offset = "0xB9F550", VA = "0xB9F550", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x6001977")]
		[Address(RVA = "0xB9F568", Offset = "0xB9F568", VA = "0xB9F568", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001978")]
		[Address(RVA = "0xB9F580", Offset = "0xB9F580", VA = "0xB9F580", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001979")]
		[Address(RVA = "0xB9F594", Offset = "0xB9F594", VA = "0xB9F594", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x600197A")]
		[Address(RVA = "0xB9F5A4", Offset = "0xB9F5A4", VA = "0xB9F5A4", Slot = "9")]
		public override void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x600197B")]
		[Address(RVA = "0xB9F6D4", Offset = "0xB9F6D4", VA = "0xB9F6D4", Slot = "10")]
		public override void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x600197C")]
		[Address(RVA = "0xB9F7F4", Offset = "0xB9F7F4", VA = "0xB9F7F4", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x600197D")]
		[Address(RVA = "0xB9FA80", Offset = "0xB9FA80", VA = "0xB9FA80", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x600197E")]
		[Address(RVA = "0xB9F44C", Offset = "0xB9F44C", VA = "0xB9F44C")]
		private int CalculateClipDutationTime(HapticFeedbackFile hapticFeedbackFile)
		{
			return default(int);
		}

		[Token(Token = "0x600197F")]
		[Address(RVA = "0xB9FA90", Offset = "0xB9FA90", VA = "0xB9FA90")]
		public FileHapticClip()
		{
		}
	}
	[Token(Token = "0x2000398")]
	public class HandsHapticClip : ArmsHapticClip
	{
		[Token(Token = "0x6001980")]
		[Address(RVA = "0xBA44B8", Offset = "0xBA44B8", VA = "0xBA44B8")]
		public HandsHapticClip()
		{
		}
	}
	[Token(Token = "0x2000399")]
	public enum HapticDeviceType
	{
		[Token(Token = "0x4001D81")]
		None,
		[Token(Token = "0x4001D82")]
		Tactal,
		[Token(Token = "0x4001D83")]
		TactSuit,
		[Token(Token = "0x4001D84")]
		Tactosy_arms,
		[Token(Token = "0x4001D85")]
		Tactosy_hands,
		[Token(Token = "0x4001D86")]
		Tactosy_feet
	}
	[Serializable]
	[Token(Token = "0x200039A")]
	public enum HapticClipPositionType
	{
		[Token(Token = "0x4001D88")]
		VestFront,
		[Token(Token = "0x4001D89")]
		VestBack,
		[Token(Token = "0x4001D8A")]
		Head,
		[Token(Token = "0x4001D8B")]
		RightForearm,
		[Token(Token = "0x4001D8C")]
		LeftForearm,
		[Token(Token = "0x4001D8D")]
		LeftHand,
		[Token(Token = "0x4001D8E")]
		RightHand,
		[Token(Token = "0x4001D8F")]
		LeftFoot,
		[Token(Token = "0x4001D90")]
		RightFoot
	}
	[Token(Token = "0x200039B")]
	public class HapticClip : ScriptableObject
	{
		[NonSerialized]
		[Token(Token = "0x4001D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected string assetId;

		[NonSerialized]
		[Token(Token = "0x4001D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string keyId;

		[Token(Token = "0x6001981")]
		[Address(RVA = "0xBA62EC", Offset = "0xBA62EC", VA = "0xBA62EC", Slot = "4")]
		public virtual void Play()
		{
		}

		[Token(Token = "0x6001982")]
		[Address(RVA = "0xBA6358", Offset = "0xBA6358", VA = "0xBA6358", Slot = "5")]
		public virtual void Play(string identifier)
		{
		}

		[Token(Token = "0x6001983")]
		[Address(RVA = "0xBA6374", Offset = "0xBA6374", VA = "0xBA6374", Slot = "6")]
		public virtual void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x6001984")]
		[Address(RVA = "0xBA638C", Offset = "0xBA638C", VA = "0xBA638C", Slot = "7")]
		public virtual void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x6001985")]
		[Address(RVA = "0xBA63A0", Offset = "0xBA63A0", VA = "0xBA63A0", Slot = "8")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x6001986")]
		[Address(RVA = "0xBA63B0", Offset = "0xBA63B0", VA = "0xBA63B0", Slot = "9")]
		public virtual void Play(Vector3 contactPos, Collider targetCollider, string identifier = "")
		{
		}

		[Token(Token = "0x6001987")]
		[Address(RVA = "0xBA64E0", Offset = "0xBA64E0", VA = "0xBA64E0", Slot = "10")]
		public virtual void Play(Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6001988")]
		[Address(RVA = "0xBA65FC", Offset = "0xBA65FC", VA = "0xBA65FC", Slot = "11")]
		public virtual void Play(float intensity, float duration, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight, string identifier = "")
		{
		}

		[Token(Token = "0x6001989")]
		[Address(RVA = "0xBA6708", Offset = "0xBA6708", VA = "0xBA6708", Slot = "12")]
		public virtual void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x600198A")]
		[Address(RVA = "0xBA670C", Offset = "0xBA670C", VA = "0xBA670C", Slot = "13")]
		public virtual void Stop()
		{
		}

		[Token(Token = "0x600198B")]
		[Address(RVA = "0xBA67EC", Offset = "0xBA67EC", VA = "0xBA67EC", Slot = "14")]
		public virtual void Stop(string identifier)
		{
		}

		[Token(Token = "0x600198C")]
		[Address(RVA = "0xBA68F8", Offset = "0xBA68F8", VA = "0xBA68F8", Slot = "15")]
		public virtual bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600198D")]
		[Address(RVA = "0xBA69F0", Offset = "0xBA69F0", VA = "0xBA69F0", Slot = "16")]
		public virtual bool IsPlaying(string identifier)
		{
			return default(bool);
		}

		[Token(Token = "0x600198E")]
		[Address(RVA = "0xB9FA8C", Offset = "0xB9FA8C", VA = "0xB9FA8C", Slot = "17")]
		public virtual void ResetValues()
		{
		}

		[Token(Token = "0x600198F")]
		[Address(RVA = "0xBA6AFC", Offset = "0xBA6AFC", VA = "0xBA6AFC")]
		public string GetAssetID()
		{
			return null;
		}

		[Token(Token = "0x6001990")]
		[Address(RVA = "0xB9FAA4", Offset = "0xB9FAA4", VA = "0xB9FAA4")]
		public HapticClip()
		{
		}
	}
	[Token(Token = "0x200039C")]
	public class HapticReceiver : MonoBehaviour
	{
		[Token(Token = "0x4001D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool IsActive;

		[Token(Token = "0x4001D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public PositionTag PositionTag;

		[Token(Token = "0x6001991")]
		[Address(RVA = "0xBA76C0", Offset = "0xBA76C0", VA = "0xBA76C0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6001992")]
		[Address(RVA = "0xBA7844", Offset = "0xBA7844", VA = "0xBA7844")]
		private void OnTriggerEnter(Collider bullet)
		{
		}

		[Token(Token = "0x6001993")]
		[Address(RVA = "0xBA7A00", Offset = "0xBA7A00", VA = "0xBA7A00")]
		private void OnCollisionEnter(Collision bullet)
		{
		}

		[Token(Token = "0x6001994")]
		[Address(RVA = "0xBA7910", Offset = "0xBA7910", VA = "0xBA7910")]
		private void Handle(Vector3 contactPoint, HapticSender tactSender)
		{
		}

		[Token(Token = "0x6001995")]
		[Address(RVA = "0xBA7C08", Offset = "0xBA7C08", VA = "0xBA7C08")]
		public HapticReceiver()
		{
		}
	}
	[Token(Token = "0x200039D")]
	public class HapticSender : MonoBehaviour
	{
		[Token(Token = "0x4001D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip[] DefaultClips;

		[Token(Token = "0x4001D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public HeadHapticClip[] HeadClips;

		[Token(Token = "0x4001D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public VestHapticClip[] BodyClips;

		[Token(Token = "0x4001D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public ArmsHapticClip[] LeftArmClips;

		[Token(Token = "0x4001D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public ArmsHapticClip[] RightArmClips;

		[Token(Token = "0x4001D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float yOffsetMultiplier;

		[Token(Token = "0x6001996")]
		[Address(RVA = "0xBA7C18", Offset = "0xBA7C18", VA = "0xBA7C18")]
		public void Play(PositionTag posTag = PositionTag.Default)
		{
		}

		[Token(Token = "0x6001997")]
		[Address(RVA = "0xBA7AF0", Offset = "0xBA7AF0", VA = "0xBA7AF0")]
		public void Play(PositionTag posTag, Vector3 contactPos, Collider targetCollider)
		{
		}

		[Token(Token = "0x6001998")]
		[Address(RVA = "0xBA7EAC", Offset = "0xBA7EAC", VA = "0xBA7EAC")]
		private void Play(PositionTag posTag, Vector3 contactPos, Vector3 targetPos, Vector3 targetForward, float targetHeight)
		{
		}

		[Token(Token = "0x6001999")]
		[Address(RVA = "0xBA7FBC", Offset = "0xBA7FBC", VA = "0xBA7FBC")]
		public void Play(PositionTag posTag, RaycastHit hit)
		{
		}

		[Token(Token = "0x600199A")]
		[Address(RVA = "0xBA80F0", Offset = "0xBA80F0", VA = "0xBA80F0")]
		private HapticClip GetClip(PositionTag posTag)
		{
			return null;
		}

		[Token(Token = "0x600199B")]
		[Address(RVA = "0xBA821C", Offset = "0xBA821C", VA = "0xBA821C")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x600199C")]
		[Address(RVA = "0xBA7C24", Offset = "0xBA7C24", VA = "0xBA7C24")]
		public void Play(PositionTag posTag, float angleX, float offsetY)
		{
		}

		[Token(Token = "0x600199D")]
		[Address(RVA = "0xBA8224", Offset = "0xBA8224", VA = "0xBA8224")]
		public HapticSender()
		{
		}
	}
	[Token(Token = "0x200039E")]
	public enum PositionTag
	{
		[Token(Token = "0x4001D9C")]
		Body,
		[Token(Token = "0x4001D9D")]
		Head,
		[Token(Token = "0x4001D9E")]
		LeftArm,
		[Token(Token = "0x4001D9F")]
		RightArm,
		[Token(Token = "0x4001DA0")]
		Default
	}
	[Token(Token = "0x200039F")]
	public class HapticSource : MonoBehaviour
	{
		[Token(Token = "0x2000646")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B630", Offset = "0x84B630")]
		private sealed class <PlayCoroutine>d__13 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024E8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024E9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024EA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float delaySecond;

			[Token(Token = "0x40024EB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public HapticSource <>4__this;

			[Token(Token = "0x1700032B")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023CF")]
				[Address(RVA = "0x19B1358", Offset = "0x19B1358", VA = "0x19B1358", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032C")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023D1")]
				[Address(RVA = "0x19B13A0", Offset = "0x19B13A0", VA = "0x19B13A0", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023CC")]
			[Address(RVA = "0x19B1240", Offset = "0x19B1240", VA = "0x19B1240")]
			[DebuggerHidden]
			public <PlayCoroutine>d__13(int <>1__state)
			{
			}

			[Token(Token = "0x60023CD")]
			[Address(RVA = "0x19B126C", Offset = "0x19B126C", VA = "0x19B126C", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023CE")]
			[Address(RVA = "0x19B1270", Offset = "0x19B1270", VA = "0x19B1270", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D0")]
			[Address(RVA = "0x19B1360", Offset = "0x19B1360", VA = "0x19B1360", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x2000647")]
		[AttributeAttribute(Name = "CompilerGeneratedAttribute", RVA = "0x84B640", Offset = "0x84B640")]
		private sealed class <PlayLoopCoroutine>d__15 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x40024EC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x40024ED")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x40024EE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public HapticSource <>4__this;

			[Token(Token = "0x40024EF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			private WaitForSeconds <duration>5__2;

			[Token(Token = "0x1700032D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x60023D5")]
				[Address(RVA = "0x19B15C0", Offset = "0x19B15C0", VA = "0x19B15C0", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700032E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x60023D7")]
				[Address(RVA = "0x19B1608", Offset = "0x19B1608", VA = "0x19B1608", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60023D2")]
			[Address(RVA = "0x19B13A8", Offset = "0x19B13A8", VA = "0x19B13A8")]
			[DebuggerHidden]
			public <PlayLoopCoroutine>d__15(int <>1__state)
			{
			}

			[Token(Token = "0x60023D3")]
			[Address(RVA = "0x19B13D4", Offset = "0x19B13D4", VA = "0x19B13D4", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x60023D4")]
			[Address(RVA = "0x19B13D8", Offset = "0x19B13D8", VA = "0x19B13D8", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x60023D6")]
			[Address(RVA = "0x19B15C8", Offset = "0x19B15C8", VA = "0x19B15C8", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4001DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClip clip;

		[Token(Token = "0x4001DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool playOnAwake;

		[Token(Token = "0x4001DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool loop;

		[Token(Token = "0x4001DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float loopDelaySeconds;

		[Token(Token = "0x4001DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Coroutine currentCoroutine;

		[Token(Token = "0x4001DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine loopCoroutine;

		[Token(Token = "0x4001DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool isLooping;

		[Token(Token = "0x600199E")]
		[Address(RVA = "0xBA8234", Offset = "0xBA8234", VA = "0xBA8234")]
		private void Awake()
		{
		}

		[Token(Token = "0x600199F")]
		[Address(RVA = "0xBA8870", Offset = "0xBA8870", VA = "0xBA8870")]
		public void Play()
		{
		}

		[Token(Token = "0x60019A0")]
		[Address(RVA = "0xBA8570", Offset = "0xBA8570", VA = "0xBA8570")]
		public void PlayLoop()
		{
		}

		[Token(Token = "0x60019A1")]
		[Address(RVA = "0xBA88F4", Offset = "0xBA88F4", VA = "0xBA88F4")]
		public void PlayDelayed(float delaySecond = 0f)
		{
		}

		[Token(Token = "0x60019A2")]
		[Address(RVA = "0xBA8B1C", Offset = "0xBA8B1C", VA = "0xBA8B1C")]
		public void Stop()
		{
		}

		[Token(Token = "0x60019A3")]
		[Address(RVA = "0xBA8C14", Offset = "0xBA8C14", VA = "0xBA8C14")]
		public bool IsPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x60019A4")]
		[Address(RVA = "0xBA8A8C", Offset = "0xBA8A8C", VA = "0xBA8A8C")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B79C", Offset = "0x85B79C")]
		private IEnumerator PlayCoroutine(float delaySecond)
		{
			return null;
		}

		[Token(Token = "0x60019A5")]
		[Address(RVA = "0xBA86FC", Offset = "0xBA86FC", VA = "0xBA86FC")]
		private void PlayHapticClip()
		{
		}

		[Token(Token = "0x60019A6")]
		[Address(RVA = "0xBA8874", Offset = "0xBA8874", VA = "0xBA8874")]
		[AttributeAttribute(Name = "IteratorStateMachineAttribute", RVA = "0x85B804", Offset = "0x85B804")]
		private IEnumerator PlayLoopCoroutine()
		{
			return null;
		}

		[Token(Token = "0x60019A7")]
		[Address(RVA = "0xBA8CBC", Offset = "0xBA8CBC", VA = "0xBA8CBC")]
		public HapticSource()
		{
		}
	}
	[Token(Token = "0x20003A0")]
	public class HeadHapticClip : FileHapticClip
	{
		[Token(Token = "0x60019A8")]
		[Address(RVA = "0xBA8CC4", Offset = "0xBA8CC4", VA = "0xBA8CC4")]
		public HeadHapticClip()
		{
		}
	}
	[Token(Token = "0x20003A1")]
	public interface IHaptic
	{
		[Token(Token = "0x60019A9")]
		bool IsConnect(PositionType type);

		[Token(Token = "0x60019AA")]
		bool IsConnect(HapticDeviceType type, bool isLeft = true);

		[Token(Token = "0x60019AB")]
		bool IsPlaying(string key);

		[Token(Token = "0x60019AC")]
		bool IsFeedbackRegistered(string key);

		[Token(Token = "0x60019AD")]
		bool IsPlaying();

		[Token(Token = "0x60019AE")]
		void RegisterTactFileStr(string key, string tactFileStr);

		[Token(Token = "0x60019AF")]
		void RegisterTactFileStrReflected(string key, string tactFileStr);

		[Token(Token = "0x60019B0")]
		void Submit(string key, PositionType position, List<DotPoint> points, int durationMillis);

		[Token(Token = "0x60019B1")]
		void Submit(string key, PositionType position, List<PathPoint> points, int durationMillis);

		[Token(Token = "0x60019B2")]
		void SubmitRegistered(string key, string altKey, ScaleOption option);

		[Token(Token = "0x60019B3")]
		void SubmitRegistered(string key, string altKey, RotationOption rOption, ScaleOption sOption);

		[Token(Token = "0x60019B4")]
		void SubmitRegistered(string key);

		[Token(Token = "0x60019B5")]
		void SubmitRegistered(string key, int startTimeMillis);

		[Token(Token = "0x60019B6")]
		void TurnOff(string key);

		[Token(Token = "0x60019B7")]
		void TurnOff();

		[Token(Token = "0x60019B8")]
		void Dispose();

		[Token(Token = "0x60019B9")]
		int[] GetCurrentFeedback(PositionType pos);
	}
	[Token(Token = "0x20003A2")]
	[AttributeAttribute(Name = "CreateAssetMenuAttribute", RVA = "0x84933C", Offset = "0x84933C")]
	public class SimpleHapticClip : HapticClip
	{
		[Token(Token = "0x4001DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static readonly Point[] DefaultPoints;

		[Token(Token = "0x4001DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private HapticClipPositionType Position;

		[Token(Token = "0x4001DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private SimpleHapticType Mode;

		[Token(Token = "0x4001DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int[] DotPoints;

		[Token(Token = "0x4001DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Point[] Points;

		[Token(Token = "0x4001DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854174", Offset = "0x854174")]
		public int TimeMillis;

		[Token(Token = "0x60019BA")]
		[Address(RVA = "0xDD9D44", Offset = "0xDD9D44", VA = "0xDD9D44", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60019BB")]
		[Address(RVA = "0xDDA254", Offset = "0xDDA254", VA = "0xDDA254", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60019BC")]
		[Address(RVA = "0xDD9FE4", Offset = "0xDD9FE4", VA = "0xDD9FE4")]
		private static List<DotPoint> Convert(int[] points)
		{
			return null;
		}

		[Token(Token = "0x60019BD")]
		[Address(RVA = "0xDDA114", Offset = "0xDDA114", VA = "0xDDA114")]
		private static List<PathPoint> Convert(Point[] points)
		{
			return null;
		}

		[Token(Token = "0x60019BE")]
		[Address(RVA = "0xDDA308", Offset = "0xDDA308", VA = "0xDDA308")]
		public SimpleHapticClip()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A3")]
	public class Point
	{
		[Token(Token = "0x4001DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854190", Offset = "0x854190")]
		public float X;

		[Token(Token = "0x4001DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8541A8", Offset = "0x8541A8")]
		public float Y;

		[Token(Token = "0x4001DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8541C0", Offset = "0x8541C0")]
		public int Intensity;

		[Token(Token = "0x60019C0")]
		[Address(RVA = "0x1B6D83C", Offset = "0x1B6D83C", VA = "0x1B6D83C")]
		public Point(float x, float y, int intensity)
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20003A4")]
	public enum SimpleHapticType
	{
		[Token(Token = "0x4001DB2")]
		DotMode = 1,
		[Token(Token = "0x4001DB3")]
		PathMode
	}
	[Token(Token = "0x20003A5")]
	public class VestHapticClip : FileHapticClip
	{
		[Token(Token = "0x4001DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x8541DC", Offset = "0x8541DC")]
		protected float TactFileAngleX;

		[Token(Token = "0x4001DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854220", Offset = "0x854220")]
		protected float TactFileOffsetY;

		[Token(Token = "0x4001DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private RotationOption _rotationOption;

		[Token(Token = "0x4001DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private ScaleOption _scaleOption;

		[Token(Token = "0x60019C1")]
		[Address(RVA = "0xC35718", Offset = "0xC35718", VA = "0xC35718", Slot = "4")]
		public override void Play()
		{
		}

		[Token(Token = "0x60019C2")]
		[Address(RVA = "0xC3577C", Offset = "0xC3577C", VA = "0xC3577C", Slot = "5")]
		public override void Play(string identifier)
		{
		}

		[Token(Token = "0x60019C3")]
		[Address(RVA = "0xC35790", Offset = "0xC35790", VA = "0xC35790", Slot = "6")]
		public override void Play(float intensity, string identifier = "")
		{
		}

		[Token(Token = "0x60019C4")]
		[Address(RVA = "0xC357A4", Offset = "0xC357A4", VA = "0xC357A4", Slot = "7")]
		public override void Play(float intensity, float duration, string identifier = "")
		{
		}

		[Token(Token = "0x60019C5")]
		[Address(RVA = "0xC357B4", Offset = "0xC357B4", VA = "0xC357B4", Slot = "8")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, string identifier = "")
		{
		}

		[Token(Token = "0x60019C6")]
		[Address(RVA = "0xC357C4", Offset = "0xC357C4", VA = "0xC357C4", Slot = "12")]
		public override void Play(float intensity, float duration, float vestRotationAngleX, float vestRotationOffsetY, string identifier = "")
		{
		}

		[Token(Token = "0x60019C7")]
		[Address(RVA = "0xC35A74", Offset = "0xC35A74", VA = "0xC35A74", Slot = "17")]
		public override void ResetValues()
		{
		}

		[Token(Token = "0x60019C8")]
		[Address(RVA = "0xC35A9C", Offset = "0xC35A9C", VA = "0xC35A9C")]
		public VestHapticClip()
		{
		}
	}
	[Token(Token = "0x20003A6")]
	public class VisualFeedback : MonoBehaviour
	{
		[Token(Token = "0x4001DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public HapticClipPositionType devicePos;

		[Token(Token = "0x4001DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform motorContainer;

		[Token(Token = "0x4001DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Gradient motorFeedbackGradient;

		[Token(Token = "0x4001DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Transform[] motors;

		[Token(Token = "0x4001DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorScaleOffset;

		[Token(Token = "0x60019C9")]
		[Address(RVA = "0xC35B5C", Offset = "0xC35B5C", VA = "0xC35B5C")]
		private void Start()
		{
		}

		[Token(Token = "0x60019CA")]
		[Address(RVA = "0xC35EF8", Offset = "0xC35EF8", VA = "0xC35EF8")]
		public void UpdateFeedback(HapticFeedback feedback)
		{
		}

		[Token(Token = "0x60019CB")]
		[Address(RVA = "0xC35FCC", Offset = "0xC35FCC", VA = "0xC35FCC")]
		public void UpdateFeedback(int[] feedbackValues)
		{
		}

		[Token(Token = "0x60019CC")]
		[Address(RVA = "0xC36194", Offset = "0xC36194", VA = "0xC36194")]
		public VisualFeedback()
		{
		}
	}
}
namespace AmazingAssets.VertexAmbientOcclusionGenerator.Example
{
	[Token(Token = "0x20003A7")]
	public class Runtime : MonoBehaviour
	{
		[Token(Token = "0x4001DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float rayLength;

		[Token(Token = "0x4001DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[AttributeAttribute(Name = "RangeAttribute", RVA = "0x854260", Offset = "0x854260")]
		public float details;

		[Token(Token = "0x4001DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask layerMask;

		[Token(Token = "0x4001DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Material material;

		[Token(Token = "0x60019CD")]
		[Address(RVA = "0xDD7840", Offset = "0xDD7840", VA = "0xDD7840")]
		private void SetupUniversalCameraData(Camera camera)
		{
		}

		[Token(Token = "0x60019CE")]
		[Address(RVA = "0xDD78CC", Offset = "0xDD78CC", VA = "0xDD78CC")]
		private void Start()
		{
		}

		[Token(Token = "0x60019CF")]
		[Address(RVA = "0xDD7B60", Offset = "0xDD7B60", VA = "0xDD7B60")]
		public Runtime()
		{
		}
	}
}
