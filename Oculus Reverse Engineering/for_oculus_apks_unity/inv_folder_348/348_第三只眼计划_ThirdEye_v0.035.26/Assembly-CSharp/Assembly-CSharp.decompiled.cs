using System;
using System.Collections;
using System.Collections.Generic;
using System.Diagnostics;
using System.Reflection;
using System.Runtime.CompilerServices;
using System.Runtime.InteropServices;
using System.Threading.Tasks;
using BigBlit.ActivePack;
using Il2CppDummyDll;
using Impact.Data;
using Impact.Interactions;
using Impact.Materials;
using Impact.Objects;
using Impact.TagLibrary;
using Impact.Utility;
using Impact.Utility.ObjectPool;
using NWH.VehiclePhysics2;
using RootMotion.FinalIK;
using UnityEngine;
using UnityEngine.AI;
using UnityEngine.Animations;
using UnityEngine.Animations.Rigging;
using UnityEngine.Audio;
using UnityEngine.EventSystems;
using UnityEngine.Events;
using UnityEngine.InputSystem;
using UnityEngine.Playables;
using UnityEngine.Rendering;
using UnityEngine.Rendering.Universal;
using UnityEngine.SceneManagement;
using UnityEngine.Scripting;
using UnityEngine.UI;
using UnityEngine.XR;
using UnityEngine.XR.Interaction.Toolkit;
using UnityEngine.XR.Interaction.Toolkit.UI;
using YueInteractions;
using YueRagdoll;
using YueScripting;
using YueUltimateDronePhysics;

[assembly: AssemblyVersion("0.0.0.0")]
[Token(Token = "0x2000002")]
public class ApplicationFramerateController : MonoBehaviour
{
	[Token(Token = "0x4000001")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MaxFPS;

	[Token(Token = "0x6000001")]
	[Address(RVA = "0xBDEBDC", Offset = "0xBDEBDC", VA = "0xBDEBDC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000002")]
	[Address(RVA = "0xBDEBE8", Offset = "0xBDEBE8", VA = "0xBDEBE8")]
	public ApplicationFramerateController()
	{
	}
}
[Token(Token = "0x2000003")]
public class ReadOnlyField : PropertyAttribute
{
	[Token(Token = "0x4000002")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool RuntimeReadOnly;

	[Token(Token = "0x6000003")]
	[Address(RVA = "0xBDEBF8", Offset = "0xBDEBF8", VA = "0xBDEBF8")]
	public ReadOnlyField(bool runtimeReadOnly = false)
	{
	}
}
[Token(Token = "0x2000004")]
public class LockableField : PropertyAttribute
{
	[Token(Token = "0x6000004")]
	[Address(RVA = "0xBDEC20", Offset = "0xBDEC20", VA = "0xBDEC20")]
	public LockableField()
	{
	}
}
[Token(Token = "0x2000005")]
public class QuaternionField : PropertyAttribute
{
	[Token(Token = "0x6000005")]
	[Address(RVA = "0xBDEC28", Offset = "0xBDEC28", VA = "0xBDEC28")]
	public QuaternionField()
	{
	}
}
[Token(Token = "0x2000006")]
public class MinMaxField : PropertyAttribute
{
	[Token(Token = "0x4000003")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float MinLimit;

	[Token(Token = "0x4000004")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float MaxLimit;

	[Token(Token = "0x6000006")]
	[Address(RVA = "0xBDEC30", Offset = "0xBDEC30", VA = "0xBDEC30")]
	public MinMaxField(int min, int max)
	{
	}
}
[Token(Token = "0x2000007")]
public class CameraTextureVisual : MonoBehaviour
{
	[Token(Token = "0x4000005")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Renderer Renderer;

	[Token(Token = "0x4000006")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 Resolution;

	[Token(Token = "0x4000007")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture texture;

	[Token(Token = "0x6000007")]
	[Address(RVA = "0xBDEC6C", Offset = "0xBDEC6C", VA = "0xBDEC6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000008")]
	[Address(RVA = "0xBDED5C", Offset = "0xBDED5C", VA = "0xBDED5C")]
	public CameraTextureVisual()
	{
	}
}
[Token(Token = "0x2000008")]
[RequireComponent(typeof(Rigidbody))]
public class CharacterBasicController : MonoBehaviour
{
	[Token(Token = "0x4000008")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Input")]
	public string MovementDirection;

	[Token(Token = "0x4000009")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string JumpButton;

	[Token(Token = "0x400000A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AvatarOverallInput input;

	[Token(Token = "0x400000B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Parameters")]
	public float MoveSpeed;

	[Token(Token = "0x400000C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float JumpPower;

	[Token(Token = "0x400000D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isGrounded;

	[Token(Token = "0x400000E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnLand;

	[Token(Token = "0x400000F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnAirborne;

	[Token(Token = "0x4000010")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody rigidbody;

	[Token(Token = "0x17000001")]
	public bool IsGrounded
	{
		[Token(Token = "0x6000009")]
		[Address(RVA = "0xBDED70", Offset = "0xBDED70", VA = "0xBDED70")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x600000A")]
		[Address(RVA = "0xBDED78", Offset = "0xBDED78", VA = "0xBDED78")]
		private set
		{
		}
	}

	[Token(Token = "0x600000B")]
	[Address(RVA = "0xBDEDCC", Offset = "0xBDEDCC", VA = "0xBDEDCC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600000C")]
	[Address(RVA = "0xBDEE48", Offset = "0xBDEE48", VA = "0xBDEE48")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600000D")]
	[Address(RVA = "0xBDF264", Offset = "0xBDF264", VA = "0xBDF264")]
	private void Update()
	{
	}

	[Token(Token = "0x600000E")]
	[Address(RVA = "0xBDF2E0", Offset = "0xBDF2E0", VA = "0xBDF2E0")]
	public CharacterBasicController()
	{
	}
}
[Token(Token = "0x2000009")]
public class CharacterRagdollPhysics : MonoBehaviour
{
	[Token(Token = "0x200000A")]
	private class RagdollLink
	{
		[Token(Token = "0x4000018")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Transform AnimatorBone;

		[Token(Token = "0x4000019")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform RagdollBone;

		[Token(Token = "0x400001A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Rigidbody Rigidbody;

		[Token(Token = "0x400001B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Collider Collider;

		[Token(Token = "0x6000018")]
		[Address(RVA = "0xBDFBA0", Offset = "0xBDFBA0", VA = "0xBDFBA0")]
		public void SetKinematic(bool isKinematic, Vector3 StartVelocity, bool disableKinematicCollider)
		{
		}

		[Token(Token = "0x6000019")]
		[Address(RVA = "0xBDF918", Offset = "0xBDF918", VA = "0xBDF918")]
		public RagdollLink()
		{
		}
	}

	[Token(Token = "0x4000011")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject RagdollPrefab;

	[Token(Token = "0x4000012")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	[ReadOnlyField(false)]
	private GameObject ragdollInstance;

	[Token(Token = "0x4000013")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string RagdollRootBonePath;

	[Token(Token = "0x4000014")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform AnimatorRootBone;

	[Token(Token = "0x4000015")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool DisableCollidersWhenKinematic;

	[Token(Token = "0x4000016")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<RagdollLink> links;

	[Token(Token = "0x4000017")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody RootRigidbody;

	[Token(Token = "0x600000F")]
	[Address(RVA = "0xBDF360", Offset = "0xBDF360", VA = "0xBDF360")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000010")]
	[Address(RVA = "0xBDF920", Offset = "0xBDF920", VA = "0xBDF920")]
	public void ResetRagdoll()
	{
	}

	[Token(Token = "0x6000011")]
	[Address(RVA = "0xBDF6C8", Offset = "0xBDF6C8", VA = "0xBDF6C8")]
	public void CreateRagdollInstance()
	{
	}

	[Token(Token = "0x6000012")]
	[Address(RVA = "0xBDF988", Offset = "0xBDF988", VA = "0xBDF988")]
	private void EnableRagdoll(bool active)
	{
	}

	[Token(Token = "0x6000013")]
	[Address(RVA = "0xBDFC94", Offset = "0xBDFC94", VA = "0xBDFC94")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000014")]
	[Address(RVA = "0xBDFC9C", Offset = "0xBDFC9C", VA = "0xBDFC9C")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000015")]
	[Address(RVA = "0xBDFCA4", Offset = "0xBDFCA4", VA = "0xBDFCA4")]
	public void DetachCollider(Collider collider)
	{
	}

	[Token(Token = "0x6000016")]
	[Address(RVA = "0xBE00C8", Offset = "0xBE00C8", VA = "0xBE00C8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000017")]
	[Address(RVA = "0xBE0204", Offset = "0xBE0204", VA = "0xBE0204")]
	public CharacterRagdollPhysics()
	{
	}
}
[Token(Token = "0x200000D")]
public class CollisionHealthController : MonoBehaviour
{
	[Token(Token = "0x400001E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float HealthDelta;

	[Token(Token = "0x400001F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ObjectHealthController cachedController;

	[Token(Token = "0x4000020")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider cachedCollider;

	[Token(Token = "0x4000021")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<Collider, ObjectHealthController> healthControllers;

	[Token(Token = "0x600001E")]
	[Address(RVA = "0xBE0308", Offset = "0xBE0308", VA = "0xBE0308")]
	public void SetHealth(ObjectCollisionPhysics.CollisionData collision)
	{
	}

	[Token(Token = "0x600001F")]
	[Address(RVA = "0xBE04F0", Offset = "0xBE04F0", VA = "0xBE04F0")]
	public void AddCollision(ObjectCollisionPhysics.CollisionData collision)
	{
	}

	[Token(Token = "0x6000020")]
	[Address(RVA = "0xBE05E8", Offset = "0xBE05E8", VA = "0xBE05E8")]
	public void RemoveCollision(ObjectCollisionPhysics.CollisionData collision)
	{
	}

	[Token(Token = "0x6000021")]
	[Address(RVA = "0xBE0644", Offset = "0xBE0644", VA = "0xBE0644")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000022")]
	[Address(RVA = "0xBE07C8", Offset = "0xBE07C8", VA = "0xBE07C8")]
	public CollisionHealthController()
	{
	}
}
[Token(Token = "0x200000E")]
public class CollisionMaterialController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200000F")]
	public class MaterialEvent
	{
		[Token(Token = "0x4000027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnCollide;

		[Token(Token = "0x6000028")]
		[Address(RVA = "0xBE0AB8", Offset = "0xBE0AB8", VA = "0xBE0AB8")]
		public MaterialEvent()
		{
		}
	}

	[Token(Token = "0x4000022")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[ReadOnlyField(false)]
	private string material;

	[Token(Token = "0x4000023")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool InvokeEveryCollision;

	[Token(Token = "0x4000024")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MaterialEvent[] MaterialEvents;

	[Token(Token = "0x4000025")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Dictionary<string, MaterialEvent> eventMap;

	[Token(Token = "0x4000026")]
	private const string instanceSuffix = " (Instance)";

	[Token(Token = "0x17000002")]
	public string Material
	{
		[Token(Token = "0x6000023")]
		[Address(RVA = "0xBE0844", Offset = "0xBE0844", VA = "0xBE0844")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000024")]
		[Address(RVA = "0xBE084C", Offset = "0xBE084C", VA = "0xBE084C")]
		private set
		{
		}
	}

	[Token(Token = "0x6000025")]
	[Address(RVA = "0xBE08F4", Offset = "0xBE08F4", VA = "0xBE08F4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000026")]
	[Address(RVA = "0xBE0988", Offset = "0xBE0988", VA = "0xBE0988")]
	public void UpdateMaterial(ObjectCollisionPhysics.CollisionData data)
	{
	}

	[Token(Token = "0x6000027")]
	[Address(RVA = "0xBE0A3C", Offset = "0xBE0A3C", VA = "0xBE0A3C")]
	public CollisionMaterialController()
	{
	}
}
[Token(Token = "0x2000010")]
public class ObjectColliderPhysics : ObjectCollisionPhysics
{
	[Token(Token = "0x6000029")]
	[Address(RVA = "0xBE0AC0", Offset = "0xBE0AC0", VA = "0xBE0AC0")]
	private void UpdateCollisionData(Collision collision)
	{
	}

	[Token(Token = "0x600002A")]
	[Address(RVA = "0xBE0C50", Offset = "0xBE0C50", VA = "0xBE0C50")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600002B")]
	[Address(RVA = "0xBE0D74", Offset = "0xBE0D74", VA = "0xBE0D74")]
	private void OnCollisionStay(Collision collision)
	{
	}

	[Token(Token = "0x600002C")]
	[Address(RVA = "0xBE0D78", Offset = "0xBE0D78", VA = "0xBE0D78")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x600002D")]
	[Address(RVA = "0xBE0E4C", Offset = "0xBE0E4C", VA = "0xBE0E4C")]
	public ObjectColliderPhysics()
	{
	}
}
[Token(Token = "0x2000011")]
public class ObjectCollisionPhysics : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000012")]
	public class CollisionEvent : UnityEvent<CollisionData>
	{
		[Token(Token = "0x6000030")]
		[Address(RVA = "0xBE0F28", Offset = "0xBE0F28", VA = "0xBE0F28")]
		public CollisionEvent()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000013")]
	public class CollisionData
	{
		[Token(Token = "0x400002C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vector3 Point;

		[Token(Token = "0x400002D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Distance;

		[Token(Token = "0x400002E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector3 Normal;

		[Token(Token = "0x400002F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Collider OtherCollider;

		[Token(Token = "0x6000031")]
		[Address(RVA = "0xBE0D6C", Offset = "0xBE0D6C", VA = "0xBE0D6C")]
		public CollisionData()
		{
		}
	}

	[Token(Token = "0x4000029")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public CollisionEvent OnCollisionEnterEvent;

	[Token(Token = "0x400002A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public CollisionEvent OnCollisionExitEvent;

	[Token(Token = "0x400002B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Dictionary<Collider, CollisionData> Collisions;

	[Token(Token = "0x17000003")]
	public bool IsColliding
	{
		[Token(Token = "0x600002E")]
		[Address(RVA = "0xBE0ECC", Offset = "0xBE0ECC", VA = "0xBE0ECC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600002F")]
	[Address(RVA = "0xBE0E50", Offset = "0xBE0E50", VA = "0xBE0E50")]
	public ObjectCollisionPhysics()
	{
	}
}
[Token(Token = "0x2000014")]
[RequireComponent(typeof(ParticleSystem))]
public class ObjectParticlePhysics : ObjectCollisionPhysics
{
	[Token(Token = "0x4000030")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private ParticleSystem particle;

	[Token(Token = "0x4000031")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<ParticleCollisionEvent> collisionEvents;

	[Token(Token = "0x6000032")]
	[Address(RVA = "0xBE0F70", Offset = "0xBE0F70", VA = "0xBE0F70")]
	private void Start()
	{
	}

	[Token(Token = "0x6000033")]
	[Address(RVA = "0xBE1010", Offset = "0xBE1010", VA = "0xBE1010")]
	private void OnParticleCollision(GameObject other)
	{
	}

	[Token(Token = "0x6000034")]
	[Address(RVA = "0xBE11F4", Offset = "0xBE11F4", VA = "0xBE11F4")]
	public ObjectParticlePhysics()
	{
	}
}
[Token(Token = "0x2000015")]
public class ObjectRaycastPhysics : ObjectCollisionPhysics
{
	[Token(Token = "0x2000016")]
	public enum CastMode
	{
		[Token(Token = "0x400003C")]
		Default,
		[Token(Token = "0x400003D")]
		TrackDeltaPosition
	}

	[Token(Token = "0x2000017")]
	public enum HitDirectionMode
	{
		[Token(Token = "0x400003F")]
		SameAsTransform,
		[Token(Token = "0x4000040")]
		AlongsideNormal,
		[Token(Token = "0x4000041")]
		Reflect
	}

	[Token(Token = "0x4000032")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Ray parameters")]
	public LayerMask Mask;

	[Token(Token = "0x4000033")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public QueryTriggerInteraction TriggerOption;

	[Token(Token = "0x4000034")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float Thickness;

	[Token(Token = "0x4000035")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float MaxDistance;

	[Token(Token = "0x4000036")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public CastMode Mode;

	[Token(Token = "0x4000037")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Hit shot parameters")]
	public Transform HitShot;

	[Token(Token = "0x4000038")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public HitDirectionMode DirectionMode;

	[Token(Token = "0x4000039")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 LastPosition;

	[Token(Token = "0x400003A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private RaycastHit hit;

	[Token(Token = "0x17000004")]
	public float Distance
	{
		[Token(Token = "0x6000035")]
		[Address(RVA = "0xBE11F8", Offset = "0xBE11F8", VA = "0xBE11F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000036")]
	[Address(RVA = "0xBE128C", Offset = "0xBE128C", VA = "0xBE128C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000037")]
	[Address(RVA = "0xBE12BC", Offset = "0xBE12BC", VA = "0xBE12BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000038")]
	[Address(RVA = "0xBE1390", Offset = "0xBE1390", VA = "0xBE1390")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000039")]
	[Address(RVA = "0xBE1B00", Offset = "0xBE1B00", VA = "0xBE1B00")]
	public ObjectRaycastPhysics()
	{
	}
}
[Token(Token = "0x2000018")]
public class ObjectTriggerPhysics : ObjectCollisionPhysics
{
	[Token(Token = "0x4000042")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RaycastDistance;

	[Token(Token = "0x4000043")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<Collider> UnusedColliders;

	[Token(Token = "0x600003A")]
	[Address(RVA = "0xBE1B2C", Offset = "0xBE1B2C", VA = "0xBE1B2C")]
	private void UpdateCollisionData(Collider collider)
	{
	}

	[Token(Token = "0x600003B")]
	[Address(RVA = "0xBE1D84", Offset = "0xBE1D84", VA = "0xBE1D84")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600003C")]
	[Address(RVA = "0xBE1E78", Offset = "0xBE1E78", VA = "0xBE1E78")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600003D")]
	[Address(RVA = "0xBE2178", Offset = "0xBE2178", VA = "0xBE2178")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600003E")]
	[Address(RVA = "0xBE2224", Offset = "0xBE2224", VA = "0xBE2224")]
	public ObjectTriggerPhysics()
	{
	}
}
[Token(Token = "0x2000019")]
[RequireComponent(typeof(Renderer))]
public class MaterialOffsetAnimator : MonoBehaviour
{
	[Token(Token = "0x200001A")]
	public enum OffsetAxis
	{
		[Token(Token = "0x400004A")]
		X,
		[Token(Token = "0x400004B")]
		Y
	}

	[Token(Token = "0x200001B")]
	[CompilerGenerated]
	private sealed class <Animation>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x400004C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400004D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400004E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public MaterialOffsetAnimator <>4__this;

		[Token(Token = "0x17000005")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000046")]
			[Address(RVA = "0xBE2580", Offset = "0xBE2580", VA = "0xBE2580", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000006")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000048")]
			[Address(RVA = "0xBE25C8", Offset = "0xBE25C8", VA = "0xBE25C8", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000043")]
		[Address(RVA = "0xBE2370", Offset = "0xBE2370", VA = "0xBE2370")]
		[DebuggerHidden]
		public <Animation>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x6000044")]
		[Address(RVA = "0xBE23B8", Offset = "0xBE23B8", VA = "0xBE23B8", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000045")]
		[Address(RVA = "0xBE23BC", Offset = "0xBE23BC", VA = "0xBE23BC", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000047")]
		[Address(RVA = "0xBE2588", Offset = "0xBE2588", VA = "0xBE2588", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000044")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int Frames;

	[Token(Token = "0x4000045")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Framerate;

	[Token(Token = "0x4000046")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public OffsetAxis Axis;

	[Token(Token = "0x4000047")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer renderer;

	[Token(Token = "0x4000048")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int currentFrame;

	[Token(Token = "0x600003F")]
	[Address(RVA = "0xBE229C", Offset = "0xBE229C", VA = "0xBE229C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000040")]
	[Address(RVA = "0xBE2368", Offset = "0xBE2368", VA = "0xBE2368")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000041")]
	[Address(RVA = "0xBE2300", Offset = "0xBE2300", VA = "0xBE2300")]
	[IteratorStateMachine(typeof(<Animation>d__7))]
	private IEnumerator Animation()
	{
		return null;
	}

	[Token(Token = "0x6000042")]
	[Address(RVA = "0xBE2398", Offset = "0xBE2398", VA = "0xBE2398")]
	public MaterialOffsetAnimator()
	{
	}
}
[Token(Token = "0x200001C")]
public static class MeshExtensions
{
	[Token(Token = "0x200001D")]
	private class Vertex
	{
		[Token(Token = "0x400004F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public int IDX;

		[Token(Token = "0x4000050")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public int GroupID;

		[Token(Token = "0x4000051")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Coord;

		[Token(Token = "0x4000052")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public Vector2 UVCoord;

		[Token(Token = "0x4000053")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public BoneWeight boneWeight;

		[Token(Token = "0x4000054")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public Vector3 Normal;

		[Token(Token = "0x600004D")]
		[Address(RVA = "0xBE3734", Offset = "0xBE3734", VA = "0xBE3734")]
		public Vertex()
		{
		}
	}

	[Token(Token = "0x200001E")]
	private class Triangle
	{
		[Token(Token = "0x4000055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public Vertex first;

		[Token(Token = "0x4000056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vertex second;

		[Token(Token = "0x4000057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vertex third;

		[Token(Token = "0x4000058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public int SubMeshIndex;

		[Token(Token = "0x600004E")]
		[Address(RVA = "0xBE373C", Offset = "0xBE373C", VA = "0xBE373C")]
		public Triangle()
		{
		}
	}

	[Token(Token = "0x200001F")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass3_0
	{
		[Token(Token = "0x4000059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool[] mask;

		[Token(Token = "0x600004F")]
		[Address(RVA = "0xBE38B4", Offset = "0xBE38B4", VA = "0xBE38B4")]
		public <>c__DisplayClass3_0()
		{
		}
	}

	[Token(Token = "0x2000020")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass3_1
	{
		[Token(Token = "0x400005A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<int> meshTris;

		[Token(Token = "0x400005B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<int> separationTris;

		[Token(Token = "0x400005C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public <>c__DisplayClass3_0 CS$<>8__locals1;

		[Token(Token = "0x6000050")]
		[Address(RVA = "0xBE38BC", Offset = "0xBE38BC", VA = "0xBE38BC")]
		public <>c__DisplayClass3_1()
		{
		}

		[Token(Token = "0x6000051")]
		[Address(RVA = "0xBE38C4", Offset = "0xBE38C4", VA = "0xBE38C4")]
		internal void <SimpleSplit>b__0()
		{
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000021")]
	[CompilerGenerated]
	private struct <SimpleSplit>d__3 : IAsyncStateMachine
	{
		[Token(Token = "0x400005D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x400005E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<Mesh> <>t__builder;

		[Token(Token = "0x400005F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool[] mask;

		[Token(Token = "0x4000060")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Mesh mesh;

		[Token(Token = "0x4000061")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass3_0 <>8__1;

		[Token(Token = "0x4000062")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass3_1 <>8__2;

		[Token(Token = "0x4000063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Mesh <SeparatedMesh>5__2;

		[Token(Token = "0x4000064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int <i>5__3;

		[Token(Token = "0x4000065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private TaskAwaiter <>u__1;

		[Token(Token = "0x6000052")]
		[Address(RVA = "0xBE3BA8", Offset = "0xBE3BA8", VA = "0xBE3BA8", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x6000053")]
		[Address(RVA = "0xBE3FC8", Offset = "0xBE3FC8", VA = "0xBE3FC8", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x6000049")]
	[Address(RVA = "0xBE25D0", Offset = "0xBE25D0", VA = "0xBE25D0")]
	public static Mesh Copy(this Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x600004A")]
	[Address(RVA = "0xBE263C", Offset = "0xBE263C", VA = "0xBE263C")]
	[AsyncStateMachine(typeof(<SimpleSplit>d__3))]
	public static Task<Mesh> SimpleSplit(this Mesh mesh, bool[] mask)
	{
		return null;
	}

	[Token(Token = "0x600004B")]
	[Address(RVA = "0xBE273C", Offset = "0xBE273C", VA = "0xBE273C")]
	public static Mesh SeparateVerts(this Mesh mesh, params int[] indices)
	{
		return null;
	}

	[Token(Token = "0x600004C")]
	[Address(RVA = "0xBE3744", Offset = "0xBE3744", VA = "0xBE3744")]
	public static SkinnedMeshRenderer Copy(this SkinnedMeshRenderer skinnedMesh, GameObject Destination)
	{
		return null;
	}
}
[Token(Token = "0x2000023")]
public class ObjectActiveController : MonoBehaviour
{
	[Token(Token = "0x17000007")]
	public bool Active
	{
		[Token(Token = "0x6000058")]
		[Address(RVA = "0xBE4134", Offset = "0xBE4134", VA = "0xBE4134")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x6000059")]
		[Address(RVA = "0xBE4154", Offset = "0xBE4154", VA = "0xBE4154")]
		set
		{
		}
	}

	[Token(Token = "0x600005A")]
	[Address(RVA = "0xBE41B4", Offset = "0xBE41B4", VA = "0xBE41B4")]
	public ObjectActiveController()
	{
	}
}
[Token(Token = "0x2000024")]
[RequireComponent(typeof(Renderer))]
public class ObjectColorVisual : MonoBehaviour
{
	[Token(Token = "0x4000069")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int MaterialSlot;

	[Token(Token = "0x400006A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Color AlbedoColor;

	[Token(Token = "0x400006B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Color EmissionColor;

	[Token(Token = "0x400006C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(0f, 1f)]
	public float EmissionPower;

	[Token(Token = "0x400006D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Renderer renderer;

	[Token(Token = "0x400006E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x600005B")]
	[Address(RVA = "0xBE41BC", Offset = "0xBE41BC", VA = "0xBE41BC")]
	private void Start()
	{
	}

	[Token(Token = "0x600005C")]
	[Address(RVA = "0xBE4238", Offset = "0xBE4238", VA = "0xBE4238")]
	private void Update()
	{
	}

	[Token(Token = "0x600005D")]
	[Address(RVA = "0xBE4384", Offset = "0xBE4384", VA = "0xBE4384")]
	public ObjectColorVisual()
	{
	}
}
[Token(Token = "0x2000025")]
public class ObjectDestroyController : MonoBehaviour
{
	[Token(Token = "0x600005E")]
	[Address(RVA = "0xBE4398", Offset = "0xBE4398", VA = "0xBE4398")]
	public new void Destroy(UnityEngine.Object unityObject)
	{
	}

	[Token(Token = "0x600005F")]
	[Address(RVA = "0xBE43F0", Offset = "0xBE43F0", VA = "0xBE43F0")]
	public void DestroyChildren()
	{
	}

	[Token(Token = "0x6000060")]
	[Address(RVA = "0xBE44C0", Offset = "0xBE44C0", VA = "0xBE44C0")]
	public ObjectDestroyController()
	{
	}
}
[Token(Token = "0x2000026")]
public class ObjectHealthController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000027")]
	public class HealthEvent : UnityEvent<float, float>
	{
		[Token(Token = "0x6000068")]
		[Address(RVA = "0xBE45A8", Offset = "0xBE45A8", VA = "0xBE45A8")]
		public HealthEvent()
		{
		}
	}

	[Token(Token = "0x400006F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("General")]
	[ReadOnlyField(true)]
	[SerializeField]
	private float health;

	[Token(Token = "0x4000070")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[ReadOnlyField(true)]
	[SerializeField]
	private float maxHealth;

	[Token(Token = "0x4000071")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Events")]
	public HealthEvent OnHealthChanged;

	[Token(Token = "0x4000072")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnHealthIncreased;

	[Token(Token = "0x4000073")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnHealthDecreased;

	[Token(Token = "0x4000074")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnDeath;

	[Token(Token = "0x4000075")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnResurrect;

	[Token(Token = "0x4000076")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public HealthEvent OnMaxHealthChanged;

	[Token(Token = "0x17000008")]
	public float Health
	{
		[Token(Token = "0x6000061")]
		[Address(RVA = "0xBE44C8", Offset = "0xBE44C8", VA = "0xBE44C8")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000062")]
		[Address(RVA = "0xBE0410", Offset = "0xBE0410", VA = "0xBE0410")]
		set
		{
		}
	}

	[Token(Token = "0x17000009")]
	public float MaxHealth
	{
		[Token(Token = "0x6000063")]
		[Address(RVA = "0xBE44D0", Offset = "0xBE44D0", VA = "0xBE44D0")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000064")]
		[Address(RVA = "0xBE44D8", Offset = "0xBE44D8", VA = "0xBE44D8")]
		set
		{
		}
	}

	[Token(Token = "0x1700000A")]
	public float NormalizedHealth
	{
		[Token(Token = "0x6000065")]
		[Address(RVA = "0xBE4580", Offset = "0xBE4580", VA = "0xBE4580")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x6000066")]
	[Address(RVA = "0xBE458C", Offset = "0xBE458C", VA = "0xBE458C")]
	public void SetFullHealth()
	{
	}

	[Token(Token = "0x6000067")]
	[Address(RVA = "0xBE4594", Offset = "0xBE4594", VA = "0xBE4594")]
	public ObjectHealthController()
	{
	}
}
[Token(Token = "0x2000028")]
public class ObjectImpulsePhysics : MonoBehaviour
{
	[Token(Token = "0x4000077")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 Direction;

	[Token(Token = "0x4000078")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Power;

	[Token(Token = "0x6000069")]
	[Address(RVA = "0xBE45F0", Offset = "0xBE45F0", VA = "0xBE45F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600006A")]
	[Address(RVA = "0xBE47A0", Offset = "0xBE47A0", VA = "0xBE47A0")]
	public ObjectImpulsePhysics()
	{
	}
}
[Token(Token = "0x2000029")]
[RequireComponent(typeof(Animator))]
public class ObjectMovementAnimator : MonoBehaviour
{
	[Token(Token = "0x4000079")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform RootTransform;

	[Token(Token = "0x400007A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Parameter names")]
	public string VelocityXName;

	[Token(Token = "0x400007B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string VelocityYName;

	[Token(Token = "0x400007C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string VelocityZName;

	[Token(Token = "0x400007D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public string DampTimeName;

	[Token(Token = "0x400007E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400007F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 lastPosition;

	[Token(Token = "0x4000080")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform lastParent;

	[Token(Token = "0x4000081")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 velocity;

	[Token(Token = "0x600006B")]
	[Address(RVA = "0xBE47A8", Offset = "0xBE47A8", VA = "0xBE47A8")]
	private void Start()
	{
	}

	[Token(Token = "0x600006C")]
	[Address(RVA = "0xBE4818", Offset = "0xBE4818", VA = "0xBE4818")]
	private void Update()
	{
	}

	[Token(Token = "0x600006D")]
	[Address(RVA = "0xBE490C", Offset = "0xBE490C", VA = "0xBE490C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600006E")]
	[Address(RVA = "0xBE4A30", Offset = "0xBE4A30", VA = "0xBE4A30")]
	public ObjectMovementAnimator()
	{
	}
}
[Token(Token = "0x200002A")]
[RequireComponent(typeof(AudioSource))]
public class ObjectOverallAudio : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200002B")]
	public class SoundVariant
	{
		[Token(Token = "0x4000085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public AudioClip[] clips;

		[Token(Token = "0x1700000B")]
		public int Length
		{
			[Token(Token = "0x6000072")]
			[Address(RVA = "0xBE4C00", Offset = "0xBE4C00", VA = "0xBE4C00")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x6000073")]
		[Address(RVA = "0xBE4C24", Offset = "0xBE4C24", VA = "0xBE4C24")]
		public SoundVariant()
		{
		}
	}

	[Token(Token = "0x4000082")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnAwake;

	[Token(Token = "0x4000083")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SoundVariant[] SoundVariants;

	[Token(Token = "0x4000084")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource source;

	[Token(Token = "0x600006F")]
	[Address(RVA = "0xBE4AE4", Offset = "0xBE4AE4", VA = "0xBE4AE4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000070")]
	[Address(RVA = "0xBE4B64", Offset = "0xBE4B64", VA = "0xBE4B64")]
	public void PlaySound(int index)
	{
	}

	[Token(Token = "0x6000071")]
	[Address(RVA = "0xBE4C1C", Offset = "0xBE4C1C", VA = "0xBE4C1C")]
	public ObjectOverallAudio()
	{
	}
}
[Token(Token = "0x200002C")]
public class ObjectSnapPhysics : MonoBehaviour
{
	[Token(Token = "0x4000086")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Dictionary<Collider, Transform> children;

	[Token(Token = "0x6000074")]
	[Address(RVA = "0xBE4C2C", Offset = "0xBE4C2C", VA = "0xBE4C2C")]
	public void Attach(ObjectCollisionPhysics.CollisionData data)
	{
	}

	[Token(Token = "0x6000075")]
	[Address(RVA = "0xBE4D38", Offset = "0xBE4D38", VA = "0xBE4D38")]
	public void Detach(ObjectCollisionPhysics.CollisionData data)
	{
	}

	[Token(Token = "0x6000076")]
	[Address(RVA = "0xBE4EA0", Offset = "0xBE4EA0", VA = "0xBE4EA0")]
	public ObjectSnapPhysics()
	{
	}
}
[Token(Token = "0x200002D")]
public class ObjectSpawnController : MonoBehaviour
{
	[Token(Token = "0x6000077")]
	[Address(RVA = "0xBE4F1C", Offset = "0xBE4F1C", VA = "0xBE4F1C")]
	public void Instantiate(GameObject prefab)
	{
	}

	[Token(Token = "0x6000078")]
	[Address(RVA = "0xBE4FAC", Offset = "0xBE4FAC", VA = "0xBE4FAC")]
	public ObjectSpawnController()
	{
	}
}
[Token(Token = "0x200002E")]
[RequireComponent(typeof(Animator))]
public class ObjectStateAnimator : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200002F")]
	public class State
	{
		[Token(Token = "0x400008E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400008F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Float parameters")]
		public FloatParameter[] Floats;

		[Token(Token = "0x4000090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Boolean parameters")]
		public BoolParameter[] Booleans;

		[Token(Token = "0x4000091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Integer parameters")]
		public IntParameter[] Integers;

		[Token(Token = "0x600007E")]
		[Address(RVA = "0xBE5124", Offset = "0xBE5124", VA = "0xBE5124")]
		public void Evaluate(Animator animator)
		{
		}

		[Token(Token = "0x600007F")]
		[Address(RVA = "0xBE52AC", Offset = "0xBE52AC", VA = "0xBE52AC")]
		public State()
		{
		}
	}

	[Token(Token = "0x2000030")]
	public class StateParameter
	{
		[Token(Token = "0x4000092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x6000080")]
		[Address(RVA = "0xBE52B4", Offset = "0xBE52B4", VA = "0xBE52B4", Slot = "4")]
		public virtual void Evaluate(Animator animator)
		{
		}

		[Token(Token = "0x6000081")]
		[Address(RVA = "0xBE52B8", Offset = "0xBE52B8", VA = "0xBE52B8")]
		public StateParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000031")]
	public class FloatParameter : StateParameter
	{
		[Token(Token = "0x4000093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Value;

		[Token(Token = "0x4000094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float Lerp;

		[Token(Token = "0x6000082")]
		[Address(RVA = "0xBE52C0", Offset = "0xBE52C0", VA = "0xBE52C0", Slot = "4")]
		public override void Evaluate(Animator animator)
		{
		}

		[Token(Token = "0x6000083")]
		[Address(RVA = "0xBE5328", Offset = "0xBE5328", VA = "0xBE5328")]
		public FloatParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000032")]
	public class BoolParameter : StateParameter
	{
		[Token(Token = "0x4000095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool Value;

		[Token(Token = "0x6000084")]
		[Address(RVA = "0xBE5330", Offset = "0xBE5330", VA = "0xBE5330", Slot = "4")]
		public override void Evaluate(Animator animator)
		{
		}

		[Token(Token = "0x6000085")]
		[Address(RVA = "0xBE5358", Offset = "0xBE5358", VA = "0xBE5358")]
		public BoolParameter()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000033")]
	public class IntParameter : StateParameter
	{
		[Token(Token = "0x4000096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public int Value;

		[Token(Token = "0x6000086")]
		[Address(RVA = "0xBE5360", Offset = "0xBE5360", VA = "0xBE5360", Slot = "4")]
		public override void Evaluate(Animator animator)
		{
		}

		[Token(Token = "0x6000087")]
		[Address(RVA = "0xBE5388", Offset = "0xBE5388", VA = "0xBE5388")]
		public IntParameter()
		{
		}
	}

	[Token(Token = "0x4000088")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public State[] States;

	[Token(Token = "0x4000089")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public State Default;

	[Token(Token = "0x400008A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool UseDefaultState;

	[Token(Token = "0x400008B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Dictionary<string, State> stateMap;

	[Token(Token = "0x400008C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x400008D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private State state;

	[Token(Token = "0x1700000C")]
	public string ActiveState
	{
		[Token(Token = "0x6000079")]
		[Address(RVA = "0xBE4FB4", Offset = "0xBE4FB4", VA = "0xBE4FB4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x600007A")]
		[Address(RVA = "0xBE4FBC", Offset = "0xBE4FBC", VA = "0xBE4FBC")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x600007B")]
	[Address(RVA = "0xBE4FC4", Offset = "0xBE4FC4", VA = "0xBE4FC4")]
	private void Awake()
	{
	}

	[Token(Token = "0x600007C")]
	[Address(RVA = "0xBE5088", Offset = "0xBE5088", VA = "0xBE5088")]
	private void Update()
	{
	}

	[Token(Token = "0x600007D")]
	[Address(RVA = "0xBE5228", Offset = "0xBE5228", VA = "0xBE5228")]
	public ObjectStateAnimator()
	{
	}
}
[Token(Token = "0x2000034")]
public class ObjectStateController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000035")]
	public class State
	{
		[Token(Token = "0x400009A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x400009B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent OnSelect;

		[Token(Token = "0x600008F")]
		[Address(RVA = "0xBE55CC", Offset = "0xBE55CC", VA = "0xBE55CC")]
		public State()
		{
		}
	}

	[Token(Token = "0x4000097")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnlyField(false)]
	[SerializeField]
	private int stateIndex;

	[Token(Token = "0x4000098")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnBeforeStateChange;

	[Token(Token = "0x4000099")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public State[] States;

	[Token(Token = "0x1700000D")]
	public int StateIndex
	{
		[Token(Token = "0x6000088")]
		[Address(RVA = "0xBE5390", Offset = "0xBE5390", VA = "0xBE5390")]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000089")]
		[Address(RVA = "0xBE5398", Offset = "0xBE5398", VA = "0xBE5398")]
		set
		{
		}
	}

	[Token(Token = "0x1700000E")]
	public string StateName
	{
		[Token(Token = "0x600008A")]
		[Address(RVA = "0xBE5430", Offset = "0xBE5430", VA = "0xBE5430")]
		get
		{
			return null;
		}
		[Token(Token = "0x600008B")]
		[Address(RVA = "0xBE546C", Offset = "0xBE546C", VA = "0xBE546C")]
		set
		{
		}
	}

	[Token(Token = "0x600008C")]
	[Address(RVA = "0xBE5570", Offset = "0xBE5570", VA = "0xBE5570")]
	public void SelectNext()
	{
	}

	[Token(Token = "0x600008D")]
	[Address(RVA = "0xBE559C", Offset = "0xBE559C", VA = "0xBE559C")]
	public void SelectPrevious()
	{
	}

	[Token(Token = "0x600008E")]
	[Address(RVA = "0xBE55C4", Offset = "0xBE55C4", VA = "0xBE55C4")]
	public ObjectStateController()
	{
	}
}
[Token(Token = "0x2000037")]
public class ObjectTimerController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000038")]
	public class SequenceSection
	{
		[Token(Token = "0x40000A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40000A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Time;

		[Token(Token = "0x40000A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnTimeElapsed;

		[Token(Token = "0x600009C")]
		[Address(RVA = "0xBE5784", Offset = "0xBE5784", VA = "0xBE5784")]
		public SequenceSection()
		{
		}
	}

	[Token(Token = "0x2000039")]
	[CompilerGenerated]
	private sealed class <Countdown>d__16 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40000A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40000A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40000A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ObjectTimerController <>4__this;

		[Token(Token = "0x17000012")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60000A0")]
			[Address(RVA = "0xBE58C8", Offset = "0xBE58C8", VA = "0xBE58C8", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000013")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60000A2")]
			[Address(RVA = "0xBE5910", Offset = "0xBE5910", VA = "0xBE5910", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600009D")]
		[Address(RVA = "0xBE5754", Offset = "0xBE5754", VA = "0xBE5754")]
		[DebuggerHidden]
		public <Countdown>d__16(int <>1__state)
		{
		}

		[Token(Token = "0x600009E")]
		[Address(RVA = "0xBE5794", Offset = "0xBE5794", VA = "0xBE5794", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x600009F")]
		[Address(RVA = "0xBE5798", Offset = "0xBE5798", VA = "0xBE5798", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60000A1")]
		[Address(RVA = "0xBE58D0", Offset = "0xBE58D0", VA = "0xBE58D0", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400009D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool PlayOnAwake;

	[Token(Token = "0x400009E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnReset;

	[Token(Token = "0x40000A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SequenceSection[] Sequence;

	[Token(Token = "0x1700000F")]
	public float NormalizedTime
	{
		[Token(Token = "0x6000092")]
		[Address(RVA = "0xBE55F8", Offset = "0xBE55F8", VA = "0xBE55F8")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000010")]
	public float Timer
	{
		[Token(Token = "0x6000093")]
		[Address(RVA = "0xBE5650", Offset = "0xBE5650", VA = "0xBE5650")]
		[CompilerGenerated]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000094")]
		[Address(RVA = "0xBE5658", Offset = "0xBE5658", VA = "0xBE5658")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x17000011")]
	public int CurrentSection
	{
		[Token(Token = "0x6000095")]
		[Address(RVA = "0xBE5660", Offset = "0xBE5660", VA = "0xBE5660")]
		[CompilerGenerated]
		get
		{
			return default(int);
		}
		[Token(Token = "0x6000096")]
		[Address(RVA = "0xBE5668", Offset = "0xBE5668", VA = "0xBE5668")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000097")]
	[Address(RVA = "0xBE5670", Offset = "0xBE5670", VA = "0xBE5670")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000098")]
	[Address(RVA = "0xBE56C0", Offset = "0xBE56C0", VA = "0xBE56C0")]
	public void ResetTimer()
	{
	}

	[Token(Token = "0x6000099")]
	[Address(RVA = "0xBE5680", Offset = "0xBE5680", VA = "0xBE5680")]
	public void StartTimer()
	{
	}

	[Token(Token = "0x600009A")]
	[Address(RVA = "0xBE56EC", Offset = "0xBE56EC", VA = "0xBE56EC")]
	[IteratorStateMachine(typeof(<Countdown>d__16))]
	private IEnumerator Countdown()
	{
		return null;
	}

	[Token(Token = "0x600009B")]
	[Address(RVA = "0xBE577C", Offset = "0xBE577C", VA = "0xBE577C")]
	public ObjectTimerController()
	{
	}
}
[Token(Token = "0x200003A")]
public class ObjectTeleportableController : MonoBehaviour
{
	[Token(Token = "0x200003B")]
	public enum TeleportMode
	{
		[Token(Token = "0x40000AF")]
		InitialPosition,
		[Token(Token = "0x40000B0")]
		ActiveTeleport,
		[Token(Token = "0x40000B1")]
		Random
	}

	[Token(Token = "0x40000A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public TeleportMode Mode;

	[Token(Token = "0x40000A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform[] Teleports;

	[Token(Token = "0x40000AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnlyField(false)]
	[SerializeField]
	private Transform activeTeleport;

	[Token(Token = "0x40000AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnTeleport;

	[Token(Token = "0x40000AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 InitialPosition;

	[Token(Token = "0x40000AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion InitialRotation;

	[Token(Token = "0x60000A3")]
	[Address(RVA = "0xBE5918", Offset = "0xBE5918", VA = "0xBE5918")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000A4")]
	[Address(RVA = "0xBE5968", Offset = "0xBE5968", VA = "0xBE5968")]
	public void Teleport()
	{
	}

	[Token(Token = "0x60000A5")]
	[Address(RVA = "0xBE5BAC", Offset = "0xBE5BAC", VA = "0xBE5BAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60000A6")]
	[Address(RVA = "0xBE5C50", Offset = "0xBE5C50", VA = "0xBE5C50")]
	public ObjectTeleportableController()
	{
	}
}
[Token(Token = "0x200003C")]
public class ObjectTeleportController : MonoBehaviour
{
	[Token(Token = "0x60000A7")]
	[Address(RVA = "0xBE5C58", Offset = "0xBE5C58", VA = "0xBE5C58")]
	private void Start()
	{
	}

	[Token(Token = "0x60000A8")]
	[Address(RVA = "0xBE5C5C", Offset = "0xBE5C5C", VA = "0xBE5C5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000A9")]
	[Address(RVA = "0xBE5C60", Offset = "0xBE5C60", VA = "0xBE5C60")]
	public ObjectTeleportController()
	{
	}
}
[Token(Token = "0x200003D")]
public class ParameterLinkerController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200003E")]
	public class ParameterLink
	{
		[Token(Token = "0x200003F")]
		public enum AnimatorParameterType
		{
			[Token(Token = "0x40000CC")]
			None,
			[Token(Token = "0x40000CD")]
			Boolean,
			[Token(Token = "0x40000CE")]
			Integer,
			[Token(Token = "0x40000CF")]
			Float
		}

		[Token(Token = "0x2000040")]
		public enum EntryPointMode
		{
			[Token(Token = "0x40000D1")]
			ThisTransform,
			[Token(Token = "0x40000D2")]
			CustomEntryPoint
		}

		[Token(Token = "0x40000B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x40000B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Source")]
		public string SourceObjectPath;

		[Token(Token = "0x40000B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string SourceComponentType;

		[Token(Token = "0x40000B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public string SourceParameterName;

		[Token(Token = "0x40000BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public EntryPointMode SourceEntryPoint;

		[Token(Token = "0x40000BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private object source;

		[Token(Token = "0x40000BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private FieldInfo sourceField;

		[Token(Token = "0x40000BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PropertyInfo sourceProperty;

		[Token(Token = "0x40000BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private object sourceValue;

		[Token(Token = "0x40000BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AnimatorParameterType SourceAnimatorParameterType;

		[Token(Token = "0x40000C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Animator sourceAnimator;

		[Token(Token = "0x40000C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[Header("Target")]
		public string TargetObjectPath;

		[Token(Token = "0x40000C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public string TargetComponentType;

		[Token(Token = "0x40000C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public string TargetParameterName;

		[Token(Token = "0x40000C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public EntryPointMode TargetEntryPoint;

		[Token(Token = "0x40000C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private object target;

		[Token(Token = "0x40000C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private FieldInfo targetField;

		[Token(Token = "0x40000C7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private PropertyInfo targetProperty;

		[Token(Token = "0x40000C8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private AnimatorParameterType TargetAnimatorParameterType;

		[Token(Token = "0x40000C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Animator targetAnimator;

		[Token(Token = "0x40000CA")]
		private const string FloatToStringFormat = "0.00";

		[Token(Token = "0x60000AE")]
		[Address(RVA = "0xBE605C", Offset = "0xBE605C", VA = "0xBE605C")]
		private static void GetNestedParameter(ref object source, ref FieldInfo field, ref PropertyInfo property, string path)
		{
		}

		[Token(Token = "0x60000AF")]
		[Address(RVA = "0xBE61FC", Offset = "0xBE61FC", VA = "0xBE61FC")]
		private static object GetValue(object obj, string parameterName, FieldInfo field, PropertyInfo property, Animator animator, AnimatorParameterType animatorParameterType)
		{
			return null;
		}

		[Token(Token = "0x60000B0")]
		[Address(RVA = "0xBE63C0", Offset = "0xBE63C0", VA = "0xBE63C0")]
		private static void SetValue(object obj, string parameterName, FieldInfo field, PropertyInfo property, Animator animator, AnimatorParameterType animatorParameterType, object value)
		{
		}

		[Token(Token = "0x60000B1")]
		[Address(RVA = "0xBE6938", Offset = "0xBE6938", VA = "0xBE6938")]
		private static void GetAnimatorParameterType(object source, ref Animator animator, string name, ref AnimatorParameterType animatorParameterType)
		{
		}

		[Token(Token = "0x60000B2")]
		[Address(RVA = "0xBE5E08", Offset = "0xBE5E08", VA = "0xBE5E08")]
		public void Init(Transform thisTransform, Transform customEntryPoint)
		{
		}

		[Token(Token = "0x60000B3")]
		[Address(RVA = "0xBE5FC8", Offset = "0xBE5FC8", VA = "0xBE5FC8")]
		public void Update()
		{
		}

		[Token(Token = "0x60000B4")]
		[Address(RVA = "0xBE6AC0", Offset = "0xBE6AC0", VA = "0xBE6AC0")]
		public ParameterLink()
		{
		}
	}

	[Token(Token = "0x40000B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEngine.Object CustomEntryComponent;

	[Token(Token = "0x40000B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string CustomEntryParameter;

	[Token(Token = "0x40000B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Transform customEntryPoint;

	[Token(Token = "0x40000B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ParameterLink[] Links;

	[Token(Token = "0x60000AA")]
	[Address(RVA = "0xBE5C68", Offset = "0xBE5C68", VA = "0xBE5C68")]
	private void Start()
	{
	}

	[Token(Token = "0x60000AB")]
	[Address(RVA = "0xBE5EF8", Offset = "0xBE5EF8", VA = "0xBE5EF8")]
	private void OnTransformParentChanged()
	{
	}

	[Token(Token = "0x60000AC")]
	[Address(RVA = "0xBE5F6C", Offset = "0xBE5F6C", VA = "0xBE5F6C")]
	private void Update()
	{
	}

	[Token(Token = "0x60000AD")]
	[Address(RVA = "0xBE6054", Offset = "0xBE6054", VA = "0xBE6054")]
	public ParameterLinkerController()
	{
	}
}
[Token(Token = "0x2000042")]
public static class ConfigurableJointExtensions
{
	[Token(Token = "0x60000B7")]
	[Address(RVA = "0xBE6AF4", Offset = "0xBE6AF4", VA = "0xBE6AF4")]
	public static void SetTargetRotationLocal(this ConfigurableJoint joint, Quaternion targetLocalRotation, Quaternion startLocalRotation)
	{
	}

	[Token(Token = "0x60000B8")]
	[Address(RVA = "0xBE7080", Offset = "0xBE7080", VA = "0xBE7080")]
	public static void SetTargetRotation(this ConfigurableJoint joint, Quaternion targetWorldRotation, Quaternion startWorldRotation)
	{
	}

	[Token(Token = "0x60000B9")]
	[Address(RVA = "0xBE6BE8", Offset = "0xBE6BE8", VA = "0xBE6BE8")]
	private static void SetTargetRotationInternal(ConfigurableJoint joint, Quaternion targetRotation, Quaternion startRotation, Space space)
	{
	}
}
[Token(Token = "0x2000043")]
public class ManagerSimulationPhysics : MonoBehaviour
{
	[Token(Token = "0x40000D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static ManagerSimulationPhysics Instance;

	[Token(Token = "0x40000D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public List<RigidbodyInterpolationPhysics> Interpolators;

	[Token(Token = "0x60000BA")]
	[Address(RVA = "0xBE7174", Offset = "0xBE7174", VA = "0xBE7174")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000BB")]
	[Address(RVA = "0xBE71C8", Offset = "0xBE71C8", VA = "0xBE71C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60000BC")]
	[Address(RVA = "0xBE74B4", Offset = "0xBE74B4", VA = "0xBE74B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60000BD")]
	[Address(RVA = "0xBE7708", Offset = "0xBE7708", VA = "0xBE7708")]
	public ManagerSimulationPhysics()
	{
	}
}
[Token(Token = "0x2000044")]
public class RigidbodyInterpolationPhysics : MonoBehaviour
{
	[Token(Token = "0x40000D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool InterpolatePosition;

	[Token(Token = "0x40000D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool InterpolateRotation;

	[Token(Token = "0x40000D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 currentLocalPosition;

	[Token(Token = "0x40000D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 previousLocalPosition;

	[Token(Token = "0x40000DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Quaternion currentLocalRotation;

	[Token(Token = "0x40000DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Quaternion previousLocalRotation;

	[Token(Token = "0x60000BE")]
	[Address(RVA = "0xBE744C", Offset = "0xBE744C", VA = "0xBE744C")]
	public void UpdateTransform()
	{
	}

	[Token(Token = "0x60000BF")]
	[Address(RVA = "0xBE7630", Offset = "0xBE7630", VA = "0xBE7630")]
	public void Interpolate(float lerp)
	{
	}

	[Token(Token = "0x60000C0")]
	[Address(RVA = "0xBE73E4", Offset = "0xBE73E4", VA = "0xBE73E4")]
	public void RevertTransform()
	{
	}

	[Token(Token = "0x60000C1")]
	[Address(RVA = "0xBE5B1C", Offset = "0xBE5B1C", VA = "0xBE5B1C")]
	public void ResetTransform()
	{
	}

	[Token(Token = "0x60000C2")]
	[Address(RVA = "0xBE7784", Offset = "0xBE7784", VA = "0xBE7784")]
	private void Start()
	{
	}

	[Token(Token = "0x60000C3")]
	[Address(RVA = "0xBE7854", Offset = "0xBE7854", VA = "0xBE7854")]
	private void OnTransformParentChanged()
	{
	}

	[Token(Token = "0x60000C4")]
	[Address(RVA = "0xBE7858", Offset = "0xBE7858", VA = "0xBE7858")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60000C5")]
	[Address(RVA = "0xBE78D0", Offset = "0xBE78D0", VA = "0xBE78D0")]
	public RigidbodyInterpolationPhysics()
	{
	}
}
[Token(Token = "0x2000045")]
public static class TransformExtensions
{
	[Token(Token = "0x60000C6")]
	[Address(RVA = "0xBE78E0", Offset = "0xBE78E0", VA = "0xBE78E0")]
	public static Transform FindBrotherWithTag(this Transform transform, params string[] tags)
	{
		return null;
	}

	[Token(Token = "0x60000C7")]
	[Address(RVA = "0xBE79C0", Offset = "0xBE79C0", VA = "0xBE79C0")]
	public static Transform FindChildWithTag(this Transform transform, params string[] tags)
	{
		return null;
	}

	[Token(Token = "0x60000C8")]
	[Address(RVA = "0xBE7A8C", Offset = "0xBE7A8C", VA = "0xBE7A8C")]
	public static int GetDepth(this Transform transform)
	{
		return default(int);
	}

	[Token(Token = "0x60000C9")]
	[Address(RVA = "0xBE7B60", Offset = "0xBE7B60", VA = "0xBE7B60")]
	public static Transform FindRootParent(this Transform transform)
	{
		return null;
	}

	[Token(Token = "0x60000CA")]
	public static T GetComponentInChildrenNoRecursion<T>(this Transform t) where T : Component
	{
		return null;
	}

	[Token(Token = "0x60000CB")]
	[Address(RVA = "0xBE7C48", Offset = "0xBE7C48", VA = "0xBE7C48")]
	public static void FollowToTarget(this Transform t, Transform Target, float Force, bool WorldSpace)
	{
	}

	[Token(Token = "0x60000CC")]
	[Address(RVA = "0xBDF784", Offset = "0xBDF784", VA = "0xBDF784")]
	public static Transform FindByPath(this Transform t, string path)
	{
		return null;
	}
}
[Serializable]
[Token(Token = "0x2000046")]
public class BaseEvent : UnityEvent
{
	[Token(Token = "0x40000DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected bool Locked;

	[Token(Token = "0x60000CD")]
	[Address(RVA = "0xBE7E34", Offset = "0xBE7E34", VA = "0xBE7E34")]
	public new void Invoke()
	{
	}

	[Token(Token = "0x60000CE")]
	[Address(RVA = "0xBE7E48", Offset = "0xBE7E48", VA = "0xBE7E48")]
	public BaseEvent()
	{
	}
}
[Token(Token = "0x2000047")]
public class BaseEvent<T0> : UnityEvent<T0>
{
	[Token(Token = "0x40000DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected bool Locked;

	[Token(Token = "0x60000CF")]
	public new void Invoke(T0 arg0)
	{
	}

	[Token(Token = "0x60000D0")]
	public BaseEvent()
	{
	}
}
[Token(Token = "0x2000048")]
public class BaseEvent<T0, T1> : UnityEvent<T0, T1>
{
	[Token(Token = "0x40000DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected bool Locked;

	[Token(Token = "0x60000D1")]
	public new void Invoke(T0 arg0, T1 arg1)
	{
	}

	[Token(Token = "0x60000D2")]
	public BaseEvent()
	{
	}
}
[Token(Token = "0x2000049")]
public class BaseEvent<T0, T1, T2> : UnityEvent<T0, T1, T2>
{
	[Token(Token = "0x40000DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected bool Locked;

	[Token(Token = "0x60000D3")]
	public new void Invoke(T0 arg0, T1 arg1, T2 arg2)
	{
	}

	[Token(Token = "0x60000D4")]
	public BaseEvent()
	{
	}
}
[Token(Token = "0x200004A")]
public class BaseEvent<T0, T1, T2, T3> : UnityEvent<T0, T1, T2, T3>
{
	[Token(Token = "0x40000E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	protected bool Locked;

	[Token(Token = "0x60000D5")]
	public new void Invoke(T0 arg0, T1 arg1, T2 arg2, T3 arg3)
	{
	}

	[Token(Token = "0x60000D6")]
	public BaseEvent()
	{
	}
}
[Token(Token = "0x200004B")]
public class WorldTimeController : MonoBehaviour
{
	[Token(Token = "0x40000E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	[SerializeField]
	private float timeScale;

	[Token(Token = "0x40000E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float initialFixedDeltaTime;

	[Token(Token = "0x17000014")]
	public float TimeScale
	{
		[Token(Token = "0x60000D7")]
		[Address(RVA = "0xBE7E50", Offset = "0xBE7E50", VA = "0xBE7E50")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x60000D8")]
		[Address(RVA = "0xBE7E58", Offset = "0xBE7E58", VA = "0xBE7E58")]
		set
		{
		}
	}

	[Token(Token = "0x60000D9")]
	[Address(RVA = "0xBE7E74", Offset = "0xBE7E74", VA = "0xBE7E74")]
	private void Update()
	{
	}

	[Token(Token = "0x60000DA")]
	[Address(RVA = "0xBE7EB8", Offset = "0xBE7EB8", VA = "0xBE7EB8")]
	public WorldTimeController()
	{
	}
}
[Token(Token = "0x200004C")]
public class AvatarOverallInput : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200004D")]
	private class InputEntry
	{
		[Token(Token = "0x40000EC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string key;

		[Token(Token = "0x40000ED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public VirtualInputComponent value;

		[Token(Token = "0x60000DF")]
		[Address(RVA = "0xBE7F28", Offset = "0xBE7F28", VA = "0xBE7F28")]
		public InputEntry()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x200004E")]
	public class VirtualInputComponent
	{
		[Token(Token = "0x200004F")]
		public enum InputType
		{
			[Token(Token = "0x40000F6")]
			Button,
			[Token(Token = "0x40000F7")]
			Axis,
			[Token(Token = "0x40000F8")]
			Direction
		}

		[Token(Token = "0x40000EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public InputType Type;

		[Token(Token = "0x40000EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public Vector2 Direction;

		[Token(Token = "0x40000F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float Axis;

		[Token(Token = "0x40000F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UnityEvent OnPress;

		[Token(Token = "0x40000F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public UnityEvent OnRelease;

		[Token(Token = "0x40000F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool IsPressed;

		[Token(Token = "0x40000F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		private bool lastIsPressed;

		[Token(Token = "0x17000017")]
		public bool isPressed
		{
			[Token(Token = "0x60000E0")]
			[Address(RVA = "0xBE7F30", Offset = "0xBE7F30", VA = "0xBE7F30")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x60000E1")]
			[Address(RVA = "0xBE7F38", Offset = "0xBE7F38", VA = "0xBE7F38")]
			set
			{
			}
		}

		[Token(Token = "0x60000E2")]
		[Address(RVA = "0xBE7F88", Offset = "0xBE7F88", VA = "0xBE7F88")]
		public VirtualInputComponent()
		{
		}
	}

	[Token(Token = "0x40000E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[ReadOnlyField(false)]
	private bool hasPlayer;

	[Token(Token = "0x40000E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnPlayerEnter;

	[Token(Token = "0x40000E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnPlayerExit;

	[Token(Token = "0x40000E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Vector3 CameraPosition;

	[Token(Token = "0x40000E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[QuaternionField]
	public Quaternion LookRotation;

	[Token(Token = "0x40000E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public Vector3 LookPosition;

	[Token(Token = "0x40000E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject AvatarLayoutPrefab;

	[Token(Token = "0x40000EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	[HideInInspector]
	private List<InputEntry> Inputs;

	[Token(Token = "0x40000EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Dictionary<string, VirtualInputComponent> inputsMap;

	[Token(Token = "0x17000015")]
	public bool HasPlayer
	{
		[Token(Token = "0x60000DB")]
		[Address(RVA = "0xBE7ECC", Offset = "0xBE7ECC", VA = "0xBE7ECC")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60000DC")]
		[Address(RVA = "0xBE7ED4", Offset = "0xBE7ED4", VA = "0xBE7ED4")]
		set
		{
		}
	}

	[Token(Token = "0x17000016")]
	public Dictionary<string, VirtualInputComponent> inputs
	{
		[Token(Token = "0x60000DD")]
		[Address(RVA = "0xBDF098", Offset = "0xBDF098", VA = "0xBDF098")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x60000DE")]
	[Address(RVA = "0xBE7F20", Offset = "0xBE7F20", VA = "0xBE7F20")]
	public AvatarOverallInput()
	{
	}
}
[Token(Token = "0x2000050")]
[RequireComponent(typeof(AvatarOverallInput))]
public class InputTransferController : MonoBehaviour
{
	[Token(Token = "0x2000051")]
	public enum TransferMode
	{
		[Token(Token = "0x40000FE")]
		Send,
		[Token(Token = "0x40000FF")]
		Receive
	}

	[Token(Token = "0x40000F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	[ReadOnlyField(false)]
	private AvatarOverallInput OtherAvatar;

	[Token(Token = "0x40000FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public TransferMode mode;

	[Token(Token = "0x40000FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AvatarOverallInput thisAvatar;

	[Token(Token = "0x40000FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private string[] ConnectedInputs;

	[Token(Token = "0x17000018")]
	public AvatarOverallInput otherAvatar
	{
		[Token(Token = "0x60000E3")]
		[Address(RVA = "0xBE7F90", Offset = "0xBE7F90", VA = "0xBE7F90")]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E4")]
		[Address(RVA = "0xBE7F98", Offset = "0xBE7F98", VA = "0xBE7F98")]
		set
		{
		}
	}

	[Token(Token = "0x60000E5")]
	[Address(RVA = "0xBE83F8", Offset = "0xBE83F8", VA = "0xBE83F8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000E6")]
	[Address(RVA = "0xBE8448", Offset = "0xBE8448", VA = "0xBE8448")]
	private void Update()
	{
	}

	[Token(Token = "0x60000E7")]
	[Address(RVA = "0xBE859C", Offset = "0xBE859C", VA = "0xBE859C")]
	public InputTransferController()
	{
	}
}
[Token(Token = "0x2000052")]
public class ComponentBaseConfiguration : MonoBehaviour
{
	[Token(Token = "0x2000053")]
	public class ConfigurationBase<T>
	{
		[Token(Token = "0x4000103")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public string key;

		[Token(Token = "0x4000104")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public T value;

		[Token(Token = "0x60000EB")]
		public ConfigurationBase()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000054")]
	public class ModeSwitchedEvent : UnityEvent<string>
	{
		[Token(Token = "0x60000EC")]
		[Address(RVA = "0xBE85BC", Offset = "0xBE85BC", VA = "0xBE85BC")]
		public ModeSwitchedEvent()
		{
		}
	}

	[Token(Token = "0x4000100")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ModeSwitchedEvent OnActiveModeSwitched;

	[Token(Token = "0x4000101")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ReadOnlyField(false)]
	[SerializeField]
	protected string ActiveMode;

	[Token(Token = "0x17000019")]
	public virtual string activeMode
	{
		[Token(Token = "0x60000E8")]
		[Address(RVA = "0xBE85A4", Offset = "0xBE85A4", VA = "0xBE85A4", Slot = "4")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60000E9")]
		[Address(RVA = "0xBE85AC", Offset = "0xBE85AC", VA = "0xBE85AC", Slot = "5")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60000EA")]
	[Address(RVA = "0xBE85B4", Offset = "0xBE85B4", VA = "0xBE85B4")]
	public ComponentBaseConfiguration()
	{
	}
}
[Token(Token = "0x2000055")]
public class ConfigurationEventController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x2000056")]
	public class ConfigurationEvent
	{
		[Token(Token = "0x4000107")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public string name;

		[Token(Token = "0x4000108")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public UnityEvent Event;

		[Token(Token = "0x60000F0")]
		[Address(RVA = "0xBE8820", Offset = "0xBE8820", VA = "0xBE8820")]
		public ConfigurationEvent()
		{
		}
	}

	[Token(Token = "0x4000105")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ComponentBaseConfiguration Configuration;

	[Token(Token = "0x4000106")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConfigurationEvent[] ModeEvents;

	[Token(Token = "0x60000ED")]
	[Address(RVA = "0xBE8604", Offset = "0xBE8604", VA = "0xBE8604")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000EE")]
	[Address(RVA = "0xBE86AC", Offset = "0xBE86AC", VA = "0xBE86AC")]
	public ConfigurationEventController()
	{
	}
}
[Token(Token = "0x2000058")]
public class ComponentExampleConfiguration : ComponentBaseConfiguration
{
	[Serializable]
	[Token(Token = "0x2000059")]
	public class Entry : ConfigurationBase<Vector3>
	{
		[Token(Token = "0x60000F5")]
		[Address(RVA = "0xBE894C", Offset = "0xBE894C", VA = "0xBE894C")]
		public Entry()
		{
		}
	}

	[Token(Token = "0x400010A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	protected List<Entry> Configurations;

	[Token(Token = "0x1700001A")]
	public Vector3 this[string key]
	{
		[Token(Token = "0x60000F3")]
		[Address(RVA = "0xBE8850", Offset = "0xBE8850", VA = "0xBE8850")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x60000F4")]
	[Address(RVA = "0xBE8944", Offset = "0xBE8944", VA = "0xBE8944")]
	public ComponentExampleConfiguration()
	{
	}
}
[Token(Token = "0x200005B")]
[RequireComponent(typeof(RectTransform))]
[ExecuteAlways]
public class ConstraintRectUI : MonoBehaviour
{
	[Token(Token = "0x400010C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RectTransform Source;

	[Token(Token = "0x400010D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RectTransform target;

	[Token(Token = "0x60000F8")]
	[Address(RVA = "0xBE89B8", Offset = "0xBE89B8", VA = "0xBE89B8")]
	private void Awake()
	{
	}

	[Token(Token = "0x60000F9")]
	[Address(RVA = "0xBE8A08", Offset = "0xBE8A08", VA = "0xBE8A08")]
	public void Update()
	{
	}

	[Token(Token = "0x60000FA")]
	[Address(RVA = "0xBE8B30", Offset = "0xBE8B30", VA = "0xBE8B30")]
	public ConstraintRectUI()
	{
	}
}
[Token(Token = "0x200005C")]
public class CursorModeInput : MonoBehaviour
{
	[Token(Token = "0x200005D")]
	[CompilerGenerated]
	private sealed class <CursorUpdater>d__4 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000110")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x4000111")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x1700001B")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000103")]
			[Address(RVA = "0xBE8D9C", Offset = "0xBE8D9C", VA = "0xBE8D9C", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x1700001C")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000105")]
			[Address(RVA = "0xBE8DE4", Offset = "0xBE8DE4", VA = "0xBE8DE4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000100")]
		[Address(RVA = "0xBE8BD8", Offset = "0xBE8BD8", VA = "0xBE8BD8")]
		[DebuggerHidden]
		public <CursorUpdater>d__4(int <>1__state)
		{
		}

		[Token(Token = "0x6000101")]
		[Address(RVA = "0xBE8C98", Offset = "0xBE8C98", VA = "0xBE8C98", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000102")]
		[Address(RVA = "0xBE8C9C", Offset = "0xBE8C9C", VA = "0xBE8C9C", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000104")]
		[Address(RVA = "0xBE8DA4", Offset = "0xBE8DA4", VA = "0xBE8DA4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x400010E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public static CursorLockMode lockMode;

	[Token(Token = "0x400010F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
	private static WaitForSeconds refreshRate;

	[Token(Token = "0x60000FB")]
	[Address(RVA = "0xBE8B38", Offset = "0xBE8B38", VA = "0xBE8B38")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x60000FC")]
	[Address(RVA = "0xBE8BB8", Offset = "0xBE8BB8", VA = "0xBE8BB8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60000FD")]
	[Address(RVA = "0xBE8B58", Offset = "0xBE8B58", VA = "0xBE8B58")]
	[IteratorStateMachine(typeof(<CursorUpdater>d__4))]
	private IEnumerator CursorUpdater()
	{
		return null;
	}

	[Token(Token = "0x60000FE")]
	[Address(RVA = "0xBE8C00", Offset = "0xBE8C00", VA = "0xBE8C00")]
	public CursorModeInput()
	{
	}
}
[Token(Token = "0x200005E")]
public class InputComponentController : MonoBehaviour
{
	[Token(Token = "0x200005F")]
	public enum MouseButtonCode
	{
		[Token(Token = "0x4000115")]
		None,
		[Token(Token = "0x4000116")]
		Left,
		[Token(Token = "0x4000117")]
		Right,
		[Token(Token = "0x4000118")]
		Middle
	}

	[Token(Token = "0x4000112")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int DeviceIndex;

	[Token(Token = "0x4000113")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AvatarOverallInput.VirtualInputComponent VirtualInput;

	[Token(Token = "0x1700001D")]
	public bool IsActive
	{
		[Token(Token = "0x6000106")]
		[Address(RVA = "0xBE8DEC", Offset = "0xBE8DEC", VA = "0xBE8DEC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x6000107")]
	[Address(RVA = "0xBE8E94", Offset = "0xBE8E94", VA = "0xBE8E94")]
	protected float GetAnalogButton(string name, bool invert = false)
	{
		return default(float);
	}

	[Token(Token = "0x6000108")]
	[Address(RVA = "0xBE91DC", Offset = "0xBE91DC", VA = "0xBE91DC")]
	protected bool GetButton(string name, bool invert = false, float threshold = 0.5f)
	{
		return default(bool);
	}

	[Token(Token = "0x6000109")]
	[Address(RVA = "0xBE924C", Offset = "0xBE924C", VA = "0xBE924C")]
	protected float GetAxis(string negative, string positive, bool invert = false, float sensitivity = 1f)
	{
		return default(float);
	}

	[Token(Token = "0x600010A")]
	[Address(RVA = "0xBE93D0", Offset = "0xBE93D0", VA = "0xBE93D0", Slot = "4")]
	public virtual void Process()
	{
	}

	[Token(Token = "0x600010B")]
	[Address(RVA = "0xBE93D4", Offset = "0xBE93D4", VA = "0xBE93D4")]
	public InputComponentController()
	{
	}
}
[Token(Token = "0x2000060")]
public class InputHubController : MonoBehaviour
{
	[Token(Token = "0x2000061")]
	public enum Mode
	{
		[Token(Token = "0x4000121")]
		None,
		[Token(Token = "0x4000122")]
		Keyboard,
		[Token(Token = "0x4000123")]
		Mouse,
		[Token(Token = "0x4000124")]
		Gamepad,
		[Token(Token = "0x4000125")]
		Touchscreen
	}

	[Token(Token = "0x4000119")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnlyField(false)]
	[SerializeField]
	private Mode InputMode;

	[Token(Token = "0x400011A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnInputModeChanged;

	[Token(Token = "0x400011B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AvatarOverallInput.VirtualInputComponent Input;

	[Token(Token = "0x400011C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private InputComponentController Keyboard;

	[Token(Token = "0x400011D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private InputComponentController Mouse;

	[Token(Token = "0x400011E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private InputComponentController Gamepad;

	[Token(Token = "0x400011F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private InputComponentController Touchscreen;

	[Token(Token = "0x1700001E")]
	public Mode inputMode
	{
		[Token(Token = "0x600010C")]
		[Address(RVA = "0xBE93DC", Offset = "0xBE93DC", VA = "0xBE93DC")]
		get
		{
			return default(Mode);
		}
	}

	[Token(Token = "0x600010D")]
	[Address(RVA = "0xBE93E4", Offset = "0xBE93E4", VA = "0xBE93E4")]
	public void Process()
	{
	}

	[Token(Token = "0x600010E")]
	[Address(RVA = "0xBE9678", Offset = "0xBE9678", VA = "0xBE9678")]
	public InputHubController()
	{
	}
}
[Token(Token = "0x2000062")]
public class InputVibrationController : MonoBehaviour
{
	[Token(Token = "0x2000063")]
	public static class AndroidVibration
	{
		[Token(Token = "0x4000129")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static AndroidJavaClass unityPlayer;

		[Token(Token = "0x400012A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public static AndroidJavaObject currentActivity;

		[Token(Token = "0x400012B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public static AndroidJavaObject vibrator;

		[Token(Token = "0x6000111")]
		[Address(RVA = "0xBE98EC", Offset = "0xBE98EC", VA = "0xBE98EC")]
		public static void Vibrate()
		{
		}

		[Token(Token = "0x6000112")]
		[Address(RVA = "0xBE97B4", Offset = "0xBE97B4", VA = "0xBE97B4")]
		public static void Vibrate(long milliseconds)
		{
		}

		[Token(Token = "0x6000113")]
		[Address(RVA = "0xBE99E4", Offset = "0xBE99E4", VA = "0xBE99E4")]
		public static void Vibrate(long[] pattern, int repeat)
		{
		}

		[Token(Token = "0x6000114")]
		[Address(RVA = "0xBE9B38", Offset = "0xBE9B38", VA = "0xBE9B38")]
		public static bool HasVibrator()
		{
			return default(bool);
		}

		[Token(Token = "0x6000115")]
		[Address(RVA = "0xBE9B88", Offset = "0xBE9B88", VA = "0xBE9B88")]
		public static void Cancel()
		{
		}

		[Token(Token = "0x6000116")]
		[Address(RVA = "0xBE99DC", Offset = "0xBE99DC", VA = "0xBE99DC")]
		private static bool isAndroid()
		{
			return default(bool);
		}
	}

	[Token(Token = "0x4000126")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int DeviceIndex;

	[Token(Token = "0x4000127")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Range(0f, 1f)]
	public float Power;

	[Token(Token = "0x4000128")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InputHubController Hub;

	[Token(Token = "0x600010F")]
	[Address(RVA = "0xBE9680", Offset = "0xBE9680", VA = "0xBE9680")]
	public void Vibrate(float lowFrequency, float highFrequency)
	{
	}

	[Token(Token = "0x6000110")]
	[Address(RVA = "0xBE98DC", Offset = "0xBE98DC", VA = "0xBE98DC")]
	public InputVibrationController()
	{
	}
}
[Token(Token = "0x2000064")]
public class LayoutSwitchUI : MonoBehaviour
{
	[Token(Token = "0x400012C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnKeyboardMouseInput;

	[Token(Token = "0x400012D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnGamepadInput;

	[Token(Token = "0x400012E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnTouchscreenInput;

	[Token(Token = "0x6000118")]
	[Address(RVA = "0xBE9E24", Offset = "0xBE9E24", VA = "0xBE9E24")]
	private void Start()
	{
	}

	[Token(Token = "0x6000119")]
	[Address(RVA = "0xBE9F7C", Offset = "0xBE9F7C", VA = "0xBE9F7C")]
	public LayoutSwitchUI()
	{
	}
}
[Token(Token = "0x2000066")]
public class MechanicalAxisController : InputComponentController
{
	[Token(Token = "0x4000131")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string NegativeName;

	[Token(Token = "0x4000132")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string PositiveName;

	[Token(Token = "0x4000133")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool Invert;

	[Token(Token = "0x4000134")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Sensitivity;

	[Token(Token = "0x600011C")]
	[Address(RVA = "0xBE9FF8", Offset = "0xBE9FF8", VA = "0xBE9FF8", Slot = "4")]
	public override void Process()
	{
	}

	[Token(Token = "0x600011D")]
	[Address(RVA = "0xBEA024", Offset = "0xBEA024", VA = "0xBEA024")]
	public MechanicalAxisController()
	{
	}
}
[Token(Token = "0x2000067")]
public class MechanicalButtonController : InputComponentController
{
	[Token(Token = "0x4000135")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string Name;

	[Token(Token = "0x4000136")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float Threshold;

	[Token(Token = "0x4000137")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool Invert;

	[Token(Token = "0x600011E")]
	[Address(RVA = "0xBEA034", Offset = "0xBEA034", VA = "0xBEA034", Slot = "4")]
	public override void Process()
	{
	}

	[Token(Token = "0x600011F")]
	[Address(RVA = "0xBEA060", Offset = "0xBEA060", VA = "0xBEA060")]
	public MechanicalButtonController()
	{
	}
}
[Token(Token = "0x2000068")]
public class MechanicalDirection2DController : InputComponentController
{
	[Token(Token = "0x4000138")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string HorizontalNegativeName;

	[Token(Token = "0x4000139")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public string HorizontalPositiveName;

	[Token(Token = "0x400013A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool HorizontalInvert;

	[Token(Token = "0x400013B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float HorizontalSensitivity;

	[Token(Token = "0x400013C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public string VerticalNegativeName;

	[Token(Token = "0x400013D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public string VerticalPositiveName;

	[Token(Token = "0x400013E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool VerticalInvert;

	[Token(Token = "0x400013F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float VerticalSensitivity;

	[Token(Token = "0x6000120")]
	[Address(RVA = "0xBEA070", Offset = "0xBEA070", VA = "0xBEA070", Slot = "4")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000121")]
	[Address(RVA = "0xBEA0CC", Offset = "0xBEA0CC", VA = "0xBEA0CC")]
	public MechanicalDirection2DController()
	{
	}
}
[Token(Token = "0x2000069")]
[RequireComponent(typeof(Text))]
public class MechanicalPromptsUI : MonoBehaviour
{
	[Token(Token = "0x4000140")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private InputPostprocessController[] postprocessors;

	[Token(Token = "0x4000141")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Text label;

	[Token(Token = "0x6000122")]
	[Address(RVA = "0xBEA0E0", Offset = "0xBEA0E0", VA = "0xBEA0E0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000123")]
	[Address(RVA = "0xBEA22C", Offset = "0xBEA22C", VA = "0xBEA22C")]
	private void UpdatePrompts(params string[] filters)
	{
	}

	[Token(Token = "0x6000124")]
	[Address(RVA = "0xBEA9C4", Offset = "0xBEA9C4", VA = "0xBEA9C4")]
	public MechanicalPromptsUI()
	{
	}
}
[Token(Token = "0x200006A")]
[RequireComponent(typeof(InputHubController))]
public class InputPostprocessController : MonoBehaviour
{
	[Token(Token = "0x4000142")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string AvatarInputName;

	[Token(Token = "0x4000143")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool NormalizeMagnitude;

	[Token(Token = "0x4000144")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerCameraController playerCamera;

	[Token(Token = "0x4000145")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	protected InputHubController hub;

	[Token(Token = "0x1700001F")]
	protected AvatarOverallInput input
	{
		[Token(Token = "0x6000127")]
		[Address(RVA = "0xBEAB64", Offset = "0xBEAB64", VA = "0xBEAB64")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x6000128")]
	[Address(RVA = "0xBEAB80", Offset = "0xBEAB80", VA = "0xBEAB80", Slot = "4")]
	protected virtual void Awake()
	{
	}

	[Token(Token = "0x6000129")]
	[Address(RVA = "0xBEAC04", Offset = "0xBEAC04", VA = "0xBEAC04", Slot = "5")]
	protected virtual void FixedUpdate()
	{
	}

	[Token(Token = "0x600012A")]
	[Address(RVA = "0xBEAE08", Offset = "0xBEAE08", VA = "0xBEAE08")]
	public InputPostprocessController()
	{
	}
}
[Token(Token = "0x200006B")]
[RequireComponent(typeof(Animator))]
public class InputButtonAnimator : MonoBehaviour
{
	[Token(Token = "0x4000146")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InputHubController hub;

	[Token(Token = "0x4000147")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x600012B")]
	[Address(RVA = "0xBEAE18", Offset = "0xBEAE18", VA = "0xBEAE18")]
	private void Start()
	{
	}

	[Token(Token = "0x600012C")]
	[Address(RVA = "0xBEAE68", Offset = "0xBEAE68", VA = "0xBEAE68")]
	private void Update()
	{
	}

	[Token(Token = "0x600012D")]
	[Address(RVA = "0xBEAED0", Offset = "0xBEAED0", VA = "0xBEAED0")]
	public InputButtonAnimator()
	{
	}
}
[Token(Token = "0x200006C")]
[RequireComponent(typeof(Button))]
public class TouchscreenButtonController : InputComponentController
{
	[Token(Token = "0x200006D")]
	[CompilerGenerated]
	private sealed class <ReleaseButton>d__2 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x4000149")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x400014A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x400014B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public TouchscreenButtonController <>4__this;

		[Token(Token = "0x17000020")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x6000136")]
			[Address(RVA = "0xBEB2AC", Offset = "0xBEB2AC", VA = "0xBEB2AC", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000021")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x6000138")]
			[Address(RVA = "0xBEB2F4", Offset = "0xBEB2F4", VA = "0xBEB2F4", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000133")]
		[Address(RVA = "0xBEB1E4", Offset = "0xBEB1E4", VA = "0xBEB1E4")]
		[DebuggerHidden]
		public <ReleaseButton>d__2(int <>1__state)
		{
		}

		[Token(Token = "0x6000134")]
		[Address(RVA = "0xBEB250", Offset = "0xBEB250", VA = "0xBEB250", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x6000135")]
		[Address(RVA = "0xBEB254", Offset = "0xBEB254", VA = "0xBEB254", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x6000137")]
		[Address(RVA = "0xBEB2B4", Offset = "0xBEB2B4", VA = "0xBEB2B4", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x4000148")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Button button;

	[Token(Token = "0x600012E")]
	[Address(RVA = "0xBEAED8", Offset = "0xBEAED8", VA = "0xBEAED8")]
	private void Start()
	{
	}

	[Token(Token = "0x600012F")]
	[Address(RVA = "0xBEB17C", Offset = "0xBEB17C", VA = "0xBEB17C")]
	[IteratorStateMachine(typeof(<ReleaseButton>d__2))]
	private IEnumerator ReleaseButton()
	{
		return null;
	}

	[Token(Token = "0x6000130")]
	[Address(RVA = "0xBEB20C", Offset = "0xBEB20C", VA = "0xBEB20C")]
	public TouchscreenButtonController()
	{
	}
}
[Token(Token = "0x200006E")]
public class TouchscreenJoystickAnimator : MonoBehaviour
{
	[Token(Token = "0x400014C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Graphic Base;

	[Token(Token = "0x400014D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Graphic Button;

	[Token(Token = "0x400014E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TouchscreenJoystickController Controller;

	[Token(Token = "0x400014F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color baseColor;

	[Token(Token = "0x4000150")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Color buttonColor;

	[Token(Token = "0x4000151")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private RectTransform joystickRect;

	[Token(Token = "0x4000152")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Canvas canvas;

	[Token(Token = "0x6000139")]
	[Address(RVA = "0xBEB2FC", Offset = "0xBEB2FC", VA = "0xBEB2FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600013A")]
	[Address(RVA = "0xBEB3D0", Offset = "0xBEB3D0", VA = "0xBEB3D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600013B")]
	[Address(RVA = "0xBEB594", Offset = "0xBEB594", VA = "0xBEB594")]
	public TouchscreenJoystickAnimator()
	{
	}
}
[Token(Token = "0x200006F")]
[RequireComponent(typeof(RectTransform))]
public class TouchscreenJoystickController : InputComponentController
{
	[Token(Token = "0x4000153")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool HorizontalInvert;

	[Token(Token = "0x4000154")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float HorizontalSensitivity;

	[Token(Token = "0x4000155")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool VerticalInvert;

	[Token(Token = "0x4000156")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float VerticalSensitivity;

	[Token(Token = "0x4000157")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform rectTransform;

	[Token(Token = "0x17000022")]
	public Vector2 StartPosition
	{
		[Token(Token = "0x600013C")]
		[Address(RVA = "0xBEB59C", Offset = "0xBEB59C", VA = "0xBEB59C")]
		[CompilerGenerated]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x600013D")]
		[Address(RVA = "0xBEB5A4", Offset = "0xBEB5A4", VA = "0xBEB5A4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x600013E")]
	[Address(RVA = "0xBEB5AC", Offset = "0xBEB5AC", VA = "0xBEB5AC")]
	private void Awake()
	{
	}

	[Token(Token = "0x600013F")]
	[Address(RVA = "0xBEB5FC", Offset = "0xBEB5FC", VA = "0xBEB5FC", Slot = "4")]
	public override void Process()
	{
	}

	[Token(Token = "0x6000140")]
	[Address(RVA = "0xBEB920", Offset = "0xBEB920", VA = "0xBEB920")]
	public TouchscreenJoystickController()
	{
	}
}
[Token(Token = "0x2000071")]
public class TouchscreenSteerAnimator : MonoBehaviour
{
	[Token(Token = "0x400015A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Graphic Steer;

	[Token(Token = "0x400015B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float SteerAngle;

	[Token(Token = "0x400015C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public TouchscreenSteerController Controller;

	[Token(Token = "0x400015D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Color steerColor;

	[Token(Token = "0x400015E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Canvas canvas;

	[Token(Token = "0x400015F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private RectTransform steerRect;

	[Token(Token = "0x6000143")]
	[Address(RVA = "0xBEB9A8", Offset = "0xBEB9A8", VA = "0xBEB9A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000144")]
	[Address(RVA = "0xBEBA60", Offset = "0xBEBA60", VA = "0xBEBA60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000145")]
	[Address(RVA = "0xBEBC24", Offset = "0xBEBC24", VA = "0xBEBC24")]
	public TouchscreenSteerAnimator()
	{
	}
}
[Token(Token = "0x2000072")]
[RequireComponent(typeof(RectTransform))]
public class TouchscreenSteerController : InputComponentController
{
	[Token(Token = "0x4000160")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool Invert;

	[Token(Token = "0x4000161")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Sensitivity;

	[Token(Token = "0x4000162")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RectTransform rectTransform;

	[Token(Token = "0x17000023")]
	public Vector2 StartPosition
	{
		[Token(Token = "0x6000146")]
		[Address(RVA = "0xBEBC34", Offset = "0xBEBC34", VA = "0xBEBC34")]
		[CompilerGenerated]
		get
		{
			return default(Vector2);
		}
		[Token(Token = "0x6000147")]
		[Address(RVA = "0xBEBC3C", Offset = "0xBEBC3C", VA = "0xBEBC3C")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000148")]
	[Address(RVA = "0xBEBC44", Offset = "0xBEBC44", VA = "0xBEBC44")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000149")]
	[Address(RVA = "0xBEBC94", Offset = "0xBEBC94", VA = "0xBEBC94", Slot = "4")]
	public override void Process()
	{
	}

	[Token(Token = "0x600014A")]
	[Address(RVA = "0xBEBE94", Offset = "0xBEBE94", VA = "0xBEBE94")]
	public TouchscreenSteerController()
	{
	}
}
[Token(Token = "0x2000074")]
[RequireComponent(typeof(RectTransform))]
public class TouchscreenTrackpadController : InputComponentController
{
	[Token(Token = "0x4000165")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool HorizontalInvert;

	[Token(Token = "0x4000166")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float HorizontalSensitivity;

	[Token(Token = "0x4000167")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool VerticalInvert;

	[Token(Token = "0x4000168")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float VerticalSensitivity;

	[Token(Token = "0x4000169")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private RectTransform rectTransform;

	[Token(Token = "0x600014D")]
	[Address(RVA = "0xBEBF18", Offset = "0xBEBF18", VA = "0xBEBF18")]
	private void Awake()
	{
	}

	[Token(Token = "0x600014E")]
	[Address(RVA = "0xBEBF68", Offset = "0xBEBF68", VA = "0xBEBF68", Slot = "4")]
	public override void Process()
	{
	}

	[Token(Token = "0x600014F")]
	[Address(RVA = "0xBEC15C", Offset = "0xBEC15C", VA = "0xBEC15C")]
	public TouchscreenTrackpadController()
	{
	}
}
[Token(Token = "0x2000076")]
public class InputConfigurationController : MonoBehaviour
{
	[Token(Token = "0x6000152")]
	[Address(RVA = "0xBEC1E0", Offset = "0xBEC1E0", VA = "0xBEC1E0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000153")]
	[Address(RVA = "0xBEC734", Offset = "0xBEC734", VA = "0xBEC734")]
	public InputConfigurationController()
	{
	}
}
[Token(Token = "0x2000077")]
public class ManagerInputController : MonoBehaviour
{
	[Token(Token = "0x17000024")]
	public static ManagerInputController Instance
	{
		[Token(Token = "0x6000154")]
		[Address(RVA = "0xBEC73C", Offset = "0xBEC73C", VA = "0xBEC73C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000155")]
		[Address(RVA = "0xBEC784", Offset = "0xBEC784", VA = "0xBEC784")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000156")]
	[Address(RVA = "0xBEC7D0", Offset = "0xBEC7D0", VA = "0xBEC7D0")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000157")]
	[Address(RVA = "0xBEC574", Offset = "0xBEC574", VA = "0xBEC574")]
	public bool ApplyInputConfiguration(InputComponentController target, int playerIndex, string inputName, string deviceName)
	{
		return default(bool);
	}

	[Token(Token = "0x6000158")]
	[Address(RVA = "0xBEC81C", Offset = "0xBEC81C", VA = "0xBEC81C")]
	public ManagerInputController()
	{
	}
}
[Token(Token = "0x2000078")]
public class AvatarSeatController : MonoBehaviour
{
	[Token(Token = "0x400016C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Input")]
	public string ExitButton;

	[Token(Token = "0x400016D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Parameters")]
	public InteractionReceiverController InteractionReceiver;

	[Token(Token = "0x400016E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Events")]
	public UnityEvent OnEnter;

	[Token(Token = "0x400016F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnExit;

	[Token(Token = "0x6000159")]
	[Address(RVA = "0xBEC824", Offset = "0xBEC824", VA = "0xBEC824")]
	private void Start()
	{
	}

	[Token(Token = "0x600015A")]
	[Address(RVA = "0xBEC984", Offset = "0xBEC984", VA = "0xBEC984")]
	private void SetSenderSeatState(Transform sender, bool isUsingSeat)
	{
	}

	[Token(Token = "0x600015B")]
	[Address(RVA = "0xBECB48", Offset = "0xBECB48", VA = "0xBECB48")]
	public AvatarSeatController()
	{
	}
}
[Token(Token = "0x2000079")]
public class InteractionReceiverController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x200007A")]
	public class InteractionEvent : BaseEvent<InteractionSenderController>
	{
		[Token(Token = "0x6000163")]
		[Address(RVA = "0xBED058", Offset = "0xBED058", VA = "0xBED058")]
		public InteractionEvent()
		{
		}
	}

	[Token(Token = "0x4000170")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InteractionEvent OnSenderFocused;

	[Token(Token = "0x4000171")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InteractionEvent OnSenderUnfocused;

	[Token(Token = "0x4000172")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnInteractionActive;

	[Token(Token = "0x4000173")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnInteractionInactive;

	[Token(Token = "0x4000174")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public InteractionEvent OnInteractionPerform;

	[Token(Token = "0x4000175")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<InteractionSenderController> focusedSenders;

	[Token(Token = "0x600015E")]
	[Address(RVA = "0xBECC74", Offset = "0xBECC74", VA = "0xBECC74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600015F")]
	[Address(RVA = "0xBECD28", Offset = "0xBECD28", VA = "0xBECD28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000160")]
	[Address(RVA = "0xBECE1C", Offset = "0xBECE1C", VA = "0xBECE1C")]
	public InteractionReceiverController()
	{
	}
}
[Token(Token = "0x200007B")]
public class InteractionSenderController : MonoBehaviour
{
	[Token(Token = "0x4000176")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Input")]
	public string InteractButton;

	[Token(Token = "0x4000177")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AvatarOverallInput input;

	[Token(Token = "0x4000178")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Parameters")]
	public Transform RayOrigin;

	[Token(Token = "0x4000179")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float RayLength;

	[Token(Token = "0x400017A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float RayThickness;

	[Token(Token = "0x400017B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Collider receiverCollider;

	[Token(Token = "0x400017C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[ReadOnlyField(false)]
	[SerializeField]
	private InteractionReceiverController receiver;

	[Token(Token = "0x17000025")]
	public bool HasReceiver
	{
		[Token(Token = "0x6000164")]
		[Address(RVA = "0xBED0A0", Offset = "0xBED0A0", VA = "0xBED0A0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000026")]
	private InteractionReceiverController Receiver
	{
		[Token(Token = "0x6000165")]
		[Address(RVA = "0xBED100", Offset = "0xBED100", VA = "0xBED100")]
		get
		{
			return null;
		}
		[Token(Token = "0x6000166")]
		[Address(RVA = "0xBED108", Offset = "0xBED108", VA = "0xBED108")]
		set
		{
		}
	}

	[Token(Token = "0x6000167")]
	[Address(RVA = "0xBED210", Offset = "0xBED210", VA = "0xBED210")]
	private void Start()
	{
	}

	[Token(Token = "0x6000168")]
	[Address(RVA = "0xBED2F0", Offset = "0xBED2F0", VA = "0xBED2F0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000169")]
	[Address(RVA = "0xBED30C", Offset = "0xBED30C", VA = "0xBED30C")]
	private void Update()
	{
	}

	[Token(Token = "0x600016A")]
	[Address(RVA = "0xBED4E8", Offset = "0xBED4E8", VA = "0xBED4E8")]
	public InteractionSenderController()
	{
	}
}
[Token(Token = "0x200007C")]
public class ObjectPickupController : MonoBehaviour
{
	[Token(Token = "0x600016C")]
	[Address(RVA = "0xBED5D8", Offset = "0xBED5D8", VA = "0xBED5D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600016D")]
	[Address(RVA = "0xBED69C", Offset = "0xBED69C", VA = "0xBED69C")]
	public ObjectPickupController()
	{
	}
}
[Token(Token = "0x200007D")]
public class CameraCollisionController : MonoBehaviour
{
	[Token(Token = "0x17000027")]
	public Collider[] avatarColliders
	{
		[Token(Token = "0x600016F")]
		[Address(RVA = "0xBED6EC", Offset = "0xBED6EC", VA = "0xBED6EC")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x6000170")]
		[Address(RVA = "0xBED6F4", Offset = "0xBED6F4", VA = "0xBED6F4")]
		[CompilerGenerated]
		private set
		{
		}
	}

	[Token(Token = "0x6000171")]
	[Address(RVA = "0xBED6FC", Offset = "0xBED6FC", VA = "0xBED6FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000172")]
	[Address(RVA = "0xBED754", Offset = "0xBED754", VA = "0xBED754")]
	private void OnTransformChildrenChanged()
	{
	}

	[Token(Token = "0x6000173")]
	[Address(RVA = "0xBED700", Offset = "0xBED700", VA = "0xBED700")]
	public void UpdateAvatarColliders()
	{
	}

	[Token(Token = "0x6000174")]
	[Address(RVA = "0xBED758", Offset = "0xBED758", VA = "0xBED758")]
	public CameraCollisionController()
	{
	}
}
[Token(Token = "0x200007E")]
public class CameraMovementController : MonoBehaviour
{
	[Token(Token = "0x200007F")]
	public enum MotionType
	{
		[Token(Token = "0x4000185")]
		Local,
		[Token(Token = "0x4000186")]
		Global
	}

	[Token(Token = "0x400017E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Input")]
	public string HorizontalDirection;

	[Token(Token = "0x400017F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string RiseButton;

	[Token(Token = "0x4000180")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string DescendButton;

	[Token(Token = "0x4000181")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AvatarOverallInput input;

	[Token(Token = "0x4000182")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Parameters")]
	public MotionType Motion;

	[Token(Token = "0x4000183")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Speed;

	[Token(Token = "0x6000175")]
	[Address(RVA = "0xBED760", Offset = "0xBED760", VA = "0xBED760")]
	private void Start()
	{
	}

	[Token(Token = "0x6000176")]
	[Address(RVA = "0xBED7B0", Offset = "0xBED7B0", VA = "0xBED7B0")]
	public void ToggleMotionType()
	{
	}

	[Token(Token = "0x6000177")]
	[Address(RVA = "0xBED7D4", Offset = "0xBED7D4", VA = "0xBED7D4")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000178")]
	[Address(RVA = "0xBEDB08", Offset = "0xBEDB08", VA = "0xBEDB08")]
	public CameraMovementController()
	{
	}
}
[Token(Token = "0x2000080")]
public class CameraViewConfiguration : ComponentBaseConfiguration
{
	[Serializable]
	[Token(Token = "0x2000081")]
	private class Entry : ConfigurationBase<CameraConfiguration>
	{
		[Token(Token = "0x600017F")]
		[Address(RVA = "0xBEDF8C", Offset = "0xBEDF8C", VA = "0xBEDF8C")]
		public Entry()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x2000082")]
	public class CameraConfiguration
	{
		[Token(Token = "0x2000083")]
		public enum UpAxisSource
		{
			[Token(Token = "0x400019A")]
			GlobalUp,
			[Token(Token = "0x400019B")]
			NegativeConstantForce,
			[Token(Token = "0x400019C")]
			AvatarUp,
			[Token(Token = "0x400019D")]
			NegativePhysicsGravity,
			[Token(Token = "0x400019E")]
			OriginUp
		}

		[Token(Token = "0x2000084")]
		public enum ForwardAxisSource
		{
			[Token(Token = "0x40001A0")]
			GlobalForward,
			[Token(Token = "0x40001A1")]
			TrackParentDelta,
			[Token(Token = "0x40001A2")]
			AvatarForward,
			[Token(Token = "0x40001A3")]
			AvatarParentForward,
			[Token(Token = "0x40001A4")]
			OriginForward
		}

		[Token(Token = "0x2000085")]
		public enum AutofollowMode
		{
			[Token(Token = "0x40001A6")]
			None,
			[Token(Token = "0x40001A7")]
			AvatarVelocity,
			[Token(Token = "0x40001A8")]
			ZeroRotation
		}

		[Token(Token = "0x400018A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public bool IsInSelectionCycle;

		[Token(Token = "0x400018B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Origin parameters")]
		public Transform Origin;

		[Token(Token = "0x400018C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public UpAxisSource OriginUpSource;

		[Token(Token = "0x400018D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public ForwardAxisSource OriginForwardSource;

		[Token(Token = "0x400018E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 1f)]
		public float OriginSlerp;

		[Token(Token = "0x400018F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Header("View parameters")]
		public float Distance;

		[Token(Token = "0x4000190")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float FocusDistance;

		[Token(Token = "0x4000191")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Range(0f, 1f)]
		public float DistanceLerp;

		[Token(Token = "0x4000192")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Autofollow parameters")]
		public AutofollowMode Autofollow;

		[Token(Token = "0x4000193")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Range(0f, 1f)]
		public float AutofollowLerp;

		[Token(Token = "0x4000194")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float AutofollowTimeout;

		[Token(Token = "0x4000195")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[MinMaxField(-180, 180)]
		[Header("Limits properties")]
		public Vector2 XLimit;

		[Token(Token = "0x4000196")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[MinMaxField(-180, 180)]
		public Vector2 YLimit;

		[Token(Token = "0x4000197")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Header("FOV parameters")]
		[Range(0f, 180f)]
		public float FOV;

		[Token(Token = "0x4000198")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Range(0f, 1f)]
		public float FOVLerp;

		[Token(Token = "0x6000180")]
		[Address(RVA = "0xBEDFD4", Offset = "0xBEDFD4", VA = "0xBEDFD4")]
		public CameraConfiguration()
		{
		}
	}

	[Token(Token = "0x4000187")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[HideInInspector]
	private List<Entry> Configurations;

	[Token(Token = "0x4000188")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CameraViewController camController;

	[Token(Token = "0x4000189")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int cycleActiveMode;

	[Token(Token = "0x17000028")]
	public override string activeMode
	{
		[Token(Token = "0x6000179")]
		[Address(RVA = "0xBEDBA4", Offset = "0xBEDBA4", VA = "0xBEDBA4", Slot = "4")]
		get
		{
			return null;
		}
		[Token(Token = "0x600017A")]
		[Address(RVA = "0xBEDBAC", Offset = "0xBEDBAC", VA = "0xBEDBAC", Slot = "5")]
		set
		{
		}
	}

	[Token(Token = "0x17000029")]
	protected CameraConfiguration this[string key]
	{
		[Token(Token = "0x600017B")]
		[Address(RVA = "0xBEDCC0", Offset = "0xBEDCC0", VA = "0xBEDCC0")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x600017C")]
	[Address(RVA = "0xBEDDB0", Offset = "0xBEDDB0", VA = "0xBEDDB0")]
	public void SelectInCycle(bool scrollForward)
	{
	}

	[Token(Token = "0x600017D")]
	[Address(RVA = "0xBEDEE4", Offset = "0xBEDEE4", VA = "0xBEDEE4")]
	public void ReturnToCycle()
	{
	}

	[Token(Token = "0x600017E")]
	[Address(RVA = "0xBEDF84", Offset = "0xBEDF84", VA = "0xBEDF84")]
	public CameraViewConfiguration()
	{
	}
}
[Token(Token = "0x2000087")]
[RequireComponent(typeof(PlayerCameraController))]
public class CameraViewController : MonoBehaviour
{
	[Token(Token = "0x40001AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Input")]
	public string ViewDeltaDirection;

	[Token(Token = "0x40001AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("General")]
	public CameraViewConfiguration.CameraConfiguration Mode;

	[Token(Token = "0x40001AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ReadOnlyField(false)]
	public CameraCollisionController Collision;

	[Token(Token = "0x40001AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[ReadOnlyField(false)]
	public ConstantForce constantForce;

	[Token(Token = "0x40001AE")]
	private const float camRadius = 0.1f;

	[Token(Token = "0x40001AF")]
	private const float sqrDeadzone = 0.010000001f;

	[Token(Token = "0x40001B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float viewResetTimer;

	[Token(Token = "0x40001B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float camDistance;

	[Token(Token = "0x40001B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion originRotation;

	[Token(Token = "0x40001B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform lastParent;

	[Token(Token = "0x40001B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Quaternion viewAngles;

	[Token(Token = "0x40001B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Quaternion oldParentRotation;

	[Token(Token = "0x40001B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 lastAvatarLocalPosition;

	[Token(Token = "0x40001B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 avatarVelocity;

	[Token(Token = "0x40001B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private PlayerCameraController playerCamera;

	[Token(Token = "0x40001B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Camera[] cameras;

	[Token(Token = "0x40001BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[HideInInspector]
	public Vector3 PositionOffset;

	[Token(Token = "0x40001BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	[HideInInspector]
	public Quaternion RotationOffset;

	[Token(Token = "0x40001BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xBC")]
	[HideInInspector]
	public float FOVOffset;

	[Token(Token = "0x40001BD")]
	private const float OffsetLerp = 0.3f;

	[Token(Token = "0x1700002A")]
	private Vector2 viewDeltaDirection
	{
		[Token(Token = "0x6000183")]
		[Address(RVA = "0xBEE024", Offset = "0xBEE024", VA = "0xBEE024")]
		get
		{
			return default(Vector2);
		}
	}

	[Token(Token = "0x1700002B")]
	private Transform avatarRoot
	{
		[Token(Token = "0x6000184")]
		[Address(RVA = "0xBEE094", Offset = "0xBEE094", VA = "0xBEE094")]
		get
		{
			return null;
		}
	}

	[Token(Token = "0x1700002C")]
	private bool hasAxisUp
	{
		[Token(Token = "0x6000185")]
		[Address(RVA = "0xBEE0B0", Offset = "0xBEE0B0", VA = "0xBEE0B0")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x1700002D")]
	private Quaternion parentRotation
	{
		[Token(Token = "0x6000186")]
		[Address(RVA = "0xBEE1E4", Offset = "0xBEE1E4", VA = "0xBEE1E4")]
		get
		{
			return default(Quaternion);
		}
	}

	[Token(Token = "0x1700002E")]
	private Vector3 originUp
	{
		[Token(Token = "0x6000187")]
		[Address(RVA = "0xBEE2D4", Offset = "0xBEE2D4", VA = "0xBEE2D4")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x1700002F")]
	private Vector3 originForward
	{
		[Token(Token = "0x6000188")]
		[Address(RVA = "0xBEE4BC", Offset = "0xBEE4BC", VA = "0xBEE4BC")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x6000189")]
	[Address(RVA = "0xBEE78C", Offset = "0xBEE78C", VA = "0xBEE78C")]
	private void Start()
	{
	}

	[Token(Token = "0x600018A")]
	[Address(RVA = "0xBEE898", Offset = "0xBEE898", VA = "0xBEE898")]
	private static void UpdateOriginRotation(ref Quaternion rotation, Vector3 forward, Vector3 up, float slerp)
	{
	}

	[Token(Token = "0x600018B")]
	[Address(RVA = "0xBEEAD4", Offset = "0xBEEAD4", VA = "0xBEEAD4")]
	private static void UpdateViewAngles(ref Quaternion viewAngles, Vector2 input, bool isLimited, Vector2 XLimit, Vector2 YLimit)
	{
	}

	[Token(Token = "0x600018C")]
	[Address(RVA = "0xBEEE30", Offset = "0xBEEE30", VA = "0xBEEE30")]
	private static float GetRaycastDistance(Vector3 origin, Vector3 direction, float maxDistance, float radius, Collider[] ignoreColliders)
	{
		return default(float);
	}

	[Token(Token = "0x600018D")]
	[Address(RVA = "0xBEF098", Offset = "0xBEF098", VA = "0xBEF098")]
	private static Vector3 GetRaycastPoint(Vector3 origin, Vector3 direction, float maxDistance, float radius, Collider[] ignoreColliders)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600018E")]
	[Address(RVA = "0xBEF0F0", Offset = "0xBEF0F0", VA = "0xBEF0F0")]
	private static void UpdateFOV(Camera[] cameras, float fov, float lerp)
	{
	}

	[Token(Token = "0x600018F")]
	[Address(RVA = "0xBEF18C", Offset = "0xBEF18C", VA = "0xBEF18C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000190")]
	[Address(RVA = "0xBEF7F8", Offset = "0xBEF7F8", VA = "0xBEF7F8")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000191")]
	[Address(RVA = "0xBEFC3C", Offset = "0xBEFC3C", VA = "0xBEFC3C")]
	public CameraViewController()
	{
	}
}
[Token(Token = "0x2000089")]
public class PlayerCameraController : MonoBehaviour
{
	[Token(Token = "0x40001C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnlyField(false)]
	public AvatarOverallInput ControllableAvatar;

	[Token(Token = "0x40001C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform AvatarLayoutParent;

	[Token(Token = "0x40001C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int PlayerIndex;

	[Token(Token = "0x40001C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject lastAvatarLayout;

	[Token(Token = "0x40001C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CameraViewController camController;

	[Token(Token = "0x6000195")]
	[Address(RVA = "0xBEFD04", Offset = "0xBEFD04", VA = "0xBEFD04")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000196")]
	[Address(RVA = "0xBF0028", Offset = "0xBF0028", VA = "0xBF0028")]
	private void OnTransformParentChanged()
	{
	}

	[Token(Token = "0x6000197")]
	[Address(RVA = "0xBEFD58", Offset = "0xBEFD58", VA = "0xBEFD58")]
	private void UpdateControllableAvatar()
	{
	}

	[Token(Token = "0x6000198")]
	[Address(RVA = "0xBF002C", Offset = "0xBF002C", VA = "0xBF002C")]
	public PlayerCameraController()
	{
	}
}
[Token(Token = "0x200008A")]
[RequireComponent(typeof(ConstantForce))]
public class CharacterGravityPhysicsExample : MonoBehaviour
{
	[Token(Token = "0x200008B")]
	[CompilerGenerated]
	private sealed class <GUpdater>d__7 : IEnumerator<object>, IEnumerator, IDisposable
	{
		[Token(Token = "0x40001C9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private int <>1__state;

		[Token(Token = "0x40001CA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private object <>2__current;

		[Token(Token = "0x40001CB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public CharacterGravityPhysicsExample <>4__this;

		[Token(Token = "0x17000031")]
		private object System.Collections.Generic.IEnumerator<System.Object>.Current
		{
			[Token(Token = "0x60001A1")]
			[Address(RVA = "0xBF0488", Offset = "0xBF0488", VA = "0xBF0488", Slot = "4")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000032")]
		private object System.Collections.IEnumerator.Current
		{
			[Token(Token = "0x60001A3")]
			[Address(RVA = "0xBF04D0", Offset = "0xBF04D0", VA = "0xBF04D0", Slot = "7")]
			[DebuggerHidden]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600019E")]
		[Address(RVA = "0xBF019C", Offset = "0xBF019C", VA = "0xBF019C")]
		[DebuggerHidden]
		public <GUpdater>d__7(int <>1__state)
		{
		}

		[Token(Token = "0x600019F")]
		[Address(RVA = "0xBF0390", Offset = "0xBF0390", VA = "0xBF0390", Slot = "5")]
		[DebuggerHidden]
		private void System.IDisposable.Dispose()
		{
		}

		[Token(Token = "0x60001A0")]
		[Address(RVA = "0xBF0394", Offset = "0xBF0394", VA = "0xBF0394", Slot = "6")]
		private bool MoveNext()
		{
			return default(bool);
		}

		[Token(Token = "0x60001A2")]
		[Address(RVA = "0xBF0490", Offset = "0xBF0490", VA = "0xBF0490", Slot = "8")]
		[DebuggerHidden]
		private void System.Collections.IEnumerator.Reset()
		{
		}
	}

	[Token(Token = "0x40001C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float GUpdatePeriod;

	[Token(Token = "0x40001C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private ConstantForce force;

	[Token(Token = "0x40001C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Range(0f, 1f)]
	private float SlerpPower;

	[Token(Token = "0x40001C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3[] GDirections;

	[Token(Token = "0x17000030")]
	private bool IgnoreGravity
	{
		[Token(Token = "0x6000199")]
		[Address(RVA = "0xBF0034", Offset = "0xBF0034", VA = "0xBF0034")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600019A")]
	[Address(RVA = "0xBF00D0", Offset = "0xBF00D0", VA = "0xBF00D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600019B")]
	[Address(RVA = "0xBF0134", Offset = "0xBF0134", VA = "0xBF0134")]
	[IteratorStateMachine(typeof(<GUpdater>d__7))]
	private IEnumerator GUpdater()
	{
		return null;
	}

	[Token(Token = "0x600019C")]
	[Address(RVA = "0xBF01C4", Offset = "0xBF01C4", VA = "0xBF01C4")]
	private void Update()
	{
	}

	[Token(Token = "0x600019D")]
	[Address(RVA = "0xBF0280", Offset = "0xBF0280", VA = "0xBF0280")]
	public CharacterGravityPhysicsExample()
	{
	}
}
[Token(Token = "0x200008C")]
public class CollisionDismembermentPhysics : MonoBehaviour
{
	[Token(Token = "0x60001A4")]
	[Address(RVA = "0xBF04D8", Offset = "0xBF04D8", VA = "0xBF04D8")]
	public void Dismember(ObjectCollisionPhysics.CollisionData data)
	{
	}

	[Token(Token = "0x60001A5")]
	[Address(RVA = "0xBF05F4", Offset = "0xBF05F4", VA = "0xBF05F4")]
	public CollisionDismembermentPhysics()
	{
	}
}
[Token(Token = "0x200008D")]
[RequireComponent(typeof(Joint))]
public class JointDismemberPhysics : MonoBehaviour
{
	[Token(Token = "0x40001CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ReadOnlyField(true)]
	[Header("Parameters")]
	public float breakForce;

	[Token(Token = "0x40001CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[ReadOnlyField(true)]
	public float breakTorque;

	[Token(Token = "0x40001CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RagdollDismembermentVisual visual;

	[Token(Token = "0x40001CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Joint joint;

	[Token(Token = "0x40001D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float sqrBreakForce;

	[Token(Token = "0x40001D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float sqrBreakTorque;

	[Token(Token = "0x60001A6")]
	[Address(RVA = "0xBF05FC", Offset = "0xBF05FC", VA = "0xBF05FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001A7")]
	[Address(RVA = "0xBF0700", Offset = "0xBF0700", VA = "0xBF0700")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001A8")]
	[Address(RVA = "0xBF05B0", Offset = "0xBF05B0", VA = "0xBF05B0")]
	public void BreakJoint()
	{
	}

	[Token(Token = "0x60001A9")]
	[Address(RVA = "0xBF09A4", Offset = "0xBF09A4", VA = "0xBF09A4")]
	public JointDismemberPhysics()
	{
	}
}
[Token(Token = "0x200008E")]
public class RagdollDismembermentVisual : MonoBehaviour
{
	[Token(Token = "0x200008F")]
	private enum BindposeReplacementMode
	{
		[Token(Token = "0x40001D9")]
		ReplaceParents,
		[Token(Token = "0x40001DA")]
		ReplaceChildren
	}

	[Token(Token = "0x2000090")]
	public enum SelectionMode
	{
		[Token(Token = "0x40001DC")]
		Add,
		[Token(Token = "0x40001DD")]
		Replace
	}

	[Token(Token = "0x2000091")]
	public enum SelectionStatus
	{
		[Token(Token = "0x40001DF")]
		Empty,
		[Token(Token = "0x40001E0")]
		Mixed,
		[Token(Token = "0x40001E1")]
		Full
	}

	[Serializable]
	[Token(Token = "0x2000092")]
	public class DismemberOperationEvent : UnityEvent<string>
	{
		[Token(Token = "0x60001B6")]
		[Address(RVA = "0xBF1AE0", Offset = "0xBF1AE0", VA = "0xBF1AE0")]
		public DismemberOperationEvent()
		{
		}
	}

	[Token(Token = "0x2000094")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass8_0
	{
		[Token(Token = "0x40001E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BodyFragment fragment;

		[Token(Token = "0x60001B9")]
		[Address(RVA = "0xBF1B4C", Offset = "0xBF1B4C", VA = "0xBF1B4C")]
		public <>c__DisplayClass8_0()
		{
		}

		[Token(Token = "0x60001BA")]
		[Address(RVA = "0xBF1B54", Offset = "0xBF1B54", VA = "0xBF1B54")]
		internal bool <DismemberManager>b__0(BodyFragment f)
		{
			return default(bool);
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000095")]
	[CompilerGenerated]
	private struct <DismemberManager>d__8 : IAsyncStateMachine
	{
		[Token(Token = "0x40001E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40001E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncVoidMethodBuilder <>t__builder;

		[Token(Token = "0x40001E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RagdollDismembermentVisual <>4__this;

		[Token(Token = "0x40001E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private <>c__DisplayClass8_0 <>8__1;

		[Token(Token = "0x40001E8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private BodyFragment <Parent>5__2;

		[Token(Token = "0x40001E9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int <i>5__3;

		[Token(Token = "0x40001EA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private YieldAwaitable.YieldAwaiter <>u__1;

		[Token(Token = "0x40001EB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private TaskAwaiter<bool> <>u__2;

		[Token(Token = "0x60001BB")]
		[Address(RVA = "0xBF1BDC", Offset = "0xBF1BDC", VA = "0xBF1BDC", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60001BC")]
		[Address(RVA = "0xBF2650", Offset = "0xBF2650", VA = "0xBF2650", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x2000098")]
	[CompilerGenerated]
	private sealed class <>c__DisplayClass14_0
	{
		[Token(Token = "0x40001EE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public BodyFragment fragment;

		[Token(Token = "0x60001C1")]
		[Address(RVA = "0xBF2768", Offset = "0xBF2768", VA = "0xBF2768")]
		public <>c__DisplayClass14_0()
		{
		}

		[Token(Token = "0x60001C2")]
		[Address(RVA = "0xBF2770", Offset = "0xBF2770", VA = "0xBF2770")]
		internal bool <CutSkinnedMesh>b__0(BodyFragment f)
		{
			return default(bool);
		}
	}

	[StructLayout(3)]
	[Token(Token = "0x2000099")]
	[CompilerGenerated]
	private struct <CutSkinnedMesh>d__14 : IAsyncStateMachine
	{
		[Token(Token = "0x40001EF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public int <>1__state;

		[Token(Token = "0x40001F0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public AsyncTaskMethodBuilder<bool> <>t__builder;

		[Token(Token = "0x40001F1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public BodyFragment fragment;

		[Token(Token = "0x40001F2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public RagdollDismembermentVisual <>4__this;

		[Token(Token = "0x40001F3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public SkinnedMeshRenderer skinnedMesh;

		[Token(Token = "0x40001F4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private <>c__DisplayClass14_0 <>8__1;

		[Token(Token = "0x40001F5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private TaskAwaiter<Mesh> <>u__1;

		[Token(Token = "0x60001C3")]
		[Address(RVA = "0xBF279C", Offset = "0xBF279C", VA = "0xBF279C", Slot = "4")]
		private void MoveNext()
		{
		}

		[Token(Token = "0x60001C4")]
		[Address(RVA = "0xBF2EC4", Offset = "0xBF2EC4", VA = "0xBF2EC4", Slot = "5")]
		[DebuggerHidden]
		private void SetStateMachine(IAsyncStateMachine stateMachine)
		{
		}
	}

	[Token(Token = "0x40001D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Events")]
	public DismemberOperationEvent OnDismemberCompleted;

	[Token(Token = "0x40001D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<BodyFragment> Fragments;

	[Token(Token = "0x40001D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isInitialized;

	[Token(Token = "0x40001D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private List<BodyFragment> operations;

	[Token(Token = "0x40001D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool[] SelectionMask;

	[Token(Token = "0x40001D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int SelectionMaskLength;

	[Token(Token = "0x60001AB")]
	[Address(RVA = "0xBF0A58", Offset = "0xBF0A58", VA = "0xBF0A58")]
	private void Reset()
	{
	}

	[Token(Token = "0x60001AC")]
	[Address(RVA = "0xBF0BA4", Offset = "0xBF0BA4", VA = "0xBF0BA4")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001AD")]
	[Address(RVA = "0xBF0C3C", Offset = "0xBF0C3C", VA = "0xBF0C3C")]
	private void Init()
	{
	}

	[Token(Token = "0x60001AE")]
	[Address(RVA = "0xBF07AC", Offset = "0xBF07AC", VA = "0xBF07AC")]
	public void Dismember(string FragmentName)
	{
	}

	[Token(Token = "0x60001AF")]
	[Address(RVA = "0xBF0BA8", Offset = "0xBF0BA8", VA = "0xBF0BA8")]
	[AsyncStateMachine(typeof(<DismemberManager>d__8))]
	private void DismemberManager()
	{
	}

	[Token(Token = "0x60001B0")]
	[Address(RVA = "0xBF0ED0", Offset = "0xBF0ED0", VA = "0xBF0ED0")]
	private void CloneLODGroupForFragment(BodyFragment fragment, LODGroup original)
	{
	}

	[Token(Token = "0x60001B1")]
	[Address(RVA = "0xBF1088", Offset = "0xBF1088", VA = "0xBF1088")]
	public void GetSelection(SkinnedMeshRenderer skinnedMesh, BodyFragment fragment, SelectionMode mode = SelectionMode.Replace)
	{
	}

	[Token(Token = "0x60001B2")]
	[Address(RVA = "0xBF15D4", Offset = "0xBF15D4", VA = "0xBF15D4")]
	public SelectionStatus GetSelectionStatus()
	{
		return default(SelectionStatus);
	}

	[Token(Token = "0x60001B3")]
	[Address(RVA = "0xBF1678", Offset = "0xBF1678", VA = "0xBF1678")]
	[AsyncStateMachine(typeof(<CutSkinnedMesh>d__14))]
	private Task<bool> CutSkinnedMesh(SkinnedMeshRenderer skinnedMesh, BodyFragment fragment)
	{
		return null;
	}

	[Token(Token = "0x60001B4")]
	[Address(RVA = "0xBF1788", Offset = "0xBF1788", VA = "0xBF1788")]
	private void ReplaceBindposes(SkinnedMeshRenderer skinnedMesh, Transform CrackedBone, BindposeReplacementMode mode)
	{
	}

	[Token(Token = "0x60001B5")]
	[Address(RVA = "0xBF1A64", Offset = "0xBF1A64", VA = "0xBF1A64")]
	public RagdollDismembermentVisual()
	{
	}
}
[Serializable]
[Token(Token = "0x200009B")]
public class BodyFragment
{
	[Token(Token = "0x40001F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public bool ShowWireframe;

	[Token(Token = "0x40001F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x11")]
	public bool ShowProperties;

	[Token(Token = "0x40001FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string Name;

	[Token(Token = "0x40001FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform bone;

	[Token(Token = "0x40001FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool BoundsDetails;

	[Token(Token = "0x40001FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 Position;

	[Token(Token = "0x40001FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 Rotation;

	[Token(Token = "0x40001FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public Vector3 Size;

	[Token(Token = "0x4000200")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject BoneEffect;

	[Token(Token = "0x4000201")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool BoneEffectDetails;

	[Token(Token = "0x4000202")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public Vector3 BoneEffectPosition;

	[Token(Token = "0x4000203")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Vector3 BoneEffectRotation;

	[Token(Token = "0x4000204")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public Vector3 BoneEffectSize;

	[Token(Token = "0x4000205")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public GameObject BoneParentEffect;

	[Token(Token = "0x4000206")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public bool BoneParentEffectDetails;

	[Token(Token = "0x4000207")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public Vector3 BoneParentEffectPosition;

	[Token(Token = "0x4000208")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Vector3 BoneParentEffectRotation;

	[Token(Token = "0x4000209")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public Vector3 BoneParentEffectSize;

	[Token(Token = "0x400020A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Color color;

	[Token(Token = "0x400020B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<SkinnedMeshRenderer> SkinnedMeshes;

	[Token(Token = "0x60001C7")]
	[Address(RVA = "0xBF2FA8", Offset = "0xBF2FA8", VA = "0xBF2FA8")]
	public BodyFragment GetNearestParent(params BodyFragment[] Parents)
	{
		return null;
	}

	[Token(Token = "0x60001C8")]
	[Address(RVA = "0xBF30C0", Offset = "0xBF30C0", VA = "0xBF30C0")]
	public BodyFragment()
	{
	}
}
[Token(Token = "0x200009C")]
public class ScaleContraint : MonoBehaviour
{
	[Token(Token = "0x400020C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform source;

	[Token(Token = "0x400020D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 axis;

	[Token(Token = "0x400020E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startDistance;

	[Token(Token = "0x400020F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float distance;

	[Token(Token = "0x60001C9")]
	[Address(RVA = "0xBF30D0", Offset = "0xBF30D0", VA = "0xBF30D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60001CA")]
	[Address(RVA = "0xBF31A4", Offset = "0xBF31A4", VA = "0xBF31A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60001CB")]
	[Address(RVA = "0xBF331C", Offset = "0xBF331C", VA = "0xBF331C")]
	public ScaleContraint()
	{
	}
}
[Token(Token = "0x200009D")]
public class SlotPopulator : MonoBehaviour
{
	[Token(Token = "0x4000210")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float RaycastLength;

	[Token(Token = "0x4000211")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private List<Vector3> Directions;

	[Token(Token = "0x4000212")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Wall;

	[Token(Token = "0x4000213")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> Slots;

	[Token(Token = "0x4000214")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> HoldPrefabs;

	[Token(Token = "0x4000215")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Material> HoldColorVariations;

	[Token(Token = "0x4000216")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool DEBUG_MODE;

	[Token(Token = "0x4000217")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<GameObject> Holds;

	[Token(Token = "0x60001CC")]
	[Address(RVA = "0xBF332C", Offset = "0xBF332C", VA = "0xBF332C")]
	public void PopulateHolds()
	{
	}

	[Token(Token = "0x60001CD")]
	[Address(RVA = "0xBF409C", Offset = "0xBF409C", VA = "0xBF409C")]
	public SlotPopulator()
	{
	}
}
[Token(Token = "0x200009E")]
public class PlayerMove : MonoBehaviour
{
	[Token(Token = "0x4000218")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public float sensitivity;

	[Token(Token = "0x4000219")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	public float smoothing;

	[Token(Token = "0x400021A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform cam;

	[Token(Token = "0x400021B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector2 mouseLook;

	[Token(Token = "0x400021C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector2 smoothV;

	[Token(Token = "0x400021D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float walkSpeed;

	[Token(Token = "0x400021E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float runSpeed;

	[Token(Token = "0x400021F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float strafingSpeed;

	[Token(Token = "0x4000220")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float movementSpeed;

	[Token(Token = "0x4000221")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private CharacterController charController;

	[Token(Token = "0x60001CE")]
	[Address(RVA = "0xBF458C", Offset = "0xBF458C", VA = "0xBF458C")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001CF")]
	[Address(RVA = "0xBF465C", Offset = "0xBF465C", VA = "0xBF465C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D0")]
	[Address(RVA = "0xBF4698", Offset = "0xBF4698", VA = "0xBF4698")]
	private void CameraMovement()
	{
	}

	[Token(Token = "0x60001D1")]
	[Address(RVA = "0xBF4844", Offset = "0xBF4844", VA = "0xBF4844")]
	private void PlayerMovement()
	{
	}

	[Token(Token = "0x60001D2")]
	[Address(RVA = "0xBF4948", Offset = "0xBF4948", VA = "0xBF4948")]
	public PlayerMove()
	{
	}
}
[Token(Token = "0x200009F")]
public class RandomAnnouncement : MonoBehaviour
{
	[Token(Token = "0x4000222")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxTimeDelay;

	[Token(Token = "0x4000223")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minTimeDelay;

	[Token(Token = "0x4000224")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float timeUntilNextAnnoucement;

	[Token(Token = "0x4000225")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource source;

	[Token(Token = "0x4000226")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AudioClip> clips;

	[Token(Token = "0x60001D3")]
	[Address(RVA = "0xBF4970", Offset = "0xBF4970", VA = "0xBF4970")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D4")]
	[Address(RVA = "0xBF49D0", Offset = "0xBF49D0", VA = "0xBF49D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001D5")]
	[Address(RVA = "0xBF4AB8", Offset = "0xBF4AB8", VA = "0xBF4AB8")]
	public RandomAnnouncement()
	{
	}
}
[Token(Token = "0x20000A0")]
public class LightFlicker : MonoBehaviour
{
	[Token(Token = "0x4000227")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MinLightIntensity;

	[Token(Token = "0x4000228")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MaxLightIntensity;

	[Token(Token = "0x4000229")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float AccelerateTime;

	[Token(Token = "0x400022A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float _targetIntensity;

	[Token(Token = "0x400022B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float _lastIntensity;

	[Token(Token = "0x400022C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float _timePassed;

	[Token(Token = "0x400022D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light _lt;

	[Token(Token = "0x400022E")]
	private const double Tolerance = 0.0001;

	[Token(Token = "0x60001D6")]
	[Address(RVA = "0xBF4AD4", Offset = "0xBF4AD4", VA = "0xBF4AD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60001D7")]
	[Address(RVA = "0xBF4B3C", Offset = "0xBF4B3C", VA = "0xBF4B3C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60001D8")]
	[Address(RVA = "0xBF4C00", Offset = "0xBF4C00", VA = "0xBF4C00")]
	public LightFlicker()
	{
	}
}
[Token(Token = "0x20000A1")]
public class LightOptimize : MonoBehaviour
{
	[Token(Token = "0x400022F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float availableDistance;

	[Token(Token = "0x4000230")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float Distance;

	[Token(Token = "0x4000231")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Light Lightcomponent;

	[Token(Token = "0x4000232")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject Player;

	[Token(Token = "0x60001D9")]
	[Address(RVA = "0xBF4C1C", Offset = "0xBF4C1C", VA = "0xBF4C1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DA")]
	[Address(RVA = "0xBF4D48", Offset = "0xBF4D48", VA = "0xBF4D48")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DB")]
	[Address(RVA = "0xBF4E7C", Offset = "0xBF4E7C", VA = "0xBF4E7C")]
	public LightOptimize()
	{
	}
}
[Token(Token = "0x20000A2")]
[RequireComponent(typeof(CharacterController))]
public class SimplePlayerController : MonoBehaviour
{
	[Token(Token = "0x4000233")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera playerCamera;

	[Token(Token = "0x4000234")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float walkSpeed;

	[Token(Token = "0x4000235")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float runSpeed;

	[Token(Token = "0x4000236")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lookSpeed;

	[Token(Token = "0x4000237")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float lookXLimit;

	[Token(Token = "0x4000238")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float gravity;

	[Token(Token = "0x4000239")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CharacterController characterController;

	[Token(Token = "0x400023A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 moveDirection;

	[Token(Token = "0x400023B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float rotationX;

	[Token(Token = "0x400023C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool canMove;

	[Token(Token = "0x60001DC")]
	[Address(RVA = "0xBF4E84", Offset = "0xBF4E84", VA = "0xBF4E84")]
	private void Start()
	{
	}

	[Token(Token = "0x60001DD")]
	[Address(RVA = "0xBF4EE8", Offset = "0xBF4EE8", VA = "0xBF4EE8")]
	private void Update()
	{
	}

	[Token(Token = "0x60001DE")]
	[Address(RVA = "0xBF52AC", Offset = "0xBF52AC", VA = "0xBF52AC")]
	public SimplePlayerController()
	{
	}
}
[Token(Token = "0x20000A3")]
public class ScoreBoard : MonoBehaviour
{
	[Token(Token = "0x400023D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Texture2D> Numbers;

	[Token(Token = "0x400023E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ScoreBoardTime Time;

	[Token(Token = "0x400023F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public ScoreBoardScore Score1;

	[Token(Token = "0x4000240")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ScoreBoardScore Score2;

	[Token(Token = "0x60001DF")]
	[Address(RVA = "0xBF5328", Offset = "0xBF5328", VA = "0xBF5328")]
	private void Awake()
	{
	}

	[Token(Token = "0x60001E0")]
	[Address(RVA = "0xBF5350", Offset = "0xBF5350", VA = "0xBF5350")]
	private void Update()
	{
	}

	[Token(Token = "0x60001E1")]
	[Address(RVA = "0xBF53D8", Offset = "0xBF53D8", VA = "0xBF53D8")]
	public ScoreBoard()
	{
	}
}
[Token(Token = "0x20000A4")]
public class ScoreBoardScore
{
	[Token(Token = "0x60001E2")]
	[Address(RVA = "0xBF5454", Offset = "0xBF5454", VA = "0xBF5454")]
	public ScoreBoardScore(ScoreBoard board)
	{
	}
}
[Serializable]
[Token(Token = "0x20000A5")]
public class ScoreBoardTime
{
	[Token(Token = "0x20000A6")]
	private enum State
	{
		[Token(Token = "0x400024B")]
		Running,
		[Token(Token = "0x400024C")]
		Stopped,
		[Token(Token = "0x400024D")]
		Paused
	}

	[Token(Token = "0x4000242")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer MinuteDisplay10;

	[Token(Token = "0x4000243")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MeshRenderer MinuteDisplay1;

	[Token(Token = "0x4000244")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer SecondDisplay10;

	[Token(Token = "0x4000245")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer SecondDisplay1;

	[Token(Token = "0x4000246")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private State _state;

	[Token(Token = "0x4000247")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float _lastChange;

	[Token(Token = "0x4000248")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int _minutes;

	[Token(Token = "0x4000249")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int _seconds;

	[Token(Token = "0x17000033")]
	public ScoreBoard Board
	{
		[Token(Token = "0x60001E3")]
		[Address(RVA = "0xBF545C", Offset = "0xBF545C", VA = "0xBF545C")]
		[CompilerGenerated]
		get
		{
			return null;
		}
		[Token(Token = "0x60001E4")]
		[Address(RVA = "0xBF5464", Offset = "0xBF5464", VA = "0xBF5464")]
		[CompilerGenerated]
		set
		{
		}
	}

	[Token(Token = "0x60001E5")]
	[Address(RVA = "0xBF5360", Offset = "0xBF5360", VA = "0xBF5360")]
	public void Update()
	{
	}

	[Token(Token = "0x60001E6")]
	[Address(RVA = "0xBF5348", Offset = "0xBF5348", VA = "0xBF5348")]
	public void Start()
	{
	}

	[Token(Token = "0x60001E7")]
	[Address(RVA = "0xBF569C", Offset = "0xBF569C", VA = "0xBF569C")]
	public void Pause()
	{
	}

	[Token(Token = "0x60001E8")]
	[Address(RVA = "0xBF56A8", Offset = "0xBF56A8", VA = "0xBF56A8")]
	public void Stop()
	{
	}

	[Token(Token = "0x60001E9")]
	[Address(RVA = "0xBF5688", Offset = "0xBF5688", VA = "0xBF5688")]
	private void ChangeState(State state)
	{
	}

	[Token(Token = "0x60001EA")]
	[Address(RVA = "0xBF546C", Offset = "0xBF546C", VA = "0xBF546C")]
	private void UpdateDisplay()
	{
	}

	[Token(Token = "0x60001EB")]
	[Address(RVA = "0xBF56B8", Offset = "0xBF56B8", VA = "0xBF56B8")]
	public ScoreBoardTime()
	{
	}
}
[Token(Token = "0x20000A7")]
public class ShootingTargetFragment : MonoBehaviour
{
	[Token(Token = "0x400024E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private FixedJoint fJoint;

	[Token(Token = "0x400024F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool hit;

	[Token(Token = "0x4000250")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float counter;

	[Token(Token = "0x60001EC")]
	[Address(RVA = "0xBF56CC", Offset = "0xBF56CC", VA = "0xBF56CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60001ED")]
	[Address(RVA = "0xBF571C", Offset = "0xBF571C", VA = "0xBF571C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001EE")]
	[Address(RVA = "0xBF58D8", Offset = "0xBF58D8", VA = "0xBF58D8")]
	public ShootingTargetFragment()
	{
	}
}
[Token(Token = "0x20000A8")]
public class TargetCart : MonoBehaviour
{
	[Token(Token = "0x4000251")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float volumeOffset;

	[Token(Token = "0x4000252")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float volumeFactor;

	[Token(Token = "0x4000253")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pitchOffset;

	[Token(Token = "0x4000254")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pitchFactor;

	[Token(Token = "0x4000255")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool active;

	[Token(Token = "0x4000256")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool spawned;

	[Token(Token = "0x4000257")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform attach;

	[Token(Token = "0x4000258")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject fragmentsPrefab;

	[Token(Token = "0x4000259")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float range;

	[Token(Token = "0x400025A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float force;

	[Token(Token = "0x400025B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxSpeed;

	[Token(Token = "0x400025C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float mForce;

	[Token(Token = "0x400025D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float mSpeed;

	[Token(Token = "0x400025E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Vector3 startPos;

	[Token(Token = "0x400025F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float offset;

	[Token(Token = "0x4000260")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameObject spawnedFragments;

	[Token(Token = "0x4000261")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource source;

	[Token(Token = "0x60001EF")]
	[Address(RVA = "0xBF58E8", Offset = "0xBF58E8", VA = "0xBF58E8")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F0")]
	[Address(RVA = "0xBF595C", Offset = "0xBF595C", VA = "0xBF595C")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F1")]
	[Address(RVA = "0xBF5C0C", Offset = "0xBF5C0C", VA = "0xBF5C0C")]
	public TargetCart()
	{
	}
}
[Token(Token = "0x20000A9")]
public class TargetShootingRange : MonoBehaviour
{
	[Token(Token = "0x4000262")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MeshRenderer rendererButton;

	[Token(Token = "0x4000263")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Material button;

	[Token(Token = "0x4000264")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Color colorOn;

	[Token(Token = "0x4000265")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Color colorOff;

	[Token(Token = "0x4000266")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<TargetCart> carts;

	[Token(Token = "0x4000267")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool active;

	[Token(Token = "0x60001F2")]
	[Address(RVA = "0xBF5C30", Offset = "0xBF5C30", VA = "0xBF5C30")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F3")]
	[Address(RVA = "0xBF5CD4", Offset = "0xBF5CD4", VA = "0xBF5CD4")]
	public void ChangeState()
	{
	}

	[Token(Token = "0x60001F4")]
	[Address(RVA = "0xBF5EE8", Offset = "0xBF5EE8", VA = "0xBF5EE8")]
	public TargetShootingRange()
	{
	}
}
[Token(Token = "0x20000AA")]
public class ZombieShootingRange : MonoBehaviour
{
	[Token(Token = "0x4000268")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject red;

	[Token(Token = "0x4000269")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject green;

	[Token(Token = "0x400026A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int maxZombies;

	[Token(Token = "0x400026B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x400026C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform spawnRange;

	[Token(Token = "0x400026D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject spawnedObject;

	[Token(Token = "0x400026E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<GameObject> spawnedZombies;

	[Token(Token = "0x400026F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool active;

	[Token(Token = "0x60001F5")]
	[Address(RVA = "0xBF5EF0", Offset = "0xBF5EF0", VA = "0xBF5EF0")]
	private void Update()
	{
	}

	[Token(Token = "0x60001F6")]
	[Address(RVA = "0xBF6238", Offset = "0xBF6238", VA = "0xBF6238")]
	public void ChangeState()
	{
	}

	[Token(Token = "0x60001F7")]
	[Address(RVA = "0xBF630C", Offset = "0xBF630C", VA = "0xBF630C")]
	public ZombieShootingRange()
	{
	}
}
[Token(Token = "0x20000AB")]
public class FPSDemoGUI : MonoBehaviour
{
	[Token(Token = "0x4000270")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject[] Prefabs;

	[Token(Token = "0x4000271")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform muzzleFlashPoint;

	[Token(Token = "0x4000272")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject Gun;

	[Token(Token = "0x4000273")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float reactivateTime;

	[Token(Token = "0x4000274")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Light Sun;

	[Token(Token = "0x4000275")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool IsMobile;

	[Token(Token = "0x4000276")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int currentNomber;

	[Token(Token = "0x4000277")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameObject currentInstance;

	[Token(Token = "0x4000278")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private GUIStyle guiStyleHeader;

	[Token(Token = "0x4000279")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float sunIntensity;

	[Token(Token = "0x400027A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float dpiScale;

	[Token(Token = "0x60001F8")]
	[Address(RVA = "0xBF6314", Offset = "0xBF6314", VA = "0xBF6314")]
	private void Start()
	{
	}

	[Token(Token = "0x60001F9")]
	[Address(RVA = "0xBF652C", Offset = "0xBF652C", VA = "0xBF652C")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x60001FA")]
	[Address(RVA = "0xBF6780", Offset = "0xBF6780", VA = "0xBF6780")]
	private void ChangeCurrent(int delta)
	{
	}

	[Token(Token = "0x60001FB")]
	[Address(RVA = "0xBF6A68", Offset = "0xBF6A68", VA = "0xBF6A68")]
	private void Reactivator()
	{
	}

	[Token(Token = "0x60001FC")]
	[Address(RVA = "0xBF6AA0", Offset = "0xBF6AA0", VA = "0xBF6AA0")]
	public FPSDemoGUI()
	{
	}
}
[Token(Token = "0x20000AC")]
public class FPSDemoReactivator : MonoBehaviour
{
	[Token(Token = "0x400027B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float StartDelay;

	[Token(Token = "0x400027C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float TimeDelayToReactivate;

	[Token(Token = "0x60001FD")]
	[Address(RVA = "0xBF6B10", Offset = "0xBF6B10", VA = "0xBF6B10")]
	private void Start()
	{
	}

	[Token(Token = "0x60001FE")]
	[Address(RVA = "0xBF6B60", Offset = "0xBF6B60", VA = "0xBF6B60")]
	private void Reactivate()
	{
	}

	[Token(Token = "0x60001FF")]
	[Address(RVA = "0xBF6BA4", Offset = "0xBF6BA4", VA = "0xBF6BA4")]
	public FPSDemoReactivator()
	{
	}
}
[Token(Token = "0x20000AD")]
public class FPSFireManager : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000AE")]
	public class ImpactInfo
	{
		[Token(Token = "0x4000280")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public MaterialType.MaterialTypeEnum MaterialType;

		[Token(Token = "0x4000281")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public GameObject ImpactEffect;

		[Token(Token = "0x6000203")]
		[Address(RVA = "0xBF6FB0", Offset = "0xBF6FB0", VA = "0xBF6FB0")]
		public ImpactInfo()
		{
		}
	}

	[Token(Token = "0x400027D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ImpactInfo[] ImpactElemets;

	[Token(Token = "0x400027E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Space]
	public float BulletDistance;

	[Token(Token = "0x400027F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ImpactEffect;

	[Token(Token = "0x6000200")]
	[Address(RVA = "0xBF6BB4", Offset = "0xBF6BB4", VA = "0xBF6BB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000201")]
	[Address(RVA = "0xBF6E60", Offset = "0xBF6E60", VA = "0xBF6E60")]
	private GameObject GetImpactEffect(GameObject impactedGameObject)
	{
		return null;
	}

	[Token(Token = "0x6000202")]
	[Address(RVA = "0xBF6F50", Offset = "0xBF6F50", VA = "0xBF6F50")]
	public FPSFireManager()
	{
	}
}
[Serializable]
[Token(Token = "0x20000AF")]
public class FPS_MouseLook
{
	[Token(Token = "0x4000282")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float XSensitivity;

	[Token(Token = "0x4000283")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float YSensitivity;

	[Token(Token = "0x4000284")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool clampVerticalRotation;

	[Token(Token = "0x4000285")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MinimumX;

	[Token(Token = "0x4000286")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaximumX;

	[Token(Token = "0x4000287")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool smooth;

	[Token(Token = "0x4000288")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float smoothTime;

	[Token(Token = "0x4000289")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool lockCursor;

	[Token(Token = "0x400028A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Quaternion m_CharacterTargetRot;

	[Token(Token = "0x400028B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion m_CameraTargetRot;

	[Token(Token = "0x400028C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_cursorIsLocked;

	[Token(Token = "0x6000204")]
	[Address(RVA = "0xBF6FB8", Offset = "0xBF6FB8", VA = "0xBF6FB8")]
	public void Init(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000205")]
	[Address(RVA = "0xBF7008", Offset = "0xBF7008", VA = "0xBF7008")]
	public void LookRotation(Transform character, Transform camera)
	{
	}

	[Token(Token = "0x6000206")]
	[Address(RVA = "0xBF73D8", Offset = "0xBF73D8", VA = "0xBF73D8")]
	public void SetCursorLock(bool value)
	{
	}

	[Token(Token = "0x6000207")]
	[Address(RVA = "0xBF73C8", Offset = "0xBF73C8", VA = "0xBF73C8")]
	public void UpdateCursorLock()
	{
	}

	[Token(Token = "0x6000208")]
	[Address(RVA = "0xBF740C", Offset = "0xBF740C", VA = "0xBF740C")]
	private void InternalLockUpdate()
	{
	}

	[Token(Token = "0x6000209")]
	[Address(RVA = "0xBF7364", Offset = "0xBF7364", VA = "0xBF7364")]
	private Quaternion ClampRotationAroundXAxis(Quaternion q)
	{
		return default(Quaternion);
	}

	[Token(Token = "0x600020A")]
	[Address(RVA = "0xBF7484", Offset = "0xBF7484", VA = "0xBF7484")]
	public FPS_MouseLook()
	{
	}
}
[Token(Token = "0x20000B0")]
[RequireComponent(typeof(Rigidbody))]
[RequireComponent(typeof(CapsuleCollider))]
public class FPS_RigidbodyFirstPersonController : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000B1")]
	public class MovementSettings
	{
		[Token(Token = "0x4000299")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float ForwardSpeed;

		[Token(Token = "0x400029A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float BackwardSpeed;

		[Token(Token = "0x400029B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float StrafeSpeed;

		[Token(Token = "0x400029C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float RunMultiplier;

		[Token(Token = "0x400029D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public KeyCode RunKey;

		[Token(Token = "0x400029E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float JumpForce;

		[Token(Token = "0x400029F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve SlopeCurveModifier;

		[Token(Token = "0x40002A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float CurrentTargetSpeed;

		[Token(Token = "0x6000218")]
		[Address(RVA = "0xBF82F4", Offset = "0xBF82F4", VA = "0xBF82F4")]
		public void UpdateDesiredTargetSpeed(Vector2 input)
		{
		}

		[Token(Token = "0x6000219")]
		[Address(RVA = "0xBF84B0", Offset = "0xBF84B0", VA = "0xBF84B0")]
		public MovementSettings()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20000B2")]
	public class AdvancedSettings
	{
		[Token(Token = "0x40002A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public float groundCheckDistance;

		[Token(Token = "0x40002A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float stickToGroundHelperDistance;

		[Token(Token = "0x40002A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float slowDownRate;

		[Token(Token = "0x40002A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool airControl;

		[Token(Token = "0x40002A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("set it to 0.1 or more if you get stuck in wall")]
		public float shellOffset;

		[Token(Token = "0x600021A")]
		[Address(RVA = "0xBF8660", Offset = "0xBF8660", VA = "0xBF8660")]
		public AdvancedSettings()
		{
		}
	}

	[Token(Token = "0x400028D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Camera cam;

	[Token(Token = "0x400028E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public MovementSettings movementSettings;

	[Token(Token = "0x400028F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AdvancedSettings advancedSettings;

	[Token(Token = "0x4000290")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody m_RigidBody;

	[Token(Token = "0x4000291")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private CapsuleCollider m_Capsule;

	[Token(Token = "0x4000292")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float m_YRotation;

	[Token(Token = "0x4000293")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private Vector3 m_GroundContactNormal;

	[Token(Token = "0x4000294")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool m_Jump;

	[Token(Token = "0x4000295")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool m_PreviouslyGrounded;

	[Token(Token = "0x4000296")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
	private bool m_Jumping;

	[Token(Token = "0x4000297")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
	private bool m_IsGrounded;

	[Token(Token = "0x4000298")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private FPS_MouseLook mouseLook;

	[Token(Token = "0x17000034")]
	public Vector3 Velocity
	{
		[Token(Token = "0x600020B")]
		[Address(RVA = "0xBF74B8", Offset = "0xBF74B8", VA = "0xBF74B8")]
		get
		{
			return default(Vector3);
		}
	}

	[Token(Token = "0x17000035")]
	public bool Grounded
	{
		[Token(Token = "0x600020C")]
		[Address(RVA = "0xBF74D4", Offset = "0xBF74D4", VA = "0xBF74D4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000036")]
	public bool Jumping
	{
		[Token(Token = "0x600020D")]
		[Address(RVA = "0xBF74DC", Offset = "0xBF74DC", VA = "0xBF74DC")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x17000037")]
	public bool Running
	{
		[Token(Token = "0x600020E")]
		[Address(RVA = "0xBF74E4", Offset = "0xBF74E4", VA = "0xBF74E4")]
		get
		{
			return default(bool);
		}
	}

	[Token(Token = "0x600020F")]
	[Address(RVA = "0xBF74EC", Offset = "0xBF74EC", VA = "0xBF74EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000210")]
	[Address(RVA = "0xBF75A4", Offset = "0xBF75A4", VA = "0xBF75A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000211")]
	[Address(RVA = "0xBF7788", Offset = "0xBF7788", VA = "0xBF7788")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000212")]
	[Address(RVA = "0xBF7E48", Offset = "0xBF7E48", VA = "0xBF7E48")]
	private float SlopeMultiplier()
	{
		return default(float);
	}

	[Token(Token = "0x6000213")]
	[Address(RVA = "0xBF7FA8", Offset = "0xBF7FA8", VA = "0xBF7FA8")]
	private void StickToGroundHelper()
	{
	}

	[Token(Token = "0x6000214")]
	[Address(RVA = "0xBF7DA4", Offset = "0xBF7DA4", VA = "0xBF7DA4")]
	private Vector2 GetInput()
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000215")]
	[Address(RVA = "0xBF760C", Offset = "0xBF760C", VA = "0xBF760C")]
	private void RotateView()
	{
	}

	[Token(Token = "0x6000216")]
	[Address(RVA = "0xBF7BD8", Offset = "0xBF7BD8", VA = "0xBF7BD8")]
	private void GroundCheck()
	{
	}

	[Token(Token = "0x6000217")]
	[Address(RVA = "0xBF83AC", Offset = "0xBF83AC", VA = "0xBF83AC")]
	public FPS_RigidbodyFirstPersonController()
	{
	}
}
[Token(Token = "0x20000B3")]
public class FPSLightCurves : MonoBehaviour
{
	[Token(Token = "0x40002A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnimationCurve LightCurve;

	[Token(Token = "0x40002A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40002A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x40002A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool canUpdate;

	[Token(Token = "0x40002AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float startTime;

	[Token(Token = "0x40002AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Light lightSource;

	[Token(Token = "0x600021B")]
	[Address(RVA = "0xBF867C", Offset = "0xBF867C", VA = "0xBF867C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600021C")]
	[Address(RVA = "0xBF86F8", Offset = "0xBF86F8", VA = "0xBF86F8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600021D")]
	[Address(RVA = "0xBF8730", Offset = "0xBF8730", VA = "0xBF8730")]
	private void Update()
	{
	}

	[Token(Token = "0x600021E")]
	[Address(RVA = "0xBF87C0", Offset = "0xBF87C0", VA = "0xBF87C0")]
	public FPSLightCurves()
	{
	}
}
[Token(Token = "0x20000B4")]
public class FPSRandomRotateAngle : MonoBehaviour
{
	[Token(Token = "0x40002AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool RotateX;

	[Token(Token = "0x40002AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool RotateY;

	[Token(Token = "0x40002AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool RotateZ;

	[Token(Token = "0x40002AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform t;

	[Token(Token = "0x600021F")]
	[Address(RVA = "0xBF87FC", Offset = "0xBF87FC", VA = "0xBF87FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000220")]
	[Address(RVA = "0xBF8818", Offset = "0xBF8818", VA = "0xBF8818")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000221")]
	[Address(RVA = "0xBF88EC", Offset = "0xBF88EC", VA = "0xBF88EC")]
	public FPSRandomRotateAngle()
	{
	}
}
[Token(Token = "0x20000B5")]
public class FPSShaderColorGradient : MonoBehaviour
{
	[Token(Token = "0x20000B6")]
	public enum RFX4_ShaderProperties
	{
		[Token(Token = "0x40002BD")]
		_TintColor,
		[Token(Token = "0x40002BE")]
		_Cutoff,
		[Token(Token = "0x40002BF")]
		_Color,
		[Token(Token = "0x40002C0")]
		_EmissionColor,
		[Token(Token = "0x40002C1")]
		_MaskPow,
		[Token(Token = "0x40002C2")]
		_Cutout,
		[Token(Token = "0x40002C3")]
		_Speed,
		[Token(Token = "0x40002C4")]
		_BumpAmt,
		[Token(Token = "0x40002C5")]
		_MainColor,
		[Token(Token = "0x40002C6")]
		_Distortion,
		[Token(Token = "0x40002C7")]
		_FresnelColor
	}

	[Token(Token = "0x40002B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RFX4_ShaderProperties ShaderColorProperty;

	[Token(Token = "0x40002B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Gradient Color;

	[Token(Token = "0x40002B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeMultiplier;

	[Token(Token = "0x40002B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool IsLoop;

	[Token(Token = "0x40002B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2D")]
	[HideInInspector]
	public bool canUpdate;

	[Token(Token = "0x40002B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private int propertyID;

	[Token(Token = "0x40002B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float startTime;

	[Token(Token = "0x40002B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Color startColor;

	[Token(Token = "0x40002B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isInitialized;

	[Token(Token = "0x40002B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private string shaderProperty;

	[Token(Token = "0x40002BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x40002BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Renderer rend;

	[Token(Token = "0x6000222")]
	[Address(RVA = "0xBF88FC", Offset = "0xBF88FC", VA = "0xBF88FC")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000223")]
	[Address(RVA = "0xBF8A3C", Offset = "0xBF8A3C", VA = "0xBF8A3C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000224")]
	[Address(RVA = "0xBF8B18", Offset = "0xBF8B18", VA = "0xBF8B18")]
	private void Update()
	{
	}

	[Token(Token = "0x6000225")]
	[Address(RVA = "0xBF8BDC", Offset = "0xBF8BDC", VA = "0xBF8BDC")]
	public FPSShaderColorGradient()
	{
	}
}
[Token(Token = "0x20000B7")]
public class FPSShaderFloatCurves : MonoBehaviour
{
	[Token(Token = "0x40002C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string ShaderProperty;

	[Token(Token = "0x40002C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int MaterialID;

	[Token(Token = "0x40002CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve FloatPropertyCurve;

	[Token(Token = "0x40002CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x40002CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float GraphScaleMultiplier;

	[Token(Token = "0x40002CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool canUpdate;

	[Token(Token = "0x40002CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Material matInstance;

	[Token(Token = "0x40002CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int propertyID;

	[Token(Token = "0x40002D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float startTime;

	[Token(Token = "0x6000226")]
	[Address(RVA = "0xBF8C4C", Offset = "0xBF8C4C", VA = "0xBF8C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000227")]
	[Address(RVA = "0xBF8EFC", Offset = "0xBF8EFC", VA = "0xBF8EFC")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000228")]
	[Address(RVA = "0xBF8F20", Offset = "0xBF8F20", VA = "0xBF8F20")]
	private void Update()
	{
	}

	[Token(Token = "0x6000229")]
	[Address(RVA = "0xBF8F98", Offset = "0xBF8F98", VA = "0xBF8F98")]
	public FPSShaderFloatCurves()
	{
	}
}
[Token(Token = "0x20000B8")]
[ExecuteInEditMode]
public class FPS_Decal : MonoBehaviour
{
	[Token(Token = "0x40002D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool ScreenSpaceDecals;

	[Token(Token = "0x40002D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float randomScalePercent;

	[Token(Token = "0x40002D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x40002D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private MeshRenderer rend;

	[Token(Token = "0x40002D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 startScale;

	[Token(Token = "0x600022A")]
	[Address(RVA = "0xBF900C", Offset = "0xBF900C", VA = "0xBF900C")]
	private void Awake()
	{
	}

	[Token(Token = "0x600022B")]
	[Address(RVA = "0xBF903C", Offset = "0xBF903C", VA = "0xBF903C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600022C")]
	[Address(RVA = "0xBF9130", Offset = "0xBF9130", VA = "0xBF9130")]
	private void OnDrawGizmosSelected()
	{
	}

	[Token(Token = "0x600022D")]
	[Address(RVA = "0xBF92F4", Offset = "0xBF92F4", VA = "0xBF92F4")]
	public FPS_Decal()
	{
	}
}
[Token(Token = "0x20000B9")]
public class MaterialType : MonoBehaviour
{
	[Serializable]
	[Token(Token = "0x20000BA")]
	public enum MaterialTypeEnum
	{
		[Token(Token = "0x40002D8")]
		Plaster,
		[Token(Token = "0x40002D9")]
		Metall,
		[Token(Token = "0x40002DA")]
		Folliage,
		[Token(Token = "0x40002DB")]
		Rock,
		[Token(Token = "0x40002DC")]
		Wood,
		[Token(Token = "0x40002DD")]
		Brick,
		[Token(Token = "0x40002DE")]
		Concrete,
		[Token(Token = "0x40002DF")]
		Dirt,
		[Token(Token = "0x40002E0")]
		Glass,
		[Token(Token = "0x40002E1")]
		Water
	}

	[Token(Token = "0x40002D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MaterialTypeEnum TypeOfMaterial;

	[Token(Token = "0x600022E")]
	[Address(RVA = "0xBF930C", Offset = "0xBF930C", VA = "0xBF930C")]
	public MaterialType()
	{
	}
}
[Token(Token = "0x20000BB")]
[ExecuteInEditMode]
public class FPS_CustomLight : MonoBehaviour
{
	[Token(Token = "0x600022F")]
	[Address(RVA = "0xBF9314", Offset = "0xBF9314", VA = "0xBF9314")]
	public FPS_CustomLight()
	{
	}
}
[Token(Token = "0x20000BC")]
[ExecuteAlways]
public class FPS_PerPlatformSettings : MonoBehaviour
{
	[Token(Token = "0x40002E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private bool defaultOpaueColorUsing;

	[Token(Token = "0x40002E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool defaultDepthUsing;

	[Token(Token = "0x6000230")]
	[Address(RVA = "0xBF931C", Offset = "0xBF931C", VA = "0xBF931C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000231")]
	[Address(RVA = "0xBF9438", Offset = "0xBF9438", VA = "0xBF9438")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000232")]
	[Address(RVA = "0xBF952C", Offset = "0xBF952C", VA = "0xBF952C")]
	public FPS_PerPlatformSettings()
	{
	}
}
[Token(Token = "0x20000BD")]
public class FPS_UseLight : MonoBehaviour
{
	[Token(Token = "0x6000233")]
	[Address(RVA = "0xBF9534", Offset = "0xBF9534", VA = "0xBF9534")]
	public FPS_UseLight()
	{
	}
}
[Token(Token = "0x20000BE")]
public class BFX_DemoTest : MonoBehaviour
{
	[Token(Token = "0x40002E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool InfiniteDecal;

	[Token(Token = "0x40002E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Light DirLight;

	[Token(Token = "0x40002E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool isVR;

	[Token(Token = "0x40002E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject BloodAttach;

	[Token(Token = "0x40002E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject[] BloodFX;

	[Token(Token = "0x40002E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 direction;

	[Token(Token = "0x40002EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private int effectIdx;

	[Token(Token = "0x6000234")]
	[Address(RVA = "0xBF953C", Offset = "0xBF953C", VA = "0xBF953C")]
	private Transform GetNearestObject(Transform hit, Vector3 hitPos)
	{
		return null;
	}

	[Token(Token = "0x6000235")]
	[Address(RVA = "0xBF971C", Offset = "0xBF971C", VA = "0xBF971C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000236")]
	[Address(RVA = "0xBF9B20", Offset = "0xBF9B20", VA = "0xBF9B20")]
	public float CalculateAngle(Vector3 from, Vector3 to)
	{
		return default(float);
	}

	[Token(Token = "0x6000237")]
	[Address(RVA = "0xBF9BD0", Offset = "0xBF9BD0", VA = "0xBF9BD0")]
	public BFX_DemoTest()
	{
	}
}
[Token(Token = "0x20000BF")]
public class BFX_BloodDecalLayers : MonoBehaviour
{
	[Token(Token = "0x20000C0")]
	public enum DecalLayersProperty
	{
		[Token(Token = "0x40002F3")]
		DrawToSelectedLayers,
		[Token(Token = "0x40002F4")]
		IgnoreSelectedLayers
	}

	[Token(Token = "0x20000C1")]
	public enum DepthMode
	{
		[Token(Token = "0x40002F6")]
		FullScreen,
		[Token(Token = "0x40002F7")]
		HalfScreen,
		[Token(Token = "0x40002F8")]
		QuarterScreen
	}

	[Token(Token = "0x40002EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask DecalLayers;

	[Token(Token = "0x40002EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public DecalLayersProperty DecalRenderingMode;

	[Token(Token = "0x40002ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public DepthMode LayerDepthResoulution;

	[Token(Token = "0x40002EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private DepthTextureMode defaultMode;

	[Token(Token = "0x40002EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private RenderTexture rt;

	[Token(Token = "0x40002F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Camera depthCamera;

	[Token(Token = "0x40002F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject cameraGameObject;

	[Token(Token = "0x6000238")]
	[Address(RVA = "0xBF9BE0", Offset = "0xBF9BE0", VA = "0xBF9BE0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000239")]
	[Address(RVA = "0xBF9FB4", Offset = "0xBF9FB4", VA = "0xBF9FB4")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600023A")]
	[Address(RVA = "0xBF9EDC", Offset = "0xBF9EDC", VA = "0xBF9EDC")]
	private void CreateDepthTexture()
	{
	}

	[Token(Token = "0x600023B")]
	[Address(RVA = "0xBFA0A8", Offset = "0xBFA0A8", VA = "0xBFA0A8")]
	public BFX_BloodDecalLayers()
	{
	}
}
[Token(Token = "0x20000C2")]
public class BFX_BloodSettings : MonoBehaviour
{
	[Token(Token = "0x20000C3")]
	public enum _DecalRenderinMode
	{
		[Token(Token = "0x4000300")]
		Floor_XZ,
		[Token(Token = "0x4000301")]
		AverageRayBetwenForwardAndFloor
	}

	[Token(Token = "0x40002F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float AnimationSpeed;

	[Token(Token = "0x40002FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float GroundHeight;

	[Token(Token = "0x40002FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0f, 1f)]
	public float LightIntensityMultiplier;

	[Token(Token = "0x40002FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool FreezeDecalDisappearance;

	[Token(Token = "0x40002FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public _DecalRenderinMode DecalRenderinMode;

	[Token(Token = "0x40002FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public bool ClampDecalSideSurface;

	[Token(Token = "0x600023C")]
	[Address(RVA = "0xBFA0D0", Offset = "0xBFA0D0", VA = "0xBFA0D0")]
	public BFX_BloodSettings()
	{
	}
}
[Token(Token = "0x20000C4")]
public class BFX_DecaGizmo : MonoBehaviour
{
	[Token(Token = "0x4000302")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform t;

	[Token(Token = "0x600023D")]
	[Address(RVA = "0xBFA0E4", Offset = "0xBFA0E4", VA = "0xBFA0E4")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600023E")]
	[Address(RVA = "0xBFA418", Offset = "0xBFA418", VA = "0xBFA418")]
	public BFX_DecaGizmo()
	{
	}
}
[Token(Token = "0x20000C5")]
public class BFX_DecalSettings : MonoBehaviour
{
	[Token(Token = "0x4000303")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BFX_BloodSettings BloodSettings;

	[Token(Token = "0x4000304")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform parent;

	[Token(Token = "0x4000305")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float TimeHeightMax;

	[Token(Token = "0x4000306")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TimeHeightMin;

	[Token(Token = "0x4000307")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Space]
	public Vector3 TimeScaleMax;

	[Token(Token = "0x4000308")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public Vector3 TimeScaleMin;

	[Token(Token = "0x4000309")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Space]
	public Vector3 TimeOffsetMax;

	[Token(Token = "0x400030A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 TimeOffsetMin;

	[Token(Token = "0x400030B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Space]
	public AnimationCurve TimeByHeight;

	[Token(Token = "0x400030C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 startOffset;

	[Token(Token = "0x400030D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private Vector3 startScale;

	[Token(Token = "0x400030E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float timeDelay;

	[Token(Token = "0x400030F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform t;

	[Token(Token = "0x4000310")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform tParent;

	[Token(Token = "0x4000311")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private BFX_ShaderProperies shaderProperies;

	[Token(Token = "0x4000312")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 averageRay;

	[Token(Token = "0x4000313")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private bool isPositionInitialized;

	[Token(Token = "0x4000314")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Vector3 initializedPosition;

	[Token(Token = "0x600023F")]
	[Address(RVA = "0xBFA420", Offset = "0xBFA420", VA = "0xBFA420")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000240")]
	[Address(RVA = "0xBFA5D0", Offset = "0xBFA5D0", VA = "0xBFA5D0")]
	private void ShaderCurve_OnAnimationFinished()
	{
	}

	[Token(Token = "0x6000241")]
	[Address(RVA = "0xBFA62C", Offset = "0xBFA62C", VA = "0xBFA62C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000242")]
	[Address(RVA = "0xBFA69C", Offset = "0xBFA69C", VA = "0xBFA69C")]
	private void InitializePosition()
	{
	}

	[Token(Token = "0x6000243")]
	[Address(RVA = "0xBFAD64", Offset = "0xBFAD64", VA = "0xBFAD64")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000244")]
	[Address(RVA = "0xBFABD0", Offset = "0xBFABD0", VA = "0xBFABD0")]
	private Vector3 GetAverageRay(Vector3 start, Vector3 forward)
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000245")]
	[Address(RVA = "0xBFAE08", Offset = "0xBFAE08", VA = "0xBFAE08")]
	private void EnableDecalAnimation()
	{
	}

	[Token(Token = "0x6000246")]
	[Address(RVA = "0xBFAE50", Offset = "0xBFAE50", VA = "0xBFAE50")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000247")]
	[Address(RVA = "0xBFB0C0", Offset = "0xBFB0C0", VA = "0xBFB0C0")]
	public BFX_DecalSettings()
	{
	}
}
[Token(Token = "0x20000C6")]
public class BFX_ManualAnimationUpdate : MonoBehaviour
{
	[Token(Token = "0x4000315")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BFX_BloodSettings BloodSettings;

	[Token(Token = "0x4000316")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve AnimationSpeed;

	[Token(Token = "0x4000317")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FramesCount;

	[Token(Token = "0x4000318")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float TimeLimit;

	[Token(Token = "0x4000319")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float OffsetFrames;

	[Token(Token = "0x400031A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float currentTime;

	[Token(Token = "0x400031B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer rend;

	[Token(Token = "0x400031C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private MaterialPropertyBlock propertyBlock;

	[Token(Token = "0x6000248")]
	[Address(RVA = "0xBFB1A4", Offset = "0xBFB1A4", VA = "0xBFB1A4")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000249")]
	[Address(RVA = "0xBFB230", Offset = "0xBFB230", VA = "0xBFB230")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600024A")]
	[Address(RVA = "0xBFB2F8", Offset = "0xBFB2F8", VA = "0xBFB2F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600024B")]
	[Address(RVA = "0xBFB498", Offset = "0xBFB498", VA = "0xBFB498")]
	public BFX_ManualAnimationUpdate()
	{
	}
}
[Token(Token = "0x20000C7")]
public class BFX_MouseOrbit : MonoBehaviour
{
	[Token(Token = "0x400031D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject target;

	[Token(Token = "0x400031E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float distance;

	[Token(Token = "0x400031F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float xSpeed;

	[Token(Token = "0x4000320")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float ySpeed;

	[Token(Token = "0x4000321")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float yMinLimit;

	[Token(Token = "0x4000322")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float yMaxLimit;

	[Token(Token = "0x4000323")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float x;

	[Token(Token = "0x4000324")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float y;

	[Token(Token = "0x4000325")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float prevDistance;

	[Token(Token = "0x600024C")]
	[Address(RVA = "0xBFB4D8", Offset = "0xBFB4D8", VA = "0xBFB4D8")]
	private void Start()
	{
	}

	[Token(Token = "0x600024D")]
	[Address(RVA = "0xBFB504", Offset = "0xBFB504", VA = "0xBFB504")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600024E")]
	[Address(RVA = "0xBFBBA0", Offset = "0xBFBBA0", VA = "0xBFBBA0")]
	private static float ClampAngle(float angle, float min, float max)
	{
		return default(float);
	}

	[Token(Token = "0x600024F")]
	[Address(RVA = "0xBFBBDC", Offset = "0xBFBBDC", VA = "0xBFBBDC")]
	public BFX_MouseOrbit()
	{
	}
}
[Token(Token = "0x20000C8")]
public class BFX_RenderDepth : MonoBehaviour
{
	[Token(Token = "0x4000326")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private DepthTextureMode defaultMode;

	[Token(Token = "0x6000250")]
	[Address(RVA = "0xBFBBF8", Offset = "0xBFBBF8", VA = "0xBFBBF8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000251")]
	[Address(RVA = "0xBFBC94", Offset = "0xBFBC94", VA = "0xBFBC94")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000252")]
	[Address(RVA = "0xBFBCF0", Offset = "0xBFBCF0", VA = "0xBFBCF0")]
	public BFX_RenderDepth()
	{
	}
}
[Token(Token = "0x20000C9")]
public class BFX_ShaderProperies : MonoBehaviour
{
	[Token(Token = "0x4000327")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public BFX_BloodSettings BloodSettings;

	[Token(Token = "0x4000328")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve FloatCurve;

	[Token(Token = "0x4000329")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float GraphTimeMultiplier;

	[Token(Token = "0x400032A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float GraphIntensityMultiplier;

	[Token(Token = "0x400032B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float TimeDelay;

	[Token(Token = "0x400032C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool canUpdate;

	[Token(Token = "0x400032D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	private bool isFrized;

	[Token(Token = "0x400032E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float startTime;

	[Token(Token = "0x400032F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private int cutoutPropertyID;

	[Token(Token = "0x4000330")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int forwardDirPropertyID;

	[Token(Token = "0x4000331")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float timeLapsed;

	[Token(Token = "0x4000332")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private MaterialPropertyBlock props;

	[Token(Token = "0x4000333")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Renderer rend;

	[Token(Token = "0x14000001")]
	public event Action OnAnimationFinished
	{
		[Token(Token = "0x6000253")]
		[Address(RVA = "0xBFA534", Offset = "0xBFA534", VA = "0xBFA534")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x6000254")]
		[Address(RVA = "0xBFBCF8", Offset = "0xBFBCF8", VA = "0xBFBCF8")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x6000255")]
	[Address(RVA = "0xBFBD94", Offset = "0xBFBD94", VA = "0xBFBD94")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000256")]
	[Address(RVA = "0xBFBE6C", Offset = "0xBFBE6C", VA = "0xBFBE6C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000257")]
	[Address(RVA = "0xBFBF74", Offset = "0xBFBF74", VA = "0xBFBF74")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000258")]
	[Address(RVA = "0xBFBFE4", Offset = "0xBFBFE4", VA = "0xBFBFE4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000259")]
	[Address(RVA = "0xBFC234", Offset = "0xBFC234", VA = "0xBFC234")]
	public BFX_ShaderProperies()
	{
	}
}
[Token(Token = "0x20000CA")]
public class BloodEffect : MonoBehaviour
{
	[Token(Token = "0x4000335")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxBloodSprays;

	[Token(Token = "0x4000336")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxBloodDecays;

	[Token(Token = "0x4000337")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDistance;

	[Token(Token = "0x4000338")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layer;

	[Token(Token = "0x4000339")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameData gameData;

	[Token(Token = "0x400033A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject blood;

	[Token(Token = "0x400033B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform head;

	[Token(Token = "0x600025A")]
	[Address(RVA = "0xBFC270", Offset = "0xBFC270", VA = "0xBFC270")]
	private void Start()
	{
	}

	[Token(Token = "0x600025B")]
	[Address(RVA = "0xBFC724", Offset = "0xBFC724", VA = "0xBFC724")]
	public BloodEffect()
	{
	}
}
[Token(Token = "0x20000CB")]
public class SpawnEffect : MonoBehaviour
{
	[Token(Token = "0x400033C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float spawnEffectTime;

	[Token(Token = "0x400033D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pause;

	[Token(Token = "0x400033E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AnimationCurve fadeIn;

	[Token(Token = "0x400033F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private ParticleSystem ps;

	[Token(Token = "0x4000340")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timer;

	[Token(Token = "0x4000341")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Renderer _renderer;

	[Token(Token = "0x4000342")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private int shaderProperty;

	[Token(Token = "0x600025C")]
	[Address(RVA = "0xBFC740", Offset = "0xBFC740", VA = "0xBFC740")]
	private void Start()
	{
	}

	[Token(Token = "0x600025D")]
	[Address(RVA = "0xBFC820", Offset = "0xBFC820", VA = "0xBFC820")]
	private void Update()
	{
	}

	[Token(Token = "0x600025E")]
	[Address(RVA = "0xBFC8E0", Offset = "0xBFC8E0", VA = "0xBFC8E0")]
	public SpawnEffect()
	{
	}
}
[Serializable]
[Token(Token = "0x20000CC")]
public class Prefabs
{
	[Token(Token = "0x4000343")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public List<GameObject> prefabs;

	[Token(Token = "0x600025F")]
	[Address(RVA = "0xBFC8F4", Offset = "0xBFC8F4", VA = "0xBFC8F4")]
	public GameObject ReturnRandom()
	{
		return null;
	}

	[Token(Token = "0x6000260")]
	[Address(RVA = "0xBFC96C", Offset = "0xBFC96C", VA = "0xBFC96C")]
	public Prefabs()
	{
	}
}
[Token(Token = "0x20000CD")]
public enum ParticleMaterial
{
	[Token(Token = "0x4000345")]
	Wood,
	[Token(Token = "0x4000346")]
	Metal,
	[Token(Token = "0x4000347")]
	Glass,
	[Token(Token = "0x4000348")]
	Brick,
	[Token(Token = "0x4000349")]
	Concrete,
	[Token(Token = "0x400034A")]
	Dirt,
	[Token(Token = "0x400034B")]
	Foilage,
	[Token(Token = "0x400034C")]
	Plaster,
	[Token(Token = "0x400034D")]
	Rock,
	[Token(Token = "0x400034E")]
	Water
}
[Token(Token = "0x20000CE")]
public class ParticleEffectsImpact : MonoBehaviour
{
	[Token(Token = "0x400034F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Prefabs bloodPrefabs;

	[Token(Token = "0x4000350")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject attachedBloodPrefab;

	[Token(Token = "0x4000351")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Prefabs impactPrefabs;

	[Token(Token = "0x6000261")]
	[Address(RVA = "0xBFC974", Offset = "0xBFC974", VA = "0xBFC974")]
	public ParticleEffectsImpact()
	{
	}
}
[Token(Token = "0x20000CF")]
public class DestroyOnGameMode : MonoBehaviour
{
	[Token(Token = "0x4000352")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool sandboxMode;

	[Token(Token = "0x6000262")]
	[Address(RVA = "0xBFC97C", Offset = "0xBFC97C", VA = "0xBFC97C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000263")]
	[Address(RVA = "0xBFCA3C", Offset = "0xBFCA3C", VA = "0xBFCA3C")]
	public DestroyOnGameMode()
	{
	}
}
[Token(Token = "0x20000D0")]
public class YueVRIK : MonoBehaviour
{
	[Token(Token = "0x4000353")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	[Header("Config")]
	public float weight;

	[Token(Token = "0x4000354")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float neckLength;

	[Token(Token = "0x4000355")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float chestLength;

	[Token(Token = "0x4000356")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pelvisLength;

	[Token(Token = "0x4000357")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float neckRotation;

	[Token(Token = "0x4000358")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float chestRotation;

	[Token(Token = "0x4000359")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float rotationThreshold;

	[Token(Token = "0x400035A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float positionThreshold;

	[Token(Token = "0x400035B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Locomotion")]
	public AnimationCurve footStepHeight;

	[Token(Token = "0x400035C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public FootIKTarget leftFoot;

	[Token(Token = "0x400035D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public FootIKTarget rightFoot;

	[Token(Token = "0x400035E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Dependencies")]
	public Transform leftFootTarget;

	[Token(Token = "0x400035F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rightFootTarget;

	[Token(Token = "0x4000360")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform hip;

	[Token(Token = "0x4000361")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform chest;

	[Token(Token = "0x4000362")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform neck;

	[Token(Token = "0x4000363")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform head;

	[Token(Token = "0x4000364")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform direction;

	[Token(Token = "0x4000365")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Transform leftHandTarget;

	[Token(Token = "0x4000366")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Transform rightHandTarget;

	[Token(Token = "0x4000367")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public Transform movementSpace;

	[Token(Token = "0x4000368")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Animator animator;

	[Token(Token = "0x4000369")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private PositionAndRotation hipStart;

	[Token(Token = "0x400036A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private PositionAndRotation chestStart;

	[Token(Token = "0x400036B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private Transform hipAvatar;

	[Token(Token = "0x400036C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Transform chestAvatar;

	[Token(Token = "0x400036D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private float leftStepWeight;

	[Token(Token = "0x400036E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
	private float rightStepWeight;

	[Token(Token = "0x400036F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private YueTransform leftStart;

	[Token(Token = "0x4000370")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private YueTransform rightStart;

	[Token(Token = "0x6000264")]
	[Address(RVA = "0xBFCA44", Offset = "0xBFCA44", VA = "0xBFCA44")]
	private void Start()
	{
	}

	[Token(Token = "0x6000265")]
	[Address(RVA = "0xBFCDB8", Offset = "0xBFCDB8", VA = "0xBFCDB8")]
	public void SetVelocity(Vector3 worldSpaceVelocity)
	{
	}

	[Token(Token = "0x6000266")]
	[Address(RVA = "0xBFCE64", Offset = "0xBFCE64", VA = "0xBFCE64")]
	private void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x6000267")]
	[Address(RVA = "0xBFD124", Offset = "0xBFD124", VA = "0xBFD124")]
	private void Update()
	{
	}

	[Token(Token = "0x6000268")]
	[Address(RVA = "0xBFD6DC", Offset = "0xBFD6DC", VA = "0xBFD6DC")]
	private void UpdateLocomotion()
	{
	}

	[Token(Token = "0x6000269")]
	[Address(RVA = "0xBFD6E0", Offset = "0xBFD6E0", VA = "0xBFD6E0")]
	private void UpdateStep(Vector3 startPos, Quaternion startRot, Vector3 endPos, Vector3 endRots, float stepWeight)
	{
	}

	[Token(Token = "0x600026A")]
	[Address(RVA = "0xBFD6E4", Offset = "0xBFD6E4", VA = "0xBFD6E4")]
	public YueVRIK()
	{
	}
}
[Serializable]
[Token(Token = "0x20000D1")]
public class FootIKTarget
{
	[Token(Token = "0x4000371")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float weight;

	[Token(Token = "0x4000372")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool direction;

	[Token(Token = "0x4000373")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000374")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 neutralPosition;

	[Token(Token = "0x4000375")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 neutralRotation;

	[Token(Token = "0x4000376")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PositionAndRotation start;

	[Token(Token = "0x4000377")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private PositionAndRotation end;

	[Token(Token = "0x4000378")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PositionAndRotation result;

	[Token(Token = "0x4000379")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public YueVRIK yueIK;

	[Token(Token = "0x400037A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool isStepping;

	[Token(Token = "0x600026B")]
	[Address(RVA = "0xBFD704", Offset = "0xBFD704", VA = "0xBFD704")]
	public FootIKTarget()
	{
	}

	[Token(Token = "0x600026C")]
	[Address(RVA = "0xBFD7B0", Offset = "0xBFD7B0", VA = "0xBFD7B0")]
	public FootIKTarget(YueVRIK vrik)
	{
	}

	[Token(Token = "0x600026D")]
	[Address(RVA = "0xBFD848", Offset = "0xBFD848", VA = "0xBFD848")]
	public void UpdateTarget()
	{
	}

	[Token(Token = "0x600026E")]
	[Address(RVA = "0xBFD954", Offset = "0xBFD954", VA = "0xBFD954")]
	private void UpdateStep()
	{
	}

	[Token(Token = "0x600026F")]
	[Address(RVA = "0xBFDA60", Offset = "0xBFDA60", VA = "0xBFDA60")]
	private void CalculateNewPosition(PositionAndRotation target)
	{
	}
}
[Token(Token = "0x20000D2")]
public class PositionAndRotation
{
	[Token(Token = "0x400037B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 position;

	[Token(Token = "0x400037C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion rotation;

	[Token(Token = "0x6000270")]
	[Address(RVA = "0xBFD7A8", Offset = "0xBFD7A8", VA = "0xBFD7A8")]
	public PositionAndRotation()
	{
	}

	[Token(Token = "0x6000271")]
	[Address(RVA = "0xBFCD54", Offset = "0xBFCD54", VA = "0xBFCD54")]
	public PositionAndRotation(Vector3 pos, Quaternion rot)
	{
	}

	[Token(Token = "0x6000272")]
	[Address(RVA = "0xBFDACC", Offset = "0xBFDACC", VA = "0xBFDACC")]
	public PositionAndRotation Interpolate(PositionAndRotation a, PositionAndRotation b, float weight)
	{
		return null;
	}
}
[Token(Token = "0x20000D3")]
public class SetMaterialColor : MonoBehaviour
{
	[Token(Token = "0x400037D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private int m_MaterialIndex;

	[Token(Token = "0x400037E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	[Header("Albedo")]
	private bool m_TextureOverride;

	[Token(Token = "0x400037F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private string m_TextureProperty;

	[Token(Token = "0x4000380")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Texture m_Texture;

	[Token(Token = "0x4000381")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("Color")]
	private bool m_ColorOverride;

	[Token(Token = "0x4000382")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private string m_ColorProperty;

	[Token(Token = "0x4000383")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private Color m_Color;

	[Token(Token = "0x4000384")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[SerializeField]
	[Header("MetallicSmoothness")]
	private bool m_GlossScaleOverride;

	[Token(Token = "0x4000385")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private string m_GlossScaleProperty;

	[Token(Token = "0x4000386")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private string m_GlossinessProperty;

	[Token(Token = "0x4000387")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[SerializeField]
	private string m_MetallicProperty;

	[Token(Token = "0x4000388")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Range(0f, 1f)]
	[SerializeField]
	private float m_GlossScale;

	[Token(Token = "0x4000389")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	[SerializeField]
	[Range(0f, 1f)]
	private float m_Glossiness;

	[Token(Token = "0x400038A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	[Range(0f, 1f)]
	private float m_Metallic;

	[Token(Token = "0x400038B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[Space]
	[SerializeField]
	private bool m_UpdateOnValidate;

	[Token(Token = "0x6000273")]
	[Address(RVA = "0xBFDBAC", Offset = "0xBFDBAC", VA = "0xBFDBAC")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000274")]
	[Address(RVA = "0xBFDD18", Offset = "0xBFDD18", VA = "0xBFDD18")]
	[ContextMenu("Apply Material")]
	private void Apply()
	{
	}

	[Token(Token = "0x6000275")]
	[Address(RVA = "0xBFDBD4", Offset = "0xBFDBD4", VA = "0xBFDBD4")]
	[ContextMenu("Reset Material")]
	private void ClearPropertyBlock()
	{
	}

	[Token(Token = "0x6000276")]
	[Address(RVA = "0xBFDEF4", Offset = "0xBFDEF4", VA = "0xBFDEF4")]
	public SetMaterialColor()
	{
	}
}
[Token(Token = "0x20000D4")]
public class AnimationManager : MonoBehaviour
{
	[Token(Token = "0x400038C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public Transform leftFottIK;

	[Token(Token = "0x400038D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[HideInInspector]
	public Transform rightFottIK;

	[Token(Token = "0x400038E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Transform hipIK;

	[Token(Token = "0x400038F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float blendSpeed;

	[Token(Token = "0x4000390")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(0f, 1f)]
	public float footIKWeight;

	[Token(Token = "0x4000391")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(0f, 1f)]
	public float locomotionWeight;

	[Token(Token = "0x4000392")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float velocityMaxFactor;

	[Token(Token = "0x4000393")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CharacterManager characterManager;

	[Token(Token = "0x4000394")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerController playerController;

	[Token(Token = "0x4000395")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform neck;

	[Token(Token = "0x4000396")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<SkinnedMeshRenderer> additionalRederers;

	[Token(Token = "0x4000397")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 prevPos;

	[Token(Token = "0x4000398")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion prevRot;

	[Token(Token = "0x4000399")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private Vector3 prevLocalPos;

	[Token(Token = "0x400039A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int startCameraCount;

	[Token(Token = "0x6000277")]
	[Address(RVA = "0xBFDFDC", Offset = "0xBFDFDC", VA = "0xBFDFDC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000278")]
	[Address(RVA = "0xBFE064", Offset = "0xBFE064", VA = "0xBFE064")]
	private void Update()
	{
	}

	[Token(Token = "0x6000279")]
	[Address(RVA = "0xBFE970", Offset = "0xBFE970", VA = "0xBFE970")]
	public AnimationManager()
	{
	}
}
[Token(Token = "0x20000D5")]
public class BodyRef : MonoBehaviour
{
	[Token(Token = "0x400039B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public VRRig vrRig;

	[Token(Token = "0x400039C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandAnimation handAnimation;

	[Token(Token = "0x400039D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRFootIK vrFootIK;

	[Token(Token = "0x400039E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public VRIK playerIK;

	[Token(Token = "0x600027A")]
	[Address(RVA = "0xBFE988", Offset = "0xBFE988", VA = "0xBFE988")]
	public BodyRef()
	{
	}
}
[Token(Token = "0x20000D6")]
public class CharacterManager : MonoBehaviour
{
	[Token(Token = "0x400039F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<BodyReference> characterModels;

	[Token(Token = "0x40003A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public BodyReference characterInUse;

	[Token(Token = "0x40003A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public UnityEvent OnCharacterChanged;

	[Token(Token = "0x40003A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform trackingSpace;

	[Token(Token = "0x40003A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform headFixedIK;

	[Token(Token = "0x40003A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float footIKWeight;

	[Token(Token = "0x40003A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int index;

	[Token(Token = "0x40003A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PlayerController playerController;

	[Token(Token = "0x40003A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioSource leftFootSource;

	[Token(Token = "0x40003A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource rightFootSource;

	[Token(Token = "0x40003A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<AudioClip> footStepClips;

	[Token(Token = "0x40003AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameData gameData;

	[Token(Token = "0x600027B")]
	[Address(RVA = "0xBFE990", Offset = "0xBFE990", VA = "0xBFE990")]
	private void Start()
	{
	}

	[Token(Token = "0x600027C")]
	[Address(RVA = "0xBFEF54", Offset = "0xBFEF54", VA = "0xBFEF54")]
	private void Update()
	{
	}

	[Token(Token = "0x600027D")]
	[Address(RVA = "0xBFF004", Offset = "0xBFF004", VA = "0xBFF004")]
	private void OnRightFootStep()
	{
	}

	[Token(Token = "0x600027E")]
	[Address(RVA = "0xBFF0B0", Offset = "0xBFF0B0", VA = "0xBFF0B0")]
	private void OnLeftFootStep()
	{
	}

	[Token(Token = "0x600027F")]
	[Address(RVA = "0xBFF15C", Offset = "0xBFF15C", VA = "0xBFF15C")]
	public void Next()
	{
	}

	[Token(Token = "0x6000280")]
	[Address(RVA = "0xBFECB8", Offset = "0xBFECB8", VA = "0xBFECB8")]
	public void SetCharacterModel(int id)
	{
	}

	[Token(Token = "0x6000281")]
	[Address(RVA = "0xBFEC20", Offset = "0xBFEC20", VA = "0xBFEC20")]
	public void SetModelScale()
	{
	}

	[Token(Token = "0x6000282")]
	[Address(RVA = "0xBFEB68", Offset = "0xBFEB68", VA = "0xBFEB68")]
	public void SetWorldScale()
	{
	}

	[Token(Token = "0x6000283")]
	[Address(RVA = "0xBFF1C4", Offset = "0xBFF1C4", VA = "0xBFF1C4")]
	public CharacterManager()
	{
	}
}
[Token(Token = "0x20000D7")]
public enum HandSide
{
	[Token(Token = "0x40003AC")]
	LeftHand,
	[Token(Token = "0x40003AD")]
	RightHand
}
[Serializable]
[Token(Token = "0x20000D8")]
public class FingerTuning
{
	[Token(Token = "0x40003AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Header("Physics Config")]
	public float depenetrationVelocity;

	[Token(Token = "0x40003AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float proportional;

	[Token(Token = "0x40003B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float derivative;

	[Token(Token = "0x40003B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask layerMask;

	[Token(Token = "0x6000284")]
	[Address(RVA = "0xBFF1CC", Offset = "0xBFF1CC", VA = "0xBFF1CC")]
	public FingerTuning()
	{
	}
}
[Token(Token = "0x20000D9")]
public class HandAnimation : MonoBehaviour
{
	[Token(Token = "0x40003B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public FingerTuning tuning;

	[Token(Token = "0x40003B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Hands")]
	public AutoHand leftHand;

	[Token(Token = "0x40003B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AutoHand rightHand;

	[Token(Token = "0x40003B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public YueInteractorInput leftInput;

	[Token(Token = "0x40003B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public YueInteractorInput rightInput;

	[Token(Token = "0x40003B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator animator;

	[Token(Token = "0x6000285")]
	[Address(RVA = "0xBFF1E8", Offset = "0xBFF1E8", VA = "0xBFF1E8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000286")]
	[Address(RVA = "0xBFF608", Offset = "0xBFF608", VA = "0xBFF608")]
	private void Update()
	{
	}

	[Token(Token = "0x6000287")]
	[Address(RVA = "0xBFF714", Offset = "0xBFF714", VA = "0xBFF714")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000288")]
	[Address(RVA = "0xBFF884", Offset = "0xBFF884", VA = "0xBFF884")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000289")]
	[Address(RVA = "0xBFFA40", Offset = "0xBFFA40", VA = "0xBFFA40")]
	public HandAnimation()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DA")]
public class AutoHand
{
	[Token(Token = "0x40003B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float weight;

	[Token(Token = "0x40003B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public bool isHandposeAvailable;

	[Token(Token = "0x40003BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x15")]
	public bool useInputs;

	[Token(Token = "0x40003BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Finger index;

	[Token(Token = "0x40003BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Finger middle;

	[Token(Token = "0x40003BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Finger ring;

	[Token(Token = "0x40003BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Finger pinky;

	[Token(Token = "0x40003BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Finger thumb;

	[Token(Token = "0x40003C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	private List<Finger> fingers;

	[Token(Token = "0x600028A")]
	[Address(RVA = "0xBFFA48", Offset = "0xBFFA48", VA = "0xBFFA48")]
	public AutoHand()
	{
	}

	[Token(Token = "0x600028B")]
	[Address(RVA = "0xBFFA60", Offset = "0xBFFA60", VA = "0xBFFA60")]
	public AutoHand(HandSide thisSide, Animator animator, FingerTuning tuning)
	{
	}

	[Token(Token = "0x600028C")]
	[Address(RVA = "0xBFF26C", Offset = "0xBFF26C", VA = "0xBFF26C")]
	public void Init(HandSide side, Animator animator, FingerTuning tuning)
	{
	}

	[Token(Token = "0x600028D")]
	[Address(RVA = "0xBFF73C", Offset = "0xBFF73C", VA = "0xBFF73C")]
	public void UpdatePhysics()
	{
	}

	[Token(Token = "0x600028E")]
	[Address(RVA = "0xBFF8AC", Offset = "0xBFF8AC", VA = "0xBFF8AC")]
	public void UpdateVisuals()
	{
	}

	[Token(Token = "0x600028F")]
	[Address(RVA = "0xBFF648", Offset = "0xBFF648", VA = "0xBFF648")]
	public void UpdateInputs(ControllerInput input)
	{
	}
}
[Serializable]
[Token(Token = "0x20000DB")]
public class Finger
{
	[Token(Token = "0x40003C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[Range(0f, 1f)]
	public float input;

	[Token(Token = "0x40003C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Range(0f, 1f)]
	public float atRest;

	[Token(Token = "0x40003C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float targetFlex;

	[Token(Token = "0x40003C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float flex;

	[Token(Token = "0x40003C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float rootDepenerateFactor;

	[Token(Token = "0x40003C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float minAngle;

	[Token(Token = "0x40003C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float maxAngle;

	[Token(Token = "0x40003C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private Vector3 rootRotationAxis;

	[Token(Token = "0x40003C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private Vector3 rotationAxis;

	[Token(Token = "0x40003CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[SerializeField]
	private Vector3 rootOffset;

	[Token(Token = "0x40003CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<Transform> segments;

	[Token(Token = "0x40003CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Quaternion> segmentStartRotation;

	[Token(Token = "0x40003CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FingerTuning tuning;

	[Token(Token = "0x40003CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private PDController pdController;

	[NonSerialized]
	[Token(Token = "0x40003CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AutoHand hand;

	[Token(Token = "0x40003D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float error;

	[Token(Token = "0x40003D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private float force;

	[Token(Token = "0x40003D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private float velocity;

	[Token(Token = "0x6000290")]
	[Address(RVA = "0xC00290", Offset = "0xC00290", VA = "0xC00290")]
	public Finger()
	{
	}

	[Token(Token = "0x6000291")]
	[Address(RVA = "0xC002C0", Offset = "0xC002C0", VA = "0xC002C0")]
	public Finger(Animator animator, int startIndex, int endIndex, FingerTuning tune, AutoHand thisHand)
	{
	}

	[Token(Token = "0x6000292")]
	[Address(RVA = "0xBFFAB4", Offset = "0xBFFAB4", VA = "0xBFFAB4")]
	public void Init(Animator animator, int startIndex, int endIndex, FingerTuning tune, AutoHand thisHand)
	{
	}

	[Token(Token = "0x6000293")]
	[Address(RVA = "0xBFFD00", Offset = "0xBFFD00", VA = "0xBFFD00")]
	public void UpdatePhysics()
	{
	}

	[Token(Token = "0x6000294")]
	[Address(RVA = "0xBFFFAC", Offset = "0xBFFFAC", VA = "0xBFFFAC")]
	public void UpdateBones()
	{
	}
}
[Token(Token = "0x20000DC")]
public class VRFootIK : MonoBehaviour
{
	[Token(Token = "0x40003D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform leftFottIK;

	[Token(Token = "0x40003D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rightFottIK;

	[Token(Token = "0x40003D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform hipIK;

	[Token(Token = "0x40003D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Range(0f, 1f)]
	public float footIKWeight;

	[Token(Token = "0x40003D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Animator animator;

	[Token(Token = "0x40003D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private CharacterManager characterManager;

	[Token(Token = "0x6000295")]
	[Address(RVA = "0xC00328", Offset = "0xC00328", VA = "0xC00328")]
	private void Start()
	{
	}

	[Token(Token = "0x6000296")]
	[Address(RVA = "0xC003A4", Offset = "0xC003A4", VA = "0xC003A4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000297")]
	[Address(RVA = "0xC00500", Offset = "0xC00500", VA = "0xC00500")]
	public void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x6000298")]
	[Address(RVA = "0xC00694", Offset = "0xC00694", VA = "0xC00694")]
	public VRFootIK()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DD")]
public class VRMap
{
	[Token(Token = "0x6000299")]
	[Address(RVA = "0xC0069C", Offset = "0xC0069C", VA = "0xC0069C")]
	public VRMap()
	{
	}
}
[Token(Token = "0x20000DE")]
public class VRRig : MonoBehaviour
{
	[Token(Token = "0x600029A")]
	[Address(RVA = "0xC006A4", Offset = "0xC006A4", VA = "0xC006A4")]
	public VRRig()
	{
	}
}
[Serializable]
[Token(Token = "0x20000DF")]
public class IKHand
{
	[Token(Token = "0x600029B")]
	[Address(RVA = "0xC006AC", Offset = "0xC006AC", VA = "0xC006AC")]
	public IKHand()
	{
	}
}
[Token(Token = "0x20000E0")]
public class YueTransform
{
	[Token(Token = "0x600029C")]
	[Address(RVA = "0xC006B4", Offset = "0xC006B4", VA = "0xC006B4")]
	public YueTransform()
	{
	}
}
[Token(Token = "0x20000E1")]
[ExecuteInEditMode]
public class YueHandPoseEditor : MonoBehaviour
{
	[Token(Token = "0x40003D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Setup Trigger")]
	public bool setupHandReference;

	[Token(Token = "0x40003DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[Header("Updates")]
	public bool updateAnimation;

	[Token(Token = "0x40003DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	[Header("Symetrie Right to Left")]
	public bool symetrie;

	[Token(Token = "0x40003DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	[Header("Visibility")]
	public bool enableMesh;

	[Token(Token = "0x40003DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool showLeft;

	[Token(Token = "0x40003DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool showRight;

	[Token(Token = "0x40003DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float boneScale;

	[Token(Token = "0x40003E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Animator animator;

	[Token(Token = "0x40003E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Transform animatedLeftHand;

	[Token(Token = "0x40003E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public Transform animatedRightHand;

	[Token(Token = "0x40003E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[HideInInspector]
	public Transform bonesLeft;

	[Token(Token = "0x40003E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public Transform bonesRight;

	[Token(Token = "0x40003E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform ikTargetL;

	[Token(Token = "0x40003E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform ikTargetR;

	[Token(Token = "0x40003E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public List<Transform> bonesSource;

	[Token(Token = "0x40003E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public List<Transform> bonesTargets;

	[Token(Token = "0x40003E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public List<Transform> bonesSourceL;

	[Token(Token = "0x40003EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public List<Transform> bonesSourceR;

	[Token(Token = "0x40003EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[SerializeField]
	private SkinnedMeshRenderer handMesh;

	[Token(Token = "0x40003EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private BoneRenderer boneRendererLeft;

	[Token(Token = "0x40003ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private BoneRenderer boneRendererRight;

	[Token(Token = "0x40003EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool isSetup;

	[Token(Token = "0x600029D")]
	[Address(RVA = "0xC006BC", Offset = "0xC006BC", VA = "0xC006BC")]
	private void Update()
	{
	}

	[Token(Token = "0x600029E")]
	[Address(RVA = "0xC01294", Offset = "0xC01294", VA = "0xC01294")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600029F")]
	[Address(RVA = "0xC0146C", Offset = "0xC0146C", VA = "0xC0146C")]
	private void UpdateBones()
	{
	}

	[Token(Token = "0x60002A0")]
	[Address(RVA = "0xC01010", Offset = "0xC01010", VA = "0xC01010")]
	private void UpdateVisibility()
	{
	}

	[Token(Token = "0x60002A1")]
	[Address(RVA = "0xC00824", Offset = "0xC00824", VA = "0xC00824")]
	private void SetupHands()
	{
	}

	[Token(Token = "0x60002A2")]
	[Address(RVA = "0xC00E28", Offset = "0xC00E28", VA = "0xC00E28")]
	private void Symetrize()
	{
	}

	[Token(Token = "0x60002A3")]
	[Address(RVA = "0xC01998", Offset = "0xC01998", VA = "0xC01998")]
	private void SetupBoneRenderer()
	{
	}

	[Token(Token = "0x60002A4")]
	[Address(RVA = "0xC015C0", Offset = "0xC015C0", VA = "0xC015C0")]
	private void GetChildRecursive(Transform obj, List<Transform> list)
	{
	}

	[Token(Token = "0x60002A5")]
	[Address(RVA = "0xC01BCC", Offset = "0xC01BCC", VA = "0xC01BCC")]
	public YueHandPoseEditor()
	{
	}
}
[Token(Token = "0x20000E2")]
[ExecuteInEditMode]
public class YueHandPoseModel : MonoBehaviour
{
	[Token(Token = "0x40003EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public YueHandPoseEditor editor;

	[Token(Token = "0x40003F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Animator animator;

	[Token(Token = "0x60002A6")]
	[Address(RVA = "0xC01BDC", Offset = "0xC01BDC", VA = "0xC01BDC")]
	private void Update()
	{
	}

	[Token(Token = "0x60002A7")]
	[Address(RVA = "0xC01CFC", Offset = "0xC01CFC", VA = "0xC01CFC")]
	public void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x60002A8")]
	[Address(RVA = "0xC01EC8", Offset = "0xC01EC8", VA = "0xC01EC8")]
	public YueHandPoseModel()
	{
	}
}
[Token(Token = "0x20000E3")]
public class NPCDrone : MonoBehaviour, IGamePlayTriggers
{
	[Token(Token = "0x40003F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public LayerMask layer;

	[Token(Token = "0x40003F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxImpulse;

	[Token(Token = "0x40003F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float proportional;

	[Token(Token = "0x40003F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float derivative;

	[Token(Token = "0x40003F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Dependecies")]
	public Transform target;

	[Token(Token = "0x40003F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject explosionPrefab;

	[Token(Token = "0x40003F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private YueInputModule inputModule;

	[Token(Token = "0x40003F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YueDronePhysics drone;

	[Token(Token = "0x40003F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private NavMeshPath path;

	[Token(Token = "0x40003FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PDController pdController;

	[Token(Token = "0x60002A9")]
	[Address(RVA = "0xC01ED0", Offset = "0xC01ED0", VA = "0xC01ED0")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002AA")]
	[Address(RVA = "0xC020B0", Offset = "0xC020B0", VA = "0xC020B0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002AB")]
	[Address(RVA = "0xC021A8", Offset = "0xC021A8", VA = "0xC021A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002AC")]
	[Address(RVA = "0xC02534", Offset = "0xC02534", VA = "0xC02534")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60002AD")]
	[Address(RVA = "0xC02624", Offset = "0xC02624", VA = "0xC02624", Slot = "4")]
	public void OnGotShot(Vector3 impulse)
	{
	}

	[Token(Token = "0x60002AE")]
	[Address(RVA = "0xC02628", Offset = "0xC02628", VA = "0xC02628", Slot = "5")]
	public void OnExplosionHit(Vector3 impulse)
	{
	}

	[Token(Token = "0x60002AF")]
	[Address(RVA = "0xC01F8C", Offset = "0xC01F8C", VA = "0xC01F8C")]
	private void Explode()
	{
	}

	[Token(Token = "0x60002B0")]
	[Address(RVA = "0xC0262C", Offset = "0xC0262C", VA = "0xC0262C")]
	public NPCDrone()
	{
	}
}
[Token(Token = "0x20000E4")]
public class Door : ActiveBehaviour, IValueable
{
	[Token(Token = "0x40003FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private bool _isOpen;

	[Token(Token = "0x17000038")]
	public float Value
	{
		[Token(Token = "0x60002B1")]
		[Address(RVA = "0xC02648", Offset = "0xC02648", VA = "0xC02648", Slot = "11")]
		get
		{
			return default(float);
		}
	}

	[Token(Token = "0x17000039")]
	public bool IsOpen
	{
		[Token(Token = "0x60002B5")]
		[Address(RVA = "0xC027D0", Offset = "0xC027D0", VA = "0xC027D0")]
		get
		{
			return default(bool);
		}
		[Token(Token = "0x60002B6")]
		[Address(RVA = "0xC027D8", Offset = "0xC027D8", VA = "0xC027D8")]
		set
		{
		}
	}

	[Token(Token = "0x14000002")]
	public event ValueChangeEvent valueChangeEvent
	{
		[Token(Token = "0x60002B2")]
		[Address(RVA = "0xC02660", Offset = "0xC02660", VA = "0xC02660", Slot = "12")]
		[CompilerGenerated]
		add
		{
		}
		[Token(Token = "0x60002B3")]
		[Address(RVA = "0xC026FC", Offset = "0xC026FC", VA = "0xC026FC", Slot = "13")]
		[CompilerGenerated]
		remove
		{
		}
	}

	[Token(Token = "0x60002B4")]
	[Address(RVA = "0xC02798", Offset = "0xC02798", VA = "0xC02798", Slot = "5")]
	protected override void OnValidate()
	{
	}

	[Token(Token = "0x60002B7")]
	[Address(RVA = "0xC02810", Offset = "0xC02810", VA = "0xC02810")]
	public Door()
	{
	}
}
[Token(Token = "0x20000E5")]
public class ParticlesController : MonoBehaviour
{
	[Token(Token = "0x40003FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private ParticleSystem _ps;

	[Token(Token = "0x1700003A")]
	public float RateOverTime
	{
		[Token(Token = "0x60002B9")]
		[Address(RVA = "0xC02868", Offset = "0xC02868", VA = "0xC02868")]
		set
		{
		}
	}

	[Token(Token = "0x1700003B")]
	public float StartSpeed
	{
		[Token(Token = "0x60002BA")]
		[Address(RVA = "0xC028D0", Offset = "0xC028D0", VA = "0xC028D0")]
		set
		{
		}
	}

	[Token(Token = "0x60002B8")]
	[Address(RVA = "0xC02818", Offset = "0xC02818", VA = "0xC02818")]
	private void Awake()
	{
	}

	[Token(Token = "0x60002BB")]
	[Address(RVA = "0xC02938", Offset = "0xC02938", VA = "0xC02938")]
	public ParticlesController()
	{
	}
}
[Token(Token = "0x20000E6")]
public class PhysicalButton : MonoBehaviour
{
	[Token(Token = "0x40003FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnButtonPressed;

	[Token(Token = "0x40003FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip clipOnPressed;

	[Token(Token = "0x4000400")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform button;

	[Token(Token = "0x4000401")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float limit;

	[Token(Token = "0x4000402")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool triggerd;

	[Token(Token = "0x4000403")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 startPos;

	[Token(Token = "0x4000404")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource source;

	[Token(Token = "0x4000405")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isToggled;

	[Token(Token = "0x4000406")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	public bool isPressed;

	[Token(Token = "0x60002BC")]
	[Address(RVA = "0xC02940", Offset = "0xC02940", VA = "0xC02940")]
	private void Start()
	{
	}

	[Token(Token = "0x60002BD")]
	[Address(RVA = "0xC02A40", Offset = "0xC02A40", VA = "0xC02A40")]
	private void Update()
	{
	}

	[Token(Token = "0x60002BE")]
	[Address(RVA = "0xC02C38", Offset = "0xC02C38", VA = "0xC02C38")]
	public PhysicalButton()
	{
	}
}
[Token(Token = "0x20000E7")]
public class PulledSpring : MonoBehaviour
{
	[Token(Token = "0x4000407")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float springForce;

	[Token(Token = "0x4000408")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float preTension;

	[Token(Token = "0x4000409")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 axis;

	[Token(Token = "0x400040A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Rigidbody connectedBody;

	[Token(Token = "0x400040B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rigid;

	[Token(Token = "0x400040C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 startPos;

	[Token(Token = "0x60002BF")]
	[Address(RVA = "0xC02C4C", Offset = "0xC02C4C", VA = "0xC02C4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C0")]
	[Address(RVA = "0xC02CC0", Offset = "0xC02CC0", VA = "0xC02CC0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C1")]
	[Address(RVA = "0xC02D98", Offset = "0xC02D98", VA = "0xC02D98")]
	public PulledSpring()
	{
	}
}
[Token(Token = "0x20000E8")]
public class FireWorkRocket : MonoBehaviour
{
	[Token(Token = "0x400040D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fired;

	[Token(Token = "0x400040E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool lit;

	[Token(Token = "0x400040F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float thurstForce;

	[Token(Token = "0x4000410")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float preTime;

	[Token(Token = "0x4000411")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float fireTime;

	[Token(Token = "0x4000412")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject explosionPrefab;

	[Token(Token = "0x4000413")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip fuseSound;

	[Token(Token = "0x4000414")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform wick;

	[Token(Token = "0x4000415")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem fireStream;

	[Token(Token = "0x4000416")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public ParticleSystem fireEmbers;

	[Token(Token = "0x4000417")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private float preTimeCounter;

	[Token(Token = "0x4000418")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float fireTimeCounter;

	[Token(Token = "0x4000419")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool done;

	[Token(Token = "0x400041A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Rigidbody rigidBody;

	[Token(Token = "0x400041B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource source;

	[Token(Token = "0x60002C2")]
	[Address(RVA = "0xC02E04", Offset = "0xC02E04", VA = "0xC02E04")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002C3")]
	[Address(RVA = "0xC02EC0", Offset = "0xC02EC0", VA = "0xC02EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002C4")]
	[Address(RVA = "0xC02F5C", Offset = "0xC02F5C", VA = "0xC02F5C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002C5")]
	[Address(RVA = "0xC0300C", Offset = "0xC0300C", VA = "0xC0300C")]
	private void WhileLit()
	{
	}

	[Token(Token = "0x60002C6")]
	[Address(RVA = "0xC0317C", Offset = "0xC0317C", VA = "0xC0317C")]
	private void WhileFired()
	{
	}

	[Token(Token = "0x60002C7")]
	[Address(RVA = "0xC02E50", Offset = "0xC02E50", VA = "0xC02E50")]
	private void OnLit()
	{
	}

	[Token(Token = "0x60002C8")]
	[Address(RVA = "0xC030F8", Offset = "0xC030F8", VA = "0xC030F8")]
	private void OnFired()
	{
	}

	[Token(Token = "0x60002C9")]
	[Address(RVA = "0xC0330C", Offset = "0xC0330C", VA = "0xC0330C")]
	private void OnExplode()
	{
	}

	[Token(Token = "0x60002CA")]
	[Address(RVA = "0xC03438", Offset = "0xC03438", VA = "0xC03438")]
	public FireWorkRocket()
	{
	}
}
[Token(Token = "0x20000E9")]
public class YuePhysicalJoystick : MonoBehaviour
{
	[Token(Token = "0x400041C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform handle;

	[Token(Token = "0x400041D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sensorValueX;

	[Token(Token = "0x400041E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float sensorValueY;

	[Token(Token = "0x400041F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private float x;

	[Token(Token = "0x4000420")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float z;

	[Token(Token = "0x60002CB")]
	[Address(RVA = "0xC03454", Offset = "0xC03454", VA = "0xC03454")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CC")]
	[Address(RVA = "0xC03510", Offset = "0xC03510", VA = "0xC03510")]
	public YuePhysicalJoystick()
	{
	}
}
[Token(Token = "0x20000EA")]
public class Lighter : MonoBehaviour
{
	[Token(Token = "0x4000421")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject flame;

	[Token(Token = "0x4000422")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject sparks;

	[Token(Token = "0x4000423")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform trigger;

	[Token(Token = "0x4000424")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x4000425")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool blocked;

	[Token(Token = "0x4000426")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector3 localStartPos;

	[Token(Token = "0x4000427")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private YueInteractable interactable;

	[Token(Token = "0x60002CD")]
	[Address(RVA = "0xC03518", Offset = "0xC03518", VA = "0xC03518")]
	private void Start()
	{
	}

	[Token(Token = "0x60002CE")]
	[Address(RVA = "0xC035B4", Offset = "0xC035B4", VA = "0xC035B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60002CF")]
	[Address(RVA = "0xC036CC", Offset = "0xC036CC", VA = "0xC036CC")]
	private void OnLighterTriggerd()
	{
	}

	[Token(Token = "0x60002D0")]
	[Address(RVA = "0xC03774", Offset = "0xC03774", VA = "0xC03774")]
	private void WhileLighterOn()
	{
	}

	[Token(Token = "0x60002D1")]
	[Address(RVA = "0xC0367C", Offset = "0xC0367C", VA = "0xC0367C")]
	private void OnLighterLeft()
	{
	}

	[Token(Token = "0x60002D2")]
	[Address(RVA = "0xC037D8", Offset = "0xC037D8", VA = "0xC037D8")]
	public Lighter()
	{
	}
}
[Token(Token = "0x20000EB")]
public class Plunger : MonoBehaviour
{
	[Token(Token = "0x4000428")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000429")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float breakForce;

	[Token(Token = "0x400042A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x400042B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip onFlop;

	[Token(Token = "0x400042C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip offFlop;

	[Token(Token = "0x400042D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject nobber;

	[Token(Token = "0x400042E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FixedJoint fJoint;

	[Token(Token = "0x400042F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool attached;

	[Token(Token = "0x4000430")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	private bool jointOn;

	[Token(Token = "0x60002D3")]
	[Address(RVA = "0xC037E0", Offset = "0xC037E0", VA = "0xC037E0")]
	private void Update()
	{
	}

	[Token(Token = "0x60002D4")]
	[Address(RVA = "0xC03948", Offset = "0xC03948", VA = "0xC03948")]
	public void OnTriggerPlunged(Collider other)
	{
	}

	[Token(Token = "0x60002D5")]
	[Address(RVA = "0xC03924", Offset = "0xC03924", VA = "0xC03924")]
	private void OnJointConnect()
	{
	}

	[Token(Token = "0x60002D6")]
	[Address(RVA = "0xC03900", Offset = "0xC03900", VA = "0xC03900")]
	private void OnJointDisconnect()
	{
	}

	[Token(Token = "0x60002D7")]
	[Address(RVA = "0xC03D64", Offset = "0xC03D64", VA = "0xC03D64")]
	public Plunger()
	{
	}
}
[Token(Token = "0x20000EC")]
public class PlungerTrigger : MonoBehaviour
{
	[Token(Token = "0x4000431")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Plunger plunger;

	[Token(Token = "0x60002D8")]
	[Address(RVA = "0xC03D6C", Offset = "0xC03D6C", VA = "0xC03D6C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60002D9")]
	[Address(RVA = "0xC03D84", Offset = "0xC03D84", VA = "0xC03D84")]
	public PlungerTrigger()
	{
	}
}
[Token(Token = "0x20000ED")]
public class SelfieStick : MonoBehaviour
{
	[Token(Token = "0x4000432")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject cam;

	[Token(Token = "0x4000433")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform camOffset;

	[Token(Token = "0x4000434")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private YueInteractable interactable;

	[Token(Token = "0x4000435")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform direction;

	[Token(Token = "0x60002DA")]
	[Address(RVA = "0xC03D8C", Offset = "0xC03D8C", VA = "0xC03D8C")]
	private void Start()
	{
	}

	[Token(Token = "0x60002DB")]
	[Address(RVA = "0xC03E8C", Offset = "0xC03E8C", VA = "0xC03E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60002DC")]
	[Address(RVA = "0xC03F88", Offset = "0xC03F88", VA = "0xC03F88")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60002DD")]
	[Address(RVA = "0xC03EDC", Offset = "0xC03EDC", VA = "0xC03EDC")]
	private void OnStickTriggerd()
	{
	}

	[Token(Token = "0x60002DE")]
	[Address(RVA = "0xC03FC8", Offset = "0xC03FC8", VA = "0xC03FC8")]
	public SelfieStick()
	{
	}
}
[Token(Token = "0x20000EE")]
public class ShppingCartWheel : MonoBehaviour
{
	[Token(Token = "0x4000436")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool playSound;

	[Token(Token = "0x4000437")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Rigidbody rb;

	[Token(Token = "0x4000438")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LayerMask layerMask;

	[Token(Token = "0x4000439")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float slerpFactor;

	[Token(Token = "0x400043A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float velocityFactor;

	[Token(Token = "0x400043B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource source;

	[Token(Token = "0x60002DF")]
	[Address(RVA = "0xC03FD0", Offset = "0xC03FD0", VA = "0xC03FD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E0")]
	[Address(RVA = "0xC04020", Offset = "0xC04020", VA = "0xC04020")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E1")]
	[Address(RVA = "0xC041E8", Offset = "0xC041E8", VA = "0xC041E8")]
	private void SetRotation()
	{
	}

	[Token(Token = "0x60002E2")]
	[Address(RVA = "0xC04584", Offset = "0xC04584", VA = "0xC04584")]
	public ShppingCartWheel()
	{
	}
}
[Token(Token = "0x20000EF")]
public class PenTipSound : MonoBehaviour
{
	[Token(Token = "0x400043C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float velocityFactor;

	[Token(Token = "0x400043D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource source;

	[Token(Token = "0x400043E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isScratching;

	[Token(Token = "0x400043F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private int cols;

	[Token(Token = "0x60002E3")]
	[Address(RVA = "0xC04598", Offset = "0xC04598", VA = "0xC04598")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60002E4")]
	[Address(RVA = "0xC045B4", Offset = "0xC045B4", VA = "0xC045B4")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60002E5")]
	[Address(RVA = "0xC045D0", Offset = "0xC045D0", VA = "0xC045D0")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E6")]
	[Address(RVA = "0xC04620", Offset = "0xC04620", VA = "0xC04620")]
	private void Update()
	{
	}

	[Token(Token = "0x60002E7")]
	[Address(RVA = "0xC04770", Offset = "0xC04770", VA = "0xC04770")]
	public PenTipSound()
	{
	}
}
[Token(Token = "0x20000F0")]
public class TextMarker : MonoBehaviour
{
	[Token(Token = "0x4000440")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform cap;

	[Token(Token = "0x4000441")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Collider> noInterCollision;

	[Token(Token = "0x4000442")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FixedJoint fJoint;

	[Token(Token = "0x60002E8")]
	[Address(RVA = "0xC04780", Offset = "0xC04780", VA = "0xC04780")]
	private void Start()
	{
	}

	[Token(Token = "0x60002E9")]
	[Address(RVA = "0xC049B8", Offset = "0xC049B8", VA = "0xC049B8")]
	private void Update()
	{
	}

	[Token(Token = "0x60002EA")]
	[Address(RVA = "0xC04A3C", Offset = "0xC04A3C", VA = "0xC04A3C")]
	public TextMarker()
	{
	}
}
[Token(Token = "0x20000F1")]
public class MobileDisableAutoSwitchControls : MonoBehaviour
{
	[Token(Token = "0x4000443")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Target")]
	public PlayerInput playerInput;

	[Token(Token = "0x60002EB")]
	[Address(RVA = "0xC04A44", Offset = "0xC04A44", VA = "0xC04A44")]
	private void Start()
	{
	}

	[Token(Token = "0x60002EC")]
	[Address(RVA = "0xC04A48", Offset = "0xC04A48", VA = "0xC04A48")]
	private void DisableAutoSwitchControls()
	{
	}

	[Token(Token = "0x60002ED")]
	[Address(RVA = "0xC04A68", Offset = "0xC04A68", VA = "0xC04A68")]
	public MobileDisableAutoSwitchControls()
	{
	}
}
[Token(Token = "0x20000F2")]
public class UIVirtualButton : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler, IPointerClickHandler
{
	[Token(Token = "0x4000444")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Output")]
	public UnityEvent<bool> buttonStateOutputEvent;

	[Token(Token = "0x4000445")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent buttonClickOutputEvent;

	[Token(Token = "0x60002EE")]
	[Address(RVA = "0xC04A70", Offset = "0xC04A70", VA = "0xC04A70", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002EF")]
	[Address(RVA = "0xC04AD0", Offset = "0xC04AD0", VA = "0xC04AD0", Slot = "5")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002F0")]
	[Address(RVA = "0xC04AD8", Offset = "0xC04AD8", VA = "0xC04AD8", Slot = "6")]
	public void OnPointerClick(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002F1")]
	[Address(RVA = "0xC04A78", Offset = "0xC04A78", VA = "0xC04A78")]
	private void OutputButtonStateValue(bool buttonState)
	{
	}

	[Token(Token = "0x60002F2")]
	[Address(RVA = "0xC04AF4", Offset = "0xC04AF4", VA = "0xC04AF4")]
	private void OutputButtonClickEvent()
	{
	}

	[Token(Token = "0x60002F3")]
	[Address(RVA = "0xC04B10", Offset = "0xC04B10", VA = "0xC04B10")]
	public UIVirtualButton()
	{
	}
}
[Token(Token = "0x20000F3")]
public class UIVirtualJoystick : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler, IPointerUpHandler
{
	[Token(Token = "0x4000446")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Rect References")]
	public RectTransform containerRect;

	[Token(Token = "0x4000447")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform handleRect;

	[Token(Token = "0x4000448")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Settings")]
	public float joystickRange;

	[Token(Token = "0x4000449")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float magnitudeMultiplier;

	[Token(Token = "0x400044A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool invertXOutputValue;

	[Token(Token = "0x400044B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool invertYOutputValue;

	[Token(Token = "0x400044C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Output")]
	public UnityEvent<Vector2> joystickOutputEvent;

	[Token(Token = "0x60002F4")]
	[Address(RVA = "0xC04B18", Offset = "0xC04B18", VA = "0xC04B18")]
	private void Start()
	{
	}

	[Token(Token = "0x60002F5")]
	[Address(RVA = "0xC04B1C", Offset = "0xC04B1C", VA = "0xC04B1C")]
	private void SetupHandle()
	{
	}

	[Token(Token = "0x60002F6")]
	[Address(RVA = "0xC04BEC", Offset = "0xC04BEC", VA = "0xC04BEC", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002F7")]
	[Address(RVA = "0xC04BF0", Offset = "0xC04BF0", VA = "0xC04BF0", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002F8")]
	[Address(RVA = "0xC04EC0", Offset = "0xC04EC0", VA = "0xC04EC0", Slot = "6")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60002F9")]
	[Address(RVA = "0xC04E58", Offset = "0xC04E58", VA = "0xC04E58")]
	private void OutputPointerEventValue(Vector2 pointerPosition)
	{
	}

	[Token(Token = "0x60002FA")]
	[Address(RVA = "0xC04BD0", Offset = "0xC04BD0", VA = "0xC04BD0")]
	private void UpdateHandleRectPosition(Vector2 newPosition)
	{
	}

	[Token(Token = "0x60002FB")]
	[Address(RVA = "0xC04D48", Offset = "0xC04D48", VA = "0xC04D48")]
	private Vector2 ApplySizeDelta(Vector2 position)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002FC")]
	[Address(RVA = "0xC04DAC", Offset = "0xC04DAC", VA = "0xC04DAC")]
	private Vector2 ClampValuesToMagnitude(Vector2 position)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002FD")]
	[Address(RVA = "0xC04E34", Offset = "0xC04E34", VA = "0xC04E34")]
	private Vector2 ApplyInversionFilter(Vector2 position)
	{
		return default(Vector2);
	}

	[Token(Token = "0x60002FE")]
	[Address(RVA = "0xC04FB0", Offset = "0xC04FB0", VA = "0xC04FB0")]
	private float InvertValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x60002FF")]
	[Address(RVA = "0xC04FB8", Offset = "0xC04FB8", VA = "0xC04FB8")]
	public UIVirtualJoystick()
	{
	}
}
[Token(Token = "0x20000F4")]
public class UIVirtualTouchZone : MonoBehaviour, IPointerDownHandler, IEventSystemHandler, IDragHandler, IPointerUpHandler
{
	[Token(Token = "0x400044D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Rect References")]
	public RectTransform containerRect;

	[Token(Token = "0x400044E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform handleRect;

	[Token(Token = "0x400044F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Settings")]
	public bool clampToMagnitude;

	[Token(Token = "0x4000450")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float magnitudeMultiplier;

	[Token(Token = "0x4000451")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool invertXOutputValue;

	[Token(Token = "0x4000452")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool invertYOutputValue;

	[Token(Token = "0x4000453")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector2 pointerDownPosition;

	[Token(Token = "0x4000454")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private Vector2 currentPointerPosition;

	[Token(Token = "0x4000455")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Output")]
	public UnityEvent<Vector2> touchZoneOutputEvent;

	[Token(Token = "0x6000300")]
	[Address(RVA = "0xC04FCC", Offset = "0xC04FCC", VA = "0xC04FCC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000301")]
	[Address(RVA = "0xC04FD0", Offset = "0xC04FD0", VA = "0xC04FD0")]
	private void SetupHandle()
	{
	}

	[Token(Token = "0x6000302")]
	[Address(RVA = "0xC0507C", Offset = "0xC0507C", VA = "0xC0507C", Slot = "4")]
	public void OnPointerDown(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000303")]
	[Address(RVA = "0xC051B8", Offset = "0xC051B8", VA = "0xC051B8", Slot = "5")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000304")]
	[Address(RVA = "0xC053C0", Offset = "0xC053C0", VA = "0xC053C0", Slot = "6")]
	public void OnPointerUp(PointerEventData eventData)
	{
	}

	[Token(Token = "0x6000305")]
	[Address(RVA = "0xC05358", Offset = "0xC05358", VA = "0xC05358")]
	private void OutputPointerEventValue(Vector2 pointerPosition)
	{
	}

	[Token(Token = "0x6000306")]
	[Address(RVA = "0xC0519C", Offset = "0xC0519C", VA = "0xC0519C")]
	private void UpdateHandleRectPosition(Vector2 newPosition)
	{
	}

	[Token(Token = "0x6000307")]
	[Address(RVA = "0xC05060", Offset = "0xC05060", VA = "0xC05060")]
	private void SetObjectActiveState(GameObject targetObject, bool newState)
	{
	}

	[Token(Token = "0x6000308")]
	[Address(RVA = "0xC052A0", Offset = "0xC052A0", VA = "0xC052A0")]
	private Vector2 GetDeltaBetweenPositions(Vector2 firstPosition, Vector2 secondPosition)
	{
		return default(Vector2);
	}

	[Token(Token = "0x6000309")]
	[Address(RVA = "0xC052AC", Offset = "0xC052AC", VA = "0xC052AC")]
	private Vector2 ClampValuesToMagnitude(Vector2 position)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600030A")]
	[Address(RVA = "0xC05334", Offset = "0xC05334", VA = "0xC05334")]
	private Vector2 ApplyInversionFilter(Vector2 position)
	{
		return default(Vector2);
	}

	[Token(Token = "0x600030B")]
	[Address(RVA = "0xC054E8", Offset = "0xC054E8", VA = "0xC054E8")]
	private float InvertValue(float value)
	{
		return default(float);
	}

	[Token(Token = "0x600030C")]
	[Address(RVA = "0xC054F0", Offset = "0xC054F0", VA = "0xC054F0")]
	public UIVirtualTouchZone()
	{
	}
}
[Token(Token = "0x20000F5")]
public class BasicRigidBodyPush : MonoBehaviour
{
	[Token(Token = "0x4000456")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask pushLayers;

	[Token(Token = "0x4000457")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool canPush;

	[Token(Token = "0x4000458")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Range(0.5f, 5f)]
	public float strength;

	[Token(Token = "0x600030D")]
	[Address(RVA = "0xC05500", Offset = "0xC05500", VA = "0xC05500")]
	private void OnControllerColliderHit(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x600030E")]
	[Address(RVA = "0xC05510", Offset = "0xC05510", VA = "0xC05510")]
	private void PushRigidBodies(ControllerColliderHit hit)
	{
	}

	[Token(Token = "0x600030F")]
	[Address(RVA = "0xC05668", Offset = "0xC05668", VA = "0xC05668")]
	public BasicRigidBodyPush()
	{
	}
}
[Token(Token = "0x20000F6")]
[ExecuteInEditMode]
public class AddMeshCollider : MonoBehaviour
{
	[Token(Token = "0x4000459")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool addColliders;

	[Token(Token = "0x400045A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MeshRenderer> meshRenders;

	[Token(Token = "0x6000310")]
	[Address(RVA = "0xC0567C", Offset = "0xC0567C", VA = "0xC0567C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000311")]
	[Address(RVA = "0xC05AD8", Offset = "0xC05AD8", VA = "0xC05AD8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000312")]
	[Address(RVA = "0xC05AFC", Offset = "0xC05AFC", VA = "0xC05AFC")]
	private void AddMeshCollidersToAll(List<MeshRenderer> meshes)
	{
	}

	[Token(Token = "0x6000313")]
	[Address(RVA = "0xC056A0", Offset = "0xC056A0", VA = "0xC056A0")]
	private void GetChildRecursive(GameObject obj, List<MeshRenderer> list)
	{
	}

	[Token(Token = "0x6000314")]
	[Address(RVA = "0xC05CE4", Offset = "0xC05CE4", VA = "0xC05CE4")]
	public AddMeshCollider()
	{
	}
}
[Token(Token = "0x20000F7")]
public class BloodOnStart : MonoBehaviour
{
	[Token(Token = "0x6000315")]
	[Address(RVA = "0xC05CEC", Offset = "0xC05CEC", VA = "0xC05CEC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000316")]
	[Address(RVA = "0xC05DCC", Offset = "0xC05DCC", VA = "0xC05DCC")]
	public BloodOnStart()
	{
	}
}
[Token(Token = "0x20000F8")]
public class BoxingHand : MonoBehaviour
{
	[Token(Token = "0x400045B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YueActiveRagdollNPC npc;

	[Token(Token = "0x6000317")]
	[Address(RVA = "0xC05DD4", Offset = "0xC05DD4", VA = "0xC05DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000318")]
	[Address(RVA = "0xC05EBC", Offset = "0xC05EBC", VA = "0xC05EBC")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000319")]
	[Address(RVA = "0xC0602C", Offset = "0xC0602C", VA = "0xC0602C")]
	public BoxingHand()
	{
	}
}
[Token(Token = "0x20000F9")]
public class CombatAnimator : MonoBehaviour
{
	[Token(Token = "0x400045C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	public bool isMoving;

	[Token(Token = "0x400045D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	[SerializeField]
	public bool boxing;

	[Token(Token = "0x400045E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool isShooting;

	[Token(Token = "0x400045F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Vector3 gunRotationOffset;

	[Token(Token = "0x4000460")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxBoxingPauseTime;

	[Token(Token = "0x4000461")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float boxingProgressLeft;

	[Token(Token = "0x4000462")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float boxingProgressRight;

	[Token(Token = "0x4000463")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool leftBoxing;

	[Token(Token = "0x4000464")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool rightBoxing;

	[Token(Token = "0x4000465")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Animator animator;

	[Token(Token = "0x4000466")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rightHandIKTarget;

	[Token(Token = "0x4000467")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform leftHandIKTarget;

	[Token(Token = "0x4000468")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform rightHandIKHint;

	[Token(Token = "0x4000469")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform leftHandIKHint;

	[Token(Token = "0x400046A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform leftHand;

	[Token(Token = "0x400046B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform rightHand;

	[Token(Token = "0x400046C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rightHandIKTargetAtRestBoxing;

	[Token(Token = "0x400046D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform leftHandIKTargetAtRestBoxing;

	[Token(Token = "0x400046E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform shootingTarget;

	[Token(Token = "0x400046F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Vector3 rightHandIKPos;

	[Token(Token = "0x4000470")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	private Vector3 leftHandIKPos;

	[Token(Token = "0x4000471")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float rightHandIKWeight;

	[Token(Token = "0x4000472")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	private float leftHandIKWeight;

	[Token(Token = "0x4000473")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private float boxingPauseTime;

	[Token(Token = "0x600031A")]
	[Address(RVA = "0xC06034", Offset = "0xC06034", VA = "0xC06034")]
	private void Start()
	{
	}

	[Token(Token = "0x600031B")]
	[Address(RVA = "0xC060D8", Offset = "0xC060D8", VA = "0xC060D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600031C")]
	[Address(RVA = "0xC0618C", Offset = "0xC0618C", VA = "0xC0618C")]
	private void CalculateWeights()
	{
	}

	[Token(Token = "0x600031D")]
	[Address(RVA = "0xC06250", Offset = "0xC06250", VA = "0xC06250")]
	private void CalculateIKTargets()
	{
	}

	[Token(Token = "0x600031E")]
	[Address(RVA = "0xC06540", Offset = "0xC06540", VA = "0xC06540")]
	private void CalculateIKPositions()
	{
	}

	[Token(Token = "0x600031F")]
	[Address(RVA = "0xC06758", Offset = "0xC06758", VA = "0xC06758")]
	public void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x6000320")]
	[Address(RVA = "0xC068FC", Offset = "0xC068FC", VA = "0xC068FC")]
	public CombatAnimator()
	{
	}
}
[Token(Token = "0x20000FA")]
public class EyeAnimation : MonoBehaviour
{
	[Token(Token = "0x4000474")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Material eyes;

	[Token(Token = "0x4000475")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 speed;

	[Token(Token = "0x6000321")]
	[Address(RVA = "0xC0690C", Offset = "0xC0690C", VA = "0xC0690C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000322")]
	[Address(RVA = "0xC06978", Offset = "0xC06978", VA = "0xC06978")]
	public EyeAnimation()
	{
	}
}
[Token(Token = "0x20000FB")]
public class NPCFacialExpression : MonoBehaviour
{
	[Token(Token = "0x4000476")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Parameters")]
	[Header("Blinking")]
	public float minBlinkInterval;

	[Token(Token = "0x4000477")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxBlinkInterval;

	[Token(Token = "0x4000478")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float blinkRange;

	[Token(Token = "0x4000479")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float blinkSpeed;

	[Token(Token = "0x400047A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector3 blinkAxis;

	[Token(Token = "0x400047B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve blinkCurve;

	[Token(Token = "0x400047C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AnimationCurve talkCurve;

	[Token(Token = "0x400047D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Eye Look At")]
	public float maxEyeAngle;

	[Token(Token = "0x400047E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float targetZOffset;

	[Token(Token = "0x400047F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float targetXOffset;

	[Token(Token = "0x4000480")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Vector3 eyeRotationOffset;

	[Token(Token = "0x4000481")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Dependencies")]
	public Transform headIK;

	[Token(Token = "0x4000482")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform leftEyeLidUp;

	[Token(Token = "0x4000483")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Transform rightEyeLidUp;

	[Token(Token = "0x4000484")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform leftEyeLidLow;

	[Token(Token = "0x4000485")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Transform rightEyeLidLow;

	[Token(Token = "0x4000486")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Transform leftEye;

	[Token(Token = "0x4000487")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Transform rightEye;

	[Token(Token = "0x4000488")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Transform jaw;

	[Token(Token = "0x4000489")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Animator animator;

	[Token(Token = "0x400048A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private YueActiveRagdollNPC npc;

	[Token(Token = "0x400048B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Quaternion leftEyeStartRotation;

	[Token(Token = "0x400048C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Quaternion rightEyeStartRotation;

	[Token(Token = "0x400048D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 leftEyeLidUpStart;

	[Token(Token = "0x400048E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private Vector3 rightEyeLidUpStart;

	[Token(Token = "0x400048F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private Vector3 leftEyeLidLowStart;

	[Token(Token = "0x4000490")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
	private Vector3 rightEyeLidLowStart;

	[Token(Token = "0x4000491")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
	private bool isBlinking;

	[Token(Token = "0x4000492")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private float blinkIntervall;

	[Token(Token = "0x4000493")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private float blinkCounter;

	[Token(Token = "0x4000494")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10C")]
	private float blinkTime;

	[Token(Token = "0x4000495")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private Rigidbody jawRigidbody;

	[Token(Token = "0x4000496")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private NPCSounds npcSounds;

	[Token(Token = "0x4000497")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private float talkingCounter;

	[Token(Token = "0x6000323")]
	[Address(RVA = "0xC06980", Offset = "0xC06980", VA = "0xC06980")]
	private void Start()
	{
	}

	[Token(Token = "0x6000324")]
	[Address(RVA = "0xC06B48", Offset = "0xC06B48", VA = "0xC06B48")]
	private void Update()
	{
	}

	[Token(Token = "0x6000325")]
	[Address(RVA = "0xC06DD8", Offset = "0xC06DD8", VA = "0xC06DD8")]
	private void UpdateBlinking()
	{
	}

	[Token(Token = "0x6000326")]
	[Address(RVA = "0xC06F38", Offset = "0xC06F38", VA = "0xC06F38")]
	private void UpdateEyeLids()
	{
	}

	[Token(Token = "0x6000327")]
	[Address(RVA = "0xC06D10", Offset = "0xC06D10", VA = "0xC06D10")]
	private void UpdateHead()
	{
	}

	[Token(Token = "0x6000328")]
	[Address(RVA = "0xC06B8C", Offset = "0xC06B8C", VA = "0xC06B8C")]
	private void UpdateEyes()
	{
	}

	[Token(Token = "0x6000329")]
	[Address(RVA = "0xC06E20", Offset = "0xC06E20", VA = "0xC06E20")]
	private void UpdateJaw()
	{
	}

	[Token(Token = "0x600032A")]
	[Address(RVA = "0xC070A8", Offset = "0xC070A8", VA = "0xC070A8")]
	private void EyeLookAt(Transform eye, Vector3 target)
	{
	}

	[Token(Token = "0x600032B")]
	[Address(RVA = "0xC07218", Offset = "0xC07218", VA = "0xC07218")]
	private Vector3 ClampVector(Vector3 direction, Vector3 center, float maxAngle)
	{
		return default(Vector3);
	}

	[Token(Token = "0x600032C")]
	[Address(RVA = "0xC074D4", Offset = "0xC074D4", VA = "0xC074D4")]
	public NPCFacialExpression()
	{
	}
}
[Token(Token = "0x20000FC")]
public class NPCSounds : MonoBehaviour
{
	[Token(Token = "0x4000498")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(0f, 1f)]
	public float maxVolume;

	[Token(Token = "0x4000499")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minGruntTime;

	[Token(Token = "0x400049A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<AudioClip> idleSounds;

	[Token(Token = "0x400049B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<AudioClip> attackSounds;

	[Token(Token = "0x400049C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AudioClip> gotHitSounds;

	[Token(Token = "0x400049D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<AudioClip> gotShotSounds;

	[Token(Token = "0x400049E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<AudioClip> gotKnifedSounds;

	[Token(Token = "0x400049F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public List<AudioClip> gotProvokedSounds;

	[Token(Token = "0x40004A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private YueActiveRagdollNPC npc;

	[Token(Token = "0x40004A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public AudioSource source;

	[Token(Token = "0x40004A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private float gruntCounter;

	[Token(Token = "0x600032D")]
	[Address(RVA = "0xC074FC", Offset = "0xC074FC", VA = "0xC074FC")]
	private void Start()
	{
	}

	[Token(Token = "0x600032E")]
	[Address(RVA = "0xC076B4", Offset = "0xC076B4", VA = "0xC076B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600032F")]
	[Address(RVA = "0xC07834", Offset = "0xC07834", VA = "0xC07834")]
	private void OnKnife()
	{
	}

	[Token(Token = "0x6000330")]
	[Address(RVA = "0xC07840", Offset = "0xC07840", VA = "0xC07840")]
	private void OnShot()
	{
	}

	[Token(Token = "0x6000331")]
	[Address(RVA = "0xC0784C", Offset = "0xC0784C", VA = "0xC0784C")]
	private void OnHit()
	{
	}

	[Token(Token = "0x6000332")]
	[Address(RVA = "0xC0787C", Offset = "0xC0787C", VA = "0xC0787C")]
	private void OnProvoked()
	{
	}

	[Token(Token = "0x6000333")]
	[Address(RVA = "0xC07770", Offset = "0xC07770", VA = "0xC07770")]
	private void PlayRandomSoundFromList(List<AudioClip> clips, bool isOverride)
	{
	}

	[Token(Token = "0x6000334")]
	[Address(RVA = "0xC07888", Offset = "0xC07888", VA = "0xC07888")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000335")]
	[Address(RVA = "0xC078B8", Offset = "0xC078B8", VA = "0xC078B8")]
	public NPCSounds()
	{
	}
}
[Token(Token = "0x20000FD")]
public class ZombieYaw : MonoBehaviour
{
	[Token(Token = "0x40004A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float breakingForce;

	[Token(Token = "0x40004A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float healthSpeed;

	[Token(Token = "0x40004A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public YueActiveRagdollNPC npc;

	[Token(Token = "0x40004A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private FixedJoint fJoint;

	[Token(Token = "0x40004A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlayerStatus playerStatus;

	[Token(Token = "0x6000336")]
	[Address(RVA = "0xC078C8", Offset = "0xC078C8", VA = "0xC078C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000337")]
	[Address(RVA = "0xC0793C", Offset = "0xC0793C", VA = "0xC0793C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000338")]
	[Address(RVA = "0xC07BAC", Offset = "0xC07BAC", VA = "0xC07BAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000339")]
	[Address(RVA = "0xC07C64", Offset = "0xC07C64", VA = "0xC07C64")]
	public ZombieYaw()
	{
	}
}
[Token(Token = "0x20000FE")]
public class SimpleActuator : MonoBehaviour
{
	[Token(Token = "0x40004A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ConfigurableJoint joint;

	[Token(Token = "0x40004A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource source;

	[Token(Token = "0x40004AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private YueInteractable interactable;

	[Token(Token = "0x40004AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x40004AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float volumeFactor;

	[Token(Token = "0x40004AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float pitchFactor;

	[Token(Token = "0x40004AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float lastActuatorValue;

	[Token(Token = "0x40004AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float grabValue;

	[Token(Token = "0x40004B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float nodeValue;

	[Token(Token = "0x40004B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float input;

	[Token(Token = "0x40004B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float smoothDelta;

	[Token(Token = "0x600033A")]
	[Address(RVA = "0xC07C78", Offset = "0xC07C78", VA = "0xC07C78")]
	private void Start()
	{
	}

	[Token(Token = "0x600033B")]
	[Address(RVA = "0xC07CF4", Offset = "0xC07CF4", VA = "0xC07CF4")]
	private void Update()
	{
	}

	[Token(Token = "0x600033C")]
	[Address(RVA = "0xC07EA4", Offset = "0xC07EA4", VA = "0xC07EA4")]
	public SimpleActuator()
	{
	}
}
[Token(Token = "0x20000FF")]
public class Balloon : MonoBehaviour
{
	[Token(Token = "0x40004B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float liftForce;

	[Token(Token = "0x40004B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private GameObject ballonSound;

	[Token(Token = "0x40004B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private Transform scaler;

	[Token(Token = "0x40004B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform forceAttach;

	[Token(Token = "0x40004B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	public Transform stringAttach;

	[Token(Token = "0x40004B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x40004B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x40004BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ConfigurableJoint joint;

	[Token(Token = "0x40004BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float size;

	[Token(Token = "0x600033D")]
	[Address(RVA = "0xC07EC0", Offset = "0xC07EC0", VA = "0xC07EC0")]
	private void Start()
	{
	}

	[Token(Token = "0x600033E")]
	[Address(RVA = "0xC07F60", Offset = "0xC07F60", VA = "0xC07F60")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600033F")]
	[Address(RVA = "0xC082EC", Offset = "0xC082EC", VA = "0xC082EC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000340")]
	[Address(RVA = "0xC08390", Offset = "0xC08390", VA = "0xC08390")]
	public void OnBallonPopped()
	{
	}

	[Token(Token = "0x6000341")]
	[Address(RVA = "0xC084B0", Offset = "0xC084B0", VA = "0xC084B0")]
	public Balloon()
	{
	}
}
[Token(Token = "0x2000100")]
public class BalloonGun : MonoBehaviour
{
	[Token(Token = "0x40004BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x40004BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject balloonPrefab;

	[Token(Token = "0x40004BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip clip;

	[Token(Token = "0x40004BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private Transform barrel;

	[Token(Token = "0x40004C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource source;

	[Token(Token = "0x40004C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRInput vrInput;

	[Token(Token = "0x40004C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private YueInteractable interactable;

	[Token(Token = "0x40004C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool trigger;

	[Token(Token = "0x40004C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
	private bool blocked;

	[Token(Token = "0x6000342")]
	[Address(RVA = "0xC084C0", Offset = "0xC084C0", VA = "0xC084C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000343")]
	[Address(RVA = "0xC08584", Offset = "0xC08584", VA = "0xC08584")]
	private void Update()
	{
	}

	[Token(Token = "0x6000344")]
	[Address(RVA = "0xC085DC", Offset = "0xC085DC", VA = "0xC085DC")]
	private void CheckInput()
	{
	}

	[Token(Token = "0x6000345")]
	[Address(RVA = "0xC08624", Offset = "0xC08624", VA = "0xC08624")]
	private void OnBalloonShot()
	{
	}

	[Token(Token = "0x6000346")]
	[Address(RVA = "0xC08A9C", Offset = "0xC08A9C", VA = "0xC08A9C")]
	public BalloonGun()
	{
	}
}
[Token(Token = "0x2000101")]
public class CubeGun : GunBase
{
	[Token(Token = "0x40004C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	[Header("CubeGun Config")]
	public float spawnSpeed;

	[Token(Token = "0x40004C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
	public float minDistance;

	[Token(Token = "0x40004C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float maxDistance;

	[Token(Token = "0x40004C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	[Header("CubeGun Dependencies")]
	public GameObject cubePrefab;

	[Token(Token = "0x40004C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public Material holoMaterial;

	[Token(Token = "0x40004CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public Material finalMaterial;

	[Token(Token = "0x40004CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40004CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private GameObject spawnedPreview;

	[Token(Token = "0x40004CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private GameObject spawnedObject;

	[Token(Token = "0x40004CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private RaycastHit hit;

	[Token(Token = "0x40004CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 temp;

	[Token(Token = "0x6000347")]
	[Address(RVA = "0xC08AA4", Offset = "0xC08AA4", VA = "0xC08AA4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000348")]
	[Address(RVA = "0xC08AD0", Offset = "0xC08AD0", VA = "0xC08AD0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000349")]
	[Address(RVA = "0xC08FAC", Offset = "0xC08FAC", VA = "0xC08FAC")]
	private Vector3 CalculateSpawnPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x600034A")]
	[Address(RVA = "0xC0919C", Offset = "0xC0919C", VA = "0xC0919C")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600034B")]
	[Address(RVA = "0xC08DE8", Offset = "0xC08DE8", VA = "0xC08DE8")]
	private void SetupPreview()
	{
	}

	[Token(Token = "0x600034C")]
	[Address(RVA = "0xC091A0", Offset = "0xC091A0", VA = "0xC091A0")]
	private void SetupFinalObject()
	{
	}

	[Token(Token = "0x600034D")]
	[Address(RVA = "0xC08F40", Offset = "0xC08F40", VA = "0xC08F40")]
	private void WhileHoverd()
	{
	}

	[Token(Token = "0x600034E")]
	[Address(RVA = "0xC08D44", Offset = "0xC08D44", VA = "0xC08D44")]
	private void DestroyPreview()
	{
	}

	[Token(Token = "0x600034F")]
	[Address(RVA = "0xC09364", Offset = "0xC09364", VA = "0xC09364")]
	public CubeGun()
	{
	}
}
[Token(Token = "0x2000102")]
public class CubeGunCube : MonoBehaviour
{
	[Token(Token = "0x6000350")]
	[Address(RVA = "0xC09380", Offset = "0xC09380", VA = "0xC09380")]
	public CubeGunCube()
	{
	}
}
[Token(Token = "0x2000103")]
public class SpawnDissolveEffect : MonoBehaviour
{
	[Token(Token = "0x40004D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dissolveSpeed;

	[Token(Token = "0x40004D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float dissolve;

	[Token(Token = "0x40004D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Renderer[] allRenderes;

	[Token(Token = "0x40004D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Material> finalMaterials;

	[Token(Token = "0x40004D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Material finalMat;

	[Token(Token = "0x40004D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Shader shader;

	[Token(Token = "0x40004D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject prefab;

	[Token(Token = "0x6000351")]
	[Address(RVA = "0xC09388", Offset = "0xC09388", VA = "0xC09388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000352")]
	[Address(RVA = "0xC093B8", Offset = "0xC093B8", VA = "0xC093B8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000353")]
	[Address(RVA = "0xC093A0", Offset = "0xC093A0", VA = "0xC093A0")]
	private void SetupMaterials()
	{
	}

	[Token(Token = "0x6000354")]
	[Address(RVA = "0xC09438", Offset = "0xC09438", VA = "0xC09438")]
	private void UpdateUnsolving()
	{
	}

	[Token(Token = "0x6000355")]
	[Address(RVA = "0xC09734", Offset = "0xC09734", VA = "0xC09734")]
	private void ChangeAllShadersInChildren()
	{
	}

	[Token(Token = "0x6000356")]
	[Address(RVA = "0xC095B0", Offset = "0xC095B0", VA = "0xC095B0")]
	private void ChangeBackAllShadersInChildren()
	{
	}

	[Token(Token = "0x6000357")]
	[Address(RVA = "0xC09844", Offset = "0xC09844", VA = "0xC09844")]
	public SpawnDissolveEffect()
	{
	}
}
[Token(Token = "0x2000104")]
public class DeleteGun : GunBase
{
	[Token(Token = "0x40004D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public float dissolveSpeed;

	[Token(Token = "0x40004D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40004D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AudioSource source;

	[Token(Token = "0x40004DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public GameObject muzzleFlash;

	[Token(Token = "0x40004DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public GameObject dissolvePrefab;

	[Token(Token = "0x6000358")]
	[Address(RVA = "0xC09854", Offset = "0xC09854", VA = "0xC09854")]
	private void Start()
	{
	}

	[Token(Token = "0x6000359")]
	[Address(RVA = "0xC098B0", Offset = "0xC098B0", VA = "0xC098B0")]
	private void Update()
	{
	}

	[Token(Token = "0x600035A")]
	[Address(RVA = "0xC0A010", Offset = "0xC0A010", VA = "0xC0A010")]
	private void ResetLine()
	{
	}

	[Token(Token = "0x600035B")]
	[Address(RVA = "0xC09974", Offset = "0xC09974", VA = "0xC09974")]
	private bool CheckHover()
	{
		return default(bool);
	}

	[Token(Token = "0x600035C")]
	[Address(RVA = "0xC09BD4", Offset = "0xC09BD4", VA = "0xC09BD4")]
	private void ShootDelete()
	{
	}

	[Token(Token = "0x600035D")]
	[Address(RVA = "0xC0A030", Offset = "0xC0A030", VA = "0xC0A030")]
	public DeleteGun()
	{
	}
}
[Token(Token = "0x2000105")]
public class ToBeDissolved : MonoBehaviour
{
	[Token(Token = "0x40004DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float dissolveSpeed;

	[Token(Token = "0x40004DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[HideInInspector]
	public float startInTime;

	[Token(Token = "0x40004DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float dissolve;

	[Token(Token = "0x40004DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Renderer[] allRenderes;

	[Token(Token = "0x40004E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Shader shader;

	[Token(Token = "0x40004E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool isSetup;

	[Token(Token = "0x40004E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	private bool dissolving;

	[Token(Token = "0x600035E")]
	[Address(RVA = "0xC0A040", Offset = "0xC0A040", VA = "0xC0A040")]
	private void Update()
	{
	}

	[Token(Token = "0x600035F")]
	[Address(RVA = "0xC0A128", Offset = "0xC0A128", VA = "0xC0A128")]
	private void SetupMaterials()
	{
	}

	[Token(Token = "0x6000360")]
	[Address(RVA = "0xC0A190", Offset = "0xC0A190", VA = "0xC0A190")]
	private void UpdateDissolving()
	{
	}

	[Token(Token = "0x6000361")]
	[Address(RVA = "0xC0A308", Offset = "0xC0A308", VA = "0xC0A308")]
	private void ChangeAllShadersInChildren()
	{
	}

	[Token(Token = "0x6000362")]
	[Address(RVA = "0xC0A3F4", Offset = "0xC0A3F4", VA = "0xC0A3F4")]
	public ToBeDissolved()
	{
	}
}
[Token(Token = "0x2000106")]
public class FreezeGun : MonoBehaviour
{
	[Token(Token = "0x40004E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private YueInteractable interactable;

	[Token(Token = "0x40004E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource source;

	[Token(Token = "0x40004E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public LineRenderer laser;

	[Token(Token = "0x40004E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject effect;

	[Token(Token = "0x6000363")]
	[Address(RVA = "0xC0A404", Offset = "0xC0A404", VA = "0xC0A404")]
	private void Start()
	{
	}

	[Token(Token = "0x6000364")]
	[Address(RVA = "0xC0A4E8", Offset = "0xC0A4E8", VA = "0xC0A4E8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000365")]
	[Address(RVA = "0xC0A698", Offset = "0xC0A698", VA = "0xC0A698")]
	private void Triggerd()
	{
	}

	[Token(Token = "0x6000366")]
	[Address(RVA = "0xC0A98C", Offset = "0xC0A98C", VA = "0xC0A98C")]
	public FreezeGun()
	{
	}
}
[Serializable]
[Token(Token = "0x2000107")]
[ES3Serializable]
public class JointGunHit
{
	[Token(Token = "0x40004E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[ES3Serializable]
	public Rigidbody rb;

	[Token(Token = "0x40004E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[ES3Serializable]
	public Vector3 localPoint;

	[Token(Token = "0x40004E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[ES3Serializable]
	public RaycastHit hit;

	[Token(Token = "0x6000367")]
	[Address(RVA = "0xC0A994", Offset = "0xC0A994", VA = "0xC0A994")]
	public JointGunHit()
	{
	}
}
[Token(Token = "0x2000108")]
public enum JointGunMode
{
	[Token(Token = "0x40004EB")]
	FixAll,
	[Token(Token = "0x40004EC")]
	FixPosition,
	[Token(Token = "0x40004ED")]
	FixRotation,
	[Token(Token = "0x40004EE")]
	MaxDistance,
	[Token(Token = "0x40004EF")]
	Hinge,
	[Token(Token = "0x40004F0")]
	Delete
}
[Token(Token = "0x2000109")]
public class JointGun : MonoBehaviour
{
	[Token(Token = "0x40004F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public JointGunMode mode;

	[Token(Token = "0x40004F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40004F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public JointGunHit firstHit;

	[Token(Token = "0x40004F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public JointGunHit secondHit;

	[Token(Token = "0x40004F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Dependencies")]
	public GameObject linePrefab;

	[Token(Token = "0x40004F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public AudioClip cancelClip;

	[Token(Token = "0x40004F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip firstClip;

	[Token(Token = "0x40004F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip secondClip;

	[Token(Token = "0x40004F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private YueInteractable interactable;

	[Token(Token = "0x40004FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private ConfigurableJoint cJoint;

	[Token(Token = "0x40004FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private AudioSource source;

	[Token(Token = "0x40004FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool modeSwitchBlock;

	[Token(Token = "0x40004FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private int modeIndex;

	[Token(Token = "0x40004FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private YueSpawnablesHandler handler;

	[Token(Token = "0x6000368")]
	[Address(RVA = "0xC0A99C", Offset = "0xC0A99C", VA = "0xC0A99C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000369")]
	[Address(RVA = "0xC0AB1C", Offset = "0xC0AB1C", VA = "0xC0AB1C")]
	private void Update()
	{
	}

	[Token(Token = "0x600036A")]
	[Address(RVA = "0xC0AF84", Offset = "0xC0AF84", VA = "0xC0AF84")]
	private void OnSelected()
	{
	}

	[Token(Token = "0x600036B")]
	[Address(RVA = "0xC0B0D8", Offset = "0xC0B0D8", VA = "0xC0B0D8")]
	private void ResetGun()
	{
	}

	[Token(Token = "0x600036C")]
	[Address(RVA = "0xC0B164", Offset = "0xC0B164", VA = "0xC0B164")]
	private void ConnectObjects()
	{
	}

	[Token(Token = "0x600036D")]
	[Address(RVA = "0xC0BCE4", Offset = "0xC0BCE4", VA = "0xC0BCE4")]
	private void TrySetFirstHit()
	{
	}

	[Token(Token = "0x600036E")]
	[Address(RVA = "0xC0BEB8", Offset = "0xC0BEB8", VA = "0xC0BEB8")]
	private void TrySetSecondHit()
	{
	}

	[Token(Token = "0x600036F")]
	[Address(RVA = "0xC0C07C", Offset = "0xC0C07C", VA = "0xC0C07C")]
	private void Triggerd()
	{
	}

	[Token(Token = "0x6000370")]
	[Address(RVA = "0xC0C100", Offset = "0xC0C100", VA = "0xC0C100")]
	public JointGun()
	{
	}
}
[Token(Token = "0x200010A")]
public class JointGunConnection : MonoBehaviour
{
	[Token(Token = "0x40004FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000500")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[ES3Serializable]
	public JointGunHit firstHit;

	[Token(Token = "0x4000501")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[ES3Serializable]
	public JointGunHit secondHit;

	[Token(Token = "0x4000502")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public ConfigurableJoint cJoint;

	[Token(Token = "0x6000371")]
	[Address(RVA = "0xC0C108", Offset = "0xC0C108", VA = "0xC0C108")]
	private void Start()
	{
	}

	[Token(Token = "0x6000372")]
	[Address(RVA = "0xC0BC74", Offset = "0xC0BC74", VA = "0xC0BC74")]
	public void SetConnection(JointGunHit first, JointGunHit second, ConfigurableJoint joint)
	{
	}

	[Token(Token = "0x6000373")]
	[Address(RVA = "0xC0C158", Offset = "0xC0C158", VA = "0xC0C158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000374")]
	[Address(RVA = "0xC0C510", Offset = "0xC0C510", VA = "0xC0C510")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x6000375")]
	[Address(RVA = "0xC0C56C", Offset = "0xC0C56C", VA = "0xC0C56C")]
	public JointGunConnection()
	{
	}
}
[Token(Token = "0x200010B")]
public class SimpleMotor : MonoBehaviour
{
	[Token(Token = "0x4000503")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float maxValue;

	[Token(Token = "0x4000504")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float pitchFactor;

	[Token(Token = "0x4000505")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float volumeFactor;

	[Token(Token = "0x4000506")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Dependencies")]
	public ConfigurableJoint shaft;

	[Token(Token = "0x4000507")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private YueInteractable interactable;

	[Token(Token = "0x4000508")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource source;

	[Token(Token = "0x4000509")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YueBuilderExposible exposible;

	[Token(Token = "0x400050A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[HideInInspector]
	public float input;

	[Token(Token = "0x400050B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float grabInput;

	[Token(Token = "0x400050C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float nodeInput;

	[Token(Token = "0x400050D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float defaultMax;

	[Token(Token = "0x6000376")]
	[Address(RVA = "0xC0C574", Offset = "0xC0C574", VA = "0xC0C574")]
	private void Start()
	{
	}

	[Token(Token = "0x6000377")]
	[Address(RVA = "0xC0C61C", Offset = "0xC0C61C", VA = "0xC0C61C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000378")]
	[Address(RVA = "0xC0C8A0", Offset = "0xC0C8A0", VA = "0xC0C8A0")]
	public void ResetMaxValue()
	{
	}

	[Token(Token = "0x6000379")]
	[Address(RVA = "0xC0C8AC", Offset = "0xC0C8AC", VA = "0xC0C8AC")]
	public SimpleMotor()
	{
	}
}
[Token(Token = "0x200010C")]
public class Nail : MonoBehaviour
{
	[Token(Token = "0x400050E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> connectedObjects;

	[Token(Token = "0x600037A")]
	[Address(RVA = "0xC0C8C8", Offset = "0xC0C8C8", VA = "0xC0C8C8")]
	public Nail()
	{
	}
}
[Token(Token = "0x200010D")]
public class NailGun : MonoBehaviour
{
	[Token(Token = "0x400050F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layerMask;

	[Token(Token = "0x4000510")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float shootVelocity;

	[Token(Token = "0x4000511")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float nailInertia;

	[Token(Token = "0x4000512")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip clip;

	[Token(Token = "0x4000513")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject nailPrefab;

	[Token(Token = "0x4000514")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer led;

	[Token(Token = "0x4000515")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer led1;

	[Token(Token = "0x4000516")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Material redMat;

	[Token(Token = "0x4000517")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Material greenMat;

	[Token(Token = "0x4000518")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[SerializeField]
	private Transform nailPos;

	[Token(Token = "0x4000519")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[SerializeField]
	private NailTriggerZone triggerZone;

	[Token(Token = "0x400051A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool trigger;

	[Token(Token = "0x400051B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private VRInput vrInput;

	[Token(Token = "0x400051C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private YueInteractable interactable;

	[Token(Token = "0x400051D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private GameObject spawnedNail;

	[Token(Token = "0x400051E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private AudioSource source;

	[Token(Token = "0x400051F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool blocked;

	[Token(Token = "0x4000520")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private YueSpawnablesHandler spawnableHandler;

	[Token(Token = "0x600037B")]
	[Address(RVA = "0xC0C8D0", Offset = "0xC0C8D0", VA = "0xC0C8D0")]
	private void Start()
	{
	}

	[Token(Token = "0x600037C")]
	[Address(RVA = "0xC0C9D0", Offset = "0xC0C9D0", VA = "0xC0C9D0")]
	private void Update()
	{
	}

	[Token(Token = "0x600037D")]
	[Address(RVA = "0xC0CAB8", Offset = "0xC0CAB8", VA = "0xC0CAB8")]
	private void CheckInput()
	{
	}

	[Token(Token = "0x600037E")]
	[Address(RVA = "0xC0CB00", Offset = "0xC0CB00", VA = "0xC0CB00")]
	private void OnNailShot()
	{
	}

	[Token(Token = "0x600037F")]
	[Address(RVA = "0xC0CF80", Offset = "0xC0CF80", VA = "0xC0CF80")]
	private void FixObjects()
	{
	}

	[Token(Token = "0x6000380")]
	[Address(RVA = "0xC0D47C", Offset = "0xC0D47C", VA = "0xC0D47C")]
	private void StaticFix()
	{
	}

	[Token(Token = "0x6000381")]
	[Address(RVA = "0xC0CEBC", Offset = "0xC0CEBC", VA = "0xC0CEBC")]
	private void ShootNail()
	{
	}

	[Token(Token = "0x6000382")]
	[Address(RVA = "0xC0D594", Offset = "0xC0D594", VA = "0xC0D594")]
	private Nail TryFindNailInConnected(Rigidbody body)
	{
		return null;
	}

	[Token(Token = "0x6000383")]
	[Address(RVA = "0xC0D740", Offset = "0xC0D740", VA = "0xC0D740")]
	public NailGun()
	{
	}
}
[Token(Token = "0x200010F")]
public class NailTriggerZone : MonoBehaviour
{
	[Token(Token = "0x4000524")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public NailGun nailGun;

	[Token(Token = "0x4000525")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int collisionCount;

	[Token(Token = "0x4000526")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Rigidbody> rigidBodies;

	[Token(Token = "0x4000527")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<GameObject> gameObjects;

	[Token(Token = "0x6000388")]
	[Address(RVA = "0xC0D878", Offset = "0xC0D878", VA = "0xC0D878")]
	public void Start()
	{
	}

	[Token(Token = "0x6000389")]
	[Address(RVA = "0xC0D87C", Offset = "0xC0D87C", VA = "0xC0D87C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600038A")]
	[Address(RVA = "0xC0DA24", Offset = "0xC0DA24", VA = "0xC0DA24")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600038B")]
	[Address(RVA = "0xC0DB84", Offset = "0xC0DB84", VA = "0xC0DB84")]
	public NailTriggerZone()
	{
	}
}
[Token(Token = "0x2000110")]
public class ScaledObject : MonoBehaviour
{
	[Token(Token = "0x4000528")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Transform[] children;

	[Token(Token = "0x4000529")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3[] _connectedAnchor;

	[Token(Token = "0x400052A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3[] _anchor;

	[Token(Token = "0x600038C")]
	[Address(RVA = "0xC0DB8C", Offset = "0xC0DB8C", VA = "0xC0DB8C")]
	private void Start()
	{
	}

	[Token(Token = "0x600038D")]
	[Address(RVA = "0xC0DD80", Offset = "0xC0DD80", VA = "0xC0DD80")]
	public void UpdateJoints()
	{
	}

	[Token(Token = "0x600038E")]
	[Address(RVA = "0xC0DF00", Offset = "0xC0DF00", VA = "0xC0DF00")]
	public ScaledObject()
	{
	}
}
[Token(Token = "0x2000111")]
public class ScaleGun : MonoBehaviour
{
	[Token(Token = "0x400052B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float minScale;

	[Token(Token = "0x400052C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxScale;

	[Token(Token = "0x400052D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layerMask;

	[Token(Token = "0x400052E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Dependencies")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x400052F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UIMessage message;

	[Token(Token = "0x4000530")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private YueInteractable interactable;

	[Token(Token = "0x4000531")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool direction;

	[Token(Token = "0x4000532")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource source;

	[Token(Token = "0x4000533")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool blocked;

	[Token(Token = "0x600038F")]
	[Address(RVA = "0xC0DF08", Offset = "0xC0DF08", VA = "0xC0DF08")]
	private void Start()
	{
	}

	[Token(Token = "0x6000390")]
	[Address(RVA = "0xC0DF84", Offset = "0xC0DF84", VA = "0xC0DF84")]
	private void Update()
	{
	}

	[Token(Token = "0x6000391")]
	[Address(RVA = "0xC0E598", Offset = "0xC0E598", VA = "0xC0E598")]
	private void UpdateMode()
	{
	}

	[Token(Token = "0x6000392")]
	[Address(RVA = "0xC0E674", Offset = "0xC0E674", VA = "0xC0E674")]
	public ScaleGun()
	{
	}
}
[Token(Token = "0x2000112")]
public class WheelGun : MonoBehaviour
{
	[Token(Token = "0x4000534")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public LayerMask layerMask;

	[Token(Token = "0x4000535")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minDistance;

	[Token(Token = "0x4000536")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDistance;

	[Token(Token = "0x4000537")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Dependencies")]
	public GameObject wheelPrefab;

	[Token(Token = "0x4000538")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject previewPrefab;

	[Token(Token = "0x4000539")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private YueInteractable interactable;

	[Token(Token = "0x400053A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject preview;

	[Token(Token = "0x400053B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody target;

	[Token(Token = "0x400053C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Vector3 position;

	[Token(Token = "0x400053D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private Vector3 normal;

	[Token(Token = "0x400053E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private YueSpawnablesHandler handler;

	[Token(Token = "0x400053F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource source;

	[Token(Token = "0x4000540")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x6000393")]
	[Address(RVA = "0xC0E690", Offset = "0xC0E690", VA = "0xC0E690")]
	private void Start()
	{
	}

	[Token(Token = "0x6000394")]
	[Address(RVA = "0xC0E880", Offset = "0xC0E880", VA = "0xC0E880")]
	private void Update()
	{
	}

	[Token(Token = "0x6000395")]
	[Address(RVA = "0xC0EBD4", Offset = "0xC0EBD4", VA = "0xC0EBD4")]
	private void TrySpawnObject()
	{
	}

	[Token(Token = "0x6000396")]
	[Address(RVA = "0xC0EB48", Offset = "0xC0EB48", VA = "0xC0EB48")]
	private void ResetPreview()
	{
	}

	[Token(Token = "0x6000397")]
	[Address(RVA = "0xC0EE78", Offset = "0xC0EE78", VA = "0xC0EE78")]
	private void OnEnter()
	{
	}

	[Token(Token = "0x6000398")]
	[Address(RVA = "0xC0EE98", Offset = "0xC0EE98", VA = "0xC0EE98")]
	private void OnExit()
	{
	}

	[Token(Token = "0x6000399")]
	[Address(RVA = "0xC0EEB8", Offset = "0xC0EEB8", VA = "0xC0EEB8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600039A")]
	[Address(RVA = "0xC0EEBC", Offset = "0xC0EEBC", VA = "0xC0EEBC")]
	public WheelGun()
	{
	}
}
[Token(Token = "0x2000113")]
public class WheelRotation : MonoBehaviour
{
	[Token(Token = "0x4000541")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public WheelCollider wheel;

	[Token(Token = "0x4000542")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 axis;

	[Token(Token = "0x600039B")]
	[Address(RVA = "0xC0EED0", Offset = "0xC0EED0", VA = "0xC0EED0")]
	private void Update()
	{
	}

	[Token(Token = "0x600039C")]
	[Address(RVA = "0xC0F00C", Offset = "0xC0F00C", VA = "0xC0F00C")]
	public WheelRotation()
	{
	}
}
[Token(Token = "0x2000114")]
public class MotorBike : MonoBehaviour
{
	[Token(Token = "0x4000543")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float maxTorque;

	[Token(Token = "0x4000544")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float turnSpeed;

	[Token(Token = "0x4000545")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxVelocity;

	[Token(Token = "0x4000546")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float volumeFactor;

	[Token(Token = "0x4000547")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pitchFactor;

	[Token(Token = "0x4000548")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Dependencies")]
	public Transform handle;

	[Token(Token = "0x4000549")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody frontWheel;

	[Token(Token = "0x400054A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Rigidbody rearWheel;

	[Token(Token = "0x400054B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public YueInteractable handleInteractable;

	[Token(Token = "0x400054C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private YueSeat seat;

	[Token(Token = "0x400054D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider[] allCollider;

	[Token(Token = "0x400054E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerController controller;

	[Token(Token = "0x400054F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 startRotation;

	[Token(Token = "0x4000550")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource source;

	[Token(Token = "0x4000551")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody rb;

	[Token(Token = "0x600039D")]
	[Address(RVA = "0xC0F014", Offset = "0xC0F014", VA = "0xC0F014")]
	private void Start()
	{
	}

	[Token(Token = "0x600039E")]
	[Address(RVA = "0xC0F1D8", Offset = "0xC0F1D8", VA = "0xC0F1D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600039F")]
	[Address(RVA = "0xC0F394", Offset = "0xC0F394", VA = "0xC0F394")]
	private void OnEnter()
	{
	}

	[Token(Token = "0x60003A0")]
	[Address(RVA = "0xC0F5B0", Offset = "0xC0F5B0", VA = "0xC0F5B0")]
	private void OnExit()
	{
	}

	[Token(Token = "0x60003A1")]
	[Address(RVA = "0xC0F3FC", Offset = "0xC0F3FC", VA = "0xC0F3FC")]
	private void InterCollision(bool c)
	{
	}

	[Token(Token = "0x60003A2")]
	[Address(RVA = "0xC0F5B8", Offset = "0xC0F5B8", VA = "0xC0F5B8")]
	public MotorBike()
	{
	}
}
[Token(Token = "0x2000115")]
public class BikeSound : MonoBehaviour
{
	[Token(Token = "0x4000552")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AudioClip idle;

	[Token(Token = "0x4000553")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float volumeFactor;

	[Token(Token = "0x4000554")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[SerializeField]
	private float volumeOffset;

	[Token(Token = "0x4000555")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float pitchFactor;

	[Token(Token = "0x4000556")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float pitchOffset;

	[Token(Token = "0x4000557")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AudioSource source;

	[Token(Token = "0x4000558")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BasicVehicleController controller;

	[Token(Token = "0x60003A3")]
	[Address(RVA = "0xC0F5D8", Offset = "0xC0F5D8", VA = "0xC0F5D8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A4")]
	[Address(RVA = "0xC0F654", Offset = "0xC0F654", VA = "0xC0F654")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A5")]
	[Address(RVA = "0xC0F6E4", Offset = "0xC0F6E4", VA = "0xC0F6E4")]
	public BikeSound()
	{
	}
}
[Token(Token = "0x2000116")]
public class YueDoor : MonoBehaviour
{
	[Token(Token = "0x4000559")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isLocked;

	[Token(Token = "0x400055A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minDelta;

	[Token(Token = "0x400055B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float delta;

	[Token(Token = "0x400055C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float volumeFactor;

	[Token(Token = "0x400055D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip open;

	[Token(Token = "0x400055E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip close;

	[Token(Token = "0x400055F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Quaternion startRotation;

	[Token(Token = "0x4000560")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 startPosition;

	[Token(Token = "0x4000561")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private YueInteractable interactable;

	[Token(Token = "0x4000562")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private FixedJoint fJoint;

	[Token(Token = "0x4000563")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody carRigidbody;

	[Token(Token = "0x4000564")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private AudioSource source;

	[Token(Token = "0x60003A6")]
	[Address(RVA = "0xC0F6EC", Offset = "0xC0F6EC", VA = "0xC0F6EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60003A7")]
	[Address(RVA = "0xC0F7C8", Offset = "0xC0F7C8", VA = "0xC0F7C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003A8")]
	[Address(RVA = "0xC0F89C", Offset = "0xC0F89C", VA = "0xC0F89C")]
	private void LockDoor()
	{
	}

	[Token(Token = "0x60003A9")]
	[Address(RVA = "0xC0FA94", Offset = "0xC0FA94", VA = "0xC0FA94")]
	private void OpenDoor()
	{
	}

	[Token(Token = "0x60003AA")]
	[Address(RVA = "0xC0FBEC", Offset = "0xC0FBEC", VA = "0xC0FBEC")]
	public YueDoor()
	{
	}
}
[Token(Token = "0x2000117")]
public class ChairLift : MonoBehaviour
{
	[Token(Token = "0x4000565")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public ChairLiftAnimation chairLiftAnimation;

	[Token(Token = "0x4000566")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int TargetIndex;

	[Token(Token = "0x4000567")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float Angle;

	[Token(Token = "0x4000568")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float Error;

	[Token(Token = "0x4000569")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector3 StartRot;

	[Token(Token = "0x60003AB")]
	[Address(RVA = "0xC0FC04", Offset = "0xC0FC04", VA = "0xC0FC04")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AC")]
	[Address(RVA = "0xC0FCD4", Offset = "0xC0FCD4", VA = "0xC0FCD4")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003AD")]
	[Address(RVA = "0xC10098", Offset = "0xC10098", VA = "0xC10098")]
	public ChairLift()
	{
	}
}
[Token(Token = "0x2000118")]
public class ChairLiftAnimation : MonoBehaviour
{
	[Token(Token = "0x400056A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject ChairLiftPrefab;

	[Token(Token = "0x400056B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Speed;

	[Token(Token = "0x400056C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float RotationSpeed;

	[Token(Token = "0x400056D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> CharLifts;

	[Token(Token = "0x400056E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> Targets;

	[Token(Token = "0x400056F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float TimeTilSpawn;

	[Token(Token = "0x4000570")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float Timer;

	[Token(Token = "0x4000571")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int maxLifts;

	[Token(Token = "0x60003AE")]
	[Address(RVA = "0xC100A0", Offset = "0xC100A0", VA = "0xC100A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60003AF")]
	[Address(RVA = "0xC100A4", Offset = "0xC100A4", VA = "0xC100A4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B0")]
	[Address(RVA = "0xC10234", Offset = "0xC10234", VA = "0xC10234")]
	public ChairLiftAnimation()
	{
	}
}
[Token(Token = "0x2000119")]
public class GyroScooter : MonoBehaviour
{
	[Token(Token = "0x4000572")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float maxTorque;

	[Token(Token = "0x4000573")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float turnSpeed;

	[Token(Token = "0x4000574")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxVelocity;

	[Token(Token = "0x4000575")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float volumeFactor;

	[Token(Token = "0x4000576")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pitchFactor;

	[Token(Token = "0x4000577")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Dependencies")]
	public Transform handle;

	[Token(Token = "0x4000578")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WheelCollider leftWheel;

	[Token(Token = "0x4000579")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WheelCollider rightWheel;

	[Token(Token = "0x400057A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public YueInteractable handleInteractable;

	[Token(Token = "0x400057B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private YueSeat seat;

	[Token(Token = "0x400057C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Collider[] allCollider;

	[Token(Token = "0x400057D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private PlayerController controller;

	[Token(Token = "0x400057E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Vector3 startRotation;

	[Token(Token = "0x400057F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private AudioSource source;

	[Token(Token = "0x4000580")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Rigidbody rb;

	[Token(Token = "0x60003B1")]
	[Address(RVA = "0xC10258", Offset = "0xC10258", VA = "0xC10258")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B2")]
	[Address(RVA = "0xC1041C", Offset = "0xC1041C", VA = "0xC1041C")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B3")]
	[Address(RVA = "0xC10874", Offset = "0xC10874", VA = "0xC10874")]
	private void OnEnter()
	{
	}

	[Token(Token = "0x60003B4")]
	[Address(RVA = "0xC10A90", Offset = "0xC10A90", VA = "0xC10A90")]
	private void OnExit()
	{
	}

	[Token(Token = "0x60003B5")]
	[Address(RVA = "0xC108DC", Offset = "0xC108DC", VA = "0xC108DC")]
	private void InterCollision(bool c)
	{
	}

	[Token(Token = "0x60003B6")]
	[Address(RVA = "0xC10A98", Offset = "0xC10A98", VA = "0xC10A98")]
	public GyroScooter()
	{
	}
}
[Token(Token = "0x200011A")]
public class YueVehicleInput : MonoBehaviour
{
	[Token(Token = "0x4000581")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float steeringMultiplier;

	[Token(Token = "0x4000582")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public VehicleController vehicleController;

	[Token(Token = "0x4000583")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform handle;

	[Token(Token = "0x4000584")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool ZAxis;

	[Token(Token = "0x4000585")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform[] colliderParents;

	[Token(Token = "0x4000586")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public LayerMask layerMask;

	[Token(Token = "0x4000587")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private YueSeat seat;

	[Token(Token = "0x4000588")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private PlayerController playerController;

	[Token(Token = "0x4000589")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Vector3 startRot;

	[Token(Token = "0x400058A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[HideInInspector]
	public float nodeThrottle;

	[Token(Token = "0x400058B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float nodeRoll;

	[Token(Token = "0x400058C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public float nodePitch;

	[Token(Token = "0x400058D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private bool first;

	[Token(Token = "0x60003B7")]
	[Address(RVA = "0xC10AB8", Offset = "0xC10AB8", VA = "0xC10AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60003B8")]
	[Address(RVA = "0xC10BEC", Offset = "0xC10BEC", VA = "0xC10BEC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003B9")]
	[Address(RVA = "0xC10F9C", Offset = "0xC10F9C", VA = "0xC10F9C")]
	public YueVehicleInput()
	{
	}
}
[Token(Token = "0x200011B")]
public class ParashuteBag : MonoBehaviour
{
	[Token(Token = "0x400058E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public LayerMask layer;

	[Token(Token = "0x400058F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool Trigger;

	[Token(Token = "0x4000590")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ParashutePrefab;

	[Token(Token = "0x4000591")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject Rig;

	[Token(Token = "0x4000592")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private XRGrabInteractable grabInter;

	[Token(Token = "0x4000593")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject paraShute;

	[Token(Token = "0x4000594")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool Done;

	[Token(Token = "0x4000595")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private VRInput vrInput;

	[Token(Token = "0x60003BA")]
	[Address(RVA = "0xC10FB4", Offset = "0xC10FB4", VA = "0xC10FB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BB")]
	[Address(RVA = "0xC11078", Offset = "0xC11078", VA = "0xC11078")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003BC")]
	[Address(RVA = "0xC11630", Offset = "0xC11630", VA = "0xC11630")]
	public ParashuteBag()
	{
	}
}
[Token(Token = "0x200011C")]
public class ParashuteManager : MonoBehaviour
{
	[Token(Token = "0x4000596")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform Rig;

	[Token(Token = "0x4000597")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layer;

	[Token(Token = "0x4000598")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float FoldingSpeed;

	[Token(Token = "0x4000599")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform RigPos;

	[Token(Token = "0x400059A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform HandleR;

	[Token(Token = "0x400059B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform HandleL;

	[Token(Token = "0x400059C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool Landed;

	[Token(Token = "0x400059D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float Scale;

	[Token(Token = "0x60003BD")]
	[Address(RVA = "0xC11638", Offset = "0xC11638", VA = "0xC11638")]
	private void Start()
	{
	}

	[Token(Token = "0x60003BE")]
	[Address(RVA = "0xC11698", Offset = "0xC11698", VA = "0xC11698")]
	private void Update()
	{
	}

	[Token(Token = "0x60003BF")]
	[Address(RVA = "0xC11880", Offset = "0xC11880", VA = "0xC11880")]
	public void OnParashuteExit()
	{
	}

	[Token(Token = "0x60003C0")]
	[Address(RVA = "0xC11A9C", Offset = "0xC11A9C", VA = "0xC11A9C")]
	public ParashuteManager()
	{
	}
}
[Token(Token = "0x200011D")]
public class ParashutePhysics : MonoBehaviour
{
	[Token(Token = "0x400059E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float DragFactor;

	[Token(Token = "0x400059F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MaxVelocity;

	[Token(Token = "0x40005A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxAngularVelocity;

	[Token(Token = "0x40005A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform COM;

	[Token(Token = "0x40005A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform WingPos;

	[Token(Token = "0x40005A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Rigidbody attachedRigidbody;

	[Token(Token = "0x40005A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rigid;

	[Token(Token = "0x60003C1")]
	[Address(RVA = "0xC11AB4", Offset = "0xC11AB4", VA = "0xC11AB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C2")]
	[Address(RVA = "0xC11B2C", Offset = "0xC11B2C", VA = "0xC11B2C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003C3")]
	[Address(RVA = "0xC11E74", Offset = "0xC11E74", VA = "0xC11E74")]
	public ParashutePhysics()
	{
	}
}
[Token(Token = "0x200011E")]
public class Skateboard : MonoBehaviour
{
	[Token(Token = "0x40005A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float maxTilt;

	[Token(Token = "0x40005A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float leanFactor;

	[Token(Token = "0x40005A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float strengthForce;

	[Token(Token = "0x40005A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float strengthDamper;

	[Token(Token = "0x40005A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float speed;

	[Token(Token = "0x40005AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Audio")]
	public bool isGrounded;

	[Token(Token = "0x40005AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minImpulse;

	[Token(Token = "0x40005AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float volumeFactor;

	[Token(Token = "0x40005AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<AudioClip> collisionClips;

	[Token(Token = "0x40005AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Collider[] noInterCollision;

	[Token(Token = "0x40005AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool isTaken;

	[Token(Token = "0x40005B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform leftfootTarget;

	[Token(Token = "0x40005B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform rightfootTarget;

	[Token(Token = "0x40005B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody leftWheel;

	[Token(Token = "0x40005B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Rigidbody rightWheel;

	[Token(Token = "0x40005B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform leftHand;

	[Token(Token = "0x40005B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform rightHand;

	[Token(Token = "0x40005B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private ConfigurableJoint mainJoint;

	[Token(Token = "0x40005B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private Quaternion startRot;

	[Token(Token = "0x40005B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private YueSeat seat;

	[Token(Token = "0x40005B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private JointDrive OnDrive;

	[Token(Token = "0x40005BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
	private JointDrive OffDrive;

	[Token(Token = "0x40005BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	private PlayerController controller;

	[Token(Token = "0x40005BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private Rigidbody rb;

	[Token(Token = "0x40005BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private AudioSource source;

	[Token(Token = "0x40005BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private ScratchSound[] sounds;

	[Token(Token = "0x60003C4")]
	[Address(RVA = "0xC11E90", Offset = "0xC11E90", VA = "0xC11E90")]
	private void Start()
	{
	}

	[Token(Token = "0x60003C5")]
	[Address(RVA = "0xC1216C", Offset = "0xC1216C", VA = "0xC1216C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003C6")]
	[Address(RVA = "0xC12660", Offset = "0xC12660", VA = "0xC12660")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x60003C7")]
	[Address(RVA = "0xC12928", Offset = "0xC12928", VA = "0xC12928")]
	public void OnExit()
	{
	}

	[Token(Token = "0x60003C8")]
	[Address(RVA = "0xC12BB4", Offset = "0xC12BB4", VA = "0xC12BB4")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60003C9")]
	[Address(RVA = "0xC12D7C", Offset = "0xC12D7C", VA = "0xC12D7C")]
	public Skateboard()
	{
	}
}
[Token(Token = "0x200011F")]
public class BorderAlphaSetter : MonoBehaviour
{
	[Token(Token = "0x40005BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minDistance;

	[Token(Token = "0x40005C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<MeshRenderer> meshRenderer;

	[Token(Token = "0x60003CA")]
	[Address(RVA = "0xC12DA4", Offset = "0xC12DA4", VA = "0xC12DA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CB")]
	[Address(RVA = "0xC13040", Offset = "0xC13040", VA = "0xC13040")]
	public BorderAlphaSetter()
	{
	}
}
[Token(Token = "0x2000120")]
public class Snowboard : MonoBehaviour
{
	[Token(Token = "0x40005C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Controls")]
	public float maxTilt;

	[Token(Token = "0x40005C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public LayerMask groundLayermask;

	[Token(Token = "0x40005C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float edgeEfficiancy;

	[Token(Token = "0x40005C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float maxRedirectableVelocity;

	[Token(Token = "0x40005C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AnimationCurve directionDeltaCurve;

	[Token(Token = "0x40005C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationCurve edgeCurve;

	[Token(Token = "0x40005C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve redirectabilityVelocityCurve;

	[Token(Token = "0x40005C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("Raw Angles")]
	public float edgeAngle;

	[Token(Token = "0x40005C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float directionDeltaAngle;

	[Token(Token = "0x40005CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Debug Factors")]
	public float snowGroundedFactor;

	[Token(Token = "0x40005CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float edgeFactor;

	[Token(Token = "0x40005CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float velocityRedirectablilityFactor;

	[Token(Token = "0x40005CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float directionDeltaAngleFactor;

	[Token(Token = "0x40005CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[Header("Particle Setting")]
	public float emmisionSpeedFactor;

	[Token(Token = "0x40005CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float maxSpeed;

	[Token(Token = "0x40005D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public int emissionRate;

	[Token(Token = "0x40005D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Header("Enter Mechanics")]
	public float strengthForce;

	[Token(Token = "0x40005D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float strengthDamper;

	[Token(Token = "0x40005D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	[Header("Sound")]
	public float volumeOffset;

	[Token(Token = "0x40005D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public float volumeFactor;

	[Token(Token = "0x40005D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	public float pitchOffset;

	[Token(Token = "0x40005D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public float pitchFactor;

	[Token(Token = "0x40005D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public AudioClip rideSnow;

	[Token(Token = "0x40005D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public AudioClip scratchSnow;

	[Token(Token = "0x40005D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public AudioClip startObstacle;

	[Token(Token = "0x40005DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public AudioClip rideObstacle;

	[Token(Token = "0x40005DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public AudioClip rideRail;

	[Token(Token = "0x40005DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Collider[] noInterCollision;

	[Token(Token = "0x40005DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	[Header("Dependencies")]
	public Transform leftfootTarget;

	[Token(Token = "0x40005DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public Transform rightfootTarget;

	[Token(Token = "0x40005DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public Rigidbody[] rbs;

	[Token(Token = "0x40005E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private Transform leftHand;

	[Token(Token = "0x40005E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Transform rightHand;

	[Token(Token = "0x40005E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	private ConfigurableJoint mainJoint;

	[Token(Token = "0x40005E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private Quaternion startRot;

	[Token(Token = "0x40005E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private YueSeat seat;

	[Token(Token = "0x40005E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private JointDrive OnDrive;

	[Token(Token = "0x40005E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x104")]
	private JointDrive OffDrive;

	[Token(Token = "0x40005E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
	private PlayerController controller;

	[Token(Token = "0x40005E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private Vector3 groundNormal;

	[Token(Token = "0x40005E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private Rigidbody rb;

	[Token(Token = "0x40005EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	private SnowboardSnowCaster[] casters;

	[Token(Token = "0x40005EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	private AudioSource source;

	[Token(Token = "0x40005EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	private Vector3 redirectDirection;

	[Token(Token = "0x40005ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14C")]
	private YueScratchMaterial groundedMaterial;

	[Token(Token = "0x40005EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x150")]
	private AudioClip playingClip;

	[Token(Token = "0x40005EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool obstacleStarted;

	[Token(Token = "0x60003CC")]
	[Address(RVA = "0xC13050", Offset = "0xC13050", VA = "0xC13050")]
	private void Start()
	{
	}

	[Token(Token = "0x60003CD")]
	[Address(RVA = "0xC13334", Offset = "0xC13334", VA = "0xC13334")]
	private void Update()
	{
	}

	[Token(Token = "0x60003CE")]
	[Address(RVA = "0xC13880", Offset = "0xC13880", VA = "0xC13880")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003CF")]
	[Address(RVA = "0xC140D0", Offset = "0xC140D0", VA = "0xC140D0")]
	private void UpdateRigidbody(Rigidbody rigid)
	{
	}

	[Token(Token = "0x60003D0")]
	[Address(RVA = "0xC13E40", Offset = "0xC13E40", VA = "0xC13E40")]
	private void SetRotation()
	{
	}

	[Token(Token = "0x60003D1")]
	[Address(RVA = "0xC141DC", Offset = "0xC141DC", VA = "0xC141DC")]
	private void SetSmoothRighRotation()
	{
	}

	[Token(Token = "0x60003D2")]
	[Address(RVA = "0xC1334C", Offset = "0xC1334C", VA = "0xC1334C")]
	private void UpdateParticles()
	{
	}

	[Token(Token = "0x60003D3")]
	[Address(RVA = "0xC135B8", Offset = "0xC135B8", VA = "0xC135B8")]
	private void UpdateAudio()
	{
	}

	[Token(Token = "0x60003D4")]
	[Address(RVA = "0xC14448", Offset = "0xC14448", VA = "0xC14448")]
	public void OnEnter()
	{
	}

	[Token(Token = "0x60003D5")]
	[Address(RVA = "0xC144D4", Offset = "0xC144D4", VA = "0xC144D4")]
	public void OnExit()
	{
	}

	[Token(Token = "0x60003D6")]
	[Address(RVA = "0xC14500", Offset = "0xC14500", VA = "0xC14500")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003D7")]
	[Address(RVA = "0xC14940", Offset = "0xC14940", VA = "0xC14940")]
	public Snowboard()
	{
	}
}
[Token(Token = "0x2000121")]
public class Snow : MonoBehaviour
{
	[Token(Token = "0x40005F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Color> colors;

	[Token(Token = "0x40005F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float castingRange;

	[Token(Token = "0x40005F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float objectSize;

	[Token(Token = "0x40005F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float subDivisionSize;

	[Token(Token = "0x40005F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minVertexValue;

	[Token(Token = "0x40005F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxVertexValue;

	[Token(Token = "0x40005F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxDistance;

	[Token(Token = "0x40005F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float deformMax;

	[Token(Token = "0x40005F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SnowboardSnowCaster[] casters;

	[Token(Token = "0x40005F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] tris;

	[Token(Token = "0x40005FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector3[] verts;

	[Token(Token = "0x40005FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int divisions;

	[Token(Token = "0x40005FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public List<List<int>> subdivisions;

	[Token(Token = "0x40005FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Mesh mesh;

	[Token(Token = "0x40005FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float inverseDivisionRange;

	[Token(Token = "0x40005FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float inverseCastingRange;

	[Token(Token = "0x4000600")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Vector3 divisionMid;

	[Token(Token = "0x4000601")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private float delta;

	[Token(Token = "0x60003D8")]
	[Address(RVA = "0xC14988", Offset = "0xC14988", VA = "0xC14988")]
	private void Start()
	{
	}

	[Token(Token = "0x60003D9")]
	[Address(RVA = "0xC14FBC", Offset = "0xC14FBC", VA = "0xC14FBC")]
	private void Update()
	{
	}

	[Token(Token = "0x60003DA")]
	[Address(RVA = "0xC15474", Offset = "0xC15474", VA = "0xC15474")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60003DB")]
	[Address(RVA = "0xC15478", Offset = "0xC15478", VA = "0xC15478")]
	public Snow()
	{
	}
}
[Token(Token = "0x2000122")]
public enum YueScratchMaterial
{
	[Token(Token = "0x4000603")]
	Nothing,
	[Token(Token = "0x4000604")]
	Snow,
	[Token(Token = "0x4000605")]
	Obstacle,
	[Token(Token = "0x4000606")]
	Rail
}
[Token(Token = "0x2000123")]
public class SnowboardSnowCaster : MonoBehaviour
{
	[Token(Token = "0x4000607")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool isGroundedInSnow;

	[Token(Token = "0x4000608")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public YueScratchMaterial groundedMaterial;

	[Token(Token = "0x4000609")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ParticleSystem particle;

	[Token(Token = "0x400060A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Transform> snowHovers;

	[Token(Token = "0x400060B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Transform> obstacleHovers;

	[Token(Token = "0x400060C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> railHovers;

	[Token(Token = "0x60003DC")]
	[Address(RVA = "0xC154AC", Offset = "0xC154AC", VA = "0xC154AC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60003DD")]
	[Address(RVA = "0xC156A4", Offset = "0xC156A4", VA = "0xC156A4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60003DE")]
	[Address(RVA = "0xC1561C", Offset = "0xC1561C", VA = "0xC1561C")]
	private void UpdateValue()
	{
	}

	[Token(Token = "0x60003DF")]
	[Address(RVA = "0xC15784", Offset = "0xC15784", VA = "0xC15784")]
	public SnowboardSnowCaster()
	{
	}
}
[Token(Token = "0x2000124")]
public class SnowProceduralMesh : MonoBehaviour
{
	[Token(Token = "0x400060D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float width;

	[Token(Token = "0x400060E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float height;

	[Token(Token = "0x400060F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int subdivisionsX;

	[Token(Token = "0x4000610")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int subdivisionsY;

	[Token(Token = "0x60003E0")]
	[Address(RVA = "0xC1578C", Offset = "0xC1578C", VA = "0xC1578C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E1")]
	[Address(RVA = "0xC15B00", Offset = "0xC15B00", VA = "0xC15B00")]
	public SnowProceduralMesh()
	{
	}
}
[Token(Token = "0x2000125")]
public class Anchor : MonoBehaviour
{
	[Token(Token = "0x4000611")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AnchorLift lift;

	[Token(Token = "0x4000612")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float framesPerSecond;

	[Token(Token = "0x4000613")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public int frame;

	[Token(Token = "0x4000614")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int nextFrame;

	[Token(Token = "0x4000615")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float frameCounter;

	[Token(Token = "0x4000616")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float timeBetweenFrames;

	[Token(Token = "0x4000617")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private float interpol;

	[Token(Token = "0x4000618")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000619")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform start;

	[Token(Token = "0x400061A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform end;

	[Token(Token = "0x400061B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private ConfigurableJoint joint;

	[Token(Token = "0x400061C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public ConfigurableJoint anchor;

	[Token(Token = "0x400061D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Quaternion startRotation;

	[Token(Token = "0x60003E2")]
	[Address(RVA = "0xC15B14", Offset = "0xC15B14", VA = "0xC15B14")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E3")]
	[Address(RVA = "0xC15BBC", Offset = "0xC15BBC", VA = "0xC15BBC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003E4")]
	[Address(RVA = "0xC15E98", Offset = "0xC15E98", VA = "0xC15E98")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x60003E5")]
	[Address(RVA = "0xC15F00", Offset = "0xC15F00", VA = "0xC15F00")]
	public Anchor()
	{
	}
}
[Token(Token = "0x2000126")]
public class AnchorLift : MonoBehaviour
{
	[Token(Token = "0x400061E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxForce;

	[Token(Token = "0x400061F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float liftMaxSpeed;

	[Token(Token = "0x4000620")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Animation")]
	public float driveWheelSpeed;

	[Token(Token = "0x4000621")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float materialOffsetSpeed;

	[Token(Token = "0x4000622")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int anchorCount;

	[Token(Token = "0x4000623")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<AudioSource> sources;

	[Token(Token = "0x4000624")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Transform> driveWheels;

	[Token(Token = "0x4000625")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Transform> path;

	[Token(Token = "0x4000626")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float pitchFactor;

	[Token(Token = "0x4000627")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float pitchOffset;

	[Token(Token = "0x4000628")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float volumeFactor;

	[Token(Token = "0x4000629")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float volumeOffset;

	[Token(Token = "0x400062A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject anchorPrefab;

	[Token(Token = "0x400062B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public float liftSpeed;

	[Token(Token = "0x400062C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float spawnCounter;

	[Token(Token = "0x400062D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400062E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public List<ConfigurableJoint> spawnedAnchors;

	[Token(Token = "0x400062F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<Vector3> pathPositions;

	[Token(Token = "0x4000630")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public List<Quaternion> pathRotations;

	[Token(Token = "0x4000631")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private float smoothForce;

	[Token(Token = "0x4000632")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private float targetSpeed;

	[Token(Token = "0x4000633")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private float force;

	[Token(Token = "0x60003E6")]
	[Address(RVA = "0xC15F1C", Offset = "0xC15F1C", VA = "0xC15F1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60003E7")]
	[Address(RVA = "0xC166C8", Offset = "0xC166C8", VA = "0xC166C8")]
	private void Update()
	{
	}

	[Token(Token = "0x60003E8")]
	[Address(RVA = "0xC16D54", Offset = "0xC16D54", VA = "0xC16D54")]
	public AnchorLift()
	{
	}
}
[Token(Token = "0x2000127")]
public enum ControlInputType
{
	[Token(Token = "0x4000635")]
	Pitch,
	[Token(Token = "0x4000636")]
	Yaw,
	[Token(Token = "0x4000637")]
	Roll,
	[Token(Token = "0x4000638")]
	Flap
}
[Token(Token = "0x2000128")]
public class AeroSurface : MonoBehaviour
{
	[Token(Token = "0x4000639")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private AeroSurfaceConfig config;

	[Token(Token = "0x400063A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool IsControlSurface;

	[Token(Token = "0x400063B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public ControlInputType InputType;

	[Token(Token = "0x400063C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float InputMultiplyer;

	[Token(Token = "0x400063D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private float flapAngle;

	[Token(Token = "0x60003E9")]
	[Address(RVA = "0xC16D78", Offset = "0xC16D78", VA = "0xC16D78")]
	public void SetFlapAngle(float angle)
	{
	}

	[Token(Token = "0x60003EA")]
	[Address(RVA = "0xC16D9C", Offset = "0xC16D9C", VA = "0xC16D9C")]
	public BiVector3 CalculateForces(Vector3 worldAirVelocity, float airDensity, Vector3 relativePosition)
	{
		return default(BiVector3);
	}

	[Token(Token = "0x60003EB")]
	[Address(RVA = "0xC17338", Offset = "0xC17338", VA = "0xC17338")]
	private Vector3 CalculateCoefficients(float angleOfAttack, float correctedLiftSlope, float zeroLiftAoA, float stallAngleHigh, float stallAngleLow)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003EC")]
	[Address(RVA = "0xC17528", Offset = "0xC17528", VA = "0xC17528")]
	private Vector3 CalculateCoefficientsAtLowAoA(float angleOfAttack, float correctedLiftSlope, float zeroLiftAoA)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003ED")]
	[Address(RVA = "0xC175E4", Offset = "0xC175E4", VA = "0xC175E4")]
	private Vector3 CalculateCoefficientsAtStall(float angleOfAttack, float correctedLiftSlope, float zeroLiftAoA, float stallAngleHigh, float stallAngleLow)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003EE")]
	[Address(RVA = "0xC17780", Offset = "0xC17780", VA = "0xC17780")]
	private float TorqCoefficientProportion(float effectiveAngle)
	{
		return default(float);
	}

	[Token(Token = "0x60003EF")]
	[Address(RVA = "0xC177B8", Offset = "0xC177B8", VA = "0xC177B8")]
	private float FrictionAt90Degrees(float flapAngle)
	{
		return default(float);
	}

	[Token(Token = "0x60003F0")]
	[Address(RVA = "0xC172AC", Offset = "0xC172AC", VA = "0xC172AC")]
	private float FlapEffectivnessCorrection(float flapAngle)
	{
		return default(float);
	}

	[Token(Token = "0x60003F1")]
	[Address(RVA = "0xC172FC", Offset = "0xC172FC", VA = "0xC172FC")]
	private float LiftCoefficientMaxFraction(float flapFraction)
	{
		return default(float);
	}

	[Token(Token = "0x60003F2")]
	[Address(RVA = "0xC177E8", Offset = "0xC177E8", VA = "0xC177E8")]
	public AeroSurface()
	{
	}
}
[Token(Token = "0x2000129")]
[CreateAssetMenu(fileName = "New Aerodynamic Surface Config", menuName = "Aerodynamic Surface Config")]
public class AeroSurfaceConfig : ScriptableObject
{
	[Token(Token = "0x400063E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float liftSlope;

	[Token(Token = "0x400063F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float skinFriction;

	[Token(Token = "0x4000640")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float zeroLiftAoA;

	[Token(Token = "0x4000641")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float stallAngleHigh;

	[Token(Token = "0x4000642")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float stallAngleLow;

	[Token(Token = "0x4000643")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float chord;

	[Token(Token = "0x4000644")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float flapFraction;

	[Token(Token = "0x4000645")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float span;

	[Token(Token = "0x4000646")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool autoAspectRatio;

	[Token(Token = "0x4000647")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float aspectRatio;

	[Token(Token = "0x60003F3")]
	[Address(RVA = "0xC177F8", Offset = "0xC177F8", VA = "0xC177F8")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x60003F4")]
	[Address(RVA = "0xC17878", Offset = "0xC17878", VA = "0xC17878")]
	public AeroSurfaceConfig()
	{
	}
}
[Token(Token = "0x200012A")]
[RequireComponent(typeof(Rigidbody))]
public class AircraftPhysics : MonoBehaviour
{
	[Token(Token = "0x4000648")]
	private const float PREDICTION_TIMESTEP_FRACTION = 0.5f;

	[Token(Token = "0x4000649")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float thrust;

	[Token(Token = "0x400064A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform COM;

	[Token(Token = "0x400064B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private List<AeroSurface> aerodynamicSurfaces;

	[Token(Token = "0x400064C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Rigidbody rb;

	[Token(Token = "0x400064D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float thrustPercent;

	[Token(Token = "0x400064E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private BiVector3 currentForceAndTorque;

	[Token(Token = "0x60003F5")]
	[Address(RVA = "0xC178B4", Offset = "0xC178B4", VA = "0xC178B4")]
	public void SetThrustPercent(float percent)
	{
	}

	[Token(Token = "0x60003F6")]
	[Address(RVA = "0xC178BC", Offset = "0xC178BC", VA = "0xC178BC")]
	private void Awake()
	{
	}

	[Token(Token = "0x60003F7")]
	[Address(RVA = "0xC17934", Offset = "0xC17934", VA = "0xC17934")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60003F8")]
	[Address(RVA = "0xC17C4C", Offset = "0xC17C4C", VA = "0xC17C4C")]
	private BiVector3 CalculateAerodynamicForces(Vector3 velocity, Vector3 angularVelocity, Vector3 wind, float airDensity, Vector3 centerOfMass)
	{
		return default(BiVector3);
	}

	[Token(Token = "0x60003F9")]
	[Address(RVA = "0xC17ED0", Offset = "0xC17ED0", VA = "0xC17ED0")]
	private Vector3 PredictVelocity(Vector3 force)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003FA")]
	[Address(RVA = "0xC17F68", Offset = "0xC17F68", VA = "0xC17F68")]
	private Vector3 PredictAngularVelocity(Vector3 torque)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60003FB")]
	[Address(RVA = "0xC18188", Offset = "0xC18188", VA = "0xC18188")]
	public AircraftPhysics()
	{
	}
}
[Token(Token = "0x200012B")]
public struct BiVector3
{
	[Token(Token = "0x400064F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	public Vector3 p;

	[Token(Token = "0x4000650")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
	public Vector3 q;

	[Token(Token = "0x60003FC")]
	[Address(RVA = "0xC18190", Offset = "0xC18190", VA = "0xC18190")]
	public BiVector3(Vector3 force, Vector3 torque)
	{
	}

	[Token(Token = "0x60003FD")]
	[Address(RVA = "0xC18140", Offset = "0xC18140", VA = "0xC18140")]
	public static BiVector3 operator +(BiVector3 a, BiVector3 b)
	{
		return default(BiVector3);
	}

	[Token(Token = "0x60003FE")]
	[Address(RVA = "0xC181A0", Offset = "0xC181A0", VA = "0xC181A0")]
	public static BiVector3 operator *(float f, BiVector3 a)
	{
		return default(BiVector3);
	}

	[Token(Token = "0x60003FF")]
	[Address(RVA = "0xC18168", Offset = "0xC18168", VA = "0xC18168")]
	public static BiVector3 operator *(BiVector3 a, float f)
	{
		return default(BiVector3);
	}
}
[Token(Token = "0x200012C")]
public class AirplaneController : MonoBehaviour
{
	[Token(Token = "0x4000651")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private List<AeroSurface> controlSurfaces;

	[Token(Token = "0x4000652")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private List<WheelCollider> wheels;

	[Token(Token = "0x4000653")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float rollControlSensitivity;

	[Token(Token = "0x4000654")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[SerializeField]
	private float pitchControlSensitivity;

	[Token(Token = "0x4000655")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	private float yawControlSensitivity;

	[Token(Token = "0x4000656")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Range(-1f, 1f)]
	public float Pitch;

	[Token(Token = "0x4000657")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Range(-1f, 1f)]
	public float Yaw;

	[Token(Token = "0x4000658")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[Range(-1f, 1f)]
	public float Roll;

	[Token(Token = "0x4000659")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Range(0f, 1f)]
	public float Flap;

	[Token(Token = "0x400065A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float thrustPercent;

	[Token(Token = "0x400065B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float brakesTorque;

	[Token(Token = "0x400065C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AircraftPhysics aircraftPhysics;

	[Token(Token = "0x400065D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody rb;

	[Token(Token = "0x6000400")]
	[Address(RVA = "0xC181C0", Offset = "0xC181C0", VA = "0xC181C0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000401")]
	[Address(RVA = "0xC1823C", Offset = "0xC1823C", VA = "0xC1823C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000402")]
	[Address(RVA = "0xC18240", Offset = "0xC18240", VA = "0xC18240")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000403")]
	[Address(RVA = "0xC183CC", Offset = "0xC183CC", VA = "0xC183CC")]
	public void SetControlSurfecesAngles(float pitch, float roll, float yaw, float flap)
	{
	}

	[Token(Token = "0x6000404")]
	[Address(RVA = "0xC18608", Offset = "0xC18608", VA = "0xC18608")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000405")]
	[Address(RVA = "0xC18638", Offset = "0xC18638", VA = "0xC18638")]
	public AirplaneController()
	{
	}
}
[Token(Token = "0x200012D")]
public class AircraftInput : MonoBehaviour
{
	[Token(Token = "0x400065E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool UseInputs;

	[Token(Token = "0x400065F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform pitch;

	[Token(Token = "0x4000660")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform roll;

	[Token(Token = "0x4000661")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform thrust;

	[Token(Token = "0x4000662")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WheelCollider[] wheels;

	[Token(Token = "0x4000663")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float startRotPitch;

	[Token(Token = "0x4000664")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float startRotRoll;

	[Token(Token = "0x4000665")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float startRotThrust;

	[Token(Token = "0x4000666")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AirplaneController controller;

	[Token(Token = "0x4000667")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VRInput vrInput;

	[Token(Token = "0x4000668")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private YueVehicleInput yueVehicleInput;

	[Token(Token = "0x4000669")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private float rollWheel;

	[Token(Token = "0x400066A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float pitchWheel;

	[Token(Token = "0x400066B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private float thrustWheel;

	[Token(Token = "0x400066C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
	private float rollInput;

	[Token(Token = "0x400066D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private float pitchInput;

	[Token(Token = "0x400066E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float thrustInput;

	[Token(Token = "0x400066F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private YueSeat seat;

	[Token(Token = "0x6000406")]
	[Address(RVA = "0xC18654", Offset = "0xC18654", VA = "0xC18654")]
	private void Start()
	{
	}

	[Token(Token = "0x6000407")]
	[Address(RVA = "0xC187F0", Offset = "0xC187F0", VA = "0xC187F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000408")]
	[Address(RVA = "0xC18AA0", Offset = "0xC18AA0", VA = "0xC18AA0")]
	public AircraftInput()
	{
	}
}
[Token(Token = "0x200012E")]
public class PlaneAnimation : MonoBehaviour
{
	[Token(Token = "0x4000670")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float propellerTorque;

	[Token(Token = "0x4000671")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float propellerVelocity;

	[Token(Token = "0x4000672")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float propellerDrag;

	[Token(Token = "0x4000673")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float turnFactor;

	[Token(Token = "0x4000674")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Dependencies")]
	public Transform Propeller;

	[Token(Token = "0x4000675")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private AirplaneController controller;

	[Token(Token = "0x4000676")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AircraftInput input;

	[Token(Token = "0x6000409")]
	[Address(RVA = "0xC18AA8", Offset = "0xC18AA8", VA = "0xC18AA8")]
	private void Start()
	{
	}

	[Token(Token = "0x600040A")]
	[Address(RVA = "0xC18AF8", Offset = "0xC18AF8", VA = "0xC18AF8")]
	private void Update()
	{
	}

	[Token(Token = "0x600040B")]
	[Address(RVA = "0xC18C7C", Offset = "0xC18C7C", VA = "0xC18C7C")]
	public PlaneAnimation()
	{
	}
}
[Token(Token = "0x200012F")]
public class PlaneSounds : MonoBehaviour
{
	[Token(Token = "0x4000677")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float volumeOffset;

	[Token(Token = "0x4000678")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float volumeFactor;

	[Token(Token = "0x4000679")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float pitchOffset;

	[Token(Token = "0x400067A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pitchFactor;

	[Token(Token = "0x400067B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private AudioSource source;

	[Token(Token = "0x400067C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private PlaneAnimation planeAnimation;

	[Token(Token = "0x600040C")]
	[Address(RVA = "0xC18C98", Offset = "0xC18C98", VA = "0xC18C98")]
	private void Start()
	{
	}

	[Token(Token = "0x600040D")]
	[Address(RVA = "0xC18D14", Offset = "0xC18D14", VA = "0xC18D14")]
	private void Update()
	{
	}

	[Token(Token = "0x600040E")]
	[Address(RVA = "0xC18DDC", Offset = "0xC18DDC", VA = "0xC18DDC")]
	public PlaneSounds()
	{
	}
}
[Token(Token = "0x2000130")]
public class VelocitySoundEffect : MonoBehaviour
{
	[Token(Token = "0x400067D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float volumeFactor;

	[Token(Token = "0x400067E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float volumeOffset;

	[Token(Token = "0x400067F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private AudioSource source;

	[Token(Token = "0x4000680")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x4000681")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float volume;

	[Token(Token = "0x600040F")]
	[Address(RVA = "0xC18DE4", Offset = "0xC18DE4", VA = "0xC18DE4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000410")]
	[Address(RVA = "0xC18E60", Offset = "0xC18E60", VA = "0xC18E60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000411")]
	[Address(RVA = "0xC18F88", Offset = "0xC18F88", VA = "0xC18F88")]
	public VelocitySoundEffect()
	{
	}
}
[Token(Token = "0x2000131")]
public class BasicPlaneInput : MonoBehaviour
{
	[Token(Token = "0x4000682")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform controlWheel;

	[Token(Token = "0x4000683")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float ThrustInput;

	[Token(Token = "0x4000684")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float PitchInput;

	[Token(Token = "0x4000685")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float YawInput;

	[Token(Token = "0x4000686")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float RollInput;

	[Token(Token = "0x4000687")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 StartRot;

	[Token(Token = "0x6000412")]
	[Address(RVA = "0xC18F90", Offset = "0xC18F90", VA = "0xC18F90")]
	private void Start()
	{
	}

	[Token(Token = "0x6000413")]
	[Address(RVA = "0xC18FBC", Offset = "0xC18FBC", VA = "0xC18FBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000414")]
	[Address(RVA = "0xC1902C", Offset = "0xC1902C", VA = "0xC1902C")]
	public BasicPlaneInput()
	{
	}
}
[Token(Token = "0x2000132")]
public class BasicVehicleAnimation : MonoBehaviour
{
	[Token(Token = "0x4000688")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform wheelRefFrontLeft;

	[Token(Token = "0x4000689")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform wheelRefFrontRight;

	[Token(Token = "0x400068A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform wheelFrontLeft;

	[Token(Token = "0x400068B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform wheelFrontRight;

	[Token(Token = "0x400068C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform wheelRearLeft;

	[Token(Token = "0x400068D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform wheelRearRight;

	[Token(Token = "0x400068E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private BasicVehicleController vehicleController;

	[Token(Token = "0x6000415")]
	[Address(RVA = "0xC19034", Offset = "0xC19034", VA = "0xC19034")]
	private void Start()
	{
	}

	[Token(Token = "0x6000416")]
	[Address(RVA = "0xC19084", Offset = "0xC19084", VA = "0xC19084")]
	private void Update()
	{
	}

	[Token(Token = "0x6000417")]
	[Address(RVA = "0xC19500", Offset = "0xC19500", VA = "0xC19500")]
	public BasicVehicleAnimation()
	{
	}
}
[Token(Token = "0x2000133")]
public class BasicVehicleController : MonoBehaviour
{
	[Token(Token = "0x400068F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float MaxGas;

	[Token(Token = "0x4000690")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float MaxSteering;

	[Token(Token = "0x4000691")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float GasInput;

	[Token(Token = "0x4000692")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float SteeringInput;

	[Token(Token = "0x4000693")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float brakeInput;

	[Token(Token = "0x4000694")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Steering;

	[Token(Token = "0x4000695")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float MotorTorque;

	[Token(Token = "0x4000696")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float WheelRPM;

	[Token(Token = "0x4000697")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public WheelCollider FrontRight;

	[Token(Token = "0x4000698")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public WheelCollider FrontLeft;

	[Token(Token = "0x4000699")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public WheelCollider RearRight;

	[Token(Token = "0x400069A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public WheelCollider RearLeft;

	[Token(Token = "0x400069B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float appliedTorque;

	[Token(Token = "0x6000418")]
	[Address(RVA = "0xC19508", Offset = "0xC19508", VA = "0xC19508")]
	private void Update()
	{
	}

	[Token(Token = "0x6000419")]
	[Address(RVA = "0xC1961C", Offset = "0xC1961C", VA = "0xC1961C")]
	public BasicVehicleController()
	{
	}
}
[Token(Token = "0x2000134")]
public class BasicVehicleInput : MonoBehaviour
{
	[Token(Token = "0x400069C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public YueHandposeZone gasZone;

	[Token(Token = "0x400069D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public YueHandposeZone brakeZone;

	[Token(Token = "0x400069E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool UseVRInputs;

	[Token(Token = "0x400069F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool UsePhysicalWheel;

	[Token(Token = "0x40006A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRInput vrInput;

	[Token(Token = "0x40006A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private BasicVehicleController basicVehicleController;

	[Token(Token = "0x40006A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Wheel;

	[Token(Token = "0x40006A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool Z;

	[Token(Token = "0x40006A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool Y;

	[Token(Token = "0x600041A")]
	[Address(RVA = "0xC19624", Offset = "0xC19624", VA = "0xC19624")]
	private void Start()
	{
	}

	[Token(Token = "0x600041B")]
	[Address(RVA = "0xC196BC", Offset = "0xC196BC", VA = "0xC196BC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600041C")]
	[Address(RVA = "0xC196D8", Offset = "0xC196D8", VA = "0xC196D8")]
	private void Update()
	{
	}

	[Token(Token = "0x600041D")]
	[Address(RVA = "0xC197F8", Offset = "0xC197F8", VA = "0xC197F8")]
	public BasicVehicleInput()
	{
	}
}
[Token(Token = "0x2000135")]
public class FixLocalPosition : MonoBehaviour
{
	[Token(Token = "0x40006A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 LocalPos;

	[Token(Token = "0x600041E")]
	[Address(RVA = "0xC19808", Offset = "0xC19808", VA = "0xC19808")]
	private void Start()
	{
	}

	[Token(Token = "0x600041F")]
	[Address(RVA = "0xC19838", Offset = "0xC19838", VA = "0xC19838")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000420")]
	[Address(RVA = "0xC19864", Offset = "0xC19864", VA = "0xC19864")]
	public FixLocalPosition()
	{
	}
}
[Token(Token = "0x2000136")]
public class KeepPositionWhenUngrabbed : MonoBehaviour
{
	[Token(Token = "0x40006A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SimpleGrab> grabInter;

	[Token(Token = "0x40006A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Quaternion lastLocalRot;

	[Token(Token = "0x40006A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 lastLocalPos;

	[Token(Token = "0x6000421")]
	[Address(RVA = "0xC1986C", Offset = "0xC1986C", VA = "0xC1986C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000422")]
	[Address(RVA = "0xC198BC", Offset = "0xC198BC", VA = "0xC198BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000423")]
	[Address(RVA = "0xC19AA4", Offset = "0xC19AA4", VA = "0xC19AA4")]
	public KeepPositionWhenUngrabbed()
	{
	}
}
[Token(Token = "0x2000137")]
public class SimpleGrab : MonoBehaviour
{
	[Token(Token = "0x40006A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Selected;

	[Token(Token = "0x40006AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool HoverL;

	[Token(Token = "0x40006AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	private bool HoverR;

	[Token(Token = "0x40006AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Transform FollowObject;

	[Token(Token = "0x40006AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRInput vrInput;

	[Token(Token = "0x40006AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameObject rig;

	[Token(Token = "0x6000424")]
	[Address(RVA = "0xC19AAC", Offset = "0xC19AAC", VA = "0xC19AAC")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000425")]
	[Address(RVA = "0xC19B80", Offset = "0xC19B80", VA = "0xC19B80")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000426")]
	[Address(RVA = "0xC19C14", Offset = "0xC19C14", VA = "0xC19C14")]
	private void Start()
	{
	}

	[Token(Token = "0x6000427")]
	[Address(RVA = "0xC19CAC", Offset = "0xC19CAC", VA = "0xC19CAC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000428")]
	[Address(RVA = "0xC19D34", Offset = "0xC19D34", VA = "0xC19D34")]
	public SimpleGrab()
	{
	}
}
[Token(Token = "0x2000138")]
public class VehicleEnterTrigger : MonoBehaviour
{
	[Token(Token = "0x40006AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Triggerd;

	[Token(Token = "0x40006B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	private bool hoverd;

	[Token(Token = "0x6000429")]
	[Address(RVA = "0xC19D3C", Offset = "0xC19D3C", VA = "0xC19D3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600042A")]
	[Address(RVA = "0xC19DF0", Offset = "0xC19DF0", VA = "0xC19DF0")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600042B")]
	[Address(RVA = "0xC19EA0", Offset = "0xC19EA0", VA = "0xC19EA0")]
	private void Update()
	{
	}

	[Token(Token = "0x600042C")]
	[Address(RVA = "0xC19EAC", Offset = "0xC19EAC", VA = "0xC19EAC")]
	public VehicleEnterTrigger()
	{
	}
}
[Token(Token = "0x2000139")]
public class VRVehicleEnter : MonoBehaviour
{
	[Token(Token = "0x600042D")]
	[Address(RVA = "0xC19EB4", Offset = "0xC19EB4", VA = "0xC19EB4")]
	public VRVehicleEnter()
	{
	}
}
[Token(Token = "0x200013A")]
public class RPG : MonoBehaviour
{
	[Token(Token = "0x40006B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool taken;

	[Token(Token = "0x40006B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool locked;

	[Token(Token = "0x40006B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool fire;

	[Token(Token = "0x40006B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float lockDistance;

	[Token(Token = "0x40006B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform rocketEnterTransform;

	[Token(Token = "0x40006B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public RPGRocket rocketLoaded;

	[Token(Token = "0x40006B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public ConfigurableJoint cJoint;

	[Token(Token = "0x40006B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public FixedJoint fJoint;

	[Token(Token = "0x40006B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public RPGRocketTriggerZone triggerZone;

	[Token(Token = "0x40006BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject muzzleFlash;

	[Token(Token = "0x40006BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<Collider> ignoreRPGCollider;

	[Token(Token = "0x40006BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private VRInput vrInput;

	[Token(Token = "0x40006BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private YueInteractable interactable;

	[Token(Token = "0x600042E")]
	[Address(RVA = "0xC19EBC", Offset = "0xC19EBC", VA = "0xC19EBC")]
	private void Start()
	{
	}

	[Token(Token = "0x600042F")]
	[Address(RVA = "0xC19F60", Offset = "0xC19F60", VA = "0xC19F60")]
	private void Update()
	{
	}

	[Token(Token = "0x6000430")]
	[Address(RVA = "0xC1A030", Offset = "0xC1A030", VA = "0xC1A030")]
	private void OnRocketEnterd()
	{
	}

	[Token(Token = "0x6000431")]
	[Address(RVA = "0xC1A34C", Offset = "0xC1A34C", VA = "0xC1A34C")]
	private void OnRocketExited()
	{
	}

	[Token(Token = "0x6000432")]
	[Address(RVA = "0xC1A5E4", Offset = "0xC1A5E4", VA = "0xC1A5E4")]
	private void OnRocketLocked()
	{
	}

	[Token(Token = "0x6000433")]
	[Address(RVA = "0xC1A2AC", Offset = "0xC1A2AC", VA = "0xC1A2AC")]
	private void WhileRocketLocked()
	{
	}

	[Token(Token = "0x6000434")]
	[Address(RVA = "0xC1A1A4", Offset = "0xC1A1A4", VA = "0xC1A1A4")]
	private void WhileRocketLoaded()
	{
	}

	[Token(Token = "0x6000435")]
	[Address(RVA = "0xC1A3B0", Offset = "0xC1A3B0", VA = "0xC1A3B0")]
	private void WhileNotLoaded()
	{
	}

	[Token(Token = "0x6000436")]
	[Address(RVA = "0xC1A730", Offset = "0xC1A730", VA = "0xC1A730")]
	private void OnRocketFired()
	{
	}

	[Token(Token = "0x6000437")]
	[Address(RVA = "0xC1A83C", Offset = "0xC1A83C", VA = "0xC1A83C")]
	private void ResetAll()
	{
	}

	[Token(Token = "0x6000438")]
	[Address(RVA = "0xC1A6D8", Offset = "0xC1A6D8", VA = "0xC1A6D8")]
	private void checkInputs()
	{
	}

	[Token(Token = "0x6000439")]
	[Address(RVA = "0xC1A3B4", Offset = "0xC1A3B4", VA = "0xC1A3B4")]
	public void IgnoreColliders(bool ignore)
	{
	}

	[Token(Token = "0x600043A")]
	[Address(RVA = "0xC1A910", Offset = "0xC1A910", VA = "0xC1A910")]
	public RPG()
	{
	}
}
[Token(Token = "0x200013B")]
public class RPGRocket : MonoBehaviour
{
	[Token(Token = "0x40006BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<Collider> ignoreRocketColliders;

	[Token(Token = "0x40006BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private bool lunched;

	[Token(Token = "0x40006C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float startVelocity;

	[Token(Token = "0x40006C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float lunchForce;

	[Token(Token = "0x40006C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool exploded;

	[Token(Token = "0x40006C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject explosionEffectPrefab;

	[Token(Token = "0x40006C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Rigidbody rigid;

	[Token(Token = "0x600043B")]
	[Address(RVA = "0xC1A920", Offset = "0xC1A920", VA = "0xC1A920")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600043C")]
	[Address(RVA = "0xC1AA78", Offset = "0xC1AA78", VA = "0xC1AA78")]
	private void Start()
	{
	}

	[Token(Token = "0x600043D")]
	[Address(RVA = "0xC1AAC8", Offset = "0xC1AAC8", VA = "0xC1AAC8")]
	private void Update()
	{
	}

	[Token(Token = "0x600043E")]
	[Address(RVA = "0xC1A77C", Offset = "0xC1A77C", VA = "0xC1A77C")]
	public void OnLunch()
	{
	}

	[Token(Token = "0x600043F")]
	[Address(RVA = "0xC1AAD8", Offset = "0xC1AAD8", VA = "0xC1AAD8")]
	private void WhileLunch()
	{
	}

	[Token(Token = "0x6000440")]
	[Address(RVA = "0xC1A930", Offset = "0xC1A930", VA = "0xC1A930")]
	private void OnExplode()
	{
	}

	[Token(Token = "0x6000441")]
	[Address(RVA = "0xC1AC28", Offset = "0xC1AC28", VA = "0xC1AC28")]
	public RPGRocket()
	{
	}
}
[Token(Token = "0x200013C")]
public class RPGRocketTriggerZone : MonoBehaviour
{
	[Token(Token = "0x40006C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RPG rpg;

	[Token(Token = "0x6000442")]
	[Address(RVA = "0xC1AC3C", Offset = "0xC1AC3C", VA = "0xC1AC3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000443")]
	[Address(RVA = "0xC1ADA4", Offset = "0xC1ADA4", VA = "0xC1ADA4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000444")]
	[Address(RVA = "0xC1AE74", Offset = "0xC1AE74", VA = "0xC1AE74")]
	private void GetChildRecursive(GameObject obj, List<Collider> list)
	{
	}

	[Token(Token = "0x6000445")]
	[Address(RVA = "0xC1B2AC", Offset = "0xC1B2AC", VA = "0xC1B2AC")]
	public RPGRocketTriggerZone()
	{
	}
}
[Token(Token = "0x200013D")]
public class AutoGun : MonoBehaviour
{
	[Token(Token = "0x40006C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Active;

	[Token(Token = "0x40006C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 StartPos;

	[Token(Token = "0x40006C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float FireRate;

	[Token(Token = "0x40006C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float Counter;

	[Token(Token = "0x40006CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject ZombieHead;

	[Token(Token = "0x6000446")]
	[Address(RVA = "0xC1B2B4", Offset = "0xC1B2B4", VA = "0xC1B2B4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000447")]
	[Address(RVA = "0xC1B2E4", Offset = "0xC1B2E4", VA = "0xC1B2E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000448")]
	[Address(RVA = "0xC1B430", Offset = "0xC1B430", VA = "0xC1B430")]
	public AutoGun()
	{
	}
}
[Token(Token = "0x200013E")]
public enum GunType
{
	[Token(Token = "0x40006CC")]
	Secondary,
	[Token(Token = "0x40006CD")]
	Primary
}
[Token(Token = "0x200013F")]
public class Gun : GunBase
{
	[Token(Token = "0x6000449")]
	[Address(RVA = "0xC1B448", Offset = "0xC1B448", VA = "0xC1B448")]
	public void SetFullBlock()
	{
	}

	[Token(Token = "0x600044A")]
	[Address(RVA = "0xC1B454", Offset = "0xC1B454", VA = "0xC1B454")]
	private void Start()
	{
	}

	[Token(Token = "0x600044B")]
	[Address(RVA = "0xC1B9B4", Offset = "0xC1B9B4", VA = "0xC1B9B4")]
	private void Update()
	{
	}

	[Token(Token = "0x600044C")]
	[Address(RVA = "0xC1C3CC", Offset = "0xC1C3CC", VA = "0xC1C3CC")]
	private void CheckCocking()
	{
	}

	[Token(Token = "0x600044D")]
	[Address(RVA = "0xC1C6A4", Offset = "0xC1C6A4", VA = "0xC1C6A4")]
	public void UnUseNPC()
	{
	}

	[Token(Token = "0x600044E")]
	[Address(RVA = "0xC1BCE4", Offset = "0xC1BCE4", VA = "0xC1BCE4")]
	private void Shoot()
	{
	}

	[Token(Token = "0x600044F")]
	[Address(RVA = "0xC1D338", Offset = "0xC1D338", VA = "0xC1D338")]
	public void RechargingHandlePulled()
	{
	}

	[Token(Token = "0x6000450")]
	[Address(RVA = "0xC1D828", Offset = "0xC1D828", VA = "0xC1D828")]
	public Gun()
	{
	}
}
[Token(Token = "0x2000140")]
public class GunBase : MonoBehaviour
{
	[Token(Token = "0x40006CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public int weaponID;

	[Token(Token = "0x40006CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public GunType type;

	[Token(Token = "0x40006D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool cocking;

	[Token(Token = "0x40006D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool unlimitedAmmo;

	[Token(Token = "0x40006D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Impulse")]
	public float bulletImpulse;

	[Token(Token = "0x40006D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float recoilFactor;

	[Token(Token = "0x40006D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Header("Firerate")]
	public bool automatic;

	[Token(Token = "0x40006D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float automaticFireRate;

	[Token(Token = "0x40006D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	[Header("Shot Config")]
	public LayerMask hitLayer;

	[Token(Token = "0x40006D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform barrel;

	[Token(Token = "0x40006D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[Header("State")]
	public bool usedByNPC;

	[Token(Token = "0x40006D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool bulletIn;

	[Token(Token = "0x40006DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x42")]
	public bool firstBulletEmpty;

	[Token(Token = "0x40006DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x43")]
	public bool spawn;

	[Token(Token = "0x40006DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("Dependecies")]
	public Prefabs bloodPrefabs;

	[Token(Token = "0x40006DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	protected YueInteractable interactable;

	[Token(Token = "0x40006DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool allBlocked;

	[Token(Token = "0x40006DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	[HideInInspector]
	public bool nodeTriggerInput;

	[Token(Token = "0x40006E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5A")]
	[HideInInspector]
	public bool magDrop;

	[Token(Token = "0x40006E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	protected float fireRateCounter;

	[Token(Token = "0x40006E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	protected VRInput vrInput;

	[Token(Token = "0x40006E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	protected float fTrigger;

	[Token(Token = "0x40006E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	protected bool trigger;

	[Token(Token = "0x40006E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
	protected bool blocked;

	[Token(Token = "0x40006E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GunMagazine magizine;

	[Token(Token = "0x40006E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[SerializeField]
	protected MagazineSnapZone magazineSnapZone;

	[Token(Token = "0x40006E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	protected GunAnimation gunAnimation;

	[Token(Token = "0x40006E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public List<GameObject> colliders;

	[Token(Token = "0x6000451")]
	[Address(RVA = "0xC1B780", Offset = "0xC1B780", VA = "0xC1B780")]
	public void Init()
	{
	}

	[Token(Token = "0x6000452")]
	[Address(RVA = "0xC1BBD8", Offset = "0xC1BBD8", VA = "0xC1BBD8")]
	protected void UpdateController()
	{
	}

	[Token(Token = "0x6000453")]
	[Address(RVA = "0xC1D840", Offset = "0xC1D840", VA = "0xC1D840")]
	public GunBase()
	{
	}
}
[Token(Token = "0x2000141")]
public class SoundManager : MonoBehaviour
{
	[Token(Token = "0x40006EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource audioSource;

	[Token(Token = "0x40006EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float VolumeFactor;

	[Token(Token = "0x40006EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float NoSound;

	[Token(Token = "0x40006ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float NoSoundTime;

	[Token(Token = "0x6000454")]
	[Address(RVA = "0xC1D858", Offset = "0xC1D858", VA = "0xC1D858")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000455")]
	[Address(RVA = "0xC1DA48", Offset = "0xC1DA48", VA = "0xC1DA48")]
	public void Update()
	{
	}

	[Token(Token = "0x6000456")]
	[Address(RVA = "0xC1DA7C", Offset = "0xC1DA7C", VA = "0xC1DA7C")]
	public SoundManager()
	{
	}
}
[Token(Token = "0x2000142")]
public class Granade : MonoBehaviour
{
	[Token(Token = "0x40006EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float TimeUntilExplode;

	[Token(Token = "0x40006EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Counter;

	[Token(Token = "0x40006F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool Triggerd;

	[Token(Token = "0x40006F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject ExplosionPrefab;

	[Token(Token = "0x6000457")]
	[Address(RVA = "0xC1DA94", Offset = "0xC1DA94", VA = "0xC1DA94")]
	public void OnTrigger()
	{
	}

	[Token(Token = "0x6000458")]
	[Address(RVA = "0xC1DAA0", Offset = "0xC1DAA0", VA = "0xC1DAA0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000459")]
	[Address(RVA = "0xC1DAF0", Offset = "0xC1DAF0", VA = "0xC1DAF0")]
	private void Explode()
	{
	}

	[Token(Token = "0x600045A")]
	[Address(RVA = "0xC1DC08", Offset = "0xC1DC08", VA = "0xC1DC08")]
	public Granade()
	{
	}
}
[Token(Token = "0x2000143")]
public class GranadeSplint : MonoBehaviour
{
	[Token(Token = "0x600045B")]
	[Address(RVA = "0xC1DC18", Offset = "0xC1DC18", VA = "0xC1DC18")]
	private void Update()
	{
	}

	[Token(Token = "0x600045C")]
	[Address(RVA = "0xC1DCC4", Offset = "0xC1DCC4", VA = "0xC1DCC4")]
	public void OnGrabbed()
	{
	}

	[Token(Token = "0x600045D")]
	[Address(RVA = "0xC1DD3C", Offset = "0xC1DD3C", VA = "0xC1DD3C")]
	public GranadeSplint()
	{
	}
}
[Token(Token = "0x2000144")]
public class DestroyOnNotPlaying : MonoBehaviour
{
	[Token(Token = "0x40006F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private AudioSource source;

	[Token(Token = "0x600045E")]
	[Address(RVA = "0xC1DD44", Offset = "0xC1DD44", VA = "0xC1DD44")]
	private void Start()
	{
	}

	[Token(Token = "0x600045F")]
	[Address(RVA = "0xC1DD94", Offset = "0xC1DD94", VA = "0xC1DD94")]
	private void Update()
	{
	}

	[Token(Token = "0x6000460")]
	[Address(RVA = "0xC1DE28", Offset = "0xC1DE28", VA = "0xC1DE28")]
	public DestroyOnNotPlaying()
	{
	}
}
[Token(Token = "0x2000145")]
public class EotechReticle : MonoBehaviour
{
	[Token(Token = "0x40006F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float max;

	[Token(Token = "0x40006F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform reticle;

	[Token(Token = "0x40006F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform reticleParent;

	[Token(Token = "0x40006F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cam;

	[Token(Token = "0x40006F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer reticleRenderer;

	[Token(Token = "0x6000461")]
	[Address(RVA = "0xC1DE30", Offset = "0xC1DE30", VA = "0xC1DE30")]
	private void Start()
	{
	}

	[Token(Token = "0x6000462")]
	[Address(RVA = "0xC1DE90", Offset = "0xC1DE90", VA = "0xC1DE90")]
	private void Update()
	{
	}

	[Token(Token = "0x6000463")]
	[Address(RVA = "0xC1DFAC", Offset = "0xC1DFAC", VA = "0xC1DFAC")]
	public EotechReticle()
	{
	}
}
[Token(Token = "0x2000146")]
public class GrabPositionVisible : MonoBehaviour
{
	[Token(Token = "0x40006F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float Radius;

	[Token(Token = "0x40006F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float FadeSpeed;

	[Token(Token = "0x40006FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float MaxAlpha;

	[Token(Token = "0x40006FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform LeftHand;

	[Token(Token = "0x40006FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform RightHand;

	[Token(Token = "0x40006FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MeshRenderer meshRenderer;

	[Token(Token = "0x40006FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private XRGrabInteractable grab;

	[Token(Token = "0x40006FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float Alpha;

	[Token(Token = "0x6000464")]
	[Address(RVA = "0xC1DFC0", Offset = "0xC1DFC0", VA = "0xC1DFC0")]
	private void Start()
	{
	}

	[Token(Token = "0x6000465")]
	[Address(RVA = "0xC1E0BC", Offset = "0xC1E0BC", VA = "0xC1E0BC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000466")]
	[Address(RVA = "0xC1E444", Offset = "0xC1E444", VA = "0xC1E444")]
	public GrabPositionVisible()
	{
	}
}
[Token(Token = "0x2000147")]
public class GunAnimation : MonoBehaviour
{
	[Token(Token = "0x4000700")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public AudioSource source;

	[Token(Token = "0x4000701")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioClip shot;

	[Token(Token = "0x4000702")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public AudioClip outOfAmmo;

	[Token(Token = "0x4000703")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform exitRot;

	[Token(Token = "0x4000704")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform exitLinear;

	[Token(Token = "0x4000705")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform caseExit;

	[Token(Token = "0x4000706")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject bullet;

	[Token(Token = "0x4000707")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject bullletCase;

	[Token(Token = "0x4000708")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject muzzleFlash;

	[Token(Token = "0x4000709")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject bulletTracer;

	[Token(Token = "0x400070A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public ParticleEffectsImpact impactEffects;

	[Token(Token = "0x400070B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Vector3 rotOffset;

	[Token(Token = "0x400070C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	public float rotSpeed;

	[Token(Token = "0x400070D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 linearOffset;

	[Token(Token = "0x400070E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	public float linearSpeed;

	[Token(Token = "0x400070F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Quaternion startRot;

	[Token(Token = "0x4000710")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Vector3 startPos;

	[Token(Token = "0x4000711")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private Gun gun;

	[Token(Token = "0x6000467")]
	[Address(RVA = "0xC1E460", Offset = "0xC1E460", VA = "0xC1E460")]
	private void Start()
	{
	}

	[Token(Token = "0x6000468")]
	[Address(RVA = "0xC1E548", Offset = "0xC1E548", VA = "0xC1E548")]
	private void Update()
	{
	}

	[Token(Token = "0x6000469")]
	[Address(RVA = "0xC1C894", Offset = "0xC1C894", VA = "0xC1C894")]
	public void BulletShot()
	{
	}

	[Token(Token = "0x600046A")]
	[Address(RVA = "0xC1C4BC", Offset = "0xC1C4BC", VA = "0xC1C4BC")]
	public void OutOfAmmoShot()
	{
	}

	[Token(Token = "0x600046B")]
	[Address(RVA = "0xC1D408", Offset = "0xC1D408", VA = "0xC1D408")]
	public void BulletPopped()
	{
	}

	[Token(Token = "0x600046C")]
	[Address(RVA = "0xC1CEE0", Offset = "0xC1CEE0", VA = "0xC1CEE0")]
	public void Impact(RaycastHit hit)
	{
	}

	[Token(Token = "0x600046D")]
	[Address(RVA = "0xC1E6C0", Offset = "0xC1E6C0", VA = "0xC1E6C0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600046E")]
	[Address(RVA = "0xC1E6E0", Offset = "0xC1E6E0", VA = "0xC1E6E0")]
	public GunAnimation()
	{
	}
}
[Token(Token = "0x2000148")]
public class GunMagazine : MonoBehaviour
{
	[Token(Token = "0x4000712")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int weaponID;

	[Token(Token = "0x4000713")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public int maxRoudns;

	[Token(Token = "0x4000714")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int rounds;

	[Token(Token = "0x4000715")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool taken;

	[Token(Token = "0x4000716")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bullet1;

	[Token(Token = "0x4000717")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject bullet2;

	[Token(Token = "0x4000718")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject enableBullet;

	[Token(Token = "0x4000719")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<Collider> ignoreColliders;

	[Token(Token = "0x600046F")]
	[Address(RVA = "0xC1E6F4", Offset = "0xC1E6F4", VA = "0xC1E6F4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000470")]
	[Address(RVA = "0xC1E7C4", Offset = "0xC1E7C4", VA = "0xC1E7C4")]
	public GunMagazine()
	{
	}
}
[Token(Token = "0x2000149")]
public class GunParticleEffectRef : MonoBehaviour
{
	[Token(Token = "0x400071A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject sand;

	[Token(Token = "0x400071B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject metal;

	[Token(Token = "0x400071C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject wood;

	[Token(Token = "0x400071D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject blood;

	[Token(Token = "0x6000471")]
	[Address(RVA = "0xC1E7D4", Offset = "0xC1E7D4", VA = "0xC1E7D4")]
	public GunParticleEffectRef()
	{
	}
}
[Token(Token = "0x200014A")]
public class KillSphere : MonoBehaviour
{
	[Token(Token = "0x6000472")]
	[Address(RVA = "0xC1E7DC", Offset = "0xC1E7DC", VA = "0xC1E7DC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000473")]
	[Address(RVA = "0xC1E7E0", Offset = "0xC1E7E0", VA = "0xC1E7E0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000474")]
	[Address(RVA = "0xC1E7E4", Offset = "0xC1E7E4", VA = "0xC1E7E4")]
	public void Kill()
	{
	}

	[Token(Token = "0x6000475")]
	[Address(RVA = "0xC1E7E8", Offset = "0xC1E7E8", VA = "0xC1E7E8")]
	public KillSphere()
	{
	}
}
[Token(Token = "0x200014B")]
public enum MagazineState
{
	[Token(Token = "0x400071F")]
	Nothing,
	[Token(Token = "0x4000720")]
	Hovering,
	[Token(Token = "0x4000721")]
	Railling,
	[Token(Token = "0x4000722")]
	Snapped
}
[Token(Token = "0x200014C")]
public class MagazineSnapZone : MonoBehaviour
{
	[Token(Token = "0x4000723")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MagazineState state;

	[Token(Token = "0x4000724")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float magazineDrag;

	[Token(Token = "0x4000725")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetPos;

	[Token(Token = "0x4000726")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public bool hovering;

	[Token(Token = "0x4000727")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	[HideInInspector]
	public bool isTaken;

	[Token(Token = "0x4000728")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public Gun gun;

	[Token(Token = "0x4000729")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GunMagazine magazine;

	[Token(Token = "0x400072A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ConfigurableJoint cJoint;

	[Token(Token = "0x400072B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<GunMagazine> collisionsMagazines;

	[Token(Token = "0x400072C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private List<GunMagazine> hoverdMagazines;

	[Token(Token = "0x6000476")]
	[Address(RVA = "0xC1E7F0", Offset = "0xC1E7F0", VA = "0xC1E7F0")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000477")]
	[Address(RVA = "0xC1EA38", Offset = "0xC1EA38", VA = "0xC1EA38")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000478")]
	[Address(RVA = "0xC1EB78", Offset = "0xC1EB78", VA = "0xC1EB78")]
	private void Start()
	{
	}

	[Token(Token = "0x6000479")]
	[Address(RVA = "0xC1EC40", Offset = "0xC1EC40", VA = "0xC1EC40")]
	private void Update()
	{
	}

	[Token(Token = "0x600047A")]
	[Address(RVA = "0xC1F010", Offset = "0xC1F010", VA = "0xC1F010")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600047B")]
	[Address(RVA = "0xC1F0FC", Offset = "0xC1F0FC", VA = "0xC1F0FC")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x600047C")]
	[Address(RVA = "0xC1ED08", Offset = "0xC1ED08", VA = "0xC1ED08")]
	private void CheckForHovering()
	{
	}

	[Token(Token = "0x600047D")]
	[Address(RVA = "0xC1ED84", Offset = "0xC1ED84", VA = "0xC1ED84")]
	private void CheckForRailling()
	{
	}

	[Token(Token = "0x600047E")]
	[Address(RVA = "0xC1EEDC", Offset = "0xC1EEDC", VA = "0xC1EEDC")]
	private void CheckForSnapping()
	{
	}

	[Token(Token = "0x600047F")]
	[Address(RVA = "0xC1EFE8", Offset = "0xC1EFE8", VA = "0xC1EFE8")]
	private void CheckForMagazineDrop()
	{
	}

	[Token(Token = "0x6000480")]
	[Address(RVA = "0xC1F734", Offset = "0xC1F734", VA = "0xC1F734")]
	private void OnMagazineSnapped()
	{
	}

	[Token(Token = "0x6000481")]
	[Address(RVA = "0xC1F2BC", Offset = "0xC1F2BC", VA = "0xC1F2BC")]
	private void OnMagazineRailEnterd()
	{
	}

	[Token(Token = "0x6000482")]
	[Address(RVA = "0xC1F1E8", Offset = "0xC1F1E8", VA = "0xC1F1E8")]
	private void OnMagazineRailExit()
	{
	}

	[Token(Token = "0x6000483")]
	[Address(RVA = "0xC1FA54", Offset = "0xC1FA54", VA = "0xC1FA54")]
	public void OnMagazineDrop()
	{
	}

	[Token(Token = "0x6000484")]
	[Address(RVA = "0xC20064", Offset = "0xC20064", VA = "0xC20064")]
	private void OppositeHandIntercollision(bool inter)
	{
	}

	[Token(Token = "0x6000485")]
	[Address(RVA = "0xC202FC", Offset = "0xC202FC", VA = "0xC202FC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000486")]
	[Address(RVA = "0xC20300", Offset = "0xC20300", VA = "0xC20300")]
	private void ClearLists()
	{
	}

	[Token(Token = "0x6000487")]
	[Address(RVA = "0xC1FDD0", Offset = "0xC1FDD0", VA = "0xC1FDD0")]
	private void InterCollision(bool c)
	{
	}

	[Token(Token = "0x6000488")]
	[Address(RVA = "0xC203A8", Offset = "0xC203A8", VA = "0xC203A8")]
	public MagazineSnapZone()
	{
	}
}
[Token(Token = "0x200014D")]
public class PlasmaBomb : MonoBehaviour
{
	[Token(Token = "0x400072D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float timeUntilExplode;

	[Token(Token = "0x400072E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float detornationRadius;

	[Token(Token = "0x400072F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float detornationStrength;

	[Token(Token = "0x4000730")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layerMask;

	[Token(Token = "0x4000731")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject effectPrefab;

	[Token(Token = "0x4000732")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Rigidbody> objectsInRange;

	[Token(Token = "0x4000733")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform flameEffect;

	[Token(Token = "0x4000734")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool triggerd;

	[Token(Token = "0x6000489")]
	[Address(RVA = "0xC203B8", Offset = "0xC203B8", VA = "0xC203B8")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x600048A")]
	[Address(RVA = "0xC20428", Offset = "0xC20428", VA = "0xC20428")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600048B")]
	[Address(RVA = "0xC20680", Offset = "0xC20680", VA = "0xC20680")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600048C")]
	[Address(RVA = "0xC207A8", Offset = "0xC207A8", VA = "0xC207A8")]
	private void Update()
	{
	}

	[Token(Token = "0x600048D")]
	[Address(RVA = "0xC20D98", Offset = "0xC20D98", VA = "0xC20D98")]
	public PlasmaBomb()
	{
	}
}
[Token(Token = "0x200014F")]
public class RechargingHandle : MonoBehaviour
{
	[Token(Token = "0x4000737")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float breakCollision;

	[Token(Token = "0x4000738")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float breakForce;

	[Token(Token = "0x4000739")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxChange;

	[Token(Token = "0x400073A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float offset;

	[Token(Token = "0x400073B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float max;

	[Token(Token = "0x400073C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float min;

	[Token(Token = "0x400073D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform visual;

	[Token(Token = "0x400073E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Vector3 cockingOffset;

	[Token(Token = "0x400073F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public AudioClip outClip;

	[Token(Token = "0x4000740")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public AudioClip inClip;

	[Token(Token = "0x4000741")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Gun gun;

	[Token(Token = "0x4000742")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 localStartPos;

	[Token(Token = "0x4000743")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private Quaternion localStartRotation;

	[Token(Token = "0x4000744")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool atRest;

	[Token(Token = "0x4000745")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7D")]
	private bool atMaxPulled;

	[Token(Token = "0x4000746")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Quaternion startRotation;

	[Token(Token = "0x4000747")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Rigidbody rb;

	[Token(Token = "0x4000748")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private AudioSource source;

	[Token(Token = "0x4000749")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private YueInteractable gunInteractable;

	[Token(Token = "0x400074A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private YueInteractable interactable;

	[Token(Token = "0x400074B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private float lockTimer;

	[Token(Token = "0x400074C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private float lockTimerCocking;

	[Token(Token = "0x400074D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	[HideInInspector]
	public bool isCocked;

	[Token(Token = "0x400074E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private ConfigurableJoint cJoint;

	[Token(Token = "0x400074F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	private FixedJoint fJoint;

	[Token(Token = "0x4000750")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Quaternion visualStartRot;

	[Token(Token = "0x6000491")]
	[Address(RVA = "0xC20E78", Offset = "0xC20E78", VA = "0xC20E78")]
	private void OnSnapTurned()
	{
	}

	[Token(Token = "0x6000492")]
	[Address(RVA = "0xC1C57C", Offset = "0xC1C57C", VA = "0xC1C57C")]
	public void OnCockHandle()
	{
	}

	[Token(Token = "0x6000493")]
	[Address(RVA = "0xC1C4E0", Offset = "0xC1C4E0", VA = "0xC1C4E0")]
	public void OnSnapHandle()
	{
	}

	[Token(Token = "0x6000494")]
	[Address(RVA = "0xC20EB4", Offset = "0xC20EB4", VA = "0xC20EB4")]
	public void OnGrabbed()
	{
	}

	[Token(Token = "0x6000495")]
	[Address(RVA = "0xC20EB8", Offset = "0xC20EB8", VA = "0xC20EB8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000496")]
	[Address(RVA = "0xC21158", Offset = "0xC21158", VA = "0xC21158")]
	private void Update()
	{
	}

	[Token(Token = "0x6000497")]
	[Address(RVA = "0xC21424", Offset = "0xC21424", VA = "0xC21424")]
	private void LateUpdate()
	{
	}

	[Token(Token = "0x6000498")]
	[Address(RVA = "0xC21604", Offset = "0xC21604", VA = "0xC21604")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x6000499")]
	[Address(RVA = "0xC21724", Offset = "0xC21724", VA = "0xC21724")]
	public RechargingHandle()
	{
	}
}
[Token(Token = "0x2000150")]
public class YueExplosion : MonoBehaviour
{
	[Token(Token = "0x4000751")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool explodeOnStart;

	[Token(Token = "0x4000752")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float radius;

	[Token(Token = "0x4000753")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float strength;

	[Token(Token = "0x4000754")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layerMask;

	[Token(Token = "0x4000755")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Collider[] colliderInRange;

	[Token(Token = "0x600049A")]
	[Address(RVA = "0xC21758", Offset = "0xC21758", VA = "0xC21758")]
	private void Update()
	{
	}

	[Token(Token = "0x600049B")]
	[Address(RVA = "0xC21778", Offset = "0xC21778", VA = "0xC21778")]
	private void Explode()
	{
	}

	[Token(Token = "0x600049C")]
	[Address(RVA = "0xC21B7C", Offset = "0xC21B7C", VA = "0xC21B7C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x600049D")]
	[Address(RVA = "0xC21BAC", Offset = "0xC21BAC", VA = "0xC21BAC")]
	public YueExplosion()
	{
	}
}
[Serializable]
[Token(Token = "0x2000151")]
public class YueKnifedObject
{
	[Token(Token = "0x4000756")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public GameObject mainObject;

	[Token(Token = "0x4000757")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Rigidbody body;

	[Token(Token = "0x4000758")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public ConfigurableJoint cJoint;

	[Token(Token = "0x4000759")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<Collider> allColliders;

	[Token(Token = "0x400075A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform penetrationPoint;

	[Token(Token = "0x400075B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float penetrationDepth;

	[Token(Token = "0x400075C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public YueActiveRagdollBone bone;

	[Token(Token = "0x400075D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private YueKnifePhysics knifePhysics;

	[Token(Token = "0x400075E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Rigidbody connectedBody;

	[Token(Token = "0x400075F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool toldNPC;

	[Token(Token = "0x600049E")]
	[Address(RVA = "0xC21BC0", Offset = "0xC21BC0", VA = "0xC21BC0")]
	public YueKnifedObject(Rigidbody main, Rigidbody knifeRigidbody)
	{
	}

	[Token(Token = "0x600049F")]
	[Address(RVA = "0xC21C80", Offset = "0xC21C80", VA = "0xC21C80")]
	public void UpdateKnifedObject()
	{
	}

	[Token(Token = "0x60004A0")]
	[Address(RVA = "0xC21C7C", Offset = "0xC21C7C", VA = "0xC21C7C")]
	public void InitKnifedObject()
	{
	}

	[Token(Token = "0x60004A1")]
	[Address(RVA = "0xC21FAC", Offset = "0xC21FAC", VA = "0xC21FAC")]
	public void AttachObject()
	{
	}

	[Token(Token = "0x60004A2")]
	[Address(RVA = "0xC22308", Offset = "0xC22308", VA = "0xC22308")]
	public void DettachObject()
	{
	}

	[Token(Token = "0x60004A3")]
	[Address(RVA = "0xC223F0", Offset = "0xC223F0", VA = "0xC223F0")]
	public void IgnoreColliders(List<Collider> ignoreList, bool ignore)
	{
	}

	[Token(Token = "0x60004A4")]
	[Address(RVA = "0xC21E48", Offset = "0xC21E48", VA = "0xC21E48")]
	private void GetAllColliders()
	{
	}

	[Token(Token = "0x60004A5")]
	[Address(RVA = "0xC22614", Offset = "0xC22614", VA = "0xC22614")]
	private void GetChildRecursive(GameObject obj, List<Collider> list)
	{
	}
}
[Token(Token = "0x2000152")]
public class YueKnifePhysics : MonoBehaviour
{
	[Token(Token = "0x4000760")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float frictionNPC;

	[Token(Token = "0x4000761")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float frictionWood;

	[Token(Token = "0x4000762")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layerMask;

	[Token(Token = "0x4000763")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject bloodPrefab;

	[Token(Token = "0x4000764")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform tip;

	[Token(Token = "0x4000765")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[SerializeField]
	private List<YueKnifedObject> triggerdObjects;

	[Token(Token = "0x4000766")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	private List<YueKnifedObject> connectedObjects;

	[Token(Token = "0x4000767")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[SerializeField]
	private List<Collider> bladeColliders;

	[Token(Token = "0x4000768")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Rigidbody body;

	[Token(Token = "0x60004A6")]
	[Address(RVA = "0xC22A4C", Offset = "0xC22A4C", VA = "0xC22A4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004A7")]
	[Address(RVA = "0xC22B08", Offset = "0xC22B08", VA = "0xC22B08")]
	private void Update()
	{
	}

	[Token(Token = "0x60004A8")]
	[Address(RVA = "0xC22C2C", Offset = "0xC22C2C", VA = "0xC22C2C")]
	public void OnTipEnter(Rigidbody enterdBody)
	{
	}

	[Token(Token = "0x60004A9")]
	[Address(RVA = "0xC22FB8", Offset = "0xC22FB8", VA = "0xC22FB8")]
	public void OnKnifeEnter(Rigidbody body)
	{
	}

	[Token(Token = "0x60004AA")]
	[Address(RVA = "0xC23398", Offset = "0xC23398", VA = "0xC23398")]
	public void OnTipExit(Rigidbody body)
	{
	}

	[Token(Token = "0x60004AB")]
	[Address(RVA = "0xC23588", Offset = "0xC23588", VA = "0xC23588")]
	public void OnKnifeExit(Rigidbody body)
	{
	}

	[Token(Token = "0x60004AC")]
	[Address(RVA = "0xC23790", Offset = "0xC23790", VA = "0xC23790")]
	public YueKnifePhysics()
	{
	}
}
[Token(Token = "0x2000153")]
public class YueKnifeTrigger : MonoBehaviour
{
	[Token(Token = "0x4000769")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool tip;

	[Token(Token = "0x400076A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool knife;

	[Token(Token = "0x400076B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public YueKnifePhysics knifePhysics;

	[Token(Token = "0x60004AD")]
	[Address(RVA = "0xC237A4", Offset = "0xC237A4", VA = "0xC237A4")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004AE")]
	[Address(RVA = "0xC238D4", Offset = "0xC238D4", VA = "0xC238D4")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004AF")]
	[Address(RVA = "0xC23A04", Offset = "0xC23A04", VA = "0xC23A04")]
	public YueKnifeTrigger()
	{
	}
}
[Token(Token = "0x2000154")]
public class Shuriken : MonoBehaviour
{
	[Token(Token = "0x400076C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	public float minImpulse;

	[Token(Token = "0x400076D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float breakingTorque;

	[Token(Token = "0x400076E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float breakingForce;

	[Token(Token = "0x400076F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layerMask;

	[Token(Token = "0x4000770")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Prefabs")]
	public GameObject bloodPrefab;

	[Token(Token = "0x4000771")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Colliders")]
	public List<Collider> allColliders;

	[Token(Token = "0x4000772")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<Collider> allIncommingColliders;

	[Token(Token = "0x4000773")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private FixedJoint fJoint;

	[Token(Token = "0x4000774")]
	private const float timeUntilReady = 0.2f;

	[Token(Token = "0x4000775")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float blockedCounter;

	[Token(Token = "0x4000776")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool blocked;

	[Token(Token = "0x4000777")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4D")]
	private bool collidersIgnored;

	[Token(Token = "0x60004B0")]
	[Address(RVA = "0xC23A0C", Offset = "0xC23A0C", VA = "0xC23A0C")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60004B1")]
	[Address(RVA = "0xC2407C", Offset = "0xC2407C", VA = "0xC2407C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B2")]
	[Address(RVA = "0xC2415C", Offset = "0xC2415C", VA = "0xC2415C")]
	private void IgnoreColliders(bool ignore)
	{
	}

	[Token(Token = "0x60004B3")]
	[Address(RVA = "0xC23C1C", Offset = "0xC23C1C", VA = "0xC23C1C")]
	private void OnShurikenStick(Collision collision)
	{
	}

	[Token(Token = "0x60004B4")]
	[Address(RVA = "0xC243B8", Offset = "0xC243B8", VA = "0xC243B8")]
	public Shuriken()
	{
	}
}
[Token(Token = "0x2000155")]
public class SimpleRotate : MonoBehaviour
{
	[Token(Token = "0x4000778")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int speed;

	[Token(Token = "0x60004B5")]
	[Address(RVA = "0xC243D4", Offset = "0xC243D4", VA = "0xC243D4")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B6")]
	[Address(RVA = "0xC24428", Offset = "0xC24428", VA = "0xC24428")]
	public SimpleRotate()
	{
	}
}
[Token(Token = "0x2000156")]
public enum FPSSetting
{
	[Token(Token = "0x400077A")]
	FPS72,
	[Token(Token = "0x400077B")]
	FPS90,
	[Token(Token = "0x400077C")]
	FPS120
}
[Token(Token = "0x2000157")]
public enum MaterialLayer
{
	[Token(Token = "0x400077E")]
	E1,
	[Token(Token = "0x400077F")]
	E2,
	[Token(Token = "0x4000780")]
	E3,
	[Token(Token = "0x4000781")]
	Player,
	[Token(Token = "0x4000782")]
	Water,
	[Token(Token = "0x4000783")]
	UI,
	[Token(Token = "0x4000784")]
	Grab,
	[Token(Token = "0x4000785")]
	Metal,
	[Token(Token = "0x4000786")]
	Wood,
	[Token(Token = "0x4000787")]
	Sand,
	[Token(Token = "0x4000788")]
	NPC
}
[Token(Token = "0x2000158")]
public class GameData : MonoBehaviour
{
	[Token(Token = "0x4000789")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Data Container")]
	public SaveDataContainer dataContainer;

	[Token(Token = "0x400078A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Player Information")]
	public PlayerInformation playerInfo;

	[Token(Token = "0x400078B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Game Progress")]
	public GameProgress gameProgress;

	[Token(Token = "0x400078C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Render Settings")]
	public bool setAntiAli;

	[Token(Token = "0x400078D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
	public bool fpsSet;

	[Token(Token = "0x400078E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public FPSSetting fpsSetting;

	[Token(Token = "0x400078F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[Header("Forced Save")]
	public bool forcedSave;

	[Token(Token = "0x4000790")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool sandboxMode;

	[Token(Token = "0x4000791")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int levelCount;

	[Token(Token = "0x4000792")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public int versionCode;

	[Token(Token = "0x4000793")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[HideInInspector]
	public int gameFPS;

	[Token(Token = "0x4000794")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private List<float> fps;

	[Token(Token = "0x4000795")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public List<GameObject> bloodSprays;

	[Token(Token = "0x4000796")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<GameObject> bloodDecays;

	[Token(Token = "0x4000797")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public Transform rig;

	[Token(Token = "0x4000798")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[HideInInspector]
	public Transform plattform;

	[Token(Token = "0x4000799")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public Vector3 relativePosition;

	[Token(Token = "0x400079A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	[HideInInspector]
	public Quaternion relativeRotation;

	[Token(Token = "0x400079B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	[HideInInspector]
	public bool firstLoad;

	[Token(Token = "0x400079C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public UnityEvent NewVersionDetected;

	[Token(Token = "0x400079D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public int dragThreshold;

	[Token(Token = "0x400079E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private EventSystem currectSystem;

	[Token(Token = "0x60004B7")]
	[Address(RVA = "0xC24430", Offset = "0xC24430", VA = "0xC24430")]
	private void Start()
	{
	}

	[Token(Token = "0x60004B8")]
	[Address(RVA = "0xC24C38", Offset = "0xC24C38", VA = "0xC24C38")]
	private void Update()
	{
	}

	[Token(Token = "0x60004B9")]
	[Address(RVA = "0xC24740", Offset = "0xC24740", VA = "0xC24740")]
	public void OnSceneLoaded(Scene scene, LoadSceneMode mode)
	{
	}

	[Token(Token = "0x60004BA")]
	[Address(RVA = "0xC24A9C", Offset = "0xC24A9C", VA = "0xC24A9C")]
	public void LoadContainer()
	{
	}

	[Token(Token = "0x60004BB")]
	[Address(RVA = "0xC24EC4", Offset = "0xC24EC4", VA = "0xC24EC4")]
	private void HandleFPS()
	{
	}

	[Token(Token = "0x60004BC")]
	[Address(RVA = "0xC2518C", Offset = "0xC2518C", VA = "0xC2518C")]
	private void CheckSetFixedTime()
	{
	}

	[Token(Token = "0x60004BD")]
	[Address(RVA = "0xC24EEC", Offset = "0xC24EEC", VA = "0xC24EEC")]
	private void CalculateFPS()
	{
	}

	[Token(Token = "0x60004BE")]
	[Address(RVA = "0xC24C18", Offset = "0xC24C18", VA = "0xC24C18")]
	public void SetSavedData()
	{
	}

	[Token(Token = "0x60004BF")]
	[Address(RVA = "0xC25228", Offset = "0xC25228", VA = "0xC25228")]
	public void SaveGameProgress()
	{
	}

	[Token(Token = "0x60004C0")]
	[Address(RVA = "0xC2524C", Offset = "0xC2524C", VA = "0xC2524C")]
	public void SavePlayerInformation()
	{
	}

	[Token(Token = "0x60004C1")]
	[Address(RVA = "0xC25270", Offset = "0xC25270", VA = "0xC25270")]
	public GameData()
	{
	}
}
[Serializable]
[Token(Token = "0x2000159")]
public class SaveDataContainer
{
	[Token(Token = "0x400079F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public PlayerInformation playerInformation;

	[Token(Token = "0x40007A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameProgress progress;

	[Token(Token = "0x60004C2")]
	[Address(RVA = "0xC25308", Offset = "0xC25308", VA = "0xC25308")]
	public SaveDataContainer(SaveDataContainer container)
	{
	}
}
[Serializable]
[Token(Token = "0x200015A")]
public class PlayerInformation
{
	[Token(Token = "0x40007A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float playerHeight;

	[Token(Token = "0x40007A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public float worldScale;

	[Token(Token = "0x40007A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool snapTurn;

	[Token(Token = "0x40007A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float rotationSpeed;

	[Token(Token = "0x40007A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool controllerDrift;

	[Token(Token = "0x40007A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Inventory inventory;

	[Token(Token = "0x40007A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool inventorySwap;

	[Token(Token = "0x40007A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public int versionCode;

	[Token(Token = "0x60004C3")]
	[Address(RVA = "0xC2533C", Offset = "0xC2533C", VA = "0xC2533C")]
	public PlayerInformation()
	{
	}
}
[Serializable]
[Token(Token = "0x200015B")]
public class Inventory
{
	[Token(Token = "0x40007A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string secondaryID;

	[Token(Token = "0x40007AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string primary1ID;

	[Token(Token = "0x40007AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string primary2ID;

	[Token(Token = "0x60004C4")]
	[Address(RVA = "0xC2536C", Offset = "0xC2536C", VA = "0xC2536C")]
	public Inventory()
	{
	}
}
[Serializable]
[Token(Token = "0x200015C")]
public class GameProgress
{
	[Token(Token = "0x40007AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public int level;

	[Token(Token = "0x60004C5")]
	[Address(RVA = "0xC253C0", Offset = "0xC253C0", VA = "0xC253C0")]
	public GameProgress()
	{
	}
}
[Token(Token = "0x200015D")]
public static class SaveSystem
{
	[Token(Token = "0x60004C6")]
	[Address(RVA = "0xC24AB4", Offset = "0xC24AB4", VA = "0xC24AB4")]
	public static void SavePlayer(SaveDataContainer container)
	{
	}

	[Token(Token = "0x60004C7")]
	[Address(RVA = "0xC24920", Offset = "0xC24920", VA = "0xC24920")]
	public static SaveDataContainer LoadPlayer()
	{
		return null;
	}
}
[Token(Token = "0x200015E")]
public class HolsterdObject : MonoBehaviour
{
	[Token(Token = "0x40007AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string inventoryName;

	[Token(Token = "0x60004C8")]
	[Address(RVA = "0xC253C8", Offset = "0xC253C8", VA = "0xC253C8")]
	public HolsterdObject()
	{
	}
}
[Token(Token = "0x200015F")]
public class InventoryAnimation : MonoBehaviour
{
	[Token(Token = "0x40007AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform dot;

	[Token(Token = "0x40007AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x40007B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool visible;

	[Token(Token = "0x40007B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int step;

	[Token(Token = "0x40007B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float speed;

	[Token(Token = "0x40007B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float fadeSpeed;

	[Token(Token = "0x40007B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float radius;

	[Token(Token = "0x40007B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public int maxPoints;

	[Token(Token = "0x40007B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float position;

	[Token(Token = "0x40007B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private float alpha;

	[Token(Token = "0x40007B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private int index;

	[Token(Token = "0x40007B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float counter;

	[Token(Token = "0x40007BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float setTime;

	[Token(Token = "0x40007BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private List<Vector3> positions;

	[Token(Token = "0x40007BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Material mat;

	[Token(Token = "0x60004C9")]
	[Address(RVA = "0xC25418", Offset = "0xC25418", VA = "0xC25418")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CA")]
	[Address(RVA = "0xC254A0", Offset = "0xC254A0", VA = "0xC254A0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004CB")]
	[Address(RVA = "0xC25880", Offset = "0xC25880", VA = "0xC25880")]
	public InventoryAnimation()
	{
	}
}
[Token(Token = "0x2000160")]
public class InventoryBag : MonoBehaviour
{
	[Token(Token = "0x40007BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public string inventoryName;

	[Token(Token = "0x40007BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InventoryPosition position;

	[Token(Token = "0x40007BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject holsterdObject;

	[Token(Token = "0x40007C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ItemInformation> hoverdItems;

	[Token(Token = "0x40007C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<ItemInformation> enterdItems;

	[Token(Token = "0x40007C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<YueInteractor> hoverdInteractors;

	[Token(Token = "0x40007C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public InventoryAnimation circleAnimation;

	[Token(Token = "0x40007C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private YueSpawnablesHandler handler;

	[Token(Token = "0x40007C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private float hapticCounter;

	[Token(Token = "0x40007C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float hapticInterval;

	[Token(Token = "0x40007C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[HideInInspector]
	public GameObject prefab;

	[Token(Token = "0x60004CC")]
	[Address(RVA = "0xC258C0", Offset = "0xC258C0", VA = "0xC258C0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004CD")]
	[Address(RVA = "0xC25A3C", Offset = "0xC25A3C", VA = "0xC25A3C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004CE")]
	[Address(RVA = "0xC25D4C", Offset = "0xC25D4C", VA = "0xC25D4C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004CF")]
	[Address(RVA = "0xC25F88", Offset = "0xC25F88", VA = "0xC25F88")]
	private void Update()
	{
	}

	[Token(Token = "0x60004D0")]
	[Address(RVA = "0xC25FB8", Offset = "0xC25FB8", VA = "0xC25FB8")]
	private void CheckExtract()
	{
	}

	[Token(Token = "0x60004D1")]
	[Address(RVA = "0xC260E8", Offset = "0xC260E8", VA = "0xC260E8")]
	private void CheckHolster()
	{
	}

	[Token(Token = "0x60004D2")]
	[Address(RVA = "0xC26600", Offset = "0xC26600", VA = "0xC26600")]
	private void OnHolsterItem(ItemInformation item)
	{
	}

	[Token(Token = "0x60004D3")]
	[Address(RVA = "0xC26380", Offset = "0xC26380", VA = "0xC26380")]
	private void OnExtractItem(YueInteractor interactor)
	{
	}

	[Token(Token = "0x60004D4")]
	[Address(RVA = "0xC26254", Offset = "0xC26254", VA = "0xC26254")]
	private void UpdateHapticFeedback()
	{
	}

	[Token(Token = "0x60004D5")]
	[Address(RVA = "0xC267B0", Offset = "0xC267B0", VA = "0xC267B0")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x60004D6")]
	[Address(RVA = "0xC26824", Offset = "0xC26824", VA = "0xC26824")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60004D7")]
	[Address(RVA = "0xC26828", Offset = "0xC26828", VA = "0xC26828")]
	public InventoryBag()
	{
	}
}
[Token(Token = "0x2000161")]
public enum InventoryPosition
{
	[Token(Token = "0x40007C9")]
	Magazine,
	[Token(Token = "0x40007CA")]
	Secondary,
	[Token(Token = "0x40007CB")]
	Primary1,
	[Token(Token = "0x40007CC")]
	Primary2
}
[Token(Token = "0x2000162")]
public class InventorySystem : MonoBehaviour
{
	[Token(Token = "0x40007CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryBag magazine;

	[Token(Token = "0x40007CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public InventoryBag secondary;

	[Token(Token = "0x40007CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InventoryBag primary1;

	[Token(Token = "0x40007D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public InventoryBag primary2;

	[Token(Token = "0x40007D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameData gameData;

	[Token(Token = "0x40007D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Inventory inventory;

	[Token(Token = "0x60004D8")]
	[Address(RVA = "0xC26884", Offset = "0xC26884", VA = "0xC26884")]
	private void Start()
	{
	}

	[Token(Token = "0x60004D9")]
	[Address(RVA = "0xC268FC", Offset = "0xC268FC", VA = "0xC268FC")]
	private void OnDataLoaded()
	{
	}

	[Token(Token = "0x60004DA")]
	[Address(RVA = "0xC26900", Offset = "0xC26900", VA = "0xC26900")]
	public void UpdateInventorySwap()
	{
	}

	[Token(Token = "0x60004DB")]
	[Address(RVA = "0xC269DC", Offset = "0xC269DC", VA = "0xC269DC")]
	public InventorySystem()
	{
	}
}
[Token(Token = "0x2000163")]
public class ItemInformation : MonoBehaviour
{
	[Token(Token = "0x40007D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public InventoryPosition slot;

	[Token(Token = "0x40007D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public string itemName;

	[Token(Token = "0x40007D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Material iconMaterial;

	[Token(Token = "0x40007D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject preview;

	[Token(Token = "0x40007D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool isHolsterable;

	[Token(Token = "0x40007D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool isGun;

	[Token(Token = "0x60004DC")]
	[Address(RVA = "0xC269E4", Offset = "0xC269E4", VA = "0xC269E4")]
	private void Start()
	{
	}

	[Token(Token = "0x60004DD")]
	[Address(RVA = "0xC26A7C", Offset = "0xC26A7C", VA = "0xC26A7C")]
	public ItemInformation()
	{
	}
}
[Token(Token = "0x2000164")]
public class EnemySpawnTriggerZone : MonoBehaviour
{
	[Token(Token = "0x40007D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float blockTime;

	[Token(Token = "0x40007DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform spawnPosition;

	[Token(Token = "0x40007DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject spawnPrefab;

	[Token(Token = "0x40007DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float blockCounter;

	[Token(Token = "0x40007DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject lastSpawnedZombie;

	[Token(Token = "0x60004DE")]
	[Address(RVA = "0xC26A8C", Offset = "0xC26A8C", VA = "0xC26A8C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004DF")]
	[Address(RVA = "0xC26C0C", Offset = "0xC26C0C", VA = "0xC26C0C")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E0")]
	[Address(RVA = "0xC26AFC", Offset = "0xC26AFC", VA = "0xC26AFC")]
	private void OnZoneTriggerd()
	{
	}

	[Token(Token = "0x60004E1")]
	[Address(RVA = "0xC26C44", Offset = "0xC26C44", VA = "0xC26C44")]
	public EnemySpawnTriggerZone()
	{
	}
}
[Token(Token = "0x2000165")]
public class SceneLoadEffect : MonoBehaviour
{
	[Token(Token = "0x40007DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool darkMode;

	[Token(Token = "0x40007DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool mainMenu;

	[Token(Token = "0x40007E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform scaler;

	[Token(Token = "0x40007E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform button;

	[Token(Token = "0x40007E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject spherePrefab;

	[Token(Token = "0x40007E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ParticleSystem smoke;

	[Token(Token = "0x40007E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public ParticleSystem lightning;

	[Token(Token = "0x40007E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float maxScale;

	[Token(Token = "0x40007E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float textureSpeed;

	[Token(Token = "0x40007E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject refelctionProbeWhite;

	[Token(Token = "0x40007E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject refelctionProbeBlack;

	[Token(Token = "0x40007E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject colliders;

	[Token(Token = "0x40007EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Material buttonMat;

	[Token(Token = "0x40007EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public Material tile;

	[Token(Token = "0x40007EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Material floor;

	[Token(Token = "0x40007ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Material fadeLayer;

	[Token(Token = "0x40007EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Material solidLayer;

	[Token(Token = "0x40007EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public Material numMat;

	[Token(Token = "0x40007F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	public float scalingSpeed;

	[Token(Token = "0x40007F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	public float scalerFactor;

	[Token(Token = "0x40007F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public float minScale;

	[Token(Token = "0x40007F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
	public bool animationOut;

	[Token(Token = "0x40007F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA5")]
	public bool animationIn;

	[Token(Token = "0x40007F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA6")]
	public bool switcher;

	[Token(Token = "0x40007F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public float progress;

	[Token(Token = "0x40007F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public AudioClip outClip;

	[Token(Token = "0x40007F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public AudioClip inClip;

	[Token(Token = "0x40007F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	private AudioSource source;

	[Token(Token = "0x40007FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public MenuPosition menu;

	[Token(Token = "0x40007FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	private Vector3 startButtonPos;

	[Token(Token = "0x40007FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
	private bool loading;

	[Token(Token = "0x40007FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	private float blinkCounter;

	[Token(Token = "0x40007FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
	private bool blinkOn;

	[Token(Token = "0x40007FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private float numIntensity;

	[Token(Token = "0x4000800")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float maxNumIntensity;

	[Token(Token = "0x4000801")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private bool dontTurnTransparent;

	[Token(Token = "0x4000802")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
	private PlayerStatus playerStatus;

	[Token(Token = "0x60004E2")]
	[Address(RVA = "0xC26C54", Offset = "0xC26C54", VA = "0xC26C54")]
	private void Start()
	{
	}

	[Token(Token = "0x60004E3")]
	[Address(RVA = "0xC26F54", Offset = "0xC26F54", VA = "0xC26F54")]
	private void Update()
	{
	}

	[Token(Token = "0x60004E4")]
	[Address(RVA = "0xC27460", Offset = "0xC27460", VA = "0xC27460")]
	private void UpdateMaterials()
	{
	}

	[Token(Token = "0x60004E5")]
	[Address(RVA = "0xC275F8", Offset = "0xC275F8", VA = "0xC275F8")]
	private void OnFullyClosed()
	{
	}

	[Token(Token = "0x60004E6")]
	[Address(RVA = "0xC27334", Offset = "0xC27334", VA = "0xC27334")]
	private void OnFullyOpend()
	{
	}

	[Token(Token = "0x60004E7")]
	[Address(RVA = "0xC276F4", Offset = "0xC276F4", VA = "0xC276F4")]
	public void ChangeState()
	{
	}

	[Token(Token = "0x60004E8")]
	[Address(RVA = "0xC26D7C", Offset = "0xC26D7C", VA = "0xC26D7C")]
	public void SwitchColorTheme(bool dMode)
	{
	}

	[Token(Token = "0x60004E9")]
	[Address(RVA = "0xC2779C", Offset = "0xC2779C", VA = "0xC2779C")]
	public void SetLoading()
	{
	}

	[Token(Token = "0x60004EA")]
	[Address(RVA = "0xC277C8", Offset = "0xC277C8", VA = "0xC277C8")]
	public SceneLoadEffect()
	{
	}
}
[Token(Token = "0x2000166")]
public class TeleportTrigger : MonoBehaviour
{
	[Token(Token = "0x4000803")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public PlayerStatus stats;

	[Token(Token = "0x60004EB")]
	[Address(RVA = "0xC287EC", Offset = "0xC287EC", VA = "0xC287EC")]
	private void Start()
	{
	}

	[Token(Token = "0x60004EC")]
	[Address(RVA = "0xC28860", Offset = "0xC28860", VA = "0xC28860")]
	private void Update()
	{
	}

	[Token(Token = "0x60004ED")]
	[Address(RVA = "0xC2890C", Offset = "0xC2890C", VA = "0xC2890C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x60004EE")]
	[Address(RVA = "0xC2897C", Offset = "0xC2897C", VA = "0xC2897C")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x60004EF")]
	[Address(RVA = "0xC289E8", Offset = "0xC289E8", VA = "0xC289E8")]
	public TeleportTrigger()
	{
	}
}
[Token(Token = "0x2000167")]
public class InitCamToCanvas : MonoBehaviour
{
	[Token(Token = "0x60004F0")]
	[Address(RVA = "0xC289F0", Offset = "0xC289F0", VA = "0xC289F0")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F1")]
	[Address(RVA = "0xC28AA0", Offset = "0xC28AA0", VA = "0xC28AA0")]
	public InitCamToCanvas()
	{
	}
}
[Token(Token = "0x2000168")]
public class MenuMovement : MonoBehaviour
{
	[Token(Token = "0x60004F2")]
	[Address(RVA = "0xC28AA8", Offset = "0xC28AA8", VA = "0xC28AA8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F3")]
	[Address(RVA = "0xC28AAC", Offset = "0xC28AAC", VA = "0xC28AAC")]
	private void Update()
	{
	}

	[Token(Token = "0x60004F4")]
	[Address(RVA = "0xC28AB0", Offset = "0xC28AB0", VA = "0xC28AB0")]
	public MenuMovement()
	{
	}
}
[Token(Token = "0x2000169")]
public class MenuPosition : MonoBehaviour
{
	[Token(Token = "0x4000804")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform scaler;

	[Token(Token = "0x4000805")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool dontMove;

	[Token(Token = "0x4000806")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool mainMenu;

	[Token(Token = "0x4000807")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float openSpeed;

	[Token(Token = "0x4000808")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool menuOpen;

	[Token(Token = "0x4000809")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float maxDistance;

	[Token(Token = "0x400080A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float minDistance;

	[Token(Token = "0x400080B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float speed;

	[Token(Token = "0x400080C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float upOffset;

	[Token(Token = "0x400080D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnMenuOpen;

	[Token(Token = "0x400080E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnMenuClosed;

	[Token(Token = "0x400080F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform headset;

	[Token(Token = "0x4000810")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Transform rig;

	[Token(Token = "0x4000811")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private VRInput vrInput;

	[Token(Token = "0x4000812")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private bool inputBlocked;

	[Token(Token = "0x4000813")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float scale;

	[Token(Token = "0x4000814")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private GameData gameData;

	[Token(Token = "0x60004F5")]
	[Address(RVA = "0xC28AB8", Offset = "0xC28AB8", VA = "0xC28AB8")]
	private void Start()
	{
	}

	[Token(Token = "0x60004F6")]
	[Address(RVA = "0xC28C60", Offset = "0xC28C60", VA = "0xC28C60")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60004F7")]
	[Address(RVA = "0xC29200", Offset = "0xC29200", VA = "0xC29200")]
	private void SetStartPosition()
	{
	}

	[Token(Token = "0x60004F8")]
	[Address(RVA = "0xC290B0", Offset = "0xC290B0", VA = "0xC290B0")]
	private void SetScale()
	{
	}

	[Token(Token = "0x60004F9")]
	[Address(RVA = "0xC28C84", Offset = "0xC28C84", VA = "0xC28C84")]
	private void SetPosition()
	{
	}

	[Token(Token = "0x60004FA")]
	[Address(RVA = "0xC292CC", Offset = "0xC292CC", VA = "0xC292CC")]
	public void ExitMenu()
	{
	}

	[Token(Token = "0x60004FB")]
	[Address(RVA = "0xC292F0", Offset = "0xC292F0", VA = "0xC292F0")]
	public void OpenMenu(bool o)
	{
	}

	[Token(Token = "0x60004FC")]
	[Address(RVA = "0xC29320", Offset = "0xC29320", VA = "0xC29320")]
	public MenuPosition()
	{
	}
}
[Token(Token = "0x200016A")]
public class MenuRef : MonoBehaviour
{
	[Token(Token = "0x4000815")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text fpsText;

	[Token(Token = "0x4000816")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool main;

	[Token(Token = "0x4000817")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject mainMenu;

	[Token(Token = "0x4000818")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject physicsConfig;

	[Token(Token = "0x4000819")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameData gameData;

	[Token(Token = "0x400081A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public SceneLoadEffect effect;

	[Token(Token = "0x400081B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float loadingCounter;

	[Token(Token = "0x60004FD")]
	[Address(RVA = "0xC2933C", Offset = "0xC2933C", VA = "0xC2933C")]
	private void Start()
	{
	}

	[Token(Token = "0x60004FE")]
	[Address(RVA = "0xC293B0", Offset = "0xC293B0", VA = "0xC293B0")]
	private void Update()
	{
	}

	[Token(Token = "0x60004FF")]
	[Address(RVA = "0xC29454", Offset = "0xC29454", VA = "0xC29454")]
	public void LoadSceneByIndex(int index)
	{
	}

	[Token(Token = "0x6000500")]
	[Address(RVA = "0xC29588", Offset = "0xC29588", VA = "0xC29588")]
	public MenuRef()
	{
	}
}
[Token(Token = "0x200016B")]
public class SaveAsMenu : MonoBehaviour
{
	[Token(Token = "0x6000501")]
	[Address(RVA = "0xC29598", Offset = "0xC29598", VA = "0xC29598")]
	private void Start()
	{
	}

	[Token(Token = "0x6000502")]
	[Address(RVA = "0xC2959C", Offset = "0xC2959C", VA = "0xC2959C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000503")]
	[Address(RVA = "0xC295A0", Offset = "0xC295A0", VA = "0xC295A0")]
	public SaveAsMenu()
	{
	}
}
[Token(Token = "0x200016C")]
public class SaveBox : MonoBehaviour
{
	[Token(Token = "0x400081C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Dependencies")]
	public Material material;

	[Token(Token = "0x400081D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float speed;

	[Token(Token = "0x400081E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text keyboardInput;

	[Token(Token = "0x400081F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("References")]
	public List<string> allNames;

	[Token(Token = "0x4000820")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> hovers;

	[Token(Token = "0x4000821")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public List<GameObject> container;

	[Token(Token = "0x4000822")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	[Header("UI")]
	public GameObject UIPrefab;

	[Token(Token = "0x4000823")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform start;

	[Token(Token = "0x4000824")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float offset;

	[Token(Token = "0x4000825")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Scrollbar scrollbar;

	[Token(Token = "0x4000826")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private List<GameObject> UIElements;

	[Token(Token = "0x4000827")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public GameObject containerObject;

	[Token(Token = "0x6000504")]
	[Address(RVA = "0xC295A8", Offset = "0xC295A8", VA = "0xC295A8")]
	private void UpdateContainer(GameObject enterd)
	{
	}

	[Token(Token = "0x6000505")]
	[Address(RVA = "0xC2981C", Offset = "0xC2981C", VA = "0xC2981C")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000506")]
	[Address(RVA = "0xC2A090", Offset = "0xC2A090", VA = "0xC2A090")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000507")]
	[Address(RVA = "0xC2A314", Offset = "0xC2A314", VA = "0xC2A314")]
	private void Start()
	{
	}

	[Token(Token = "0x6000508")]
	[Address(RVA = "0xC2A560", Offset = "0xC2A560", VA = "0xC2A560")]
	private void Update()
	{
	}

	[Token(Token = "0x6000509")]
	[Address(RVA = "0xC2A600", Offset = "0xC2A600", VA = "0xC2A600")]
	public void OnSave()
	{
	}

	[Token(Token = "0x600050A")]
	[Address(RVA = "0xC2AAF8", Offset = "0xC2AAF8", VA = "0xC2AAF8")]
	public void LoadByString(string buildName)
	{
	}

	[Token(Token = "0x600050B")]
	[Address(RVA = "0xC29B70", Offset = "0xC29B70", VA = "0xC29B70")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600050C")]
	[Address(RVA = "0xC2AC74", Offset = "0xC2AC74", VA = "0xC2AC74")]
	public SaveBox()
	{
	}
}
[Token(Token = "0x200016E")]
public class SaveBoxFileManager : MonoBehaviour
{
	[Token(Token = "0x400082D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<string> allNames;

	[Token(Token = "0x400082E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Dependencies")]
	public Scrollbar scrollbar;

	[Token(Token = "0x400082F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject UIPrefab;

	[Token(Token = "0x4000830")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform start;

	[Token(Token = "0x4000831")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float offset;

	[Token(Token = "0x4000832")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> UIElements;

	[Token(Token = "0x6000513")]
	[Address(RVA = "0xC2AE6C", Offset = "0xC2AE6C", VA = "0xC2AE6C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000514")]
	[Address(RVA = "0xC2AEE4", Offset = "0xC2AEE4", VA = "0xC2AEE4")]
	public void UpdateList()
	{
	}

	[Token(Token = "0x6000515")]
	[Address(RVA = "0xC2B4D0", Offset = "0xC2B4D0", VA = "0xC2B4D0")]
	public void DeleteByString(string fileName)
	{
	}

	[Token(Token = "0x6000516")]
	[Address(RVA = "0xC2B5D4", Offset = "0xC2B5D4", VA = "0xC2B5D4")]
	public SaveBoxFileManager()
	{
	}
}
[Token(Token = "0x200016F")]
public class SaveFileBoxItem : MonoBehaviour
{
	[Token(Token = "0x4000833")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnDeleteObject;

	[Token(Token = "0x4000834")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text nameText;

	[Token(Token = "0x4000835")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int index;

	[Token(Token = "0x6000517")]
	[Address(RVA = "0xC2B5E8", Offset = "0xC2B5E8", VA = "0xC2B5E8")]
	public void OnButtonPressed()
	{
	}

	[Token(Token = "0x6000518")]
	[Address(RVA = "0xC2B6B0", Offset = "0xC2B6B0", VA = "0xC2B6B0")]
	public void OnLoadPressed()
	{
	}

	[Token(Token = "0x6000519")]
	[Address(RVA = "0xC2B774", Offset = "0xC2B774", VA = "0xC2B774")]
	public SaveFileBoxItem()
	{
	}
}
[Token(Token = "0x2000170")]
public class SaveLoadTest : MonoBehaviour
{
	[Token(Token = "0x4000836")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x4000837")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool save;

	[Token(Token = "0x4000838")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool load;

	[Token(Token = "0x600051A")]
	[Address(RVA = "0xC2B77C", Offset = "0xC2B77C", VA = "0xC2B77C")]
	private void Update()
	{
	}

	[Token(Token = "0x600051B")]
	[Address(RVA = "0xC2B868", Offset = "0xC2B868", VA = "0xC2B868")]
	private void OnSave()
	{
	}

	[Token(Token = "0x600051C")]
	[Address(RVA = "0xC2B7B4", Offset = "0xC2B7B4", VA = "0xC2B7B4")]
	private void OnLoad()
	{
	}

	[Token(Token = "0x600051D")]
	[Address(RVA = "0xC2B8D0", Offset = "0xC2B8D0", VA = "0xC2B8D0")]
	public SaveLoadTest()
	{
	}
}
[Token(Token = "0x2000171")]
[DisallowMultipleComponent]
public class Outline : MonoBehaviour
{
	[Token(Token = "0x2000172")]
	public enum Mode
	{
		[Token(Token = "0x4000845")]
		OutlineAll,
		[Token(Token = "0x4000846")]
		OutlineVisible,
		[Token(Token = "0x4000847")]
		OutlineHidden,
		[Token(Token = "0x4000848")]
		OutlineAndSilhouette,
		[Token(Token = "0x4000849")]
		SilhouetteOnly
	}

	[Serializable]
	[Token(Token = "0x2000173")]
	private class ListVector3
	{
		[Token(Token = "0x400084A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public List<Vector3> data;

		[Token(Token = "0x6000531")]
		[Address(RVA = "0xC2D240", Offset = "0xC2D240", VA = "0xC2D240")]
		public ListVector3()
		{
		}
	}

	[Token(Token = "0x4000839")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
	private static HashSet<Mesh> registeredMeshes;

	[Token(Token = "0x400083A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Mode outlineMode;

	[Token(Token = "0x400083B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private Color outlineColor;

	[Token(Token = "0x400083C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	[Range(0f, 10f)]
	[SerializeField]
	private float outlineWidth;

	[Token(Token = "0x400083D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[SerializeField]
	[Header("Optional")]
	[Tooltip("Precompute enabled: Per-vertex calculations are performed in the editor and serialized with the object. Precompute disabled: Per-vertex calculations are performed at runtime in Awake(). This may cause a pause for large meshes.")]
	private bool precomputeOutline;

	[Token(Token = "0x400083E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	[SerializeField]
	private List<Mesh> bakeKeys;

	[Token(Token = "0x400083F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	[SerializeField]
	[HideInInspector]
	private List<ListVector3> bakeValues;

	[Token(Token = "0x4000840")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Renderer[] renderers;

	[Token(Token = "0x4000841")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Material outlineMaskMaterial;

	[Token(Token = "0x4000842")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Material outlineFillMaterial;

	[Token(Token = "0x4000843")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private bool needsUpdate;

	[Token(Token = "0x1700003C")]
	public Mode OutlineMode
	{
		[Token(Token = "0x600051E")]
		[Address(RVA = "0xC2B8D8", Offset = "0xC2B8D8", VA = "0xC2B8D8")]
		get
		{
			return default(Mode);
		}
		[Token(Token = "0x600051F")]
		[Address(RVA = "0xC2B8E0", Offset = "0xC2B8E0", VA = "0xC2B8E0")]
		set
		{
		}
	}

	[Token(Token = "0x1700003D")]
	public Color OutlineColor
	{
		[Token(Token = "0x6000520")]
		[Address(RVA = "0xC2B8F0", Offset = "0xC2B8F0", VA = "0xC2B8F0")]
		get
		{
			return default(Color);
		}
		[Token(Token = "0x6000521")]
		[Address(RVA = "0xC2B8FC", Offset = "0xC2B8FC", VA = "0xC2B8FC")]
		set
		{
		}
	}

	[Token(Token = "0x1700003E")]
	public float OutlineWidth
	{
		[Token(Token = "0x6000522")]
		[Address(RVA = "0xC2B910", Offset = "0xC2B910", VA = "0xC2B910")]
		get
		{
			return default(float);
		}
		[Token(Token = "0x6000523")]
		[Address(RVA = "0xC2B918", Offset = "0xC2B918", VA = "0xC2B918")]
		set
		{
		}
	}

	[Token(Token = "0x6000524")]
	[Address(RVA = "0xC2B928", Offset = "0xC2B928", VA = "0xC2B928")]
	private void Awake()
	{
	}

	[Token(Token = "0x6000525")]
	[Address(RVA = "0xC2BE80", Offset = "0xC2BE80", VA = "0xC2BE80")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000526")]
	[Address(RVA = "0xC2C028", Offset = "0xC2C028", VA = "0xC2C028")]
	private void OnValidate()
	{
	}

	[Token(Token = "0x6000527")]
	[Address(RVA = "0xC2C3A0", Offset = "0xC2C3A0", VA = "0xC2C3A0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000528")]
	[Address(RVA = "0xC2C560", Offset = "0xC2C560", VA = "0xC2C560")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000529")]
	[Address(RVA = "0xC2C678", Offset = "0xC2C678", VA = "0xC2C678")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600052A")]
	[Address(RVA = "0xC2C140", Offset = "0xC2C140", VA = "0xC2C140")]
	private void Bake()
	{
	}

	[Token(Token = "0x600052B")]
	[Address(RVA = "0xC2BB10", Offset = "0xC2BB10", VA = "0xC2BB10")]
	private void LoadSmoothNormals()
	{
	}

	[Token(Token = "0x600052C")]
	[Address(RVA = "0xC2C6E0", Offset = "0xC2C6E0", VA = "0xC2C6E0")]
	private List<Vector3> SmoothNormals(Mesh mesh)
	{
		return null;
	}

	[Token(Token = "0x600052D")]
	[Address(RVA = "0xC2D248", Offset = "0xC2D248", VA = "0xC2D248")]
	private void CombineSubmeshes(Mesh mesh, Material[] materials)
	{
	}

	[Token(Token = "0x600052E")]
	[Address(RVA = "0xC2C3B4", Offset = "0xC2C3B4", VA = "0xC2C3B4")]
	private void UpdateMaterialProperties()
	{
	}

	[Token(Token = "0x600052F")]
	[Address(RVA = "0xC2D2F0", Offset = "0xC2D2F0", VA = "0xC2D2F0")]
	public Outline()
	{
	}
}
[Token(Token = "0x2000175")]
public class AntiZFight : MonoBehaviour
{
	[Token(Token = "0x400084E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 axis;

	[Token(Token = "0x400084F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 startPos;

	[Token(Token = "0x6000536")]
	[Address(RVA = "0xC2D598", Offset = "0xC2D598", VA = "0xC2D598")]
	private void Start()
	{
	}

	[Token(Token = "0x6000537")]
	[Address(RVA = "0xC2D5C8", Offset = "0xC2D5C8", VA = "0xC2D5C8")]
	private void Update()
	{
	}

	[Token(Token = "0x6000538")]
	[Address(RVA = "0xC2D678", Offset = "0xC2D678", VA = "0xC2D678")]
	public AntiZFight()
	{
	}
}
[Token(Token = "0x2000176")]
public class CampaignMenu : MonoBehaviour
{
	[Token(Token = "0x4000850")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("UI Level Elements")]
	public List<GameObject> levelUIs;

	[Token(Token = "0x4000851")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("UI Button Elements")]
	public GameObject prevButton;

	[Token(Token = "0x4000852")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject nextButton;

	[Token(Token = "0x4000853")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private GameData gameData;

	[Token(Token = "0x4000854")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private int displayedLevelIndex;

	[Token(Token = "0x6000539")]
	[Address(RVA = "0xC2D680", Offset = "0xC2D680", VA = "0xC2D680")]
	private void Start()
	{
	}

	[Token(Token = "0x600053A")]
	[Address(RVA = "0xC2D700", Offset = "0xC2D700", VA = "0xC2D700")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600053B")]
	[Address(RVA = "0xC2D888", Offset = "0xC2D888", VA = "0xC2D888")]
	private void DisplayLevel(int index)
	{
	}

	[Token(Token = "0x600053C")]
	[Address(RVA = "0xC2D698", Offset = "0xC2D698", VA = "0xC2D698")]
	private GameData GetGameData()
	{
		return null;
	}

	[Token(Token = "0x600053D")]
	[Address(RVA = "0xC2D794", Offset = "0xC2D794", VA = "0xC2D794")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600053E")]
	[Address(RVA = "0xC2D928", Offset = "0xC2D928", VA = "0xC2D928")]
	public void Next()
	{
	}

	[Token(Token = "0x600053F")]
	[Address(RVA = "0xC2D938", Offset = "0xC2D938", VA = "0xC2D938")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000540")]
	[Address(RVA = "0xC2D948", Offset = "0xC2D948", VA = "0xC2D948")]
	public CampaignMenu()
	{
	}
}
[Token(Token = "0x2000177")]
public class ChangePosition : MonoBehaviour
{
	[Token(Token = "0x4000855")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform target;

	[Token(Token = "0x4000856")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public YueSeat[] seats;

	[Token(Token = "0x4000857")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private PlayerController controller;

	[Token(Token = "0x4000858")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private YueSeat selectedSeat;

	[Token(Token = "0x6000541")]
	[Address(RVA = "0xC2D950", Offset = "0xC2D950", VA = "0xC2D950")]
	private void Start()
	{
	}

	[Token(Token = "0x6000542")]
	[Address(RVA = "0xC2DA08", Offset = "0xC2DA08", VA = "0xC2DA08")]
	public void SendIt()
	{
	}

	[Token(Token = "0x6000543")]
	[Address(RVA = "0xC2DBA4", Offset = "0xC2DBA4", VA = "0xC2DBA4")]
	public ChangePosition()
	{
	}
}
[Token(Token = "0x2000178")]
public class CharacterCollider : MonoBehaviour
{
	[Token(Token = "0x4000859")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool Active;

	[Token(Token = "0x400085A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float Offset;

	[Token(Token = "0x400085B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float Radius;

	[Token(Token = "0x400085C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ignoreColliders;

	[Token(Token = "0x400085D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Collider> colliderList;

	[Token(Token = "0x400085E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform mainParent;

	[Token(Token = "0x400085F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform Cam;

	[Token(Token = "0x4000860")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Collider col;

	[Token(Token = "0x6000544")]
	[Address(RVA = "0xC2DBAC", Offset = "0xC2DBAC", VA = "0xC2DBAC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000545")]
	[Address(RVA = "0xC2DBFC", Offset = "0xC2DBFC", VA = "0xC2DBFC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000546")]
	[Address(RVA = "0xC2DDA4", Offset = "0xC2DDA4", VA = "0xC2DDA4")]
	public CharacterCollider()
	{
	}
}
[Token(Token = "0x2000179")]
public class DirectionTracker : MonoBehaviour
{
	[Token(Token = "0x4000861")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Transform source;

	[Token(Token = "0x4000862")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Vector3 dirForward;

	[Token(Token = "0x4000863")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private Vector3 dirUpwards;

	[Token(Token = "0x6000547")]
	[Address(RVA = "0xC2DDC0", Offset = "0xC2DDC0", VA = "0xC2DDC0")]
	public void FixedUpdate()
	{
	}

	[Token(Token = "0x6000548")]
	[Address(RVA = "0xC2DF8C", Offset = "0xC2DF8C", VA = "0xC2DF8C")]
	public DirectionTracker()
	{
	}
}
[Token(Token = "0x200017A")]
public class FootIKController : MonoBehaviour
{
	[Token(Token = "0x4000864")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 offset;

	[Token(Token = "0x4000865")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftIK;

	[Token(Token = "0x4000866")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightIK;

	[Token(Token = "0x4000867")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform leftHand;

	[Token(Token = "0x4000868")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform rightHand;

	[Token(Token = "0x4000869")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Animator animator;

	[Token(Token = "0x6000549")]
	[Address(RVA = "0xC2DF94", Offset = "0xC2DF94", VA = "0xC2DF94")]
	private void Start()
	{
	}

	[Token(Token = "0x600054A")]
	[Address(RVA = "0xC2DFE4", Offset = "0xC2DFE4", VA = "0xC2DFE4")]
	private void Update()
	{
	}

	[Token(Token = "0x600054B")]
	[Address(RVA = "0xC2E244", Offset = "0xC2E244", VA = "0xC2E244")]
	public void OnAnimatorIK(int layerIndex)
	{
	}

	[Token(Token = "0x600054C")]
	[Address(RVA = "0xC2E35C", Offset = "0xC2E35C", VA = "0xC2E35C")]
	public FootIKController()
	{
	}
}
[Token(Token = "0x200017B")]
public class FootTarget : MonoBehaviour
{
	[Token(Token = "0x400086A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Vector3 neutral;

	[Token(Token = "0x400086B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform target;

	[Token(Token = "0x400086C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private VRInput vrInput;

	[Token(Token = "0x400086D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Vector3 offset;

	[Token(Token = "0x600054D")]
	[Address(RVA = "0xC2E364", Offset = "0xC2E364", VA = "0xC2E364")]
	private void Start()
	{
	}

	[Token(Token = "0x600054E")]
	[Address(RVA = "0xC2E3F4", Offset = "0xC2E3F4", VA = "0xC2E3F4")]
	private void Update()
	{
	}

	[Token(Token = "0x600054F")]
	[Address(RVA = "0xC2E4F0", Offset = "0xC2E4F0", VA = "0xC2E4F0")]
	public FootTarget()
	{
	}
}
[Token(Token = "0x200017C")]
public interface IGamePlayTriggers
{
	[Token(Token = "0x6000550")]
	void OnGotShot(Vector3 impulse);

	[Token(Token = "0x6000551")]
	void OnExplosionHit(Vector3 impulse);
}
[Token(Token = "0x200017D")]
public class HandPrecense : MonoBehaviour
{
	[Token(Token = "0x400086E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject handModelPrefab;

	[Token(Token = "0x400086F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public XRNode Node;

	[Token(Token = "0x4000870")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private UnityEngine.XR.InputDevice targetDevice;

	[Token(Token = "0x4000871")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private GameObject spawnedHandModel;

	[Token(Token = "0x4000872")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Animator handAnimator;

	[Token(Token = "0x4000873")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private bool WakeUp;

	[Token(Token = "0x6000552")]
	[Address(RVA = "0xC2E4F8", Offset = "0xC2E4F8", VA = "0xC2E4F8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000553")]
	[Address(RVA = "0xC2E554", Offset = "0xC2E554", VA = "0xC2E554")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000554")]
	[Address(RVA = "0xC2E63C", Offset = "0xC2E63C", VA = "0xC2E63C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000555")]
	[Address(RVA = "0xC2E568", Offset = "0xC2E568", VA = "0xC2E568")]
	private void TryInitialize()
	{
	}

	[Token(Token = "0x6000556")]
	[Address(RVA = "0xC2E668", Offset = "0xC2E668", VA = "0xC2E668")]
	private void UpdateAnimation()
	{
	}

	[Token(Token = "0x6000557")]
	[Address(RVA = "0xC2E7F0", Offset = "0xC2E7F0", VA = "0xC2E7F0")]
	private void Update()
	{
	}

	[Token(Token = "0x6000558")]
	[Address(RVA = "0xC2E7F4", Offset = "0xC2E7F4", VA = "0xC2E7F4")]
	public HandPrecense()
	{
	}
}
[Token(Token = "0x200017E")]
public class HoveringInfo : MonoBehaviour
{
	[Token(Token = "0x4000874")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform source;

	[Token(Token = "0x4000875")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x4000876")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Transform cam;

	[Token(Token = "0x6000559")]
	[Address(RVA = "0xC2E804", Offset = "0xC2E804", VA = "0xC2E804")]
	private void Start()
	{
	}

	[Token(Token = "0x600055A")]
	[Address(RVA = "0xC2E864", Offset = "0xC2E864", VA = "0xC2E864")]
	private void Update()
	{
	}

	[Token(Token = "0x600055B")]
	[Address(RVA = "0xC2E954", Offset = "0xC2E954", VA = "0xC2E954")]
	public HoveringInfo()
	{
	}
}
[Token(Token = "0x200017F")]
public class JumpBar : MonoBehaviour
{
	[Token(Token = "0x4000877")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Rigidbody rb;

	[Token(Token = "0x600055C")]
	[Address(RVA = "0xC2E95C", Offset = "0xC2E95C", VA = "0xC2E95C")]
	private void Start()
	{
	}

	[Token(Token = "0x600055D")]
	[Address(RVA = "0xC2E9AC", Offset = "0xC2E9AC", VA = "0xC2E9AC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600055E")]
	[Address(RVA = "0xC2EA50", Offset = "0xC2EA50", VA = "0xC2EA50")]
	public JumpBar()
	{
	}
}
[Token(Token = "0x2000180")]
public class LeverEvent : MonoBehaviour
{
	[Token(Token = "0x4000878")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent LeverPulled;

	[Token(Token = "0x4000879")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform lever;

	[Token(Token = "0x400087A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool prevState;

	[Token(Token = "0x400087B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	private bool state;

	[Token(Token = "0x600055F")]
	[Address(RVA = "0xC2EA58", Offset = "0xC2EA58", VA = "0xC2EA58")]
	private void Update()
	{
	}

	[Token(Token = "0x6000560")]
	[Address(RVA = "0xC2EB34", Offset = "0xC2EB34", VA = "0xC2EB34")]
	public LeverEvent()
	{
	}
}
[Token(Token = "0x2000181")]
public class LifetimePolicy : MonoBehaviour
{
	[Token(Token = "0x400087C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxTimeNotVisible;

	[Token(Token = "0x400087D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool destroyByVisibility;

	[Token(Token = "0x400087E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float notVisibleCount;

	[Token(Token = "0x400087F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public MeshRenderer meshRenderer;

	[Token(Token = "0x4000880")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public SkinnedMeshRenderer skinnedMeshRenderer;

	[Token(Token = "0x4000881")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private List<MeshRenderer> meshRenderers;

	[Token(Token = "0x4000882")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<SkinnedMeshRenderer> skinnedMeshRenderers;

	[Token(Token = "0x4000883")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GunMagazine gunMag;

	[Token(Token = "0x4000884")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Gun gun;

	[Token(Token = "0x6000561")]
	[Address(RVA = "0xC2EB3C", Offset = "0xC2EB3C", VA = "0xC2EB3C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000562")]
	[Address(RVA = "0xC2F5E4", Offset = "0xC2F5E4", VA = "0xC2F5E4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000563")]
	[Address(RVA = "0xC2ED74", Offset = "0xC2ED74", VA = "0xC2ED74")]
	private void GetMeshRendererRecursive(GameObject obj, List<MeshRenderer> list)
	{
	}

	[Token(Token = "0x6000564")]
	[Address(RVA = "0xC2F1AC", Offset = "0xC2F1AC", VA = "0xC2F1AC")]
	private void GetSkinnedMeshRendererRecursive(GameObject obj, List<SkinnedMeshRenderer> list)
	{
	}

	[Token(Token = "0x6000565")]
	[Address(RVA = "0xC2F920", Offset = "0xC2F920", VA = "0xC2F920")]
	public LifetimePolicy()
	{
	}
}
[Token(Token = "0x2000182")]
public class MagazineSpawnBag : MonoBehaviour
{
	[Token(Token = "0x4000885")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> magazinePrefabs;

	[Token(Token = "0x4000886")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public YueInteractor interactorRight;

	[Token(Token = "0x4000887")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public YueInteractor interactorLeft;

	[Token(Token = "0x4000888")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject prefab;

	[Token(Token = "0x4000889")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private InventoryBag inventory;

	[Token(Token = "0x400088A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private float disableCounter;

	[Token(Token = "0x6000566")]
	[Address(RVA = "0xC2F938", Offset = "0xC2F938", VA = "0xC2F938")]
	private void Start()
	{
	}

	[Token(Token = "0x6000567")]
	[Address(RVA = "0xC2F988", Offset = "0xC2F988", VA = "0xC2F988")]
	private void Update()
	{
	}

	[Token(Token = "0x6000568")]
	[Address(RVA = "0xC2FBF8", Offset = "0xC2FBF8", VA = "0xC2FBF8")]
	public MagazineSpawnBag()
	{
	}
}
[Serializable]
[Token(Token = "0x2000183")]
public class UIItem
{
	[Token(Token = "0x400088B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string name;

	[Token(Token = "0x400088C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x6000569")]
	[Address(RVA = "0xC2FC00", Offset = "0xC2FC00", VA = "0xC2FC00")]
	public UIItem()
	{
	}
}
[Serializable]
[Token(Token = "0x2000184")]
public class UIRegister
{
	[Token(Token = "0x400088D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string category;

	[Token(Token = "0x400088E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxItems;

	[Token(Token = "0x400088F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<UIItem> items;

	[Token(Token = "0x600056A")]
	[Address(RVA = "0xC2FC08", Offset = "0xC2FC08", VA = "0xC2FC08")]
	public UIRegister()
	{
	}
}
[Token(Token = "0x2000185")]
public class MapsMenuCard : MonoBehaviour, IUIRegisterEvents
{
	[Token(Token = "0x4000890")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Cards")]
	public List<UIRegister> cards;

	[Token(Token = "0x4000891")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIRegister card;

	[Token(Token = "0x4000892")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Dependencies")]
	public Scrollbar scrollbar;

	[Token(Token = "0x4000893")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text selectedCategoryText;

	[Token(Token = "0x4000894")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text maxItemText;

	[Token(Token = "0x4000895")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text itemText;

	[Token(Token = "0x4000896")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public GameObject UIPrefab;

	[Token(Token = "0x4000897")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform start;

	[Token(Token = "0x4000898")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float offset;

	[Token(Token = "0x4000899")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private List<GameObject> UIElements;

	[Token(Token = "0x400089A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private GameData gameData;

	[Token(Token = "0x600056B")]
	[Address(RVA = "0xC2FC10", Offset = "0xC2FC10", VA = "0xC2FC10")]
	private void Start()
	{
	}

	[Token(Token = "0x600056C")]
	[Address(RVA = "0xC30230", Offset = "0xC30230", VA = "0xC30230")]
	public void SetSelectedCategory(int index)
	{
	}

	[Token(Token = "0x600056D")]
	[Address(RVA = "0xC30294", Offset = "0xC30294", VA = "0xC30294", Slot = "4")]
	public void SetItem(int index)
	{
	}

	[Token(Token = "0x600056E")]
	[Address(RVA = "0xC2FCF8", Offset = "0xC2FCF8", VA = "0xC2FCF8")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x600056F")]
	[Address(RVA = "0xC303A8", Offset = "0xC303A8", VA = "0xC303A8")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000570")]
	[Address(RVA = "0xC30420", Offset = "0xC30420", VA = "0xC30420")]
	public void LoadSceneByIndex(int index)
	{
	}

	[Token(Token = "0x6000571")]
	[Address(RVA = "0xC30478", Offset = "0xC30478", VA = "0xC30478")]
	public void SetSanboxMode(bool mode)
	{
	}

	[Token(Token = "0x6000572")]
	[Address(RVA = "0xC304F4", Offset = "0xC304F4", VA = "0xC304F4")]
	public MapsMenuCard()
	{
	}
}
[Token(Token = "0x2000186")]
public class MenuOption : MonoBehaviour
{
	[Token(Token = "0x400089B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnDeleteObject;

	[Token(Token = "0x400089C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text nameText;

	[Token(Token = "0x400089D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int index;

	[Token(Token = "0x6000573")]
	[Address(RVA = "0xC30504", Offset = "0xC30504", VA = "0xC30504")]
	public void OnButtonPressed()
	{
	}

	[Token(Token = "0x6000574")]
	[Address(RVA = "0xC306A0", Offset = "0xC306A0", VA = "0xC306A0")]
	public MenuOption()
	{
	}
}
[Token(Token = "0x2000187")]
public class MusicPlayer : MonoBehaviour
{
	[Token(Token = "0x400089E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioClip> tracks;

	[Token(Token = "0x400089F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public AudioSource source;

	[Token(Token = "0x40008A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int trackNumber;

	[Token(Token = "0x40008A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	private bool isPaused;

	[Token(Token = "0x6000575")]
	[Address(RVA = "0xC306A8", Offset = "0xC306A8", VA = "0xC306A8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000576")]
	[Address(RVA = "0xC30730", Offset = "0xC30730", VA = "0xC30730")]
	public void Update()
	{
	}

	[Token(Token = "0x6000577")]
	[Address(RVA = "0xC30788", Offset = "0xC30788", VA = "0xC30788")]
	public void UpdateSong()
	{
	}

	[Token(Token = "0x6000578")]
	[Address(RVA = "0xC30778", Offset = "0xC30778", VA = "0xC30778")]
	public void Next()
	{
	}

	[Token(Token = "0x6000579")]
	[Address(RVA = "0xC30834", Offset = "0xC30834", VA = "0xC30834")]
	public void Prev()
	{
	}

	[Token(Token = "0x600057A")]
	[Address(RVA = "0xC30844", Offset = "0xC30844", VA = "0xC30844")]
	public void Pause()
	{
	}

	[Token(Token = "0x600057B")]
	[Address(RVA = "0xC3072C", Offset = "0xC3072C", VA = "0xC3072C")]
	public void Play()
	{
	}

	[Token(Token = "0x600057C")]
	[Address(RVA = "0xC30878", Offset = "0xC30878", VA = "0xC30878")]
	public MusicPlayer()
	{
	}
}
[Token(Token = "0x2000188")]
public class MusicPlayerUser : MonoBehaviour
{
	[Token(Token = "0x40008A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public MusicPlayer player;

	[Token(Token = "0x600057D")]
	[Address(RVA = "0xC30880", Offset = "0xC30880", VA = "0xC30880")]
	private void Start()
	{
	}

	[Token(Token = "0x600057E")]
	[Address(RVA = "0xC308F4", Offset = "0xC308F4", VA = "0xC308F4")]
	public void Next()
	{
	}

	[Token(Token = "0x600057F")]
	[Address(RVA = "0xC30918", Offset = "0xC30918", VA = "0xC30918")]
	public void Prev()
	{
	}

	[Token(Token = "0x6000580")]
	[Address(RVA = "0xC3093C", Offset = "0xC3093C", VA = "0xC3093C")]
	public void Pause()
	{
	}

	[Token(Token = "0x6000581")]
	[Address(RVA = "0xC30954", Offset = "0xC30954", VA = "0xC30954")]
	public void VolumeAdjust(float vol)
	{
	}

	[Token(Token = "0x6000582")]
	[Address(RVA = "0xC309C0", Offset = "0xC309C0", VA = "0xC309C0")]
	public MusicPlayerUser()
	{
	}
}
[Token(Token = "0x2000189")]
public class OnEnableTriggerEvent : MonoBehaviour
{
	[Token(Token = "0x40008A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnEnableThis;

	[Token(Token = "0x6000583")]
	[Address(RVA = "0xC309C8", Offset = "0xC309C8", VA = "0xC309C8")]
	private void Start()
	{
	}

	[Token(Token = "0x6000584")]
	[Address(RVA = "0xC30A30", Offset = "0xC30A30", VA = "0xC30A30")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000585")]
	[Address(RVA = "0xC30A4C", Offset = "0xC30A4C", VA = "0xC30A4C")]
	public OnEnableTriggerEvent()
	{
	}
}
[Token(Token = "0x200018A")]
public class PerformanceMenuGO : MonoBehaviour
{
	[Token(Token = "0x40008A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform start;

	[Token(Token = "0x40008A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public RectTransform content;

	[Token(Token = "0x40008A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int spacing;

	[Token(Token = "0x40008A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public GameObject optionPrefab;

	[Token(Token = "0x40008A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private YueSpawnablesHandler handler;

	[Token(Token = "0x40008A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private List<GameObject> spawnedUIElements;

	[Token(Token = "0x6000586")]
	[Address(RVA = "0xC30A54", Offset = "0xC30A54", VA = "0xC30A54")]
	private void Start()
	{
	}

	[Token(Token = "0x6000587")]
	[Address(RVA = "0xC3106C", Offset = "0xC3106C", VA = "0xC3106C")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000588")]
	[Address(RVA = "0xC305B4", Offset = "0xC305B4", VA = "0xC305B4")]
	public void DeleteByIndex(int index)
	{
	}

	[Token(Token = "0x6000589")]
	[Address(RVA = "0xC30B10", Offset = "0xC30B10", VA = "0xC30B10")]
	public void UpdateUI()
	{
	}

	[Token(Token = "0x600058A")]
	[Address(RVA = "0xC31070", Offset = "0xC31070", VA = "0xC31070")]
	public void DeleteAll()
	{
	}

	[Token(Token = "0x600058B")]
	[Address(RVA = "0xC31174", Offset = "0xC31174", VA = "0xC31174")]
	public PerformanceMenuGO()
	{
	}
}
[Token(Token = "0x200018C")]
public class PhysicsConfigurator : MonoBehaviour
{
	[Token(Token = "0x40008AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Slider mass;

	[Token(Token = "0x40008AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Slider drag;

	[Token(Token = "0x40008AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Slider angularDrag;

	[Token(Token = "0x40008AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle gravity;

	[Token(Token = "0x40008B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private MenuRef menuRef;

	[Token(Token = "0x40008B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YueRayInteractor yueRayInteractorLeft;

	[Token(Token = "0x40008B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private YueRayInteractor yueRayInteractorRight;

	[Token(Token = "0x40008B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool configSelected;

	[Token(Token = "0x40008B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private Rigidbody selectedRigidBody;

	[Token(Token = "0x600058F")]
	[Address(RVA = "0xC3124C", Offset = "0xC3124C", VA = "0xC3124C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000590")]
	[Address(RVA = "0xC3131C", Offset = "0xC3131C", VA = "0xC3131C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000591")]
	[Address(RVA = "0xC31664", Offset = "0xC31664", VA = "0xC31664")]
	public void OnValueChanged()
	{
	}

	[Token(Token = "0x6000592")]
	[Address(RVA = "0xC314D4", Offset = "0xC314D4", VA = "0xC314D4")]
	private void SetUpUI()
	{
	}

	[Token(Token = "0x6000593")]
	[Address(RVA = "0xC316C0", Offset = "0xC316C0", VA = "0xC316C0")]
	public void ApplySettings()
	{
	}

	[Token(Token = "0x6000594")]
	[Address(RVA = "0xC317EC", Offset = "0xC317EC", VA = "0xC317EC")]
	public PhysicsConfigurator()
	{
	}
}
[Token(Token = "0x200018D")]
public enum CrouchMode
{
	[Token(Token = "0x40008B6")]
	Linear,
	[Token(Token = "0x40008B7")]
	Accumulative
}
[Token(Token = "0x200018E")]
public class PlayerController : MonoBehaviour
{
	[Token(Token = "0x40008B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Locomotion")]
	public Vector3 locomotionSphereOffset;

	[Token(Token = "0x40008B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float locomotionTargetOffset;

	[Token(Token = "0x40008BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public CrouchMode crouchMode;

	[Token(Token = "0x40008BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float simpleSpeed;

	[Token(Token = "0x40008BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float angularVelocityFactor;

	[Token(Token = "0x40008BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float sprintFactor;

	[Token(Token = "0x40008BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float crouchDecelerate;

	[Token(Token = "0x40008BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float crouchSpeed;

	[Token(Token = "0x40008C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float legsRange;

	[Token(Token = "0x40008C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	[Range(0f, 1f)]
	public float smoothCrouch;

	[Token(Token = "0x40008C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool movement;

	[Token(Token = "0x40008C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Inputs")]
	public YueInteractorInput leftInput;

	[Token(Token = "0x40008C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public YueInteractorInput rightInput;

	[Token(Token = "0x40008C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	[Header("Hands")]
	public Transform leftHand;

	[Token(Token = "0x40008C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public Transform rightHand;

	[Token(Token = "0x40008C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[Header("Body")]
	public Transform headset;

	[Token(Token = "0x40008C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Transform direction;

	[Token(Token = "0x40008C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Rigidbody locomotionPiston;

	[Token(Token = "0x40008CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public Rigidbody locomotionSpinner;

	[Token(Token = "0x40008CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public LayerMask groundLayer;

	[Token(Token = "0x40008CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[Header("Dependencies")]
	public PhysicMaterial zeroFriction;

	[Token(Token = "0x40008CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	public PhysicMaterial maxFriction;

	[Token(Token = "0x40008CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	public UnityEvent OnSnapTurned;

	[Token(Token = "0x40008CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	public List<YueTrackedRigidbody> trackedObjects;

	[Token(Token = "0x40008D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
	public List<Rigidbody> highSolver;

	[Token(Token = "0x40008D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
	public List<Collider> noInterCollision;

	[Token(Token = "0x40008D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
	public List<Collider> bodyColliders;

	[Token(Token = "0x40008D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
	public Collider bodyCollider;

	[Token(Token = "0x40008D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
	public bool isGrounded;

	[Token(Token = "0x40008D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
	[HideInInspector]
	public Rigidbody rb;

	[Token(Token = "0x40008D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
	private bool snapBlocked;

	[Token(Token = "0x40008D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
	private float crouchInput;

	[Token(Token = "0x40008D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
	private Vector3 smoothRotationDelta;

	[Token(Token = "0x40008D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
	private Vector3 connectedAnchor;

	[Token(Token = "0x40008DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
	private Vector3 rotationDelta;

	[Token(Token = "0x40008DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
	private ConfigurableJoint locomotionPistonJoint;

	[Token(Token = "0x40008DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
	private GameData gameData;

	[Token(Token = "0x40008DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
	private CharacterManager characterManager;

	[Token(Token = "0x40008DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
	public bool resettingOrientation;

	[Token(Token = "0x40008DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
	[HideInInspector]
	public ConfigurableJoint cJoint;

	[Token(Token = "0x40008E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
	[HideInInspector]
	public YueSeat connectedSeat;

	[Token(Token = "0x40008E1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x148")]
	[HideInInspector]
	public Quaternion cJointRotation;

	[Token(Token = "0x40008E2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x158")]
	private bool orientationBlocked;

	[Token(Token = "0x6000595")]
	[Address(RVA = "0xC317F4", Offset = "0xC317F4", VA = "0xC317F4")]
	private void Start()
	{
	}

	[Token(Token = "0x6000596")]
	[Address(RVA = "0xC31C88", Offset = "0xC31C88", VA = "0xC31C88")]
	private void Update()
	{
	}

	[Token(Token = "0x6000597")]
	[Address(RVA = "0xC31C8C", Offset = "0xC31C8C", VA = "0xC31C8C")]
	private void UpdateOrientation()
	{
	}

	[Token(Token = "0x6000598")]
	[Address(RVA = "0xC3219C", Offset = "0xC3219C", VA = "0xC3219C")]
	public void ResetOrientation()
	{
	}

	[Token(Token = "0x6000599")]
	[Address(RVA = "0xC321A8", Offset = "0xC321A8", VA = "0xC321A8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600059A")]
	[Address(RVA = "0xC32338", Offset = "0xC32338", VA = "0xC32338")]
	private void UpdateMovement()
	{
	}

	[Token(Token = "0x600059B")]
	[Address(RVA = "0xC321E0", Offset = "0xC321E0", VA = "0xC321E0")]
	private void CheckMovement()
	{
	}

	[Token(Token = "0x600059C")]
	[Address(RVA = "0xC32B58", Offset = "0xC32B58", VA = "0xC32B58")]
	private void UpdateLocomotionSphere()
	{
	}

	[Token(Token = "0x600059D")]
	[Address(RVA = "0xC329F4", Offset = "0xC329F4", VA = "0xC329F4")]
	private void UpdateTurn()
	{
	}

	[Token(Token = "0x600059E")]
	[Address(RVA = "0xC321E4", Offset = "0xC321E4", VA = "0xC321E4")]
	private void CheckIfGrounded()
	{
	}

	[Token(Token = "0x600059F")]
	[Address(RVA = "0xC32F30", Offset = "0xC32F30", VA = "0xC32F30")]
	public void TurnRig(float angle)
	{
	}

	[Token(Token = "0x60005A0")]
	[Address(RVA = "0xC33110", Offset = "0xC33110", VA = "0xC33110")]
	public void SetSmoothCrouch(float deltaHeight)
	{
	}

	[Token(Token = "0x60005A1")]
	[Address(RVA = "0xC3314C", Offset = "0xC3314C", VA = "0xC3314C")]
	public void EnableBodyCollider(bool en)
	{
	}

	[Token(Token = "0x60005A2")]
	[Address(RVA = "0xC332A4", Offset = "0xC332A4", VA = "0xC332A4")]
	public void SetMass(float mass)
	{
	}

	[Token(Token = "0x60005A3")]
	[Address(RVA = "0xC3338C", Offset = "0xC3338C", VA = "0xC3338C")]
	public void ResetMass()
	{
	}

	[Token(Token = "0x60005A4")]
	[Address(RVA = "0xC3343C", Offset = "0xC3343C", VA = "0xC3343C")]
	public void SetPlayerStrength(float strenght)
	{
	}

	[Token(Token = "0x60005A5")]
	[Address(RVA = "0xC33598", Offset = "0xC33598", VA = "0xC33598")]
	public PlayerController()
	{
	}
}
[Token(Token = "0x200018F")]
public class PlayerRecorder : MonoBehaviour
{
	[Token(Token = "0x60005A6")]
	[Address(RVA = "0xC335CC", Offset = "0xC335CC", VA = "0xC335CC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005A7")]
	[Address(RVA = "0xC335D0", Offset = "0xC335D0", VA = "0xC335D0")]
	private void Update()
	{
	}

	[Token(Token = "0x60005A8")]
	[Address(RVA = "0xC335D4", Offset = "0xC335D4", VA = "0xC335D4")]
	public PlayerRecorder()
	{
	}
}
[Token(Token = "0x2000190")]
public class PlayerStatus : MonoBehaviour, IGamePlayTriggers
{
	[Token(Token = "0x40008E3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float health;

	[Token(Token = "0x40008E4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float recoveryRate;

	[Token(Token = "0x40008E5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool enterdVehicle;

	[Token(Token = "0x40008E6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool isInVehicle;

	[Token(Token = "0x40008E7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool inMenuTriggerZone;

	[Token(Token = "0x40008E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float overlayFadeOutSpeed;

	[Token(Token = "0x40008E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public InventorySystem inventory;

	[Token(Token = "0x40008EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MeshRenderer bloodOverlay1;

	[Token(Token = "0x40008EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public MeshRenderer bloodOverlay2;

	[Token(Token = "0x40008EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public MeshRenderer darlOverlay;

	[Token(Token = "0x40008ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float maxHealth;

	[Token(Token = "0x40008EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private float overlayAlpha;

	[Token(Token = "0x40008EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private bool loading;

	[Token(Token = "0x60005A9")]
	[Address(RVA = "0xC335DC", Offset = "0xC335DC", VA = "0xC335DC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005AA")]
	[Address(RVA = "0xC33768", Offset = "0xC33768", VA = "0xC33768")]
	public void UpdateOverlay()
	{
	}

	[Token(Token = "0x60005AB")]
	[Address(RVA = "0xC3392C", Offset = "0xC3392C", VA = "0xC3392C", Slot = "4")]
	public void OnGotShot(Vector3 impulse)
	{
	}

	[Token(Token = "0x60005AC")]
	[Address(RVA = "0xC339C8", Offset = "0xC339C8", VA = "0xC339C8", Slot = "5")]
	public void OnExplosionHit(Vector3 impulse)
	{
	}

	[Token(Token = "0x60005AD")]
	[Address(RVA = "0xC33A60", Offset = "0xC33A60", VA = "0xC33A60")]
	public void OnPlayerHit(float damage)
	{
	}

	[Token(Token = "0x60005AE")]
	[Address(RVA = "0xC33A70", Offset = "0xC33A70", VA = "0xC33A70")]
	public PlayerStatus()
	{
	}
}
[Token(Token = "0x2000191")]
public class RagdollShooterFun : MonoBehaviour
{
	[Token(Token = "0x40008F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool dontspawn;

	[Token(Token = "0x40008F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject ragdollPrefab;

	[Token(Token = "0x40008F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private GameObject spawnedRagdoll;

	[Token(Token = "0x60005AF")]
	[Address(RVA = "0xC33A94", Offset = "0xC33A94", VA = "0xC33A94")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B0")]
	[Address(RVA = "0xC33B34", Offset = "0xC33B34", VA = "0xC33B34")]
	public void OnRestart()
	{
	}

	[Token(Token = "0x60005B1")]
	[Address(RVA = "0xC33C10", Offset = "0xC33C10", VA = "0xC33C10")]
	public RagdollShooterFun()
	{
	}
}
[Token(Token = "0x2000192")]
public class RotateObject : MonoBehaviour
{
	[Token(Token = "0x40008F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float velocity;

	[Token(Token = "0x40008F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private float rotAngle;

	[Token(Token = "0x60005B2")]
	[Address(RVA = "0xC33C18", Offset = "0xC33C18", VA = "0xC33C18")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B3")]
	[Address(RVA = "0xC33C94", Offset = "0xC33C94", VA = "0xC33C94")]
	public RotateObject()
	{
	}
}
[Token(Token = "0x2000193")]
public class SceneLoader : MonoBehaviour
{
	[Token(Token = "0x40008F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int index;

	[Token(Token = "0x40008F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float timeUntilLoad;

	[Token(Token = "0x40008F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private float counter;

	[Token(Token = "0x40008F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool done;

	[Token(Token = "0x60005B4")]
	[Address(RVA = "0xC33CA4", Offset = "0xC33CA4", VA = "0xC33CA4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005B5")]
	[Address(RVA = "0xC33D3C", Offset = "0xC33D3C", VA = "0xC33D3C")]
	public SceneLoader()
	{
	}
}
[Token(Token = "0x2000194")]
public class SettingsMenu : MonoBehaviour
{
	[Token(Token = "0x40008F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text dominantHandText;

	[Token(Token = "0x40008FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Text heightText;

	[Token(Token = "0x40008FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text scaleText;

	[Token(Token = "0x40008FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Slider rotationSpeedSlider;

	[Token(Token = "0x40008FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle snapTurnToggle;

	[Token(Token = "0x40008FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle controllerDriftLeftX;

	[Token(Token = "0x40008FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameData gameData;

	[Token(Token = "0x4000900")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private InventorySystem inventory;

	[Token(Token = "0x4000901")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private CharacterManager characterManager;

	[Token(Token = "0x60005B6")]
	[Address(RVA = "0xC33D4C", Offset = "0xC33D4C", VA = "0xC33D4C")]
	private void Start()
	{
	}

	[Token(Token = "0x60005B7")]
	[Address(RVA = "0xC33E54", Offset = "0xC33E54", VA = "0xC33E54")]
	private void OnDataLoaded()
	{
	}

	[Token(Token = "0x60005B8")]
	[Address(RVA = "0xC34040", Offset = "0xC34040", VA = "0xC34040")]
	public void SetRotationMode(bool snap)
	{
	}

	[Token(Token = "0x60005B9")]
	[Address(RVA = "0xC3406C", Offset = "0xC3406C", VA = "0xC3406C")]
	public void SetRotationSpeed(float speed)
	{
	}

	[Token(Token = "0x60005BA")]
	[Address(RVA = "0xC34094", Offset = "0xC34094", VA = "0xC34094")]
	public void SetPlayerHeight(float add)
	{
	}

	[Token(Token = "0x60005BB")]
	[Address(RVA = "0xC3417C", Offset = "0xC3417C", VA = "0xC3417C")]
	public void SetWorldScale(float add)
	{
	}

	[Token(Token = "0x60005BC")]
	[Address(RVA = "0xC34264", Offset = "0xC34264", VA = "0xC34264")]
	public void SetInventorySwapHead()
	{
	}

	[Token(Token = "0x60005BD")]
	[Address(RVA = "0xC34320", Offset = "0xC34320", VA = "0xC34320")]
	public void SetControllerDrift(bool drift)
	{
	}

	[Token(Token = "0x60005BE")]
	[Address(RVA = "0xC3434C", Offset = "0xC3434C", VA = "0xC3434C")]
	public void SetAvatar()
	{
	}

	[Token(Token = "0x60005BF")]
	[Address(RVA = "0xC34368", Offset = "0xC34368", VA = "0xC34368")]
	public void SetSandboxMode(bool sandboxMode)
	{
	}

	[Token(Token = "0x60005C0")]
	[Address(RVA = "0xC343F4", Offset = "0xC343F4", VA = "0xC343F4")]
	public SettingsMenu()
	{
	}
}
[Token(Token = "0x2000195")]
public class SetupTerrainLOD : MonoBehaviour
{
	[Token(Token = "0x4000902")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool setupLOD;

	[Token(Token = "0x4000903")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform LOD0;

	[Token(Token = "0x4000904")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform LOD1;

	[Token(Token = "0x4000905")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform LOD2;

	[Token(Token = "0x4000906")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform LOD3;

	[Token(Token = "0x60005C1")]
	[Address(RVA = "0xC343FC", Offset = "0xC343FC", VA = "0xC343FC")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C2")]
	[Address(RVA = "0xC3441C", Offset = "0xC3441C", VA = "0xC3441C")]
	private void SetupLODs()
	{
	}

	[Token(Token = "0x60005C3")]
	[Address(RVA = "0xC34AF4", Offset = "0xC34AF4", VA = "0xC34AF4")]
	public SetupTerrainLOD()
	{
	}
}
[Token(Token = "0x2000196")]
public class SlowMoManager : MonoBehaviour
{
	[Token(Token = "0x4000907")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<AudioMixer> mixers;

	[Token(Token = "0x4000908")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxSlowmoTime;

	[Token(Token = "0x4000909")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minTimeScale;

	[Token(Token = "0x400090A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private float timeScale;

	[Token(Token = "0x400090B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AudioClip slowmoClip;

	[Token(Token = "0x400090C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float slowmoCounter;

	[Token(Token = "0x400090D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private bool slowmoTriggerd;

	[Token(Token = "0x400090E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private VRInput vrInput;

	[Token(Token = "0x400090F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private GameData gameData;

	[Token(Token = "0x4000910")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource source;

	[Token(Token = "0x4000911")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private bool blocked;

	[Token(Token = "0x4000912")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x59")]
	private bool isSlowmo;

	[Token(Token = "0x60005C4")]
	[Address(RVA = "0xC34AFC", Offset = "0xC34AFC", VA = "0xC34AFC")]
	private void Start()
	{
	}

	[Token(Token = "0x60005C5")]
	[Address(RVA = "0xC34BD8", Offset = "0xC34BD8", VA = "0xC34BD8")]
	private void Update()
	{
	}

	[Token(Token = "0x60005C6")]
	[Address(RVA = "0xC34C40", Offset = "0xC34C40", VA = "0xC34C40")]
	private void WhileSlowmo()
	{
	}

	[Token(Token = "0x60005C7")]
	[Address(RVA = "0xC34F34", Offset = "0xC34F34", VA = "0xC34F34")]
	private void OnSlowmoEnd()
	{
	}

	[Token(Token = "0x60005C8")]
	[Address(RVA = "0xC34D40", Offset = "0xC34D40", VA = "0xC34D40")]
	private void UpdateTimeScale()
	{
	}

	[Token(Token = "0x60005C9")]
	[Address(RVA = "0xC34F6C", Offset = "0xC34F6C", VA = "0xC34F6C")]
	public SlowMoManager()
	{
	}
}
[Token(Token = "0x2000197")]
public class SpawnedObject : MonoBehaviour
{
	[Token(Token = "0x4000913")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float downsizeFactor;

	[Token(Token = "0x4000914")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float sizingSpeed;

	[Token(Token = "0x4000915")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float sizingDelay;

	[Token(Token = "0x4000916")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 scale;

	[Token(Token = "0x4000917")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private YueInteractable grab;

	[Token(Token = "0x4000918")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private bool triggerd;

	[Token(Token = "0x4000919")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	private float mass;

	[Token(Token = "0x60005CA")]
	[Address(RVA = "0xC34F88", Offset = "0xC34F88", VA = "0xC34F88")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CB")]
	[Address(RVA = "0xC35090", Offset = "0xC35090", VA = "0xC35090")]
	private void Update()
	{
	}

	[Token(Token = "0x60005CC")]
	[Address(RVA = "0xC35494", Offset = "0xC35494", VA = "0xC35494")]
	private void OnScalingDone()
	{
	}

	[Token(Token = "0x60005CD")]
	[Address(RVA = "0xC354EC", Offset = "0xC354EC", VA = "0xC354EC")]
	public SpawnedObject()
	{
	}
}
[Token(Token = "0x2000198")]
public class SpawnInInterval : MonoBehaviour
{
	[Token(Token = "0x400091A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public GameObject prefab;

	[Token(Token = "0x400091B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float interval;

	[Token(Token = "0x400091C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private float counter;

	[Token(Token = "0x60005CE")]
	[Address(RVA = "0xC35508", Offset = "0xC35508", VA = "0xC35508")]
	private void Start()
	{
	}

	[Token(Token = "0x60005CF")]
	[Address(RVA = "0xC3550C", Offset = "0xC3550C", VA = "0xC3550C")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D0")]
	[Address(RVA = "0xC35638", Offset = "0xC35638", VA = "0xC35638")]
	public void Spawn()
	{
	}

	[Token(Token = "0x60005D1")]
	[Address(RVA = "0xC35734", Offset = "0xC35734", VA = "0xC35734")]
	public SpawnInInterval()
	{
	}
}
[Token(Token = "0x2000199")]
public class SpawnSystemNPC : MonoBehaviour
{
	[Token(Token = "0x400091D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> npcs;

	[Token(Token = "0x400091E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool selected;

	[Token(Token = "0x400091F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float yOffset;

	[Token(Token = "0x4000920")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forwardOffset;

	[Token(Token = "0x4000921")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material questionMark;

	[Token(Token = "0x4000922")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image iconImage;

	[Token(Token = "0x4000923")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text utilityName;

	[Token(Token = "0x4000924")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask layerMask;

	[Token(Token = "0x4000925")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRInput vrInput;

	[Token(Token = "0x4000926")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int selectedID;

	[Token(Token = "0x4000927")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform rightHand;

	[Token(Token = "0x4000928")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform leftHand;

	[Token(Token = "0x4000929")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform pointer;

	[Token(Token = "0x400092A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform spawnedPreview;

	[Token(Token = "0x400092B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MenuPosition menu;

	[Token(Token = "0x400092C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private YueSpawnablesHandler handler;

	[Token(Token = "0x400092D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private bool blocked;

	[Token(Token = "0x60005D2")]
	[Address(RVA = "0xC35744", Offset = "0xC35744", VA = "0xC35744")]
	private void Start()
	{
	}

	[Token(Token = "0x60005D3")]
	[Address(RVA = "0xC35940", Offset = "0xC35940", VA = "0xC35940")]
	private void Update()
	{
	}

	[Token(Token = "0x60005D4")]
	[Address(RVA = "0xC35C6C", Offset = "0xC35C6C", VA = "0xC35C6C")]
	private void OnReleaseObject()
	{
	}

	[Token(Token = "0x60005D5")]
	[Address(RVA = "0xC35ED4", Offset = "0xC35ED4", VA = "0xC35ED4")]
	public void OnUtilitySelected()
	{
	}

	[Token(Token = "0x60005D6")]
	[Address(RVA = "0xC35E2C", Offset = "0xC35E2C", VA = "0xC35E2C")]
	public void OnUtilityUnselect()
	{
	}

	[Token(Token = "0x60005D7")]
	[Address(RVA = "0xC35950", Offset = "0xC35950", VA = "0xC35950")]
	private void WhileUtilitySelected()
	{
	}

	[Token(Token = "0x60005D8")]
	[Address(RVA = "0xC35C68", Offset = "0xC35C68", VA = "0xC35C68")]
	private void WhileNotSelected()
	{
	}

	[Token(Token = "0x60005D9")]
	[Address(RVA = "0xC35F78", Offset = "0xC35F78", VA = "0xC35F78")]
	public void Prev()
	{
	}

	[Token(Token = "0x60005DA")]
	[Address(RVA = "0xC361CC", Offset = "0xC361CC", VA = "0xC361CC")]
	public void Next()
	{
	}

	[Token(Token = "0x60005DB")]
	[Address(RVA = "0xC35FA4", Offset = "0xC35FA4", VA = "0xC35FA4")]
	private void LimitID()
	{
	}

	[Token(Token = "0x60005DC")]
	[Address(RVA = "0xC36018", Offset = "0xC36018", VA = "0xC36018")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x60005DD")]
	[Address(RVA = "0xC361F8", Offset = "0xC361F8", VA = "0xC361F8")]
	public SpawnSystemNPC()
	{
	}
}
[Token(Token = "0x200019A")]
public class SpawnSystemObjects : MonoBehaviour
{
	[Token(Token = "0x400092E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float forwardOffset;

	[Token(Token = "0x400092F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yOffset;

	[Token(Token = "0x4000930")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material questionMark;

	[Token(Token = "0x4000931")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image iconImage;

	[Token(Token = "0x4000932")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text utilityName;

	[Token(Token = "0x4000933")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> utility;

	[Token(Token = "0x4000934")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject spawnedUtility;

	[Token(Token = "0x4000935")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform Headset;

	[Token(Token = "0x4000936")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform ptTarget;

	[Token(Token = "0x4000937")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int selectedID;

	[Token(Token = "0x4000938")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MenuPosition menu;

	[Token(Token = "0x4000939")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private YueSpawnablesHandler handler;

	[Token(Token = "0x60005DE")]
	[Address(RVA = "0xC36210", Offset = "0xC36210", VA = "0xC36210")]
	private void Start()
	{
	}

	[Token(Token = "0x60005DF")]
	[Address(RVA = "0xC36344", Offset = "0xC36344", VA = "0xC36344")]
	private void Update()
	{
	}

	[Token(Token = "0x60005E0")]
	[Address(RVA = "0xC36588", Offset = "0xC36588", VA = "0xC36588")]
	private Vector3 CalculateTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005E1")]
	[Address(RVA = "0xC363B8", Offset = "0xC363B8", VA = "0xC363B8")]
	private void WhileSelecting()
	{
	}

	[Token(Token = "0x60005E2")]
	[Address(RVA = "0xC367BC", Offset = "0xC367BC", VA = "0xC367BC")]
	private void OnSelectExit()
	{
	}

	[Token(Token = "0x60005E3")]
	[Address(RVA = "0xC367C4", Offset = "0xC367C4", VA = "0xC367C4")]
	public void OnSelectingQuit()
	{
	}

	[Token(Token = "0x60005E4")]
	[Address(RVA = "0xC367CC", Offset = "0xC367CC", VA = "0xC367CC")]
	public void SpawnUtilityByID(int index)
	{
	}

	[Token(Token = "0x60005E5")]
	[Address(RVA = "0xC36DA4", Offset = "0xC36DA4", VA = "0xC36DA4")]
	public void Prev()
	{
	}

	[Token(Token = "0x60005E6")]
	[Address(RVA = "0xC36E08", Offset = "0xC36E08", VA = "0xC36E08")]
	public void Next()
	{
	}

	[Token(Token = "0x60005E7")]
	[Address(RVA = "0xC36E74", Offset = "0xC36E74", VA = "0xC36E74")]
	public void ResetSelection()
	{
	}

	[Token(Token = "0x60005E8")]
	[Address(RVA = "0xC36C14", Offset = "0xC36C14", VA = "0xC36C14")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x60005E9")]
	[Address(RVA = "0xC36E7C", Offset = "0xC36E7C", VA = "0xC36E7C")]
	public SpawnSystemObjects()
	{
	}
}
[Token(Token = "0x200019B")]
public class SpawnSystemUtility : MonoBehaviour
{
	[Token(Token = "0x400093A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float forwardOffset;

	[Token(Token = "0x400093B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yOffset;

	[Token(Token = "0x400093C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Material questionMark;

	[Token(Token = "0x400093D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Image iconImage;

	[Token(Token = "0x400093E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Text utilityName;

	[Token(Token = "0x400093F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<GameObject> utility;

	[Token(Token = "0x4000940")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private GameObject spawnedUtility;

	[Token(Token = "0x4000941")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform Headset;

	[Token(Token = "0x4000942")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private Transform jointTarget;

	[Token(Token = "0x4000943")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public int selectedID;

	[Token(Token = "0x4000944")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private MenuPosition menu;

	[Token(Token = "0x4000945")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private YueSpawnablesHandler handler;

	[Token(Token = "0x4000946")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private FixedJoint fJoint;

	[Token(Token = "0x60005EA")]
	[Address(RVA = "0xC36E90", Offset = "0xC36E90", VA = "0xC36E90")]
	private void Start()
	{
	}

	[Token(Token = "0x60005EB")]
	[Address(RVA = "0xC36FC4", Offset = "0xC36FC4", VA = "0xC36FC4")]
	private void Update()
	{
	}

	[Token(Token = "0x60005EC")]
	[Address(RVA = "0xC3721C", Offset = "0xC3721C", VA = "0xC3721C")]
	private Vector3 CalculateTargetPosition()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60005ED")]
	[Address(RVA = "0xC37038", Offset = "0xC37038", VA = "0xC37038")]
	private void WhileSelecting()
	{
	}

	[Token(Token = "0x60005EE")]
	[Address(RVA = "0xC37450", Offset = "0xC37450", VA = "0xC37450")]
	public void OnSelectExit()
	{
	}

	[Token(Token = "0x60005EF")]
	[Address(RVA = "0xC374B4", Offset = "0xC374B4", VA = "0xC374B4")]
	public void OnSelectingQuit()
	{
	}

	[Token(Token = "0x60005F0")]
	[Address(RVA = "0xC37518", Offset = "0xC37518", VA = "0xC37518")]
	public void spawnUtilityByID(int index)
	{
	}

	[Token(Token = "0x60005F1")]
	[Address(RVA = "0xC37D6C", Offset = "0xC37D6C", VA = "0xC37D6C")]
	public void prev()
	{
	}

	[Token(Token = "0x60005F2")]
	[Address(RVA = "0xC37DD0", Offset = "0xC37DD0", VA = "0xC37DD0")]
	public void next()
	{
	}

	[Token(Token = "0x60005F3")]
	[Address(RVA = "0xC37E3C", Offset = "0xC37E3C", VA = "0xC37E3C")]
	public void resetSelection()
	{
	}

	[Token(Token = "0x60005F4")]
	[Address(RVA = "0xC37BDC", Offset = "0xC37BDC", VA = "0xC37BDC")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x60005F5")]
	[Address(RVA = "0xC37E40", Offset = "0xC37E40", VA = "0xC37E40")]
	public SpawnSystemUtility()
	{
	}
}
[Token(Token = "0x200019C")]
public class SpawnSystemVehicles : MonoBehaviour
{
	[Token(Token = "0x4000947")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> npcs;

	[Token(Token = "0x4000948")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool selected;

	[Token(Token = "0x4000949")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float yOffset;

	[Token(Token = "0x400094A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float forwardOffset;

	[Token(Token = "0x400094B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Material questionMark;

	[Token(Token = "0x400094C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Image iconImage;

	[Token(Token = "0x400094D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text utilityName;

	[Token(Token = "0x400094E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LayerMask layerMask;

	[Token(Token = "0x400094F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private VRInput vrInput;

	[Token(Token = "0x4000950")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private int selectedID;

	[Token(Token = "0x4000951")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Transform rightHand;

	[Token(Token = "0x4000952")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Transform leftHand;

	[Token(Token = "0x4000953")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform pointer;

	[Token(Token = "0x4000954")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private Transform spawnedPreview;

	[Token(Token = "0x4000955")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private MenuPosition menu;

	[Token(Token = "0x4000956")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private YueSpawnablesHandler handler;

	[Token(Token = "0x60005F6")]
	[Address(RVA = "0xC37E54", Offset = "0xC37E54", VA = "0xC37E54")]
	private void Start()
	{
	}

	[Token(Token = "0x60005F7")]
	[Address(RVA = "0xC3804C", Offset = "0xC3804C", VA = "0xC3804C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60005F8")]
	[Address(RVA = "0xC38354", Offset = "0xC38354", VA = "0xC38354")]
	private void OnReleaseObject()
	{
	}

	[Token(Token = "0x60005F9")]
	[Address(RVA = "0xC385AC", Offset = "0xC385AC", VA = "0xC385AC")]
	public void OnUtilitySelected()
	{
	}

	[Token(Token = "0x60005FA")]
	[Address(RVA = "0xC38504", Offset = "0xC38504", VA = "0xC38504")]
	public void OnUtilityUnselect()
	{
	}

	[Token(Token = "0x60005FB")]
	[Address(RVA = "0xC3805C", Offset = "0xC3805C", VA = "0xC3805C")]
	private void WhileUtilitySelected()
	{
	}

	[Token(Token = "0x60005FC")]
	[Address(RVA = "0xC38350", Offset = "0xC38350", VA = "0xC38350")]
	private void WhileNotSelected()
	{
	}

	[Token(Token = "0x60005FD")]
	[Address(RVA = "0xC38650", Offset = "0xC38650", VA = "0xC38650")]
	public void Prev()
	{
	}

	[Token(Token = "0x60005FE")]
	[Address(RVA = "0xC388E0", Offset = "0xC388E0", VA = "0xC388E0")]
	public void Next()
	{
	}

	[Token(Token = "0x60005FF")]
	[Address(RVA = "0xC3867C", Offset = "0xC3867C", VA = "0xC3867C")]
	private void LimitID()
	{
	}

	[Token(Token = "0x6000600")]
	[Address(RVA = "0xC386F0", Offset = "0xC386F0", VA = "0xC386F0")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000601")]
	[Address(RVA = "0xC3890C", Offset = "0xC3890C", VA = "0xC3890C")]
	public SpawnSystemVehicles()
	{
	}
}
[Token(Token = "0x200019D")]
public class TeleportPlatform : MonoBehaviour
{
	[Token(Token = "0x4000957")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private GameData gameData;

	[Token(Token = "0x4000958")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Button campaign;

	[Token(Token = "0x6000602")]
	[Address(RVA = "0xC38924", Offset = "0xC38924", VA = "0xC38924")]
	private void Start()
	{
	}

	[Token(Token = "0x6000603")]
	[Address(RVA = "0xC38998", Offset = "0xC38998", VA = "0xC38998")]
	private void Update()
	{
	}

	[Token(Token = "0x6000604")]
	[Address(RVA = "0xC3899C", Offset = "0xC3899C", VA = "0xC3899C")]
	public void LevelFinished(int level)
	{
	}

	[Token(Token = "0x6000605")]
	[Address(RVA = "0xC389D0", Offset = "0xC389D0", VA = "0xC389D0")]
	public void OpenCampaign()
	{
	}

	[Token(Token = "0x6000606")]
	[Address(RVA = "0xC389F4", Offset = "0xC389F4", VA = "0xC389F4")]
	public TeleportPlatform()
	{
	}
}
[Token(Token = "0x200019E")]
public class ThirdPersonCamera : MonoBehaviour
{
	[Token(Token = "0x4000959")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxDistance;

	[Token(Token = "0x400095A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float yOffset;

	[Token(Token = "0x400095B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x400095C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Rigidbody rb;

	[Token(Token = "0x6000607")]
	[Address(RVA = "0xC389FC", Offset = "0xC389FC", VA = "0xC389FC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000608")]
	[Address(RVA = "0xC38A4C", Offset = "0xC38A4C", VA = "0xC38A4C")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000609")]
	[Address(RVA = "0xC38C6C", Offset = "0xC38C6C", VA = "0xC38C6C")]
	public ThirdPersonCamera()
	{
	}
}
[Token(Token = "0x200019F")]
public class TorqueController : MonoBehaviour
{
	[Token(Token = "0x400095D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float factor;

	[Token(Token = "0x600060A")]
	[Address(RVA = "0xC38C7C", Offset = "0xC38C7C", VA = "0xC38C7C")]
	private void Update()
	{
	}

	[Token(Token = "0x600060B")]
	[Address(RVA = "0xC38DC4", Offset = "0xC38DC4", VA = "0xC38DC4")]
	public TorqueController()
	{
	}
}
[Token(Token = "0x20001A0")]
public interface ITriggerZone
{
	[Token(Token = "0x600060C")]
	void OnTriggerZoneEnter();

	[Token(Token = "0x600060D")]
	void OnTriggerZoneExit();
}
[Token(Token = "0x20001A1")]
public class TriggerZone : MonoBehaviour
{
	[Token(Token = "0x400095E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public UnityEvent OnStart;

	[Token(Token = "0x400095F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UnityEvent OnTriggerEnterd;

	[Token(Token = "0x4000960")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public string tagName;

	[Token(Token = "0x600060E")]
	[Address(RVA = "0xC38DD4", Offset = "0xC38DD4", VA = "0xC38DD4")]
	private void Start()
	{
	}

	[Token(Token = "0x600060F")]
	[Address(RVA = "0xC38E70", Offset = "0xC38E70", VA = "0xC38E70")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x6000610")]
	[Address(RVA = "0xC38F78", Offset = "0xC38F78", VA = "0xC38F78")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x6000611")]
	[Address(RVA = "0xC39074", Offset = "0xC39074", VA = "0xC39074")]
	public TriggerZone()
	{
	}
}
[Token(Token = "0x20001A2")]
public class VRInput : MonoBehaviour
{
	[Token(Token = "0x4000961")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRNode leftSource;

	[Token(Token = "0x4000962")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public XRNode rightSource;

	[Token(Token = "0x4000963")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector2 rightJoystick;

	[Token(Token = "0x4000964")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Vector2 leftJoystick;

	[Token(Token = "0x4000965")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float leftTrigger;

	[Token(Token = "0x4000966")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float rightTrigger;

	[Token(Token = "0x4000967")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public bool TriggerPressedL;

	[Token(Token = "0x4000968")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
	public bool TriggerPressedR;

	[Token(Token = "0x4000969")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
	public bool AButtonPressed;

	[Token(Token = "0x400096A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3B")]
	public bool BButtonPressed;

	[Token(Token = "0x400096B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool YButtonPressed;

	[Token(Token = "0x400096C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool XButtonPressed;

	[Token(Token = "0x400096D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool thumbstickPressedL;

	[Token(Token = "0x400096E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool thumbstickPressedR;

	[Token(Token = "0x400096F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float leftGrab;

	[Token(Token = "0x4000970")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float rightGrab;

	[Token(Token = "0x4000971")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public bool GrabPressedL;

	[Token(Token = "0x4000972")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
	public bool GrabPressedR;

	[Token(Token = "0x4000973")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4A")]
	public bool menuOpen;

	[Token(Token = "0x4000974")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public UnityEngine.XR.InputDevice leftDevice;

	[Token(Token = "0x4000975")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public UnityEngine.XR.InputDevice rightDevice;

	[Token(Token = "0x4000976")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	public UnityEngine.XR.InputDevice headset;

	[Token(Token = "0x4000977")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	public Vector3 headAcceleration;

	[Token(Token = "0x6000612")]
	[Address(RVA = "0xC3907C", Offset = "0xC3907C", VA = "0xC3907C")]
	private void TryFindControllers()
	{
	}

	[Token(Token = "0x6000613")]
	[Address(RVA = "0xC390EC", Offset = "0xC390EC", VA = "0xC390EC")]
	private void Start()
	{
	}

	[Token(Token = "0x6000614")]
	[Address(RVA = "0xC390F0", Offset = "0xC390F0", VA = "0xC390F0")]
	public void HapticFeedback(bool left, float intensity, float duration)
	{
	}

	[Token(Token = "0x6000615")]
	[Address(RVA = "0xC3910C", Offset = "0xC3910C", VA = "0xC3910C")]
	private void Update()
	{
	}

	[Token(Token = "0x6000616")]
	[Address(RVA = "0xC39378", Offset = "0xC39378", VA = "0xC39378")]
	public VRInput()
	{
	}
}
[Token(Token = "0x20001A3")]
public class YueSpawnablesHandler : MonoBehaviour
{
	[Token(Token = "0x4000978")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<GameObject> spawnedObjects;

	[Token(Token = "0x4000979")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<Joint> spawnedJoints;

	[Token(Token = "0x6000617")]
	[Address(RVA = "0xC39380", Offset = "0xC39380", VA = "0xC39380")]
	public YueSpawnablesHandler()
	{
	}
}
[Token(Token = "0x20001A4")]
public enum SpawnGunMode
{
	[Token(Token = "0x400097B")]
	Spawn,
	[Token(Token = "0x400097C")]
	Delete
}
[Token(Token = "0x20001A5")]
public class MenuSpawnGun : MonoBehaviour
{
	[Token(Token = "0x400097D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public LayerMask layerMask;

	[Token(Token = "0x400097E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public SpawnGunMode mode;

	[Token(Token = "0x400097F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 spawnOffset;

	[Token(Token = "0x4000980")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float minDistance;

	[Token(Token = "0x4000981")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float maxDistance;

	[Token(Token = "0x4000982")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public GameObject previewPrefab;

	[Token(Token = "0x4000983")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public GameObject dissolvePrefab;

	[Token(Token = "0x4000984")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public LineRenderer lineRenderer;

	[Token(Token = "0x4000985")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public ItemInformation prefabInfo;

	[Token(Token = "0x4000986")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private AudioSource source;

	[Token(Token = "0x4000987")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private GameObject preview;

	[Token(Token = "0x4000988")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private OutlineBoxSpawnGun outlineBox;

	[Token(Token = "0x4000989")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private YueInteractable interactable;

	[Token(Token = "0x400098A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private YueSpawnablesHandler handler;

	[Token(Token = "0x400098B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private Vector3 position;

	[Token(Token = "0x400098C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
	private Quaternion rotation;

	[Token(Token = "0x400098D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private bool isRaycastHit;

	[Token(Token = "0x400098E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
	public bool isMenuHoverd;

	[Token(Token = "0x400098F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Rigidbody groundRigidbody;

	[Token(Token = "0x4000990")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Transform player;

	[Token(Token = "0x4000991")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
	private bool modeSwitchBlock;

	[Token(Token = "0x4000992")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
	private int modeIndex;

	[Token(Token = "0x6000618")]
	[Address(RVA = "0xC39388", Offset = "0xC39388", VA = "0xC39388")]
	private void Start()
	{
	}

	[Token(Token = "0x6000619")]
	[Address(RVA = "0xC39608", Offset = "0xC39608", VA = "0xC39608")]
	private void Update()
	{
	}

	[Token(Token = "0x600061A")]
	[Address(RVA = "0xC3A2A4", Offset = "0xC3A2A4", VA = "0xC3A2A4")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600061B")]
	[Address(RVA = "0xC3A2A8", Offset = "0xC3A2A8", VA = "0xC3A2A8")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x600061C")]
	[Address(RVA = "0xC3A2AC", Offset = "0xC3A2AC", VA = "0xC3A2AC")]
	private void OnTriggerPulled()
	{
	}

	[Token(Token = "0x600061D")]
	[Address(RVA = "0xC3A2C8", Offset = "0xC3A2C8", VA = "0xC3A2C8")]
	private void SpawnGunShot()
	{
	}

	[Token(Token = "0x600061E")]
	[Address(RVA = "0xC3A544", Offset = "0xC3A544", VA = "0xC3A544")]
	private void DeleteGunShot()
	{
	}

	[Token(Token = "0x600061F")]
	[Address(RVA = "0xC39E1C", Offset = "0xC39E1C", VA = "0xC39E1C")]
	private void ResetPreview()
	{
	}

	[Token(Token = "0x6000620")]
	[Address(RVA = "0xC3A92C", Offset = "0xC3A92C", VA = "0xC3A92C")]
	public void SetSelectedItem(ItemInformation item)
	{
	}

	[Token(Token = "0x6000621")]
	[Address(RVA = "0xC3A098", Offset = "0xC3A098", VA = "0xC3A098")]
	private bool CheckHover()
	{
		return default(bool);
	}

	[Token(Token = "0x6000622")]
	[Address(RVA = "0xC3A998", Offset = "0xC3A998", VA = "0xC3A998")]
	private void OnSelected()
	{
	}

	[Token(Token = "0x6000623")]
	[Address(RVA = "0xC39EAC", Offset = "0xC39EAC", VA = "0xC39EAC")]
	private void UpdateMode()
	{
	}

	[Token(Token = "0x6000624")]
	[Address(RVA = "0xC3AAEC", Offset = "0xC3AAEC", VA = "0xC3AAEC")]
	public MenuSpawnGun()
	{
	}
}
[Token(Token = "0x20001A6")]
public class OutlineBoxSpawnGun : MonoBehaviour
{
	[Token(Token = "0x4000993")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetObject;

	[Token(Token = "0x4000994")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform outlineBox;

	[Token(Token = "0x4000995")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public List<GameObject> collisions;

	[Token(Token = "0x4000996")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public MenuSpawnGun gun;

	[Token(Token = "0x4000997")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Material cyan;

	[Token(Token = "0x4000998")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool previewCreated;

	[Token(Token = "0x4000999")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x400099A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public bool isTriggerd;

	[Token(Token = "0x400099B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public Bounds finalBounds;

	[Token(Token = "0x400099C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Transform parent;

	[Token(Token = "0x6000625")]
	[Address(RVA = "0xC3AB00", Offset = "0xC3AB00", VA = "0xC3AB00")]
	private void Start()
	{
	}

	[Token(Token = "0x6000626")]
	[Address(RVA = "0xC3AB50", Offset = "0xC3AB50", VA = "0xC3AB50")]
	private void Update()
	{
	}

	[Token(Token = "0x6000627")]
	[Address(RVA = "0xC3ADEC", Offset = "0xC3ADEC", VA = "0xC3ADEC")]
	private void CreatePreviewMesh()
	{
	}

	[Token(Token = "0x6000628")]
	[Address(RVA = "0xC3B3C0", Offset = "0xC3B3C0", VA = "0xC3B3C0")]
	private Bounds CalculateCombinedBounds(Renderer[] renderers)
	{
		return default(Bounds);
	}

	[Token(Token = "0x6000629")]
	[Address(RVA = "0xC3B5B8", Offset = "0xC3B5B8", VA = "0xC3B5B8")]
	private void DrawBoundsOutline(Bounds bounds)
	{
	}

	[Token(Token = "0x600062A")]
	[Address(RVA = "0xC3B890", Offset = "0xC3B890", VA = "0xC3B890")]
	private Vector3[] GetBoundsCorners(Bounds bounds)
	{
		return null;
	}

	[Token(Token = "0x600062B")]
	[Address(RVA = "0xC3B9C8", Offset = "0xC3B9C8", VA = "0xC3B9C8")]
	private void OnTriggerEnter(Collider other)
	{
	}

	[Token(Token = "0x600062C")]
	[Address(RVA = "0xC3BA84", Offset = "0xC3BA84", VA = "0xC3BA84")]
	private void OnTriggerExit(Collider other)
	{
	}

	[Token(Token = "0x600062D")]
	[Address(RVA = "0xC3BAF0", Offset = "0xC3BAF0", VA = "0xC3BAF0")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x600062E")]
	[Address(RVA = "0xC3BB60", Offset = "0xC3BB60", VA = "0xC3BB60")]
	public OutlineBoxSpawnGun()
	{
	}
}
[Token(Token = "0x20001A7")]
public class SpawnGun : MonoBehaviour
{
	[Token(Token = "0x400099D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public Text slectedText;

	[Token(Token = "0x400099E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public LayerMask layerMask;

	[Token(Token = "0x400099F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float minDistance;

	[Token(Token = "0x40009A0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxDistance;

	[Token(Token = "0x40009A1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int space;

	[Token(Token = "0x40009A2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public bool openUI;

	[Token(Token = "0x40009A3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AnimationCurve curve;

	[Token(Token = "0x40009A4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform scaledUI;

	[Token(Token = "0x40009A5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform info;

	[Token(Token = "0x40009A6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Dependencies")]
	public List<ItemInformation> spawnableItems;

	[Token(Token = "0x40009A7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform start;

	[Token(Token = "0x40009A8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public GameObject prefabUI;

	[Token(Token = "0x40009A9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private int selectedIndex;

	[Token(Token = "0x40009AA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private YueInteractable interactable;

	[Token(Token = "0x40009AB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	private GameObject preview;

	[Token(Token = "0x40009AC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private bool isValid;

	[Token(Token = "0x40009AD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	private Vector3 position;

	[Token(Token = "0x40009AE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private YueSpawnablesHandler handler;

	[Token(Token = "0x40009AF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private bool blocked;

	[Token(Token = "0x40009B0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
	private float scale;

	[Token(Token = "0x40009B1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private float time;

	[Token(Token = "0x40009B2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private AudioSource source;

	[Token(Token = "0x600062F")]
	[Address(RVA = "0xC3BB68", Offset = "0xC3BB68", VA = "0xC3BB68")]
	private void Start()
	{
	}

	[Token(Token = "0x6000630")]
	[Address(RVA = "0xC3BEBC", Offset = "0xC3BEBC", VA = "0xC3BEBC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000631")]
	[Address(RVA = "0xC3C488", Offset = "0xC3C488", VA = "0xC3C488")]
	private void TrySpawnObject()
	{
	}

	[Token(Token = "0x6000632")]
	[Address(RVA = "0xC3C3FC", Offset = "0xC3C3FC", VA = "0xC3C3FC")]
	private void ResetPreview()
	{
	}

	[Token(Token = "0x6000633")]
	[Address(RVA = "0xC3BC98", Offset = "0xC3BC98", VA = "0xC3BC98")]
	private void SetupUI()
	{
	}

	[Token(Token = "0x6000634")]
	[Address(RVA = "0xC3C278", Offset = "0xC3C278", VA = "0xC3C278")]
	private void CheckUI()
	{
	}

	[Token(Token = "0x6000635")]
	[Address(RVA = "0xC3C678", Offset = "0xC3C678", VA = "0xC3C678")]
	public void OnItemSelected(int index)
	{
	}

	[Token(Token = "0x6000636")]
	[Address(RVA = "0xC3C74C", Offset = "0xC3C74C", VA = "0xC3C74C")]
	public SpawnGun()
	{
	}
}
[Token(Token = "0x20001A8")]
public class SpawnGunUIElement : MonoBehaviour
{
	[Token(Token = "0x40009B3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text itemNametext;

	[Token(Token = "0x40009B4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public int index;

	[Token(Token = "0x40009B5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private SpawnGun spawnGun;

	[Token(Token = "0x40009B6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private SpawnMenuCard card;

	[Token(Token = "0x6000637")]
	[Address(RVA = "0xC3C770", Offset = "0xC3C770", VA = "0xC3C770")]
	private void Start()
	{
	}

	[Token(Token = "0x6000638")]
	[Address(RVA = "0xC3C7EC", Offset = "0xC3C7EC", VA = "0xC3C7EC")]
	public void OnObjectSelected()
	{
	}

	[Token(Token = "0x6000639")]
	[Address(RVA = "0xC3C964", Offset = "0xC3C964", VA = "0xC3C964")]
	public SpawnGunUIElement()
	{
	}
}
[Token(Token = "0x20001A9")]
internal interface IUIRegisterEvents
{
	[Token(Token = "0x600063A")]
	void SetItem(int index);
}
[Serializable]
[Token(Token = "0x20001AA")]
public class UIRegisterCard
{
	[Token(Token = "0x40009B7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public string category;

	[Token(Token = "0x40009B8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public int maxItems;

	[Token(Token = "0x40009B9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public List<ItemInformation> items;

	[Token(Token = "0x600063B")]
	[Address(RVA = "0xC3C96C", Offset = "0xC3C96C", VA = "0xC3C96C")]
	public UIRegisterCard()
	{
	}
}
[Token(Token = "0x20001AB")]
public class SpawnMenuCard : MonoBehaviour, IUIRegisterEvents, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
{
	[Token(Token = "0x40009BA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Cards")]
	public List<UIRegisterCard> cards;

	[Token(Token = "0x40009BB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public UIRegisterCard card;

	[Token(Token = "0x40009BC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject prefab;

	[Token(Token = "0x40009BD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Dependencies")]
	public Scrollbar scrollbar;

	[Token(Token = "0x40009BE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Text selectedCategoryText;

	[Token(Token = "0x40009BF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Text maxItemText;

	[Token(Token = "0x40009C0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Text itemText;

	[Token(Token = "0x40009C1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public MenuSpawnGun spawngun;

	[Token(Token = "0x40009C2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public GameObject UIPrefab;

	[Token(Token = "0x40009C3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform start;

	[Token(Token = "0x40009C4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public float offset;

	[Token(Token = "0x40009C5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private List<GameObject> UIElements;

	[Token(Token = "0x40009C6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public List<string> allNames;

	[Token(Token = "0x40009C7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	private int cardIndex;

	[Token(Token = "0x40009C8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
	public bool isMenuHoverd;

	[Token(Token = "0x40009C9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private int hoversCount;

	[Token(Token = "0x40009CA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private EventSystem eventSystem;

	[Token(Token = "0x40009CB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private Rigidbody playerRB;

	[Token(Token = "0x40009CC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private XRUIInputModule uiInputModule;

	[Token(Token = "0x600063C")]
	[Address(RVA = "0xC3C974", Offset = "0xC3C974", VA = "0xC3C974", Slot = "5")]
	public void OnPointerEnter(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600063D")]
	[Address(RVA = "0xC3CB00", Offset = "0xC3CB00", VA = "0xC3CB00", Slot = "6")]
	public void OnPointerExit(PointerEventData eventData)
	{
	}

	[Token(Token = "0x600063E")]
	[Address(RVA = "0xC3CC88", Offset = "0xC3CC88", VA = "0xC3CC88")]
	private void Start()
	{
	}

	[Token(Token = "0x600063F")]
	[Address(RVA = "0xC3D434", Offset = "0xC3D434", VA = "0xC3D434")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000640")]
	[Address(RVA = "0xC3D930", Offset = "0xC3D930", VA = "0xC3D930")]
	public void UpdateSavedBuildsList()
	{
	}

	[Token(Token = "0x6000641")]
	[Address(RVA = "0xC3D44C", Offset = "0xC3D44C", VA = "0xC3D44C")]
	public void SetSelectedCategory(int index)
	{
	}

	[Token(Token = "0x6000642")]
	[Address(RVA = "0xC3DACC", Offset = "0xC3DACC", VA = "0xC3DACC", Slot = "4")]
	public void SetItem(int index)
	{
	}

	[Token(Token = "0x6000643")]
	[Address(RVA = "0xC3CDB8", Offset = "0xC3CDB8", VA = "0xC3CDB8")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x6000644")]
	[Address(RVA = "0xC3DCCC", Offset = "0xC3DCCC", VA = "0xC3DCCC")]
	public void OnSpawnMenuOpen()
	{
	}

	[Token(Token = "0x6000645")]
	[Address(RVA = "0xC3D2B0", Offset = "0xC3D2B0", VA = "0xC3D2B0")]
	private void ResetSpawngunPosition()
	{
	}

	[Token(Token = "0x6000646")]
	[Address(RVA = "0xC3DD74", Offset = "0xC3DD74", VA = "0xC3DD74")]
	public void SetSpawnGun(MenuSpawnGun gun)
	{
	}

	[Token(Token = "0x6000647")]
	[Address(RVA = "0xC3DE1C", Offset = "0xC3DE1C", VA = "0xC3DE1C")]
	public SpawnMenuCard()
	{
	}
}
[Token(Token = "0x20001AC")]
public class UIMessage : MonoBehaviour
{
	[Token(Token = "0x40009CD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float menuDisplayTime;

	[Token(Token = "0x40009CE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Dependencies")]
	public Transform scaler;

	[Token(Token = "0x40009CF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Text messageText;

	[Token(Token = "0x40009D0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private float counter;

	[Token(Token = "0x40009D1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private bool open;

	[Token(Token = "0x40009D2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float fScale;

	[Token(Token = "0x6000648")]
	[Address(RVA = "0xC3DE38", Offset = "0xC3DE38", VA = "0xC3DE38")]
	private void Update()
	{
	}

	[Token(Token = "0x6000649")]
	[Address(RVA = "0xC3DFA4", Offset = "0xC3DFA4", VA = "0xC3DFA4")]
	public void DisplayMessage(string message)
	{
	}

	[Token(Token = "0x600064A")]
	[Address(RVA = "0xC3DFDC", Offset = "0xC3DFDC", VA = "0xC3DFDC")]
	public UIMessage()
	{
	}
}
[Token(Token = "0x20001AD")]
public class WASDTorque : MonoBehaviour
{
	[Token(Token = "0x40009D3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float maxTorque;

	[Token(Token = "0x40009D4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private Rigidbody rb;

	[Token(Token = "0x600064B")]
	[Address(RVA = "0xC3DFEC", Offset = "0xC3DFEC", VA = "0xC3DFEC")]
	private void Start()
	{
	}

	[Token(Token = "0x600064C")]
	[Address(RVA = "0xC3E03C", Offset = "0xC3E03C", VA = "0xC3E03C")]
	private void Update()
	{
	}

	[Token(Token = "0x600064D")]
	[Address(RVA = "0xC3E0E8", Offset = "0xC3E0E8", VA = "0xC3E0E8")]
	public WASDTorque()
	{
	}
}
[Token(Token = "0x20001AE")]
public class SmoothLocalFollow : MonoBehaviour
{
	[Token(Token = "0x40009D5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform source;

	[Token(Token = "0x40009D6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float smoothFactor;

	[Token(Token = "0x600064E")]
	[Address(RVA = "0xC3E0F8", Offset = "0xC3E0F8", VA = "0xC3E0F8")]
	private void Update()
	{
	}

	[Token(Token = "0x600064F")]
	[Address(RVA = "0xC3E244", Offset = "0xC3E244", VA = "0xC3E244")]
	public SmoothLocalFollow()
	{
	}
}
[Token(Token = "0x20001AF")]
public class SkyboxCamera : MonoBehaviour
{
	[Token(Token = "0x40009D7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera m_MainCamera;

	[Token(Token = "0x40009D8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private float m_SkyboxScale;

	[Token(Token = "0x40009D9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private Vector3 mainCamStartPos;

	[Token(Token = "0x40009DA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private Vector3 skyboxCamStartPos;

	[Token(Token = "0x6000650")]
	[Address(RVA = "0xC3E254", Offset = "0xC3E254", VA = "0xC3E254")]
	private void Start()
	{
	}

	[Token(Token = "0x6000651")]
	[Address(RVA = "0xC3E318", Offset = "0xC3E318", VA = "0xC3E318")]
	private void Update()
	{
	}

	[Token(Token = "0x6000652")]
	[Address(RVA = "0xC3E3F8", Offset = "0xC3E3F8", VA = "0xC3E3F8")]
	public SkyboxCamera()
	{
	}
}
[Token(Token = "0x20001B0")]
[ExecuteAlways]
public class ScreenSpacePlacement : MonoBehaviour
{
	[Token(Token = "0x40009DB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private Camera m_Cam;

	[Token(Token = "0x40009DC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_FlareObject;

	[Token(Token = "0x6000653")]
	[Address(RVA = "0xC3E408", Offset = "0xC3E408", VA = "0xC3E408")]
	private void OnGUI()
	{
	}

	[Token(Token = "0x6000654")]
	[Address(RVA = "0xC3E55C", Offset = "0xC3E55C", VA = "0xC3E55C")]
	public ScreenSpacePlacement()
	{
	}
}
[Token(Token = "0x20001B1")]
public class KeepFrameFeature : ScriptableRendererFeature
{
	[Token(Token = "0x20001B2")]
	private class CopyFramePass : ScriptableRenderPass
	{
		[Token(Token = "0x1700003F")]
		private RenderTargetIdentifier source
		{
			[Token(Token = "0x6000658")]
			[Address(RVA = "0xC3E898", Offset = "0xC3E898", VA = "0xC3E898")]
			[CompilerGenerated]
			get
			{
				return default(RenderTargetIdentifier);
			}
			[Token(Token = "0x6000659")]
			[Address(RVA = "0xC3E8B0", Offset = "0xC3E8B0", VA = "0xC3E8B0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000040")]
		private RenderTargetHandle destination
		{
			[Token(Token = "0x600065A")]
			[Address(RVA = "0xC3E8C8", Offset = "0xC3E8C8", VA = "0xC3E8C8")]
			[CompilerGenerated]
			get
			{
				return default(RenderTargetHandle);
			}
			[Token(Token = "0x600065B")]
			[Address(RVA = "0xC3E8DC", Offset = "0xC3E8DC", VA = "0xC3E8DC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x600065C")]
		[Address(RVA = "0xC3E7E4", Offset = "0xC3E7E4", VA = "0xC3E7E4")]
		public void Setup(RenderTargetIdentifier source, RenderTargetHandle destination)
		{
		}

		[Token(Token = "0x600065D")]
		[Address(RVA = "0xC3E8F0", Offset = "0xC3E8F0", VA = "0xC3E8F0", Slot = "9")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x600065E")]
		[Address(RVA = "0xC3EA34", Offset = "0xC3EA34", VA = "0xC3EA34", Slot = "7")]
		public override void OnCameraCleanup(CommandBuffer cmd)
		{
		}

		[Token(Token = "0x600065F")]
		[Address(RVA = "0xC3E604", Offset = "0xC3E604", VA = "0xC3E604")]
		public CopyFramePass()
		{
		}
	}

	[Token(Token = "0x20001B3")]
	private class DrawOldFramePass : ScriptableRenderPass
	{
		[Token(Token = "0x40009E3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Material m_DrawOldFrameMaterial;

		[Token(Token = "0x40009E4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private RenderTargetHandle m_handle;

		[Token(Token = "0x40009E5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private string m_textureName;

		[Token(Token = "0x6000660")]
		[Address(RVA = "0xC3E80C", Offset = "0xC3E80C", VA = "0xC3E80C")]
		public void Setup(Material drawOldFrameMaterial, RenderTargetHandle handle, string textureName)
		{
		}

		[Token(Token = "0x6000661")]
		[Address(RVA = "0xC3EB34", Offset = "0xC3EB34", VA = "0xC3EB34", Slot = "6")]
		public override void Configure(CommandBuffer cmd, RenderTextureDescriptor cameraTextureDescripor)
		{
		}

		[Token(Token = "0x6000662")]
		[Address(RVA = "0xC3EBD8", Offset = "0xC3EBD8", VA = "0xC3EBD8", Slot = "9")]
		public override void Execute(ScriptableRenderContext context, ref RenderingData renderingData)
		{
		}

		[Token(Token = "0x6000663")]
		[Address(RVA = "0xC3E60C", Offset = "0xC3E60C", VA = "0xC3E60C")]
		public DrawOldFramePass()
		{
		}
	}

	[Serializable]
	[Token(Token = "0x20001B4")]
	public class Settings
	{
		[Token(Token = "0x40009E6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Tooltip("The material that is used when the old frame is redrawn at the start of the new frame (before opaques).")]
		public Material displayMaterial;

		[Token(Token = "0x40009E7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The name of the texture used for referencing the copied frame. (Defaults to _FrameCopyTex if empty)")]
		public string textureName;

		[Token(Token = "0x6000664")]
		[Address(RVA = "0xC3E890", Offset = "0xC3E890", VA = "0xC3E890")]
		public Settings()
		{
		}
	}

	[Token(Token = "0x40009DD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private CopyFramePass m_CopyFrame;

	[Token(Token = "0x40009DE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private DrawOldFramePass m_DrawOldFame;

	[Token(Token = "0x40009DF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private RenderTargetHandle m_OldFrameHandle;

	[Token(Token = "0x40009E0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Settings settings;

	[Token(Token = "0x6000655")]
	[Address(RVA = "0xC3E564", Offset = "0xC3E564", VA = "0xC3E564", Slot = "5")]
	public override void Create()
	{
	}

	[Token(Token = "0x6000656")]
	[Address(RVA = "0xC3E614", Offset = "0xC3E614", VA = "0xC3E614", Slot = "7")]
	public override void AddRenderPasses(ScriptableRenderer renderer, ref RenderingData renderingData)
	{
	}

	[Token(Token = "0x6000657")]
	[Address(RVA = "0xC3E828", Offset = "0xC3E828", VA = "0xC3E828")]
	public KeepFrameFeature()
	{
	}
}
[Token(Token = "0x20001B5")]
[ExecuteAlways]
public class AutoLoadPipelineAsset : MonoBehaviour
{
	[Token(Token = "0x40009E8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private UniversalRenderPipelineAsset m_PipelineAsset;

	[Token(Token = "0x40009E9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private RenderPipelineAsset m_PreviousPipelineAsset;

	[Token(Token = "0x40009EA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool m_overrodeQualitySettings;

	[Token(Token = "0x6000665")]
	[Address(RVA = "0xC3EE90", Offset = "0xC3EE90", VA = "0xC3EE90")]
	private void OnEnable()
	{
	}

	[Token(Token = "0x6000666")]
	[Address(RVA = "0xC3EFEC", Offset = "0xC3EFEC", VA = "0xC3EFEC")]
	private void OnDisable()
	{
	}

	[Token(Token = "0x6000667")]
	[Address(RVA = "0xC3EE94", Offset = "0xC3EE94", VA = "0xC3EE94")]
	private void UpdatePipeline()
	{
	}

	[Token(Token = "0x6000668")]
	[Address(RVA = "0xC3EFF0", Offset = "0xC3EFF0", VA = "0xC3EFF0")]
	private void ResetPipeline()
	{
	}

	[Token(Token = "0x6000669")]
	[Address(RVA = "0xC3F07C", Offset = "0xC3F07C", VA = "0xC3F07C")]
	public AutoLoadPipelineAsset()
	{
	}
}
[Token(Token = "0x20001B6")]
[RequireComponent(typeof(CharacterController))]
public class FirstPersonController : MonoBehaviour
{
	[Token(Token = "0x40009EB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[SerializeField]
	private float m_MouseSensitivity;

	[Token(Token = "0x40009EC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[SerializeField]
	private float m_MovementSpeed;

	[Token(Token = "0x40009ED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[SerializeField]
	private Transform m_PlayerCamera;

	[Token(Token = "0x40009EE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[SerializeField]
	private bool m_MoveWithMouse;

	[Token(Token = "0x40009EF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private CharacterController m_CharacterController;

	[Token(Token = "0x40009F0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private float m_XRotation;

	[Token(Token = "0x40009F1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	[SerializeField]
	private byte m_ButtonMovementFlags;

	[Token(Token = "0x600066A")]
	[Address(RVA = "0xC3F084", Offset = "0xC3F084", VA = "0xC3F084")]
	private void Start()
	{
	}

	[Token(Token = "0x600066B")]
	[Address(RVA = "0xC3F11C", Offset = "0xC3F11C", VA = "0xC3F11C")]
	private void Update()
	{
	}

	[Token(Token = "0x600066C")]
	[Address(RVA = "0xC3F134", Offset = "0xC3F134", VA = "0xC3F134")]
	private void Look()
	{
	}

	[Token(Token = "0x600066D")]
	[Address(RVA = "0xC3F21C", Offset = "0xC3F21C", VA = "0xC3F21C")]
	private void Move()
	{
	}

	[Token(Token = "0x600066E")]
	[Address(RVA = "0xC3F30C", Offset = "0xC3F30C", VA = "0xC3F30C")]
	private Vector2 GetLookInput()
	{
		return default(Vector2);
	}

	[Token(Token = "0x600066F")]
	[Address(RVA = "0xC3F3D0", Offset = "0xC3F3D0", VA = "0xC3F3D0")]
	private Vector3 GetMovementInput()
	{
		return default(Vector3);
	}

	[Token(Token = "0x6000670")]
	[Address(RVA = "0xC3F468", Offset = "0xC3F468", VA = "0xC3F468")]
	public FirstPersonController()
	{
	}
}
[Token(Token = "0x20001B7")]
[ExecuteInEditMode]
public class YueSoftBodyMesh : MonoBehaviour
{
	[Token(Token = "0x40009F2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float mass;

	[Token(Token = "0x40009F3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float force;

	[Token(Token = "0x40009F4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float damper;

	[Token(Token = "0x40009F5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float combineRadius;

	[Token(Token = "0x40009F6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float maxOverlap;

	[Token(Token = "0x40009F7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<Vector3> bones;

	[Token(Token = "0x40009F8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public List<List<int>> bonesVertices;

	[Token(Token = "0x40009F9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3[] vertices;

	[Token(Token = "0x40009FA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public int[] triangles;

	[Token(Token = "0x40009FB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Vector2[] uvs;

	[Token(Token = "0x40009FC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public List<Transform> boneTransforms;

	[Token(Token = "0x40009FD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Material material;

	[Token(Token = "0x6000671")]
	[Address(RVA = "0xC3F484", Offset = "0xC3F484", VA = "0xC3F484")]
	private void Start()
	{
	}

	[Token(Token = "0x6000672")]
	[Address(RVA = "0xC3F49C", Offset = "0xC3F49C", VA = "0xC3F49C")]
	private void CalculateBones()
	{
	}

	[Token(Token = "0x6000673")]
	[Address(RVA = "0xC3FB30", Offset = "0xC3FB30", VA = "0xC3FB30")]
	private void CreateSkinnedMesh()
	{
	}

	[Token(Token = "0x6000674")]
	[Address(RVA = "0xC402E8", Offset = "0xC402E8", VA = "0xC402E8")]
	private void SetupJoint(Rigidbody target, Transform bone)
	{
	}

	[Token(Token = "0x6000675")]
	[Address(RVA = "0xC40488", Offset = "0xC40488", VA = "0xC40488")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x6000676")]
	[Address(RVA = "0xC4066C", Offset = "0xC4066C", VA = "0xC4066C")]
	public YueSoftBodyMesh()
	{
	}
}
[Token(Token = "0x20001B8")]
public class NPCBehaviourMenu : MonoBehaviour
{
	[Token(Token = "0x40009FE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[HideInInspector]
	public YueActiveRagdollNPC npc;

	[Token(Token = "0x40009FF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Toggle follow;

	[Token(Token = "0x4000A00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Toggle attack;

	[Token(Token = "0x4000A01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Toggle spott;

	[Token(Token = "0x4000A02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Toggle provoked;

	[Token(Token = "0x4000A03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Toggle hasGun;

	[Token(Token = "0x4000A04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Transform cam;

	[Token(Token = "0x6000677")]
	[Address(RVA = "0xC40688", Offset = "0xC40688", VA = "0xC40688")]
	public void InIt(YueActiveRagdollNPC thisNPC)
	{
	}

	[Token(Token = "0x6000678")]
	[Address(RVA = "0xC407AC", Offset = "0xC407AC", VA = "0xC407AC")]
	private void InitMenu()
	{
	}

	[Token(Token = "0x6000679")]
	[Address(RVA = "0xC40848", Offset = "0xC40848", VA = "0xC40848")]
	private void Update()
	{
	}

	[Token(Token = "0x600067A")]
	[Address(RVA = "0xC40908", Offset = "0xC40908", VA = "0xC40908")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x600067B")]
	[Address(RVA = "0xC4099C", Offset = "0xC4099C", VA = "0xC4099C")]
	public void ChangesDone()
	{
	}

	[Token(Token = "0x600067C")]
	[Address(RVA = "0xC40A08", Offset = "0xC40A08", VA = "0xC40A08")]
	public void SetHasGun(bool hasGun)
	{
	}

	[Token(Token = "0x600067D")]
	[Address(RVA = "0xC40A2C", Offset = "0xC40A2C", VA = "0xC40A2C")]
	public void SetFightAgainstTarget(bool attack)
	{
	}

	[Token(Token = "0x600067E")]
	[Address(RVA = "0xC40A4C", Offset = "0xC40A4C", VA = "0xC40A4C")]
	public void SetFollowTarget(bool follow)
	{
	}

	[Token(Token = "0x600067F")]
	[Address(RVA = "0xC40A6C", Offset = "0xC40A6C", VA = "0xC40A6C")]
	public void SetAttackOnSight(bool attackOnSight)
	{
	}

	[Token(Token = "0x6000680")]
	[Address(RVA = "0xC40A8C", Offset = "0xC40A8C", VA = "0xC40A8C")]
	public void SetAttackOnProvoked(bool attackOnProvoke)
	{
	}

	[Token(Token = "0x6000681")]
	[Address(RVA = "0xC40AAC", Offset = "0xC40AAC", VA = "0xC40AAC")]
	public NPCBehaviourMenu()
	{
	}
}
[Token(Token = "0x20001B9")]
[ExecuteInEditMode]
public class YueActiveRagdollIKCreator : MonoBehaviour
{
	[Token(Token = "0x4000A05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool setupIKTargets;

	[Token(Token = "0x4000A06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private YueActiveRagdollIK ikHandler;

	[Token(Token = "0x4000A07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private YueActiveRagdollLocomotion locomotion;

	[Token(Token = "0x4000A08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private YueActiveRagdollNPC npc;

	[Token(Token = "0x4000A09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform ikTargets;

	[Token(Token = "0x6000682")]
	[Address(RVA = "0xC40AB4", Offset = "0xC40AB4", VA = "0xC40AB4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000683")]
	[Address(RVA = "0xC40AD4", Offset = "0xC40AD4", VA = "0xC40AD4")]
	private void SetupTargets()
	{
	}

	[Token(Token = "0x6000684")]
	[Address(RVA = "0xC40C28", Offset = "0xC40C28", VA = "0xC40C28")]
	private void CreateTargets()
	{
	}

	[Token(Token = "0x6000685")]
	[Address(RVA = "0xC41150", Offset = "0xC41150", VA = "0xC41150")]
	private Transform CreateTarget(string objectName, Vector3 position)
	{
		return null;
	}

	[Token(Token = "0x6000686")]
	[Address(RVA = "0xC41278", Offset = "0xC41278", VA = "0xC41278")]
	public YueActiveRagdollIKCreator()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BA")]
public class RagdollLocomotionTuning
{
	[Token(Token = "0x4000A0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public float standingThreshold;

	[Token(Token = "0x4000A0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	[Header("Input")]
	public float inputFactor;

	[Token(Token = "0x4000A0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float inputOffsetFactor;

	[Token(Token = "0x4000A0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	[Header("Balance")]
	public float imbalanceOffsetFactor;

	[Token(Token = "0x4000A0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float imbalanceFactor;

	[Token(Token = "0x4000A0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float imbalanceThreshold;

	[Token(Token = "0x4000A10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Velocity")]
	public float velocityFactor;

	[Token(Token = "0x6000687")]
	[Address(RVA = "0xC41280", Offset = "0xC41280", VA = "0xC41280")]
	public RagdollLocomotionTuning()
	{
	}
}
[Serializable]
[Token(Token = "0x20001BB")]
public class YueLocomotionFoot
{
	[Token(Token = "0x4000A11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	[HideInInspector]
	public YueActiveRagdollLocomotion locomotion;

	[Token(Token = "0x4000A12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Range(-1f, 1f)]
	public float startFinishStepWeight;

	[Token(Token = "0x4000A13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public bool loadBearing;

	[Token(Token = "0x4000A14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
	public bool lastLoadBearing;

	[Token(Token = "0x4000A15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1E")]
	public bool dir;

	[Token(Token = "0x4000A16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1F")]
	public bool left;

	[Token(Token = "0x4000A17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform foot;

	[Token(Token = "0x4000A18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform footIKTarget;

	[Token(Token = "0x4000A19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform startStep;

	[Token(Token = "0x4000A1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform finishStep;

	[Token(Token = "0x4000A1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform centerOfMass;

	[Token(Token = "0x4000A1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Vector3 footIKPos;

	[Token(Token = "0x4000A1D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private Quaternion footIKRotation;

	[Token(Token = "0x4000A1E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	private float lookDirectionError;

	[Token(Token = "0x4000A1F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	private Rigidbody rb;

	[Token(Token = "0x4000A20")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	private Vector3 idlePosition;

	[Token(Token = "0x4000A21")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
	private bool lastLoadBaering;

	[Token(Token = "0x6000688")]
	[Address(RVA = "0xC412A8", Offset = "0xC412A8", VA = "0xC412A8")]
	private YueLocomotionFoot()
	{
	}

	[Token(Token = "0x6000689")]
	[Address(RVA = "0xC412B8", Offset = "0xC412B8", VA = "0xC412B8")]
	public void Update()
	{
	}

	[Token(Token = "0x600068A")]
	[Address(RVA = "0xC4135C", Offset = "0xC4135C", VA = "0xC4135C")]
	private void UpdateWeights()
	{
	}

	[Token(Token = "0x600068B")]
	[Address(RVA = "0xC413CC", Offset = "0xC413CC", VA = "0xC413CC")]
	private void UpdateInterpolation()
	{
	}

	[Token(Token = "0x600068C")]
	[Address(RVA = "0xC419CC", Offset = "0xC419CC", VA = "0xC419CC")]
	private void CalculateNewStep(Transform step)
	{
	}

	[Token(Token = "0x600068D")]
	[Address(RVA = "0xC41808", Offset = "0xC41808", VA = "0xC41808")]
	private void UpdateFookIK()
	{
	}
}
[Token(Token = "0x20001BC")]
public class YueActiveRagdollLocomotion : MonoBehaviour
{
	[Token(Token = "0x4000A22")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public RagdollLocomotionTuning tuning;

	[Token(Token = "0x4000A23")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 footOffset;

	[Token(Token = "0x4000A24")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float smoothCom;

	[Token(Token = "0x4000A25")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sidewaysFactor;

	[Token(Token = "0x4000A26")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float maxStepLength;

	[Token(Token = "0x4000A27")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float closeOffset;

	[Token(Token = "0x4000A28")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public float idleDistance;

	[Token(Token = "0x4000A29")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public float interpolationYOffset;

	[Token(Token = "0x4000A2A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	public float unbearingOffset;

	[Token(Token = "0x4000A2B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public float unbearingOffsetSide;

	[Token(Token = "0x4000A2C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	public float interpolationSpeed;

	[Token(Token = "0x4000A2D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public float smoothingFactor;

	[Token(Token = "0x4000A2E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	public float hipOffsetFactor;

	[Token(Token = "0x4000A2F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public float hipStepOffsetFactor;

	[Token(Token = "0x4000A30")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	public float smoothHipOffset;

	[Token(Token = "0x4000A31")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public bool isWalking;

	[Token(Token = "0x4000A32")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
	[Range(-1f, 1f)]
	public float startFinishStepWeight;

	[Token(Token = "0x4000A33")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	public bool dir;

	[Token(Token = "0x4000A34")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	public Vector3 input;

	[Token(Token = "0x4000A35")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	public Vector3 lookDirection;

	[Token(Token = "0x4000A36")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	public YueLocomotionFoot leftFoot;

	[Token(Token = "0x4000A37")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	public YueLocomotionFoot rightFoot;

	[Token(Token = "0x4000A38")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	[HideInInspector]
	public YueActiveRagdoll ragdoll;

	[Token(Token = "0x4000A39")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private Animator physicalAnimator;

	[Token(Token = "0x4000A3A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private Quaternion smoothOffset;

	[Token(Token = "0x600068E")]
	[Address(RVA = "0xC42088", Offset = "0xC42088", VA = "0xC42088")]
	private void Start()
	{
	}

	[Token(Token = "0x600068F")]
	[Address(RVA = "0xC42168", Offset = "0xC42168", VA = "0xC42168")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000690")]
	[Address(RVA = "0xC423A0", Offset = "0xC423A0", VA = "0xC423A0")]
	private void UpdateWeight()
	{
	}

	[Token(Token = "0x6000691")]
	[Address(RVA = "0xC4243C", Offset = "0xC4243C", VA = "0xC4243C")]
	public YueActiveRagdollLocomotion()
	{
	}
}
[Token(Token = "0x20001BD")]
public class BodyReference : MonoBehaviour
{
	[Token(Token = "0x4000A3B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Animator animator;

	[Token(Token = "0x4000A3C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public HandAnimation handAnimation;

	[Token(Token = "0x4000A3D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public VRIK playerIK;

	[Token(Token = "0x4000A3E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public AnimationManager manager;

	[Token(Token = "0x4000A3F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform root;

	[Token(Token = "0x4000A40")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform headAttach;

	[Token(Token = "0x4000A41")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform leftHandAttach;

	[Token(Token = "0x4000A42")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public Transform rightHandAttach;

	[Token(Token = "0x6000692")]
	[Address(RVA = "0xC42474", Offset = "0xC42474", VA = "0xC42474")]
	public BodyReference()
	{
	}
}
[Token(Token = "0x20001BE")]
public class GroundSpaceTracker : MonoBehaviour
{
	[Token(Token = "0x4000A43")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform source;

	[Token(Token = "0x4000A44")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerController playerController;

	[Token(Token = "0x6000693")]
	[Address(RVA = "0xC4247C", Offset = "0xC4247C", VA = "0xC4247C")]
	private void Start()
	{
	}

	[Token(Token = "0x6000694")]
	[Address(RVA = "0xC424CC", Offset = "0xC424CC", VA = "0xC424CC")]
	private void Update()
	{
	}

	[Token(Token = "0x6000695")]
	[Address(RVA = "0xC42578", Offset = "0xC42578", VA = "0xC42578")]
	public GroundSpaceTracker()
	{
	}
}
[Token(Token = "0x20001BF")]
public class LocoMotionHandSphere : MonoBehaviour
{
	[Token(Token = "0x4000A45")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float proportional;

	[Token(Token = "0x4000A46")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float derivative;

	[Token(Token = "0x4000A47")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 attachedForce;

	[Token(Token = "0x4000A48")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform source;

	[Token(Token = "0x4000A49")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private PDController pdController;

	[Token(Token = "0x4000A4A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rigidBody;

	[Token(Token = "0x6000696")]
	[Address(RVA = "0xC42580", Offset = "0xC42580", VA = "0xC42580")]
	private void Start()
	{
	}

	[Token(Token = "0x6000697")]
	[Address(RVA = "0xC42624", Offset = "0xC42624", VA = "0xC42624")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x6000698")]
	[Address(RVA = "0xC427C8", Offset = "0xC427C8", VA = "0xC427C8")]
	public LocoMotionHandSphere()
	{
	}
}
[Token(Token = "0x20001C0")]
[RequireComponent(typeof(Rigidbody))]
public class LocoMotionSphere : MonoBehaviour
{
	[Token(Token = "0x4000A4B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float input;

	[Token(Token = "0x4000A4C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxValue;

	[Token(Token = "0x4000A4D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float proportional;

	[Token(Token = "0x4000A4E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float derivative;

	[Token(Token = "0x4000A4F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[HideInInspector]
	public Vector3 attachedForce;

	[Token(Token = "0x4000A50")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private Transform cam;

	[Token(Token = "0x4000A51")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Transform rig;

	[Token(Token = "0x4000A52")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private PDController pdController;

	[Token(Token = "0x4000A53")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public Rigidbody rigidBody;

	[Token(Token = "0x6000699")]
	[Address(RVA = "0xC427DC", Offset = "0xC427DC", VA = "0xC427DC")]
	private void Start()
	{
	}

	[Token(Token = "0x600069A")]
	[Address(RVA = "0xC428C8", Offset = "0xC428C8", VA = "0xC428C8")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600069B")]
	[Address(RVA = "0xC42A0C", Offset = "0xC42A0C", VA = "0xC42A0C")]
	public LocoMotionSphere()
	{
	}
}
[Token(Token = "0x20001C1")]
[ExecuteInEditMode]
public class MirrorOnPlane : MonoBehaviour
{
	[Token(Token = "0x4000A54")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool xAxis;

	[Token(Token = "0x4000A55")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
	public bool yAxis;

	[Token(Token = "0x4000A56")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
	public bool zAxis;

	[Token(Token = "0x4000A57")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
	public bool mirror;

	[Token(Token = "0x4000A58")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Dependencies")]
	public Transform source;

	[Token(Token = "0x600069C")]
	[Address(RVA = "0xC42A28", Offset = "0xC42A28", VA = "0xC42A28")]
	private void Update()
	{
	}

	[Token(Token = "0x600069D")]
	[Address(RVA = "0xC42CA4", Offset = "0xC42CA4", VA = "0xC42CA4")]
	public MirrorOnPlane()
	{
	}
}
[Token(Token = "0x20001C2")]
public class MirrorTransform : MonoBehaviour
{
	[Token(Token = "0x4000A59")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform source;

	[Token(Token = "0x600069E")]
	[Address(RVA = "0xC42CAC", Offset = "0xC42CAC", VA = "0xC42CAC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x600069F")]
	[Address(RVA = "0xC42D4C", Offset = "0xC42D4C", VA = "0xC42D4C")]
	public MirrorTransform()
	{
	}
}
[Token(Token = "0x20001C3")]
public class PDController
{
	[Token(Token = "0x4000A5A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 pd;

	[Token(Token = "0x4000A5B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 p;

	[Token(Token = "0x4000A5C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 d;

	[Token(Token = "0x4000A5D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 lastError;

	[Token(Token = "0x4000A5E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool resetFlag;

	[Token(Token = "0x60006A0")]
	[Address(RVA = "0xC42614", Offset = "0xC42614", VA = "0xC42614")]
	public PDController()
	{
	}

	[Token(Token = "0x60006A1")]
	[Address(RVA = "0xC42714", Offset = "0xC42714", VA = "0xC42714")]
	public Vector3 CalculatePD(Vector3 error, float pk, float dk)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A2")]
	[Address(RVA = "0xC42DF4", Offset = "0xC42DF4", VA = "0xC42DF4")]
	public Vector3 CalculatePD(Vector3 error, float pk, float dk, AnimationCurve curve)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A3")]
	[Address(RVA = "0xC42D54", Offset = "0xC42D54", VA = "0xC42D54")]
	private Vector3 CheckFlags()
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006A4")]
	[Address(RVA = "0xC42FC8", Offset = "0xC42FC8", VA = "0xC42FC8")]
	public void ResetController()
	{
	}
}
[Token(Token = "0x20001C4")]
public class PhysicalHand : MonoBehaviour
{
	[Token(Token = "0x4000A5F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool left;

	[Token(Token = "0x4000A60")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxError;

	[Token(Token = "0x4000A61")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform target;

	[Token(Token = "0x4000A62")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private VRInput vrInput;

	[Token(Token = "0x60006A5")]
	[Address(RVA = "0xC42FD4", Offset = "0xC42FD4", VA = "0xC42FD4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006A6")]
	[Address(RVA = "0xC43040", Offset = "0xC43040", VA = "0xC43040")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006A7")]
	[Address(RVA = "0xC43220", Offset = "0xC43220", VA = "0xC43220")]
	public PhysicalHand()
	{
	}
}
[Token(Token = "0x20001C5")]
public class PIDController
{
	[Token(Token = "0x4000A63")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	private Vector3 pd;

	[Token(Token = "0x4000A64")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private Vector3 p;

	[Token(Token = "0x4000A65")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private Vector3 i;

	[Token(Token = "0x4000A66")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	private Vector3 d;

	[Token(Token = "0x4000A67")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Vector3 lastE;

	[Token(Token = "0x4000A68")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
	private bool resetFlag;

	[Token(Token = "0x60006A8")]
	[Address(RVA = "0xC43234", Offset = "0xC43234", VA = "0xC43234")]
	public PIDController()
	{
	}

	[Token(Token = "0x60006A9")]
	[Address(RVA = "0xC4323C", Offset = "0xC4323C", VA = "0xC4323C")]
	public Vector3 CalculatePID(Vector3 e, float pk, float ik, float dk)
	{
		return default(Vector3);
	}

	[Token(Token = "0x60006AA")]
	[Address(RVA = "0xC43398", Offset = "0xC43398", VA = "0xC43398")]
	public void ResetController()
	{
	}
}
[Token(Token = "0x20001C6")]
[ExecuteInEditMode]
public class QuickRootFixer : MonoBehaviour
{
	[Token(Token = "0x4000A69")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool fix;

	[Token(Token = "0x4000A6A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform leftRootNew;

	[Token(Token = "0x4000A6B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform leftRootOld;

	[Token(Token = "0x4000A6C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform rightRootNew;

	[Token(Token = "0x4000A6D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform rightRootOld;

	[Token(Token = "0x4000A6E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Transform targetLeft;

	[Token(Token = "0x4000A6F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public Transform targetRight;

	[Token(Token = "0x4000A70")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public YueHandposeZone zone;

	[Token(Token = "0x60006AB")]
	[Address(RVA = "0xC433A4", Offset = "0xC433A4", VA = "0xC433A4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006AC")]
	[Address(RVA = "0xC433A8", Offset = "0xC433A8", VA = "0xC433A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006AD")]
	[Address(RVA = "0xC433F4", Offset = "0xC433F4", VA = "0xC433F4")]
	private void FixRoot(Transform n, Transform o, Transform t)
	{
	}

	[Token(Token = "0x60006AE")]
	[Address(RVA = "0xC43600", Offset = "0xC43600", VA = "0xC43600")]
	public QuickRootFixer()
	{
	}
}
[Token(Token = "0x20001C7")]
[CreateAssetMenu(fileName = "New Data", menuName = "YueInteractions/SnapData")]
public class SnapZoneData : ScriptableObject
{
	[Token(Token = "0x4000A71")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public List<SnapZone> snapzones;

	[Token(Token = "0x60006AF")]
	[Address(RVA = "0xC43608", Offset = "0xC43608", VA = "0xC43608")]
	public SnapZoneData()
	{
	}
}
[Token(Token = "0x20001C8")]
public class UpperbodySpaceTracker : MonoBehaviour
{
	[Token(Token = "0x4000A72")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float limitPosition;

	[Token(Token = "0x4000A73")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float limitRotation;

	[Token(Token = "0x4000A74")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float neckLength;

	[Token(Token = "0x4000A75")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform head;

	[Token(Token = "0x4000A76")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform direction;

	[Token(Token = "0x60006B0")]
	[Address(RVA = "0xC43610", Offset = "0xC43610", VA = "0xC43610")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B1")]
	[Address(RVA = "0xC4368C", Offset = "0xC4368C", VA = "0xC4368C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B2")]
	[Address(RVA = "0xC439AC", Offset = "0xC439AC", VA = "0xC439AC")]
	public UpperbodySpaceTracker()
	{
	}
}
[Token(Token = "0x20001C9")]
public class YueBodyCollider : MonoBehaviour
{
	[Token(Token = "0x4000A77")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float radius;

	[Token(Token = "0x4000A78")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Dependencies")]
	public Transform start;

	[Token(Token = "0x4000A79")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform end;

	[Token(Token = "0x60006B3")]
	[Address(RVA = "0xC439CC", Offset = "0xC439CC", VA = "0xC439CC")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006B4")]
	[Address(RVA = "0xC43C98", Offset = "0xC43C98", VA = "0xC43C98")]
	public YueBodyCollider()
	{
	}
}
[Token(Token = "0x20001CA")]
public class YueCrouchZone : MonoBehaviour, ITriggerZone
{
	[Token(Token = "0x4000A7A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float minCrouch;

	[Token(Token = "0x4000A7B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private PlayerController controller;

	[Token(Token = "0x4000A7C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private bool isPlayerInRange;

	[Token(Token = "0x60006B5")]
	[Address(RVA = "0xC43CA0", Offset = "0xC43CA0", VA = "0xC43CA0", Slot = "4")]
	public void OnTriggerZoneEnter()
	{
	}

	[Token(Token = "0x60006B6")]
	[Address(RVA = "0xC43CAC", Offset = "0xC43CAC", VA = "0xC43CAC", Slot = "5")]
	public void OnTriggerZoneExit()
	{
	}

	[Token(Token = "0x60006B7")]
	[Address(RVA = "0xC43CB4", Offset = "0xC43CB4", VA = "0xC43CB4")]
	private void Start()
	{
	}

	[Token(Token = "0x60006B8")]
	[Address(RVA = "0xC43D24", Offset = "0xC43D24", VA = "0xC43D24")]
	private void Update()
	{
	}

	[Token(Token = "0x60006B9")]
	[Address(RVA = "0xC43D58", Offset = "0xC43D58", VA = "0xC43D58")]
	public YueCrouchZone()
	{
	}
}
[Token(Token = "0x20001CB")]
public class YueCustomTransform : MonoBehaviour
{
	[Token(Token = "0x4000A7D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Transform targetPos;

	[Token(Token = "0x4000A7E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform targetRot;

	[Token(Token = "0x60006BA")]
	[Address(RVA = "0xC43D68", Offset = "0xC43D68", VA = "0xC43D68")]
	private void FixedUpdate()
	{
	}

	[Token(Token = "0x60006BB")]
	[Address(RVA = "0xC43DE4", Offset = "0xC43DE4", VA = "0xC43DE4")]
	public YueCustomTransform()
	{
	}
}
[Token(Token = "0x20001CC")]
public class YueForceGrab : MonoBehaviour
{
	[Token(Token = "0x4000A7F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Configuration")]
	public float minDistance;

	[Token(Token = "0x4000A80")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxDistance;

	[Token(Token = "0x4000A81")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float radius;

	[Token(Token = "0x4000A82")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public LayerMask layerMask;

	[Token(Token = "0x4000A83")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Dependencies")]
	public AudioClip forcegrabClip;

	[Token(Token = "0x4000A84")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[HideInInspector]
	public bool isHovering;

	[Token(Token = "0x4000A85")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	[HideInInspector]
	public YueInteractable interactable;

	[Token(Token = "0x4000A86")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private YueInteractor interactor;

	[Token(Token = "0x4000A87")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private AudioSource source;

	[Token(Token = "0x4000A88")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private LineRenderer lineRenderer;

	[Token(Token = "0x4000A89")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	private RaycastHit hit;

	[Token(Token = "0x4000A8A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private YueInteractable temp;

	[Token(Token = "0x4000A8B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private Collider[] overlaps;

	[Token(Token = "0x60006BC")]
	[Address(RVA = "0xC43DEC", Offset = "0xC43DEC", VA = "0xC43DEC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006BD")]
	[Address(RVA = "0xC43E8C", Offset = "0xC43E8C", VA = "0xC43E8C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006BE")]
	[Address(RVA = "0xC44304", Offset = "0xC44304", VA = "0xC44304")]
	private void OnForceGrab()
	{
	}

	[Token(Token = "0x60006BF")]
	[Address(RVA = "0xC44270", Offset = "0xC44270", VA = "0xC44270")]
	private void DrawVisuals(Vector3 start, Vector3 end)
	{
	}

	[Token(Token = "0x60006C0")]
	[Address(RVA = "0xC4433C", Offset = "0xC4433C", VA = "0xC4433C")]
	private void OnDrawGizmos()
	{
	}

	[Token(Token = "0x60006C1")]
	[Address(RVA = "0xC443CC", Offset = "0xC443CC", VA = "0xC443CC")]
	public YueForceGrab()
	{
	}
}
[Serializable]
[Token(Token = "0x20001CD")]
public class ControllerInput
{
	[Token(Token = "0x4000A8C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public Vector3 localPosition;

	[Token(Token = "0x4000A8D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public Quaternion localRotation;

	[Token(Token = "0x4000A8E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public Vector2 joystick;

	[Token(Token = "0x4000A8F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public float trigger;

	[Token(Token = "0x4000A90")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public float grip;

	[Token(Token = "0x4000A91")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
	public bool triggerPressed;

	[Token(Token = "0x4000A92")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3D")]
	public bool gripPressed;

	[Token(Token = "0x4000A93")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3E")]
	public bool thumbstick;

	[Token(Token = "0x4000A94")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x3F")]
	public bool primary;

	[Token(Token = "0x4000A95")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public bool secondary;

	[Token(Token = "0x4000A96")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	public bool menu;

	[Token(Token = "0x60006C2")]
	[Address(RVA = "0xC443EC", Offset = "0xC443EC", VA = "0xC443EC")]
	public ControllerInput(ControllerInput input)
	{
	}
}
[Token(Token = "0x20001CE")]
public class YueInteractorInput : MonoBehaviour
{
	[Token(Token = "0x4000A97")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public XRNode source;

	[Token(Token = "0x4000A98")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform trackingTransform;

	[Token(Token = "0x4000A99")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public bool useXRInputs;

	[Token(Token = "0x4000A9A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
	public bool play;

	[Token(Token = "0x4000A9B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
	public bool start;

	[Token(Token = "0x4000A9C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public int recordingFPS;

	[Token(Token = "0x4000A9D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public List<ControllerInput> frames;

	[Token(Token = "0x4000A9E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public ControllerInput input;

	[Token(Token = "0x4000A9F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool isRecording;

	[Token(Token = "0x4000AA0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
	private bool isPlaying;

	[Token(Token = "0x4000AA1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
	private int frameCounter;

	[Token(Token = "0x4000AA2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float fpsCounter;

	[Token(Token = "0x4000AA3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public UnityEngine.XR.InputDevice sourceDevice;

	[Token(Token = "0x60006C3")]
	[Address(RVA = "0xC44470", Offset = "0xC44470", VA = "0xC44470")]
	private void TryFindControllers()
	{
	}

	[Token(Token = "0x60006C4")]
	[Address(RVA = "0xC444A0", Offset = "0xC444A0", VA = "0xC444A0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006C5")]
	[Address(RVA = "0xC444A4", Offset = "0xC444A4", VA = "0xC444A4")]
	public void HapticFeedback(float intensity, float duration)
	{
	}

	[Token(Token = "0x60006C6")]
	[Address(RVA = "0xC444B4", Offset = "0xC444B4", VA = "0xC444B4")]
	private void Update()
	{
	}

	[Token(Token = "0x60006C7")]
	[Address(RVA = "0xC44504", Offset = "0xC44504", VA = "0xC44504")]
	private void UpdateInputs()
	{
	}

	[Token(Token = "0x60006C8")]
	[Address(RVA = "0xC4470C", Offset = "0xC4470C", VA = "0xC4470C")]
	private void UpdateXRInputs()
	{
	}

	[Token(Token = "0x60006C9")]
	[Address(RVA = "0xC44688", Offset = "0xC44688", VA = "0xC44688")]
	public void OnStartRecording()
	{
	}

	[Token(Token = "0x60006CA")]
	[Address(RVA = "0xC449E8", Offset = "0xC449E8", VA = "0xC449E8")]
	private void OnStopRecording()
	{
	}

	[Token(Token = "0x60006CB")]
	[Address(RVA = "0xC44574", Offset = "0xC44574", VA = "0xC44574")]
	private void UpdateRecording()
	{
	}

	[Token(Token = "0x60006CC")]
	[Address(RVA = "0xC449F4", Offset = "0xC449F4", VA = "0xC449F4")]
	public void OnDeleteRecording()
	{
	}

	[Token(Token = "0x60006CD")]
	[Address(RVA = "0xC446FC", Offset = "0xC446FC", VA = "0xC446FC")]
	public void PlayOneShot()
	{
	}

	[Token(Token = "0x60006CE")]
	[Address(RVA = "0xC448BC", Offset = "0xC448BC", VA = "0xC448BC")]
	private void UpdatePlaying()
	{
	}

	[Token(Token = "0x60006CF")]
	[Address(RVA = "0xC449F8", Offset = "0xC449F8", VA = "0xC449F8")]
	private void OnStopPlaying()
	{
	}

	[Token(Token = "0x60006D0")]
	[Address(RVA = "0xC44A04", Offset = "0xC44A04", VA = "0xC44A04")]
	public YueInteractorInput()
	{
	}
}
[Token(Token = "0x20001CF")]
public class YueNeckSolver : MonoBehaviour
{
	[Token(Token = "0x4000AA4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float limitRotation;

	[Token(Token = "0x4000AA5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float neckLength;

	[Token(Token = "0x4000AA6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Transform head;

	[Token(Token = "0x4000AA7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform direction;

	[Token(Token = "0x60006D1")]
	[Address(RVA = "0xC44A1C", Offset = "0xC44A1C", VA = "0xC44A1C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D2")]
	[Address(RVA = "0xC44A98", Offset = "0xC44A98", VA = "0xC44A98")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D3")]
	[Address(RVA = "0xC44D8C", Offset = "0xC44D8C", VA = "0xC44D8C")]
	public YueNeckSolver()
	{
	}
}
[Token(Token = "0x20001D0")]
[RequireComponent(typeof(LineRenderer))]
public class YueRayInteractor : MonoBehaviour
{
	[Token(Token = "0x4000AA8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool left;

	[Token(Token = "0x4000AA9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float minDistance;

	[Token(Token = "0x4000AAA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float maxDistance;

	[Token(Token = "0x4000AAB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float crossHairOffset;

	[Token(Token = "0x4000AAC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public int lineRenderCount;

	[Token(Token = "0x4000AAD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pullSpeed;

	[Token(Token = "0x4000AAE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public LayerMask layerMask;

	[Token(Token = "0x4000AAF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public YueInteractable interactable;

	[Token(Token = "0x4000AB0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public Vector3 hitPoint;

	[Token(Token = "0x4000AB1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	public GameObject crossHairPrefab;

	[Token(Token = "0x4000AB2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public bool gravityWasEnabled;

	[Token(Token = "0x4000AB3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Rigidbody rigid;

	[Token(Token = "0x60006D4")]
	[Address(RVA = "0xC44DA0", Offset = "0xC44DA0", VA = "0xC44DA0")]
	public YueRayInteractor()
	{
	}
}
[Token(Token = "0x20001D1")]
public class YueSeat : MonoBehaviour, ITriggerZone
{
	[Token(Token = "0x4000AB4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float movementRange;

	[Token(Token = "0x4000AB5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float setMass;

	[Token(Token = "0x4000AB6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public bool disableBodyCollider;

	[Token(Token = "0x4000AB7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
	public bool disableBodyIntercollision;

	[Token(Token = "0x4000AB8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
	public bool coupleOrientation;

	[Token(Token = "0x4000AB9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
	public bool uncontrainUpAxisOnRig;

	[Token(Token = "0x4000ABA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public bool attachToParentRigidbody;

	[Token(Token = "0x4000ABB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject info;

	[Token(Token = "0x4000ABC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public UnityEvent OnSeatSelect;

	[Token(Token = "0x4000ABD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public UnityEvent OnSeatExit;

	[Token(Token = "0x4000ABE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	public UnityEvent OnHoverEnter;

	[Token(Token = "0x4000ABF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	public UnityEvent OnHoverExit;

	[Token(Token = "0x4000AC0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[Header("Avatar IK")]
	public Transform pelvisIK;

	[Token(Token = "0x4000AC1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public Transform leftFootIK;

	[Token(Token = "0x4000AC2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	public Transform rightFootIK;

	[Token(Token = "0x4000AC3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
	[Header("Dependencies")]
	public AudioClip seatBelt;

	[Token(Token = "0x4000AC4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
	[HideInInspector]
	public bool isTaken;

	[Token(Token = "0x4000AC5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x71")]
	[HideInInspector]
	public bool isPlayerInRange;

	[Token(Token = "0x4000AC6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
	[HideInInspector]
	public Transform rig;

	[Token(Token = "0x4000AC7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
	[HideInInspector]
	private ConfigurableJoint cJoint;

	[Token(Token = "0x4000AC8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
	private VRInput vrInput;

	[Token(Token = "0x4000AC9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
	private CharacterManager characterManager;

	[Token(Token = "0x4000ACA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
	private PlayerController controller;

	[Token(Token = "0x4000ACB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
	private AudioSource source;

	[Token(Token = "0x4000ACC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
	private bool blocked;

	[Token(Token = "0x4000ACD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0xA9")]
	private bool infoShown;

	[Token(Token = "0x60006D5")]
	[Address(RVA = "0xC44DD0", Offset = "0xC44DD0", VA = "0xC44DD0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006D6")]
	[Address(RVA = "0xC44F74", Offset = "0xC44F74", VA = "0xC44F74")]
	private void Update()
	{
	}

	[Token(Token = "0x60006D7")]
	[Address(RVA = "0xC450B8", Offset = "0xC450B8", VA = "0xC450B8")]
	private void OnSeatEnter()
	{
	}

	[Token(Token = "0x60006D8")]
	[Address(RVA = "0xC45C0C", Offset = "0xC45C0C", VA = "0xC45C0C")]
	private void OnSeatExited()
	{
	}

	[Token(Token = "0x60006D9")]
	[Address(RVA = "0xC46068", Offset = "0xC46068", VA = "0xC46068")]
	public void OnForcedExit()
	{
	}

	[Token(Token = "0x60006DA")]
	[Address(RVA = "0xC4606C", Offset = "0xC4606C", VA = "0xC4606C", Slot = "4")]
	public void OnTriggerZoneEnter()
	{
	}

	[Token(Token = "0x60006DB")]
	[Address(RVA = "0xC46094", Offset = "0xC46094", VA = "0xC46094", Slot = "5")]
	public void OnTriggerZoneExit()
	{
	}

	[Token(Token = "0x60006DC")]
	[Address(RVA = "0xC4601C", Offset = "0xC4601C", VA = "0xC4601C")]
	private void SetIKTargets(bool set)
	{
	}

	[Token(Token = "0x60006DD")]
	[Address(RVA = "0xC460B8", Offset = "0xC460B8", VA = "0xC460B8")]
	private void OnDestroy()
	{
	}

	[Token(Token = "0x60006DE")]
	[Address(RVA = "0xC460BC", Offset = "0xC460BC", VA = "0xC460BC")]
	public YueSeat()
	{
	}
}
[Serializable]
[Token(Token = "0x20001D2")]
public class SnapZone
{
	[Token(Token = "0x4000ACE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
	public HandSide side;

	[Token(Token = "0x4000ACF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
	public Vector3 position;

	[Token(Token = "0x4000AD0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Quaternion rotation;

	[Token(Token = "0x60006DF")]
	[Address(RVA = "0xC460D8", Offset = "0xC460D8", VA = "0xC460D8")]
	public SnapZone()
	{
	}
}
[Token(Token = "0x20001D3")]
[ExecuteAlways]
public class YueSnapZoneEditor : MonoBehaviour
{
	[Token(Token = "0x4000AD1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public bool createZones;

	[Token(Token = "0x4000AD2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public SnapZoneData dataHandler;

	[Token(Token = "0x4000AD3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public GameObject snapZonePrefab;

	[Token(Token = "0x4000AD4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	private YueInteractable interactable;

	[Token(Token = "0x4000AD5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource source;

	[Token(Token = "0x4000AD6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private bool blocked;

	[Token(Token = "0x60006E0")]
	[Address(RVA = "0xC460E0", Offset = "0xC460E0", VA = "0xC460E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E1")]
	[Address(RVA = "0xC4615C", Offset = "0xC4615C", VA = "0xC4615C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E2")]
	[Address(RVA = "0xC46644", Offset = "0xC46644", VA = "0xC46644")]
	private void AddSnapData()
	{
	}

	[Token(Token = "0x60006E3")]
	[Address(RVA = "0xC46214", Offset = "0xC46214", VA = "0xC46214")]
	private void CreateZonesFromList()
	{
	}

	[Token(Token = "0x60006E4")]
	[Address(RVA = "0xC468F4", Offset = "0xC468F4", VA = "0xC468F4")]
	public YueSnapZoneEditor()
	{
	}
}
[Token(Token = "0x20001D4")]
public class RotationSound : MonoBehaviour
{
	[Token(Token = "0x4000AD7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Audio Clip")]
	public AudioClip clip;

	[Token(Token = "0x4000AD8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Tuning")]
	public float volumeFactor;

	[Token(Token = "0x4000AD9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float volumeOffset;

	[Token(Token = "0x4000ADA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pitchFactor;

	[Token(Token = "0x4000ADB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pitchOffset;

	[Token(Token = "0x4000ADC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sleepThreshold;

	[Token(Token = "0x4000ADD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource source;

	[Token(Token = "0x4000ADE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x4000ADF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float angularVelocity;

	[Token(Token = "0x60006E5")]
	[Address(RVA = "0xC468FC", Offset = "0xC468FC", VA = "0xC468FC")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E6")]
	[Address(RVA = "0xC469A8", Offset = "0xC469A8", VA = "0xC469A8")]
	private void Update()
	{
	}

	[Token(Token = "0x60006E7")]
	[Address(RVA = "0xC46AE0", Offset = "0xC46AE0", VA = "0xC46AE0")]
	public RotationSound()
	{
	}
}
[Token(Token = "0x20001D5")]
public class ScratchSound : MonoBehaviour
{
	[Token(Token = "0x4000AE0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Audio Clip")]
	public AudioClip clip;

	[Token(Token = "0x4000AE1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Tuning")]
	public float volumeFactor;

	[Token(Token = "0x4000AE2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float volumeOffset;

	[Token(Token = "0x4000AE3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float pitchFactor;

	[Token(Token = "0x4000AE4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
	public float pitchOffset;

	[Token(Token = "0x4000AE5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public float sleepThreshold;

	[Token(Token = "0x4000AE6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
	public bool ignoreX;

	[Token(Token = "0x4000AE7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
	public bool ignoreY;

	[Token(Token = "0x4000AE8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
	public bool ignoreZ;

	[Token(Token = "0x4000AE9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public AudioSource source;

	[Token(Token = "0x4000AEA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x4000AEB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float velocity;

	[Token(Token = "0x4000AEC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public List<Collider> collisions;

	[Token(Token = "0x4000AED")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	public bool isGrounded;

	[Token(Token = "0x4000AEE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float groundedSmooth;

	[Token(Token = "0x4000AEF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
	private Vector3 smoothVelocity;

	[Token(Token = "0x4000AF0")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
	private float flickerCounter;

	[Token(Token = "0x60006E8")]
	[Address(RVA = "0xC46B0C", Offset = "0xC46B0C", VA = "0xC46B0C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006E9")]
	[Address(RVA = "0xC46C00", Offset = "0xC46C00", VA = "0xC46C00")]
	private void Update()
	{
	}

	[Token(Token = "0x60006EA")]
	[Address(RVA = "0xC46F08", Offset = "0xC46F08", VA = "0xC46F08")]
	private void OnCollisionEnter(Collision collision)
	{
	}

	[Token(Token = "0x60006EB")]
	[Address(RVA = "0xC47034", Offset = "0xC47034", VA = "0xC47034")]
	private void OnCollisionExit(Collision collision)
	{
	}

	[Token(Token = "0x60006EC")]
	[Address(RVA = "0xC470AC", Offset = "0xC470AC", VA = "0xC470AC")]
	public ScratchSound()
	{
	}
}
[Token(Token = "0x20001D6")]
public class SimpleThrust : MonoBehaviour
{
	[Token(Token = "0x4000AF1")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Settings")]
	public bool isOn;

	[Token(Token = "0x4000AF2")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float maxThrust;

	[Token(Token = "0x4000AF3")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	[Header("Animation")]
	public float rotorSpeed;

	[Token(Token = "0x4000AF4")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	public float pitchFactor;

	[Token(Token = "0x4000AF5")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public float volumeFactor;

	[Token(Token = "0x4000AF6")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Dependencies")]
	public Transform rotor;

	[Token(Token = "0x4000AF7")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private YueInteractable interactable;

	[Token(Token = "0x4000AF8")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private AudioSource source;

	[Token(Token = "0x4000AF9")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private Rigidbody rb;

	[Token(Token = "0x4000AFA")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	[HideInInspector]
	public float input;

	[Token(Token = "0x4000AFB")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
	private float grabInput;

	[Token(Token = "0x4000AFC")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
	[HideInInspector]
	public float nodeInput;

	[Token(Token = "0x4000AFD")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
	private float defaulMaxThrust;

	[Token(Token = "0x60006ED")]
	[Address(RVA = "0xC470E0", Offset = "0xC470E0", VA = "0xC470E0")]
	private void Start()
	{
	}

	[Token(Token = "0x60006EE")]
	[Address(RVA = "0xC471F4", Offset = "0xC471F4", VA = "0xC471F4")]
	private void OnChangeSate()
	{
	}

	[Token(Token = "0x60006EF")]
	[Address(RVA = "0xC47204", Offset = "0xC47204", VA = "0xC47204")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F0")]
	[Address(RVA = "0xC4741C", Offset = "0xC4741C", VA = "0xC4741C")]
	public void ResetMaxThrust()
	{
	}

	[Token(Token = "0x60006F1")]
	[Address(RVA = "0xC47428", Offset = "0xC47428", VA = "0xC47428")]
	public SimpleThrust()
	{
	}
}
[Token(Token = "0x20001D7")]
public class ComputingRig : MonoBehaviour
{
	[Token(Token = "0x4000AFE")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public bool open;

	[Token(Token = "0x4000AFF")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float scale;

	[Token(Token = "0x4000B00")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public Vector3 offset;

	[Token(Token = "0x4000B01")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	[Header("Dependencies")]
	public Transform canvas;

	[Token(Token = "0x4000B02")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	public Transform fan;

	[Token(Token = "0x4000B03")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Quaternion rotation;

	[Token(Token = "0x4000B04")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
	private AudioSource source;

	[Token(Token = "0x60006F2")]
	[Address(RVA = "0xC4743C", Offset = "0xC4743C", VA = "0xC4743C")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F3")]
	[Address(RVA = "0xC4751C", Offset = "0xC4751C", VA = "0xC4751C")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F4")]
	[Address(RVA = "0xC477A0", Offset = "0xC477A0", VA = "0xC477A0")]
	private void OnTriggerd()
	{
	}

	[Token(Token = "0x60006F5")]
	[Address(RVA = "0xC47670", Offset = "0xC47670", VA = "0xC47670")]
	private void UpdateUI()
	{
	}

	[Token(Token = "0x60006F6")]
	[Address(RVA = "0xC47820", Offset = "0xC47820", VA = "0xC47820")]
	public ComputingRig()
	{
	}
}
[Token(Token = "0x20001D8")]
public class SimpleTorquer : MonoBehaviour
{
	[Token(Token = "0x4000B05")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float maxValue;

	[Token(Token = "0x4000B06")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float verticalInput;

	[Token(Token = "0x4000B07")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float horizontalInput;

	[Token(Token = "0x4000B08")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	[Header("Dependencies")]
	public float animationSpeed;

	[Token(Token = "0x4000B09")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	public Transform ringF;

	[Token(Token = "0x4000B0A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ringR;

	[Token(Token = "0x4000B0B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource source;

	[Token(Token = "0x4000B0C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x4000B0D")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
	private float defaultMax;

	[Token(Token = "0x60006F7")]
	[Address(RVA = "0xC47828", Offset = "0xC47828", VA = "0xC47828")]
	private void Start()
	{
	}

	[Token(Token = "0x60006F8")]
	[Address(RVA = "0xC478AC", Offset = "0xC478AC", VA = "0xC478AC")]
	private void Update()
	{
	}

	[Token(Token = "0x60006F9")]
	[Address(RVA = "0xC47B54", Offset = "0xC47B54", VA = "0xC47B54")]
	public void ResetMaxValue()
	{
	}

	[Token(Token = "0x60006FA")]
	[Address(RVA = "0xC47B60", Offset = "0xC47B60", VA = "0xC47B60")]
	public SimpleTorquer()
	{
	}
}
[Token(Token = "0x20001D9")]
public class YueDragableUIElement : MonoBehaviour, IDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler
{
	[Token(Token = "0x4000B0E")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	private Vector3 delta;

	[Token(Token = "0x60006FB")]
	[Address(RVA = "0xC47B74", Offset = "0xC47B74", VA = "0xC47B74")]
	private void Start()
	{
	}

	[Token(Token = "0x60006FC")]
	[Address(RVA = "0xC47B78", Offset = "0xC47B78", VA = "0xC47B78", Slot = "5")]
	public void OnBeginDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006FD")]
	[Address(RVA = "0xC47BCC", Offset = "0xC47BCC", VA = "0xC47BCC", Slot = "4")]
	public void OnDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006FE")]
	[Address(RVA = "0xC47C1C", Offset = "0xC47C1C", VA = "0xC47C1C", Slot = "6")]
	public void OnEndDrag(PointerEventData eventData)
	{
	}

	[Token(Token = "0x60006FF")]
	[Address(RVA = "0xC47C20", Offset = "0xC47C20", VA = "0xC47C20")]
	public YueDragableUIElement()
	{
	}
}
[Token(Token = "0x20001DA")]
public class YueGyroscope : MonoBehaviour
{
	[Token(Token = "0x4000B0F")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	[Header("Config")]
	public float maxTorque;

	[Token(Token = "0x4000B10")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	public float verticalInput;

	[Token(Token = "0x4000B11")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public float horizontalInput;

	[Token(Token = "0x4000B12")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	[Header("Dependencies")]
	public Transform ringF;

	[Token(Token = "0x4000B13")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
	public Transform ringR;

	[Token(Token = "0x4000B14")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
	private AudioSource source;

	[Token(Token = "0x4000B15")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
	private Rigidbody rb;

	[Token(Token = "0x6000700")]
	[Address(RVA = "0xC47C28", Offset = "0xC47C28", VA = "0xC47C28")]
	private void Start()
	{
	}

	[Token(Token = "0x6000701")]
	[Address(RVA = "0xC47CA4", Offset = "0xC47CA4", VA = "0xC47CA4")]
	private void Update()
	{
	}

	[Token(Token = "0x6000702")]
	[Address(RVA = "0xC47F48", Offset = "0xC47F48", VA = "0xC47F48")]
	public YueGyroscope()
	{
	}
}
[Token(Token = "0x20001DB")]
public class YueMenuButtonPrefab : MonoBehaviour
{
	[Token(Token = "0x4000B16")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public Text buttonName;

	[Token(Token = "0x4000B17")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	public GameObject prefab;

	[Token(Token = "0x4000B18")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
	private YueNodeSpace space;

	[Token(Token = "0x6000703")]
	[Address(RVA = "0xC47F58", Offset = "0xC47F58", VA = "0xC47F58")]
	private void Start()
	{
	}

	[Token(Token = "0x6000704")]
	[Address(RVA = "0xC47FA8", Offset = "0xC47FA8", VA = "0xC47FA8")]
	public void OnClicked()
	{
	}

	[Token(Token = "0x6000705")]
	[Address(RVA = "0xC47FCC", Offset = "0xC47FCC", VA = "0xC47FCC")]
	public YueMenuButtonPrefab()
	{
	}
}
[Token(Token = "0x20001DC")]
public class YueModifierBase : MonoBehaviour
{
	[Token(Token = "0x6000706")]
	[Address(RVA = "0xC47FD4", Offset = "0xC47FD4", VA = "0xC47FD4")]
	public YueModifierBase()
	{
	}
}
[Token(Token = "0x20001DD")]
public class YueNumPad : MonoBehaviour
{
	[Token(Token = "0x4000B19")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
	public float value;

	[Token(Token = "0x4000B1A")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
	private bool commaSet;

	[Token(Token = "0x4000B1B")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
	private int commaIndex;

	[Token(Token = "0x4000B1C")]
	[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
	private bool minus;

	[Token(Token = "0x6000707")]
	[Address(RVA = "0xC47FDC", Offset = "0xC47FDC", VA = "0xC47FDC")]
	public void AddToString(string add)
	{
	}

	[Token(Token = "0x6000708")]
	[Address(RVA = "0xC48154", Offset = "0xC48154", VA = "0xC48154")]
	public YueNumPad()
	{
	}
}
namespace YueUltimateDronePhysics
{
	[Token(Token = "0x20001DE")]
	public class PCDroneEmulator : MonoBehaviour
	{
		[Token(Token = "0x4000B1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Header("This Component injects into the InputModule to emulate Controller Inputs with Arrows\n\n - 'Arrows' for Orientation \n - 'Space' for Thrust.\n\nIn Altitude Hold Mode, Altitude is Controlled with Mouse Wheel!\n")]
		private YueDronePhysics dronePhysics;

		[Token(Token = "0x4000B1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private YueInputModule inputModule;

		[Token(Token = "0x4000B1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startPos;

		[Token(Token = "0x4000B20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion startRot;

		[Token(Token = "0x6000709")]
		[Address(RVA = "0xC4815C", Offset = "0xC4815C", VA = "0xC4815C")]
		private void Start()
		{
		}

		[Token(Token = "0x600070A")]
		[Address(RVA = "0xC4821C", Offset = "0xC4821C", VA = "0xC4821C")]
		private void Update()
		{
		}

		[Token(Token = "0x600070B")]
		[Address(RVA = "0xC485CC", Offset = "0xC485CC", VA = "0xC485CC")]
		public PCDroneEmulator()
		{
		}
	}
	[Token(Token = "0x20001DF")]
	public class XBOXControllerInput : MonoBehaviour
	{
		[Token(Token = "0x4000B21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("This Component injects into the InputModule and uses Inputs from XBOX Gamepad\n\n\n")]
		[SerializeField]
		private YueDronePhysics dronePhysics;

		[Token(Token = "0x4000B22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private YueInputModule inputModule;

		[Token(Token = "0x4000B23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 startPos;

		[Token(Token = "0x4000B24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Quaternion startRot;

		[Token(Token = "0x600070C")]
		[Address(RVA = "0xC4862C", Offset = "0xC4862C", VA = "0xC4862C")]
		private void Start()
		{
		}

		[Token(Token = "0x600070D")]
		[Address(RVA = "0xC486EC", Offset = "0xC486EC", VA = "0xC486EC")]
		private void Update()
		{
		}

		[Token(Token = "0x600070E")]
		[Address(RVA = "0xC4892C", Offset = "0xC4892C", VA = "0xC4892C")]
		public XBOXControllerInput()
		{
		}
	}
	[Token(Token = "0x20001E0")]
	public class YueCameraController : MonoBehaviour
	{
		[Token(Token = "0x4000B25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Transform target;

		[Token(Token = "0x4000B26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float maxDistance;

		[Token(Token = "0x4000B27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float followSpeed;

		[Token(Token = "0x600070F")]
		[Address(RVA = "0xC4898C", Offset = "0xC4898C", VA = "0xC4898C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000710")]
		[Address(RVA = "0xC48BE4", Offset = "0xC48BE4", VA = "0xC48BE4")]
		public YueCameraController()
		{
		}
	}
	[Token(Token = "0x20001E1")]
	public class YueDroneAnimation : MonoBehaviour
	{
		[Token(Token = "0x4000B28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Propellers")]
		public Transform FrontLeft;

		[Token(Token = "0x4000B29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform FrontRight;

		[Token(Token = "0x4000B2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform RearLeft;

		[Token(Token = "0x4000B2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform RearRight;

		[Token(Token = "0x4000B2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float motorFL;

		[Token(Token = "0x4000B2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float motorFR;

		[Token(Token = "0x4000B2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float motorRL;

		[Token(Token = "0x4000B2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		private float motorRR;

		[Token(Token = "0x4000B30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private YueDronePhysics dronePhysics;

		[Token(Token = "0x6000711")]
		[Address(RVA = "0xC48BF8", Offset = "0xC48BF8", VA = "0xC48BF8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000712")]
		[Address(RVA = "0xC48C80", Offset = "0xC48C80", VA = "0xC48C80")]
		private void Update()
		{
		}

		[Token(Token = "0x6000713")]
		[Address(RVA = "0xC49208", Offset = "0xC49208", VA = "0xC49208")]
		public YueDroneAnimation()
		{
		}
	}
	[Token(Token = "0x20001E2")]
	public enum YueDronePhysicsFlightConfiguration
	{
		[Token(Token = "0x4000B32")]
		AcroMode,
		[Token(Token = "0x4000B33")]
		SelfLeveling,
		[Token(Token = "0x4000B34")]
		AltitudeHold
	}
	[Token(Token = "0x20001E3")]
	[RequireComponent(typeof(YueInputModule))]
	[RequireComponent(typeof(Rigidbody))]
	public class YueDronePhysics : MonoBehaviour
	{
		[Token(Token = "0x4000B35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueDronePhysicsFlightConfiguration flightConfig;

		[Token(Token = "0x4000B36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool armed;

		[Token(Token = "0x4000B37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		private bool lastArmed;

		[Token(Token = "0x4000B38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueDronePhysicsConfiguration physicsConfig;

		[Token(Token = "0x4000B39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask hoverEffectLayerMask;

		[Token(Token = "0x4000B3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnArmed;

		[Token(Token = "0x4000B3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnDisarmed;

		[Token(Token = "0x4000B3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Transform targetQuad;

		[Token(Token = "0x4000B3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private YuePIDController rotationPID;

		[Token(Token = "0x4000B3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private YuePIDController altitudePID;

		[Token(Token = "0x4000B3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public float targetAltitude;

		[Token(Token = "0x4000B40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[HideInInspector]
		public Vector3 appliedTorque;

		[Token(Token = "0x4000B41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public Vector3 appliedForce;

		[Token(Token = "0x4000B42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Rigidbody rb;

		[Token(Token = "0x4000B43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private YueInputModule inputModule;

		[Token(Token = "0x6000714")]
		[Address(RVA = "0xC49210", Offset = "0xC49210", VA = "0xC49210")]
		private void Start()
		{
		}

		[Token(Token = "0x6000715")]
		[Address(RVA = "0xC493E8", Offset = "0xC493E8", VA = "0xC493E8")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000716")]
		[Address(RVA = "0xC4A160", Offset = "0xC4A160", VA = "0xC4A160")]
		public void OnPhysicsConfigurationChanged(YueDronePhysicsConfiguration config)
		{
		}

		[Token(Token = "0x6000717")]
		[Address(RVA = "0xC4A010", Offset = "0xC4A010", VA = "0xC4A010")]
		private void UpdateRigidbody()
		{
		}

		[Token(Token = "0x6000718")]
		[Address(RVA = "0xC4A0C4", Offset = "0xC4A0C4", VA = "0xC4A0C4")]
		private void CheckErrors()
		{
		}

		[Token(Token = "0x6000719")]
		[Address(RVA = "0xC496BC", Offset = "0xC496BC", VA = "0xC496BC")]
		private void AcroMode()
		{
		}

		[Token(Token = "0x600071A")]
		[Address(RVA = "0xC4986C", Offset = "0xC4986C", VA = "0xC4986C")]
		private void SelfLeveling()
		{
		}

		[Token(Token = "0x600071B")]
		[Address(RVA = "0xC49A68", Offset = "0xC49A68", VA = "0xC49A68")]
		private void AltitudeHold()
		{
		}

		[Token(Token = "0x600071C")]
		[Address(RVA = "0xC49ED0", Offset = "0xC49ED0", VA = "0xC49ED0")]
		private void UpdateHoverEffect()
		{
		}

		[Token(Token = "0x600071D")]
		[Address(RVA = "0xC49D2C", Offset = "0xC49D2C", VA = "0xC49D2C")]
		private Vector3 CalculatePIDTorque()
		{
			return default(Vector3);
		}

		[Token(Token = "0x600071E")]
		[Address(RVA = "0xC4A074", Offset = "0xC4A074", VA = "0xC4A074")]
		private void OnQuadArmed()
		{
		}

		[Token(Token = "0x600071F")]
		[Address(RVA = "0xC4A09C", Offset = "0xC4A09C", VA = "0xC4A09C")]
		private void OnQuadDisarmed()
		{
		}

		[Token(Token = "0x6000720")]
		[Address(RVA = "0xC484B8", Offset = "0xC484B8", VA = "0xC484B8")]
		public void ResetInternals()
		{
		}

		[Token(Token = "0x6000721")]
		[Address(RVA = "0xC4A218", Offset = "0xC4A218", VA = "0xC4A218")]
		public YueDronePhysics()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001E4")]
	public class YueDronePhysicsConfiguration
	{
		[Token(Token = "0x4000B44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Maximum Thrust [N]")]
		public float thrust;

		[Token(Token = "0x4000B45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Header("Physics")]
		public float mass;

		[Token(Token = "0x4000B46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float drag;

		[Token(Token = "0x4000B47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float angularDrag;

		[Token(Token = "0x4000B48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("PID Rotation [Nm/Deg]")]
		public float p;

		[Token(Token = "0x4000B49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float i;

		[Token(Token = "0x4000B4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float d;

		[Token(Token = "0x4000B4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Header("PID Altitude [N/m]")]
		public float pAltitude;

		[Token(Token = "0x4000B4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float iAltitude;

		[Token(Token = "0x4000B4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float dAltitude;

		[Token(Token = "0x6000722")]
		[Address(RVA = "0xC4A228", Offset = "0xC4A228", VA = "0xC4A228")]
		public YueDronePhysicsConfiguration(YueDronePhysicsConfiguration physicsConfig)
		{
		}
	}
	[Token(Token = "0x20001E5")]
	public class YueDroneSound : MonoBehaviour
	{
		[Token(Token = "0x4000B4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float pitchFactor;

		[Token(Token = "0x4000B4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float volumeFactor;

		[Token(Token = "0x4000B50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float pitchOffset;

		[Token(Token = "0x4000B51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float volumeOffset;

		[Token(Token = "0x4000B52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioClip motorSound;

		[Token(Token = "0x4000B53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private YueDronePhysics dronePhysics;

		[Token(Token = "0x4000B54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AudioSource source;

		[Token(Token = "0x6000723")]
		[Address(RVA = "0xC4A280", Offset = "0xC4A280", VA = "0xC4A280")]
		private void Start()
		{
		}

		[Token(Token = "0x6000724")]
		[Address(RVA = "0xC4A350", Offset = "0xC4A350", VA = "0xC4A350")]
		private void Update()
		{
		}

		[Token(Token = "0x6000725")]
		[Address(RVA = "0xC4A4FC", Offset = "0xC4A4FC", VA = "0xC4A4FC")]
		public YueDroneSound()
		{
		}
	}
	[Token(Token = "0x20001E6")]
	public class YueInputModule : MonoBehaviour
	{
		[Token(Token = "0x4000B55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueRatesConfiguration ratesConfig;

		[Token(Token = "0x4000B56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Raw Input")]
		[Tooltip("Raw Inputs should be between -1 to 1")]
		[Range(-1f, 1f)]
		public float rawLeftHorizontal;

		[Token(Token = "0x4000B57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Range(-1f, 1f)]
		public float rawLeftVertical;

		[Token(Token = "0x4000B58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(-1f, 1f)]
		public float rawRightHorizontal;

		[Token(Token = "0x4000B59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Range(-1f, 1f)]
		public float rawRightVertical;

		[Token(Token = "0x4000B5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public float thrust;

		[Token(Token = "0x4000B5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[HideInInspector]
		public float yaw;

		[Token(Token = "0x4000B5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public float pitch;

		[Token(Token = "0x4000B5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[HideInInspector]
		public float roll;

		[Token(Token = "0x4000B5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public float rawThrust;

		[Token(Token = "0x4000B5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[HideInInspector]
		public float rawYaw;

		[Token(Token = "0x4000B60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public float rawPitch;

		[Token(Token = "0x4000B61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[HideInInspector]
		public float rawRoll;

		[Token(Token = "0x6000726")]
		[Address(RVA = "0xC4A50C", Offset = "0xC4A50C", VA = "0xC4A50C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000727")]
		[Address(RVA = "0xC4A510", Offset = "0xC4A510", VA = "0xC4A510")]
		private void CalculateInputWithRatesConfig()
		{
		}

		[Token(Token = "0x6000728")]
		[Address(RVA = "0xC4A61C", Offset = "0xC4A61C", VA = "0xC4A61C")]
		public float TransformInput(float input, float p, float e)
		{
			return default(float);
		}

		[Token(Token = "0x6000729")]
		[Address(RVA = "0xC4A644", Offset = "0xC4A644", VA = "0xC4A644")]
		public YueInputModule()
		{
		}
	}
	[Token(Token = "0x20001E7")]
	public class YuePIDController
	{
		[Token(Token = "0x4000B62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Vector3 pd;

		[Token(Token = "0x4000B63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private Vector3 p;

		[Token(Token = "0x4000B64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Vector3 d;

		[Token(Token = "0x4000B65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		private Vector3 lastE;

		[Token(Token = "0x600072A")]
		[Address(RVA = "0xC493E0", Offset = "0xC493E0", VA = "0xC493E0")]
		public YuePIDController()
		{
		}

		[Token(Token = "0x600072B")]
		[Address(RVA = "0xC4A168", Offset = "0xC4A168", VA = "0xC4A168")]
		public Vector3 CalculatePD(Vector3 e, float pk, float dk)
		{
			return default(Vector3);
		}
	}
	[Token(Token = "0x20001E8")]
	public enum YueTransmitterMode
	{
		[Token(Token = "0x4000B67")]
		Mode1,
		[Token(Token = "0x4000B68")]
		Mode2,
		[Token(Token = "0x4000B69")]
		Mode3,
		[Token(Token = "0x4000B6A")]
		Mode4
	}
	[Serializable]
	[Token(Token = "0x20001E9")]
	public class YueRatesConfiguration
	{
		[Token(Token = "0x4000B6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Gains [Deg/s]")]
		public float proportionalGain;

		[Token(Token = "0x4000B6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		public float exponentialGain;

		[Token(Token = "0x4000B6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Flight Mode")]
		public YueTransmitterMode mode;

		[Token(Token = "0x4000B6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Self Leveling [Deg]")]
		public float maxAngle;

		[Token(Token = "0x600072C")]
		[Address(RVA = "0xC4A64C", Offset = "0xC4A64C", VA = "0xC4A64C")]
		public YueRatesConfiguration(YueRatesConfiguration ratesConfig)
		{
		}
	}
}
namespace YueInteractions
{
	[Token(Token = "0x20001EA")]
	public class YueBarSnapZone : MonoBehaviour
	{
		[Token(Token = "0x4000B6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float outwards;

		[Token(Token = "0x4000B70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public Vector3 offsetPosition;

		[Token(Token = "0x4000B71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Vector3 offsetRotation;

		[Token(Token = "0x4000B72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform start;

		[Token(Token = "0x4000B73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform end;

		[Token(Token = "0x4000B74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private YueInteractable interactable;

		[Token(Token = "0x600072D")]
		[Address(RVA = "0xC4A694", Offset = "0xC4A694", VA = "0xC4A694")]
		private void Start()
		{
		}

		[Token(Token = "0x600072E")]
		[Address(RVA = "0xC4A6E4", Offset = "0xC4A6E4", VA = "0xC4A6E4")]
		private void OnSnapHand()
		{
		}

		[Token(Token = "0x600072F")]
		[Address(RVA = "0xC4ACC0", Offset = "0xC4ACC0", VA = "0xC4ACC0")]
		public static Vector3 GetClosestPointOnLine(Vector3 start, Vector3 end, Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000730")]
		[Address(RVA = "0xC4AEBC", Offset = "0xC4AEBC", VA = "0xC4AEBC")]
		private void OnDrawGizmos()
		{
		}

		[Token(Token = "0x6000731")]
		[Address(RVA = "0xC4AF68", Offset = "0xC4AF68", VA = "0xC4AF68")]
		public YueBarSnapZone()
		{
		}
	}
	[Token(Token = "0x20001EB")]
	public class YueHandPoseHandler : MonoBehaviour
	{
		[Token(Token = "0x4000B75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform targetIK;

		[Token(Token = "0x4000B76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform finalTragetIK;

		[Token(Token = "0x4000B77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform attachIK;

		[Token(Token = "0x4000B78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float weight;

		[Token(Token = "0x4000B79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float blendSpeed;

		[Token(Token = "0x4000B7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public string targetName;

		[Token(Token = "0x4000B7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private bool snappTracked;

		[Token(Token = "0x4000B7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private YueInteractor interactor;

		[Token(Token = "0x4000B7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public AutoHand autoHand;

		[Token(Token = "0x4000B7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public CharacterManager characterManager;

		[Token(Token = "0x4000B7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float interpolateCounter;

		[Token(Token = "0x6000732")]
		[Address(RVA = "0xC4AF70", Offset = "0xC4AF70", VA = "0xC4AF70")]
		private void Start()
		{
		}

		[Token(Token = "0x6000733")]
		[Address(RVA = "0xC4B0D4", Offset = "0xC4B0D4", VA = "0xC4B0D4")]
		public void SetIK()
		{
		}

		[Token(Token = "0x6000734")]
		[Address(RVA = "0xC4B1DC", Offset = "0xC4B1DC", VA = "0xC4B1DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000735")]
		[Address(RVA = "0xC4B39C", Offset = "0xC4B39C", VA = "0xC4B39C")]
		private void OnSelectEnter()
		{
		}

		[Token(Token = "0x6000736")]
		[Address(RVA = "0xC4B4D4", Offset = "0xC4B4D4", VA = "0xC4B4D4")]
		private void OnSelectExit()
		{
		}

		[Token(Token = "0x6000737")]
		[Address(RVA = "0xC4B4F0", Offset = "0xC4B4F0", VA = "0xC4B4F0")]
		public YueHandPoseHandler()
		{
		}
	}
	[Token(Token = "0x20001EC")]
	[ExecuteInEditMode]
	public class YueHandposeSetup : MonoBehaviour
	{
		[Token(Token = "0x4000B80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool setup;

		[Token(Token = "0x4000B81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Animator animator;

		[Token(Token = "0x4000B82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SkinnedMeshRenderer hands;

		[Token(Token = "0x4000B83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform leftHand;

		[Token(Token = "0x4000B84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightHand;

		[Token(Token = "0x4000B85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform leftAttach;

		[Token(Token = "0x4000B86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightAttach;

		[Token(Token = "0x4000B87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftBone;

		[Token(Token = "0x4000B88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform rightBone;

		[Token(Token = "0x4000B89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public bool showPreview;

		[Token(Token = "0x4000B8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		public bool adjustHandposeRoot;

		[Token(Token = "0x6000738")]
		[Address(RVA = "0xC4B500", Offset = "0xC4B500", VA = "0xC4B500")]
		private void Update()
		{
		}

		[Token(Token = "0x6000739")]
		[Address(RVA = "0xC4B900", Offset = "0xC4B900", VA = "0xC4B900")]
		private void SetupHandpose()
		{
		}

		[Token(Token = "0x600073A")]
		[Address(RVA = "0xC4B800", Offset = "0xC4B800", VA = "0xC4B800")]
		private void AdjustHandroot()
		{
		}

		[Token(Token = "0x600073B")]
		[Address(RVA = "0xC4BCB4", Offset = "0xC4BCB4", VA = "0xC4BCB4")]
		private void Adjust(Transform root, Transform attach)
		{
		}

		[Token(Token = "0x600073C")]
		[Address(RVA = "0xC4BDF8", Offset = "0xC4BDF8", VA = "0xC4BDF8")]
		public YueHandposeSetup()
		{
		}
	}
	[Token(Token = "0x20001ED")]
	[ExecuteInEditMode]
	public class YueHandposeZone : MonoBehaviour
	{
		[Token(Token = "0x4000B8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool convertToSnapZone;

		[Token(Token = "0x4000B8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string animationClipName;

		[Token(Token = "0x4000B8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool isTaken;

		[Token(Token = "0x4000B8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueInteractor interactor;

		[Token(Token = "0x4000B8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YueInteractable interactable;

		[Token(Token = "0x4000B90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Animator animator;

		[Token(Token = "0x4000B91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform leftHandAttach;

		[Token(Token = "0x4000B92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform rightHandAttach;

		[Token(Token = "0x4000B93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject snapZonePrefab;

		[Token(Token = "0x600073D")]
		[Address(RVA = "0xC4BE00", Offset = "0xC4BE00", VA = "0xC4BE00")]
		private void Start()
		{
		}

		[Token(Token = "0x600073E")]
		[Address(RVA = "0xC4BE50", Offset = "0xC4BE50", VA = "0xC4BE50")]
		private void Update()
		{
		}

		[Token(Token = "0x600073F")]
		[Address(RVA = "0xC4C220", Offset = "0xC4C220", VA = "0xC4C220")]
		public void EnterPoseZone(YueInteractor inter)
		{
		}

		[Token(Token = "0x6000740")]
		[Address(RVA = "0xC4C230", Offset = "0xC4C230", VA = "0xC4C230")]
		public void ExitPoseZone(YueInteractor inter)
		{
		}

		[Token(Token = "0x6000741")]
		[Address(RVA = "0xC4BE70", Offset = "0xC4BE70", VA = "0xC4BE70")]
		private void ConvertToSnapZone()
		{
		}

		[Token(Token = "0x6000742")]
		[Address(RVA = "0xC4C23C", Offset = "0xC4C23C", VA = "0xC4C23C")]
		public YueHandposeZone()
		{
		}
	}
	[Token(Token = "0x20001EE")]
	public class YueHandSnapZone : MonoBehaviour
	{
		[Token(Token = "0x4000B94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Config")]
		public HandSide side;

		[Token(Token = "0x4000B95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public string animationClipName;

		[Token(Token = "0x4000B96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Debug")]
		public bool isTaken;

		[Token(Token = "0x4000B97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueInteractable interactable;

		[Token(Token = "0x4000B98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YueInteractor interactor;

		[Token(Token = "0x6000743")]
		[Address(RVA = "0xC4C244", Offset = "0xC4C244", VA = "0xC4C244")]
		private void Start()
		{
		}

		[Token(Token = "0x6000744")]
		[Address(RVA = "0xC4C294", Offset = "0xC4C294", VA = "0xC4C294")]
		public void EnterSnapZone(YueInteractor inter)
		{
		}

		[Token(Token = "0x6000745")]
		[Address(RVA = "0xC4C2A4", Offset = "0xC4C2A4", VA = "0xC4C2A4")]
		public void ExitSnapZone(YueInteractor inter)
		{
		}

		[Token(Token = "0x6000746")]
		[Address(RVA = "0xC4C2B0", Offset = "0xC4C2B0", VA = "0xC4C2B0")]
		public YueHandSnapZone()
		{
		}
	}
	[Token(Token = "0x20001EF")]
	[RequireComponent(typeof(Rigidbody))]
	public class YueInteractable : MonoBehaviour
	{
		[Token(Token = "0x4000B99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Configuration")]
		public bool isTaken;

		[Token(Token = "0x4000B9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int priority;

		[Token(Token = "0x4000B9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public bool onlyOneInteractor;

		[Token(Token = "0x4000B9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x21")]
		public bool forceGrabbable;

		[Token(Token = "0x4000B9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x22")]
		public bool useSnapAdjust;

		[Token(Token = "0x4000B9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x23")]
		public bool onlySnapZones;

		[Token(Token = "0x4000B9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool ignoreSnapZones;

		[Token(Token = "0x4000BA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Events")]
		public UnityEvent OnSelectEnter;

		[Token(Token = "0x4000BA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public UnityEvent OnSelectExit;

		[Token(Token = "0x4000BA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public UnityEvent OnTrigger;

		[Token(Token = "0x4000BA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Dependencies")]
		public YueMultiHandSnapZone mainHandSnapZone;

		[Token(Token = "0x4000BA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public List<YueInteractor> interactorEnters;

		[Token(Token = "0x4000BA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public Rigidbody rb;

		[Token(Token = "0x4000BA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public Collider[] allColliders;

		[Token(Token = "0x4000BA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public List<Collider> allPhysicalColliders;

		[Token(Token = "0x4000BA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public List<YueHandSnapZone> handSnapZones;

		[Token(Token = "0x6000747")]
		[Address(RVA = "0xC4C2B8", Offset = "0xC4C2B8", VA = "0xC4C2B8")]
		public void Start()
		{
		}

		[Token(Token = "0x6000748")]
		[Address(RVA = "0xC4C6E0", Offset = "0xC4C6E0", VA = "0xC4C6E0")]
		public void OnTriggerd()
		{
		}

		[Token(Token = "0x6000749")]
		[Address(RVA = "0xC4C6FC", Offset = "0xC4C6FC", VA = "0xC4C6FC")]
		public void EnterInteractable(YueInteractor interactor)
		{
		}

		[Token(Token = "0x600074A")]
		[Address(RVA = "0xC4C824", Offset = "0xC4C824", VA = "0xC4C824")]
		public void ExitInteractable(YueInteractor interactor)
		{
		}

		[Token(Token = "0x600074B")]
		[Address(RVA = "0xC4C964", Offset = "0xC4C964", VA = "0xC4C964")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x600074C")]
		[Address(RVA = "0xC4C968", Offset = "0xC4C968", VA = "0xC4C968")]
		public void ClearAllListsInInteractors()
		{
		}

		[Token(Token = "0x600074D")]
		[Address(RVA = "0xC4CAEC", Offset = "0xC4CAEC", VA = "0xC4CAEC")]
		public YueInteractable()
		{
		}
	}
	[Token(Token = "0x20001F0")]
	public class YueInteractor : MonoBehaviour
	{
		[Token(Token = "0x4000BA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Debug Input")]
		public bool forcedInput;

		[Token(Token = "0x4000BAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Config")]
		public HandSide side;

		[Token(Token = "0x4000BAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask layerMask;

		[Token(Token = "0x4000BAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Header("Snap")]
		public Vector3 snappRotationOffset;

		[Token(Token = "0x4000BAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform palmNormal;

		[Token(Token = "0x4000BAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float normalOffset;

		[Token(Token = "0x4000BAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Effects")]
		public List<AudioClip> grabClips;

		[Token(Token = "0x4000BB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public YueInteractor connectedInteractor;

		[Token(Token = "0x4000BB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[HideInInspector]
		public bool isTaking;

		[Token(Token = "0x4000BB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x51")]
		[HideInInspector]
		public bool isTwoHand;

		[Token(Token = "0x4000BB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x52")]
		[HideInInspector]
		public bool interactionInput;

		[Token(Token = "0x4000BB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x53")]
		[HideInInspector]
		public bool triggerInputHot;

		[Token(Token = "0x4000BB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[HideInInspector]
		public bool gripInputHot;

		[Token(Token = "0x4000BB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[HideInInspector]
		public ConfigurableJoint cJoint;

		[Token(Token = "0x4000BB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[Header("Events")]
		public UnityEvent OnSelectEnter;

		[Token(Token = "0x4000BB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public UnityEvent OnSelectExit;

		[Token(Token = "0x4000BB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public UnityEvent OnHoverEnter;

		[Token(Token = "0x4000BBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public UnityEvent OnHoverExit;

		[Token(Token = "0x4000BBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public UnityEvent OnTrigger;

		[Token(Token = "0x4000BBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent OnForcedEnter;

		[Token(Token = "0x4000BBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[HideInInspector]
		public Transform attachIK;

		[Token(Token = "0x4000BBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[HideInInspector]
		public Rigidbody rb;

		[Token(Token = "0x4000BBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[HideInInspector]
		public Collider[] allColliders;

		[Token(Token = "0x4000BC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[HideInInspector]
		public List<Collider> allPhysicalColliders;

		[Token(Token = "0x4000BC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		[HideInInspector]
		public YueInteractorInput input;

		[Token(Token = "0x4000BC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private AudioSource source;

		[Token(Token = "0x4000BC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[Header("Debug")]
		public YueInteractable takenInteractable;

		[Token(Token = "0x4000BC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public YueHandSnapZone takenSnapZone;

		[Token(Token = "0x4000BC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		public List<YueInteractable> collisionInteractables;

		[Token(Token = "0x4000BC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		public List<YueInteractable> hoverdInteractables;

		[Token(Token = "0x4000BC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		public List<YueHandSnapZone> collisionHandsnaps;

		[Token(Token = "0x4000BC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		public List<YueHandSnapZone> hoverdHandsnaps;

		[Token(Token = "0x4000BC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private bool triggerBlocked;

		[Token(Token = "0x4000BCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		private float triggerHotCounter;

		[Token(Token = "0x4000BCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float gripHotCounter;

		[Token(Token = "0x600074E")]
		[Address(RVA = "0xC4DAFC", Offset = "0xC4DAFC", VA = "0xC4DAFC")]
		private void OnTriggerEnter(Collider other)
		{
		}

		[Token(Token = "0x600074F")]
		[Address(RVA = "0xC4DE0C", Offset = "0xC4DE0C", VA = "0xC4DE0C")]
		private void OnTriggerExit(Collider other)
		{
		}

		[Token(Token = "0x6000750")]
		[Address(RVA = "0xC4E000", Offset = "0xC4E000", VA = "0xC4E000")]
		private void Start()
		{
		}

		[Token(Token = "0x6000751")]
		[Address(RVA = "0xC4E304", Offset = "0xC4E304", VA = "0xC4E304")]
		private void Update()
		{
		}

		[Token(Token = "0x6000752")]
		[Address(RVA = "0xC4E5A0", Offset = "0xC4E5A0", VA = "0xC4E5A0")]
		private void UpdateInteractor()
		{
		}

		[Token(Token = "0x6000753")]
		[Address(RVA = "0xC4EB70", Offset = "0xC4EB70", VA = "0xC4EB70")]
		private void CheckEnter()
		{
		}

		[Token(Token = "0x6000754")]
		[Address(RVA = "0xC4EAEC", Offset = "0xC4EAEC", VA = "0xC4EAEC")]
		private void CheckRelease()
		{
		}

		[Token(Token = "0x6000755")]
		[Address(RVA = "0xC4F81C", Offset = "0xC4F81C", VA = "0xC4F81C")]
		public void OnForcedInteractorEnter(YueInteractable interactable)
		{
		}

		[Token(Token = "0x6000756")]
		[Address(RVA = "0xC4F834", Offset = "0xC4F834", VA = "0xC4F834")]
		public void OnForcedExit()
		{
		}

		[Token(Token = "0x6000757")]
		[Address(RVA = "0xC4EC04", Offset = "0xC4EC04", VA = "0xC4EC04")]
		private void OnInteractorEnter(YueInteractable interactable)
		{
		}

		[Token(Token = "0x6000758")]
		[Address(RVA = "0xC4F6F4", Offset = "0xC4F6F4", VA = "0xC4F6F4")]
		private void OnInteractorExit()
		{
		}

		[Token(Token = "0x6000759")]
		[Address(RVA = "0xC4FDD4", Offset = "0xC4FDD4", VA = "0xC4FDD4")]
		private YueInteractable GetBestChoiceInteractable()
		{
			return null;
		}

		[Token(Token = "0x600075A")]
		[Address(RVA = "0xC4F888", Offset = "0xC4F888", VA = "0xC4F888")]
		private YueHandSnapZone GetBestChoiceHandSnapZone(List<YueHandSnapZone> snapZones)
		{
			return null;
		}

		[Token(Token = "0x600075B")]
		[Address(RVA = "0xC4FFA8", Offset = "0xC4FFA8", VA = "0xC4FFA8")]
		private void SetInterCollision(bool interCollision)
		{
		}

		[Token(Token = "0x600075C")]
		[Address(RVA = "0xC50560", Offset = "0xC50560", VA = "0xC50560")]
		private void SetHandColliderActive(bool active)
		{
		}

		[Token(Token = "0x600075D")]
		[Address(RVA = "0xC4E5CC", Offset = "0xC4E5CC", VA = "0xC4E5CC")]
		public void ClearNullList()
		{
		}

		[Token(Token = "0x600075E")]
		[Address(RVA = "0xC506B8", Offset = "0xC506B8", VA = "0xC506B8")]
		public void ClearAllLists()
		{
		}

		[Token(Token = "0x600075F")]
		[Address(RVA = "0xC4E3DC", Offset = "0xC4E3DC", VA = "0xC4E3DC")]
		private void UpdateInput()
		{
		}

		[Token(Token = "0x6000760")]
		[Address(RVA = "0xC507D0", Offset = "0xC507D0", VA = "0xC507D0")]
		public void HapticFeedback(float intesity, float duration)
		{
		}

		[Token(Token = "0x6000761")]
		[Address(RVA = "0xC507EC", Offset = "0xC507EC", VA = "0xC507EC")]
		public YueInteractor()
		{
		}
	}
	[Token(Token = "0x20001F2")]
	public class YueJointResistance : MonoBehaviour
	{
		[Token(Token = "0x4000BD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Config")]
		public float maxPositionDelta;

		[Token(Token = "0x4000BD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maxRotationDelta;

		[Token(Token = "0x4000BD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float unlockForce;

		[Token(Token = "0x4000BD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float unlockDamper;

		[Token(Token = "0x4000BD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float positionForce;

		[Token(Token = "0x4000BDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float positionDamper;

		[Token(Token = "0x4000BDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float rotationForce;

		[Token(Token = "0x4000BDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float rotationDamper;

		[Token(Token = "0x4000BDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float positionDelta;

		[Token(Token = "0x4000BDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float rotationDelta;

		[Token(Token = "0x4000BDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Vector3 targetPosition;

		[Token(Token = "0x4000BE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		private Quaternion targetRotation;

		[Token(Token = "0x4000BE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private ConfigurableJoint cJoint;

		[Token(Token = "0x4000BE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private JointDrive positionDrive;

		[Token(Token = "0x4000BE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private JointDrive unlockDrive;

		[Token(Token = "0x4000BE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private JointDrive rotationDrive;

		[Token(Token = "0x4000BE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private YueInteractable interactable;

		[Token(Token = "0x4000BE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private Vector3 startPosition;

		[Token(Token = "0x4000BE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Quaternion startRotation;

		[Token(Token = "0x600076C")]
		[Address(RVA = "0xC50AA8", Offset = "0xC50AA8", VA = "0xC50AA8")]
		private void Start()
		{
		}

		[Token(Token = "0x600076D")]
		[Address(RVA = "0xC50C9C", Offset = "0xC50C9C", VA = "0xC50C9C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600076E")]
		[Address(RVA = "0xC50F94", Offset = "0xC50F94", VA = "0xC50F94")]
		public YueJointResistance()
		{
		}
	}
	[Token(Token = "0x20001F3")]
	public class YueMultiHandSnapZone : MonoBehaviour
	{
		[Token(Token = "0x4000BE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[HideInInspector]
		public YueHandSnapZone zone;

		[Token(Token = "0x4000BE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public YueHandSnapZone[] snapZones;

		[Token(Token = "0x600076F")]
		[Address(RVA = "0xC50F9C", Offset = "0xC50F9C", VA = "0xC50F9C")]
		public void Start()
		{
		}

		[Token(Token = "0x6000770")]
		[Address(RVA = "0xC51014", Offset = "0xC51014", VA = "0xC51014")]
		private void Update()
		{
		}

		[Token(Token = "0x6000771")]
		[Address(RVA = "0xC4F838", Offset = "0xC4F838", VA = "0xC4F838")]
		public YueHandSnapZone GetHandSnapZone(HandSide side)
		{
			return null;
		}

		[Token(Token = "0x6000772")]
		[Address(RVA = "0xC51060", Offset = "0xC51060", VA = "0xC51060")]
		public YueMultiHandSnapZone()
		{
		}
	}
	[Token(Token = "0x20001F4")]
	public class YueTrackedRigidbody : MonoBehaviour
	{
		[Token(Token = "0x4000BEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Hand-Tracking")]
		public Transform scaleParent;

		[Token(Token = "0x4000BEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float multiplier;

		[Token(Token = "0x4000BEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float handLinearForce;

		[Token(Token = "0x4000BED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float handLinearDamper;

		[Token(Token = "0x4000BEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float handAngularForce;

		[Token(Token = "0x4000BEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float handAngularDamper;

		[Token(Token = "0x4000BF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float handMaxForce;

		[Token(Token = "0x4000BF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Dependencies")]
		public Transform source;

		[Token(Token = "0x4000BF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private JointDrive drive;

		[Token(Token = "0x4000BF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private ConfigurableJoint cJoint;

		[Token(Token = "0x4000BF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody rb;

		[Token(Token = "0x4000BF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Vector3 localStartPosition;

		[Token(Token = "0x4000BF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private Vector3 sourceLocalVelocity;

		[Token(Token = "0x4000BF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Vector3 sourceLastLocalPosition;

		[Token(Token = "0x4000BF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private Vector3 sourceLocalAngularVelocity;

		[Token(Token = "0x4000BF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private Quaternion sourceLastLocalRotation;

		[Token(Token = "0x4000BFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private YueInteractor interactor;

		[Token(Token = "0x6000773")]
		[Address(RVA = "0xC51068", Offset = "0xC51068", VA = "0xC51068")]
		private void Start()
		{
		}

		[Token(Token = "0x6000774")]
		[Address(RVA = "0xC51158", Offset = "0xC51158", VA = "0xC51158")]
		private void Update()
		{
		}

		[Token(Token = "0x6000775")]
		[Address(RVA = "0xC512BC", Offset = "0xC512BC", VA = "0xC512BC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000776")]
		[Address(RVA = "0xC517E4", Offset = "0xC517E4", VA = "0xC517E4")]
		public YueTrackedRigidbody()
		{
		}
	}
}
namespace YueDestructibles
{
	[Token(Token = "0x20001F5")]
	public class YueDestructableAudioSourceTemplate : MonoBehaviour
	{
		[Token(Token = "0x4000BFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public AudioSource audioSource;

		[Token(Token = "0x4000BFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[HideInInspector]
		public Transform[] debris;

		[Token(Token = "0x4000BFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float timeAlive;

		[Token(Token = "0x4000BFE")]
		private const float maxTimeAlive = 10f;

		[Token(Token = "0x4000BFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 averagePosition;

		[Token(Token = "0x6000777")]
		[Address(RVA = "0xC51808", Offset = "0xC51808", VA = "0xC51808")]
		private void Update()
		{
		}

		[Token(Token = "0x6000778")]
		[Address(RVA = "0xC51A84", Offset = "0xC51A84", VA = "0xC51A84")]
		public YueDestructableAudioSourceTemplate()
		{
		}
	}
	[Token(Token = "0x20001F6")]
	[RequireComponent(typeof(Rigidbody))]
	public class YueDestructible : MonoBehaviour
	{
		[Token(Token = "0x4000C00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Destruction Properties")]
		public float shatterBounceMultiplier;

		[Token(Token = "0x4000C01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float maximumImpulse;

		[Token(Token = "0x4000C02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float impulseDamageMultiplier;

		[Token(Token = "0x4000C03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public bool accumulateDamage;

		[Token(Token = "0x4000C04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Range(0f, 100f)]
		[SerializeField]
		[Header("Health [%]")]
		private float health;

		[Token(Token = "0x4000C05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Header("Debris Disappearance")]
		public bool isDisappearing;

		[Token(Token = "0x4000C06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float disappearingTime;

		[Token(Token = "0x4000C07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Sound Effects")]
		public AudioClip[] destructionClips;

		[Token(Token = "0x4000C08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float impulseVolumeFactor;

		[Token(Token = "0x4000C09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public YueDestructableAudioSourceTemplate audioSourceTemplate;

		[Token(Token = "0x4000C0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Dependencies")]
		public GameObject debrisRoot;

		[Token(Token = "0x4000C0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Events")]
		public UnityEvent onObjectDestruct;

		[Token(Token = "0x4000C0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Renderer mainObjectRenderer;

		[Token(Token = "0x4000C0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private Rigidbody[] debris;

		[Token(Token = "0x4000C0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Rigidbody rigid;

		[Token(Token = "0x4000C0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private bool isDestructed;

		[Token(Token = "0x4000C10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool isSetup;

		[Token(Token = "0x6000779")]
		[Address(RVA = "0xC51A8C", Offset = "0xC51A8C", VA = "0xC51A8C")]
		private void Start()
		{
		}

		[Token(Token = "0x600077A")]
		[Address(RVA = "0xC51B80", Offset = "0xC51B80", VA = "0xC51B80")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x600077B")]
		[Address(RVA = "0xC51DA4", Offset = "0xC51DA4", VA = "0xC51DA4")]
		public void DestructWithImpulse(Vector3 impulse, Vector3 point)
		{
		}

		[Token(Token = "0x600077C")]
		[Address(RVA = "0xC52418", Offset = "0xC52418", VA = "0xC52418")]
		public void DestructSimple()
		{
		}

		[Token(Token = "0x600077D")]
		[Address(RVA = "0xC524B0", Offset = "0xC524B0", VA = "0xC524B0")]
		public void AddDamage(float damageInPercent)
		{
		}

		[Token(Token = "0x600077E")]
		[Address(RVA = "0xC52188", Offset = "0xC52188", VA = "0xC52188")]
		private void CreateAudioEffect(Vector3 impulse, Vector3 point)
		{
		}

		[Token(Token = "0x600077F")]
		[Address(RVA = "0xC524C0", Offset = "0xC524C0", VA = "0xC524C0")]
		public YueDestructible()
		{
		}
	}
	[Token(Token = "0x20001F7")]
	public class YueDestructiblesGunDemo : MonoBehaviour
	{
		[Token(Token = "0x4000C11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("*** Important *** \n")]
		[Header("*** Important ***")]
		[Header("To see how to destruct objects by code look into this script.")]
		[Header("Gun Config")]
		public float impulseFactor;

		[Token(Token = "0x4000C12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Prefabs")]
		public List<GameObject> prefabs;

		[Token(Token = "0x4000C13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Dependencies")]
		public Camera fpsCamera;

		[Token(Token = "0x4000C14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource source;

		[Token(Token = "0x4000C15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<GameObject> spawnedPrefabs;

		[Token(Token = "0x4000C16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<float> counters;

		[Token(Token = "0x4000C17")]
		private const float timeUntilSpawn = 5f;

		[Token(Token = "0x6000780")]
		[Address(RVA = "0xC524FC", Offset = "0xC524FC", VA = "0xC524FC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000781")]
		[Address(RVA = "0xC528DC", Offset = "0xC528DC", VA = "0xC528DC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000782")]
		[Address(RVA = "0xC52554", Offset = "0xC52554", VA = "0xC52554")]
		private void SetupPrefabs()
		{
		}

		[Token(Token = "0x6000783")]
		[Address(RVA = "0xC52B7C", Offset = "0xC52B7C", VA = "0xC52B7C")]
		private void UpdatePrefabs()
		{
		}

		[Token(Token = "0x6000784")]
		[Address(RVA = "0xC52E8C", Offset = "0xC52E8C", VA = "0xC52E8C")]
		public YueDestructiblesGunDemo()
		{
		}
	}
	[Token(Token = "0x20001F8")]
	public class YueDestructiblesRoot : MonoBehaviour
	{
		[Token(Token = "0x4000C18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private Rigidbody[] debris;

		[Token(Token = "0x4000C19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float dissapearingSpeed;

		[Token(Token = "0x4000C1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float size;

		[Token(Token = "0x6000785")]
		[Address(RVA = "0xC52408", Offset = "0xC52408", VA = "0xC52408")]
		public void SetDisappearingTime(float time)
		{
		}

		[Token(Token = "0x6000786")]
		[Address(RVA = "0xC52E9C", Offset = "0xC52E9C", VA = "0xC52E9C")]
		public void SetDebris(Rigidbody[] rb)
		{
		}

		[Token(Token = "0x6000787")]
		[Address(RVA = "0xC52EA4", Offset = "0xC52EA4", VA = "0xC52EA4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000788")]
		[Address(RVA = "0xC53014", Offset = "0xC53014", VA = "0xC53014")]
		public YueDestructiblesRoot()
		{
		}
	}
}
namespace YueRagdoll
{
	[Token(Token = "0x20001F9")]
	public enum RagdollState
	{
		[Token(Token = "0x4000C1C")]
		Pinned,
		[Token(Token = "0x4000C1D")]
		Unpinned
	}
	[Token(Token = "0x20001FA")]
	public enum GetUpStates
	{
		[Token(Token = "0x4000C1F")]
		BehaviourNotPlaying,
		[Token(Token = "0x4000C20")]
		StrengthenPin,
		[Token(Token = "0x4000C21")]
		StrengthenBones,
		[Token(Token = "0x4000C22")]
		PlayingAnimation
	}
	[Token(Token = "0x20001FB")]
	public class YueActiveRagdoll : MonoBehaviour
	{
		[Token(Token = "0x4000C23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Animator")]
		public RuntimeAnimatorController animationController;

		[Token(Token = "0x4000C24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Avatar avatar;

		[Token(Token = "0x4000C25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Model")]
		public Transform animated;

		[Token(Token = "0x4000C26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform physical;

		[Token(Token = "0x4000C27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Master Tuning")]
		public RagdollState state;

		[Token(Token = "0x4000C28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public GetUpStates getupStates;

		[Token(Token = "0x4000C29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Range(0f, 1f)]
		public float blendWeight;

		[Token(Token = "0x4000C2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Range(0f, 1f)]
		public float boneStrength;

		[Token(Token = "0x4000C2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool showPhysicalMesh;

		[Token(Token = "0x4000C2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x49")]
		public bool showAnimatedMesh;

		[Token(Token = "0x4000C2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float maxPinError;

		[Token(Token = "0x4000C2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float groundedHeight;

		[Token(Token = "0x4000C2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float reviveSpeed;

		[Token(Token = "0x4000C30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool revivvable;

		[Token(Token = "0x4000C31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private readonly float lastBoneStrength;

		[Token(Token = "0x4000C32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[HideInInspector]
		public Vector3 balanceOffset;

		[Token(Token = "0x4000C33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		public bool isGrounded;

		[Token(Token = "0x4000C34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 startBalance;

		[Token(Token = "0x4000C35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public LayerMask groundLayer;

		[Token(Token = "0x4000C36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Range(0f, 1f)]
		public float pinStrength;

		[Token(Token = "0x4000C37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private readonly float lastPinSrength;

		[Token(Token = "0x4000C38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public AnimationCurve boneTurnUpCurve;

		[Token(Token = "0x4000C39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[Header("Body Parts \n")]
		public YueRagdollBoneTuning headTuning;

		[Token(Token = "0x4000C3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public YueRagdollBoneTuning hipTuning;

		[Token(Token = "0x4000C3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public YueRagdollBoneTuning spineTuning;

		[Token(Token = "0x4000C3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		public YueRagdollBoneTuning handTuning;

		[Token(Token = "0x4000C3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		public YueRagdollBoneTuning armsTuning;

		[Token(Token = "0x4000C3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		public YueRagdollBoneTuning feetTuning;

		[Token(Token = "0x4000C3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		public YueRagdollBoneTuning kneeTuning;

		[Token(Token = "0x4000C40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		public YueRagdollBoneTuning legsTuning;

		[Token(Token = "0x4000C41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		[Header("Bones")]
		public List<YueActiveRagdollBone> ragdollBones;

		[Token(Token = "0x4000C42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool smoothActivate;

		[Token(Token = "0x4000C43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private float smoothSpeed;

		[Token(Token = "0x4000C44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE0")]
		private float smoothStrength;

		[Token(Token = "0x4000C45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private bool smoothPinActivate;

		[Token(Token = "0x4000C46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float smoothPinSpeed;

		[Token(Token = "0x4000C47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xEC")]
		private float smoothPinStrength;

		[Token(Token = "0x4000C48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private float smoothPinStrengthCounter;

		[Token(Token = "0x4000C49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF4")]
		[HideInInspector]
		public bool isGrabbed;

		[Token(Token = "0x4000C4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF5")]
		[HideInInspector]
		public bool isReviving;

		[Token(Token = "0x4000C4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float justRevivedCounter;

		[Token(Token = "0x4000C4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private float getupAnimationCounter;

		[Token(Token = "0x4000C4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private bool animationStarted;

		[Token(Token = "0x4000C4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private Rigidbody rb;

		[Token(Token = "0x4000C4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private YueActiveRagdollIK ragdollIK;

		[Token(Token = "0x4000C50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		[HideInInspector]
		public Animator physicalAnimator;

		[Token(Token = "0x4000C51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x120")]
		[HideInInspector]
		public Animator animatedAnimator;

		[Token(Token = "0x4000C52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x128")]
		private Transform hips;

		[Token(Token = "0x4000C53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x130")]
		private Transform leftFoot;

		[Token(Token = "0x4000C54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x138")]
		private Transform rightFoot;

		[Token(Token = "0x4000C55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x140")]
		private Transform hipTransformForward;

		[Token(Token = "0x6000789")]
		[Address(RVA = "0xC53024", Offset = "0xC53024", VA = "0xC53024")]
		private void Start()
		{
		}

		[Token(Token = "0x600078A")]
		[Address(RVA = "0xC538F4", Offset = "0xC538F4", VA = "0xC538F4")]
		private void Update()
		{
		}

		[Token(Token = "0x600078B")]
		[Address(RVA = "0xC5417C", Offset = "0xC5417C", VA = "0xC5417C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x600078C")]
		[Address(RVA = "0xC54180", Offset = "0xC54180", VA = "0xC54180")]
		private YueActiveRagdollBone CreateRagdollBone(HumanBodyBones bone, YueRagdollBoneTuning tuning)
		{
			return null;
		}

		[Token(Token = "0x600078D")]
		[Address(RVA = "0xC532AC", Offset = "0xC532AC", VA = "0xC532AC")]
		private void SetupRagdoll()
		{
		}

		[Token(Token = "0x600078E")]
		[Address(RVA = "0xC53F60", Offset = "0xC53F60", VA = "0xC53F60")]
		private void AnimateRest()
		{
		}

		[Token(Token = "0x600078F")]
		[Address(RVA = "0xC54010", Offset = "0xC54010", VA = "0xC54010")]
		private void CheckIfGrabbed()
		{
		}

		[Token(Token = "0x6000790")]
		[Address(RVA = "0xC53B7C", Offset = "0xC53B7C", VA = "0xC53B7C")]
		private void CheckIfGrounded()
		{
		}

		[Token(Token = "0x6000791")]
		[Address(RVA = "0xC53D80", Offset = "0xC53D80", VA = "0xC53D80")]
		private void UpdateRagdollState()
		{
		}

		[Token(Token = "0x6000792")]
		[Address(RVA = "0xC546AC", Offset = "0xC546AC", VA = "0xC546AC")]
		private void UpdateGetupBehaviour()
		{
		}

		[Token(Token = "0x6000793")]
		[Address(RVA = "0xC543A4", Offset = "0xC543A4", VA = "0xC543A4")]
		private void WhilePinned()
		{
		}

		[Token(Token = "0x6000794")]
		[Address(RVA = "0xC5446C", Offset = "0xC5446C", VA = "0xC5446C")]
		private void WhileUnpinned()
		{
		}

		[Token(Token = "0x6000795")]
		[Address(RVA = "0xC546BC", Offset = "0xC546BC", VA = "0xC546BC")]
		private void Unpin()
		{
		}

		[Token(Token = "0x6000796")]
		[Address(RVA = "0xC546B0", Offset = "0xC546B0", VA = "0xC546B0")]
		private void WhileStrengthenPin()
		{
		}

		[Token(Token = "0x6000797")]
		[Address(RVA = "0xC546B4", Offset = "0xC546B4", VA = "0xC546B4")]
		private void WhileStrengthenBones()
		{
		}

		[Token(Token = "0x6000798")]
		[Address(RVA = "0xC546B8", Offset = "0xC546B8", VA = "0xC546B8")]
		private void WhilePlayingAnimation()
		{
		}

		[Token(Token = "0x6000799")]
		[Address(RVA = "0xC5479C", Offset = "0xC5479C", VA = "0xC5479C")]
		private void OnStartReviving()
		{
		}

		[Token(Token = "0x600079A")]
		[Address(RVA = "0xC5490C", Offset = "0xC5490C", VA = "0xC5490C")]
		private void OnStartAnimation()
		{
		}

		[Token(Token = "0x600079B")]
		[Address(RVA = "0xC54960", Offset = "0xC54960", VA = "0xC54960")]
		private void OnExitReviving()
		{
		}

		[Token(Token = "0x600079C")]
		[Address(RVA = "0xC54D38", Offset = "0xC54D38", VA = "0xC54D38")]
		public void SmoothTurnOnBones(float speed, float startStrength)
		{
		}

		[Token(Token = "0x600079D")]
		[Address(RVA = "0xC5396C", Offset = "0xC5396C", VA = "0xC5396C")]
		private void UpdateSmoothTurnOnBones()
		{
		}

		[Token(Token = "0x600079E")]
		[Address(RVA = "0xC54D1C", Offset = "0xC54D1C", VA = "0xC54D1C")]
		public void SmoothTurnOnPin(float speed)
		{
		}

		[Token(Token = "0x600079F")]
		[Address(RVA = "0xC53B0C", Offset = "0xC53B0C", VA = "0xC53B0C")]
		private void UpdateSmoothTurnOnPin()
		{
		}

		[Token(Token = "0x60007A0")]
		[Address(RVA = "0xC54D4C", Offset = "0xC54D4C", VA = "0xC54D4C")]
		private void SetActiveIntercollision(bool interCollision)
		{
		}

		[Token(Token = "0x60007A1")]
		[Address(RVA = "0xC550C0", Offset = "0xC550C0", VA = "0xC550C0")]
		private void SetActiveLimits(bool useLimits)
		{
		}

		[Token(Token = "0x60007A2")]
		[Address(RVA = "0xC54A48", Offset = "0xC54A48", VA = "0xC54A48")]
		public void SetBoneStrength(float strength)
		{
		}

		[Token(Token = "0x60007A3")]
		[Address(RVA = "0xC54BB0", Offset = "0xC54BB0", VA = "0xC54BB0")]
		public void SetBoneStrength(float strength, HumanBodyBones boneName)
		{
		}

		[Token(Token = "0x60007A4")]
		[Address(RVA = "0xC53D9C", Offset = "0xC53D9C", VA = "0xC53D9C")]
		private void UpdateBoneStrength()
		{
		}

		[Token(Token = "0x60007A5")]
		[Address(RVA = "0xC53EF4", Offset = "0xC53EF4", VA = "0xC53EF4")]
		private void UpdatePinStrength()
		{
		}

		[Token(Token = "0x60007A6")]
		[Address(RVA = "0xC55354", Offset = "0xC55354", VA = "0xC55354")]
		public void SetLocal(bool local)
		{
		}

		[Token(Token = "0x60007A7")]
		[Address(RVA = "0xC536C8", Offset = "0xC536C8", VA = "0xC536C8")]
		private void TargetToSource()
		{
		}

		[Token(Token = "0x60007A8")]
		[Address(RVA = "0xC5554C", Offset = "0xC5554C", VA = "0xC5554C")]
		public void RemoveActiveRagdoll()
		{
		}

		[Token(Token = "0x60007A9")]
		[Address(RVA = "0xC53810", Offset = "0xC53810", VA = "0xC53810")]
		private void CalculateBalanceOffset()
		{
		}

		[Token(Token = "0x60007AA")]
		[Address(RVA = "0xC55658", Offset = "0xC55658", VA = "0xC55658")]
		public YueActiveRagdoll()
		{
		}
	}
	[Token(Token = "0x20001FC")]
	public class YueActiveRagdollBone : MonoBehaviour
	{
		[Token(Token = "0x4000C56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Ragdoll Bone")]
		public bool shot;

		[Token(Token = "0x4000C57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Header("Identity")]
		public HumanBodyBones bone;

		[Token(Token = "0x4000C58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Tuning")]
		public YueRagdollBoneTuning tuning;

		[Token(Token = "0x4000C59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueRagdollBoneTracker boneTracker;

		[Token(Token = "0x4000C5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[HideInInspector]
		public Transform animated;

		[Token(Token = "0x4000C5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[HideInInspector]
		public Transform physical;

		[Token(Token = "0x4000C5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[HideInInspector]
		public Rigidbody rb;

		[Token(Token = "0x4000C5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[HideInInspector]
		public YueInteractable interactable;

		[Token(Token = "0x4000C5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private YueActiveRagdollNPC npc;

		[Token(Token = "0x60007AB")]
		[Address(RVA = "0xC54288", Offset = "0xC54288", VA = "0xC54288")]
		public void InIt(Transform mainParent, Transform animatedBone, Transform physicalBone, HumanBodyBones b, YueRagdollBoneTuning t)
		{
		}

		[Token(Token = "0x60007AC")]
		[Address(RVA = "0xC554F0", Offset = "0xC554F0", VA = "0xC554F0")]
		public void TargetToSource()
		{
		}

		[Token(Token = "0x60007AD")]
		[Address(RVA = "0xC55338", Offset = "0xC55338", VA = "0xC55338")]
		public void SetMasterStrength(float strength)
		{
		}

		[Token(Token = "0x60007AE")]
		[Address(RVA = "0xC550A4", Offset = "0xC550A4", VA = "0xC550A4")]
		public void SetStrength(float strength)
		{
		}

		[Token(Token = "0x60007AF")]
		[Address(RVA = "0xC55810", Offset = "0xC55810", VA = "0xC55810")]
		private void Update()
		{
		}

		[Token(Token = "0x60007B0")]
		[Address(RVA = "0xC5591C", Offset = "0xC5591C", VA = "0xC5591C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60007B1")]
		[Address(RVA = "0xC55C44", Offset = "0xC55C44", VA = "0xC55C44")]
		public void SetKinematic(bool kinematic)
		{
		}

		[Token(Token = "0x60007B2")]
		[Address(RVA = "0xC55820", Offset = "0xC55820", VA = "0xC55820")]
		public void OnBoneGotShot()
		{
		}

		[Token(Token = "0x60007B3")]
		[Address(RVA = "0xC55EC8", Offset = "0xC55EC8", VA = "0xC55EC8")]
		public void OnBoneGotStabbed()
		{
		}

		[Token(Token = "0x60007B4")]
		[Address(RVA = "0xC55E64", Offset = "0xC55E64", VA = "0xC55E64")]
		private bool IsLowerBody(HumanBodyBones abone)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B5")]
		[Address(RVA = "0xC55C90", Offset = "0xC55C90", VA = "0xC55C90")]
		private bool IsBone(HumanBodyBones abone)
		{
			return default(bool);
		}

		[Token(Token = "0x60007B6")]
		[Address(RVA = "0xC55FFC", Offset = "0xC55FFC", VA = "0xC55FFC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x60007B7")]
		[Address(RVA = "0xC5656C", Offset = "0xC5656C", VA = "0xC5656C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60007B8")]
		[Address(RVA = "0xC56658", Offset = "0xC56658", VA = "0xC56658")]
		public YueActiveRagdollBone()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FD")]
	public class YueRagdollBoneTracker
	{
		[Token(Token = "0x4000C5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public YueRagdollBoneTuning tuning;

		[Token(Token = "0x4000C60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float strength;

		[Token(Token = "0x4000C61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float masterStrength;

		[Token(Token = "0x4000C62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform source;

		[Token(Token = "0x4000C63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform target;

		[Token(Token = "0x4000C64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Quaternion localStartRot;

		[Token(Token = "0x4000C65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private readonly ConfigurableJoint cJoint;

		[Token(Token = "0x4000C66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private JointDrive finalDrive;

		[Token(Token = "0x4000C67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private readonly YueActiveRagdollBone bone;

		[Token(Token = "0x4000C68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private Quaternion sourceLastLocalRotation;

		[Token(Token = "0x4000C69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 sourceLocalAngularVelocity;

		[Token(Token = "0x4000C6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Vector3 rotationError;

		[Token(Token = "0x60007B9")]
		[Address(RVA = "0xC5569C", Offset = "0xC5569C", VA = "0xC5569C")]
		public YueRagdollBoneTracker(YueRagdollBoneTuning tune, YueActiveRagdollBone attachedBone)
		{
		}

		[Token(Token = "0x60007BA")]
		[Address(RVA = "0xC55934", Offset = "0xC55934", VA = "0xC55934")]
		public void Update()
		{
		}

		[Token(Token = "0x60007BB")]
		[Address(RVA = "0xC56584", Offset = "0xC56584", VA = "0xC56584")]
		public void Unset()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20001FE")]
	public class YueRagdollBoneTuning
	{
		[Token(Token = "0x4000C6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[Header("Config")]
		public bool local;

		[Token(Token = "0x4000C6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		[Range(0f, 1f)]
		public float multiply;

		[Token(Token = "0x4000C6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Tuning")]
		public float torque;

		[Token(Token = "0x4000C6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float damper;

		[Token(Token = "0x4000C6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float maxTorque;

		[Token(Token = "0x4000C70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[HideInInspector]
		public Quaternion rotationOffset;

		[Token(Token = "0x60007BC")]
		[Address(RVA = "0xC56660", Offset = "0xC56660", VA = "0xC56660")]
		public YueRagdollBoneTuning()
		{
		}
	}
	[Token(Token = "0x20001FF")]
	public static class ConfigurableJointExtensions
	{
		[Token(Token = "0x60007BD")]
		[Address(RVA = "0xC5667C", Offset = "0xC5667C", VA = "0xC5667C")]
		public static void SetTargetRotationLocal(this ConfigurableJoint joint, Quaternion targetLocalRotation, Quaternion startLocalRotation)
		{
		}

		[Token(Token = "0x60007BE")]
		[Address(RVA = "0xC56718", Offset = "0xC56718", VA = "0xC56718")]
		public static void SetTargetRotation(this ConfigurableJoint joint, Quaternion targetWorldRotation, Quaternion startWorldRotation)
		{
		}

		[Token(Token = "0x60007BF")]
		[Address(RVA = "0xC567B4", Offset = "0xC567B4", VA = "0xC567B4")]
		private static void SetTargetRotationInternal(this ConfigurableJoint joint, Quaternion targetRotation, Quaternion startRotation, Space space)
		{
		}
	}
	[Token(Token = "0x2000200")]
	public class YueActiveRagdollIK : MonoBehaviour
	{
		[Token(Token = "0x4000C71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		public float footIKWeight;

		[Token(Token = "0x4000C72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Range(0f, 1f)]
		public float handIKWeight;

		[Token(Token = "0x4000C73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform leftHand;

		[Token(Token = "0x4000C74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Transform rightHand;

		[Token(Token = "0x4000C75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform rightHandIdle;

		[Token(Token = "0x4000C76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform rightHandGun;

		[Token(Token = "0x4000C77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Transform leftFoot;

		[Token(Token = "0x4000C78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Transform rightFoot;

		[Token(Token = "0x4000C79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Transform leftKnee;

		[Token(Token = "0x4000C7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Transform rightKnee;

		[Token(Token = "0x4000C7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform leftElbow;

		[Token(Token = "0x4000C7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Transform rightElbow;

		[Token(Token = "0x4000C7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private YueActiveRagdollNPC npc;

		[Token(Token = "0x4000C7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Animator animator;

		[Token(Token = "0x60007C0")]
		[Address(RVA = "0xC56C4C", Offset = "0xC56C4C", VA = "0xC56C4C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C1")]
		[Address(RVA = "0xC56CDC", Offset = "0xC56CDC", VA = "0xC56CDC")]
		private void Update()
		{
		}

		[Token(Token = "0x60007C2")]
		[Address(RVA = "0xC56E50", Offset = "0xC56E50", VA = "0xC56E50")]
		private void OnAnimatorIK(int layerIndex)
		{
		}

		[Token(Token = "0x60007C3")]
		[Address(RVA = "0xC57288", Offset = "0xC57288", VA = "0xC57288")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007C4")]
		[Address(RVA = "0xC57290", Offset = "0xC57290", VA = "0xC57290")]
		public YueActiveRagdollIK()
		{
		}
	}
	[Token(Token = "0x2000201")]
	public class YueActiveRagdollNPC : MonoBehaviour
	{
		[Token(Token = "0x4000C7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Behaviour")]
		public bool moveTowardsTarget;

		[Token(Token = "0x4000C80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		public bool fightAgainstTarget;

		[Token(Token = "0x4000C81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1A")]
		public bool dontFightUntilSpotted;

		[Token(Token = "0x4000C82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1B")]
		public bool dontFightUntilProvoked;

		[Token(Token = "0x4000C83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public bool hasGun;

		[Token(Token = "0x4000C84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1D")]
		public bool configurable;

		[Token(Token = "0x4000C85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float minDistanceBoxing;

		[Token(Token = "0x4000C86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float minDistanceFollowing;

		[Token(Token = "0x4000C87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float minDistanceShooting;

		[Token(Token = "0x4000C88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float destroyAfterDeadTime;

		[Token(Token = "0x4000C89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Damage Behaviour")]
		public float damagePerShot;

		[Token(Token = "0x4000C8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float damagePerHit;

		[Token(Token = "0x4000C8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public float minImpulsPerHit;

		[Token(Token = "0x4000C8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		public float maxImpulsPerHit;

		[Token(Token = "0x4000C8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Status")]
		public float healthRecoverySpeed;

		[Token(Token = "0x4000C8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float health;

		[Token(Token = "0x4000C8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public bool alive;

		[Token(Token = "0x4000C90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Header("Dependencies")]
		public Gun gun;

		[Token(Token = "0x4000C91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public GameObject menuPrefab;

		[Token(Token = "0x4000C92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Transform gunIK;

		[Token(Token = "0x4000C93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Vector3 gunRotationOffset;

		[Token(Token = "0x4000C94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		public LayerMask visibleLayer;

		[Token(Token = "0x4000C95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ParticleEffectsImpact impactEffects;

		[Token(Token = "0x4000C96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[Header("Events")]
		public UnityEvent OnNPCHitEvent;

		[Token(Token = "0x4000C97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public UnityEvent OnNPCShotEvent;

		[Token(Token = "0x4000C98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public UnityEvent OnNPCKnifeEvent;

		[Token(Token = "0x4000C99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public UnityEvent OnNPCProvokedEvent;

		[Token(Token = "0x4000C9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		public bool isShooting;

		[Token(Token = "0x4000C9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA1")]
		public bool isBoxing;

		[Token(Token = "0x4000C9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA2")]
		public bool isTargetInSight;

		[Token(Token = "0x4000C9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA3")]
		private bool lastHasGun;

		[Token(Token = "0x4000C9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Transform playerHead;

		[Token(Token = "0x4000C9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Transform playerRig;

		[Token(Token = "0x4000CA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		[HideInInspector]
		public Transform target;

		[Token(Token = "0x4000CA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		[HideInInspector]
		public Transform targetHead;

		[Token(Token = "0x4000CA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private YueActiveRagdollLocomotion locomotion;

		[Token(Token = "0x4000CA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD0")]
		private NavMeshAgent agent;

		[Token(Token = "0x4000CA4")]
		private const float maxAgentDistance = 0.35f;

		[Token(Token = "0x4000CA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private Vector3 targetDelta;

		[Token(Token = "0x4000CA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE4")]
		private float shootingInterval;

		[Token(Token = "0x4000CA7")]
		private const float shootingIntervalMax = 2f;

		[Token(Token = "0x4000CA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float shootingIntervalCounter;

		[Token(Token = "0x4000CA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private YueActiveRagdoll ragdoll;

		[Token(Token = "0x4000CAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private Animator animator;

		[Token(Token = "0x4000CAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x100")]
		private VRInput vrInput;

		[Token(Token = "0x4000CAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x108")]
		private GameObject menu;

		[Token(Token = "0x4000CAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x110")]
		private int perfomanceLevel;

		[Token(Token = "0x4000CAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x118")]
		private YueSpawnablesHandler handler;

		[Token(Token = "0x60007C5")]
		[Address(RVA = "0xC572A0", Offset = "0xC572A0", VA = "0xC572A0")]
		private void Start()
		{
		}

		[Token(Token = "0x60007C6")]
		[Address(RVA = "0xC57628", Offset = "0xC57628", VA = "0xC57628")]
		public void Update()
		{
		}

		[Token(Token = "0x60007C7")]
		[Address(RVA = "0xC5844C", Offset = "0xC5844C", VA = "0xC5844C")]
		private void CheckMaxDistance()
		{
		}

		[Token(Token = "0x60007C8")]
		[Address(RVA = "0xC58590", Offset = "0xC58590", VA = "0xC58590")]
		private void SetPerformanceLevel(int level)
		{
		}

		[Token(Token = "0x60007C9")]
		[Address(RVA = "0xC586DC", Offset = "0xC586DC", VA = "0xC586DC")]
		private void SetRigidbodyKinematic(bool kinematic)
		{
		}

		[Token(Token = "0x60007CA")]
		[Address(RVA = "0xC58A74", Offset = "0xC58A74", VA = "0xC58A74")]
		private void SetRigidbodyMode(CollisionDetectionMode mode)
		{
		}

		[Token(Token = "0x60007CB")]
		[Address(RVA = "0xC58870", Offset = "0xC58870", VA = "0xC58870")]
		private void SetRigidbodySolver(int solver, int velocitySolver)
		{
		}

		[Token(Token = "0x60007CC")]
		[Address(RVA = "0xC58C1C", Offset = "0xC58C1C", VA = "0xC58C1C")]
		private void SetActivNPCScripts(bool active)
		{
		}

		[Token(Token = "0x60007CD")]
		[Address(RVA = "0xC582F4", Offset = "0xC582F4", VA = "0xC582F4")]
		private void CheckIfMenuRequest()
		{
		}

		[Token(Token = "0x60007CE")]
		[Address(RVA = "0xC58280", Offset = "0xC58280", VA = "0xC58280")]
		private void UpdateAnimator()
		{
		}

		[Token(Token = "0x60007CF")]
		[Address(RVA = "0xC579F0", Offset = "0xC579F0", VA = "0xC579F0")]
		private bool MoveTowardsTragetIfPossible()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D0")]
		[Address(RVA = "0xC58D6C", Offset = "0xC58D6C", VA = "0xC58D6C")]
		private void LookAtTraget()
		{
		}

		[Token(Token = "0x60007D1")]
		[Address(RVA = "0xC58D94", Offset = "0xC58D94", VA = "0xC58D94")]
		private void LookForward()
		{
		}

		[Token(Token = "0x60007D2")]
		[Address(RVA = "0xC57C54", Offset = "0xC57C54", VA = "0xC57C54")]
		private void StandStill()
		{
		}

		[Token(Token = "0x60007D3")]
		[Address(RVA = "0xC576B4", Offset = "0xC576B4", VA = "0xC576B4")]
		private void UpdateValues()
		{
		}

		[Token(Token = "0x60007D4")]
		[Address(RVA = "0xC57720", Offset = "0xC57720", VA = "0xC57720")]
		private void UpdateAgent()
		{
		}

		[Token(Token = "0x60007D5")]
		[Address(RVA = "0xC57E10", Offset = "0xC57E10", VA = "0xC57E10")]
		private bool UpdateBoxing()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D6")]
		[Address(RVA = "0xC57CE0", Offset = "0xC57CE0", VA = "0xC57CE0")]
		private bool UpdateShooting()
		{
			return default(bool);
		}

		[Token(Token = "0x60007D7")]
		[Address(RVA = "0xC58EDC", Offset = "0xC58EDC", VA = "0xC58EDC")]
		private void PointGunAtTarget()
		{
		}

		[Token(Token = "0x60007D8")]
		[Address(RVA = "0xC59324", Offset = "0xC59324", VA = "0xC59324")]
		private void UpdateShootingIntervall()
		{
		}

		[Token(Token = "0x60007D9")]
		[Address(RVA = "0xC57588", Offset = "0xC57588", VA = "0xC57588")]
		private void CheckIfArmed()
		{
		}

		[Token(Token = "0x60007DA")]
		[Address(RVA = "0xC59390", Offset = "0xC59390", VA = "0xC59390")]
		public void OnNPCProvoked()
		{
		}

		[Token(Token = "0x60007DB")]
		[Address(RVA = "0xC593D0", Offset = "0xC593D0", VA = "0xC593D0")]
		public void OnTargetSpotted()
		{
		}

		[Token(Token = "0x60007DC")]
		[Address(RVA = "0xC57EB4", Offset = "0xC57EB4", VA = "0xC57EB4")]
		public bool UpdateSpotting()
		{
			return default(bool);
		}

		[Token(Token = "0x60007DD")]
		[Address(RVA = "0xC55FD8", Offset = "0xC55FD8", VA = "0xC55FD8")]
		public void OnNPCStabbed()
		{
		}

		[Token(Token = "0x60007DE")]
		[Address(RVA = "0xC55EA4", Offset = "0xC55EA4", VA = "0xC55EA4")]
		public void OnNPCShot()
		{
		}

		[Token(Token = "0x60007DF")]
		[Address(RVA = "0xC55E50", Offset = "0xC55E50", VA = "0xC55E50")]
		public void OnNPCShotDamage()
		{
		}

		[Token(Token = "0x60007E0")]
		[Address(RVA = "0xC55FC4", Offset = "0xC55FC4", VA = "0xC55FC4")]
		public void OnNPCKnifeDamage()
		{
		}

		[Token(Token = "0x60007E1")]
		[Address(RVA = "0xC56188", Offset = "0xC56188", VA = "0xC56188")]
		public void OnNPCHit(Collision collision, HumanBodyBones bone)
		{
		}

		[Token(Token = "0x60007E2")]
		[Address(RVA = "0xC55E88", Offset = "0xC55E88", VA = "0xC55E88")]
		public void OnLowerBodyHit()
		{
		}

		[Token(Token = "0x60007E3")]
		[Address(RVA = "0xC59408", Offset = "0xC59408", VA = "0xC59408")]
		public void SpawnBlood(Vector3 point, Transform parent)
		{
		}

		[Token(Token = "0x60007E4")]
		[Address(RVA = "0xC55CA0", Offset = "0xC55CA0", VA = "0xC55CA0")]
		public void OnNPCKilled()
		{
		}

		[Token(Token = "0x60007E5")]
		[Address(RVA = "0xC595C0", Offset = "0xC595C0", VA = "0xC595C0")]
		public void OnGunDisconnect()
		{
		}

		[Token(Token = "0x60007E6")]
		[Address(RVA = "0xC58224", Offset = "0xC58224", VA = "0xC58224")]
		private void UpdateHealth()
		{
		}

		[Token(Token = "0x60007E7")]
		[Address(RVA = "0xC5843C", Offset = "0xC5843C", VA = "0xC5843C")]
		private void CheckIfDead()
		{
		}

		[Token(Token = "0x60007E8")]
		[Address(RVA = "0xC596E8", Offset = "0xC596E8", VA = "0xC596E8")]
		public YueActiveRagdollNPC()
		{
		}
	}
}
namespace UnityTemplateProjects
{
	[Token(Token = "0x2000202")]
	public class SimpleCameraController : MonoBehaviour
	{
		[Token(Token = "0x2000203")]
		private class CameraState
		{
			[Token(Token = "0x4000CBD")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public float yaw;

			[Token(Token = "0x4000CBE")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
			public float pitch;

			[Token(Token = "0x4000CBF")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			public float roll;

			[Token(Token = "0x4000CC0")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
			public float x;

			[Token(Token = "0x4000CC1")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public float y;

			[Token(Token = "0x4000CC2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
			public float z;

			[Token(Token = "0x60007F5")]
			[Address(RVA = "0xC59EE4", Offset = "0xC59EE4", VA = "0xC59EE4")]
			public void SetFromTransform(Transform t)
			{
			}

			[Token(Token = "0x60007F6")]
			[Address(RVA = "0xC5A638", Offset = "0xC5A638", VA = "0xC5A638")]
			public void Translate(Vector3 translation)
			{
			}

			[Token(Token = "0x60007F7")]
			[Address(RVA = "0xC5A6B8", Offset = "0xC5A6B8", VA = "0xC5A6B8")]
			public void LerpTowards(CameraState target, float positionLerpPct, float rotationLerpPct)
			{
			}

			[Token(Token = "0x60007F8")]
			[Address(RVA = "0xC5A740", Offset = "0xC5A740", VA = "0xC5A740")]
			public void UpdateTransform(Transform t)
			{
			}

			[Token(Token = "0x60007F9")]
			[Address(RVA = "0xC5A93C", Offset = "0xC5A93C", VA = "0xC5A93C")]
			public CameraState()
			{
			}
		}

		[Token(Token = "0x4000CAF")]
		private const float k_MouseSensitivityMultiplier = 0.01f;

		[Token(Token = "0x4000CB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private CameraState m_TargetCameraState;

		[Token(Token = "0x4000CB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private CameraState m_InterpolatingCameraState;

		[Token(Token = "0x4000CB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Exponential boost factor on translation, controllable by mouse wheel.")]
		[Header("Movement Settings")]
		public float boost;

		[Token(Token = "0x4000CB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("Time it takes to interpolate camera position 99% of the way to the target.")]
		[Range(0.001f, 1f)]
		public float positionLerpTime;

		[Token(Token = "0x4000CB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Rotation Settings")]
		[Tooltip("Multiplier for the sensitivity of the rotation.")]
		public float mouseSensitivity;

		[Token(Token = "0x4000CB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("X = Change in mouse position.\nY = Multiplicative factor for camera rotation.")]
		public AnimationCurve mouseSensitivityCurve;

		[Token(Token = "0x4000CB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Time it takes to interpolate camera rotation 99% of the way to the target.")]
		[Range(0.001f, 1f)]
		public float rotationLerpTime;

		[Token(Token = "0x4000CB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("Whether or not to invert our Y axis for mouse input to rotation.")]
		public bool invertY;

		[Token(Token = "0x4000CB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private InputAction movementAction;

		[Token(Token = "0x4000CB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputAction verticalMovementAction;

		[Token(Token = "0x4000CBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InputAction lookAction;

		[Token(Token = "0x4000CBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InputAction boostFactorAction;

		[Token(Token = "0x4000CBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool mouseRightButtonPressed;

		[Token(Token = "0x60007E9")]
		[Address(RVA = "0xC5973C", Offset = "0xC5973C", VA = "0xC5973C")]
		private void Start()
		{
		}

		[Token(Token = "0x60007EA")]
		[Address(RVA = "0xC59E90", Offset = "0xC59E90", VA = "0xC59E90")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x60007EB")]
		[Address(RVA = "0xC59F68", Offset = "0xC59F68", VA = "0xC59F68")]
		private Vector3 GetInputTranslationDirection()
		{
			return default(Vector3);
		}

		[Token(Token = "0x60007EC")]
		[Address(RVA = "0xC5A004", Offset = "0xC5A004", VA = "0xC5A004")]
		private void Update()
		{
		}

		[Token(Token = "0x60007ED")]
		[Address(RVA = "0xC5A5D8", Offset = "0xC5A5D8", VA = "0xC5A5D8")]
		private float GetBoostFactor()
		{
			return default(float);
		}

		[Token(Token = "0x60007EE")]
		[Address(RVA = "0xC5A49C", Offset = "0xC5A49C", VA = "0xC5A49C")]
		private Vector2 GetInputLookRotation()
		{
			return default(Vector2);
		}

		[Token(Token = "0x60007EF")]
		[Address(RVA = "0xC5A50C", Offset = "0xC5A50C", VA = "0xC5A50C")]
		private bool IsBoostPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F0")]
		[Address(RVA = "0xC5A23C", Offset = "0xC5A23C", VA = "0xC5A23C")]
		private bool IsEscapePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F1")]
		[Address(RVA = "0xC5A35C", Offset = "0xC5A35C", VA = "0xC5A35C")]
		private bool IsCameraRotationAllowed()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F2")]
		[Address(RVA = "0xC5A29C", Offset = "0xC5A29C", VA = "0xC5A29C")]
		private bool IsRightMouseButtonDown()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F3")]
		[Address(RVA = "0xC5A2FC", Offset = "0xC5A2FC", VA = "0xC5A2FC")]
		private bool IsRightMouseButtonUp()
		{
			return default(bool);
		}

		[Token(Token = "0x60007F4")]
		[Address(RVA = "0xC5A788", Offset = "0xC5A788", VA = "0xC5A788")]
		public SimpleCameraController()
		{
		}
	}
}
namespace VRKeyboard.Utils
{
	[Token(Token = "0x2000204")]
	public class GazeRaycaster : MonoBehaviour
	{
		[Token(Token = "0x2000205")]
		[CompilerGenerated]
		private sealed class <FillCircle>d__6 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000CC8")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000CC9")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000CCA")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public GazeRaycaster <>4__this;

			[Token(Token = "0x4000CCB")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
			public Transform target;

			[Token(Token = "0x4000CCC")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
			private float <timer>5__2;

			[Token(Token = "0x17000041")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000801")]
				[Address(RVA = "0xC5AF38", Offset = "0xC5AF38", VA = "0xC5AF38", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x17000042")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000803")]
				[Address(RVA = "0xC5AF80", Offset = "0xC5AF80", VA = "0xC5AF80", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x60007FE")]
			[Address(RVA = "0xC5ACF4", Offset = "0xC5ACF4", VA = "0xC5ACF4")]
			[DebuggerHidden]
			public <FillCircle>d__6(int <>1__state)
			{
			}

			[Token(Token = "0x60007FF")]
			[Address(RVA = "0xC5AD74", Offset = "0xC5AD74", VA = "0xC5AD74", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x6000800")]
			[Address(RVA = "0xC5AD78", Offset = "0xC5AD78", VA = "0xC5AD78", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000802")]
			[Address(RVA = "0xC5AF40", Offset = "0xC5AF40", VA = "0xC5AF40", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000CC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float delayInSeconds;

		[Token(Token = "0x4000CC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float loadingTime;

		[Token(Token = "0x4000CC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Image circle;

		[Token(Token = "0x4000CC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private string lastTargetName;

		[Token(Token = "0x4000CC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Coroutine gazeControl;

		[Token(Token = "0x60007FA")]
		[Address(RVA = "0xC5A944", Offset = "0xC5A944", VA = "0xC5A944")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x60007FB")]
		[Address(RVA = "0xC5AB98", Offset = "0xC5AB98", VA = "0xC5AB98")]
		[IteratorStateMachine(typeof(<FillCircle>d__6))]
		private IEnumerator FillCircle(Transform target)
		{
			return null;
		}

		[Token(Token = "0x60007FC")]
		[Address(RVA = "0xC5AC0C", Offset = "0xC5AC0C", VA = "0xC5AC0C")]
		private void ResetGazer()
		{
		}

		[Token(Token = "0x60007FD")]
		[Address(RVA = "0xC5AD1C", Offset = "0xC5AD1C", VA = "0xC5AD1C")]
		public GazeRaycaster()
		{
		}
	}
	[Token(Token = "0x2000206")]
	public class KeyboardManager : MonoBehaviour
	{
		[Token(Token = "0x4000CCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("If the character is uppercase at the initialization")]
		[Header("User defined")]
		public bool isUppercase;

		[Token(Token = "0x4000CCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int maxInputLength;

		[Token(Token = "0x4000CCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("UI Elements")]
		public Text inputText;

		[Token(Token = "0x4000CD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Essentials")]
		public Transform keys;

		[Token(Token = "0x4000CD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private Key[] keyList;

		[Token(Token = "0x4000CD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool capslockFlag;

		[Token(Token = "0x17000043")]
		private string Input
		{
			[Token(Token = "0x6000804")]
			[Address(RVA = "0xC5AF88", Offset = "0xC5AF88", VA = "0xC5AF88")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000805")]
			[Address(RVA = "0xC5AFAC", Offset = "0xC5AFAC", VA = "0xC5AFAC")]
			set
			{
			}
		}

		[Token(Token = "0x6000806")]
		[Address(RVA = "0xC5AFD0", Offset = "0xC5AFD0", VA = "0xC5AFD0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000807")]
		[Address(RVA = "0xC5B028", Offset = "0xC5B028", VA = "0xC5B028")]
		private void Start()
		{
		}

		[Token(Token = "0x6000808")]
		[Address(RVA = "0xC5B318", Offset = "0xC5B318", VA = "0xC5B318")]
		public void Backspace()
		{
		}

		[Token(Token = "0x6000809")]
		[Address(RVA = "0xC5B3D8", Offset = "0xC5B3D8", VA = "0xC5B3D8")]
		public void Clear()
		{
		}

		[Token(Token = "0x600080A")]
		[Address(RVA = "0xC5B244", Offset = "0xC5B244", VA = "0xC5B244")]
		public void CapsLock()
		{
		}

		[Token(Token = "0x600080B")]
		[Address(RVA = "0xC5B434", Offset = "0xC5B434", VA = "0xC5B434")]
		public void Shift()
		{
		}

		[Token(Token = "0x600080C")]
		[Address(RVA = "0xC5B4F8", Offset = "0xC5B4F8", VA = "0xC5B4F8")]
		public void GenerateInput(string s)
		{
		}

		[Token(Token = "0x600080D")]
		[Address(RVA = "0xC5B590", Offset = "0xC5B590", VA = "0xC5B590")]
		public KeyboardManager()
		{
		}
	}
	[Token(Token = "0x2000207")]
	public class Alphabet : Key
	{
		[Token(Token = "0x600080E")]
		[Address(RVA = "0xC5B598", Offset = "0xC5B598", VA = "0xC5B598", Slot = "5")]
		public override void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x600080F")]
		[Address(RVA = "0xC5B5FC", Offset = "0xC5B5FC", VA = "0xC5B5FC")]
		public Alphabet()
		{
		}
	}
	[Token(Token = "0x2000208")]
	public class Key : MonoBehaviour
	{
		[Token(Token = "0x2000209")]
		public delegate void OnKeyClickedHandler(string key);

		[Token(Token = "0x4000CD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		protected Text key;

		[Token(Token = "0x14000003")]
		public event OnKeyClickedHandler OnKeyClicked
		{
			[Token(Token = "0x6000810")]
			[Address(RVA = "0xC5B1A8", Offset = "0xC5B1A8", VA = "0xC5B1A8")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000811")]
			[Address(RVA = "0xC5B60C", Offset = "0xC5B60C", VA = "0xC5B60C")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000812")]
		[Address(RVA = "0xC5B6A8", Offset = "0xC5B6A8", VA = "0xC5B6A8", Slot = "4")]
		public virtual void Awake()
		{
		}

		[Token(Token = "0x6000813")]
		[Address(RVA = "0xC5B7AC", Offset = "0xC5B7AC", VA = "0xC5B7AC", Slot = "5")]
		public virtual void CapsLock(bool isUppercase)
		{
		}

		[Token(Token = "0x6000814")]
		[Address(RVA = "0xC5B7B0", Offset = "0xC5B7B0", VA = "0xC5B7B0", Slot = "6")]
		public virtual void ShiftKey()
		{
		}

		[Token(Token = "0x6000815")]
		[Address(RVA = "0xC5B604", Offset = "0xC5B604", VA = "0xC5B604")]
		public Key()
		{
		}
	}
	[Token(Token = "0x200020A")]
	public class Number : Key
	{
		[Token(Token = "0x600081B")]
		[Address(RVA = "0xC5B838", Offset = "0xC5B838", VA = "0xC5B838")]
		public Number()
		{
		}
	}
	[Token(Token = "0x200020B")]
	public class Shift : Key
	{
		[Token(Token = "0x4000CD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private Text subscript;

		[Token(Token = "0x600081C")]
		[Address(RVA = "0xC5B840", Offset = "0xC5B840", VA = "0xC5B840", Slot = "4")]
		public override void Awake()
		{
		}

		[Token(Token = "0x600081D")]
		[Address(RVA = "0xC5B8CC", Offset = "0xC5B8CC", VA = "0xC5B8CC", Slot = "6")]
		public override void ShiftKey()
		{
		}

		[Token(Token = "0x600081E")]
		[Address(RVA = "0xC5B958", Offset = "0xC5B958", VA = "0xC5B958")]
		public Shift()
		{
		}
	}
	[Token(Token = "0x200020C")]
	public class Symbol : Key
	{
		[Token(Token = "0x600081F")]
		[Address(RVA = "0xC5B960", Offset = "0xC5B960", VA = "0xC5B960")]
		public Symbol()
		{
		}
	}
}
namespace UnityStandardAssets.Vehicles.Car
{
	[Token(Token = "0x200020D")]
	public class CarAudio : MonoBehaviour
	{
		[Token(Token = "0x200020E")]
		public enum EngineAudioOptions
		{
			[Token(Token = "0x4000CEA")]
			Simple,
			[Token(Token = "0x4000CEB")]
			FourChannel
		}

		[Token(Token = "0x4000CD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public EngineAudioOptions engineSoundStyle;

		[Token(Token = "0x4000CD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public AudioClip lowAccelClip;

		[Token(Token = "0x4000CD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AudioClip lowDecelClip;

		[Token(Token = "0x4000CD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public AudioClip highAccelClip;

		[Token(Token = "0x4000CDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public AudioClip highDecelClip;

		[Token(Token = "0x4000CDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public float pitchMultiplier;

		[Token(Token = "0x4000CDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		public float lowPitchMin;

		[Token(Token = "0x4000CDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public float lowPitchMax;

		[Token(Token = "0x4000CDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		public float highPitchMultiplier;

		[Token(Token = "0x4000CDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public float maxRolloffDistance;

		[Token(Token = "0x4000CE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		public float dopplerLevel;

		[Token(Token = "0x4000CE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool useDoppler;

		[Token(Token = "0x4000CE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private AudioSource m_LowAccel;

		[Token(Token = "0x4000CE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private AudioSource m_LowDecel;

		[Token(Token = "0x4000CE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private AudioSource m_HighAccel;

		[Token(Token = "0x4000CE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private AudioSource m_HighDecel;

		[Token(Token = "0x4000CE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private bool m_StartedSound;

		[Token(Token = "0x4000CE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private CarController m_CarController;

		[Token(Token = "0x4000CE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private BasicVehicleController m_VehicleController;

		[Token(Token = "0x6000820")]
		[Address(RVA = "0xC5B968", Offset = "0xC5B968", VA = "0xC5B968")]
		private void StartSound()
		{
		}

		[Token(Token = "0x6000821")]
		[Address(RVA = "0xC5BB1C", Offset = "0xC5BB1C", VA = "0xC5BB1C")]
		private void StopSound()
		{
		}

		[Token(Token = "0x6000822")]
		[Address(RVA = "0xC5BBF0", Offset = "0xC5BBF0", VA = "0xC5BBF0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000823")]
		[Address(RVA = "0xC5BA0C", Offset = "0xC5BA0C", VA = "0xC5BA0C")]
		private AudioSource SetUpEngineAudioSource(AudioClip clip)
		{
			return null;
		}

		[Token(Token = "0x6000824")]
		[Address(RVA = "0xC5BF40", Offset = "0xC5BF40", VA = "0xC5BF40")]
		private static float ULerp(float from, float to, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000825")]
		[Address(RVA = "0xC5BF58", Offset = "0xC5BF58", VA = "0xC5BF58")]
		public CarAudio()
		{
		}
	}
	[Token(Token = "0x200020F")]
	internal enum CarDriveType
	{
		[Token(Token = "0x4000CED")]
		FrontWheelDrive,
		[Token(Token = "0x4000CEE")]
		RearWheelDrive,
		[Token(Token = "0x4000CEF")]
		FourWheelDrive
	}
	[Token(Token = "0x2000210")]
	internal enum SpeedType
	{
		[Token(Token = "0x4000CF1")]
		MPH,
		[Token(Token = "0x4000CF2")]
		KPH
	}
	[Token(Token = "0x2000211")]
	public class CarController : MonoBehaviour
	{
		[Token(Token = "0x4000CF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private CarDriveType m_CarDriveType;

		[Token(Token = "0x4000CF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private WheelCollider[] m_WheelColliders;

		[Token(Token = "0x4000CF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private GameObject[] m_WheelMeshes;

		[Token(Token = "0x4000CF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private WheelEffects[] m_WheelEffects;

		[Token(Token = "0x4000CF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private Vector3 m_CentreOfMassOffset;

		[Token(Token = "0x4000CF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float m_MaximumSteerAngle;

		[Token(Token = "0x4000CF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_SteerHelper;

		[Token(Token = "0x4000CFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Range(0f, 1f)]
		[SerializeField]
		private float m_TractionControl;

		[Token(Token = "0x4000CFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float m_FullTorqueOverAllWheels;

		[Token(Token = "0x4000CFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[SerializeField]
		private float m_ReverseTorque;

		[Token(Token = "0x4000CFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private float m_MaxHandbrakeTorque;

		[Token(Token = "0x4000CFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[SerializeField]
		private float m_Downforce;

		[Token(Token = "0x4000CFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private SpeedType m_SpeedType;

		[Token(Token = "0x4000D00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private float m_Topspeed;

		[Token(Token = "0x4000D01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private static int NoOfGears;

		[Token(Token = "0x4000D02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float m_RevRangeBoundary;

		[Token(Token = "0x4000D03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private float m_SlipLimit;

		[Token(Token = "0x4000D04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		private float m_BrakeTorque;

		[Token(Token = "0x4000D05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private Quaternion[] m_WheelMeshLocalRotations;

		[Token(Token = "0x4000D06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 m_Prevpos;

		[Token(Token = "0x4000D07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 m_Pos;

		[Token(Token = "0x4000D08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private float m_SteerAngle;

		[Token(Token = "0x4000D09")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private int m_GearNum;

		[Token(Token = "0x4000D0A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float m_GearFactor;

		[Token(Token = "0x4000D0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float m_OldRotation;

		[Token(Token = "0x4000D0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float m_CurrentTorque;

		[Token(Token = "0x4000D0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Rigidbody m_Rigidbody;

		[Token(Token = "0x4000D0E")]
		private const float k_ReversingThreshold = 0.01f;

		[Token(Token = "0x17000044")]
		public bool Skidding
		{
			[Token(Token = "0x6000826")]
			[Address(RVA = "0xC5BF84", Offset = "0xC5BF84", VA = "0xC5BF84")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000827")]
			[Address(RVA = "0xC5BF8C", Offset = "0xC5BF8C", VA = "0xC5BF8C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000045")]
		public float BrakeInput
		{
			[Token(Token = "0x6000828")]
			[Address(RVA = "0xC5BF98", Offset = "0xC5BF98", VA = "0xC5BF98")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000829")]
			[Address(RVA = "0xC5BFA0", Offset = "0xC5BFA0", VA = "0xC5BFA0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x17000046")]
		public float CurrentSteerAngle
		{
			[Token(Token = "0x600082A")]
			[Address(RVA = "0xC5BFA8", Offset = "0xC5BFA8", VA = "0xC5BFA8")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000047")]
		public float CurrentSpeed
		{
			[Token(Token = "0x600082B")]
			[Address(RVA = "0xC5BFB0", Offset = "0xC5BFB0", VA = "0xC5BFB0")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000048")]
		public float MaxSpeed
		{
			[Token(Token = "0x600082C")]
			[Address(RVA = "0xC5C048", Offset = "0xC5C048", VA = "0xC5C048")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000049")]
		public float Revs
		{
			[Token(Token = "0x600082D")]
			[Address(RVA = "0xC5C050", Offset = "0xC5C050", VA = "0xC5C050")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x600082E")]
			[Address(RVA = "0xC5C058", Offset = "0xC5C058", VA = "0xC5C058")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700004A")]
		public float AccelInput
		{
			[Token(Token = "0x600082F")]
			[Address(RVA = "0xC5C060", Offset = "0xC5C060", VA = "0xC5C060")]
			[CompilerGenerated]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000830")]
			[Address(RVA = "0xC5C068", Offset = "0xC5C068", VA = "0xC5C068")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000831")]
		[Address(RVA = "0xC5C070", Offset = "0xC5C070", VA = "0xC5C070")]
		private void Start()
		{
		}

		[Token(Token = "0x6000832")]
		[Address(RVA = "0xC5C1B8", Offset = "0xC5C1B8", VA = "0xC5C1B8")]
		private void GearChanging()
		{
		}

		[Token(Token = "0x6000833")]
		[Address(RVA = "0xC5C2A4", Offset = "0xC5C2A4", VA = "0xC5C2A4")]
		private static float CurveFactor(float factor)
		{
			return default(float);
		}

		[Token(Token = "0x6000834")]
		[Address(RVA = "0xC5C2B8", Offset = "0xC5C2B8", VA = "0xC5C2B8")]
		private static float ULerp(float from, float to, float value)
		{
			return default(float);
		}

		[Token(Token = "0x6000835")]
		[Address(RVA = "0xC5C2D0", Offset = "0xC5C2D0", VA = "0xC5C2D0")]
		private void CalculateGearFactor()
		{
		}

		[Token(Token = "0x6000836")]
		[Address(RVA = "0xC5C3D0", Offset = "0xC5C3D0", VA = "0xC5C3D0")]
		private void CalculateRevs()
		{
		}

		[Token(Token = "0x6000837")]
		[Address(RVA = "0xC5C48C", Offset = "0xC5C48C", VA = "0xC5C48C")]
		public void Move(float steering, float accel, float footbrake, float handbrake)
		{
		}

		[Token(Token = "0x6000838")]
		[Address(RVA = "0xC5CC0C", Offset = "0xC5CC0C", VA = "0xC5CC0C")]
		private void CapSpeed()
		{
		}

		[Token(Token = "0x6000839")]
		[Address(RVA = "0xC5C8E4", Offset = "0xC5C8E4", VA = "0xC5C8E4")]
		private void ApplyDrive(float accel, float footbrake)
		{
		}

		[Token(Token = "0x600083A")]
		[Address(RVA = "0xC5C6DC", Offset = "0xC5C6DC", VA = "0xC5C6DC")]
		private void SteerHelper()
		{
		}

		[Token(Token = "0x600083B")]
		[Address(RVA = "0xC5CDD0", Offset = "0xC5CDD0", VA = "0xC5CDD0")]
		private void AddDownForce()
		{
		}

		[Token(Token = "0x600083C")]
		[Address(RVA = "0xC5CF08", Offset = "0xC5CF08", VA = "0xC5CF08")]
		private void CheckForWheelSpin()
		{
		}

		[Token(Token = "0x600083D")]
		[Address(RVA = "0xC5D05C", Offset = "0xC5D05C", VA = "0xC5D05C")]
		private void TractionControl()
		{
		}

		[Token(Token = "0x600083E")]
		[Address(RVA = "0xC5D544", Offset = "0xC5D544", VA = "0xC5D544")]
		private void AdjustTorque(float forwardSlip)
		{
		}

		[Token(Token = "0x600083F")]
		[Address(RVA = "0xC5D3D8", Offset = "0xC5D3D8", VA = "0xC5D3D8")]
		private bool AnySkidSoundPlaying()
		{
			return default(bool);
		}

		[Token(Token = "0x6000840")]
		[Address(RVA = "0xC5D594", Offset = "0xC5D594", VA = "0xC5D594")]
		public CarController()
		{
		}
	}
	[Token(Token = "0x2000212")]
	[RequireComponent(typeof(AudioSource))]
	public class WheelEffects : MonoBehaviour
	{
		[Token(Token = "0x2000213")]
		[CompilerGenerated]
		private sealed class <StartSkidTrail>d__18 : IEnumerator<object>, IEnumerator, IDisposable
		{
			[Token(Token = "0x4000D1B")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			private int <>1__state;

			[Token(Token = "0x4000D1C")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
			private object <>2__current;

			[Token(Token = "0x4000D1D")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
			public WheelEffects <>4__this;

			[Token(Token = "0x1700004D")]
			private object System.Collections.Generic.IEnumerator<System.Object>.Current
			{
				[Token(Token = "0x6000850")]
				[Address(RVA = "0xC5DB08", Offset = "0xC5DB08", VA = "0xC5DB08", Slot = "4")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x1700004E")]
			private object System.Collections.IEnumerator.Current
			{
				[Token(Token = "0x6000852")]
				[Address(RVA = "0xC5DB50", Offset = "0xC5DB50", VA = "0xC5DB50", Slot = "7")]
				[DebuggerHidden]
				get
				{
					return null;
				}
			}

			[Token(Token = "0x600084D")]
			[Address(RVA = "0xC5D940", Offset = "0xC5D940", VA = "0xC5D940")]
			[DebuggerHidden]
			public <StartSkidTrail>d__18(int <>1__state)
			{
			}

			[Token(Token = "0x600084E")]
			[Address(RVA = "0xC5D970", Offset = "0xC5D970", VA = "0xC5D970", Slot = "5")]
			[DebuggerHidden]
			private void System.IDisposable.Dispose()
			{
			}

			[Token(Token = "0x600084F")]
			[Address(RVA = "0xC5D974", Offset = "0xC5D974", VA = "0xC5D974", Slot = "6")]
			private bool MoveNext()
			{
				return default(bool);
			}

			[Token(Token = "0x6000851")]
			[Address(RVA = "0xC5DB10", Offset = "0xC5DB10", VA = "0xC5DB10", Slot = "8")]
			[DebuggerHidden]
			private void System.Collections.IEnumerator.Reset()
			{
			}
		}

		[Token(Token = "0x4000D13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform SkidTrailPrefab;

		[Token(Token = "0x4000D14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static Transform skidTrailsDetachedParent;

		[Token(Token = "0x4000D15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public ParticleSystem skidParticles;

		[Token(Token = "0x4000D18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private AudioSource m_AudioSource;

		[Token(Token = "0x4000D19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Transform m_SkidTrail;

		[Token(Token = "0x4000D1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private WheelCollider m_WheelCollider;

		[Token(Token = "0x1700004B")]
		public bool skidding
		{
			[Token(Token = "0x6000842")]
			[Address(RVA = "0xC5D6A4", Offset = "0xC5D6A4", VA = "0xC5D6A4")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000843")]
			[Address(RVA = "0xC5D6AC", Offset = "0xC5D6AC", VA = "0xC5D6AC")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700004C")]
		public bool PlayingAudio
		{
			[Token(Token = "0x6000844")]
			[Address(RVA = "0xC5D6B8", Offset = "0xC5D6B8", VA = "0xC5D6B8")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000845")]
			[Address(RVA = "0xC5D6C0", Offset = "0xC5D6C0", VA = "0xC5D6C0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000846")]
		[Address(RVA = "0xC5D6CC", Offset = "0xC5D6CC", VA = "0xC5D6CC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000847")]
		[Address(RVA = "0xC5D2C8", Offset = "0xC5D2C8", VA = "0xC5D2C8")]
		public void EmitTyreSmoke()
		{
		}

		[Token(Token = "0x6000848")]
		[Address(RVA = "0xC5D430", Offset = "0xC5D430", VA = "0xC5D430")]
		public void PlayAudio()
		{
		}

		[Token(Token = "0x6000849")]
		[Address(RVA = "0xC5D45C", Offset = "0xC5D45C", VA = "0xC5D45C")]
		public void StopAudio()
		{
		}

		[Token(Token = "0x600084A")]
		[Address(RVA = "0xC5D8D8", Offset = "0xC5D8D8", VA = "0xC5D8D8")]
		[IteratorStateMachine(typeof(<StartSkidTrail>d__18))]
		public IEnumerator StartSkidTrail()
		{
			return null;
		}

		[Token(Token = "0x600084B")]
		[Address(RVA = "0xC5D484", Offset = "0xC5D484", VA = "0xC5D484")]
		public void EndSkidTrail()
		{
		}

		[Token(Token = "0x600084C")]
		[Address(RVA = "0xC5D968", Offset = "0xC5D968", VA = "0xC5D968")]
		public WheelEffects()
		{
		}
	}
}
namespace StarterAssets
{
	[Token(Token = "0x2000214")]
	public class StarterAssetsInputs : MonoBehaviour
	{
		[Token(Token = "0x4000D1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Character Input Values")]
		public Vector2 move;

		[Token(Token = "0x4000D1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Vector2 look;

		[Token(Token = "0x4000D20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public bool jump;

		[Token(Token = "0x4000D21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		public bool sprint;

		[Token(Token = "0x4000D22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[Header("Movement Settings")]
		public bool analogMovement;

		[Token(Token = "0x4000D23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2B")]
		[Header("Mouse Cursor Settings")]
		public bool cursorLocked;

		[Token(Token = "0x4000D24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public bool cursorInputForLook;

		[Token(Token = "0x6000853")]
		[Address(RVA = "0xC5DB58", Offset = "0xC5DB58", VA = "0xC5DB58")]
		public void OnMove(InputValue value)
		{
		}

		[Token(Token = "0x6000854")]
		[Address(RVA = "0xC5DBB4", Offset = "0xC5DBB4", VA = "0xC5DBB4")]
		public void OnLook(InputValue value)
		{
		}

		[Token(Token = "0x6000855")]
		[Address(RVA = "0xC5DC18", Offset = "0xC5DC18", VA = "0xC5DC18")]
		public void OnJump(InputValue value)
		{
		}

		[Token(Token = "0x6000856")]
		[Address(RVA = "0xC5DC44", Offset = "0xC5DC44", VA = "0xC5DC44")]
		public void OnSprint(InputValue value)
		{
		}

		[Token(Token = "0x6000857")]
		[Address(RVA = "0xC5DC70", Offset = "0xC5DC70", VA = "0xC5DC70")]
		public void MoveInput(Vector2 newMoveDirection)
		{
		}

		[Token(Token = "0x6000858")]
		[Address(RVA = "0xC5DC78", Offset = "0xC5DC78", VA = "0xC5DC78")]
		public void LookInput(Vector2 newLookDirection)
		{
		}

		[Token(Token = "0x6000859")]
		[Address(RVA = "0xC5DC80", Offset = "0xC5DC80", VA = "0xC5DC80")]
		public void JumpInput(bool newJumpState)
		{
		}

		[Token(Token = "0x600085A")]
		[Address(RVA = "0xC5DC8C", Offset = "0xC5DC8C", VA = "0xC5DC8C")]
		public void SprintInput(bool newSprintState)
		{
		}

		[Token(Token = "0x600085B")]
		[Address(RVA = "0xC5DC98", Offset = "0xC5DC98", VA = "0xC5DC98")]
		private void OnApplicationFocus(bool hasFocus)
		{
		}

		[Token(Token = "0x600085C")]
		[Address(RVA = "0xC5DCA4", Offset = "0xC5DCA4", VA = "0xC5DCA4")]
		private void SetCursorState(bool newState)
		{
		}

		[Token(Token = "0x600085D")]
		[Address(RVA = "0xC5DCB0", Offset = "0xC5DCB0", VA = "0xC5DCB0")]
		public StarterAssetsInputs()
		{
		}
	}
	[Token(Token = "0x2000215")]
	public class UICanvasControllerInput : MonoBehaviour
	{
		[Token(Token = "0x4000D25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Output")]
		public StarterAssetsInputs starterAssetsInputs;

		[Token(Token = "0x600085E")]
		[Address(RVA = "0xC5DCC0", Offset = "0xC5DCC0", VA = "0xC5DCC0")]
		public void VirtualMoveInput(Vector2 virtualMoveDirection)
		{
		}

		[Token(Token = "0x600085F")]
		[Address(RVA = "0xC5DCDC", Offset = "0xC5DCDC", VA = "0xC5DCDC")]
		public void VirtualLookInput(Vector2 virtualLookDirection)
		{
		}

		[Token(Token = "0x6000860")]
		[Address(RVA = "0xC5DCF8", Offset = "0xC5DCF8", VA = "0xC5DCF8")]
		public void VirtualJumpInput(bool virtualJumpState)
		{
		}

		[Token(Token = "0x6000861")]
		[Address(RVA = "0xC5DD18", Offset = "0xC5DD18", VA = "0xC5DD18")]
		public void VirtualSprintInput(bool virtualSprintState)
		{
		}

		[Token(Token = "0x6000862")]
		[Address(RVA = "0xC5DD38", Offset = "0xC5DD38", VA = "0xC5DD38")]
		public UICanvasControllerInput()
		{
		}
	}
	[Token(Token = "0x2000216")]
	[RequireComponent(typeof(PlayerInput))]
	[RequireComponent(typeof(CharacterController))]
	public class ThirdPersonController : MonoBehaviour
	{
		[Token(Token = "0x4000D26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Player")]
		[Tooltip("Move speed of the character in m/s")]
		public float MoveSpeed;

		[Token(Token = "0x4000D27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[Tooltip("Sprint speed of the character in m/s")]
		public float SprintSpeed;

		[Token(Token = "0x4000D28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Tooltip("How fast the character turns to face movement direction")]
		[Range(0f, 0.3f)]
		public float RotationSmoothTime;

		[Token(Token = "0x4000D29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[Tooltip("Acceleration and deceleration")]
		public float SpeedChangeRate;

		[Token(Token = "0x4000D2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Space(10f)]
		[Tooltip("The height the player can jump")]
		public float JumpHeight;

		[Token(Token = "0x4000D2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("The character uses its own gravity value. The engine default is -9.81f")]
		public float Gravity;

		[Token(Token = "0x4000D2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Space(10f)]
		[Tooltip("Time required to pass before being able to jump again. Set to 0f to instantly jump again")]
		public float JumpTimeout;

		[Token(Token = "0x4000D2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Time required to pass before entering the fall state. Useful for walking down stairs")]
		public float FallTimeout;

		[Token(Token = "0x4000D2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Player Grounded")]
		[Tooltip("If the character is grounded or not. Not part of the CharacterController built in grounded check")]
		public bool Grounded;

		[Token(Token = "0x4000D2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[Tooltip("Useful for rough ground")]
		public float GroundedOffset;

		[Token(Token = "0x4000D30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("The radius of the grounded check. Should match the radius of the CharacterController")]
		public float GroundedRadius;

		[Token(Token = "0x4000D31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip("What layers the character uses as ground")]
		public LayerMask GroundLayers;

		[Token(Token = "0x4000D32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Cinemachine")]
		[Tooltip("The follow target set in the Cinemachine Virtual Camera that the camera will follow")]
		public GameObject CinemachineCameraTarget;

		[Token(Token = "0x4000D33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("How far in degrees can you move the camera up")]
		public float TopClamp;

		[Token(Token = "0x4000D34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		[Tooltip("How far in degrees can you move the camera down")]
		public float BottomClamp;

		[Token(Token = "0x4000D35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("Additional degress to override the camera. Useful for fine tuning camera position when locked")]
		public float CameraAngleOverride;

		[Token(Token = "0x4000D36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("For locking the camera position on all axis")]
		public bool LockCameraPosition;

		[Token(Token = "0x4000D37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private float _cinemachineTargetYaw;

		[Token(Token = "0x4000D38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private float _cinemachineTargetPitch;

		[Token(Token = "0x4000D39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _speed;

		[Token(Token = "0x4000D3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private float _animationBlend;

		[Token(Token = "0x4000D3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _targetRotation;

		[Token(Token = "0x4000D3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		private float _rotationVelocity;

		[Token(Token = "0x4000D3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private float _verticalVelocity;

		[Token(Token = "0x4000D3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		private float _terminalVelocity;

		[Token(Token = "0x4000D3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private float _jumpTimeoutDelta;

		[Token(Token = "0x4000D40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		private float _fallTimeoutDelta;

		[Token(Token = "0x4000D41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		private int _animIDSpeed;

		[Token(Token = "0x4000D42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private int _animIDGrounded;

		[Token(Token = "0x4000D43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		private int _animIDJump;

		[Token(Token = "0x4000D44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		private int _animIDFreeFall;

		[Token(Token = "0x4000D45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		private int _animIDMotionSpeed;

		[Token(Token = "0x4000D46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private Animator _animator;

		[Token(Token = "0x4000D47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private CharacterController _controller;

		[Token(Token = "0x4000D48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private StarterAssetsInputs _input;

		[Token(Token = "0x4000D49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private GameObject _mainCamera;

		[Token(Token = "0x4000D4A")]
		private const float _threshold = 0.01f;

		[Token(Token = "0x4000D4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool _hasAnimator;

		[Token(Token = "0x6000863")]
		[Address(RVA = "0xC5DD40", Offset = "0xC5DD40", VA = "0xC5DD40")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000864")]
		[Address(RVA = "0xC5DDCC", Offset = "0xC5DDCC", VA = "0xC5DDCC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000865")]
		[Address(RVA = "0xC5DF74", Offset = "0xC5DF74", VA = "0xC5DF74")]
		private void Update()
		{
		}

		[Token(Token = "0x6000866")]
		[Address(RVA = "0xC5E8C4", Offset = "0xC5E8C4", VA = "0xC5E8C4")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000867")]
		[Address(RVA = "0xC5DE84", Offset = "0xC5DE84", VA = "0xC5DE84")]
		private void AssignAnimationIDs()
		{
		}

		[Token(Token = "0x6000868")]
		[Address(RVA = "0xC5E144", Offset = "0xC5E144", VA = "0xC5E144")]
		private void GroundedCheck()
		{
		}

		[Token(Token = "0x6000869")]
		[Address(RVA = "0xC5E8C8", Offset = "0xC5E8C8", VA = "0xC5E8C8")]
		private void CameraRotation()
		{
		}

		[Token(Token = "0x600086A")]
		[Address(RVA = "0xC5E230", Offset = "0xC5E230", VA = "0xC5E230")]
		private void Move()
		{
		}

		[Token(Token = "0x600086B")]
		[Address(RVA = "0xC5DFE0", Offset = "0xC5DFE0", VA = "0xC5DFE0")]
		private void JumpAndGravity()
		{
		}

		[Token(Token = "0x600086C")]
		[Address(RVA = "0xC5EA1C", Offset = "0xC5EA1C", VA = "0xC5EA1C")]
		private static float ClampAngle(float lfAngle, float lfMin, float lfMax)
		{
			return default(float);
		}

		[Token(Token = "0x600086D")]
		[Address(RVA = "0xC5EA58", Offset = "0xC5EA58", VA = "0xC5EA58")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x600086E")]
		[Address(RVA = "0xC5EB0C", Offset = "0xC5EB0C", VA = "0xC5EB0C")]
		public ThirdPersonController()
		{
		}
	}
}
namespace YueScripting
{
	[Token(Token = "0x2000217")]
	public class YuePhysicalJoystickNode : MonoBehaviour
	{
		[Token(Token = "0x4000D4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector sensorValueX;

		[Token(Token = "0x4000D4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector sensorValueY;

		[Token(Token = "0x4000D4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Dependencies")]
		public YuePhysicalJoystick selectedDevice;

		[Token(Token = "0x4000D4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YuePhysicalJoystick[] allDevices;

		[Token(Token = "0x4000D50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x4000D51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text xtext;

		[Token(Token = "0x4000D52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text ytext;

		[Token(Token = "0x600086F")]
		[Address(RVA = "0xC5EB54", Offset = "0xC5EB54", VA = "0xC5EB54")]
		private void Start()
		{
		}

		[Token(Token = "0x6000870")]
		[Address(RVA = "0xC5EE78", Offset = "0xC5EE78", VA = "0xC5EE78")]
		private void Update()
		{
		}

		[Token(Token = "0x6000871")]
		[Address(RVA = "0xC5EBD8", Offset = "0xC5EBD8", VA = "0xC5EBD8")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x6000872")]
		[Address(RVA = "0xC5EDB8", Offset = "0xC5EDB8", VA = "0xC5EDB8")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x6000873")]
		[Address(RVA = "0xC5EFC0", Offset = "0xC5EFC0", VA = "0xC5EFC0")]
		public YuePhysicalJoystickNode()
		{
		}
	}
	[Token(Token = "0x2000218")]
	public class SimpleVectorer : MonoBehaviour
	{
		[Token(Token = "0x4000D53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ConfigurableJoint joint;

		[Token(Token = "0x4000D54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private float inputX;

		[Token(Token = "0x4000D55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float inputY;

		[Token(Token = "0x4000D56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private float grabInput;

		[Token(Token = "0x4000D57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float maxValue;

		[Token(Token = "0x4000D58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public float nodeInputX;

		[Token(Token = "0x4000D59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float nodeInputY;

		[Token(Token = "0x4000D5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float defaulMaxValue;

		[Token(Token = "0x6000874")]
		[Address(RVA = "0xC5EFC8", Offset = "0xC5EFC8", VA = "0xC5EFC8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000875")]
		[Address(RVA = "0xC5EFD4", Offset = "0xC5EFD4", VA = "0xC5EFD4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000876")]
		[Address(RVA = "0xC5F1CC", Offset = "0xC5F1CC", VA = "0xC5F1CC")]
		public void ResetMaxValue()
		{
		}

		[Token(Token = "0x6000877")]
		[Address(RVA = "0xC5F1D8", Offset = "0xC5F1D8", VA = "0xC5F1D8")]
		public SimpleVectorer()
		{
		}
	}
	[Token(Token = "0x2000219")]
	public class YueActuatorNode : MonoBehaviour
	{
		[Token(Token = "0x4000D5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector input;

		[Token(Token = "0x4000D5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Dependencies")]
		public SimpleActuator selectedDevice;

		[Token(Token = "0x4000D5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public SimpleActuator[] allDevices;

		[Token(Token = "0x4000D5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x6000878")]
		[Address(RVA = "0xC5F1E8", Offset = "0xC5F1E8", VA = "0xC5F1E8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000879")]
		[Address(RVA = "0xC5F50C", Offset = "0xC5F50C", VA = "0xC5F50C")]
		private void Update()
		{
		}

		[Token(Token = "0x600087A")]
		[Address(RVA = "0xC5F26C", Offset = "0xC5F26C", VA = "0xC5F26C")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x600087B")]
		[Address(RVA = "0xC5F44C", Offset = "0xC5F44C", VA = "0xC5F44C")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x600087C")]
		[Address(RVA = "0xC5F5AC", Offset = "0xC5F5AC", VA = "0xC5F5AC")]
		public YueActuatorNode()
		{
		}
	}
	[Token(Token = "0x200021A")]
	public class YueAndGate : MonoBehaviour
	{
		[Token(Token = "0x4000D5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector firstCondition;

		[Token(Token = "0x4000D60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector secondCondition;

		[Token(Token = "0x4000D61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector resultOutput;

		[Token(Token = "0x600087D")]
		[Address(RVA = "0xC5F5B4", Offset = "0xC5F5B4", VA = "0xC5F5B4")]
		private void Update()
		{
		}

		[Token(Token = "0x600087E")]
		[Address(RVA = "0xC5F658", Offset = "0xC5F658", VA = "0xC5F658")]
		public YueAndGate()
		{
		}
	}
	[Token(Token = "0x200021B")]
	public class YueBooleanValue : MonoBehaviour
	{
		[Token(Token = "0x4000D62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public bool bValue;

		[Token(Token = "0x4000D63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Dependencies")]
		public Text valueText;

		[Token(Token = "0x4000D64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector resultOutput;

		[Token(Token = "0x600087F")]
		[Address(RVA = "0xC5F660", Offset = "0xC5F660", VA = "0xC5F660")]
		private void Start()
		{
		}

		[Token(Token = "0x6000880")]
		[Address(RVA = "0xC5F6E4", Offset = "0xC5F6E4", VA = "0xC5F6E4")]
		private void Update()
		{
		}

		[Token(Token = "0x6000881")]
		[Address(RVA = "0xC5F664", Offset = "0xC5F664", VA = "0xC5F664")]
		private void UpdateUI()
		{
		}

		[Token(Token = "0x6000882")]
		[Address(RVA = "0xC5F738", Offset = "0xC5F738", VA = "0xC5F738")]
		public void InvertValue()
		{
		}

		[Token(Token = "0x6000883")]
		[Address(RVA = "0xC5F748", Offset = "0xC5F748", VA = "0xC5F748")]
		public YueBooleanValue()
		{
		}
	}
	[Token(Token = "0x200021C")]
	public class YueBuilderExposible : MonoBehaviour
	{
		[Token(Token = "0x4000D65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string exposedName;

		[Token(Token = "0x4000D66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NodeConnectorMode mode;

		[Token(Token = "0x4000D67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<float> values;

		[Token(Token = "0x6000884")]
		[Address(RVA = "0xC60750", Offset = "0xC60750", VA = "0xC60750")]
		public void SetValue(float val)
		{
		}

		[Token(Token = "0x6000885")]
		[Address(RVA = "0xC607B4", Offset = "0xC607B4", VA = "0xC607B4")]
		public float GetValue()
		{
			return default(float);
		}

		[Token(Token = "0x6000886")]
		[Address(RVA = "0xC60808", Offset = "0xC60808", VA = "0xC60808")]
		public void SetValues(int index, float value)
		{
		}

		[Token(Token = "0x6000887")]
		[Address(RVA = "0xC60870", Offset = "0xC60870", VA = "0xC60870")]
		public List<float> GetValues()
		{
			return null;
		}

		[Token(Token = "0x6000888")]
		[Address(RVA = "0xC60878", Offset = "0xC60878", VA = "0xC60878")]
		public float GetValueByIndex(int index)
		{
			return default(float);
		}

		[Token(Token = "0x6000889")]
		[Address(RVA = "0xC608D0", Offset = "0xC608D0", VA = "0xC608D0")]
		private void Start()
		{
		}

		[Token(Token = "0x600088A")]
		[Address(RVA = "0xC60988", Offset = "0xC60988", VA = "0xC60988")]
		public YueBuilderExposible()
		{
		}
	}
	[Token(Token = "0x200021D")]
	public class YueBuilderGraph : MonoBehaviour
	{
		[Token(Token = "0x4000D68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Config")]
		public float input;

		[Token(Token = "0x4000D69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public int points;

		[Token(Token = "0x4000D6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float height;

		[Token(Token = "0x4000D6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float width;

		[Token(Token = "0x4000D6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float scale;

		[Token(Token = "0x4000D6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		public float updateInterval;

		[Token(Token = "0x4000D6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Dependencies")]
		public YueNodeConnector connector;

		[Token(Token = "0x4000D6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Transform root;

		[Token(Token = "0x4000D70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Text minText;

		[Token(Token = "0x4000D71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text maxText;

		[Token(Token = "0x4000D72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private List<float> values;

		[Token(Token = "0x4000D73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private float minValue;

		[Token(Token = "0x4000D74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private float maxValue;

		[Token(Token = "0x4000D75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public LineRenderer lineRenderer;

		[Token(Token = "0x4000D76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float counter;

		[Token(Token = "0x600088B")]
		[Address(RVA = "0xC60990", Offset = "0xC60990", VA = "0xC60990")]
		private void Start()
		{
		}

		[Token(Token = "0x600088C")]
		[Address(RVA = "0xC60A04", Offset = "0xC60A04", VA = "0xC60A04")]
		private void Update()
		{
		}

		[Token(Token = "0x600088D")]
		[Address(RVA = "0xC60A54", Offset = "0xC60A54", VA = "0xC60A54")]
		private void UIUpdate()
		{
		}

		[Token(Token = "0x600088E")]
		[Address(RVA = "0xC60E74", Offset = "0xC60E74", VA = "0xC60E74")]
		public YueBuilderGraph()
		{
		}
	}
	[Token(Token = "0x200021E")]
	public class YueClampNode : MonoBehaviour
	{
		[Token(Token = "0x4000D77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector valueNode;

		[Token(Token = "0x4000D78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector minNode;

		[Token(Token = "0x4000D79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector maxNode;

		[Token(Token = "0x4000D7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector outputNode;

		[Token(Token = "0x600088F")]
		[Address(RVA = "0xC60E90", Offset = "0xC60E90", VA = "0xC60E90")]
		private void Update()
		{
		}

		[Token(Token = "0x6000890")]
		[Address(RVA = "0xC60F48", Offset = "0xC60F48", VA = "0xC60F48")]
		public YueClampNode()
		{
		}
	}
	[Token(Token = "0x200021F")]
	public enum YueComparatorMode
	{
		[Token(Token = "0x4000D7C")]
		Greater,
		[Token(Token = "0x4000D7D")]
		Less,
		[Token(Token = "0x4000D7E")]
		GreaterEqual,
		[Token(Token = "0x4000D7F")]
		LessEqual,
		[Token(Token = "0x4000D80")]
		Equal
	}
	[Token(Token = "0x2000220")]
	public class YueComparator : MonoBehaviour
	{
		[Token(Token = "0x4000D81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector valueAConnector;

		[Token(Token = "0x4000D82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector valueBConnector;

		[Token(Token = "0x4000D83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector outputConnector;

		[Token(Token = "0x4000D84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueComparatorMode comparatorMode;

		[Token(Token = "0x4000D85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Text comparatorModeText;

		[Token(Token = "0x4000D86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int modeIndex;

		[Token(Token = "0x6000891")]
		[Address(RVA = "0xC60F50", Offset = "0xC60F50", VA = "0xC60F50")]
		private void Start()
		{
		}

		[Token(Token = "0x6000892")]
		[Address(RVA = "0xC60FDC", Offset = "0xC60FDC", VA = "0xC60FDC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000893")]
		[Address(RVA = "0xC611A8", Offset = "0xC611A8", VA = "0xC611A8")]
		public void ChangeMode(bool forward)
		{
		}

		[Token(Token = "0x6000894")]
		[Address(RVA = "0xC61268", Offset = "0xC61268", VA = "0xC61268")]
		public YueComparator()
		{
		}
	}
	[Token(Token = "0x2000221")]
	public class YueConnectionVisual : MonoBehaviour
	{
		[Token(Token = "0x4000D87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform start;

		[Token(Token = "0x4000D88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform end;

		[Token(Token = "0x4000D89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public AnimationCurve curve;

		[Token(Token = "0x4000D8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public int points;

		[Token(Token = "0x4000D8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		public float updateInterval;

		[Token(Token = "0x4000D8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private LineRenderer lineRenderer;

		[Token(Token = "0x4000D8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float counter;

		[Token(Token = "0x6000895")]
		[Address(RVA = "0xC61270", Offset = "0xC61270", VA = "0xC61270")]
		private void Start()
		{
		}

		[Token(Token = "0x6000896")]
		[Address(RVA = "0xC612C0", Offset = "0xC612C0", VA = "0xC612C0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000897")]
		[Address(RVA = "0xC61314", Offset = "0xC61314", VA = "0xC61314")]
		public void UpdateUI()
		{
		}

		[Token(Token = "0x6000898")]
		[Address(RVA = "0xC6162C", Offset = "0xC6162C", VA = "0xC6162C")]
		public YueConnectionVisual()
		{
		}
	}
	[Token(Token = "0x2000222")]
	public class YueDisplayNode : MonoBehaviour
	{
		[Token(Token = "0x4000D8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector input;

		[Token(Token = "0x4000D8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text valText;

		[Token(Token = "0x6000899")]
		[Address(RVA = "0xC61650", Offset = "0xC61650", VA = "0xC61650")]
		private void Update()
		{
		}

		[Token(Token = "0x600089A")]
		[Address(RVA = "0xC617C0", Offset = "0xC617C0", VA = "0xC617C0")]
		public YueDisplayNode()
		{
		}
	}
	[Token(Token = "0x2000223")]
	public class YueDistanceSensor : MonoBehaviour
	{
		[Token(Token = "0x4000D90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public LineRenderer laser;

		[Token(Token = "0x4000D91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public LayerMask layer;

		[Token(Token = "0x4000D92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float sensorValue;

		[Token(Token = "0x600089B")]
		[Address(RVA = "0xC617C8", Offset = "0xC617C8", VA = "0xC617C8")]
		private void Update()
		{
		}

		[Token(Token = "0x600089C")]
		[Address(RVA = "0xC6199C", Offset = "0xC6199C", VA = "0xC6199C")]
		public YueDistanceSensor()
		{
		}
	}
	[Token(Token = "0x2000224")]
	public class YueDistanceSensorNode : MonoBehaviour
	{
		[Token(Token = "0x4000D93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector sensorValue;

		[Token(Token = "0x4000D94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Dependencies")]
		public YueDistanceSensor selectedDevice;

		[Token(Token = "0x4000D95")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueDistanceSensor[] allDevices;

		[Token(Token = "0x4000D96")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x600089D")]
		[Address(RVA = "0xC619A4", Offset = "0xC619A4", VA = "0xC619A4")]
		private void Start()
		{
		}

		[Token(Token = "0x600089E")]
		[Address(RVA = "0xC61CC8", Offset = "0xC61CC8", VA = "0xC61CC8")]
		private void Update()
		{
		}

		[Token(Token = "0x600089F")]
		[Address(RVA = "0xC61A28", Offset = "0xC61A28", VA = "0xC61A28")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x60008A0")]
		[Address(RVA = "0xC61C08", Offset = "0xC61C08", VA = "0xC61C08")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x60008A1")]
		[Address(RVA = "0xC61D70", Offset = "0xC61D70", VA = "0xC61D70")]
		public YueDistanceSensorNode()
		{
		}
	}
	[Token(Token = "0x2000225")]
	public class YueExposibleNode : MonoBehaviour
	{
		[Token(Token = "0x4000D97")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Dependencies")]
		public Transform startPos;

		[Token(Token = "0x4000D98")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Transform parent;

		[Token(Token = "0x4000D99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public GameObject connectorPrefab;

		[Token(Token = "0x4000D9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public NodeConnectorMode mode;

		[Token(Token = "0x4000D9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x4000D9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public YueBuilderExposible exposible;

		[Token(Token = "0x4000D9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public List<YueNodeConnector> connectors;

		[Token(Token = "0x4000D9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public List<YueBuilderExposible> exposibleList;

		[Token(Token = "0x60008A2")]
		[Address(RVA = "0xC61D78", Offset = "0xC61D78", VA = "0xC61D78")]
		private void Start()
		{
		}

		[Token(Token = "0x60008A3")]
		[Address(RVA = "0xC62270", Offset = "0xC62270", VA = "0xC62270")]
		private void Update()
		{
		}

		[Token(Token = "0x60008A4")]
		[Address(RVA = "0xC623C0", Offset = "0xC623C0", VA = "0xC623C0")]
		public YueNodeConnector GetConnector()
		{
			return null;
		}

		[Token(Token = "0x60008A5")]
		[Address(RVA = "0xC62414", Offset = "0xC62414", VA = "0xC62414")]
		public List<YueNodeConnector> GetConnectors()
		{
			return null;
		}

		[Token(Token = "0x60008A6")]
		[Address(RVA = "0xC61DFC", Offset = "0xC61DFC", VA = "0xC61DFC")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x60008A7")]
		[Address(RVA = "0xC62184", Offset = "0xC62184", VA = "0xC62184")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x60008A8")]
		[Address(RVA = "0xC6241C", Offset = "0xC6241C", VA = "0xC6241C")]
		private void OnExposibleChange(YueBuilderExposible exposible)
		{
		}

		[Token(Token = "0x60008A9")]
		[Address(RVA = "0xC62A8C", Offset = "0xC62A8C", VA = "0xC62A8C")]
		public YueExposibleNode()
		{
		}
	}
	[Token(Token = "0x2000226")]
	public class YueExposiblesHandler : MonoBehaviour
	{
		[Token(Token = "0x4000D9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<YueBuilderExposible> inputExposibles;

		[Token(Token = "0x4000DA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public List<YueBuilderExposible> outputExposibles;

		[Token(Token = "0x60008AA")]
		[Address(RVA = "0xC62A94", Offset = "0xC62A94", VA = "0xC62A94")]
		public YueExposiblesHandler()
		{
		}
	}
	[Token(Token = "0x2000227")]
	public class YueGravityNode : MonoBehaviour
	{
		[Token(Token = "0x4000DA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector connector;

		[Token(Token = "0x60008AB")]
		[Address(RVA = "0xC62A9C", Offset = "0xC62A9C", VA = "0xC62A9C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008AC")]
		[Address(RVA = "0xC62BE0", Offset = "0xC62BE0", VA = "0xC62BE0")]
		public YueGravityNode()
		{
		}
	}
	[Token(Token = "0x2000228")]
	public class YueGunNode : MonoBehaviour
	{
		[Token(Token = "0x4000DA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Dependencies")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x4000DA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector fireTrigger;

		[Token(Token = "0x4000DA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector unlimitedAmmo;

		[Token(Token = "0x4000DA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector firerate;

		[Token(Token = "0x4000DA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YueNodeConnector recoil;

		[Token(Token = "0x4000DA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public YueNodeConnector impulse;

		[Token(Token = "0x4000DA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Text fireRateText;

		[Token(Token = "0x4000DA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Text recoilText;

		[Token(Token = "0x4000DAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Text impulseText;

		[Token(Token = "0x4000DAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public Gun selectedDevice;

		[Token(Token = "0x4000DAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		public Gun[] allDevices;

		[Token(Token = "0x60008AD")]
		[Address(RVA = "0xC62BE8", Offset = "0xC62BE8", VA = "0xC62BE8")]
		private void Start()
		{
		}

		[Token(Token = "0x60008AE")]
		[Address(RVA = "0xC62EF8", Offset = "0xC62EF8", VA = "0xC62EF8")]
		private void Update()
		{
		}

		[Token(Token = "0x60008AF")]
		[Address(RVA = "0xC63034", Offset = "0xC63034", VA = "0xC63034")]
		public void UpdateText()
		{
		}

		[Token(Token = "0x60008B0")]
		[Address(RVA = "0xC62C6C", Offset = "0xC62C6C", VA = "0xC62C6C")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x60008B1")]
		[Address(RVA = "0xC62E38", Offset = "0xC62E38", VA = "0xC62E38")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x60008B2")]
		[Address(RVA = "0xC631DC", Offset = "0xC631DC", VA = "0xC631DC")]
		public YueGunNode()
		{
		}
	}
	[Token(Token = "0x2000229")]
	public class YueGyroSensor : MonoBehaviour
	{
		[Token(Token = "0x4000DAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float xSensorValue;

		[Token(Token = "0x4000DAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float ySensorValue;

		[Token(Token = "0x60008B3")]
		[Address(RVA = "0xC631E4", Offset = "0xC631E4", VA = "0xC631E4")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B4")]
		[Address(RVA = "0xC63254", Offset = "0xC63254", VA = "0xC63254")]
		public YueGyroSensor()
		{
		}
	}
	[Token(Token = "0x200022A")]
	public class YueIFBlockNode : MonoBehaviour
	{
		[Token(Token = "0x4000DAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector condition;

		[Token(Token = "0x4000DB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector trueCondition;

		[Token(Token = "0x4000DB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector falseCondition;

		[Token(Token = "0x4000DB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector resultOutput;

		[Token(Token = "0x60008B5")]
		[Address(RVA = "0xC6325C", Offset = "0xC6325C", VA = "0xC6325C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B6")]
		[Address(RVA = "0xC6334C", Offset = "0xC6334C", VA = "0xC6334C")]
		public YueIFBlockNode()
		{
		}
	}
	[Token(Token = "0x200022B")]
	public class YueIMUSensorNode : MonoBehaviour
	{
		[Token(Token = "0x4000DB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector sensorValueX;

		[Token(Token = "0x4000DB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector sensorValueY;

		[Token(Token = "0x4000DB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Dependencies")]
		public YueGyroSensor selectedDevice;

		[Token(Token = "0x4000DB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueGyroSensor[] allDevices;

		[Token(Token = "0x4000DB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x60008B7")]
		[Address(RVA = "0xC63354", Offset = "0xC63354", VA = "0xC63354")]
		private void Start()
		{
		}

		[Token(Token = "0x60008B8")]
		[Address(RVA = "0xC63678", Offset = "0xC63678", VA = "0xC63678")]
		private void Update()
		{
		}

		[Token(Token = "0x60008B9")]
		[Address(RVA = "0xC633D8", Offset = "0xC633D8", VA = "0xC633D8")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x60008BA")]
		[Address(RVA = "0xC635B8", Offset = "0xC635B8", VA = "0xC635B8")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x60008BB")]
		[Address(RVA = "0xC6373C", Offset = "0xC6373C", VA = "0xC6373C")]
		public YueIMUSensorNode()
		{
		}
	}
	[Token(Token = "0x200022C")]
	public class YueInteractableNode : MonoBehaviour
	{
		[Token(Token = "0x4000DB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector grabValue;

		[Token(Token = "0x4000DB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Dependencies")]
		public YueInteractable selectedDevice;

		[Token(Token = "0x4000DBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueInteractable[] allDevices;

		[Token(Token = "0x4000DBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x60008BC")]
		[Address(RVA = "0xC63744", Offset = "0xC63744", VA = "0xC63744")]
		private void Start()
		{
		}

		[Token(Token = "0x60008BD")]
		[Address(RVA = "0xC63A48", Offset = "0xC63A48", VA = "0xC63A48")]
		private void Update()
		{
		}

		[Token(Token = "0x60008BE")]
		[Address(RVA = "0xC637C8", Offset = "0xC637C8", VA = "0xC637C8")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x60008BF")]
		[Address(RVA = "0xC63988", Offset = "0xC63988", VA = "0xC63988")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x60008C0")]
		[Address(RVA = "0xC63AF0", Offset = "0xC63AF0", VA = "0xC63AF0")]
		public YueInteractableNode()
		{
		}
	}
	[Token(Token = "0x200022D")]
	public class YueJoystickNode : YueNodeLogicBase
	{
		[Token(Token = "0x4000DBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Dependecies")]
		public YueNodeConnector lh;

		[Token(Token = "0x4000DBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector lv;

		[Token(Token = "0x4000DBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector lt;

		[Token(Token = "0x4000DBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector lg;

		[Token(Token = "0x4000DC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YueNodeConnector rh;

		[Token(Token = "0x4000DC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public YueNodeConnector rv;

		[Token(Token = "0x4000DC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public YueNodeConnector rt;

		[Token(Token = "0x4000DC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public YueNodeConnector rg;

		[Token(Token = "0x4000DC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private VRInput vrInput;

		[Token(Token = "0x60008C1")]
		[Address(RVA = "0xC63AF8", Offset = "0xC63AF8", VA = "0xC63AF8")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C2")]
		[Address(RVA = "0xC63B6C", Offset = "0xC63B6C", VA = "0xC63B6C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008C3")]
		[Address(RVA = "0xC63C8C", Offset = "0xC63C8C", VA = "0xC63C8C")]
		public YueJoystickNode()
		{
		}
	}
	[Token(Token = "0x200022E")]
	public class YueLeverSensor : MonoBehaviour
	{
		[Token(Token = "0x4000DC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform handle;

		[Token(Token = "0x4000DC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float sensorValue;

		[Token(Token = "0x60008C4")]
		[Address(RVA = "0xC63C9C", Offset = "0xC63C9C", VA = "0xC63C9C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008C5")]
		[Address(RVA = "0xC63D00", Offset = "0xC63D00", VA = "0xC63D00")]
		public YueLeverSensor()
		{
		}
	}
	[Token(Token = "0x200022F")]
	public class YueLeverSensorNode : MonoBehaviour
	{
		[Token(Token = "0x4000DC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector sensorValue;

		[Token(Token = "0x4000DC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Dependencies")]
		public YueLeverSensor selectedDevice;

		[Token(Token = "0x4000DC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueLeverSensor[] allDevices;

		[Token(Token = "0x4000DCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x60008C6")]
		[Address(RVA = "0xC63D08", Offset = "0xC63D08", VA = "0xC63D08")]
		private void Start()
		{
		}

		[Token(Token = "0x60008C7")]
		[Address(RVA = "0xC6402C", Offset = "0xC6402C", VA = "0xC6402C")]
		private void Update()
		{
		}

		[Token(Token = "0x60008C8")]
		[Address(RVA = "0xC63D8C", Offset = "0xC63D8C", VA = "0xC63D8C")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x60008C9")]
		[Address(RVA = "0xC63F6C", Offset = "0xC63F6C", VA = "0xC63F6C")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x60008CA")]
		[Address(RVA = "0xC640D4", Offset = "0xC640D4", VA = "0xC640D4")]
		public YueLeverSensorNode()
		{
		}
	}
	[Token(Token = "0x2000230")]
	public class YueMotorNode : MonoBehaviour
	{
		[Token(Token = "0x4000DCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector inputInput;

		[Token(Token = "0x4000DCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector maxThrustInput;

		[Token(Token = "0x4000DCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector isThrustingOutput;

		[Token(Token = "0x4000DCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector thrustValueOutput;

		[Token(Token = "0x4000DCF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Dependencies")]
		public SimpleMotor selectedDevice;

		[Token(Token = "0x4000DD0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SimpleMotor[] allDevices;

		[Token(Token = "0x4000DD1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x60008CB")]
		[Address(RVA = "0xC640DC", Offset = "0xC640DC", VA = "0xC640DC")]
		private void Start()
		{
		}

		[Token(Token = "0x60008CC")]
		[Address(RVA = "0xC64400", Offset = "0xC64400", VA = "0xC64400")]
		private void Update()
		{
		}

		[Token(Token = "0x60008CD")]
		[Address(RVA = "0xC64160", Offset = "0xC64160", VA = "0xC64160")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x60008CE")]
		[Address(RVA = "0xC64340", Offset = "0xC64340", VA = "0xC64340")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x60008CF")]
		[Address(RVA = "0xC64558", Offset = "0xC64558", VA = "0xC64558")]
		public YueMotorNode()
		{
		}
	}
	[Token(Token = "0x2000231")]
	public class YueMultiNode : MonoBehaviour
	{
		[Token(Token = "0x4000DD2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Dependencies")]
		public Text val;

		[Token(Token = "0x4000DD3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text[] signsText;

		[Token(Token = "0x4000DD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public float[] signs;

		[Token(Token = "0x4000DD5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector[] inputs;

		[Token(Token = "0x4000DD6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YueNodeConnector output;

		[Token(Token = "0x60008D0")]
		[Address(RVA = "0xC64560", Offset = "0xC64560", VA = "0xC64560")]
		private void Update()
		{
		}

		[Token(Token = "0x60008D1")]
		[Address(RVA = "0xC646A0", Offset = "0xC646A0", VA = "0xC646A0")]
		public void SetSign(int index)
		{
		}

		[Token(Token = "0x60008D2")]
		[Address(RVA = "0xC64768", Offset = "0xC64768", VA = "0xC64768")]
		public YueMultiNode()
		{
		}
	}
	[Token(Token = "0x2000232")]
	public class YueNode : MonoBehaviour
	{
		[Token(Token = "0x4000DD7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string nodeName;

		[Token(Token = "0x4000DD8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<YueNodeConnector> inputConnectors;

		[Token(Token = "0x4000DD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<YueNodeConnector> outputConnectors;

		[Token(Token = "0x60008D3")]
		[Address(RVA = "0xC64770", Offset = "0xC64770", VA = "0xC64770")]
		private void Start()
		{
		}

		[Token(Token = "0x60008D4")]
		[Address(RVA = "0xC6490C", Offset = "0xC6490C", VA = "0xC6490C")]
		public void DeleteNode()
		{
		}

		[Token(Token = "0x60008D5")]
		[Address(RVA = "0xC64978", Offset = "0xC64978", VA = "0xC64978")]
		public YueNode()
		{
		}
	}
	[Token(Token = "0x2000233")]
	public enum NodeConnectorMode
	{
		[Token(Token = "0x4000DDB")]
		Input,
		[Token(Token = "0x4000DDC")]
		Output
	}
	[Token(Token = "0x2000234")]
	public enum NodeConnectorType
	{
		[Token(Token = "0x4000DDE")]
		Bool,
		[Token(Token = "0x4000DDF")]
		Float,
		[Token(Token = "0x4000DE0")]
		Vector3,
		[Token(Token = "0x4000DE1")]
		Dynamic
	}
	[Serializable]
	[Token(Token = "0x2000235")]
	public class YueNodeConnection
	{
		[Token(Token = "0x4000DE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public YueNodeConnector connectorOutput;

		[Token(Token = "0x4000DE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector connectorInput;

		[Token(Token = "0x4000DE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueConnectionVisual visual;

		[Token(Token = "0x60008D6")]
		[Address(RVA = "0xC64980", Offset = "0xC64980", VA = "0xC64980")]
		public YueNodeConnection()
		{
		}

		[Token(Token = "0x60008D7")]
		[Address(RVA = "0xC64988", Offset = "0xC64988", VA = "0xC64988")]
		public YueNodeConnection(YueNodeConnector connector1, YueNodeConnector connector2, YueConnectionVisual visualConnect)
		{
		}
	}
	[Token(Token = "0x2000236")]
	public class YueNodeConnector : MonoBehaviour, IDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler, IPointerEnterHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000DE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public string connectorName;

		[Token(Token = "0x4000DE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public NodeConnectorMode connectorMode;

		[Token(Token = "0x4000DE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public NodeConnectorType connectorType;

		[Token(Token = "0x4000DE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public Color colorBool;

		[Token(Token = "0x4000DE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Color colorFloat;

		[Token(Token = "0x4000DEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Color colorVec3;

		[Token(Token = "0x4000DEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public List<YueNodeConnector> listeningConnectors;

		[Token(Token = "0x4000DEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		public List<YueNodeConnection> connections;

		[Token(Token = "0x4000DED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[HideInInspector]
		public YueNode node;

		[Token(Token = "0x4000DEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[HideInInspector]
		public bool bValue;

		[Token(Token = "0x4000DEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[HideInInspector]
		public float fValue;

		[Token(Token = "0x4000DF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[HideInInspector]
		public Vector3 vec3Value;

		[Token(Token = "0x4000DF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[HideInInspector]
		public bool isTaken;

		[Token(Token = "0x60008D8")]
		[Address(RVA = "0xC649C4", Offset = "0xC649C4", VA = "0xC649C4")]
		private void Start()
		{
		}

		[Token(Token = "0x60008D9")]
		[Address(RVA = "0xC64A14", Offset = "0xC64A14", VA = "0xC64A14")]
		private void Update()
		{
		}

		[Token(Token = "0x60008DA")]
		[Address(RVA = "0xC64BFC", Offset = "0xC64BFC", VA = "0xC64BFC")]
		public void NodeClicked()
		{
		}

		[Token(Token = "0x60008DB")]
		[Address(RVA = "0xC64C0C", Offset = "0xC64C0C", VA = "0xC64C0C")]
		public void SetReceiver(YueNodeConnector receiver)
		{
		}

		[Token(Token = "0x60008DC")]
		[Address(RVA = "0xC64CC0", Offset = "0xC64CC0", VA = "0xC64CC0")]
		public void CreateConnection(YueNodeConnector connector, YueConnectionVisual visual)
		{
		}

		[Token(Token = "0x60008DD")]
		public void SetValue<T>(T toSetValue)
		{
		}

		[Token(Token = "0x60008DE")]
		public T GetValue<T>()
		{
			return (T)null;
		}

		[Token(Token = "0x60008DF")]
		[Address(RVA = "0xC64BE8", Offset = "0xC64BE8", VA = "0xC64BE8")]
		public void SetAllValues(bool b, float f, Vector3 vec3)
		{
		}

		[Token(Token = "0x60008E0")]
		[Address(RVA = "0xC64E10", Offset = "0xC64E10", VA = "0xC64E10")]
		private void ResetValues()
		{
		}

		[Token(Token = "0x60008E1")]
		[Address(RVA = "0xC628F4", Offset = "0xC628F4", VA = "0xC628F4")]
		public void DeleteInputConnection()
		{
		}

		[Token(Token = "0x60008E2")]
		[Address(RVA = "0xC64E70", Offset = "0xC64E70", VA = "0xC64E70")]
		public void DeleteConnection(YueNodeConnection connection)
		{
		}

		[Token(Token = "0x60008E3")]
		[Address(RVA = "0xC629E0", Offset = "0xC629E0", VA = "0xC629E0")]
		public void DeleteAllConnections()
		{
		}

		[Token(Token = "0x60008E4")]
		[Address(RVA = "0xC64F98", Offset = "0xC64F98", VA = "0xC64F98")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x60008E5")]
		[Address(RVA = "0xC64F9C", Offset = "0xC64F9C", VA = "0xC64F9C", Slot = "5")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008E6")]
		[Address(RVA = "0xC650CC", Offset = "0xC650CC", VA = "0xC650CC", Slot = "4")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008E7")]
		[Address(RVA = "0xC65138", Offset = "0xC65138", VA = "0xC65138", Slot = "6")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008E8")]
		[Address(RVA = "0xC652B8", Offset = "0xC652B8", VA = "0xC652B8", Slot = "7")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008E9")]
		[Address(RVA = "0xC65330", Offset = "0xC65330", VA = "0xC65330", Slot = "8")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008EA")]
		[Address(RVA = "0xC65388", Offset = "0xC65388", VA = "0xC65388")]
		public YueNodeConnector()
		{
		}
	}
	[Token(Token = "0x2000237")]
	public class YueNodeLogicBase : MonoBehaviour
	{
		[Token(Token = "0x60008EB")]
		[Address(RVA = "0xC63C94", Offset = "0xC63C94", VA = "0xC63C94")]
		public YueNodeLogicBase()
		{
		}
	}
	[Token(Token = "0x2000238")]
	public class YueNodeMenu : MonoBehaviour
	{
		[Token(Token = "0x4000DF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public List<YueNode> nodes;

		[Token(Token = "0x4000DF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public int spaceBetweenButtons;

		[Token(Token = "0x4000DF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Dependencies")]
		public GameObject buttonPrefab;

		[Token(Token = "0x4000DF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform start;

		[Token(Token = "0x60008EC")]
		[Address(RVA = "0xC65390", Offset = "0xC65390", VA = "0xC65390")]
		private void Start()
		{
		}

		[Token(Token = "0x60008ED")]
		[Address(RVA = "0xC65710", Offset = "0xC65710", VA = "0xC65710")]
		public YueNodeMenu()
		{
		}
	}
	[Token(Token = "0x2000239")]
	public class YueNodeSpace : MonoBehaviour, IPointerEnterHandler, IEventSystemHandler, IPointerExitHandler
	{
		[Token(Token = "0x4000DF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Transform nodespaceTransform;

		[Token(Token = "0x4000DF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public GameObject lineConnectionPrefab;

		[Token(Token = "0x4000DF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public List<YueNode> nodes;

		[Token(Token = "0x4000DF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Transform pointer;

		[Token(Token = "0x4000DFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YueNodeConnector draggedConnector;

		[Token(Token = "0x4000DFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public YueNodeConnector hoverdConnector;

		[Token(Token = "0x4000DFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private YueConnectionVisual previewVisual;

		[Token(Token = "0x4000DFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool isDragging;

		[Token(Token = "0x4000DFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private int defaultPixelDragThreshold;

		[Token(Token = "0x4000DFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public bool isMenuHoverd;

		[Token(Token = "0x4000E00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		private int hoversCount;

		[Token(Token = "0x4000E01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private EventSystem eventSystem;

		[Token(Token = "0x60008EE")]
		[Address(RVA = "0xC65720", Offset = "0xC65720", VA = "0xC65720")]
		private void Start()
		{
		}

		[Token(Token = "0x60008EF")]
		[Address(RVA = "0xC6582C", Offset = "0xC6582C", VA = "0xC6582C", Slot = "4")]
		public void OnPointerEnter(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008F0")]
		[Address(RVA = "0xC658C4", Offset = "0xC658C4", VA = "0xC658C4", Slot = "5")]
		public void OnPointerExit(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008F1")]
		[Address(RVA = "0xC6587C", Offset = "0xC6587C", VA = "0xC6587C")]
		private void UpdateManuHovers()
		{
		}

		[Token(Token = "0x60008F2")]
		[Address(RVA = "0xC65914", Offset = "0xC65914", VA = "0xC65914")]
		public void ConnectNodes(YueNodeConnector output, YueNodeConnector input)
		{
		}

		[Token(Token = "0x60008F3")]
		[Address(RVA = "0xC65AA4", Offset = "0xC65AA4", VA = "0xC65AA4")]
		public void SpawnNode(GameObject prefab)
		{
		}

		[Token(Token = "0x60008F4")]
		[Address(RVA = "0xC65B80", Offset = "0xC65B80", VA = "0xC65B80")]
		private void SetPreviewLineActive(bool active)
		{
		}

		[Token(Token = "0x60008F5")]
		[Address(RVA = "0xC65C7C", Offset = "0xC65C7C", VA = "0xC65C7C")]
		private void UpdateCurser(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008F6")]
		[Address(RVA = "0xC65004", Offset = "0xC65004", VA = "0xC65004")]
		public void OnConnectorStartDrag(YueNodeConnector connector, PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008F7")]
		[Address(RVA = "0xC6518C", Offset = "0xC6518C", VA = "0xC6518C")]
		public void OnConnectorEndDrag(YueNodeConnector connector, PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008F8")]
		[Address(RVA = "0xC65130", Offset = "0xC65130", VA = "0xC65130")]
		public void OnConnectorDrag(YueNodeConnector connector, PointerEventData eventData)
		{
		}

		[Token(Token = "0x60008F9")]
		[Address(RVA = "0xC6531C", Offset = "0xC6531C", VA = "0xC6531C")]
		public void SetHoverdConnector(YueNodeConnector connector)
		{
		}

		[Token(Token = "0x60008FA")]
		[Address(RVA = "0xC65CA4", Offset = "0xC65CA4", VA = "0xC65CA4")]
		public YueNodeSpace()
		{
		}
	}
	[Token(Token = "0x200023A")]
	public class YueNumberOutput : YueNodeLogicBase
	{
		[Token(Token = "0x4000E02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float number;

		[Token(Token = "0x4000E03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text numberText;

		[Token(Token = "0x4000E04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector connector;

		[Token(Token = "0x4000E05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNumPad pad;

		[Token(Token = "0x60008FB")]
		[Address(RVA = "0xC65CAC", Offset = "0xC65CAC", VA = "0xC65CAC")]
		private void Update()
		{
		}

		[Token(Token = "0x60008FC")]
		[Address(RVA = "0xC65DA8", Offset = "0xC65DA8", VA = "0xC65DA8")]
		public YueNumberOutput()
		{
		}
	}
	[Token(Token = "0x200023B")]
	public enum OperatorMode
	{
		[Token(Token = "0x4000E07")]
		Add,
		[Token(Token = "0x4000E08")]
		Subtract,
		[Token(Token = "0x4000E09")]
		Multiply,
		[Token(Token = "0x4000E0A")]
		Divide
	}
	[Token(Token = "0x200023C")]
	public class YueOperator : YueNodeLogicBase
	{
		[Token(Token = "0x4000E0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Dependencies")]
		public OperatorMode mode;

		[Token(Token = "0x4000E0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text modeText;

		[Token(Token = "0x4000E0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector input1;

		[Token(Token = "0x4000E0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector input2;

		[Token(Token = "0x4000E0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YueNodeConnector output;

		[Token(Token = "0x4000E10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private int modeIndex;

		[Token(Token = "0x60008FD")]
		[Address(RVA = "0xC65DB0", Offset = "0xC65DB0", VA = "0xC65DB0")]
		private void Update()
		{
		}

		[Token(Token = "0x60008FE")]
		[Address(RVA = "0xC65FC8", Offset = "0xC65FC8", VA = "0xC65FC8")]
		public void ChangeMode(bool next)
		{
		}

		[Token(Token = "0x60008FF")]
		[Address(RVA = "0xC66088", Offset = "0xC66088", VA = "0xC66088")]
		public YueOperator()
		{
		}
	}
	[Token(Token = "0x200023D")]
	public class YueOrGate : MonoBehaviour
	{
		[Token(Token = "0x4000E11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector firstCondition;

		[Token(Token = "0x4000E12")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector secondCondition;

		[Token(Token = "0x4000E13")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector resultOutput;

		[Token(Token = "0x6000900")]
		[Address(RVA = "0xC66090", Offset = "0xC66090", VA = "0xC66090")]
		private void Update()
		{
		}

		[Token(Token = "0x6000901")]
		[Address(RVA = "0xC66134", Offset = "0xC66134", VA = "0xC66134")]
		public YueOrGate()
		{
		}
	}
	[Token(Token = "0x200023E")]
	public class YuePDController : MonoBehaviour
	{
		[Token(Token = "0x4000E14")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector value;

		[Token(Token = "0x4000E15")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector p;

		[Token(Token = "0x4000E16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector d;

		[Token(Token = "0x4000E17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector result;

		[Token(Token = "0x4000E18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float resultVal;

		[Token(Token = "0x4000E19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float prevValue;

		[Token(Token = "0x6000902")]
		[Address(RVA = "0xC6613C", Offset = "0xC6613C", VA = "0xC6613C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000903")]
		[Address(RVA = "0xC66254", Offset = "0xC66254", VA = "0xC66254")]
		public YuePDController()
		{
		}
	}
	[Token(Token = "0x200023F")]
	public class YuePhysicalButtonNode : MonoBehaviour
	{
		[Token(Token = "0x4000E1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector sensorValuePressed;

		[Token(Token = "0x4000E1B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector sensorValueToggle;

		[Token(Token = "0x4000E1C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Header("Dependencies")]
		public PhysicalButton selectedDevice;

		[Token(Token = "0x4000E1D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public PhysicalButton[] allDevices;

		[Token(Token = "0x4000E1E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x6000904")]
		[Address(RVA = "0xC6625C", Offset = "0xC6625C", VA = "0xC6625C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000905")]
		[Address(RVA = "0xC66580", Offset = "0xC66580", VA = "0xC66580")]
		private void Update()
		{
		}

		[Token(Token = "0x6000906")]
		[Address(RVA = "0xC662E0", Offset = "0xC662E0", VA = "0xC662E0")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x6000907")]
		[Address(RVA = "0xC664C0", Offset = "0xC664C0", VA = "0xC664C0")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x6000908")]
		[Address(RVA = "0xC6663C", Offset = "0xC6663C", VA = "0xC6663C")]
		public YuePhysicalButtonNode()
		{
		}
	}
	[Token(Token = "0x2000240")]
	public class YuePlayerNode : MonoBehaviour
	{
		[Token(Token = "0x4000E1F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Text massText;

		[Token(Token = "0x4000E20")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public Text strengthText;

		[Token(Token = "0x4000E21")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector mass;

		[Token(Token = "0x4000E22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector strength;

		[Token(Token = "0x4000E23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private PlayerController controller;

		[Token(Token = "0x6000909")]
		[Address(RVA = "0xC66644", Offset = "0xC66644", VA = "0xC66644")]
		private void Start()
		{
		}

		[Token(Token = "0x600090A")]
		[Address(RVA = "0xC66718", Offset = "0xC66718", VA = "0xC66718")]
		private void Update()
		{
		}

		[Token(Token = "0x600090B")]
		[Address(RVA = "0xC66834", Offset = "0xC66834", VA = "0xC66834")]
		public YuePlayerNode()
		{
		}
	}
	[Token(Token = "0x2000241")]
	public class YueRigidbodyNode : MonoBehaviour
	{
		[Token(Token = "0x4000E24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector useGravityInput;

		[Token(Token = "0x4000E25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector isKinematicInput;

		[Token(Token = "0x4000E26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector massInput;

		[Token(Token = "0x4000E27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector dragInput;

		[Token(Token = "0x4000E28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YueNodeConnector angularDragInput;

		[Token(Token = "0x4000E29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Header("Dependencies")]
		public Rigidbody selectedDevice;

		[Token(Token = "0x4000E2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Rigidbody[] allDevices;

		[Token(Token = "0x4000E2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x600090C")]
		[Address(RVA = "0xC6683C", Offset = "0xC6683C", VA = "0xC6683C")]
		private void Start()
		{
		}

		[Token(Token = "0x600090D")]
		[Address(RVA = "0xC66B4C", Offset = "0xC66B4C", VA = "0xC66B4C")]
		private void Update()
		{
		}

		[Token(Token = "0x600090E")]
		[Address(RVA = "0xC668C0", Offset = "0xC668C0", VA = "0xC668C0")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x600090F")]
		[Address(RVA = "0xC66A8C", Offset = "0xC66A8C", VA = "0xC66A8C")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x6000910")]
		[Address(RVA = "0xC66CD0", Offset = "0xC66CD0", VA = "0xC66CD0")]
		public YueRigidbodyNode()
		{
		}
	}
	[Token(Token = "0x2000242")]
	public class YueSeatNode : MonoBehaviour
	{
		[Token(Token = "0x4000E2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector seatValue;

		[Token(Token = "0x4000E2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Dependencies")]
		public YueSeat selectedDevice;

		[Token(Token = "0x4000E2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueSeat[] allDevices;

		[Token(Token = "0x4000E2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x6000911")]
		[Address(RVA = "0xC66CD8", Offset = "0xC66CD8", VA = "0xC66CD8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000912")]
		[Address(RVA = "0xC66FFC", Offset = "0xC66FFC", VA = "0xC66FFC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000913")]
		[Address(RVA = "0xC66D5C", Offset = "0xC66D5C", VA = "0xC66D5C")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x6000914")]
		[Address(RVA = "0xC66F3C", Offset = "0xC66F3C", VA = "0xC66F3C")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x6000915")]
		[Address(RVA = "0xC670A4", Offset = "0xC670A4", VA = "0xC670A4")]
		public YueSeatNode()
		{
		}
	}
	[Token(Token = "0x2000243")]
	public class YueSliderNode : MonoBehaviour
	{
		[Token(Token = "0x4000E30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector minConnector;

		[Token(Token = "0x4000E31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector maxConnector;

		[Token(Token = "0x4000E32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector outConnector;

		[Token(Token = "0x4000E33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public Slider slider;

		[Token(Token = "0x4000E34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float min;

		[Token(Token = "0x4000E35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float max;

		[Token(Token = "0x6000916")]
		[Address(RVA = "0xC670AC", Offset = "0xC670AC", VA = "0xC670AC")]
		private void Update()
		{
		}

		[Token(Token = "0x6000917")]
		[Address(RVA = "0xC6718C", Offset = "0xC6718C", VA = "0xC6718C")]
		public YueSliderNode()
		{
		}
	}
	[Token(Token = "0x2000244")]
	public class YueThrusterNode : MonoBehaviour
	{
		[Token(Token = "0x4000E36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector inputInput;

		[Token(Token = "0x4000E37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector maxThrustInput;

		[Token(Token = "0x4000E38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector isThrustingOutput;

		[Token(Token = "0x4000E39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector thrustValueOutput;

		[Token(Token = "0x4000E3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Dependencies")]
		public SimpleThrust selectedDevice;

		[Token(Token = "0x4000E3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public SimpleThrust[] allDevices;

		[Token(Token = "0x4000E3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x6000918")]
		[Address(RVA = "0xC6719C", Offset = "0xC6719C", VA = "0xC6719C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000919")]
		[Address(RVA = "0xC674C0", Offset = "0xC674C0", VA = "0xC674C0")]
		private void Update()
		{
		}

		[Token(Token = "0x600091A")]
		[Address(RVA = "0xC67220", Offset = "0xC67220", VA = "0xC67220")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x600091B")]
		[Address(RVA = "0xC67400", Offset = "0xC67400", VA = "0xC67400")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x600091C")]
		[Address(RVA = "0xC67618", Offset = "0xC67618", VA = "0xC67618")]
		public YueThrusterNode()
		{
		}
	}
	[Token(Token = "0x2000245")]
	public class YueTorquerNode : MonoBehaviour
	{
		[Token(Token = "0x4000E3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector verticalInput;

		[Token(Token = "0x4000E3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector horizontalInput;

		[Token(Token = "0x4000E3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector maxValueInput;

		[Token(Token = "0x4000E40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueNodeConnector isThrustingOutput;

		[Token(Token = "0x4000E41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YueNodeConnector xValueOutput;

		[Token(Token = "0x4000E42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public YueNodeConnector yValueOutput;

		[Token(Token = "0x4000E43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Dependencies")]
		public SimpleTorquer selectedDevice;

		[Token(Token = "0x4000E44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		public SimpleTorquer[] allDevices;

		[Token(Token = "0x4000E45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x600091D")]
		[Address(RVA = "0xC67620", Offset = "0xC67620", VA = "0xC67620")]
		private void Start()
		{
		}

		[Token(Token = "0x600091E")]
		[Address(RVA = "0xC67944", Offset = "0xC67944", VA = "0xC67944")]
		private void Update()
		{
		}

		[Token(Token = "0x600091F")]
		[Address(RVA = "0xC676A4", Offset = "0xC676A4", VA = "0xC676A4")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x6000920")]
		[Address(RVA = "0xC67884", Offset = "0xC67884", VA = "0xC67884")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x6000921")]
		[Address(RVA = "0xC67ADC", Offset = "0xC67ADC", VA = "0xC67ADC")]
		public YueTorquerNode()
		{
		}
	}
	[Token(Token = "0x2000246")]
	public class YueVectorerNode : MonoBehaviour
	{
		[Token(Token = "0x4000E46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public YueNodeConnector inputX;

		[Token(Token = "0x4000E47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector inputY;

		[Token(Token = "0x4000E48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector maxVal;

		[Token(Token = "0x4000E49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[Header("Dependencies")]
		public SimpleVectorer selectedDevice;

		[Token(Token = "0x4000E4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public SimpleVectorer[] allDevices;

		[Token(Token = "0x4000E4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x6000922")]
		[Address(RVA = "0xC67AE4", Offset = "0xC67AE4", VA = "0xC67AE4")]
		private void Start()
		{
		}

		[Token(Token = "0x6000923")]
		[Address(RVA = "0xC67E08", Offset = "0xC67E08", VA = "0xC67E08")]
		private void Update()
		{
		}

		[Token(Token = "0x6000924")]
		[Address(RVA = "0xC67B68", Offset = "0xC67B68", VA = "0xC67B68")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x6000925")]
		[Address(RVA = "0xC67D48", Offset = "0xC67D48", VA = "0xC67D48")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x6000926")]
		[Address(RVA = "0xC67F00", Offset = "0xC67F00", VA = "0xC67F00")]
		public YueVectorerNode()
		{
		}
	}
	[Token(Token = "0x2000247")]
	public interface IVehicleInputInjector
	{
		[Token(Token = "0x6000927")]
		void SetThrust(float thrust);

		[Token(Token = "0x6000928")]
		void SetRoll(float roll);

		[Token(Token = "0x6000929")]
		void SetPitch(float pitch);
	}
	[Token(Token = "0x2000248")]
	public class YueVehicleNode : MonoBehaviour
	{
		[Token(Token = "0x4000E4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Header("Dependencies")]
		public YueNodeConnector throttle;

		[Token(Token = "0x4000E4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public YueNodeConnector roll;

		[Token(Token = "0x4000E4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public YueNodeConnector pitch;

		[Token(Token = "0x4000E4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		public YueVehicleInput selectedDevice;

		[Token(Token = "0x4000E50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		public YueVehicleInput[] allDevices;

		[Token(Token = "0x4000E51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		public Dropdown dropdownMenu;

		[Token(Token = "0x600092A")]
		[Address(RVA = "0xC67F08", Offset = "0xC67F08", VA = "0xC67F08")]
		private void Start()
		{
		}

		[Token(Token = "0x600092B")]
		[Address(RVA = "0xC6822C", Offset = "0xC6822C", VA = "0xC6822C")]
		private void Update()
		{
		}

		[Token(Token = "0x600092C")]
		[Address(RVA = "0xC67F8C", Offset = "0xC67F8C", VA = "0xC67F8C")]
		private void UpdateOptions()
		{
		}

		[Token(Token = "0x600092D")]
		[Address(RVA = "0xC6816C", Offset = "0xC6816C", VA = "0xC6816C")]
		public void OnValueChanged(int value)
		{
		}

		[Token(Token = "0x600092E")]
		[Address(RVA = "0xC68304", Offset = "0xC68304", VA = "0xC68304")]
		public YueVehicleNode()
		{
		}
	}
}
namespace BigBlit.ActivePack
{
	[Token(Token = "0x2000249")]
	public abstract class ActiveBehaviour : MonoBehaviour
	{
		[Token(Token = "0x600092F")]
		[Address(RVA = "0xC6830C", Offset = "0xC6830C", VA = "0xC6830C", Slot = "4")]
		protected virtual void Reset()
		{
		}

		[Token(Token = "0x6000930")]
		[Address(RVA = "0xC68310", Offset = "0xC68310", VA = "0xC68310", Slot = "5")]
		protected virtual void OnValidate()
		{
		}

		[Token(Token = "0x6000931")]
		[Address(RVA = "0xC68314", Offset = "0xC68314", VA = "0xC68314", Slot = "6")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000932")]
		[Address(RVA = "0xC68318", Offset = "0xC68318", VA = "0xC68318", Slot = "7")]
		protected virtual void Start()
		{
		}

		[Token(Token = "0x6000933")]
		[Address(RVA = "0xC6831C", Offset = "0xC6831C", VA = "0xC6831C", Slot = "8")]
		protected virtual void OnEnable()
		{
		}

		[Token(Token = "0x6000934")]
		[Address(RVA = "0xC68320", Offset = "0xC68320", VA = "0xC68320", Slot = "9")]
		protected virtual void OnDisable()
		{
		}

		[Token(Token = "0x6000935")]
		[Address(RVA = "0xC68324", Offset = "0xC68324", VA = "0xC68324", Slot = "10")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000936")]
		[Address(RVA = "0xC68328", Offset = "0xC68328", VA = "0xC68328")]
		protected ActiveBehaviour()
		{
		}
	}
	[Token(Token = "0x200024A")]
	[BehaviourInfo("Basic Lever. Implements draggable/pressable lever mechanism. Use it if you want lever-like behaviour. Works with Press and Drag controller.")]
	public class Lever : ActiveBehaviour, IDraggable, IValueable, IToggleable, IPressable, IDisable
	{
		[Token(Token = "0x4000E5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private float _toggleInValue;

		[Token(Token = "0x4000E5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		[SerializeField]
		private bool _springed;

		[Token(Token = "0x4000E5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private float _value;

		[Token(Token = "0x4000E5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[SerializeField]
		private bool _isDisabled;

		[Token(Token = "0x4000E5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6D")]
		private bool _isToggledOn;

		[Token(Token = "0x4000E60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6E")]
		private bool _isPressed;

		[Token(Token = "0x4000E61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private float _pressTime;

		[Token(Token = "0x1700004F")]
		public float Value
		{
			[Token(Token = "0x6000947")]
			[Address(RVA = "0xC68CF0", Offset = "0xC68CF0", VA = "0xC68CF0", Slot = "21")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000948")]
			[Address(RVA = "0xC68CF8", Offset = "0xC68CF8", VA = "0xC68CF8")]
			set
			{
			}
		}

		[Token(Token = "0x17000050")]
		public bool IsToggledOn
		{
			[Token(Token = "0x6000949")]
			[Address(RVA = "0xC68D30", Offset = "0xC68D30", VA = "0xC68D30", Slot = "28")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000051")]
		public bool IsPressed
		{
			[Token(Token = "0x600094A")]
			[Address(RVA = "0xC68D38", Offset = "0xC68D38", VA = "0xC68D38", Slot = "36")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000052")]
		public float PressTime
		{
			[Token(Token = "0x600094B")]
			[Address(RVA = "0xC68D40", Offset = "0xC68D40", VA = "0xC68D40", Slot = "39")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x17000053")]
		public bool IsDisabled
		{
			[Token(Token = "0x600094E")]
			[Address(RVA = "0xC68E80", Offset = "0xC68E80", VA = "0xC68E80", Slot = "42")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x600094F")]
			[Address(RVA = "0xC68E88", Offset = "0xC68E88", VA = "0xC68E88", Slot = "43")]
			set
			{
			}
		}

		[Token(Token = "0x14000004")]
		public event DragEvent dragStartEvent
		{
			[Token(Token = "0x6000937")]
			[Address(RVA = "0xC68330", Offset = "0xC68330", VA = "0xC68330", Slot = "11")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000938")]
			[Address(RVA = "0xC683CC", Offset = "0xC683CC", VA = "0xC683CC", Slot = "12")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000005")]
		public event DragEvent dragEvent
		{
			[Token(Token = "0x6000939")]
			[Address(RVA = "0xC68468", Offset = "0xC68468", VA = "0xC68468", Slot = "13")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600093A")]
			[Address(RVA = "0xC68504", Offset = "0xC68504", VA = "0xC68504", Slot = "14")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000006")]
		public event DragEvent dragEndEvent
		{
			[Token(Token = "0x600093B")]
			[Address(RVA = "0xC685A0", Offset = "0xC685A0", VA = "0xC685A0", Slot = "15")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600093C")]
			[Address(RVA = "0xC6863C", Offset = "0xC6863C", VA = "0xC6863C", Slot = "16")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000007")]
		public event ValueChangeEvent valueChangeEvent
		{
			[Token(Token = "0x600093D")]
			[Address(RVA = "0xC686D8", Offset = "0xC686D8", VA = "0xC686D8", Slot = "22")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600093E")]
			[Address(RVA = "0xC68774", Offset = "0xC68774", VA = "0xC68774", Slot = "23")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000008")]
		public event ToggleEvent toggleOnEvent
		{
			[Token(Token = "0x600093F")]
			[Address(RVA = "0xC68810", Offset = "0xC68810", VA = "0xC68810", Slot = "24")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000940")]
			[Address(RVA = "0xC688AC", Offset = "0xC688AC", VA = "0xC688AC", Slot = "25")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000009")]
		public event ToggleEvent toggleOffEvent
		{
			[Token(Token = "0x6000941")]
			[Address(RVA = "0xC68948", Offset = "0xC68948", VA = "0xC68948", Slot = "26")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000942")]
			[Address(RVA = "0xC689E4", Offset = "0xC689E4", VA = "0xC689E4", Slot = "27")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000A")]
		public event PressEvent pressedEvent
		{
			[Token(Token = "0x6000943")]
			[Address(RVA = "0xC68A80", Offset = "0xC68A80", VA = "0xC68A80", Slot = "32")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000944")]
			[Address(RVA = "0xC68B1C", Offset = "0xC68B1C", VA = "0xC68B1C", Slot = "33")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000B")]
		public event PressEvent normalEvent
		{
			[Token(Token = "0x6000945")]
			[Address(RVA = "0xC68BB8", Offset = "0xC68BB8", VA = "0xC68BB8", Slot = "34")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000946")]
			[Address(RVA = "0xC68C54", Offset = "0xC68C54", VA = "0xC68C54", Slot = "35")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400000C")]
		public event DisableEvent disableChangedEvent
		{
			[Token(Token = "0x600094C")]
			[Address(RVA = "0xC68D48", Offset = "0xC68D48", VA = "0xC68D48", Slot = "40")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x600094D")]
			[Address(RVA = "0xC68DE4", Offset = "0xC68DE4", VA = "0xC68DE4", Slot = "41")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000950")]
		[Address(RVA = "0xC68EC0", Offset = "0xC68EC0", VA = "0xC68EC0", Slot = "5")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6000951")]
		[Address(RVA = "0xC68F3C", Offset = "0xC68F3C", VA = "0xC68F3C", Slot = "18")]
		public void DragStart()
		{
		}

		[Token(Token = "0x6000952")]
		[Address(RVA = "0xC68F64", Offset = "0xC68F64", VA = "0xC68F64", Slot = "19")]
		public void Drag(Vector3 delta)
		{
		}

		[Token(Token = "0x6000953")]
		[Address(RVA = "0xC69078", Offset = "0xC69078", VA = "0xC69078", Slot = "20")]
		public void DragEnd()
		{
		}

		[Token(Token = "0x6000954")]
		[Address(RVA = "0xC690B8", Offset = "0xC690B8", VA = "0xC690B8", Slot = "29")]
		public void ToggleOn()
		{
		}

		[Token(Token = "0x6000955")]
		[Address(RVA = "0xC690FC", Offset = "0xC690FC", VA = "0xC690FC", Slot = "30")]
		public void ToggleOff()
		{
		}

		[Token(Token = "0x6000956")]
		[Address(RVA = "0xC69138", Offset = "0xC69138", VA = "0xC69138", Slot = "31")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000957")]
		[Address(RVA = "0xC6915C", Offset = "0xC6915C", VA = "0xC6915C", Slot = "37")]
		public void Press()
		{
		}

		[Token(Token = "0x6000958")]
		[Address(RVA = "0xC691C4", Offset = "0xC691C4", VA = "0xC691C4", Slot = "38")]
		public void Normal()
		{
		}

		[Token(Token = "0x6000959")]
		[Address(RVA = "0xC68ED0", Offset = "0xC68ED0", VA = "0xC68ED0")]
		private void updateToggleValue()
		{
		}

		[Token(Token = "0x600095A")]
		[Address(RVA = "0xC69030", Offset = "0xC69030", VA = "0xC69030")]
		private void setToggle(bool isToggleOn)
		{
		}

		[Token(Token = "0x600095B")]
		[Address(RVA = "0xC691EC", Offset = "0xC691EC", VA = "0xC691EC")]
		public Lever()
		{
		}
	}
	[Token(Token = "0x200024B")]
	[AttributeUsage(AttributeTargets.Class)]
	public class BehaviourInfoAttribute : Attribute
	{
		[Token(Token = "0x4000E62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private string _text;

		[Token(Token = "0x17000054")]
		public string Text
		{
			[Token(Token = "0x600095C")]
			[Address(RVA = "0xC69204", Offset = "0xC69204", VA = "0xC69204")]
			get
			{
				return null;
			}
			[Token(Token = "0x600095D")]
			[Address(RVA = "0xC6920C", Offset = "0xC6920C", VA = "0xC6920C")]
			set
			{
			}
		}

		[Token(Token = "0x600095E")]
		[Address(RVA = "0xC69214", Offset = "0xC69214", VA = "0xC69214")]
		public BehaviourInfoAttribute(string text)
		{
		}
	}
	[Token(Token = "0x200024C")]
	public abstract class ButtonEventProcessorBase : MonoBehaviour
	{
		[Token(Token = "0x4000E63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ActiveBehaviour _target;

		[Token(Token = "0x17000055")]
		public ActiveBehaviour Target
		{
			[Token(Token = "0x600095F")]
			[Address(RVA = "0xC6923C", Offset = "0xC6923C", VA = "0xC6923C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000960")]
		[Address(RVA = "0xC69244", Offset = "0xC69244", VA = "0xC69244")]
		protected void Awake()
		{
		}

		[Token(Token = "0x6000961")]
		[Address(RVA = "0xC692D0", Offset = "0xC692D0", VA = "0xC692D0")]
		protected void Start()
		{
		}

		[Token(Token = "0x6000962")]
		[Address(RVA = "0xC69D30", Offset = "0xC69D30", VA = "0xC69D30")]
		protected void OnDestroy()
		{
		}

		[Token(Token = "0x6000963")]
		[Address(RVA = "0xC6A2A0", Offset = "0xC6A2A0", VA = "0xC6A2A0", Slot = "4")]
		protected virtual void onPositionChangeHandler(IValueable positionable)
		{
		}

		[Token(Token = "0x6000964")]
		[Address(RVA = "0xC6A2A4", Offset = "0xC6A2A4", VA = "0xC6A2A4", Slot = "5")]
		protected virtual void onPressHandler(IPressable pressable)
		{
		}

		[Token(Token = "0x6000965")]
		[Address(RVA = "0xC6A2A8", Offset = "0xC6A2A8", VA = "0xC6A2A8", Slot = "6")]
		protected virtual void onNormalHandler(IPressable pressable)
		{
		}

		[Token(Token = "0x6000966")]
		[Address(RVA = "0xC6A2AC", Offset = "0xC6A2AC", VA = "0xC6A2AC", Slot = "7")]
		protected virtual void onLongClickHandler(IClickable clickable)
		{
		}

		[Token(Token = "0x6000967")]
		[Address(RVA = "0xC6A2B0", Offset = "0xC6A2B0", VA = "0xC6A2B0", Slot = "8")]
		protected virtual void onClickHandler(IClickable clickable)
		{
		}

		[Token(Token = "0x6000968")]
		[Address(RVA = "0xC6A2B4", Offset = "0xC6A2B4", VA = "0xC6A2B4", Slot = "9")]
		protected virtual void onToggleOffHandler(IToggleable toggleable)
		{
		}

		[Token(Token = "0x6000969")]
		[Address(RVA = "0xC6A2B8", Offset = "0xC6A2B8", VA = "0xC6A2B8", Slot = "10")]
		protected virtual void onToggleOnHandler(IToggleable toggleable)
		{
		}

		[Token(Token = "0x600096A")]
		[Address(RVA = "0xC6A2BC", Offset = "0xC6A2BC", VA = "0xC6A2BC", Slot = "11")]
		protected virtual void disableChangedHandler(IDisable disable)
		{
		}

		[Token(Token = "0x600096B")]
		[Address(RVA = "0xC6A2C0", Offset = "0xC6A2C0", VA = "0xC6A2C0")]
		protected ButtonEventProcessorBase()
		{
		}
	}
	[Token(Token = "0x200024D")]
	[BehaviourInfo("Converts native IClickable (ex. click button) events to Unity Events.\nAdd this component to the gameObject that implements IClickable if you want to receive IClickable events as UnityEvents")]
	public class ClickableEventTrigger : EventTriggerBase<IClickable>
	{
		[Serializable]
		[Token(Token = "0x200024E")]
		public class ClickableEvent : UnityEvent<IClickable>
		{
			[Token(Token = "0x6000971")]
			[Address(RVA = "0xC6A6FC", Offset = "0xC6A6FC", VA = "0xC6A6FC")]
			public ClickableEvent()
			{
			}
		}

		[Token(Token = "0x4000E64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ClickableEvent onClick;

		[Token(Token = "0x4000E65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ClickableEvent onLongClick;

		[Token(Token = "0x600096C")]
		[Address(RVA = "0xC6A2C8", Offset = "0xC6A2C8", VA = "0xC6A2C8", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600096D")]
		[Address(RVA = "0xC6A45C", Offset = "0xC6A45C", VA = "0xC6A45C", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600096E")]
		[Address(RVA = "0xC6A5F4", Offset = "0xC6A5F4", VA = "0xC6A5F4")]
		private void onClickHandler(IClickable clickable)
		{
		}

		[Token(Token = "0x600096F")]
		[Address(RVA = "0xC6A654", Offset = "0xC6A654", VA = "0xC6A654")]
		private void onLongClickHandler(IClickable clickable)
		{
		}

		[Token(Token = "0x6000970")]
		[Address(RVA = "0xC6A6B4", Offset = "0xC6A6B4", VA = "0xC6A6B4")]
		public ClickableEventTrigger()
		{
		}
	}
	[Token(Token = "0x200024F")]
	[BehaviourInfo("Converts native IDraggable interface (ex. dragging a lever) events to Unity Events.\nAdd this component to the gameObject that implements IDraggable if you want to receive IDraggable events as UnityEvents")]
	public class DraggableEventTrigger : EventTriggerBase<IDraggable>
	{
		[Serializable]
		[Token(Token = "0x2000250")]
		public class DraggableEvent : UnityEvent<IDraggable>
		{
			[Token(Token = "0x6000978")]
			[Address(RVA = "0xC6AE08", Offset = "0xC6AE08", VA = "0xC6AE08")]
			public DraggableEvent()
			{
			}
		}

		[Token(Token = "0x4000E66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private DraggableEvent onDragStart;

		[Token(Token = "0x4000E67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private DraggableEvent onDrag;

		[Token(Token = "0x4000E68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private DraggableEvent onDragEnd;

		[Token(Token = "0x6000972")]
		[Address(RVA = "0xC6A744", Offset = "0xC6A744", VA = "0xC6A744", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000973")]
		[Address(RVA = "0xC6AA70", Offset = "0xC6AA70", VA = "0xC6AA70", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000974")]
		[Address(RVA = "0xC6ACA0", Offset = "0xC6ACA0", VA = "0xC6ACA0")]
		private void onDragStartHandler(IDraggable draggable)
		{
		}

		[Token(Token = "0x6000975")]
		[Address(RVA = "0xC6AD00", Offset = "0xC6AD00", VA = "0xC6AD00")]
		private void onDragHandler(IDraggable draggable)
		{
		}

		[Token(Token = "0x6000976")]
		[Address(RVA = "0xC6AD60", Offset = "0xC6AD60", VA = "0xC6AD60")]
		private void onDragEndHandler(IDraggable draggable)
		{
		}

		[Token(Token = "0x6000977")]
		[Address(RVA = "0xC6ADC0", Offset = "0xC6ADC0", VA = "0xC6ADC0")]
		public DraggableEventTrigger()
		{
		}
	}
	[Token(Token = "0x2000251")]
	public abstract class EventTriggerBase<T> : ActiveBehaviour where T : class
	{
		[Token(Token = "0x4000E69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private T _eventSource;

		[Token(Token = "0x17000056")]
		public T EventSource
		{
			[Token(Token = "0x6000979")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600097A")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x600097B")]
		protected EventTriggerBase()
		{
		}
	}
	[Token(Token = "0x2000252")]
	[BehaviourInfo(" Converts native IPressable (ex. press button) events to Unity Events.\nAdd this component to the gameObject that implements IPressable if you want to receive IPressable events as UnityEvents")]
	public class PressableEventTrigger : EventTriggerBase<IPressable>
	{
		[Serializable]
		[Token(Token = "0x2000253")]
		public class PressableEvent : UnityEvent<IPressable>
		{
			[Token(Token = "0x6000981")]
			[Address(RVA = "0xC6B284", Offset = "0xC6B284", VA = "0xC6B284")]
			public PressableEvent()
			{
			}
		}

		[Token(Token = "0x4000E6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private PressableEvent onPress;

		[Token(Token = "0x4000E6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private PressableEvent onNormal;

		[Token(Token = "0x600097C")]
		[Address(RVA = "0xC6AE50", Offset = "0xC6AE50", VA = "0xC6AE50", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x600097D")]
		[Address(RVA = "0xC6AFE4", Offset = "0xC6AFE4", VA = "0xC6AFE4", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600097E")]
		[Address(RVA = "0xC6B17C", Offset = "0xC6B17C", VA = "0xC6B17C")]
		private void onPressHandler(IPressable pressable)
		{
		}

		[Token(Token = "0x600097F")]
		[Address(RVA = "0xC6B1DC", Offset = "0xC6B1DC", VA = "0xC6B1DC")]
		private void onNormalHandler(IPressable pressable)
		{
		}

		[Token(Token = "0x6000980")]
		[Address(RVA = "0xC6B23C", Offset = "0xC6B23C", VA = "0xC6B23C")]
		public PressableEventTrigger()
		{
		}
	}
	[Token(Token = "0x2000254")]
	[BehaviourInfo("Converts native IToggleable interface (ex. toggling a button state) events to Unity Events.\nAdd this component to the gameObject that implements IToggleable if you want to receive IToggleable events as UnityEvents")]
	public class ToggleableEventTrigger : EventTriggerBase<IToggleable>
	{
		[Serializable]
		[Token(Token = "0x2000255")]
		public class ToggleableEvent : UnityEvent<IToggleable>
		{
			[Token(Token = "0x6000987")]
			[Address(RVA = "0xC6B700", Offset = "0xC6B700", VA = "0xC6B700")]
			public ToggleableEvent()
			{
			}
		}

		[Token(Token = "0x4000E6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ToggleableEvent onToggleOn;

		[Token(Token = "0x4000E6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ToggleableEvent onToggleOff;

		[Token(Token = "0x6000982")]
		[Address(RVA = "0xC6B2CC", Offset = "0xC6B2CC", VA = "0xC6B2CC", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000983")]
		[Address(RVA = "0xC6B460", Offset = "0xC6B460", VA = "0xC6B460", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000984")]
		[Address(RVA = "0xC6B5F8", Offset = "0xC6B5F8", VA = "0xC6B5F8")]
		private void onToggleOnHandler(IToggleable toggleable)
		{
		}

		[Token(Token = "0x6000985")]
		[Address(RVA = "0xC6B658", Offset = "0xC6B658", VA = "0xC6B658")]
		private void onToggleOffHandler(IToggleable toggleable)
		{
		}

		[Token(Token = "0x6000986")]
		[Address(RVA = "0xC6B6B8", Offset = "0xC6B6B8", VA = "0xC6B6B8")]
		public ToggleableEventTrigger()
		{
		}
	}
	[Token(Token = "0x2000256")]
	[BehaviourInfo("Converts native IValueable (ex. changing the position of a lever) events to Unity Events.\nAdd this component to the gameObject that implements IValueable if you want to receive IValueable events as UnityEvents")]
	public class ValueableEventTrigger : EventTriggerBase<IValueable>
	{
		[Serializable]
		[Token(Token = "0x2000257")]
		public class ValueableEvent : UnityEvent<IValueable>
		{
			[Token(Token = "0x600098C")]
			[Address(RVA = "0xC6BA98", Offset = "0xC6BA98", VA = "0xC6BA98")]
			public ValueableEvent()
			{
			}
		}

		[Serializable]
		[Token(Token = "0x2000258")]
		public class ValueableValueEvent : UnityEvent<float>
		{
			[Token(Token = "0x600098D")]
			[Address(RVA = "0xC6BAE0", Offset = "0xC6BAE0", VA = "0xC6BAE0")]
			public ValueableValueEvent()
			{
			}
		}

		[Token(Token = "0x4000E6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ValueableEvent valueableChanged;

		[Token(Token = "0x4000E6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Multiplies value sent by onPositionValueChanged event.")]
		[SerializeField]
		private float valueMultiplier;

		[Token(Token = "0x4000E70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private ValueableValueEvent valueableValueChanged;

		[Token(Token = "0x6000988")]
		[Address(RVA = "0xC6B748", Offset = "0xC6B748", VA = "0xC6B748", Slot = "7")]
		protected override void Start()
		{
		}

		[Token(Token = "0x6000989")]
		[Address(RVA = "0xC6B840", Offset = "0xC6B840", VA = "0xC6B840", Slot = "10")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x600098A")]
		[Address(RVA = "0xC6B938", Offset = "0xC6B938", VA = "0xC6B938")]
		private void onValueChangedHandler(IValueable valueable)
		{
		}

		[Token(Token = "0x600098B")]
		[Address(RVA = "0xC6BA48", Offset = "0xC6BA48", VA = "0xC6BA48")]
		public ValueableEventTrigger()
		{
		}
	}
	[Token(Token = "0x2000259")]
	[BehaviourInfo("Base for all IDraggable objects input controllers.")]
	public abstract class DragControllerBase : ActiveBehaviour
	{
		[Token(Token = "0x4000E71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Explicitly set the game object that implements IDraggable interface. If set to null Unity will try to find the proper object.")]
		private GameObject _targetObject;

		[Token(Token = "0x4000E72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IDraggable[] _targets;

		[Token(Token = "0x17000057")]
		protected IDraggable[] Targets
		{
			[Token(Token = "0x600098E")]
			[Address(RVA = "0xC6BB28", Offset = "0xC6BB28", VA = "0xC6BB28")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600098F")]
		[Address(RVA = "0xC6BB30", Offset = "0xC6BB30", VA = "0xC6BB30", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000990")]
		[Address(RVA = "0xC6BC18", Offset = "0xC6BC18", VA = "0xC6BC18")]
		protected DragControllerBase()
		{
		}
	}
	[Token(Token = "0x200025A")]
	[BehaviourInfo("Keyboard controller for all pressable objects\nUse it if you want to press/unpress IPressable behaviour with a keyboard.")]
	public class KeyboardPressController : PressControllerBase
	{
		[Token(Token = "0x4000E73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Key keyCode;

		[Token(Token = "0x6000991")]
		[Address(RVA = "0xC6BC20", Offset = "0xC6BC20", VA = "0xC6BC20")]
		private void Update()
		{
		}

		[Token(Token = "0x6000992")]
		[Address(RVA = "0xC6BE8C", Offset = "0xC6BE8C", VA = "0xC6BE8C")]
		public KeyboardPressController()
		{
		}
	}
	[Token(Token = "0x200025B")]
	[BehaviourInfo("Pointer Drag Controller for a circular gesture (Based on Unity Event System).\nUse it if you want to work with more advanced circular-motion gestures.")]
	public class PointerCircularDragController : DragControllerBase, IInitializePotentialDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x4000E74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _useMouse;

		[Token(Token = "0x4000E75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("The mouse button that will trigger the events.")]
		public PointerEventData.InputButton _mouseButton;

		[Token(Token = "0x4000E76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _useTouch;

		[Token(Token = "0x4000E77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool _useTracked;

		[Token(Token = "0x4000E78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Keyboard button that must be pressed in addition to the pointer.")]
		[SerializeField]
		private Key _modifier;

		[Token(Token = "0x4000E79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Use drag threshold.")]
		[SerializeField]
		private bool _useDragThreshold;

		[Token(Token = "0x4000E7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[Tooltip("Pointer sensitivity expressed in turns. More turns = less sensitivity.")]
		private float _turns;

		[Token(Token = "0x4000E7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		[Tooltip("Invert input.")]
		private bool _invert;

		[Token(Token = "0x4000E7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x41")]
		[Tooltip("Hide cursor on drag.")]
		[SerializeField]
		private bool _hideCursor;

		[Token(Token = "0x4000E7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[Tooltip(">Drag Center offset on game object local Z axis.")]
		[SerializeField]
		private float _dragCenterZOffset;

		[Token(Token = "0x4000E7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Camera _eventCamera;

		[Token(Token = "0x4000E7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private bool _prevCursorVisible;

		[Token(Token = "0x4000E80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x54")]
		private float _prevAngle;

		[Token(Token = "0x4000E81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private bool _isDragging;

		[Token(Token = "0x17000058")]
		private Vector3 DragCenter
		{
			[Token(Token = "0x6000993")]
			[Address(RVA = "0xC6BE9C", Offset = "0xC6BE9C", VA = "0xC6BE9C")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000059")]
		private Camera EventCamera
		{
			[Token(Token = "0x6000994")]
			[Address(RVA = "0xC6BECC", Offset = "0xC6BECC", VA = "0xC6BECC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000995")]
		[Address(RVA = "0xC6BF48", Offset = "0xC6BF48", VA = "0xC6BF48", Slot = "5")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6000996")]
		[Address(RVA = "0xC6BF60", Offset = "0xC6BF60", VA = "0xC6BF60")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x6000997")]
		[Address(RVA = "0xC6BF7C", Offset = "0xC6BF7C", VA = "0xC6BF7C", Slot = "11")]
		public void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000998")]
		[Address(RVA = "0xC6BF98", Offset = "0xC6BF98", VA = "0xC6BF98", Slot = "12")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x6000999")]
		[Address(RVA = "0xC6C308", Offset = "0xC6C308", VA = "0xC6C308", Slot = "14")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600099A")]
		[Address(RVA = "0xC6C4A0", Offset = "0xC6C4A0", VA = "0xC6C4A0", Slot = "13")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x600099B")]
		[Address(RVA = "0xC6C1FC", Offset = "0xC6C1FC", VA = "0xC6C1FC")]
		private float getMousePosAngle(Vector2 mousePos)
		{
			return default(float);
		}

		[Token(Token = "0x600099C")]
		[Address(RVA = "0xC6C0E8", Offset = "0xC6C0E8", VA = "0xC6C0E8")]
		protected bool checkPointer(PointerEventData eventData, bool checkModifier)
		{
			return default(bool);
		}

		[Token(Token = "0x600099D")]
		[Address(RVA = "0xC6C630", Offset = "0xC6C630", VA = "0xC6C630")]
		public PointerCircularDragController()
		{
		}
	}
	[Token(Token = "0x200025C")]
	[BehaviourInfo("Basic Pointer controller for all draggable objects (Based on Unity Event System).\nUse it if you want to work with mouse dragging gestures (like dragging a lever).")]
	public class PointerDragController : DragControllerBase, IInitializePotentialDragHandler, IEventSystemHandler, IBeginDragHandler, IEndDragHandler, IDragHandler
	{
		[Token(Token = "0x200025D")]
		public enum DragPlane
		{
			[Token(Token = "0x4000E96")]
			Right,
			[Token(Token = "0x4000E97")]
			Up,
			[Token(Token = "0x4000E98")]
			Forward
		}

		[Token(Token = "0x200025E")]
		public enum DragAxis
		{
			[Token(Token = "0x4000E9A")]
			Off,
			[Token(Token = "0x4000E9B")]
			On,
			[Token(Token = "0x4000E9C")]
			Inverted
		}

		[Token(Token = "0x4000E82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _useMouse;

		[Token(Token = "0x4000E83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("The mouse button that will trigger the events.")]
		public PointerEventData.InputButton _mouseButton;

		[Token(Token = "0x4000E84")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _useTouch;

		[Token(Token = "0x4000E85")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool _useTracked;

		[Token(Token = "0x4000E86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Keyboard button that must be pressed in addition to the pointer.")]
		[SerializeField]
		private Key _modifier;

		[Token(Token = "0x4000E87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		[Tooltip("Use drag threshold.")]
		private bool _useDragThreshold;

		[Token(Token = "0x4000E88")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		[Tooltip("Pointer sensitivity.")]
		private float _sensitivity;

		[Token(Token = "0x4000E89")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[Tooltip("Hide cursor on drag.")]
		[SerializeField]
		private bool _hideCursor;

		[Token(Token = "0x4000E8A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private DragPlane _dragPlane;

		[Token(Token = "0x4000E8B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Pointer delta on local X axis.")]
		[SerializeField]
		private DragAxis _xAxis;

		[Token(Token = "0x4000E8C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[Tooltip("Pointer delta on local Y axis.")]
		[SerializeField]
		private DragAxis _yAxis;

		[Token(Token = "0x4000E8D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Pointer delta on local Z axis.")]
		[SerializeField]
		private DragAxis _zAxis;

		[Token(Token = "0x4000E8E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Camera _eventCamera;

		[Token(Token = "0x4000E8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _prevCursorVisible;

		[Token(Token = "0x4000E90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _isDragging;

		[Token(Token = "0x4000E91")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x64")]
		private Vector3 _dragCenter;

		[Token(Token = "0x4000E92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Plane _rayDirPlane;

		[Token(Token = "0x4000E93")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		private Vector3 _prevLocalPoint;

		[Token(Token = "0x4000E94")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		private Vector3 _localDrag;

		[Token(Token = "0x1700005A")]
		private Camera EventCamera
		{
			[Token(Token = "0x600099E")]
			[Address(RVA = "0xC6C654", Offset = "0xC6C654", VA = "0xC6C654")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x600099F")]
		[Address(RVA = "0xC6C6D0", Offset = "0xC6C6D0", VA = "0xC6C6D0")]
		private void OnDrawGizmosSelected()
		{
		}

		[Token(Token = "0x60009A0")]
		[Address(RVA = "0xC6CFCC", Offset = "0xC6CFCC", VA = "0xC6CFCC", Slot = "11")]
		public void OnInitializePotentialDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009A1")]
		[Address(RVA = "0xC6D150", Offset = "0xC6D150", VA = "0xC6D150", Slot = "12")]
		public void OnBeginDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009A2")]
		[Address(RVA = "0xC6D360", Offset = "0xC6D360", VA = "0xC6D360", Slot = "14")]
		public void OnDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009A3")]
		[Address(RVA = "0xC6D674", Offset = "0xC6D674", VA = "0xC6D674", Slot = "13")]
		public void OnEndDrag(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009A4")]
		[Address(RVA = "0xC6CFB0", Offset = "0xC6CFB0", VA = "0xC6CFB0")]
		private float getValue(DragAxis axisMode, float val)
		{
			return default(float);
		}

		[Token(Token = "0x60009A5")]
		[Address(RVA = "0xC6D03C", Offset = "0xC6D03C", VA = "0xC6D03C")]
		protected bool checkPointer(PointerEventData eventData, bool checkModifier)
		{
			return default(bool);
		}

		[Token(Token = "0x60009A6")]
		[Address(RVA = "0xC6D79C", Offset = "0xC6D79C", VA = "0xC6D79C")]
		public PointerDragController()
		{
		}
	}
	[Token(Token = "0x200025F")]
	[BehaviourInfo("Pointer controller for all pressable objects. (Based on Unity Event System).\nUse it if you want to work with simple pressed/not pressed gesture.")]
	public class PointerPressController : PressControllerBase, IPointerDownHandler, IEventSystemHandler, IPointerUpHandler
	{
		[Token(Token = "0x4000E9D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _useMouse;

		[Token(Token = "0x4000E9E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[Tooltip("The mouse button that will trigger the events.")]
		public PointerEventData.InputButton _mouseButton;

		[Token(Token = "0x4000E9F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _useTouch;

		[Token(Token = "0x4000EA0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x31")]
		[SerializeField]
		private bool _useTracked;

		[Token(Token = "0x4000EA1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[Tooltip("Keyboard button that must be pressed in addition to the pointer.")]
		[SerializeField]
		private Key _modifier;

		[Token(Token = "0x4000EA2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private IPressable _target;

		[Token(Token = "0x60009A7")]
		[Address(RVA = "0xC6D840", Offset = "0xC6D840", VA = "0xC6D840", Slot = "4")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x60009A8")]
		[Address(RVA = "0xC6D848", Offset = "0xC6D848", VA = "0xC6D848", Slot = "11")]
		public void OnPointerDown(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009A9")]
		[Address(RVA = "0xC6DA48", Offset = "0xC6DA48", VA = "0xC6DA48", Slot = "12")]
		public void OnPointerUp(PointerEventData eventData)
		{
		}

		[Token(Token = "0x60009AA")]
		[Address(RVA = "0xC6D944", Offset = "0xC6D944", VA = "0xC6D944")]
		protected bool checkPointer(PointerEventData eventData)
		{
			return default(bool);
		}

		[Token(Token = "0x60009AB")]
		[Address(RVA = "0xC6DB44", Offset = "0xC6DB44", VA = "0xC6DB44")]
		public PointerPressController()
		{
		}
	}
	[Token(Token = "0x2000260")]
	public abstract class PressControllerBase : ActiveBehaviour
	{
		[Token(Token = "0x4000EA3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("Explicitly set the game object that implements IPressable interface. If set to null Unity will try to find the proper object.")]
		[SerializeField]
		private GameObject _targetObject;

		[Token(Token = "0x4000EA4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private IPressable[] _targets;

		[Token(Token = "0x1700005B")]
		protected IPressable[] Targets
		{
			[Token(Token = "0x60009AC")]
			[Address(RVA = "0xC6DB5C", Offset = "0xC6DB5C", VA = "0xC6DB5C")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x60009AD")]
		[Address(RVA = "0xC6DB64", Offset = "0xC6DB64", VA = "0xC6DB64", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x60009AE")]
		[Address(RVA = "0xC6BE94", Offset = "0xC6BE94", VA = "0xC6BE94")]
		protected PressControllerBase()
		{
		}
	}
	[Token(Token = "0x2000261")]
	public delegate void ClickEvent(IClickable clickable);
	[Token(Token = "0x2000262")]
	public interface IClickable
	{
		[Token(Token = "0x1400000D")]
		event ClickEvent clickEvent;

		[Token(Token = "0x1400000E")]
		event ClickEvent longClickEvent;
	}
	[Token(Token = "0x2000263")]
	public delegate void DisableEvent(IDisable disable);
	[Token(Token = "0x2000264")]
	public interface IDisable
	{
		[Token(Token = "0x1700005C")]
		bool IsDisabled
		{
			[Token(Token = "0x60009BD")]
			get;
			[Token(Token = "0x60009BE")]
			set;
		}

		[Token(Token = "0x1400000F")]
		event DisableEvent disableChangedEvent;
	}
	[Token(Token = "0x2000265")]
	public delegate void DragEvent(IDraggable draggable);
	[Token(Token = "0x2000266")]
	public interface IDraggable
	{
		[Token(Token = "0x1700005D")]
		float Value
		{
			[Token(Token = "0x60009C9")]
			get;
		}

		[Token(Token = "0x14000010")]
		event DragEvent dragStartEvent;

		[Token(Token = "0x14000011")]
		event DragEvent dragEvent;

		[Token(Token = "0x14000012")]
		event DragEvent dragEndEvent;

		[Token(Token = "0x60009CA")]
		void DragStart();

		[Token(Token = "0x60009CB")]
		void Drag(Vector3 delta);

		[Token(Token = "0x60009CC")]
		void DragEnd();
	}
	[Token(Token = "0x2000267")]
	public delegate void PressEvent(IPressable pressable);
	[Token(Token = "0x2000268")]
	public interface IPressable
	{
		[Token(Token = "0x1700005E")]
		bool IsPressed
		{
			[Token(Token = "0x60009D5")]
			get;
		}

		[Token(Token = "0x1700005F")]
		float PressTime
		{
			[Token(Token = "0x60009D8")]
			get;
		}

		[Token(Token = "0x14000013")]
		event PressEvent pressedEvent;

		[Token(Token = "0x14000014")]
		event PressEvent normalEvent;

		[Token(Token = "0x60009D6")]
		void Press();

		[Token(Token = "0x60009D7")]
		void Normal();
	}
	[Token(Token = "0x2000269")]
	public delegate void ToggleEvent(IToggleable toggleable);
	[Token(Token = "0x200026A")]
	public interface IToggleable
	{
		[Token(Token = "0x17000060")]
		bool IsToggledOn
		{
			[Token(Token = "0x60009E1")]
			get;
		}

		[Token(Token = "0x14000015")]
		event ToggleEvent toggleOnEvent;

		[Token(Token = "0x14000016")]
		event ToggleEvent toggleOffEvent;

		[Token(Token = "0x60009E2")]
		void ToggleOn();

		[Token(Token = "0x60009E3")]
		void ToggleOff();

		[Token(Token = "0x60009E4")]
		void Toggle();
	}
	[Token(Token = "0x200026B")]
	public delegate void ValueChangeEvent(IValueable valueable);
	[Token(Token = "0x200026C")]
	public interface IValueable
	{
		[Token(Token = "0x17000061")]
		float Value
		{
			[Token(Token = "0x60009E9")]
			get;
		}

		[Token(Token = "0x14000017")]
		event ValueChangeEvent valueChangeEvent;
	}
	[Token(Token = "0x200026D")]
	public static class ActivePackCommon
	{
		[Token(Token = "0x60009EC")]
		[Address(RVA = "0xC6C5C8", Offset = "0xC6C5C8", VA = "0xC6C5C8")]
		public static bool GetKey(Key key)
		{
			return default(bool);
		}

		[Token(Token = "0x60009ED")]
		[Address(RVA = "0xC6BDBC", Offset = "0xC6BDBC", VA = "0xC6BDBC")]
		public static bool GetKeyDown(Key key)
		{
			return default(bool);
		}

		[Token(Token = "0x60009EE")]
		[Address(RVA = "0xC6BE24", Offset = "0xC6BE24", VA = "0xC6BE24")]
		public static bool GetKeyUp(Key key)
		{
			return default(bool);
		}
	}
	[Token(Token = "0x200026E")]
	[BehaviourInfo(" A color changer that uses PropertyBlock to change material colors efficiently")]
	public class ColorChanger : MonoBehaviour
	{
		[Token(Token = "0x4000EA5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color ColorOff;

		[Token(Token = "0x4000EA6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int _ColorId;

		[Token(Token = "0x4000EA7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Tooltip("The color that original texture base color will be switched to.")]
		public Color _color;

		[Token(Token = "0x4000EA8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[Tooltip("Renderers whose materials colors will be changed")]
		[SerializeField]
		private MeshRenderer[] _renderers;

		[Token(Token = "0x4000EA9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[Token(Token = "0x60009EF")]
		[Address(RVA = "0xC6DDCC", Offset = "0xC6DDCC", VA = "0xC6DDCC")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x60009F0")]
		[Address(RVA = "0xC6DE58", Offset = "0xC6DE58", VA = "0xC6DE58")]
		private void Awake()
		{
		}

		[Token(Token = "0x60009F1")]
		[Address(RVA = "0xC6DEB8", Offset = "0xC6DEB8", VA = "0xC6DEB8")]
		private void Start()
		{
		}

		[Token(Token = "0x60009F2")]
		[Address(RVA = "0xC6DDEC", Offset = "0xC6DDEC", VA = "0xC6DDEC")]
		private void setColor(Color color)
		{
		}

		[Token(Token = "0x60009F3")]
		[Address(RVA = "0xC6DED0", Offset = "0xC6DED0", VA = "0xC6DED0")]
		private void setColor(MeshRenderer renderer, Color color)
		{
		}

		[Token(Token = "0x60009F4")]
		[Address(RVA = "0xC6DF78", Offset = "0xC6DF78", VA = "0xC6DF78")]
		public ColorChanger()
		{
		}
	}
	[Token(Token = "0x200026F")]
	[BehaviourInfo("Emission controller that react on ActiveObject events and uses PropertyBlock to change material emission efficiently.\nUsed to add lighting to the buttons decals.")]
	public class EmissionController : ButtonEventProcessorBase
	{
		[Token(Token = "0x4000EAA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly Color ColorOff;

		[Token(Token = "0x4000EAB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private static readonly int _EmissiveIntensity;

		[Token(Token = "0x4000EAC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x14")]
		private static readonly int _EmissiveColor;

		[Token(Token = "0x4000EAD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private static readonly int _EmissionColor;

		[Token(Token = "0x4000EAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private MaterialPropertyBlock _materialPropertyBlock;

		[Token(Token = "0x4000EAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("Decals emission color when the button is pressed. Black means no emission. Transparent means no emission color change on the event.")]
		private Color _pressedColor;

		[Token(Token = "0x4000EB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Tooltip("Decals emission color when the button is in normal not pressed state. Black means no emission. Transparent means no emission color change on the event.")]
		[SerializeField]
		private Color _normalColor;

		[Token(Token = "0x4000EB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Tooltip("Decals emission color when the button position is changing.  The color will stay for some duration and will be reverted back. Black means no emission. Transparent means no emission color change on the event.")]
		[SerializeField]
		private Color _positionChangedColor;

		[Token(Token = "0x4000EB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Tooltip("For how long single position change should change the emission color. It will be reverted back after the time.")]
		[SerializeField]
		private float _positionChangedDuration;

		[Token(Token = "0x4000EB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x5C")]
		[Tooltip("Decals emission color on button click. The color will stay for some duration and will be reverted back. Black means no emission. Transparent means no emission color change on the event.")]
		[SerializeField]
		private Color _clickColor;

		[Token(Token = "0x4000EB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Tooltip("For how long single click event should change the emission color. It will be reverted back after the time.")]
		[SerializeField]
		private float _clickDuration;

		[Token(Token = "0x4000EB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[Tooltip("Decals emission color on button long click. The color will stay for some duration and will be reverted back. Black means no emission. Transparent means no emission color change on the event.")]
		[SerializeField]
		private Color _longClickColor;

		[Token(Token = "0x4000EB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		[Tooltip("For how long single long click event should change the emission color. It will be reverted back after the time.")]
		private float _longClickDuration;

		[Token(Token = "0x4000EB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		[Tooltip("Decals emission color when the button is in toggled on state. Black means no emission. Transparent means no emission color change on the event.")]
		[SerializeField]
		private Color _toggleOnColor;

		[Token(Token = "0x4000EB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		[Tooltip("Decals emission color when the button is toggled off state. Black means no emission. Transparent means no emission color change on the event.")]
		private Color _toggleOffColor;

		[Token(Token = "0x4000EB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		[SerializeField]
		[Tooltip("Decals emission color when the button is disabled. Black means no emission. Transparent means no emission color change on the event.")]
		private Color _disabledColor;

		[Token(Token = "0x4000EBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private MeshRenderer[] _renderers;

		[Token(Token = "0x4000EBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		protected float _eventDuration;

		[Token(Token = "0x4000EBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC4")]
		protected float _eventAge;

		[Token(Token = "0x4000EBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		protected bool _isDirty;

		[Token(Token = "0x4000EBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC9")]
		private bool _isPressed;

		[Token(Token = "0x4000EBF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCA")]
		private bool _isToggledOn;

		[Token(Token = "0x4000EC0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCB")]
		private bool _isDisable;

		[Token(Token = "0x4000EC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Color _curStateColor;

		[Token(Token = "0x4000EC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Color _curEventColor;

		[Token(Token = "0x60009F6")]
		[Address(RVA = "0xC6E054", Offset = "0xC6E054", VA = "0xC6E054")]
		public void SetStateLight(Color color)
		{
		}

		[Token(Token = "0x60009F7")]
		[Address(RVA = "0xC6E068", Offset = "0xC6E068", VA = "0xC6E068")]
		public void SetEventLight(Color color, float duration)
		{
		}

		[Token(Token = "0x60009F8")]
		[Address(RVA = "0xC6E084", Offset = "0xC6E084", VA = "0xC6E084")]
		protected void Reset()
		{
		}

		[Token(Token = "0x60009F9")]
		[Address(RVA = "0xC6E124", Offset = "0xC6E124", VA = "0xC6E124")]
		protected void OnValidate()
		{
		}

		[Token(Token = "0x60009FA")]
		[Address(RVA = "0xC6E294", Offset = "0xC6E294", VA = "0xC6E294")]
		protected new void Awake()
		{
		}

		[Token(Token = "0x60009FB")]
		[Address(RVA = "0xC6E328", Offset = "0xC6E328", VA = "0xC6E328")]
		protected new void Start()
		{
		}

		[Token(Token = "0x60009FC")]
		[Address(RVA = "0xC6E50C", Offset = "0xC6E50C", VA = "0xC6E50C")]
		protected void Update()
		{
		}

		[Token(Token = "0x60009FD")]
		[Address(RVA = "0xC6E17C", Offset = "0xC6E17C", VA = "0xC6E17C")]
		private void updateStateEmission()
		{
		}

		[Token(Token = "0x60009FE")]
		[Address(RVA = "0xC6E874", Offset = "0xC6E874", VA = "0xC6E874", Slot = "5")]
		protected override void onPressHandler(IPressable pressable)
		{
		}

		[Token(Token = "0x60009FF")]
		[Address(RVA = "0xC6E880", Offset = "0xC6E880", VA = "0xC6E880", Slot = "6")]
		protected override void onNormalHandler(IPressable pressable)
		{
		}

		[Token(Token = "0x6000A00")]
		[Address(RVA = "0xC6E888", Offset = "0xC6E888", VA = "0xC6E888", Slot = "4")]
		protected override void onPositionChangeHandler(IValueable positionable)
		{
		}

		[Token(Token = "0x6000A01")]
		[Address(RVA = "0xC6E934", Offset = "0xC6E934", VA = "0xC6E934", Slot = "8")]
		protected override void onClickHandler(IClickable clickable)
		{
		}

		[Token(Token = "0x6000A02")]
		[Address(RVA = "0xC6E944", Offset = "0xC6E944", VA = "0xC6E944", Slot = "7")]
		protected override void onLongClickHandler(IClickable clickable)
		{
		}

		[Token(Token = "0x6000A03")]
		[Address(RVA = "0xC6E954", Offset = "0xC6E954", VA = "0xC6E954", Slot = "10")]
		protected override void onToggleOnHandler(IToggleable toggleable)
		{
		}

		[Token(Token = "0x6000A04")]
		[Address(RVA = "0xC6E960", Offset = "0xC6E960", VA = "0xC6E960", Slot = "9")]
		protected override void onToggleOffHandler(IToggleable toggleable)
		{
		}

		[Token(Token = "0x6000A05")]
		[Address(RVA = "0xC6E968", Offset = "0xC6E968", VA = "0xC6E968", Slot = "11")]
		protected override void disableChangedHandler(IDisable disable)
		{
		}

		[Token(Token = "0x6000A06")]
		[Address(RVA = "0xC6E898", Offset = "0xC6E898", VA = "0xC6E898")]
		private void setEventLightIfOpaque(Color color, float duration)
		{
		}

		[Token(Token = "0x6000A07")]
		[Address(RVA = "0xC6E5B8", Offset = "0xC6E5B8", VA = "0xC6E5B8")]
		private void setLightColor(Color color)
		{
		}

		[Token(Token = "0x6000A08")]
		[Address(RVA = "0xC6EA1C", Offset = "0xC6EA1C", VA = "0xC6EA1C")]
		public EmissionController()
		{
		}
	}
	[Token(Token = "0x2000270")]
	[RequireComponent(typeof(Animator))]
	[BehaviourInfo("Animates GameObject that implements IValueable interface by using Playables and AnimationClips.")]
	public class ValueAnimator : MonoBehaviour
	{
		[Serializable]
		[Token(Token = "0x2000271")]
		internal struct VecBool3
		{
			[Token(Token = "0x4000ED2")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public bool x;

			[Token(Token = "0x4000ED3")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x1")]
			public bool y;

			[Token(Token = "0x4000ED4")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x2")]
			public bool z;
		}

		[Token(Token = "0x4000EC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 1f)]
		[SerializeField]
		[Tooltip("How smoothly the change of position should be animated (how long it's gonna take for animation to go from 0 to 1).")]
		private float _animationSmoothing;

		[Token(Token = "0x4000EC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		[Tooltip("AnimationClip that will be used for the animation.")]
		private AnimationClip _animationClip;

		[Token(Token = "0x4000EC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		[Tooltip("Should animation be inverted that is go from 1 to 0.")]
		private bool _invert;

		[Token(Token = "0x4000EC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		[Tooltip("Freeze a position on selected axis.")]
		private VecBool3 _freezePosition;

		[Token(Token = "0x4000EC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		[Tooltip("Make animation postion relative.")]
		private VecBool3 _relativePosition;

		[Token(Token = "0x4000EC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float _animClipRangeMin;

		[Token(Token = "0x4000EC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private float _animClipRangeMax;

		[Token(Token = "0x4000ECA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float _targetTime;

		[Token(Token = "0x4000ECB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float _time;

		[Token(Token = "0x4000ECC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private IValueable _target;

		[Token(Token = "0x4000ECD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private PlayableGraph _playableGraph;

		[Token(Token = "0x4000ECE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private AnimationClipPlayable _clipPlayable;

		[Token(Token = "0x4000ECF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private float _timeVel;

		[Token(Token = "0x4000ED0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		private bool _isDirty;

		[Token(Token = "0x4000ED1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private Vector3 _initialPosition;

		[Token(Token = "0x17000062")]
		public float TargetTime
		{
			[Token(Token = "0x6000A0A")]
			[Address(RVA = "0xC6EBB8", Offset = "0xC6EBB8", VA = "0xC6EBB8")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A0B")]
			[Address(RVA = "0xC6EBC0", Offset = "0xC6EBC0", VA = "0xC6EBC0")]
			set
			{
			}
		}

		[Token(Token = "0x17000063")]
		public float Time
		{
			[Token(Token = "0x6000A0C")]
			[Address(RVA = "0xC6EE80", Offset = "0xC6EE80", VA = "0xC6EE80")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A0D")]
			[Address(RVA = "0xC6EC18", Offset = "0xC6EC18", VA = "0xC6EC18")]
			private set
			{
			}
		}

		[Token(Token = "0x6000A0E")]
		[Address(RVA = "0xC6EE88", Offset = "0xC6EE88", VA = "0xC6EE88")]
		private void OnValidate()
		{
		}

		[Token(Token = "0x6000A0F")]
		[Address(RVA = "0xC6F0BC", Offset = "0xC6F0BC", VA = "0xC6F0BC")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A10")]
		[Address(RVA = "0xC6F130", Offset = "0xC6F130", VA = "0xC6F130")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A11")]
		[Address(RVA = "0xC6F294", Offset = "0xC6F294", VA = "0xC6F294")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A12")]
		[Address(RVA = "0xC6F38C", Offset = "0xC6F38C", VA = "0xC6F38C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A13")]
		[Address(RVA = "0xC6EFBC", Offset = "0xC6EFBC", VA = "0xC6EFBC")]
		private void setupAnimationGraph()
		{
		}

		[Token(Token = "0x6000A14")]
		[Address(RVA = "0xC6EFB0", Offset = "0xC6EFB0", VA = "0xC6EFB0")]
		private void releaseAnimationGraph()
		{
		}

		[Token(Token = "0x6000A15")]
		[Address(RVA = "0xC6F430", Offset = "0xC6F430", VA = "0xC6F430")]
		private void onPositionChanged(IValueable valueable)
		{
		}

		[Token(Token = "0x6000A16")]
		[Address(RVA = "0xC6F51C", Offset = "0xC6F51C", VA = "0xC6F51C")]
		public ValueAnimator()
		{
		}
	}
}
namespace BigBlit.ActivePack.Buttons
{
	[Token(Token = "0x2000272")]
	public class EnvSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4000ED5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material[] _skyBoxes;

		[Token(Token = "0x4000ED6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ReflectionProbe _probe;

		[Token(Token = "0x4000ED7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private int _activeEnvId;

		[Token(Token = "0x6000A17")]
		[Address(RVA = "0xC6F538", Offset = "0xC6F538", VA = "0xC6F538")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A18")]
		[Address(RVA = "0xC6F55C", Offset = "0xC6F55C", VA = "0xC6F55C")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A19")]
		[Address(RVA = "0xC6F5F0", Offset = "0xC6F5F0", VA = "0xC6F5F0")]
		public EnvSwitcher()
		{
		}
	}
	[Token(Token = "0x2000273")]
	[RequireComponent(typeof(CharacterController))]
	public class FPSController : MonoBehaviour
	{
		[Token(Token = "0x4000ED8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private InputActionAsset _actions;

		[Token(Token = "0x4000ED9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private string _lookActionPath;

		[Token(Token = "0x4000EDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private string _useActionPath;

		[Token(Token = "0x4000EDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private string _moveActionPath;

		[Token(Token = "0x4000EDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private string _pointerTogglePath;

		[Token(Token = "0x4000EDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private string _controllTogglePath;

		[Token(Token = "0x4000EDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private string _runModifierPath;

		[Token(Token = "0x4000EDF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private InputAction _lookAction;

		[Token(Token = "0x4000EE0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private InputAction _useAction;

		[Token(Token = "0x4000EE1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private InputAction _moveAction;

		[Token(Token = "0x4000EE2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private InputAction _pointerToggleAction;

		[Token(Token = "0x4000EE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		private InputAction _controllToggleAction;

		[Token(Token = "0x4000EE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		private InputAction _runModifierAction;

		[Token(Token = "0x4000EE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		[SerializeField]
		private Camera playerCamera;

		[Token(Token = "0x4000EE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[Range(0.01f, 1f)]
		private float _smoothTime;

		[Token(Token = "0x4000EE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		[SerializeField]
		private float walkingSpeed;

		[Token(Token = "0x4000EE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		[SerializeField]
		private float runningSpeed;

		[Token(Token = "0x4000EE9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x94")]
		[SerializeField]
		private float lookSpeed;

		[Token(Token = "0x4000EEA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float lookXLimit;

		[Token(Token = "0x4000EEB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		[SerializeField]
		private bool _pointerEnable;

		[Token(Token = "0x4000EEC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9D")]
		[SerializeField]
		private bool _controllerEnable;

		[Token(Token = "0x4000EED")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9E")]
		[SerializeField]
		private bool _run;

		[Token(Token = "0x4000EEE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9F")]
		[SerializeField]
		private bool softwareCursor;

		[Token(Token = "0x4000EEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		[SerializeField]
		private Texture2D _cursorTexture;

		[Token(Token = "0x4000EF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		[SerializeField]
		private Texture2D _cursorTextureDown;

		[Token(Token = "0x4000EF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private Vector2 _mouseRotValues;

		[Token(Token = "0x4000EF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private Vector2 _mouseSmootingVel;

		[Token(Token = "0x4000EF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private CharacterController characterController;

		[Token(Token = "0x4000EF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC8")]
		private Vector3 moveDirection;

		[Token(Token = "0x4000EF5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD4")]
		private float rotationX;

		[Token(Token = "0x4000EF6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool canMove;

		[Token(Token = "0x6000A1A")]
		[Address(RVA = "0xC6F5F8", Offset = "0xC6F5F8", VA = "0xC6F5F8")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A1B")]
		[Address(RVA = "0xC6F774", Offset = "0xC6F774", VA = "0xC6F774")]
		private void OnEnable()
		{
		}

		[Token(Token = "0x6000A1C")]
		[Address(RVA = "0xC6F7FC", Offset = "0xC6F7FC", VA = "0xC6F7FC")]
		private void OnDisable()
		{
		}

		[Token(Token = "0x6000A1D")]
		[Address(RVA = "0xC6F868", Offset = "0xC6F868", VA = "0xC6F868")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A1E")]
		[Address(RVA = "0xC6FD1C", Offset = "0xC6FD1C", VA = "0xC6FD1C")]
		private bool wasPointerReleased()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A1F")]
		[Address(RVA = "0xC6FD00", Offset = "0xC6FD00", VA = "0xC6FD00")]
		private bool wasPointerPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A20")]
		[Address(RVA = "0xC6FD54", Offset = "0xC6FD54", VA = "0xC6FD54")]
		private bool wasPointerTogglePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A21")]
		[Address(RVA = "0xC6FD70", Offset = "0xC6FD70", VA = "0xC6FD70")]
		private bool wasControllerTogglePressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A22")]
		[Address(RVA = "0xC6FD38", Offset = "0xC6FD38", VA = "0xC6FD38")]
		private bool isRunModifierPressed()
		{
			return default(bool);
		}

		[Token(Token = "0x6000A23")]
		[Address(RVA = "0xC6F64C", Offset = "0xC6F64C", VA = "0xC6F64C")]
		private void setupInputs()
		{
		}

		[Token(Token = "0x6000A24")]
		[Address(RVA = "0xC6FE34", Offset = "0xC6FE34", VA = "0xC6FE34")]
		private float getVerticalAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000A25")]
		[Address(RVA = "0xC6FE8C", Offset = "0xC6FE8C", VA = "0xC6FE8C")]
		private float getHorizontalAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000A26")]
		[Address(RVA = "0xC6FD8C", Offset = "0xC6FD8C", VA = "0xC6FD8C")]
		private float getPointerXAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000A27")]
		[Address(RVA = "0xC6FDDC", Offset = "0xC6FDDC", VA = "0xC6FDDC")]
		private float getPointerYAxis()
		{
			return default(float);
		}

		[Token(Token = "0x6000A28")]
		[Address(RVA = "0xC6FEDC", Offset = "0xC6FEDC", VA = "0xC6FEDC")]
		public FPSController()
		{
		}
	}
	[Token(Token = "0x2000274")]
	public class MaterialSwitcher : MonoBehaviour
	{
		[Token(Token = "0x4000EF7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Material[] _materialsSet1;

		[Token(Token = "0x4000EF8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Material[] _materialsSet2;

		[Token(Token = "0x4000EF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Transform[] _rootsSet1;

		[Token(Token = "0x4000EFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private Transform[] _rootsSet2;

		[Token(Token = "0x4000EFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private List<Renderer[]> _setsCache1;

		[Token(Token = "0x4000EFC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private List<Renderer[]> _setsCache2;

		[Token(Token = "0x4000EFD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private int _selSetId;

		[Token(Token = "0x6000A29")]
		[Address(RVA = "0xC6FF5C", Offset = "0xC6FF5C", VA = "0xC6FF5C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A2A")]
		[Address(RVA = "0xC6FF60", Offset = "0xC6FF60", VA = "0xC6FF60")]
		private void cacheSets()
		{
		}

		[Token(Token = "0x6000A2B")]
		[Address(RVA = "0xC700B0", Offset = "0xC700B0", VA = "0xC700B0")]
		private void addToCache(Transform transform, ref List<Renderer[]> set)
		{
		}

		[Token(Token = "0x6000A2C")]
		[Address(RVA = "0xC70188", Offset = "0xC70188", VA = "0xC70188")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A2D")]
		[Address(RVA = "0xC701B4", Offset = "0xC701B4", VA = "0xC701B4")]
		private void selectNextSet()
		{
		}

		[Token(Token = "0x6000A2E")]
		[Address(RVA = "0xC704EC", Offset = "0xC704EC", VA = "0xC704EC")]
		private void shuffleMaterials()
		{
		}

		[Token(Token = "0x6000A2F")]
		[Address(RVA = "0xC70834", Offset = "0xC70834", VA = "0xC70834")]
		public MaterialSwitcher()
		{
		}
	}
	[Token(Token = "0x2000275")]
	[RequireComponent(typeof(TextMesh))]
	public class TextMeshController : MonoBehaviour
	{
		[Token(Token = "0x4000EFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string _text;

		[Token(Token = "0x4000EFF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private float _duration;

		[Token(Token = "0x4000F00")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		private float _curDuration;

		[Token(Token = "0x4000F01")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool _hasText;

		[Token(Token = "0x4000F02")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		private bool _started;

		[Token(Token = "0x4000F03")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private TextMesh _textMesh;

		[Token(Token = "0x6000A30")]
		[Address(RVA = "0xC708D4", Offset = "0xC708D4", VA = "0xC708D4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000A31")]
		[Address(RVA = "0xC70924", Offset = "0xC70924", VA = "0xC70924")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A32")]
		[Address(RVA = "0xC70930", Offset = "0xC70930", VA = "0xC70930")]
		private void Update()
		{
		}

		[Token(Token = "0x6000A33")]
		[Address(RVA = "0xC709C4", Offset = "0xC709C4", VA = "0xC709C4")]
		public void OnChangeText(IPressable eventSource)
		{
		}

		[Token(Token = "0x6000A34")]
		[Address(RVA = "0xC70B54", Offset = "0xC70B54", VA = "0xC70B54")]
		public void OnChangeText(IClickable eventSource)
		{
		}

		[Token(Token = "0x6000A35")]
		[Address(RVA = "0xC70BD4", Offset = "0xC70BD4", VA = "0xC70BD4")]
		public void OnChangeText(IToggleable eventSource)
		{
		}

		[Token(Token = "0x6000A36")]
		[Address(RVA = "0xC70A44", Offset = "0xC70A44", VA = "0xC70A44")]
		private void processEvent(Component component)
		{
		}

		[Token(Token = "0x6000A37")]
		[Address(RVA = "0xC70C54", Offset = "0xC70C54", VA = "0xC70C54")]
		public TextMeshController()
		{
		}
	}
	[Token(Token = "0x2000276")]
	[BehaviourInfo("Implements a button switch behavior that toggles the state of the toggle buttons.\n +Use it to drive/controlls toggle buttons states so they work as a group (ex. If one is on, others are off)")]
	public class ButtonSwitch : MonoBehaviour
	{
		[Token(Token = "0x4000F04")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private List<ToggleButton> _buttons;

		[Token(Token = "0x4000F05")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private ToggleButton _toggledButton;

		[Token(Token = "0x17000064")]
		public ToggleButton ToggledButton
		{
			[Token(Token = "0x6000A38")]
			[Address(RVA = "0xC70CA4", Offset = "0xC70CA4", VA = "0xC70CA4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000A39")]
		[Address(RVA = "0xC70CAC", Offset = "0xC70CAC", VA = "0xC70CAC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000A3A")]
		[Address(RVA = "0xC71144", Offset = "0xC71144", VA = "0xC71144")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000A3B")]
		[Address(RVA = "0xC7147C", Offset = "0xC7147C", VA = "0xC7147C")]
		private void Button_toggleOnEvent(IToggleable toggleable)
		{
		}

		[Token(Token = "0x6000A3C")]
		[Address(RVA = "0xC71544", Offset = "0xC71544", VA = "0xC71544")]
		private void Button_toggleOffEvent(IToggleable toggleable)
		{
		}

		[Token(Token = "0x6000A3D")]
		[Address(RVA = "0xC71610", Offset = "0xC71610", VA = "0xC71610")]
		public ButtonSwitch()
		{
		}
	}
	[Token(Token = "0x2000277")]
	[BehaviourInfo("Basic clickable Button. Implements click and long click behaviour.Use it if you want a simple click button (not toggleable!). Works wth Press controller.")]
	public class ClickButton : PressButton, IClickable
	{
		[Token(Token = "0x4000F06")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private bool _isClickable;

		[Token(Token = "0x4000F07")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		[Tooltip("Maximum time between press and depress during which the click event will be recognized.")]
		private float _clickMaxDelay;

		[Token(Token = "0x4000F08")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[Tooltip("Time that has to pass after button press to trigger the long click event.")]
		[SerializeField]
		private float _longClickDuration;

		[Token(Token = "0x4000F0B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private bool _processingClick;

		[Token(Token = "0x17000065")]
		public bool IsClickable
		{
			[Token(Token = "0x6000A3E")]
			[Address(RVA = "0xC7168C", Offset = "0xC7168C", VA = "0xC7168C")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A3F")]
			[Address(RVA = "0xC71694", Offset = "0xC71694", VA = "0xC71694")]
			set
			{
			}
		}

		[Token(Token = "0x14000018")]
		public event ClickEvent clickEvent
		{
			[Token(Token = "0x6000A40")]
			[Address(RVA = "0xC716A0", Offset = "0xC716A0", VA = "0xC716A0", Slot = "33")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A41")]
			[Address(RVA = "0xC7173C", Offset = "0xC7173C", VA = "0xC7173C", Slot = "34")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x14000019")]
		public event ClickEvent longClickEvent
		{
			[Token(Token = "0x6000A42")]
			[Address(RVA = "0xC717D8", Offset = "0xC717D8", VA = "0xC717D8", Slot = "35")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A43")]
			[Address(RVA = "0xC71874", Offset = "0xC71874", VA = "0xC71874", Slot = "36")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000A44")]
		[Address(RVA = "0xC71910", Offset = "0xC71910", VA = "0xC71910", Slot = "5")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6000A45")]
		[Address(RVA = "0xC71954", Offset = "0xC71954", VA = "0xC71954", Slot = "4")]
		protected override void Reset()
		{
		}

		[Token(Token = "0x6000A46")]
		[Address(RVA = "0xC71964", Offset = "0xC71964", VA = "0xC71964", Slot = "37")]
		protected virtual void Update()
		{
		}

		[Token(Token = "0x6000A47")]
		[Address(RVA = "0xC719D4", Offset = "0xC719D4", VA = "0xC719D4", Slot = "38")]
		protected virtual void OnClick()
		{
		}

		[Token(Token = "0x6000A48")]
		[Address(RVA = "0xC719F4", Offset = "0xC719F4", VA = "0xC719F4", Slot = "39")]
		protected virtual void OnLongClick()
		{
		}

		[Token(Token = "0x6000A49")]
		[Address(RVA = "0xC71A14", Offset = "0xC71A14", VA = "0xC71A14", Slot = "30")]
		protected override void OnPress()
		{
		}

		[Token(Token = "0x6000A4A")]
		[Address(RVA = "0xC71A2C", Offset = "0xC71A2C", VA = "0xC71A2C", Slot = "31")]
		protected override void OnNormal()
		{
		}

		[Token(Token = "0x6000A4B")]
		[Address(RVA = "0xC71AC4", Offset = "0xC71AC4", VA = "0xC71AC4")]
		public ClickButton()
		{
		}
	}
	[Token(Token = "0x2000278")]
	[BehaviourInfo("Basic pressable Button. Implements button press behaviour. Use it if you want button that is pushed when pressed. Works wth Press controller.")]
	public class PressButton : ActiveBehaviour, IValueable, IPressable, IDisable
	{
		[Token(Token = "0x4000F0C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		[Tooltip("Is button pressable.")]
		private bool _isPressable;

		[Token(Token = "0x4000F0D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x19")]
		[SerializeField]
		private bool _isDisabled;

		[Token(Token = "0x4000F0E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static readonly float PressedInValue;

		[Token(Token = "0x4000F0F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public static readonly float PressedOutValue;

		[Token(Token = "0x4000F10")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		private float _pressStateTime;

		[Token(Token = "0x4000F11")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool _isPressed;

		[Token(Token = "0x17000066")]
		public bool IsPressable
		{
			[Token(Token = "0x6000A4C")]
			[Address(RVA = "0xC71B40", Offset = "0xC71B40", VA = "0xC71B40")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A4D")]
			[Address(RVA = "0xC71B48", Offset = "0xC71B48", VA = "0xC71B48")]
			set
			{
			}
		}

		[Token(Token = "0x17000067")]
		public virtual bool IsPressed
		{
			[Token(Token = "0x6000A4E")]
			[Address(RVA = "0xC71B54", Offset = "0xC71B54", VA = "0xC71B54", Slot = "26")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000068")]
		public virtual bool IsNormal
		{
			[Token(Token = "0x6000A4F")]
			[Address(RVA = "0xC71B5C", Offset = "0xC71B5C", VA = "0xC71B5C", Slot = "27")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000069")]
		public float PressTime
		{
			[Token(Token = "0x6000A50")]
			[Address(RVA = "0xC719B4", Offset = "0xC719B4", VA = "0xC719B4", Slot = "21")]
			get
			{
				return default(float);
			}
		}

		[Token(Token = "0x1700006A")]
		public virtual float Value
		{
			[Token(Token = "0x6000A51")]
			[Address(RVA = "0xC71B6C", Offset = "0xC71B6C", VA = "0xC71B6C", Slot = "28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A52")]
			[Address(RVA = "0xC71BD8", Offset = "0xC71BD8", VA = "0xC71BD8", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x1700006B")]
		public bool IsDisabled
		{
			[Token(Token = "0x6000A56")]
			[Address(RVA = "0xC71D8C", Offset = "0xC71D8C", VA = "0xC71D8C", Slot = "24")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000A57")]
			[Address(RVA = "0xC71D94", Offset = "0xC71D94", VA = "0xC71D94", Slot = "25")]
			set
			{
			}
		}

		[Token(Token = "0x1400001A")]
		public event DisableEvent disableChangedEvent
		{
			[Token(Token = "0x6000A54")]
			[Address(RVA = "0xC71C54", Offset = "0xC71C54", VA = "0xC71C54", Slot = "22")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A55")]
			[Address(RVA = "0xC71CF0", Offset = "0xC71CF0", VA = "0xC71CF0", Slot = "23")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001B")]
		public event PressEvent pressedEvent
		{
			[Token(Token = "0x6000A58")]
			[Address(RVA = "0xC71DF0", Offset = "0xC71DF0", VA = "0xC71DF0", Slot = "14")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A59")]
			[Address(RVA = "0xC71E8C", Offset = "0xC71E8C", VA = "0xC71E8C", Slot = "15")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001C")]
		public event PressEvent normalEvent
		{
			[Token(Token = "0x6000A5A")]
			[Address(RVA = "0xC71F28", Offset = "0xC71F28", VA = "0xC71F28", Slot = "16")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A5B")]
			[Address(RVA = "0xC71FC4", Offset = "0xC71FC4", VA = "0xC71FC4", Slot = "17")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001D")]
		public event ValueChangeEvent valueChangeEvent
		{
			[Token(Token = "0x6000A5C")]
			[Address(RVA = "0xC72060", Offset = "0xC72060", VA = "0xC72060", Slot = "12")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A5D")]
			[Address(RVA = "0xC720FC", Offset = "0xC720FC", VA = "0xC720FC", Slot = "13")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000A53")]
		[Address(RVA = "0xC71944", Offset = "0xC71944", VA = "0xC71944", Slot = "5")]
		protected override void OnValidate()
		{
		}

		[Token(Token = "0x6000A5E")]
		[Address(RVA = "0xC71C34", Offset = "0xC71C34", VA = "0xC71C34", Slot = "19")]
		public void Press()
		{
		}

		[Token(Token = "0x6000A5F")]
		[Address(RVA = "0xC71C14", Offset = "0xC71C14", VA = "0xC71C14", Slot = "20")]
		public void Normal()
		{
		}

		[Token(Token = "0x6000A60")]
		[Address(RVA = "0xC71A28", Offset = "0xC71A28", VA = "0xC71A28", Slot = "30")]
		protected virtual void OnPress()
		{
		}

		[Token(Token = "0x6000A61")]
		[Address(RVA = "0xC71AC0", Offset = "0xC71AC0", VA = "0xC71AC0", Slot = "31")]
		protected virtual void OnNormal()
		{
		}

		[Token(Token = "0x6000A62")]
		[Address(RVA = "0xC7228C", Offset = "0xC7228C", VA = "0xC7228C")]
		protected void RaiseValueChangeEvent()
		{
		}

		[Token(Token = "0x6000A63")]
		[Address(RVA = "0xC722B4", Offset = "0xC722B4", VA = "0xC722B4", Slot = "32")]
		protected virtual void ResetButton()
		{
		}

		[Token(Token = "0x6000A64")]
		[Address(RVA = "0xC72198", Offset = "0xC72198", VA = "0xC72198")]
		private void setPressed()
		{
		}

		[Token(Token = "0x6000A65")]
		[Address(RVA = "0xC72214", Offset = "0xC72214", VA = "0xC72214")]
		private void setNormal()
		{
		}

		[Token(Token = "0x6000A66")]
		[Address(RVA = "0xC71B30", Offset = "0xC71B30", VA = "0xC71B30")]
		public PressButton()
		{
		}
	}
	[Token(Token = "0x2000279")]
	[BehaviourInfo("Toggleable Button. Implements toggle on/toggle of behaviour.\nUse it if you want more advanced button that can be toggled on/off. Works with Press controller and ButtonSwitch behaviour.")]
	public class ToggleButton : ClickButton, IToggleable
	{
		[Token(Token = "0x200027A")]
		public enum ToggleTrigger
		{
			[Token(Token = "0x4000F1E")]
			Off,
			[Token(Token = "0x4000F1F")]
			Click,
			[Token(Token = "0x4000F20")]
			LongClick,
			[Token(Token = "0x4000F21")]
			Both
		}

		[Token(Token = "0x4000F16")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x6C")]
		[Tooltip("The event that causes the button to be toggled on.")]
		[SerializeField]
		private ToggleTrigger toggleOnTrigger;

		[Token(Token = "0x4000F17")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		[SerializeField]
		[Tooltip("The event that causes the button to be toggled off.")]
		private ToggleTrigger toggleOffTrigger;

		[Token(Token = "0x4000F18")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x74")]
		[Tooltip("The position of the button when it is toggled on.")]
		[SerializeField]
		[Range(0f, 1f)]
		private float toggleOnPos;

		[Token(Token = "0x4000F19")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private bool _defaultToggledOn;

		[Token(Token = "0x4000F1A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x79")]
		private bool _isToggledOn;

		[Token(Token = "0x1700006C")]
		public bool IsToggledOn
		{
			[Token(Token = "0x6000A68")]
			[Address(RVA = "0xC72310", Offset = "0xC72310", VA = "0xC72310", Slot = "44")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x1700006D")]
		public override float Value
		{
			[Token(Token = "0x6000A6D")]
			[Address(RVA = "0xC72318", Offset = "0xC72318", VA = "0xC72318", Slot = "28")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000A6E")]
			[Address(RVA = "0xC72358", Offset = "0xC72358", VA = "0xC72358", Slot = "29")]
			set
			{
			}
		}

		[Token(Token = "0x1400001E")]
		public event ToggleEvent toggleOnEvent
		{
			[Token(Token = "0x6000A69")]
			[Address(RVA = "0xC70FB8", Offset = "0xC70FB8", VA = "0xC70FB8", Slot = "40")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A6A")]
			[Address(RVA = "0xC71344", Offset = "0xC71344", VA = "0xC71344", Slot = "41")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x1400001F")]
		public event ToggleEvent toggleOffEvent
		{
			[Token(Token = "0x6000A6B")]
			[Address(RVA = "0xC71054", Offset = "0xC71054", VA = "0xC71054", Slot = "42")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000A6C")]
			[Address(RVA = "0xC713E0", Offset = "0xC713E0", VA = "0xC713E0", Slot = "43")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000A6F")]
		[Address(RVA = "0xC723D4", Offset = "0xC723D4", VA = "0xC723D4", Slot = "6")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000A70")]
		[Address(RVA = "0xC7237C", Offset = "0xC7237C", VA = "0xC7237C", Slot = "45")]
		public void ToggleOn()
		{
		}

		[Token(Token = "0x6000A71")]
		[Address(RVA = "0xC710F0", Offset = "0xC710F0", VA = "0xC710F0", Slot = "46")]
		public void ToggleOff()
		{
		}

		[Token(Token = "0x6000A72")]
		[Address(RVA = "0xC723E4", Offset = "0xC723E4", VA = "0xC723E4", Slot = "47")]
		public void Toggle()
		{
		}

		[Token(Token = "0x6000A73")]
		[Address(RVA = "0xC7244C", Offset = "0xC7244C", VA = "0xC7244C", Slot = "38")]
		protected override void OnClick()
		{
		}

		[Token(Token = "0x6000A74")]
		[Address(RVA = "0xC724E4", Offset = "0xC724E4", VA = "0xC724E4", Slot = "39")]
		protected override void OnLongClick()
		{
		}

		[Token(Token = "0x6000A75")]
		[Address(RVA = "0xC7251C", Offset = "0xC7251C", VA = "0xC7251C", Slot = "48")]
		protected virtual void OnToggleOn()
		{
		}

		[Token(Token = "0x6000A76")]
		[Address(RVA = "0xC7253C", Offset = "0xC7253C", VA = "0xC7253C", Slot = "49")]
		protected virtual void OnToggleOff()
		{
		}

		[Token(Token = "0x6000A77")]
		[Address(RVA = "0xC72484", Offset = "0xC72484", VA = "0xC72484")]
		private void tryToggle(ToggleTrigger toggleTrigger)
		{
		}

		[Token(Token = "0x6000A78")]
		[Address(RVA = "0xC7255C", Offset = "0xC7255C", VA = "0xC7255C")]
		public ToggleButton()
		{
		}
	}
}
namespace ES3Types
{
	[Token(Token = "0x200027B")]
	[Preserve]
	[ES3Properties(new string[]
	{
		"secondaryAxis", "xMotion", "yMotion", "zMotion", "angularXMotion", "angularYMotion", "angularZMotion", "linearLimitSpring", "angularXLimitSpring", "angularYZLimitSpring",
		"linearLimit", "lowAngularXLimit", "highAngularXLimit", "angularYLimit", "angularZLimit", "targetPosition", "targetVelocity", "xDrive", "yDrive", "zDrive",
		"targetRotation", "targetAngularVelocity", "rotationDriveMode", "angularXDrive", "angularYZDrive", "slerpDrive", "projectionMode", "projectionDistance", "projectionAngle", "configuredInWorldSpace",
		"swapBodies", "connectedBody", "connectedArticulationBody", "axis", "anchor", "connectedAnchor", "autoConfigureConnectedAnchor", "breakForce", "breakTorque", "enableCollision",
		"enablePreprocessing", "massScale", "connectedMassScale", "name"
	})]
	public class ES3UserType_ConfigurableJoint : ES3ComponentType
	{
		[Token(Token = "0x4000F22")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A79")]
		[Address(RVA = "0xC72570", Offset = "0xC72570", VA = "0xC72570")]
		public ES3UserType_ConfigurableJoint()
		{
		}

		[Token(Token = "0x6000A7A")]
		[Address(RVA = "0xC72624", Offset = "0xC72624", VA = "0xC72624", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A7B")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200027C")]
	public class ES3UserType_ConfigurableJointArray : ES3ArrayType
	{
		[Token(Token = "0x4000F23")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A7C")]
		[Address(RVA = "0xC73838", Offset = "0xC73838", VA = "0xC73838")]
		public ES3UserType_ConfigurableJointArray()
		{
		}
	}
	[Token(Token = "0x200027D")]
	[Preserve]
	[ES3Properties(new string[]
	{
		"connectedBody", "connectedArticulationBody", "axis", "anchor", "connectedAnchor", "autoConfigureConnectedAnchor", "breakForce", "breakTorque", "enableCollision", "enablePreprocessing",
		"massScale", "connectedMassScale", "name"
	})]
	public class ES3UserType_FixedJoint : ES3ComponentType
	{
		[Token(Token = "0x4000F24")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A7D")]
		[Address(RVA = "0xC73904", Offset = "0xC73904", VA = "0xC73904")]
		public ES3UserType_FixedJoint()
		{
		}

		[Token(Token = "0x6000A7E")]
		[Address(RVA = "0xC739B8", Offset = "0xC739B8", VA = "0xC739B8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A7F")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200027E")]
	public class ES3UserType_FixedJointArray : ES3ArrayType
	{
		[Token(Token = "0x4000F25")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A80")]
		[Address(RVA = "0xC73EE8", Offset = "0xC73EE8", VA = "0xC73EE8")]
		public ES3UserType_FixedJointArray()
		{
		}
	}
	[Token(Token = "0x200027F")]
	[Preserve]
	[ES3Properties(new string[]
	{
		"weaponID", "type", "cocking", "unlimitedAmmo", "bulletImpulse", "recoilFactor", "automatic", "automaticFireRate", "hitLayer", "barrel",
		"usedByNPC", "bulletIn", "firstBulletEmpty", "spawn", "triggerZone", "bloodPrefabs", "interactable", "allBlocked", "nodeTriggerInput", "magDrop",
		"fireRateCounter", "vrInput", "fTrigger", "trigger", "blocked", "magizine", "magazineSnapZone", "gunAnimation", "colliders"
	})]
	public class ES3UserType_Gun : ES3ComponentType
	{
		[Token(Token = "0x4000F26")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A81")]
		[Address(RVA = "0xC73FB4", Offset = "0xC73FB4", VA = "0xC73FB4")]
		public ES3UserType_Gun()
		{
		}

		[Token(Token = "0x6000A82")]
		[Address(RVA = "0xC74068", Offset = "0xC74068", VA = "0xC74068", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A83")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000280")]
	public class ES3UserType_GunArray : ES3ArrayType
	{
		[Token(Token = "0x4000F27")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A84")]
		[Address(RVA = "0xC7499C", Offset = "0xC7499C", VA = "0xC7499C")]
		public ES3UserType_GunArray()
		{
		}
	}
	[Token(Token = "0x2000281")]
	[Preserve]
	[ES3Properties(new string[] { "weaponID", "maxRoudns", "rounds", "taken", "bullet1", "bullet2", "enableBullet", "ignoreColliders" })]
	public class ES3UserType_GunMagazine : ES3ComponentType
	{
		[Token(Token = "0x4000F28")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A85")]
		[Address(RVA = "0xC74A68", Offset = "0xC74A68", VA = "0xC74A68")]
		public ES3UserType_GunMagazine()
		{
		}

		[Token(Token = "0x6000A86")]
		[Address(RVA = "0xC74B1C", Offset = "0xC74B1C", VA = "0xC74B1C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A87")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000282")]
	public class ES3UserType_GunMagazineArray : ES3ArrayType
	{
		[Token(Token = "0x4000F29")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A88")]
		[Address(RVA = "0xC74EA4", Offset = "0xC74EA4", VA = "0xC74EA4")]
		public ES3UserType_GunMagazineArray()
		{
		}
	}
	[Token(Token = "0x2000283")]
	[ES3Properties(new string[] { "slot", "itemName", "iconMaterial", "preview", "isHolsterable", "isGun" })]
	[Preserve]
	public class ES3UserType_ItemInformation : ES3ComponentType
	{
		[Token(Token = "0x4000F2A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A89")]
		[Address(RVA = "0xC74F70", Offset = "0xC74F70", VA = "0xC74F70")]
		public ES3UserType_ItemInformation()
		{
		}

		[Token(Token = "0x6000A8A")]
		[Address(RVA = "0xC75024", Offset = "0xC75024", VA = "0xC75024", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A8B")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000284")]
	public class ES3UserType_ItemInformationArray : ES3ArrayType
	{
		[Token(Token = "0x4000F2B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A8C")]
		[Address(RVA = "0xC75330", Offset = "0xC75330", VA = "0xC75330")]
		public ES3UserType_ItemInformationArray()
		{
		}
	}
	[Token(Token = "0x2000285")]
	[Preserve]
	[ES3Properties(new string[] { "positionSpring", "positionDamper", "maximumForce" })]
	public class ES3UserType_JointDrive : ES3Type
	{
		[Token(Token = "0x4000F2C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A8D")]
		[Address(RVA = "0xC753FC", Offset = "0xC753FC", VA = "0xC753FC")]
		public ES3UserType_JointDrive()
		{
		}

		[Token(Token = "0x6000A8E")]
		[Address(RVA = "0xC754B0", Offset = "0xC754B0", VA = "0xC754B0", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A8F")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x2000286")]
	public class ES3UserType_JointDriveArray : ES3ArrayType
	{
		[Token(Token = "0x4000F2D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A90")]
		[Address(RVA = "0xC76680", Offset = "0xC76680", VA = "0xC76680")]
		public ES3UserType_JointDriveArray()
		{
		}
	}
	[Token(Token = "0x2000287")]
	[Preserve]
	[ES3Properties(new string[] { "lineRenderer", "firstHit", "secondHit", "cJoint" })]
	public class ES3UserType_JointGunConnection : ES3ComponentType
	{
		[Token(Token = "0x4000F2E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A91")]
		[Address(RVA = "0xC7674C", Offset = "0xC7674C", VA = "0xC7674C")]
		public ES3UserType_JointGunConnection()
		{
		}

		[Token(Token = "0x6000A92")]
		[Address(RVA = "0xC76800", Offset = "0xC76800", VA = "0xC76800", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A93")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000288")]
	public class ES3UserType_JointGunConnectionArray : ES3ArrayType
	{
		[Token(Token = "0x4000F2F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A94")]
		[Address(RVA = "0xC76934", Offset = "0xC76934", VA = "0xC76934")]
		public ES3UserType_JointGunConnectionArray()
		{
		}
	}
	[Token(Token = "0x2000289")]
	[ES3Properties(new string[] { "rb", "localPoint", "hit" })]
	[Preserve]
	public class ES3UserType_JointGunHit : ES3ObjectType
	{
		[Token(Token = "0x4000F30")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A95")]
		[Address(RVA = "0xC76A00", Offset = "0xC76A00", VA = "0xC76A00")]
		public ES3UserType_JointGunHit()
		{
		}

		[Token(Token = "0x6000A96")]
		[Address(RVA = "0xC76AB4", Offset = "0xC76AB4", VA = "0xC76AB4", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A97")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000A98")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x200028A")]
	public class ES3UserType_JointGunHitArray : ES3ArrayType
	{
		[Token(Token = "0x4000F31")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A99")]
		[Address(RVA = "0xC76CFC", Offset = "0xC76CFC", VA = "0xC76CFC")]
		public ES3UserType_JointGunHitArray()
		{
		}
	}
	[Token(Token = "0x200028B")]
	[Preserve]
	[ES3Properties(new string[] { "state", "magazineDrag", "targetPos", "hovering", "isTaken", "gun", "magazine", "cJoint" })]
	public class ES3UserType_MagazineSnapZone : ES3ComponentType
	{
		[Token(Token = "0x4000F32")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A9A")]
		[Address(RVA = "0xC76DC8", Offset = "0xC76DC8", VA = "0xC76DC8")]
		public ES3UserType_MagazineSnapZone()
		{
		}

		[Token(Token = "0x6000A9B")]
		[Address(RVA = "0xC76E7C", Offset = "0xC76E7C", VA = "0xC76E7C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000A9C")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200028C")]
	public class ES3UserType_MagazineSnapZoneArray : ES3ArrayType
	{
		[Token(Token = "0x4000F33")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A9D")]
		[Address(RVA = "0xC77210", Offset = "0xC77210", VA = "0xC77210")]
		public ES3UserType_MagazineSnapZoneArray()
		{
		}
	}
	[Token(Token = "0x200028D")]
	[Preserve]
	[ES3Properties(new string[] { "connectedObjects" })]
	public class ES3UserType_Nail : ES3ComponentType
	{
		[Token(Token = "0x4000F34")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000A9E")]
		[Address(RVA = "0xC772DC", Offset = "0xC772DC", VA = "0xC772DC")]
		public ES3UserType_Nail()
		{
		}

		[Token(Token = "0x6000A9F")]
		[Address(RVA = "0xC77390", Offset = "0xC77390", VA = "0xC77390", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA0")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200028E")]
	public class ES3UserType_NailArray : ES3ArrayType
	{
		[Token(Token = "0x4000F35")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA1")]
		[Address(RVA = "0xC774D4", Offset = "0xC774D4", VA = "0xC774D4")]
		public ES3UserType_NailArray()
		{
		}
	}
	[Token(Token = "0x200028F")]
	[ES3Properties(new string[] { "OnButtonPressed", "clipOnPressed", "button", "limit", "isToggled", "isPressed" })]
	[Preserve]
	public class ES3UserType_PhysicalButton : ES3ComponentType
	{
		[Token(Token = "0x4000F36")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA2")]
		[Address(RVA = "0xC775A0", Offset = "0xC775A0", VA = "0xC775A0")]
		public ES3UserType_PhysicalButton()
		{
		}

		[Token(Token = "0x6000AA3")]
		[Address(RVA = "0xC77654", Offset = "0xC77654", VA = "0xC77654", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA4")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000290")]
	public class ES3UserType_PhysicalButtonArray : ES3ArrayType
	{
		[Token(Token = "0x4000F37")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA5")]
		[Address(RVA = "0xC7795C", Offset = "0xC7795C", VA = "0xC7795C")]
		public ES3UserType_PhysicalButtonArray()
		{
		}
	}
	[Token(Token = "0x2000291")]
	[ES3Properties(new string[]
	{
		"velocity", "angularVelocity", "drag", "angularDrag", "mass", "useGravity", "maxDepenetrationVelocity", "isKinematic", "freezeRotation", "constraints",
		"collisionDetectionMode", "centerOfMass", "inertiaTensorRotation", "inertiaTensor", "detectCollisions", "position", "rotation", "interpolation", "solverIterations", "sleepThreshold",
		"maxAngularVelocity", "solverVelocityIterations"
	})]
	[Preserve]
	public class ES3UserType_Rigidbody : ES3ComponentType
	{
		[Token(Token = "0x4000F38")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA6")]
		[Address(RVA = "0xC77A28", Offset = "0xC77A28", VA = "0xC77A28")]
		public ES3UserType_Rigidbody()
		{
		}

		[Token(Token = "0x6000AA7")]
		[Address(RVA = "0xC77ADC", Offset = "0xC77ADC", VA = "0xC77ADC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AA8")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000292")]
	public class ES3UserType_RigidbodyArray : ES3ArrayType
	{
		[Token(Token = "0x4000F39")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AA9")]
		[Address(RVA = "0xC78580", Offset = "0xC78580", VA = "0xC78580")]
		public ES3UserType_RigidbodyArray()
		{
		}
	}
	[Token(Token = "0x2000293")]
	[Preserve]
	[ES3Properties(new string[] { "joint", "maxDistance", "volumeFactor", "pitchFactor", "nodeValue" })]
	public class ES3UserType_SimpleActuator : ES3ComponentType
	{
		[Token(Token = "0x4000F3A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AAA")]
		[Address(RVA = "0xC7864C", Offset = "0xC7864C", VA = "0xC7864C")]
		public ES3UserType_SimpleActuator()
		{
		}

		[Token(Token = "0x6000AAB")]
		[Address(RVA = "0xC78700", Offset = "0xC78700", VA = "0xC78700", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AAC")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000294")]
	public class ES3UserType_SimpleActuatorArray : ES3ArrayType
	{
		[Token(Token = "0x4000F3B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AAD")]
		[Address(RVA = "0xC7893C", Offset = "0xC7893C", VA = "0xC7893C")]
		public ES3UserType_SimpleActuatorArray()
		{
		}
	}
	[Token(Token = "0x2000295")]
	[Preserve]
	[ES3Properties(new string[] { "maxValue", "pitchFactor", "volumeFactor", "shaft", "input", "nodeInput" })]
	public class ES3UserType_SimpleMotor : ES3ComponentType
	{
		[Token(Token = "0x4000F3C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AAE")]
		[Address(RVA = "0xC78A08", Offset = "0xC78A08", VA = "0xC78A08")]
		public ES3UserType_SimpleMotor()
		{
		}

		[Token(Token = "0x6000AAF")]
		[Address(RVA = "0xC78ABC", Offset = "0xC78ABC", VA = "0xC78ABC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AB0")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000296")]
	public class ES3UserType_SimpleMotorArray : ES3ArrayType
	{
		[Token(Token = "0x4000F3D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB1")]
		[Address(RVA = "0xC78D48", Offset = "0xC78D48", VA = "0xC78D48")]
		public ES3UserType_SimpleMotorArray()
		{
		}
	}
	[Token(Token = "0x2000297")]
	[Preserve]
	[ES3Properties(new string[] { "isOn", "maxThrust", "rotorSpeed", "pitchFactor", "volumeFactor", "rotor", "input", "nodeInput" })]
	public class ES3UserType_SimpleThrust : ES3ComponentType
	{
		[Token(Token = "0x4000F3E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB2")]
		[Address(RVA = "0xC78E14", Offset = "0xC78E14", VA = "0xC78E14")]
		public ES3UserType_SimpleThrust()
		{
		}

		[Token(Token = "0x6000AB3")]
		[Address(RVA = "0xC78EC8", Offset = "0xC78EC8", VA = "0xC78EC8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AB4")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x2000298")]
	public class ES3UserType_SimpleThrustArray : ES3ArrayType
	{
		[Token(Token = "0x4000F3F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB5")]
		[Address(RVA = "0xC79224", Offset = "0xC79224", VA = "0xC79224")]
		public ES3UserType_SimpleThrustArray()
		{
		}
	}
	[Token(Token = "0x2000299")]
	[Preserve]
	[ES3Properties(new string[] { "maxValue", "verticalInput", "horizontalInput", "animationSpeed", "ringF", "ringR" })]
	public class ES3UserType_SimpleTorquer : ES3ComponentType
	{
		[Token(Token = "0x4000F40")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB6")]
		[Address(RVA = "0xC792F0", Offset = "0xC792F0", VA = "0xC792F0")]
		public ES3UserType_SimpleTorquer()
		{
		}

		[Token(Token = "0x6000AB7")]
		[Address(RVA = "0xC793A4", Offset = "0xC793A4", VA = "0xC793A4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AB8")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200029A")]
	public class ES3UserType_SimpleTorquerArray : ES3ArrayType
	{
		[Token(Token = "0x4000F41")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AB9")]
		[Address(RVA = "0xC79610", Offset = "0xC79610", VA = "0xC79610")]
		public ES3UserType_SimpleTorquerArray()
		{
		}
	}
	[Token(Token = "0x200029B")]
	[ES3Properties(new string[] { })]
	[Preserve]
	public class ES3UserType_SimpleVectorer : ES3ComponentType
	{
		[Token(Token = "0x4000F42")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABA")]
		[Address(RVA = "0xC796DC", Offset = "0xC796DC", VA = "0xC796DC")]
		public ES3UserType_SimpleVectorer()
		{
		}

		[Token(Token = "0x6000ABB")]
		[Address(RVA = "0xC79790", Offset = "0xC79790", VA = "0xC79790", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ABC")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200029C")]
	public class ES3UserType_SimpleVectorerArray : ES3ArrayType
	{
		[Token(Token = "0x4000F43")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABD")]
		[Address(RVA = "0xC797BC", Offset = "0xC797BC", VA = "0xC797BC")]
		public ES3UserType_SimpleVectorerArray()
		{
		}
	}
	[Token(Token = "0x200029D")]
	[Preserve]
	[ES3Properties(new string[] { "m_MinValue", "m_MaxValue", "m_Value" })]
	public class ES3UserType_Slider : ES3ComponentType
	{
		[Token(Token = "0x4000F44")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ABE")]
		[Address(RVA = "0xC79888", Offset = "0xC79888", VA = "0xC79888")]
		public ES3UserType_Slider()
		{
		}

		[Token(Token = "0x6000ABF")]
		[Address(RVA = "0xC7993C", Offset = "0xC7993C", VA = "0xC7993C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC0")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x200029E")]
	public class ES3UserType_SliderArray : ES3ArrayType
	{
		[Token(Token = "0x4000F45")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC1")]
		[Address(RVA = "0xC79A3C", Offset = "0xC79A3C", VA = "0xC79A3C")]
		public ES3UserType_SliderArray()
		{
		}
	}
	[Token(Token = "0x200029F")]
	[Preserve]
	[ES3Properties(new string[] { "limit", "bounciness", "contactDistance" })]
	public class ES3UserType_SoftJointLimit : ES3Type
	{
		[Token(Token = "0x4000F46")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC2")]
		[Address(RVA = "0xC79B08", Offset = "0xC79B08", VA = "0xC79B08")]
		public ES3UserType_SoftJointLimit()
		{
		}

		[Token(Token = "0x6000AC3")]
		[Address(RVA = "0xC79BBC", Offset = "0xC79BBC", VA = "0xC79BBC", Slot = "4")]
		public override void Write(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC4")]
		public override object Read<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002A0")]
	public class ES3UserType_SoftJointLimitArray : ES3ArrayType
	{
		[Token(Token = "0x4000F47")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC5")]
		[Address(RVA = "0xC79D8C", Offset = "0xC79D8C", VA = "0xC79D8C")]
		public ES3UserType_SoftJointLimitArray()
		{
		}
	}
	[Token(Token = "0x20002A1")]
	[Preserve]
	[ES3Properties(new string[] { "input", "selectedDevice", "allDevices", "dropdownMenu" })]
	public class ES3UserType_YueActuatorNode : ES3ComponentType
	{
		[Token(Token = "0x4000F48")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC6")]
		[Address(RVA = "0xC79E58", Offset = "0xC79E58", VA = "0xC79E58")]
		public ES3UserType_YueActuatorNode()
		{
		}

		[Token(Token = "0x6000AC7")]
		[Address(RVA = "0xC79F0C", Offset = "0xC79F0C", VA = "0xC79F0C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AC8")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002A2")]
	public class ES3UserType_YueActuatorNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F49")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AC9")]
		[Address(RVA = "0xC7A07C", Offset = "0xC7A07C", VA = "0xC7A07C")]
		public ES3UserType_YueActuatorNodeArray()
		{
		}
	}
	[Token(Token = "0x20002A3")]
	[Preserve]
	[ES3Properties(new string[] { "bValue", "valueText", "resultOutput" })]
	public class ES3UserType_YueBooleanValue : ES3ComponentType
	{
		[Token(Token = "0x4000F4A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ACA")]
		[Address(RVA = "0xC7A148", Offset = "0xC7A148", VA = "0xC7A148")]
		public ES3UserType_YueBooleanValue()
		{
		}

		[Token(Token = "0x6000ACB")]
		[Address(RVA = "0xC7A1FC", Offset = "0xC7A1FC", VA = "0xC7A1FC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ACC")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002A4")]
	public class ES3UserType_YueBooleanValueArray : ES3ArrayType
	{
		[Token(Token = "0x4000F4B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ACD")]
		[Address(RVA = "0xC7A360", Offset = "0xC7A360", VA = "0xC7A360")]
		public ES3UserType_YueBooleanValueArray()
		{
		}
	}
	[Token(Token = "0x20002A5")]
	[Preserve]
	[ES3Properties(new string[] { "valueAConnector", "valueBConnector", "outputConnector", "comparatorMode", "comparatorModeText", "modeIndex" })]
	public class ES3UserType_YueComparator : ES3ComponentType
	{
		[Token(Token = "0x4000F4C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ACE")]
		[Address(RVA = "0xC7A42C", Offset = "0xC7A42C", VA = "0xC7A42C")]
		public ES3UserType_YueComparator()
		{
		}

		[Token(Token = "0x6000ACF")]
		[Address(RVA = "0xC7A4E0", Offset = "0xC7A4E0", VA = "0xC7A4E0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AD0")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002A6")]
	public class ES3UserType_YueComparatorArray : ES3ArrayType
	{
		[Token(Token = "0x4000F4D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD1")]
		[Address(RVA = "0xC7A74C", Offset = "0xC7A74C", VA = "0xC7A74C")]
		public ES3UserType_YueComparatorArray()
		{
		}
	}
	[Token(Token = "0x20002A7")]
	[Preserve]
	[ES3Properties(new string[] { "start", "end", "curve", "points", "updateInterval", "lineRenderer", "counter" })]
	public class ES3UserType_YueConnectionVisual : ES3ComponentType
	{
		[Token(Token = "0x4000F4E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD2")]
		[Address(RVA = "0xC7A818", Offset = "0xC7A818", VA = "0xC7A818")]
		public ES3UserType_YueConnectionVisual()
		{
		}

		[Token(Token = "0x6000AD3")]
		[Address(RVA = "0xC7A8CC", Offset = "0xC7A8CC", VA = "0xC7A8CC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AD4")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002A8")]
	public class ES3UserType_YueConnectionVisualArray : ES3ArrayType
	{
		[Token(Token = "0x4000F4F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD5")]
		[Address(RVA = "0xC7AB68", Offset = "0xC7AB68", VA = "0xC7AB68")]
		public ES3UserType_YueConnectionVisualArray()
		{
		}
	}
	[Token(Token = "0x20002A9")]
	[Preserve]
	[ES3Properties(new string[] { "laser", "layer", "sensorValue" })]
	public class ES3UserType_YueDistanceSensor : ES3ComponentType
	{
		[Token(Token = "0x4000F50")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD6")]
		[Address(RVA = "0xC7AC34", Offset = "0xC7AC34", VA = "0xC7AC34")]
		public ES3UserType_YueDistanceSensor()
		{
		}

		[Token(Token = "0x6000AD7")]
		[Address(RVA = "0xC7ACE8", Offset = "0xC7ACE8", VA = "0xC7ACE8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AD8")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002AA")]
	public class ES3UserType_YueDistanceSensorArray : ES3ArrayType
	{
		[Token(Token = "0x4000F51")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AD9")]
		[Address(RVA = "0xC7AEA4", Offset = "0xC7AEA4", VA = "0xC7AEA4")]
		public ES3UserType_YueDistanceSensorArray()
		{
		}
	}
	[Token(Token = "0x20002AB")]
	[ES3Properties(new string[] { "sensorValue", "selectedDevice", "allDevices", "dropdownMenu" })]
	[Preserve]
	public class ES3UserType_YueDistanceSensorNode : ES3ComponentType
	{
		[Token(Token = "0x4000F52")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ADA")]
		[Address(RVA = "0xC7AF70", Offset = "0xC7AF70", VA = "0xC7AF70")]
		public ES3UserType_YueDistanceSensorNode()
		{
		}

		[Token(Token = "0x6000ADB")]
		[Address(RVA = "0xC7B024", Offset = "0xC7B024", VA = "0xC7B024", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000ADC")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002AC")]
	public class ES3UserType_YueDistanceSensorNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F53")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ADD")]
		[Address(RVA = "0xC7B200", Offset = "0xC7B200", VA = "0xC7B200")]
		public ES3UserType_YueDistanceSensorNodeArray()
		{
		}
	}
	[Token(Token = "0x20002AD")]
	[Preserve]
	[ES3Properties(new string[]
	{
		"dropdownMenu", "fireTrigger", "unlimitedAmmo", "firerate", "recoil", "impulse", "fireRateText", "recoilText", "impulseText", "selectedDevice",
		"allDevices"
	})]
	public class ES3UserType_YueGunNode : ES3ComponentType
	{
		[Token(Token = "0x4000F54")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000ADE")]
		[Address(RVA = "0xC7B2CC", Offset = "0xC7B2CC", VA = "0xC7B2CC")]
		public ES3UserType_YueGunNode()
		{
		}

		[Token(Token = "0x6000ADF")]
		[Address(RVA = "0xC7B380", Offset = "0xC7B380", VA = "0xC7B380", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE0")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002AE")]
	public class ES3UserType_YueGunNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F55")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE1")]
		[Address(RVA = "0xC7B650", Offset = "0xC7B650", VA = "0xC7B650")]
		public ES3UserType_YueGunNodeArray()
		{
		}
	}
	[Token(Token = "0x20002AF")]
	[Preserve]
	[ES3Properties(new string[] { })]
	public class ES3UserType_YueGyroSensor : ES3ComponentType
	{
		[Token(Token = "0x4000F56")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE2")]
		[Address(RVA = "0xC7B71C", Offset = "0xC7B71C", VA = "0xC7B71C")]
		public ES3UserType_YueGyroSensor()
		{
		}

		[Token(Token = "0x6000AE3")]
		[Address(RVA = "0xC7B7D0", Offset = "0xC7B7D0", VA = "0xC7B7D0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE4")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B0")]
	public class ES3UserType_YueGyroSensorArray : ES3ArrayType
	{
		[Token(Token = "0x4000F57")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE5")]
		[Address(RVA = "0xC7B7FC", Offset = "0xC7B7FC", VA = "0xC7B7FC")]
		public ES3UserType_YueGyroSensorArray()
		{
		}
	}
	[Token(Token = "0x20002B1")]
	[Preserve]
	[ES3Properties(new string[] { "sensorValueX", "sensorValueY", "selectedDevice", "allDevices", "dropdownMenu" })]
	public class ES3UserType_YueIMUSensorNode : ES3ComponentType
	{
		[Token(Token = "0x4000F58")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE6")]
		[Address(RVA = "0xC7B8C8", Offset = "0xC7B8C8", VA = "0xC7B8C8")]
		public ES3UserType_YueIMUSensorNode()
		{
		}

		[Token(Token = "0x6000AE7")]
		[Address(RVA = "0xC7B97C", Offset = "0xC7B97C", VA = "0xC7B97C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AE8")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B2")]
	public class ES3UserType_YueIMUSensorNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F59")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AE9")]
		[Address(RVA = "0xC7BB88", Offset = "0xC7BB88", VA = "0xC7BB88")]
		public ES3UserType_YueIMUSensorNodeArray()
		{
		}
	}
	[Token(Token = "0x20002B3")]
	[ES3Properties(new string[] { })]
	[Preserve]
	public class ES3UserType_YueInteractable : ES3ComponentType
	{
		[Token(Token = "0x4000F5A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AEA")]
		[Address(RVA = "0xC7BC54", Offset = "0xC7BC54", VA = "0xC7BC54")]
		public ES3UserType_YueInteractable()
		{
		}

		[Token(Token = "0x6000AEB")]
		[Address(RVA = "0xC7BD08", Offset = "0xC7BD08", VA = "0xC7BD08", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AEC")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B4")]
	public class ES3UserType_YueInteractableArray : ES3ArrayType
	{
		[Token(Token = "0x4000F5B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AED")]
		[Address(RVA = "0xC7BD34", Offset = "0xC7BD34", VA = "0xC7BD34")]
		public ES3UserType_YueInteractableArray()
		{
		}
	}
	[Token(Token = "0x20002B5")]
	[Preserve]
	[ES3Properties(new string[] { "grabValue", "selectedDevice", "allDevices", "dropdownMenu" })]
	public class ES3UserType_YueInteractableNode : ES3ComponentType
	{
		[Token(Token = "0x4000F5C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AEE")]
		[Address(RVA = "0xC7BE00", Offset = "0xC7BE00", VA = "0xC7BE00")]
		public ES3UserType_YueInteractableNode()
		{
		}

		[Token(Token = "0x6000AEF")]
		[Address(RVA = "0xC7BEB4", Offset = "0xC7BEB4", VA = "0xC7BEB4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF0")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B6")]
	public class ES3UserType_YueInteractableNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F5D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF1")]
		[Address(RVA = "0xC7C090", Offset = "0xC7C090", VA = "0xC7C090")]
		public ES3UserType_YueInteractableNodeArray()
		{
		}
	}
	[Token(Token = "0x20002B7")]
	[ES3Properties(new string[] { "lh", "lv", "lt", "lg", "rh", "rv", "rt", "rg", "vrInput" })]
	[Preserve]
	public class ES3UserType_YueJoystickNode : ES3ComponentType
	{
		[Token(Token = "0x4000F5E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF2")]
		[Address(RVA = "0xC7C15C", Offset = "0xC7C15C", VA = "0xC7C15C")]
		public ES3UserType_YueJoystickNode()
		{
		}

		[Token(Token = "0x6000AF3")]
		[Address(RVA = "0xC7C210", Offset = "0xC7C210", VA = "0xC7C210", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF4")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002B8")]
	public class ES3UserType_YueJoystickNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F5F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF5")]
		[Address(RVA = "0xC7C458", Offset = "0xC7C458", VA = "0xC7C458")]
		public ES3UserType_YueJoystickNodeArray()
		{
		}
	}
	[Token(Token = "0x20002B9")]
	[ES3Properties(new string[] { })]
	[Preserve]
	public class ES3UserType_YueLeverSensor : ES3ComponentType
	{
		[Token(Token = "0x4000F60")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF6")]
		[Address(RVA = "0xC7C524", Offset = "0xC7C524", VA = "0xC7C524")]
		public ES3UserType_YueLeverSensor()
		{
		}

		[Token(Token = "0x6000AF7")]
		[Address(RVA = "0xC7C5D8", Offset = "0xC7C5D8", VA = "0xC7C5D8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AF8")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002BA")]
	public class ES3UserType_YueLeverSensorArray : ES3ArrayType
	{
		[Token(Token = "0x4000F61")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AF9")]
		[Address(RVA = "0xC7C604", Offset = "0xC7C604", VA = "0xC7C604")]
		public ES3UserType_YueLeverSensorArray()
		{
		}
	}
	[Token(Token = "0x20002BB")]
	[ES3Properties(new string[] { "sensorValue", "selectedDevice", "allDevices", "dropdownMenu" })]
	[Preserve]
	public class ES3UserType_YueLeverSensorNode : ES3ComponentType
	{
		[Token(Token = "0x4000F62")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AFA")]
		[Address(RVA = "0xC7C6D0", Offset = "0xC7C6D0", VA = "0xC7C6D0")]
		public ES3UserType_YueLeverSensorNode()
		{
		}

		[Token(Token = "0x6000AFB")]
		[Address(RVA = "0xC7C784", Offset = "0xC7C784", VA = "0xC7C784", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000AFC")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002BC")]
	public class ES3UserType_YueLeverSensorNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F63")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AFD")]
		[Address(RVA = "0xC7C960", Offset = "0xC7C960", VA = "0xC7C960")]
		public ES3UserType_YueLeverSensorNodeArray()
		{
		}
	}
	[Token(Token = "0x20002BD")]
	[ES3Properties(new string[] { "inputInput", "maxThrustInput", "isThrustingOutput", "thrustValueOutput", "selectedDevice", "allDevices", "dropdownMenu" })]
	[Preserve]
	public class ES3UserType_YueMotorNode : ES3ComponentType
	{
		[Token(Token = "0x4000F64")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000AFE")]
		[Address(RVA = "0xC7CA2C", Offset = "0xC7CA2C", VA = "0xC7CA2C")]
		public ES3UserType_YueMotorNode()
		{
		}

		[Token(Token = "0x6000AFF")]
		[Address(RVA = "0xC7CAE0", Offset = "0xC7CAE0", VA = "0xC7CAE0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B00")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002BE")]
	public class ES3UserType_YueMotorNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F65")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B01")]
		[Address(RVA = "0xC7CD54", Offset = "0xC7CD54", VA = "0xC7CD54")]
		public ES3UserType_YueMotorNodeArray()
		{
		}
	}
	[Token(Token = "0x20002BF")]
	[Preserve]
	[ES3Properties(new string[] { "connectorOutput", "connectorInput", "visual" })]
	public class ES3UserType_YueNodeConnection : ES3ObjectType
	{
		[Token(Token = "0x4000F66")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B02")]
		[Address(RVA = "0xC7CE20", Offset = "0xC7CE20", VA = "0xC7CE20")]
		public ES3UserType_YueNodeConnection()
		{
		}

		[Token(Token = "0x6000B03")]
		[Address(RVA = "0xC7CED4", Offset = "0xC7CED4", VA = "0xC7CED4", Slot = "7")]
		protected override void WriteObject(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B04")]
		protected override void ReadObject<T>(ES3Reader reader, object obj)
		{
		}

		[Token(Token = "0x6000B05")]
		protected override object ReadObject<T>(ES3Reader reader)
		{
			return null;
		}
	}
	[Token(Token = "0x20002C0")]
	public class ES3UserType_YueNodeConnectionArray : ES3ArrayType
	{
		[Token(Token = "0x4000F67")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B06")]
		[Address(RVA = "0xC7CFEC", Offset = "0xC7CFEC", VA = "0xC7CFEC")]
		public ES3UserType_YueNodeConnectionArray()
		{
		}
	}
	[Token(Token = "0x20002C1")]
	[Preserve]
	[ES3Properties(new string[]
	{
		"connectorName", "connectorMode", "connectorType", "colorBool", "colorFloat", "colorVec3", "listeningConnectors", "connections", "node", "bValue",
		"fValue", "vec3Value", "isTaken"
	})]
	public class ES3UserType_YueNodeConnector : ES3ComponentType
	{
		[Token(Token = "0x4000F68")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B07")]
		[Address(RVA = "0xC7D0B8", Offset = "0xC7D0B8", VA = "0xC7D0B8")]
		public ES3UserType_YueNodeConnector()
		{
		}

		[Token(Token = "0x6000B08")]
		[Address(RVA = "0xC7D16C", Offset = "0xC7D16C", VA = "0xC7D16C", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B09")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002C2")]
	public class ES3UserType_YueNodeConnectorArray : ES3ArrayType
	{
		[Token(Token = "0x4000F69")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B0A")]
		[Address(RVA = "0xC7D76C", Offset = "0xC7D76C", VA = "0xC7D76C")]
		public ES3UserType_YueNodeConnectorArray()
		{
		}
	}
	[Token(Token = "0x20002C3")]
	[Preserve]
	[ES3Properties(new string[] { "value", "commaSet", "commaIndex", "minus" })]
	public class ES3UserType_YueNumPad : ES3ComponentType
	{
		[Token(Token = "0x4000F6A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B0B")]
		[Address(RVA = "0xC7D838", Offset = "0xC7D838", VA = "0xC7D838")]
		public ES3UserType_YueNumPad()
		{
		}

		[Token(Token = "0x6000B0C")]
		[Address(RVA = "0xC7D8EC", Offset = "0xC7D8EC", VA = "0xC7D8EC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B0D")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002C4")]
	public class ES3UserType_YueNumPadArray : ES3ArrayType
	{
		[Token(Token = "0x4000F6B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B0E")]
		[Address(RVA = "0xC7DA70", Offset = "0xC7DA70", VA = "0xC7DA70")]
		public ES3UserType_YueNumPadArray()
		{
		}
	}
	[Token(Token = "0x20002C5")]
	[Preserve]
	[ES3Properties(new string[] { "mode", "modeText", "input1", "input2", "output", "modeIndex" })]
	public class ES3UserType_YueOperator : ES3ComponentType
	{
		[Token(Token = "0x4000F6C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B0F")]
		[Address(RVA = "0xC7DB3C", Offset = "0xC7DB3C", VA = "0xC7DB3C")]
		public ES3UserType_YueOperator()
		{
		}

		[Token(Token = "0x6000B10")]
		[Address(RVA = "0xC7DBF0", Offset = "0xC7DBF0", VA = "0xC7DBF0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B11")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002C6")]
	public class ES3UserType_YueOperatorArray : ES3ArrayType
	{
		[Token(Token = "0x4000F6D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B12")]
		[Address(RVA = "0xC7DE5C", Offset = "0xC7DE5C", VA = "0xC7DE5C")]
		public ES3UserType_YueOperatorArray()
		{
		}
	}
	[Token(Token = "0x20002C7")]
	[ES3Properties(new string[] { "sensorValuePressed", "sensorValueToggle", "selectedDevice", "allDevices", "dropdownMenu" })]
	[Preserve]
	public class ES3UserType_YuePhysicalButtonNode : ES3ComponentType
	{
		[Token(Token = "0x4000F6E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B13")]
		[Address(RVA = "0xC7DF28", Offset = "0xC7DF28", VA = "0xC7DF28")]
		public ES3UserType_YuePhysicalButtonNode()
		{
		}

		[Token(Token = "0x6000B14")]
		[Address(RVA = "0xC7DFDC", Offset = "0xC7DFDC", VA = "0xC7DFDC", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B15")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002C8")]
	public class ES3UserType_YuePhysicalButtonNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F6F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B16")]
		[Address(RVA = "0xC7E1E8", Offset = "0xC7E1E8", VA = "0xC7E1E8")]
		public ES3UserType_YuePhysicalButtonNodeArray()
		{
		}
	}
	[Token(Token = "0x20002C9")]
	[Preserve]
	[ES3Properties(new string[] { })]
	public class ES3UserType_YuePhysicalJoystick : ES3ComponentType
	{
		[Token(Token = "0x4000F70")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B17")]
		[Address(RVA = "0xC7E2B4", Offset = "0xC7E2B4", VA = "0xC7E2B4")]
		public ES3UserType_YuePhysicalJoystick()
		{
		}

		[Token(Token = "0x6000B18")]
		[Address(RVA = "0xC7E368", Offset = "0xC7E368", VA = "0xC7E368", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B19")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002CA")]
	public class ES3UserType_YuePhysicalJoystickArray : ES3ArrayType
	{
		[Token(Token = "0x4000F71")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1A")]
		[Address(RVA = "0xC7E394", Offset = "0xC7E394", VA = "0xC7E394")]
		public ES3UserType_YuePhysicalJoystickArray()
		{
		}
	}
	[Token(Token = "0x20002CB")]
	[Preserve]
	[ES3Properties(new string[] { "sensorValueX", "sensorValueY", "selectedDevice", "allDevices", "dropdownMenu", "xtext", "ytext" })]
	public class ES3UserType_YuePhysicalJoystickNode : ES3ComponentType
	{
		[Token(Token = "0x4000F72")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1B")]
		[Address(RVA = "0xC7E460", Offset = "0xC7E460", VA = "0xC7E460")]
		public ES3UserType_YuePhysicalJoystickNode()
		{
		}

		[Token(Token = "0x6000B1C")]
		[Address(RVA = "0xC7E514", Offset = "0xC7E514", VA = "0xC7E514", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B1D")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002CC")]
	public class ES3UserType_YuePhysicalJoystickNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F73")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1E")]
		[Address(RVA = "0xC7E788", Offset = "0xC7E788", VA = "0xC7E788")]
		public ES3UserType_YuePhysicalJoystickNodeArray()
		{
		}
	}
	[Token(Token = "0x20002CD")]
	[ES3Properties(new string[] { "useGravityInput", "isKinematicInput", "massInput", "dragInput", "angularDragInput", "selectedDevice", "allDevices", "dropdownMenu" })]
	[Preserve]
	public class ES3UserType_YueRigidbodyNode : ES3ComponentType
	{
		[Token(Token = "0x4000F74")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B1F")]
		[Address(RVA = "0xC7E854", Offset = "0xC7E854", VA = "0xC7E854")]
		public ES3UserType_YueRigidbodyNode()
		{
		}

		[Token(Token = "0x6000B20")]
		[Address(RVA = "0xC7E908", Offset = "0xC7E908", VA = "0xC7E908", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B21")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002CE")]
	public class ES3UserType_YueRigidbodyNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F75")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B22")]
		[Address(RVA = "0xC7EB48", Offset = "0xC7EB48", VA = "0xC7EB48")]
		public ES3UserType_YueRigidbodyNodeArray()
		{
		}
	}
	[Token(Token = "0x20002CF")]
	[Preserve]
	[ES3Properties(new string[] { })]
	public class ES3UserType_YueSeat : ES3ComponentType
	{
		[Token(Token = "0x4000F76")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B23")]
		[Address(RVA = "0xC7EC14", Offset = "0xC7EC14", VA = "0xC7EC14")]
		public ES3UserType_YueSeat()
		{
		}

		[Token(Token = "0x6000B24")]
		[Address(RVA = "0xC7ECC8", Offset = "0xC7ECC8", VA = "0xC7ECC8", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B25")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002D0")]
	public class ES3UserType_YueSeatArray : ES3ArrayType
	{
		[Token(Token = "0x4000F77")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B26")]
		[Address(RVA = "0xC7ECF4", Offset = "0xC7ECF4", VA = "0xC7ECF4")]
		public ES3UserType_YueSeatArray()
		{
		}
	}
	[Token(Token = "0x20002D1")]
	[Preserve]
	[ES3Properties(new string[] { "seatValue", "selectedDevice", "allDevices", "dropdownMenu" })]
	public class ES3UserType_YueSeatNode : ES3ComponentType
	{
		[Token(Token = "0x4000F78")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B27")]
		[Address(RVA = "0xC7EDC0", Offset = "0xC7EDC0", VA = "0xC7EDC0")]
		public ES3UserType_YueSeatNode()
		{
		}

		[Token(Token = "0x6000B28")]
		[Address(RVA = "0xC7EE74", Offset = "0xC7EE74", VA = "0xC7EE74", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B29")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002D2")]
	public class ES3UserType_YueSeatNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F79")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2A")]
		[Address(RVA = "0xC7F050", Offset = "0xC7F050", VA = "0xC7F050")]
		public ES3UserType_YueSeatNodeArray()
		{
		}
	}
	[Token(Token = "0x20002D3")]
	[Preserve]
	[ES3Properties(new string[] { "inputInput", "maxThrustInput", "isThrustingOutput", "thrustValueOutput", "selectedDevice", "allDevices", "dropdownMenu" })]
	public class ES3UserType_YueThrusterNode : ES3ComponentType
	{
		[Token(Token = "0x4000F7A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2B")]
		[Address(RVA = "0xC7F11C", Offset = "0xC7F11C", VA = "0xC7F11C")]
		public ES3UserType_YueThrusterNode()
		{
		}

		[Token(Token = "0x6000B2C")]
		[Address(RVA = "0xC7F1D0", Offset = "0xC7F1D0", VA = "0xC7F1D0", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B2D")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002D4")]
	public class ES3UserType_YueThrusterNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F7B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2E")]
		[Address(RVA = "0xC7F444", Offset = "0xC7F444", VA = "0xC7F444")]
		public ES3UserType_YueThrusterNodeArray()
		{
		}
	}
	[Token(Token = "0x20002D5")]
	[ES3Properties(new string[] { "verticalInput", "horizontalInput", "maxValueInput", "isThrustingOutput", "xValueOutput", "yValueOutput", "selectedDevice", "allDevices", "dropdownMenu" })]
	[Preserve]
	public class ES3UserType_YueTorquerNode : ES3ComponentType
	{
		[Token(Token = "0x4000F7C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B2F")]
		[Address(RVA = "0xC7F510", Offset = "0xC7F510", VA = "0xC7F510")]
		public ES3UserType_YueTorquerNode()
		{
		}

		[Token(Token = "0x6000B30")]
		[Address(RVA = "0xC7F5C4", Offset = "0xC7F5C4", VA = "0xC7F5C4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B31")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002D6")]
	public class ES3UserType_YueTorquerNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F7D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B32")]
		[Address(RVA = "0xC7F8A0", Offset = "0xC7F8A0", VA = "0xC7F8A0")]
		public ES3UserType_YueTorquerNodeArray()
		{
		}
	}
	[Token(Token = "0x20002D7")]
	[Preserve]
	[ES3Properties(new string[] { "inputX", "inputY", "maxVal", "selectedDevice", "allDevices", "dropdownMenu" })]
	public class ES3UserType_YueVectorerNode : ES3ComponentType
	{
		[Token(Token = "0x4000F7E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B33")]
		[Address(RVA = "0xC7F96C", Offset = "0xC7F96C", VA = "0xC7F96C")]
		public ES3UserType_YueVectorerNode()
		{
		}

		[Token(Token = "0x6000B34")]
		[Address(RVA = "0xC7FA20", Offset = "0xC7FA20", VA = "0xC7FA20", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B35")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002D8")]
	public class ES3UserType_YueVectorerNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F7F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B36")]
		[Address(RVA = "0xC7FC64", Offset = "0xC7FC64", VA = "0xC7FC64")]
		public ES3UserType_YueVectorerNodeArray()
		{
		}
	}
	[Token(Token = "0x20002D9")]
	[Preserve]
	[ES3Properties(new string[] { })]
	public class ES3UserType_YueVehicleInput : ES3ComponentType
	{
		[Token(Token = "0x4000F80")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B37")]
		[Address(RVA = "0xC7FD30", Offset = "0xC7FD30", VA = "0xC7FD30")]
		public ES3UserType_YueVehicleInput()
		{
		}

		[Token(Token = "0x6000B38")]
		[Address(RVA = "0xC7FDE4", Offset = "0xC7FDE4", VA = "0xC7FDE4", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B39")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002DA")]
	public class ES3UserType_YueVehicleInputArray : ES3ArrayType
	{
		[Token(Token = "0x4000F81")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B3A")]
		[Address(RVA = "0xC7FE10", Offset = "0xC7FE10", VA = "0xC7FE10")]
		public ES3UserType_YueVehicleInputArray()
		{
		}
	}
	[Token(Token = "0x20002DB")]
	[ES3Properties(new string[] { "throttle", "roll", "pitch", "selectedDevice", "allDevices", "dropdownMenu" })]
	[Preserve]
	public class ES3UserType_YueVehicleNode : ES3ComponentType
	{
		[Token(Token = "0x4000F82")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B3B")]
		[Address(RVA = "0xC7FEDC", Offset = "0xC7FEDC", VA = "0xC7FEDC")]
		public ES3UserType_YueVehicleNode()
		{
		}

		[Token(Token = "0x6000B3C")]
		[Address(RVA = "0xC7FF90", Offset = "0xC7FF90", VA = "0xC7FF90", Slot = "14")]
		protected override void WriteComponent(object obj, ES3Writer writer)
		{
		}

		[Token(Token = "0x6000B3D")]
		protected override void ReadComponent<T>(ES3Reader reader, object obj)
		{
		}
	}
	[Token(Token = "0x20002DC")]
	public class ES3UserType_YueVehicleNodeArray : ES3ArrayType
	{
		[Token(Token = "0x4000F83")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public static ES3Type Instance;

		[Token(Token = "0x6000B3E")]
		[Address(RVA = "0xC801D4", Offset = "0xC801D4", VA = "0xC801D4")]
		public ES3UserType_YueVehicleNodeArray()
		{
		}
	}
}
namespace Impact
{
	[Token(Token = "0x20002DD")]
	public struct ImpactCollisionWrapper : IImpactCollisionWrapper<ImpactContactPoint>
	{
		[Token(Token = "0x4000F86")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private Collision source3D;

		[Token(Token = "0x4000F87")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private Collision2D source2D;

		[Token(Token = "0x1700006E")]
		public int ContactCount
		{
			[Token(Token = "0x6000B3F")]
			[Address(RVA = "0xC802A0", Offset = "0xC802A0", VA = "0xC802A0", Slot = "4")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000B40")]
			[Address(RVA = "0xC802A8", Offset = "0xC802A8", VA = "0xC802A8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700006F")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x6000B41")]
			[Address(RVA = "0xC802B0", Offset = "0xC802B0", VA = "0xC802B0", Slot = "5")]
			[CompilerGenerated]
			readonly get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x6000B42")]
			[Address(RVA = "0xC802B8", Offset = "0xC802B8", VA = "0xC802B8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000B43")]
		[Address(RVA = "0xC802C0", Offset = "0xC802C0", VA = "0xC802C0")]
		public ImpactCollisionWrapper(Collision collision3D)
		{
		}

		[Token(Token = "0x6000B44")]
		[Address(RVA = "0xC802EC", Offset = "0xC802EC", VA = "0xC802EC")]
		public ImpactCollisionWrapper(Collision2D collision2D)
		{
		}

		[Token(Token = "0x6000B45")]
		[Address(RVA = "0xC8031C", Offset = "0xC8031C", VA = "0xC8031C", Slot = "6")]
		public ImpactContactPoint GetContact(int index)
		{
			return default(ImpactContactPoint);
		}
	}
	[Token(Token = "0x20002DE")]
	public struct ImpactContactPoint : IImpactContactPoint
	{
		[Token(Token = "0x17000070")]
		public Vector3 Point
		{
			[Token(Token = "0x6000B46")]
			[Address(RVA = "0xC806F8", Offset = "0xC806F8", VA = "0xC806F8", Slot = "4")]
			[CompilerGenerated]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B47")]
			[Address(RVA = "0xC80704", Offset = "0xC80704", VA = "0xC80704", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000071")]
		public Vector3 Normal
		{
			[Token(Token = "0x6000B48")]
			[Address(RVA = "0xC80710", Offset = "0xC80710", VA = "0xC80710", Slot = "6")]
			[CompilerGenerated]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B49")]
			[Address(RVA = "0xC8071C", Offset = "0xC8071C", VA = "0xC8071C", Slot = "7")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000072")]
		public GameObject ThisObject
		{
			[Token(Token = "0x6000B4A")]
			[Address(RVA = "0xC80728", Offset = "0xC80728", VA = "0xC80728", Slot = "8")]
			[CompilerGenerated]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000B4B")]
			[Address(RVA = "0xC80730", Offset = "0xC80730", VA = "0xC80730", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000073")]
		public GameObject OtherObject
		{
			[Token(Token = "0x6000B4C")]
			[Address(RVA = "0xC80738", Offset = "0xC80738", VA = "0xC80738", Slot = "10")]
			[CompilerGenerated]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000B4D")]
			[Address(RVA = "0xC80740", Offset = "0xC80740", VA = "0xC80740", Slot = "11")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000074")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x6000B4E")]
			[Address(RVA = "0xC80748", Offset = "0xC80748", VA = "0xC80748", Slot = "12")]
			[CompilerGenerated]
			readonly get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x6000B4F")]
			[Address(RVA = "0xC80750", Offset = "0xC80750", VA = "0xC80750", Slot = "13")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000075")]
		public int ThisPhysicsMaterialID
		{
			[Token(Token = "0x6000B50")]
			[Address(RVA = "0xC80758", Offset = "0xC80758", VA = "0xC80758", Slot = "14")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000B51")]
			[Address(RVA = "0xC80760", Offset = "0xC80760", VA = "0xC80760", Slot = "15")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000076")]
		public int OtherPhysicsMaterialID
		{
			[Token(Token = "0x6000B52")]
			[Address(RVA = "0xC80768", Offset = "0xC80768", VA = "0xC80768", Slot = "16")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000B53")]
			[Address(RVA = "0xC80770", Offset = "0xC80770", VA = "0xC80770", Slot = "17")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000B54")]
		[Address(RVA = "0xC80778", Offset = "0xC80778", VA = "0xC80778")]
		public ImpactContactPoint(IImpactContactPoint original)
		{
		}

		[Token(Token = "0x6000B55")]
		[Address(RVA = "0xC803D4", Offset = "0xC803D4", VA = "0xC803D4")]
		public ImpactContactPoint(ContactPoint contact3D)
		{
		}

		[Token(Token = "0x6000B56")]
		[Address(RVA = "0xC80560", Offset = "0xC80560", VA = "0xC80560")]
		public ImpactContactPoint(ContactPoint2D contact2D)
		{
		}
	}
	[Token(Token = "0x20002DF")]
	public struct ImpactMaterialComposition
	{
		[Token(Token = "0x4000F8F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public IImpactMaterial Material;

		[Token(Token = "0x4000F90")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		public float CompositionValue;

		[Token(Token = "0x6000B57")]
		[Address(RVA = "0xC80A0C", Offset = "0xC80A0C", VA = "0xC80A0C")]
		public ImpactMaterialComposition(IImpactMaterial material, float compositionValue)
		{
		}
	}
	[Token(Token = "0x20002E0")]
	public struct ImpactCollisionSingleContactWrapper : IImpactCollisionWrapper<ImpactContactPoint>
	{
		[Token(Token = "0x4000F92")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private ImpactContactPoint contactPoint;

		[Token(Token = "0x17000077")]
		public int ContactCount
		{
			[Token(Token = "0x6000B58")]
			[Address(RVA = "0xC80A18", Offset = "0xC80A18", VA = "0xC80A18", Slot = "4")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x17000078")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x6000B59")]
			[Address(RVA = "0xC80A20", Offset = "0xC80A20", VA = "0xC80A20", Slot = "5")]
			[CompilerGenerated]
			readonly get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x6000B5A")]
			[Address(RVA = "0xC80A28", Offset = "0xC80A28", VA = "0xC80A28")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000B5B")]
		[Address(RVA = "0xC80A30", Offset = "0xC80A30", VA = "0xC80A30")]
		public ImpactCollisionSingleContactWrapper(ImpactContactPoint contactPoint, PhysicsType physicsType)
		{
		}

		[Token(Token = "0x6000B5C")]
		[Address(RVA = "0xC80A54", Offset = "0xC80A54", VA = "0xC80A54", Slot = "6")]
		public ImpactContactPoint GetContact(int index)
		{
			return default(ImpactContactPoint);
		}
	}
	[Token(Token = "0x20002E1")]
	public class ImpactRigidbodyWrapper
	{
		[Token(Token = "0x17000079")]
		public PhysicsType PhysicsType
		{
			[Token(Token = "0x6000B5D")]
			[Address(RVA = "0xC80A74", Offset = "0xC80A74", VA = "0xC80A74")]
			[CompilerGenerated]
			get
			{
				return default(PhysicsType);
			}
			[Token(Token = "0x6000B5E")]
			[Address(RVA = "0xC80A7C", Offset = "0xC80A7C", VA = "0xC80A7C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700007A")]
		public Rigidbody Rigidbody3D
		{
			[Token(Token = "0x6000B5F")]
			[Address(RVA = "0xC80A84", Offset = "0xC80A84", VA = "0xC80A84")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B60")]
			[Address(RVA = "0xC80A8C", Offset = "0xC80A8C", VA = "0xC80A8C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700007B")]
		public Rigidbody2D Rigidbody2D
		{
			[Token(Token = "0x6000B61")]
			[Address(RVA = "0xC80A94", Offset = "0xC80A94", VA = "0xC80A94")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000B62")]
			[Address(RVA = "0xC80A9C", Offset = "0xC80A9C", VA = "0xC80A9C")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700007C")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000B63")]
			[Address(RVA = "0xC80AA4", Offset = "0xC80AA4", VA = "0xC80AA4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B64")]
			[Address(RVA = "0xC80AB0", Offset = "0xC80AB0", VA = "0xC80AB0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700007D")]
		public Vector3 AngularVelocity
		{
			[Token(Token = "0x6000B65")]
			[Address(RVA = "0xC80ABC", Offset = "0xC80ABC", VA = "0xC80ABC")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B66")]
			[Address(RVA = "0xC80AC8", Offset = "0xC80AC8", VA = "0xC80AC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700007E")]
		public Vector3 WorldCenterOfMass
		{
			[Token(Token = "0x6000B67")]
			[Address(RVA = "0xC80AD4", Offset = "0xC80AD4", VA = "0xC80AD4")]
			[CompilerGenerated]
			get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B68")]
			[Address(RVA = "0xC80AE0", Offset = "0xC80AE0", VA = "0xC80AE0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x1700007F")]
		public Vector3 CurrentVelocity
		{
			[Token(Token = "0x6000B69")]
			[Address(RVA = "0xC80AEC", Offset = "0xC80AEC", VA = "0xC80AEC")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000080")]
		public Vector3 CurrentAngularVelocity
		{
			[Token(Token = "0x6000B6A")]
			[Address(RVA = "0xC80BD4", Offset = "0xC80BD4", VA = "0xC80BD4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x17000081")]
		public Vector3 CurrentWorldCenterOfMass
		{
			[Token(Token = "0x6000B6B")]
			[Address(RVA = "0xC80CC4", Offset = "0xC80CC4", VA = "0xC80CC4")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000B6C")]
		[Address(RVA = "0xC80DAC", Offset = "0xC80DAC", VA = "0xC80DAC")]
		public ImpactRigidbodyWrapper(GameObject gameObject)
		{
		}

		[Token(Token = "0x6000B6D")]
		[Address(RVA = "0xC80F54", Offset = "0xC80F54", VA = "0xC80F54")]
		public ImpactRigidbodyWrapper(Rigidbody rigidbody3D)
		{
		}

		[Token(Token = "0x6000B6E")]
		[Address(RVA = "0xC80F80", Offset = "0xC80F80", VA = "0xC80F80")]
		public ImpactRigidbodyWrapper(Rigidbody2D rigidbody2D)
		{
		}

		[Token(Token = "0x6000B6F")]
		[Address(RVA = "0xC80FB0", Offset = "0xC80FB0", VA = "0xC80FB0")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6000B70")]
		[Address(RVA = "0xC81070", Offset = "0xC81070", VA = "0xC81070")]
		public VelocityData GetVelocityData(Vector3 point)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x6000B71")]
		[Address(RVA = "0xC81114", Offset = "0xC81114", VA = "0xC81114")]
		public VelocityData GetCurrentVelocityData(Vector3 point)
		{
			return default(VelocityData);
		}
	}
	[Serializable]
	[Token(Token = "0x20002E2")]
	public struct ImpactTag
	{
		[Token(Token = "0x4000F99")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _value;

		[Token(Token = "0x4000F9A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private ImpactTagLibraryBase _tagLibrary;

		[Token(Token = "0x17000082")]
		public int Value
		{
			[Token(Token = "0x6000B72")]
			[Address(RVA = "0xC811C8", Offset = "0xC811C8", VA = "0xC811C8")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B73")]
			[Address(RVA = "0xC811D0", Offset = "0xC811D0", VA = "0xC811D0")]
			set
			{
			}
		}

		[Token(Token = "0x6000B74")]
		[Address(RVA = "0xC811D8", Offset = "0xC811D8", VA = "0xC811D8")]
		public ImpactTag(int tagValue, ImpactTagLibraryBase tagLibrary)
		{
		}

		[Token(Token = "0x6000B75")]
		[Address(RVA = "0xC811E4", Offset = "0xC811E4", VA = "0xC811E4")]
		public ImpactTagMask GetTagMask()
		{
			return default(ImpactTagMask);
		}
	}
	[Serializable]
	[Token(Token = "0x20002E3")]
	public struct ImpactTagMask
	{
		[Token(Token = "0x4000F9B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _value;

		[Token(Token = "0x4000F9C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		[SerializeField]
		private ImpactTagLibraryBase _tagLibrary;

		[Token(Token = "0x17000083")]
		public int Value
		{
			[Token(Token = "0x6000B76")]
			[Address(RVA = "0xC81204", Offset = "0xC81204", VA = "0xC81204")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000B77")]
			[Address(RVA = "0xC8120C", Offset = "0xC8120C", VA = "0xC8120C")]
			set
			{
			}
		}

		[Token(Token = "0x6000B78")]
		[Address(RVA = "0xC811F8", Offset = "0xC811F8", VA = "0xC811F8")]
		public ImpactTagMask(int maskValue, ImpactTagLibraryBase tagLibrary)
		{
		}
	}
	[Token(Token = "0x20002E4")]
	public struct InteractionData : IInteractionData
	{
		[Token(Token = "0x4000F9D")]
		public const int InteractionTypeCollision = 0;

		[Token(Token = "0x4000F9E")]
		public const int InteractionTypeSlide = 1;

		[Token(Token = "0x4000F9F")]
		public const int InteractionTypeRoll = 2;

		[Token(Token = "0x4000FA0")]
		[Obsolete("Simple interaction types are no longer used. Use InteractionTypeCollision instead.")]
		public const int InteractionTypeSimple = 3;

		[Token(Token = "0x17000084")]
		public int InteractionType
		{
			[Token(Token = "0x6000B79")]
			[Address(RVA = "0xC81214", Offset = "0xC81214", VA = "0xC81214", Slot = "4")]
			[CompilerGenerated]
			readonly get
			{
				return default(int);
			}
			[Token(Token = "0x6000B7A")]
			[Address(RVA = "0xC8121C", Offset = "0xC8121C", VA = "0xC8121C", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000085")]
		public Vector3 Velocity
		{
			[Token(Token = "0x6000B7B")]
			[Address(RVA = "0xC81224", Offset = "0xC81224", VA = "0xC81224", Slot = "6")]
			[CompilerGenerated]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B7C")]
			[Address(RVA = "0xC81230", Offset = "0xC81230", VA = "0xC81230", Slot = "7")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000086")]
		public Vector3 Point
		{
			[Token(Token = "0x6000B7D")]
			[Address(RVA = "0xC8123C", Offset = "0xC8123C", VA = "0xC8123C", Slot = "8")]
			[CompilerGenerated]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B7E")]
			[Address(RVA = "0xC81248", Offset = "0xC81248", VA = "0xC81248", Slot = "9")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000087")]
		public Vector3 Normal
		{
			[Token(Token = "0x6000B7F")]
			[Address(RVA = "0xC81254", Offset = "0xC81254", VA = "0xC81254", Slot = "10")]
			[CompilerGenerated]
			readonly get
			{
				return default(Vector3);
			}
			[Token(Token = "0x6000B80")]
			[Address(RVA = "0xC81260", Offset = "0xC81260", VA = "0xC81260", Slot = "11")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000088")]
		public ImpactTagMask? TagMask
		{
			[Token(Token = "0x6000B81")]
			[Address(RVA = "0xC8126C", Offset = "0xC8126C", VA = "0xC8126C", Slot = "12")]
			[CompilerGenerated]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000B82")]
			[Address(RVA = "0xC81280", Offset = "0xC81280", VA = "0xC81280", Slot = "13")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000089")]
		public float CompositionValue
		{
			[Token(Token = "0x6000B83")]
			[Address(RVA = "0xC81294", Offset = "0xC81294", VA = "0xC81294", Slot = "14")]
			[CompilerGenerated]
			readonly get
			{
				return default(float);
			}
			[Token(Token = "0x6000B84")]
			[Address(RVA = "0xC8129C", Offset = "0xC8129C", VA = "0xC8129C", Slot = "15")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700008A")]
		public int? PriorityOverride
		{
			[Token(Token = "0x6000B85")]
			[Address(RVA = "0xC812A4", Offset = "0xC812A4", VA = "0xC812A4", Slot = "16")]
			[CompilerGenerated]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000B86")]
			[Address(RVA = "0xC812AC", Offset = "0xC812AC", VA = "0xC812AC", Slot = "17")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700008B")]
		public GameObject ThisObject
		{
			[Token(Token = "0x6000B87")]
			[Address(RVA = "0xC812B4", Offset = "0xC812B4", VA = "0xC812B4", Slot = "18")]
			[CompilerGenerated]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000B88")]
			[Address(RVA = "0xC812BC", Offset = "0xC812BC", VA = "0xC812BC", Slot = "19")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x1700008C")]
		public GameObject OtherObject
		{
			[Token(Token = "0x6000B89")]
			[Address(RVA = "0xC812C4", Offset = "0xC812C4", VA = "0xC812C4", Slot = "20")]
			[CompilerGenerated]
			readonly get
			{
				return null;
			}
			[Token(Token = "0x6000B8A")]
			[Address(RVA = "0xC812CC", Offset = "0xC812CC", VA = "0xC812CC", Slot = "21")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000B8B")]
		[Address(RVA = "0xC812D4", Offset = "0xC812D4", VA = "0xC812D4", Slot = "22")]
		public IInteractionData Clone()
		{
			return null;
		}

		[Token(Token = "0x6000B8C")]
		[Address(RVA = "0xC81364", Offset = "0xC81364", VA = "0xC81364", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002E5")]
	public static class InteractionDataUtilities
	{
		[Token(Token = "0x6000B8D")]
		public static InteractionData ToInteractionData<T>(T original) where T : IInteractionData
		{
			return default(InteractionData);
		}
	}
	[Token(Token = "0x20002E6")]
	public interface IImpactCollisionWrapper<T> where T : IImpactContactPoint
	{
		[Token(Token = "0x1700008D")]
		int ContactCount
		{
			[Token(Token = "0x6000B8E")]
			get;
		}

		[Token(Token = "0x1700008E")]
		PhysicsType PhysicsType
		{
			[Token(Token = "0x6000B8F")]
			get;
		}

		[Token(Token = "0x6000B90")]
		T GetContact(int index);
	}
	[Token(Token = "0x20002E7")]
	public interface IImpactContactPoint
	{
		[Token(Token = "0x1700008F")]
		Vector3 Point
		{
			[Token(Token = "0x6000B91")]
			get;
			[Token(Token = "0x6000B92")]
			set;
		}

		[Token(Token = "0x17000090")]
		Vector3 Normal
		{
			[Token(Token = "0x6000B93")]
			get;
			[Token(Token = "0x6000B94")]
			set;
		}

		[Token(Token = "0x17000091")]
		GameObject ThisObject
		{
			[Token(Token = "0x6000B95")]
			get;
			[Token(Token = "0x6000B96")]
			set;
		}

		[Token(Token = "0x17000092")]
		GameObject OtherObject
		{
			[Token(Token = "0x6000B97")]
			get;
			[Token(Token = "0x6000B98")]
			set;
		}

		[Token(Token = "0x17000093")]
		PhysicsType PhysicsType
		{
			[Token(Token = "0x6000B99")]
			get;
			[Token(Token = "0x6000B9A")]
			set;
		}

		[Token(Token = "0x17000094")]
		int ThisPhysicsMaterialID
		{
			[Token(Token = "0x6000B9B")]
			get;
			[Token(Token = "0x6000B9C")]
			set;
		}

		[Token(Token = "0x17000095")]
		int OtherPhysicsMaterialID
		{
			[Token(Token = "0x6000B9D")]
			get;
			[Token(Token = "0x6000B9E")]
			set;
		}
	}
	[Token(Token = "0x20002E8")]
	public interface IInteractionData
	{
		[Token(Token = "0x17000096")]
		int InteractionType
		{
			[Token(Token = "0x6000B9F")]
			get;
			[Token(Token = "0x6000BA0")]
			set;
		}

		[Token(Token = "0x17000097")]
		Vector3 Velocity
		{
			[Token(Token = "0x6000BA1")]
			get;
			[Token(Token = "0x6000BA2")]
			set;
		}

		[Token(Token = "0x17000098")]
		Vector3 Point
		{
			[Token(Token = "0x6000BA3")]
			get;
			[Token(Token = "0x6000BA4")]
			set;
		}

		[Token(Token = "0x17000099")]
		Vector3 Normal
		{
			[Token(Token = "0x6000BA5")]
			get;
			[Token(Token = "0x6000BA6")]
			set;
		}

		[Token(Token = "0x1700009A")]
		ImpactTagMask? TagMask
		{
			[Token(Token = "0x6000BA7")]
			get;
			[Token(Token = "0x6000BA8")]
			set;
		}

		[Token(Token = "0x1700009B")]
		float CompositionValue
		{
			[Token(Token = "0x6000BA9")]
			get;
			[Token(Token = "0x6000BAA")]
			set;
		}

		[Token(Token = "0x1700009C")]
		int? PriorityOverride
		{
			[Token(Token = "0x6000BAB")]
			get;
			[Token(Token = "0x6000BAC")]
			set;
		}

		[Token(Token = "0x1700009D")]
		GameObject ThisObject
		{
			[Token(Token = "0x6000BAD")]
			get;
			[Token(Token = "0x6000BAE")]
			set;
		}

		[Token(Token = "0x1700009E")]
		GameObject OtherObject
		{
			[Token(Token = "0x6000BAF")]
			get;
			[Token(Token = "0x6000BB0")]
			set;
		}

		[Token(Token = "0x6000BB1")]
		IInteractionData Clone();
	}
	[Token(Token = "0x20002E9")]
	public enum PhysicsType
	{
		[Token(Token = "0x4000FAB")]
		Physics3D,
		[Token(Token = "0x4000FAC")]
		Physics2D,
		[Token(Token = "0x4000FAD")]
		Unknown
	}
	[Token(Token = "0x20002EA")]
	public struct VelocityData
	{
		[Token(Token = "0x4000FAE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public Vector3 LinearVelocity;

		[Token(Token = "0x4000FAF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC")]
		public Vector3 TangentialVelocity;

		[Token(Token = "0x1700009F")]
		public Vector3 TotalPointVelocity
		{
			[Token(Token = "0x6000BB2")]
			[Address(RVA = "0xC81734", Offset = "0xC81734", VA = "0xC81734")]
			get
			{
				return default(Vector3);
			}
		}

		[Token(Token = "0x6000BB3")]
		[Address(RVA = "0xC81104", Offset = "0xC81104", VA = "0xC81104")]
		public VelocityData(Vector3 linearVelocity, Vector3 tangentialVelocity)
		{
		}

		[Token(Token = "0x6000BB4")]
		[Address(RVA = "0xC81754", Offset = "0xC81754", VA = "0xC81754", Slot = "3")]
		public override string ToString()
		{
			return null;
		}
	}
	[Token(Token = "0x20002EB")]
	[Preserve]
	public class ImpactAOTWorkaround
	{
		[Token(Token = "0x6000BB5")]
		[Address(RVA = "0xC819C4", Offset = "0xC819C4", VA = "0xC819C4")]
		public ImpactAOTWorkaround()
		{
		}
	}
	[Token(Token = "0x20002EC")]
	public static class ImpactDebugger
	{
		[Token(Token = "0x6000BB6")]
		public static void LogInteraction<T>(T obj) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000BB7")]
		[Address(RVA = "0xC8169C", Offset = "0xC8169C", VA = "0xC8169C")]
		public static string InteractionTypeToString(int interactionType)
		{
			return null;
		}
	}
	[Token(Token = "0x20002ED")]
	[AddComponentMenu("Impact/Impact Manager")]
	public class ImpactManager : MonoBehaviour
	{
		[Token(Token = "0x4000FB0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private int _physicsInteractionsLimit;

		[Token(Token = "0x4000FB1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private int _interactionResultBufferSize;

		[Token(Token = "0x4000FB2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private int _activeContinuousInteractions;

		[Token(Token = "0x4000FB3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private int _materialCompositionBufferSize;

		[Token(Token = "0x4000FB4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _usePhysicMaterialMapping;

		[Token(Token = "0x4000FB5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x29")]
		[SerializeField]
		private bool _dontDestroyOnLoad;

		[Token(Token = "0x4000FB6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2A")]
		[SerializeField]
		private bool _setAsActiveInstance;

		[Token(Token = "0x4000FB7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<ImpactPhysicMaterialMapping> _physicMaterialMap;

		[Token(Token = "0x4000FB8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private List<ImpactPhysicsMaterial2DMapping> _physicsMaterial2DMap;

		[Token(Token = "0x4000FB9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private Dictionary<int, IImpactMaterial> materialMapDictionary;

		[Token(Token = "0x4000FBA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Dictionary<string, ClassPool> interactionResultPools;

		[Token(Token = "0x4000FBB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private int physicsInteractionsCounter;

		[Token(Token = "0x4000FBC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private IContinuousInteractionResult[] activeContinuousInteractionResults;

		[Token(Token = "0x4000FBD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private HashSet<long> activeContinuousInteractionKeys;

		[Token(Token = "0x4000FBE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		private int currentActiveContinuousInteractionCount;

		[Token(Token = "0x170000A0")]
		public IInteractionResult[] InteractionResultBuffer
		{
			[Token(Token = "0x6000BB8")]
			[Address(RVA = "0xC81AC0", Offset = "0xC81AC0", VA = "0xC81AC0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BB9")]
			[Address(RVA = "0xC81AC8", Offset = "0xC81AC8", VA = "0xC81AC8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000A1")]
		public ImpactMaterialComposition[] MaterialCompositionBuffer
		{
			[Token(Token = "0x6000BBA")]
			[Address(RVA = "0xC81AD0", Offset = "0xC81AD0", VA = "0xC81AD0")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BBB")]
			[Address(RVA = "0xC81AD8", Offset = "0xC81AD8", VA = "0xC81AD8")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000A2")]
		public bool UseMaterialMapping
		{
			[Token(Token = "0x6000BBC")]
			[Address(RVA = "0xC81AE0", Offset = "0xC81AE0", VA = "0xC81AE0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BBD")]
			[Address(RVA = "0xC81AE8", Offset = "0xC81AE8", VA = "0xC81AE8")]
			set
			{
			}
		}

		[Token(Token = "0x6000BBE")]
		[Address(RVA = "0xC81AF4", Offset = "0xC81AF4", VA = "0xC81AF4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000BBF")]
		[Address(RVA = "0xC81FB8", Offset = "0xC81FB8", VA = "0xC81FB8")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000BC0")]
		[Address(RVA = "0xC82140", Offset = "0xC82140", VA = "0xC82140")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000BC1")]
		[Address(RVA = "0xC81BBC", Offset = "0xC81BBC", VA = "0xC81BBC")]
		public void Initialize()
		{
		}

		[Token(Token = "0x6000BC2")]
		[Address(RVA = "0xC823C0", Offset = "0xC823C0", VA = "0xC823C0")]
		public bool HasReachedPhysicsInteractionsLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC3")]
		[Address(RVA = "0xC823E4", Offset = "0xC823E4", VA = "0xC823E4")]
		public void IncrementPhysicsInteractionsLimit()
		{
		}

		[Token(Token = "0x6000BC4")]
		[Address(RVA = "0xC823F4", Offset = "0xC823F4", VA = "0xC823F4")]
		public bool HasReachedContinuousInteractionLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC5")]
		[Address(RVA = "0xC82408", Offset = "0xC82408", VA = "0xC82408")]
		public bool TryGetImpactMaterialFromMapping(Collider collider, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC6")]
		[Address(RVA = "0xC824FC", Offset = "0xC824FC", VA = "0xC824FC")]
		public bool TryGetImpactMaterialFromMapping(Collider2D collider2d, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC7")]
		[Address(RVA = "0xC825F0", Offset = "0xC825F0", VA = "0xC825F0")]
		public bool TryGetImpactMaterialFromMapping(int physicsMaterialInstanceId, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BC8")]
		public void ProcessInteraction<T>(T interactionData, IImpactMaterial impactMaterial, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000BC9")]
		public void ProcessContinuousInteraction<T>(T interactionData, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000BCA")]
		public void ProcessContinuousInteraction<T>(T interactionData, IImpactMaterial material, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000BCB")]
		[Address(RVA = "0xC82678", Offset = "0xC82678", VA = "0xC82678")]
		public void AddOrUpdateContinuousInteractionResult(IImpactObject impactObject, IContinuousInteractionResult result)
		{
		}

		[Token(Token = "0x6000BCC")]
		[Address(RVA = "0xC82BA4", Offset = "0xC82BA4", VA = "0xC82BA4")]
		public bool HasActiveContinuousInteractionWithKey(long key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BCD")]
		[Address(RVA = "0xC82820", Offset = "0xC82820", VA = "0xC82820")]
		private IContinuousInteractionResult findContinuousInteractionResult(long key)
		{
			return null;
		}

		[Token(Token = "0x6000BCE")]
		[Address(RVA = "0xC82948", Offset = "0xC82948", VA = "0xC82948")]
		private void addContinuousInteractionResult(IImpactObject impactObject, IContinuousInteractionResult continuousInteractionResult)
		{
		}

		[Token(Token = "0x6000BCF")]
		public ClassPool CreateInteractionResultPool<T>(string key) where T : class, IPoolable, new()
		{
			return null;
		}

		[Token(Token = "0x6000BD0")]
		public bool TryGetInteractionResultFromPool<T>(string key, out T obj) where T : class, IPoolable, new()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BD1")]
		[Address(RVA = "0xC82BFC", Offset = "0xC82BFC", VA = "0xC82BFC")]
		public ImpactManager()
		{
		}
	}
	[Token(Token = "0x20002EE")]
	public static class ImpactManagerInstance
	{
		[Token(Token = "0x4000FC1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ImpactManager instance;

		[Token(Token = "0x4000FC2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8")]
		private static bool hasInstance;

		[Token(Token = "0x170000A3")]
		public static IInteractionResult[] InteractionResultBuffer
		{
			[Token(Token = "0x6000BD2")]
			[Address(RVA = "0xC82CD8", Offset = "0xC82CD8", VA = "0xC82CD8")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A4")]
		public static ImpactMaterialComposition[] MaterialCompositionBuffer
		{
			[Token(Token = "0x6000BD3")]
			[Address(RVA = "0xC82DCC", Offset = "0xC82DCC", VA = "0xC82DCC")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x170000A5")]
		public static bool UseMaterialMapping
		{
			[Token(Token = "0x6000BD7")]
			[Address(RVA = "0xC82DEC", Offset = "0xC82DEC", VA = "0xC82DEC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000BD8")]
			[Address(RVA = "0xC82E0C", Offset = "0xC82E0C", VA = "0xC82E0C")]
			set
			{
			}
		}

		[Token(Token = "0x6000BD4")]
		[Address(RVA = "0xC81B18", Offset = "0xC81B18", VA = "0xC81B18")]
		public static void SetInstance(ImpactManager inst)
		{
		}

		[Token(Token = "0x6000BD5")]
		[Address(RVA = "0xC82CF8", Offset = "0xC82CF8", VA = "0xC82CF8")]
		public static ImpactManager GetInstance(bool createIfNull = true)
		{
			return null;
		}

		[Token(Token = "0x6000BD6")]
		[Address(RVA = "0xC8209C", Offset = "0xC8209C", VA = "0xC8209C")]
		public static void ClearInstance(ImpactManager inst)
		{
		}

		[Token(Token = "0x6000BD9")]
		[Address(RVA = "0xC82E34", Offset = "0xC82E34", VA = "0xC82E34")]
		public static bool HasReachedPhysicsInteractionsLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDA")]
		[Address(RVA = "0xC82E70", Offset = "0xC82E70", VA = "0xC82E70")]
		public static void IncrementPhysicsInteractionsLimit()
		{
		}

		[Token(Token = "0x6000BDB")]
		[Address(RVA = "0xC82E98", Offset = "0xC82E98", VA = "0xC82E98")]
		public static bool HasReachedContinuousInteractionLimit()
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDC")]
		[Address(RVA = "0xC82EC4", Offset = "0xC82EC4", VA = "0xC82EC4")]
		public static bool HasActiveContinuousInteractionWithKey(long key)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDD")]
		[Address(RVA = "0xC82EE8", Offset = "0xC82EE8", VA = "0xC82EE8")]
		public static bool TryGetImpactMaterialFromMapping(Collider collider, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDE")]
		[Address(RVA = "0xC82F1C", Offset = "0xC82F1C", VA = "0xC82F1C")]
		public static bool TryGetImpactMaterialFromMapping(Collider2D collider2d, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BDF")]
		[Address(RVA = "0xC82F50", Offset = "0xC82F50", VA = "0xC82F50")]
		public static bool TryGetImpactMaterialFromMapping(int physicsMaterialInstanceId, out IImpactMaterial impactMaterial)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BE0")]
		public static void ProcessInteraction<T>(T interactionData, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000BE1")]
		public static void ProcessInteraction<T>(T interactionData, IImpactMaterial impactMaterial, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000BE2")]
		public static void ProcessContinuousInteraction<T>(T interactionData, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000BE3")]
		public static void ProcessContinuousInteraction<T>(T interactionData, IImpactMaterial material, IImpactObject impactObject) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000BE4")]
		[Address(RVA = "0xC82F84", Offset = "0xC82F84", VA = "0xC82F84")]
		public static void AddOrUpdateContinuousInteractionResult(IImpactObject impactObject, IContinuousInteractionResult result)
		{
		}

		[Token(Token = "0x6000BE5")]
		public static void CreateInteractionResultPool<T>(string key) where T : class, IPoolable, new()
		{
		}

		[Token(Token = "0x6000BE6")]
		public static bool TryGetInteractionResultFromPool<T>(string key, out T obj) where T : class, IPoolable, new()
		{
			return default(bool);
		}
	}
	[Serializable]
	[Token(Token = "0x20002EF")]
	public class ImpactPhysicMaterialMapping
	{
		[Token(Token = "0x4000FC3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicMaterial PhysicMaterial;

		[Token(Token = "0x4000FC4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImpactMaterialBase ImpactMaterial;

		[Token(Token = "0x6000BE7")]
		[Address(RVA = "0xC82FB8", Offset = "0xC82FB8", VA = "0xC82FB8")]
		public ImpactPhysicMaterialMapping()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x20002F0")]
	public class ImpactPhysicsMaterial2DMapping
	{
		[Token(Token = "0x4000FC5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		public PhysicsMaterial2D PhysicsMaterial2D;

		[Token(Token = "0x4000FC6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public ImpactMaterialBase ImpactMaterial;

		[Token(Token = "0x6000BE8")]
		[Address(RVA = "0xC82FC0", Offset = "0xC82FC0", VA = "0xC82FC0")]
		public ImpactPhysicsMaterial2DMapping()
		{
		}
	}
}
namespace Impact.Utility
{
	[Token(Token = "0x20002F1")]
	public static class Extensions
	{
		[Token(Token = "0x6000BE9")]
		[Address(RVA = "0xC82FC8", Offset = "0xC82FC8", VA = "0xC82FC8")]
		public static int SetBit(this int bitmask, int pos)
		{
			return default(int);
		}

		[Token(Token = "0x6000BEA")]
		[Address(RVA = "0xC82FD8", Offset = "0xC82FD8", VA = "0xC82FD8")]
		public static int UnsetBit(this int bitmask, int pos)
		{
			return default(int);
		}

		[Token(Token = "0x6000BEB")]
		[Address(RVA = "0xC82FE8", Offset = "0xC82FE8", VA = "0xC82FE8")]
		public static bool IsBitSet(this int bitmask, int pos)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BEC")]
		public static T GetOrAddComponent<T>(this GameObject gameObject, bool checkParents) where T : Component
		{
			return null;
		}

		[Token(Token = "0x6000BED")]
		public static int IndexOf<T>(this T[] array, Predicate<T> predicate)
		{
			return default(int);
		}
	}
	[Token(Token = "0x20002F2")]
	public static class PhysicsUtilities
	{
		[Token(Token = "0x6000BEE")]
		[Address(RVA = "0xC810C8", Offset = "0xC810C8", VA = "0xC810C8")]
		public static Vector3 CalculateTangentialVelocity(Vector3 point, Vector3 angularVelocity, Vector3 centerOfRotation)
		{
			return default(Vector3);
		}
	}
	[Serializable]
	[Token(Token = "0x20002F3")]
	public struct Range
	{
		[Token(Token = "0x4000FC7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		public float Min;

		[Token(Token = "0x4000FC8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4")]
		public float Max;

		[Token(Token = "0x6000BEF")]
		[Address(RVA = "0xC82FFC", Offset = "0xC82FFC", VA = "0xC82FFC")]
		public Range(float min, float max)
		{
		}

		[Token(Token = "0x6000BF0")]
		[Address(RVA = "0xC83004", Offset = "0xC83004", VA = "0xC83004")]
		public bool IsInRange(float f)
		{
			return default(bool);
		}

		[Token(Token = "0x6000BF1")]
		[Address(RVA = "0xC83028", Offset = "0xC83028", VA = "0xC83028")]
		public float Clamp(float f)
		{
			return default(float);
		}

		[Token(Token = "0x6000BF2")]
		[Address(RVA = "0xC83040", Offset = "0xC83040", VA = "0xC83040")]
		public float RandomInRange()
		{
			return default(float);
		}

		[Token(Token = "0x6000BF3")]
		[Address(RVA = "0xC8304C", Offset = "0xC8304C", VA = "0xC8304C")]
		public int RandomInRangeInteger()
		{
			return default(int);
		}

		[Token(Token = "0x6000BF4")]
		[Address(RVA = "0xC83084", Offset = "0xC83084", VA = "0xC83084")]
		public float Lerp(float t)
		{
			return default(float);
		}

		[Token(Token = "0x6000BF5")]
		[Address(RVA = "0xC83098", Offset = "0xC83098", VA = "0xC83098")]
		public float Normalize(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6000BF6")]
		[Address(RVA = "0xC830EC", Offset = "0xC830EC", VA = "0xC830EC")]
		public float NormalizeUnclamped(float val)
		{
			return default(float);
		}

		[Token(Token = "0x6000BF7")]
		[Address(RVA = "0xC83100", Offset = "0xC83100", VA = "0xC83100")]
		public float Distance()
		{
			return default(float);
		}
	}
}
namespace Impact.Utility.ObjectPool
{
	[Token(Token = "0x20002F4")]
	public class ClassPool
	{
		[Token(Token = "0x4000FC9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		private List<IPoolable> pooledObjects;

		[Token(Token = "0x4000FCA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private int lastAvailable;

		[Token(Token = "0x6000BF8")]
		public T GetObject<T>() where T : class, IPoolable, new()
		{
			return null;
		}

		[Token(Token = "0x6000BF9")]
		[Address(RVA = "0xC8310C", Offset = "0xC8310C", VA = "0xC8310C")]
		public ClassPool()
		{
		}
	}
	[Token(Token = "0x20002F5")]
	public interface IPoolable
	{
		[Token(Token = "0x6000BFA")]
		void Retrieve();

		[Token(Token = "0x6000BFB")]
		void MakeAvailable();

		[Token(Token = "0x6000BFC")]
		bool IsAvailable();
	}
	[Token(Token = "0x20002F6")]
	public class ObjectPool<T> : MonoBehaviour where T : PooledObject
	{
		[Token(Token = "0x4000FCB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected int _poolSize;

		[Token(Token = "0x4000FCC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		protected ObjectPoolFallbackMode _fallbackMode;

		[Token(Token = "0x4000FCD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected T[] pooledObjects;

		[Token(Token = "0x4000FCE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		protected int lastAvailable;

		[Token(Token = "0x170000A6")]
		public T Template
		{
			[Token(Token = "0x6000BFD")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000BFE")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000A7")]
		public int PoolSize
		{
			[Token(Token = "0x6000BFF")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C00")]
			set
			{
			}
		}

		[Token(Token = "0x170000A8")]
		public ObjectPoolFallbackMode FallbackMode
		{
			[Token(Token = "0x6000C01")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x6000C02")]
			set
			{
			}
		}

		[Token(Token = "0x6000C03")]
		public virtual void Initialize(int poolSize, ObjectPoolFallbackMode fallbackMode)
		{
		}

		[Token(Token = "0x6000C04")]
		protected virtual T createPooledObjectInstance(int index)
		{
			return null;
		}

		[Token(Token = "0x6000C05")]
		public virtual bool GetObject(int priority, out T result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C06")]
		public void ReturnAllObjectsToPool()
		{
		}

		[Token(Token = "0x6000C07")]
		protected virtual void OnDestroy()
		{
		}

		[Token(Token = "0x6000C08")]
		public ObjectPool()
		{
		}
	}
	[Token(Token = "0x20002F7")]
	public enum ObjectPoolFallbackMode
	{
		[Token(Token = "0x4000FD1")]
		None,
		[Token(Token = "0x4000FD2")]
		LowerPriority,
		[Token(Token = "0x4000FD3")]
		Oldest
	}
	[Token(Token = "0x20002F8")]
	public class ObjectPoolGroup<TPool, TTemplate> where TPool : ObjectPool<TTemplate> where TTemplate : PooledObject
	{
		[Token(Token = "0x4000FD4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<TPool> pools;

		[Token(Token = "0x6000C09")]
		public bool GetOrCreatePool(TTemplate template, int poolSize, ObjectPoolFallbackMode objectPoolFallbackMode, out TPool result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0A")]
		public bool GetPool(TTemplate template, out TPool result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0B")]
		public bool CreatePool(TTemplate template, int poolSize, ObjectPoolFallbackMode objectPoolFallbackMode, out TPool result)
		{
			return default(bool);
		}

		[Token(Token = "0x6000C0C")]
		public void Add(TPool pool)
		{
		}

		[Token(Token = "0x6000C0D")]
		public void Remove(TPool pool)
		{
		}

		[Token(Token = "0x6000C0E")]
		public void ReturnAllObjectsToPools()
		{
		}

		[Token(Token = "0x6000C0F")]
		public ObjectPoolGroup()
		{
		}
	}
	[Token(Token = "0x20002F9")]
	public class PooledObject : MonoBehaviour
	{
		[Token(Token = "0x170000A9")]
		public Transform OriginalParent
		{
			[Token(Token = "0x6000C10")]
			[Address(RVA = "0xC83188", Offset = "0xC83188", VA = "0xC83188")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C11")]
			[Address(RVA = "0xC83190", Offset = "0xC83190", VA = "0xC83190")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000AA")]
		public int LastRetrievedFrame
		{
			[Token(Token = "0x6000C12")]
			[Address(RVA = "0xC83198", Offset = "0xC83198", VA = "0xC83198")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C13")]
			[Address(RVA = "0xC831A0", Offset = "0xC831A0", VA = "0xC831A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000AB")]
		public int Priority
		{
			[Token(Token = "0x6000C14")]
			[Address(RVA = "0xC831A8", Offset = "0xC831A8", VA = "0xC831A8")]
			[CompilerGenerated]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C15")]
			[Address(RVA = "0xC831B0", Offset = "0xC831B0", VA = "0xC831B0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x6000C16")]
		[Address(RVA = "0xC831B8", Offset = "0xC831B8", VA = "0xC831B8", Slot = "4")]
		public virtual void Retrieve(int priority)
		{
		}

		[Token(Token = "0x6000C17")]
		[Address(RVA = "0xC831FC", Offset = "0xC831FC", VA = "0xC831FC", Slot = "5")]
		public virtual void MakeAvailable()
		{
		}

		[Token(Token = "0x6000C18")]
		[Address(RVA = "0xC8324C", Offset = "0xC8324C", VA = "0xC8324C", Slot = "6")]
		public virtual bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000C19")]
		[Address(RVA = "0xC83278", Offset = "0xC83278", VA = "0xC83278")]
		public PooledObject()
		{
		}
	}
}
namespace Impact.Triggers
{
	[Token(Token = "0x20002FA")]
	public static class ImpactRaycastTrigger
	{
		[Token(Token = "0x6000C1A")]
		[Address(RVA = "0xC83280", Offset = "0xC83280", VA = "0xC83280")]
		public static void Trigger(ImpactTagMask tagMask, RaycastHit hit, Vector3 velocity, GameObject fromObject, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x6000C1B")]
		public static void Trigger<T>(T interactionData, RaycastHit hit, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000C1C")]
		[Address(RVA = "0xC833BC", Offset = "0xC833BC", VA = "0xC833BC")]
		public static void Trigger2D(ImpactTagMask tagMask, RaycastHit2D hit, Vector3 velocity, GameObject fromObject, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x6000C1D")]
		public static void Trigger2D<T>(T interactionData, RaycastHit2D hit, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000C1E")]
		public static void Trigger<T>(T interactionData, IImpactObject otherObject, int otherObjectPhysicsMaterialID, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000C1F")]
		[Address(RVA = "0xC834F8", Offset = "0xC834F8", VA = "0xC834F8")]
		public static void Trigger(IImpactObject impactObject, RaycastHit hit, Vector3 velocity, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x6000C20")]
		public static void Trigger<T>(T interactionData, RaycastHit hit, IImpactObject impactObject, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000C21")]
		[Address(RVA = "0xC83654", Offset = "0xC83654", VA = "0xC83654")]
		public static void Trigger2D(IImpactObject impactObject, RaycastHit2D hit, Vector3 velocity, int interactionType, bool useMaterialComposition)
		{
		}

		[Token(Token = "0x6000C22")]
		public static void Trigger2D<T>(T interactionData, RaycastHit2D hit, IImpactObject impactObject, bool useMaterialComposition) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000C23")]
		public static void Trigger<T>(T interactionData, IImpactObject sourceObject, IImpactObject otherObject, int otherObjectPhysicsMaterialID, bool useMaterialComposition) where T : IInteractionData
		{
		}
	}
	[Token(Token = "0x20002FB")]
	public abstract class ImpactTriggerBase<TCollision, TContact> : MonoBehaviour, IImpactTrigger where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Token(Token = "0x4000FD9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _enabled;

		[Token(Token = "0x4000FDA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ImpactObjectBase _target;

		[Token(Token = "0x4000FDB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _useMaterialComposition;

		[Token(Token = "0x4000FDC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private ImpactTriggerContactMode _contactMode;

		[Token(Token = "0x4000FDD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private bool _highPriority;

		[Token(Token = "0x4000FDE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private bool hasMainTarget;

		[Token(Token = "0x170000AC")]
		public bool Enabled
		{
			[Token(Token = "0x6000C26")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C27")]
			set
			{
			}
		}

		[Token(Token = "0x170000AD")]
		public ImpactObjectBase MainTarget
		{
			[Token(Token = "0x6000C28")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C29")]
			set
			{
			}
		}

		[Token(Token = "0x170000AE")]
		public bool UseMaterialComposition
		{
			[Token(Token = "0x6000C2A")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C2B")]
			set
			{
			}
		}

		[Token(Token = "0x170000AF")]
		public ImpactTriggerContactMode ContactMode
		{
			[Token(Token = "0x6000C2C")]
			get
			{
				return default(ImpactTriggerContactMode);
			}
			[Token(Token = "0x6000C2D")]
			set
			{
			}
		}

		[Token(Token = "0x170000B0")]
		public bool HighPriority
		{
			[Token(Token = "0x6000C2E")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000C2F")]
			set
			{
			}
		}

		[Token(Token = "0x14000020")]
		public event Action<InteractionData, IImpactObject> OnTriggered
		{
			[Token(Token = "0x6000C24")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000C25")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000C30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C31")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000C32")]
		protected IImpactObject getImpactObject(GameObject collider)
		{
			return null;
		}

		[Token(Token = "0x6000C33")]
		protected void processCollision(TCollision collision)
		{
		}

		[Token(Token = "0x6000C34")]
		protected void processCollisionSingleContact(TCollision collision)
		{
		}

		[Token(Token = "0x6000C35")]
		protected void processCollisionSingleAveragedContact(TCollision collision)
		{
		}

		[Token(Token = "0x6000C36")]
		protected void processCollisionMultipleContacts(TCollision collision)
		{
		}

		[Token(Token = "0x6000C37")]
		protected void processCollisionContact(TCollision collision, TContact contactPoint)
		{
		}

		[Token(Token = "0x6000C38")]
		protected ImpactTagMask? getOtherObjectTagMask(IImpactObject impactObject, Vector3 point, int otherPhysicsMaterialID, bool hasOtherObject)
		{
			return null;
		}

		[Token(Token = "0x6000C39")]
		protected virtual void buildInteractionData(IImpactObject target, TCollision collision, TContact contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float compositionValue)
		{
		}

		[Token(Token = "0x6000C3A")]
		protected void invokeTriggeredEvent(InteractionData interactionData, IImpactObject impactObject)
		{
		}

		[Token(Token = "0x6000C3B")]
		protected ImpactTriggerBase()
		{
		}
	}
	[Token(Token = "0x20002FC")]
	public enum ImpactTriggerContactMode
	{
		[Token(Token = "0x4000FE0")]
		Single,
		[Token(Token = "0x4000FE1")]
		SingleAverage,
		[Token(Token = "0x4000FE2")]
		Multiple
	}
	[Token(Token = "0x20002FD")]
	public interface IImpactTrigger
	{
		[Token(Token = "0x170000B1")]
		bool Enabled
		{
			[Token(Token = "0x6000C3C")]
			get;
			[Token(Token = "0x6000C3D")]
			set;
		}

		[Token(Token = "0x170000B2")]
		ImpactObjectBase MainTarget
		{
			[Token(Token = "0x6000C3E")]
			get;
			[Token(Token = "0x6000C3F")]
			set;
		}

		[Token(Token = "0x170000B3")]
		bool UseMaterialComposition
		{
			[Token(Token = "0x6000C40")]
			get;
			[Token(Token = "0x6000C41")]
			set;
		}

		[Token(Token = "0x170000B4")]
		ImpactTriggerContactMode ContactMode
		{
			[Token(Token = "0x6000C42")]
			get;
			[Token(Token = "0x6000C43")]
			set;
		}

		[Token(Token = "0x170000B5")]
		bool HighPriority
		{
			[Token(Token = "0x6000C44")]
			get;
			[Token(Token = "0x6000C45")]
			set;
		}
	}
	[Token(Token = "0x20002FE")]
	[AddComponentMenu("Impact/2D Collision Triggers/Impact Collision Trigger 2D", 0)]
	public class ImpactCollisionTrigger2D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C46")]
		[Address(RVA = "0xC837B0", Offset = "0xC837B0", VA = "0xC837B0")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6000C47")]
		[Address(RVA = "0xC83860", Offset = "0xC83860", VA = "0xC83860")]
		public ImpactCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x20002FF")]
	[AddComponentMenu("Impact/2D Collision Triggers/Impact Collision Trigger With Cooldown 2D", 0)]
	public class ImpactCollisionTriggerWithCooldown2D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4000FE3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float cooldown;

		[Token(Token = "0x4000FE4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastCollisionTime;

		[Token(Token = "0x6000C48")]
		[Address(RVA = "0xC838A8", Offset = "0xC838A8", VA = "0xC838A8")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6000C49")]
		[Address(RVA = "0xC83980", Offset = "0xC83980", VA = "0xC83980")]
		public ImpactCollisionTriggerWithCooldown2D()
		{
		}
	}
	[Token(Token = "0x2000300")]
	[AddComponentMenu("Impact/2D Collision Triggers/Impact On Trigger Enter 2D", 0)]
	public class ImpactOnTriggerEnter2D : ImpactCollisionTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C4A")]
		[Address(RVA = "0xC839C8", Offset = "0xC839C8", VA = "0xC839C8")]
		private void OnTriggerEnter2D(Collider2D collider)
		{
		}

		[Token(Token = "0x6000C4B")]
		[Address(RVA = "0xC83B90", Offset = "0xC83B90", VA = "0xC83B90")]
		public ImpactOnTriggerEnter2D()
		{
		}
	}
	[Token(Token = "0x2000301")]
	[AddComponentMenu("Impact/2D Collision Triggers/Impact On Trigger Stay 2D", 0)]
	public class ImpactOnTriggerStay2D : ImpactSlideAndRollTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C4C")]
		[Address(RVA = "0xC83BD8", Offset = "0xC83BD8", VA = "0xC83BD8")]
		private void OnTriggerStay2D(Collider2D collider)
		{
		}

		[Token(Token = "0x6000C4D")]
		[Address(RVA = "0xC83DC0", Offset = "0xC83DC0", VA = "0xC83DC0")]
		public ImpactOnTriggerStay2D()
		{
		}
	}
	[Token(Token = "0x2000302")]
	[AddComponentMenu("Impact/2D Collision Triggers/Impact Simple Collision Trigger 2D", 0)]
	public class ImpactSimpleCollisionTrigger2D : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C4E")]
		[Address(RVA = "0xC83E08", Offset = "0xC83E08", VA = "0xC83E08")]
		private void OnCollisionEnter2D()
		{
		}

		[Token(Token = "0x6000C4F")]
		[Address(RVA = "0xC83FA0", Offset = "0xC83FA0", VA = "0xC83FA0")]
		public ImpactSimpleCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x2000303")]
	[AddComponentMenu("Impact/2D Collision Triggers/Impact Slide and Roll Trigger 2D", 0)]
	public class ImpactSlideAndRollTrigger2D : ImpactSlideAndRollTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C50")]
		[Address(RVA = "0xC83FE8", Offset = "0xC83FE8", VA = "0xC83FE8")]
		private void OnCollisionStay2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6000C51")]
		[Address(RVA = "0xC84098", Offset = "0xC84098", VA = "0xC84098")]
		public ImpactSlideAndRollTrigger2D()
		{
		}
	}
	[Token(Token = "0x2000304")]
	[AddComponentMenu("Impact/2D Collision Triggers/Impact Speculative Collision Trigger 2D", 0)]
	public class ImpactSpeculativeCollisionTrigger2D : ImpactSpeculativeCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C52")]
		[Address(RVA = "0xC840E0", Offset = "0xC840E0", VA = "0xC840E0")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6000C53")]
		[Address(RVA = "0xC84190", Offset = "0xC84190", VA = "0xC84190")]
		private void OnCollisionStay2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6000C54")]
		[Address(RVA = "0xC84240", Offset = "0xC84240", VA = "0xC84240")]
		public ImpactSpeculativeCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x2000305")]
	[AddComponentMenu("Impact/2D Collision Triggers/Impact Velocity Collision Trigger 2D", 0)]
	public class ImpactVelocityCollisionTrigger2D : ImpactVelocityCollisionTriggerBase
	{
		[Token(Token = "0x6000C55")]
		[Address(RVA = "0xC84288", Offset = "0xC84288", VA = "0xC84288")]
		private void OnCollisionEnter2D(Collision2D collision)
		{
		}

		[Token(Token = "0x6000C56")]
		[Address(RVA = "0xC84338", Offset = "0xC84338", VA = "0xC84338")]
		public ImpactVelocityCollisionTrigger2D()
		{
		}
	}
	[Token(Token = "0x2000306")]
	[AddComponentMenu("Impact/3D Collision Triggers/Impact Collision Trigger 3D", 0)]
	public class ImpactCollisionTrigger3D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C57")]
		[Address(RVA = "0xC8438C", Offset = "0xC8438C", VA = "0xC8438C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C58")]
		[Address(RVA = "0xC84438", Offset = "0xC84438", VA = "0xC84438")]
		public ImpactCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x2000307")]
	[AddComponentMenu("Impact/3D Collision Triggers/Impact Collision Trigger With Cooldown 3D", 0)]
	public class ImpactCollisionTriggerWithCooldown3D : ImpactCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4000FE5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float cooldown;

		[Token(Token = "0x4000FE6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private float lastCollisionTime;

		[Token(Token = "0x6000C59")]
		[Address(RVA = "0xC84480", Offset = "0xC84480", VA = "0xC84480")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C5A")]
		[Address(RVA = "0xC84554", Offset = "0xC84554", VA = "0xC84554")]
		public ImpactCollisionTriggerWithCooldown3D()
		{
		}
	}
	[Token(Token = "0x2000308")]
	[AddComponentMenu("Impact/3D Collision Triggers/Impact On Trigger Enter 3D", 0)]
	public class ImpactOnTriggerEnter3D : ImpactCollisionTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C5B")]
		[Address(RVA = "0xC8459C", Offset = "0xC8459C", VA = "0xC8459C")]
		private void OnTriggerEnter(Collider collider)
		{
		}

		[Token(Token = "0x6000C5C")]
		[Address(RVA = "0xC84760", Offset = "0xC84760", VA = "0xC84760")]
		public ImpactOnTriggerEnter3D()
		{
		}
	}
	[Token(Token = "0x2000309")]
	[AddComponentMenu("Impact/3D Collision Triggers/Impact On Trigger Stay 3D", 0)]
	public class ImpactOnTriggerStay3D : ImpactSlideAndRollTriggerBase<ImpactCollisionSingleContactWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C5D")]
		[Address(RVA = "0xC847A8", Offset = "0xC847A8", VA = "0xC847A8")]
		private void OnTriggerStay(Collider collider)
		{
		}

		[Token(Token = "0x6000C5E")]
		[Address(RVA = "0xC84990", Offset = "0xC84990", VA = "0xC84990")]
		public ImpactOnTriggerStay3D()
		{
		}
	}
	[Token(Token = "0x200030A")]
	[AddComponentMenu("Impact/3D Collision Triggers/Impact Simple Collision Trigger 3D", 0)]
	public class ImpactSimpleCollisionTrigger3D : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C5F")]
		[Address(RVA = "0xC849D8", Offset = "0xC849D8", VA = "0xC849D8")]
		private void OnCollisionEnter()
		{
		}

		[Token(Token = "0x6000C60")]
		[Address(RVA = "0xC84B70", Offset = "0xC84B70", VA = "0xC84B70")]
		public ImpactSimpleCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x200030B")]
	[AddComponentMenu("Impact/3D Collision Triggers/Impact Slide and Roll Trigger 3D", 0)]
	public class ImpactSlideAndRollTrigger3D : ImpactSlideAndRollTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C61")]
		[Address(RVA = "0xC84BB8", Offset = "0xC84BB8", VA = "0xC84BB8")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000C62")]
		[Address(RVA = "0xC84C64", Offset = "0xC84C64", VA = "0xC84C64")]
		public ImpactSlideAndRollTrigger3D()
		{
		}
	}
	[Token(Token = "0x200030C")]
	[AddComponentMenu("Impact/3D Collision Triggers/Impact Speculative Collision Trigger 3D", 0)]
	public class ImpactSpeculativeCollisionTrigger3D : ImpactSpeculativeCollisionTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x6000C63")]
		[Address(RVA = "0xC84CAC", Offset = "0xC84CAC", VA = "0xC84CAC")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C64")]
		[Address(RVA = "0xC84D58", Offset = "0xC84D58", VA = "0xC84D58")]
		private void OnCollisionStay(Collision collision)
		{
		}

		[Token(Token = "0x6000C65")]
		[Address(RVA = "0xC84E04", Offset = "0xC84E04", VA = "0xC84E04")]
		public ImpactSpeculativeCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x200030D")]
	[AddComponentMenu("Impact/3D Collision Triggers/Impact Velocity Collision Trigger 3D", 0)]
	public class ImpactVelocityCollisionTrigger3D : ImpactVelocityCollisionTriggerBase
	{
		[Token(Token = "0x6000C66")]
		[Address(RVA = "0xC84E4C", Offset = "0xC84E4C", VA = "0xC84E4C")]
		private void OnCollisionEnter(Collision collision)
		{
		}

		[Token(Token = "0x6000C67")]
		[Address(RVA = "0xC84EF8", Offset = "0xC84EF8", VA = "0xC84EF8")]
		public ImpactVelocityCollisionTrigger3D()
		{
		}
	}
	[Token(Token = "0x200030E")]
	public abstract class ImpactCollisionTriggerBase<TCollision, TContact> : ImpactTriggerBase<TCollision, TContact> where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Token(Token = "0x6000C68")]
		protected override void buildInteractionData(IImpactObject target, TCollision collision, TContact contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float CompositionValue)
		{
		}

		[Token(Token = "0x6000C69")]
		protected ImpactCollisionTriggerBase()
		{
		}
	}
	[Token(Token = "0x200030F")]
	[AddComponentMenu("Impact/Impact Particle Collision Trigger")]
	public class ImpactParticleCollisionTrigger : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4000FE7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private ParticleSystem _particles;

		[Token(Token = "0x4000FE8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private List<ParticleCollisionEvent> collisionEvents;

		[Token(Token = "0x6000C6A")]
		[Address(RVA = "0xC84EFC", Offset = "0xC84EFC", VA = "0xC84EFC")]
		private void OnParticleCollision(GameObject other)
		{
		}

		[Token(Token = "0x6000C6B")]
		[Address(RVA = "0xC85084", Offset = "0xC85084", VA = "0xC85084")]
		private void processParticleCollision(ParticleCollisionEvent particleCollisionEvent, GameObject onParticleCollisionObject, bool isParticleSystem)
		{
		}

		[Token(Token = "0x6000C6C")]
		[Address(RVA = "0xC85C68", Offset = "0xC85C68", VA = "0xC85C68")]
		private int getPhysicsMaterialID(Component colliderComponent)
		{
			return default(int);
		}

		[Token(Token = "0x6000C6D")]
		[Address(RVA = "0xC85E48", Offset = "0xC85E48", VA = "0xC85E48")]
		public ImpactParticleCollisionTrigger()
		{
		}
	}
	[Token(Token = "0x2000310")]
	public enum SlideMode
	{
		[Token(Token = "0x4000FEA")]
		Normal,
		[Token(Token = "0x4000FEB")]
		None
	}
	[Token(Token = "0x2000311")]
	public enum RollMode
	{
		[Token(Token = "0x4000FED")]
		Normal,
		[Token(Token = "0x4000FEE")]
		None
	}
	[Token(Token = "0x2000312")]
	public abstract class ImpactSlideAndRollTriggerBase<TCollision, TContact> : ImpactTriggerBase<TCollision, TContact> where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Token(Token = "0x4000FEF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private SlideMode _slideMode;

		[Token(Token = "0x4000FF0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private RollMode _rollMode;

		[Token(Token = "0x170000B6")]
		public SlideMode SlideMode
		{
			[Token(Token = "0x6000C6E")]
			get
			{
				return default(SlideMode);
			}
			[Token(Token = "0x6000C6F")]
			set
			{
			}
		}

		[Token(Token = "0x170000B7")]
		public RollMode RollMode
		{
			[Token(Token = "0x6000C70")]
			get
			{
				return default(RollMode);
			}
			[Token(Token = "0x6000C71")]
			set
			{
			}
		}

		[Token(Token = "0x6000C72")]
		protected override void buildInteractionData(IImpactObject target, TCollision collision, TContact contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float compositionValue)
		{
		}

		[Token(Token = "0x6000C73")]
		protected ImpactSlideAndRollTriggerBase()
		{
		}
	}
	[Token(Token = "0x2000313")]
	public abstract class ImpactSpeculativeCollisionTriggerBase<TCollision, TContact> : ImpactCollisionTriggerBase<TCollision, TContact> where TCollision : IImpactCollisionWrapper<TContact> where TContact : IImpactContactPoint
	{
		[Serializable]
		[Token(Token = "0x2000314")]
		private struct SpeculativeCollisionContact : IEquatable<SpeculativeCollisionContact>
		{
			[Token(Token = "0x4000FF5")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public int Lifetime;

			[Token(Token = "0x4000FF6")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public Vector3 RelativeContactPoint;

			[Token(Token = "0x170000BB")]
			public bool IsAlive
			{
				[Token(Token = "0x6000C7D")]
				get
				{
					return default(bool);
				}
			}

			[Token(Token = "0x6000C7E")]
			public bool Equals(SpeculativeCollisionContact other)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4000FF1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _maxCollisionsPerFrame;

		[Token(Token = "0x4000FF2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private float _contactPointComparisonThreshold;

		[Token(Token = "0x4000FF3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		[SerializeField]
		private int _contactPointLifetime;

		[Token(Token = "0x4000FF4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private List<SpeculativeCollisionContact> continousCollisionContacts;

		[Token(Token = "0x170000B8")]
		public int MaxCollisionsPerFrame
		{
			[Token(Token = "0x6000C74")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C75")]
			set
			{
			}
		}

		[Token(Token = "0x170000B9")]
		public float ContactPointComparisonThreshold
		{
			[Token(Token = "0x6000C76")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000C77")]
			set
			{
			}
		}

		[Token(Token = "0x170000BA")]
		public int ContactPointLifetime
		{
			[Token(Token = "0x6000C78")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C79")]
			set
			{
			}
		}

		[Token(Token = "0x6000C7A")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C7B")]
		protected void processSpeculativeCollision(TCollision collision)
		{
		}

		[Token(Token = "0x6000C7C")]
		protected ImpactSpeculativeCollisionTriggerBase()
		{
		}
	}
	[Token(Token = "0x2000316")]
	public abstract class ImpactVelocityCollisionTriggerBase : ImpactTriggerBase<ImpactCollisionWrapper, ImpactContactPoint>
	{
		[Token(Token = "0x4000FF9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private float _velocityChangeInfluence;

		[Token(Token = "0x4000FFA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ImpactRigidbodyWrapper rigidbodyWrapper;

		[Token(Token = "0x6000C81")]
		[Address(RVA = "0xC85ED8", Offset = "0xC85ED8", VA = "0xC85ED8")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000C82")]
		[Address(RVA = "0xC85F4C", Offset = "0xC85F4C", VA = "0xC85F4C", Slot = "14")]
		protected override void buildInteractionData(IImpactObject target, ImpactCollisionWrapper collision, ImpactContactPoint contactPoint, VelocityData myVelocityData, VelocityData otherVelocityData, ImpactTagMask? tagMask, float CompositionValue)
		{
		}

		[Token(Token = "0x6000C83")]
		[Address(RVA = "0xC8433C", Offset = "0xC8433C", VA = "0xC8433C")]
		protected ImpactVelocityCollisionTriggerBase()
		{
		}
	}
}
namespace Impact.TagLibrary
{
	[Token(Token = "0x2000317")]
	[CreateAssetMenu(fileName = "Impact Tag Library", menuName = "Impact/Impact Tag Library", order = 0)]
	public class ImpactTagLibrary : ImpactTagLibraryBase
	{
		[Token(Token = "0x4000FFB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private string[] _tagNames;

		[Token(Token = "0x170000BC")]
		public override string this[int index]
		{
			[Token(Token = "0x6000C84")]
			[Address(RVA = "0xC86168", Offset = "0xC86168", VA = "0xC86168", Slot = "6")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C85")]
			[Address(RVA = "0xC86198", Offset = "0xC86198", VA = "0xC86198", Slot = "7")]
			set
			{
			}
		}

		[Token(Token = "0x6000C86")]
		[Address(RVA = "0xC861FC", Offset = "0xC861FC", VA = "0xC861FC")]
		public ImpactTagLibrary()
		{
		}
	}
	[Token(Token = "0x2000318")]
	public abstract class ImpactTagLibraryBase : ScriptableObject, IImpactTagLibrary
	{
		[Token(Token = "0x170000BD")]
		public abstract string this[int index]
		{
			[Token(Token = "0x6000C87")]
			get;
			[Token(Token = "0x6000C88")]
			set;
		}

		[Token(Token = "0x6000C89")]
		[Address(RVA = "0xC86254", Offset = "0xC86254", VA = "0xC86254")]
		protected ImpactTagLibraryBase()
		{
		}
	}
	[Token(Token = "0x2000319")]
	public static class ImpactTagLibraryConstants
	{
		[Token(Token = "0x4000FFC")]
		public const int TagCount = 32;

		[Token(Token = "0x4000FFD")]
		public const string TagLibraryNotFoundErrorMessage = "Assign an Impact Tag Library to see tag names.";
	}
	[Token(Token = "0x200031A")]
	public static class ImpactTagLibraryExtensions
	{
		[Token(Token = "0x6000C8A")]
		[Address(RVA = "0xC8625C", Offset = "0xC8625C", VA = "0xC8625C")]
		public static int IndexOf(this IImpactTagLibrary tagLibrary, string tagName)
		{
			return default(int);
		}
	}
	[Token(Token = "0x200031B")]
	public interface IImpactTagLibrary
	{
		[Token(Token = "0x170000BE")]
		string this[int index]
		{
			[Token(Token = "0x6000C8B")]
			get;
			[Token(Token = "0x6000C8C")]
			set;
		}
	}
}
namespace Impact.Objects
{
	[Token(Token = "0x200031C")]
	public abstract class ImpactObjectBase : MonoBehaviour, IImpactObject
	{
		[Token(Token = "0x4000FFE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		protected int _priority;

		[Token(Token = "0x170000BF")]
		public int Priority
		{
			[Token(Token = "0x6000C8D")]
			[Address(RVA = "0xC86338", Offset = "0xC86338", VA = "0xC86338", Slot = "4")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000C8E")]
			[Address(RVA = "0xC86340", Offset = "0xC86340", VA = "0xC86340")]
			set
			{
			}
		}

		[Token(Token = "0x170000C0")]
		public GameObject GameObject
		{
			[Token(Token = "0x6000C8F")]
			[Address(RVA = "0xC86348", Offset = "0xC86348", VA = "0xC86348", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000C90")]
		[Address(RVA = "0xC86350", Offset = "0xC86350", VA = "0xC86350", Slot = "11")]
		public virtual VelocityData GetVelocityDataAtPoint(Vector3 point)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x6000C91")]
		[Address(RVA = "0xC8635C", Offset = "0xC8635C", VA = "0xC8635C", Slot = "12")]
		public virtual Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C92")]
		public abstract int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results);

		[Token(Token = "0x6000C93")]
		public abstract IImpactMaterial GetPrimaryMaterial(Vector3 point);

		[Token(Token = "0x6000C94")]
		public abstract IImpactMaterial GetPrimaryMaterial();

		[Token(Token = "0x6000C95")]
		[Address(RVA = "0xC863A4", Offset = "0xC863A4", VA = "0xC863A4")]
		protected ImpactObjectBase()
		{
		}
	}
	[Token(Token = "0x200031D")]
	[AddComponentMenu("Impact/Impact Object Rigidbody", 0)]
	public class ImpactObjectRigidbody : ImpactObjectSingleMaterial
	{
		[Token(Token = "0x170000C1")]
		public ImpactRigidbodyWrapper Rigidbody
		{
			[Token(Token = "0x6000C96")]
			[Address(RVA = "0xC863AC", Offset = "0xC863AC", VA = "0xC863AC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C97")]
			[Address(RVA = "0xC863B4", Offset = "0xC863B4", VA = "0xC863B4")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000C98")]
		[Address(RVA = "0xC863BC", Offset = "0xC863BC", VA = "0xC863BC", Slot = "16")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000C99")]
		[Address(RVA = "0xC864A4", Offset = "0xC864A4", VA = "0xC864A4")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000C9A")]
		[Address(RVA = "0xC864BC", Offset = "0xC864BC", VA = "0xC864BC", Slot = "11")]
		public override VelocityData GetVelocityDataAtPoint(Vector3 contactPoint)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x6000C9B")]
		[Address(RVA = "0xC86528", Offset = "0xC86528", VA = "0xC86528", Slot = "12")]
		public override Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000C9C")]
		[Address(RVA = "0xC86594", Offset = "0xC86594", VA = "0xC86594")]
		public ImpactObjectRigidbody()
		{
		}
	}
	[Token(Token = "0x200031E")]
	[AddComponentMenu("Impact/Impact Object Rigidbody (Cheap)", 0)]
	public class ImpactObjectRigidbodyCheap : ImpactObjectSingleMaterial
	{
		[Token(Token = "0x170000C2")]
		public ImpactRigidbodyWrapper Rigidbody
		{
			[Token(Token = "0x6000C9D")]
			[Address(RVA = "0xC865A4", Offset = "0xC865A4", VA = "0xC865A4")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000C9E")]
			[Address(RVA = "0xC865AC", Offset = "0xC865AC", VA = "0xC865AC")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x6000C9F")]
		[Address(RVA = "0xC865B4", Offset = "0xC865B4", VA = "0xC865B4", Slot = "16")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CA0")]
		[Address(RVA = "0xC86630", Offset = "0xC86630", VA = "0xC86630", Slot = "11")]
		public override VelocityData GetVelocityDataAtPoint(Vector3 contactPoint)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x6000CA1")]
		[Address(RVA = "0xC8666C", Offset = "0xC8666C", VA = "0xC8666C", Slot = "12")]
		public override Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CA2")]
		[Address(RVA = "0xC86704", Offset = "0xC86704", VA = "0xC86704")]
		public ImpactObjectRigidbodyCheap()
		{
		}
	}
	[Token(Token = "0x200031F")]
	[AddComponentMenu("Impact/Impact Object Rigidbody Child", 0)]
	public class ImpactObjectRigidbodyChild : ImpactObjectSingleMaterial
	{
		[Token(Token = "0x4001001")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private ImpactObjectRigidbody parent;

		[Token(Token = "0x4001002")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private bool hasParent;

		[Token(Token = "0x170000C3")]
		public ImpactObjectRigidbody Parent
		{
			[Token(Token = "0x6000CA3")]
			[Address(RVA = "0xC8670C", Offset = "0xC8670C", VA = "0xC8670C")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CA4")]
			[Address(RVA = "0xC86714", Offset = "0xC86714", VA = "0xC86714")]
			set
			{
			}
		}

		[Token(Token = "0x6000CA5")]
		[Address(RVA = "0xC8678C", Offset = "0xC8678C", VA = "0xC8678C", Slot = "16")]
		protected override void Awake()
		{
		}

		[Token(Token = "0x6000CA6")]
		[Address(RVA = "0xC867A4", Offset = "0xC867A4", VA = "0xC867A4")]
		public void RefreshParent()
		{
		}

		[Token(Token = "0x6000CA7")]
		[Address(RVA = "0xC867F8", Offset = "0xC867F8", VA = "0xC867F8", Slot = "11")]
		public override VelocityData GetVelocityDataAtPoint(Vector3 contactPoint)
		{
			return default(VelocityData);
		}

		[Token(Token = "0x6000CA8")]
		[Address(RVA = "0xC86930", Offset = "0xC86930", VA = "0xC86930", Slot = "12")]
		public override Vector3 GetContactPointRelativePosition(Vector3 point)
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000CA9")]
		[Address(RVA = "0xC86A50", Offset = "0xC86A50", VA = "0xC86A50")]
		public ImpactObjectRigidbodyChild()
		{
		}
	}
	[Token(Token = "0x2000320")]
	[AddComponentMenu("Impact/Impact Object Single Material", 0)]
	public class ImpactObjectSingleMaterial : ImpactObjectBase
	{
		[Token(Token = "0x4001003")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactMaterialBase _material;

		[Token(Token = "0x4001004")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private bool hasMaterial;

		[Token(Token = "0x170000C4")]
		public ImpactMaterialBase Material
		{
			[Token(Token = "0x6000CAA")]
			[Address(RVA = "0xC86A58", Offset = "0xC86A58", VA = "0xC86A58")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CAB")]
			[Address(RVA = "0xC86A60", Offset = "0xC86A60", VA = "0xC86A60")]
			set
			{
			}
		}

		[Token(Token = "0x6000CAC")]
		[Address(RVA = "0xC86438", Offset = "0xC86438", VA = "0xC86438", Slot = "16")]
		protected virtual void Awake()
		{
		}

		[Token(Token = "0x6000CAD")]
		[Address(RVA = "0xC86AD8", Offset = "0xC86AD8", VA = "0xC86AD8", Slot = "13")]
		public override int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results)
		{
			return default(int);
		}

		[Token(Token = "0x6000CAE")]
		[Address(RVA = "0xC86AE0", Offset = "0xC86AE0", VA = "0xC86AE0")]
		private int getMaterialCompositionNonAllocInternal(Vector3 point, ImpactMaterialComposition[] results, bool fromCache)
		{
			return default(int);
		}

		[Token(Token = "0x6000CAF")]
		[Address(RVA = "0xC86BE4", Offset = "0xC86BE4", VA = "0xC86BE4", Slot = "14")]
		public override IImpactMaterial GetPrimaryMaterial(Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x6000CB0")]
		[Address(RVA = "0xC86BF4", Offset = "0xC86BF4", VA = "0xC86BF4", Slot = "15")]
		public override IImpactMaterial GetPrimaryMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000CB1")]
		[Address(RVA = "0xC8659C", Offset = "0xC8659C", VA = "0xC8659C")]
		public ImpactObjectSingleMaterial()
		{
		}
	}
	[Token(Token = "0x2000321")]
	[AddComponentMenu("Impact/Impact Terrain", 0)]
	public class ImpactTerrain : ImpactObjectBase
	{
		[Token(Token = "0x4001005")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Terrain _terrain;

		[Token(Token = "0x4001006")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private List<ImpactMaterialBase> _terrainMaterials;

		[Token(Token = "0x4001007")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		private float[,,] cachedAlphamaps;

		[Token(Token = "0x4001008")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ImpactMaterialComposition[] compositionBuffer;

		[Token(Token = "0x170000C5")]
		public Terrain Terrain
		{
			[Token(Token = "0x6000CB2")]
			[Address(RVA = "0xC86CC8", Offset = "0xC86CC8", VA = "0xC86CC8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CB3")]
			[Address(RVA = "0xC86CD0", Offset = "0xC86CD0", VA = "0xC86CD0")]
			set
			{
			}
		}

		[Token(Token = "0x170000C6")]
		private bool hasTerrainData
		{
			[Token(Token = "0x6000CB4")]
			[Address(RVA = "0xC86CD8", Offset = "0xC86CD8", VA = "0xC86CD8")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000C7")]
		public List<ImpactMaterialBase> TerrainMaterials
		{
			[Token(Token = "0x6000CB5")]
			[Address(RVA = "0xC86D88", Offset = "0xC86D88", VA = "0xC86D88")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000CB6")]
		[Address(RVA = "0xC86D90", Offset = "0xC86D90", VA = "0xC86D90")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000CB7")]
		[Address(RVA = "0xC86F50", Offset = "0xC86F50", VA = "0xC86F50")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000CB8")]
		[Address(RVA = "0xC86DB4", Offset = "0xC86DB4", VA = "0xC86DB4")]
		public void RefreshCachedAlphamaps()
		{
		}

		[Token(Token = "0x6000CB9")]
		[Address(RVA = "0xC86FA0", Offset = "0xC86FA0", VA = "0xC86FA0")]
		public void SyncTerrainLayersAndMaterialsList()
		{
		}

		[Token(Token = "0x6000CBA")]
		[Address(RVA = "0xC87168", Offset = "0xC87168", VA = "0xC87168", Slot = "13")]
		public override int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results)
		{
			return default(int);
		}

		[Token(Token = "0x6000CBB")]
		[Address(RVA = "0xC87284", Offset = "0xC87284", VA = "0xC87284")]
		private int getMaterialCompositionNonAllocInternal(Vector3 point, ImpactMaterialComposition[] results, float[,,] alphamaps, ImpactMaterialComposition[] buffer)
		{
			return default(int);
		}

		[Token(Token = "0x6000CBC")]
		[Address(RVA = "0xC87750", Offset = "0xC87750", VA = "0xC87750", Slot = "14")]
		public override IImpactMaterial GetPrimaryMaterial(Vector3 point)
		{
			return null;
		}

		[Token(Token = "0x6000CBD")]
		[Address(RVA = "0xC87864", Offset = "0xC87864", VA = "0xC87864")]
		private IImpactMaterial getPrimaryMaterialInternal(Vector3 point, float[,,] alphamaps)
		{
			return null;
		}

		[Token(Token = "0x6000CBE")]
		[Address(RVA = "0xC87980", Offset = "0xC87980", VA = "0xC87980", Slot = "15")]
		public override IImpactMaterial GetPrimaryMaterial()
		{
			return null;
		}

		[Token(Token = "0x6000CBF")]
		[Address(RVA = "0xC87628", Offset = "0xC87628", VA = "0xC87628")]
		private Vector2Int getAlphamapIndicesAtPoint(Vector3 point)
		{
			return default(Vector2Int);
		}

		[Token(Token = "0x6000CC0")]
		[Address(RVA = "0xC879FC", Offset = "0xC879FC", VA = "0xC879FC")]
		public ImpactTerrain()
		{
		}
	}
	[Token(Token = "0x2000324")]
	public interface IImpactObject
	{
		[Token(Token = "0x170000C8")]
		int Priority
		{
			[Token(Token = "0x6000CC6")]
			get;
		}

		[Token(Token = "0x170000C9")]
		GameObject GameObject
		{
			[Token(Token = "0x6000CC7")]
			get;
		}

		[Token(Token = "0x6000CC8")]
		int GetMaterialCompositionNonAlloc(Vector3 point, ImpactMaterialComposition[] results);

		[Token(Token = "0x6000CC9")]
		IImpactMaterial GetPrimaryMaterial(Vector3 point);

		[Token(Token = "0x6000CCA")]
		IImpactMaterial GetPrimaryMaterial();

		[Token(Token = "0x6000CCB")]
		VelocityData GetVelocityDataAtPoint(Vector3 contactPoint);

		[Token(Token = "0x6000CCC")]
		Vector3 GetContactPointRelativePosition(Vector3 point);
	}
}
namespace Impact.Materials
{
	[Token(Token = "0x2000325")]
	[CreateAssetMenu(fileName = "New Impact Material", menuName = "Impact/Impact Material", order = 1)]
	public class ImpactMaterial : ImpactMaterialBase
	{
		[Token(Token = "0x400100C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private List<ImpactMaterialInteractionSet> _interactionSets;

		[Token(Token = "0x400100D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private ImpactTagMask _fallbackTagMask;

		[Token(Token = "0x170000CA")]
		public ImpactTagMask FallbackTagMask
		{
			[Token(Token = "0x6000CCD")]
			[Address(RVA = "0xC87B20", Offset = "0xC87B20", VA = "0xC87B20")]
			get
			{
				return default(ImpactTagMask);
			}
			[Token(Token = "0x6000CCE")]
			[Address(RVA = "0xC87B2C", Offset = "0xC87B2C", VA = "0xC87B2C")]
			set
			{
			}
		}

		[Token(Token = "0x170000CB")]
		public int InteractionSetCount
		{
			[Token(Token = "0x6000CD2")]
			[Address(RVA = "0xC87DCC", Offset = "0xC87DCC", VA = "0xC87DCC")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000CC")]
		public ImpactMaterialInteractionSet this[int index]
		{
			[Token(Token = "0x6000CD3")]
			[Address(RVA = "0xC87E14", Offset = "0xC87E14", VA = "0xC87E14")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CD4")]
			[Address(RVA = "0xC87E6C", Offset = "0xC87E6C", VA = "0xC87E6C")]
			set
			{
			}
		}

		[Token(Token = "0x6000CCF")]
		public override int GetInteractionResultsNonAlloc<T>(T interactionData, IInteractionResult[] results)
		{
			return default(int);
		}

		[Token(Token = "0x6000CD0")]
		private void populateCollisionResultsForInteractionSet<T>(T interactionData, ImpactMaterialInteractionSet interactionSet, ImpactTagMask tagMask, IInteractionResult[] results, ref int count) where T : IInteractionData
		{
		}

		[Token(Token = "0x6000CD1")]
		[Address(RVA = "0xC87B34", Offset = "0xC87B34", VA = "0xC87B34", Slot = "8")]
		public override void Preload()
		{
		}

		[Token(Token = "0x6000CD5")]
		[Address(RVA = "0xC87ED4", Offset = "0xC87ED4", VA = "0xC87ED4")]
		public void AddInteractionSet(ImpactMaterialInteractionSet item)
		{
		}

		[Token(Token = "0x6000CD6")]
		[Address(RVA = "0xC87F7C", Offset = "0xC87F7C", VA = "0xC87F7C")]
		public void RemoveInteractionSet(int index)
		{
		}

		[Token(Token = "0x6000CD7")]
		[Address(RVA = "0xC87FD4", Offset = "0xC87FD4", VA = "0xC87FD4")]
		public void ClearInteractionSets()
		{
		}

		[Token(Token = "0x6000CD8")]
		[Address(RVA = "0xC88044", Offset = "0xC88044", VA = "0xC88044")]
		public ImpactMaterial()
		{
		}
	}
	[Token(Token = "0x2000326")]
	public abstract class ImpactMaterialBase : ScriptableObject, IImpactMaterial
	{
		[Token(Token = "0x400100E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ImpactTagLibraryBase _tagLibrary;

		[Token(Token = "0x400100F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactTagMask _materialTagsMask;

		[Token(Token = "0x170000CD")]
		public ImpactTagLibraryBase TagLibrary
		{
			[Token(Token = "0x6000CD9")]
			[Address(RVA = "0xC880C8", Offset = "0xC880C8", VA = "0xC880C8")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CDA")]
			[Address(RVA = "0xC880D0", Offset = "0xC880D0", VA = "0xC880D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000CE")]
		public ImpactTagMask MaterialTagsMask
		{
			[Token(Token = "0x6000CDB")]
			[Address(RVA = "0xC880D8", Offset = "0xC880D8", VA = "0xC880D8", Slot = "4")]
			get
			{
				return default(ImpactTagMask);
			}
			[Token(Token = "0x6000CDC")]
			[Address(RVA = "0xC880E4", Offset = "0xC880E4", VA = "0xC880E4")]
			set
			{
			}
		}

		[Token(Token = "0x6000CDD")]
		public abstract int GetInteractionResultsNonAlloc<T>(T interactionData, IInteractionResult[] results) where T : IInteractionData;

		[Token(Token = "0x6000CDE")]
		public abstract void Preload();

		[Token(Token = "0x6000CDF")]
		[Address(RVA = "0xC880C0", Offset = "0xC880C0", VA = "0xC880C0")]
		protected ImpactMaterialBase()
		{
		}
	}
	[Serializable]
	[Token(Token = "0x2000327")]
	public class ImpactMaterialInteractionSet
	{
		[Serializable]
		[Token(Token = "0x2000328")]
		public struct TagMaskFilter
		{
			[Token(Token = "0x4001014")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
			public ImpactTagMask TagMask;

			[Token(Token = "0x4001015")]
			[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
			public bool ExactMatch;

			[Token(Token = "0x6000CEE")]
			[Address(RVA = "0xC882AC", Offset = "0xC882AC", VA = "0xC882AC")]
			public bool CompareTagMask(ImpactTagMask tagMask)
			{
				return default(bool);
			}
		}

		[Token(Token = "0x4001010")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x10")]
		[SerializeField]
		private string _name;

		[Token(Token = "0x4001011")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private TagMaskFilter _includeTagsFilter;

		[Token(Token = "0x4001012")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private TagMaskFilter _excludeTagsFilter;

		[Token(Token = "0x4001013")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private List<ImpactInteractionBase> _interactions;

		[Token(Token = "0x170000CF")]
		public string Name
		{
			[Token(Token = "0x6000CE0")]
			[Address(RVA = "0xC880EC", Offset = "0xC880EC", VA = "0xC880EC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE1")]
			[Address(RVA = "0xC880F4", Offset = "0xC880F4", VA = "0xC880F4")]
			set
			{
			}
		}

		[Token(Token = "0x170000D0")]
		public TagMaskFilter IncludeTagsFilter
		{
			[Token(Token = "0x6000CE2")]
			[Address(RVA = "0xC880FC", Offset = "0xC880FC", VA = "0xC880FC")]
			get
			{
				return default(TagMaskFilter);
			}
			[Token(Token = "0x6000CE3")]
			[Address(RVA = "0xC88110", Offset = "0xC88110", VA = "0xC88110")]
			set
			{
			}
		}

		[Token(Token = "0x170000D1")]
		public TagMaskFilter ExcludeTagsFilter
		{
			[Token(Token = "0x6000CE4")]
			[Address(RVA = "0xC88124", Offset = "0xC88124", VA = "0xC88124")]
			get
			{
				return default(TagMaskFilter);
			}
			[Token(Token = "0x6000CE5")]
			[Address(RVA = "0xC88138", Offset = "0xC88138", VA = "0xC88138")]
			set
			{
			}
		}

		[Token(Token = "0x170000D2")]
		public int InteractionCount
		{
			[Token(Token = "0x6000CE6")]
			[Address(RVA = "0xC8814C", Offset = "0xC8814C", VA = "0xC8814C")]
			get
			{
				return default(int);
			}
		}

		[Token(Token = "0x170000D3")]
		public ImpactInteractionBase this[int index]
		{
			[Token(Token = "0x6000CE7")]
			[Address(RVA = "0xC88194", Offset = "0xC88194", VA = "0xC88194")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000CE8")]
			[Address(RVA = "0xC881EC", Offset = "0xC881EC", VA = "0xC881EC")]
			set
			{
			}
		}

		[Token(Token = "0x6000CE9")]
		[Address(RVA = "0xC88254", Offset = "0xC88254", VA = "0xC88254")]
		public bool CompareTagMaskFilters(ImpactTagMask tagMask)
		{
			return default(bool);
		}

		[Token(Token = "0x6000CEA")]
		[Address(RVA = "0xC87C7C", Offset = "0xC87C7C", VA = "0xC87C7C")]
		public void Preload()
		{
		}

		[Token(Token = "0x6000CEB")]
		[Address(RVA = "0xC882D0", Offset = "0xC882D0", VA = "0xC882D0")]
		public void AddInteraction(ImpactInteractionBase impactInteraction)
		{
		}

		[Token(Token = "0x6000CEC")]
		[Address(RVA = "0xC88378", Offset = "0xC88378", VA = "0xC88378")]
		public void RemoveInteraction(int index)
		{
		}

		[Token(Token = "0x6000CED")]
		[Address(RVA = "0xC883D0", Offset = "0xC883D0", VA = "0xC883D0")]
		public ImpactMaterialInteractionSet()
		{
		}
	}
	[Token(Token = "0x2000329")]
	public interface IImpactMaterial
	{
		[Token(Token = "0x170000D4")]
		ImpactTagMask MaterialTagsMask
		{
			[Token(Token = "0x6000CEF")]
			get;
		}

		[Token(Token = "0x6000CF0")]
		int GetInteractionResultsNonAlloc<T>(T data, IInteractionResult[] results) where T : IInteractionData;

		[Token(Token = "0x6000CF1")]
		void Preload();
	}
}
namespace Impact.Interactions
{
	[Token(Token = "0x200032A")]
	public enum InteractionIntervalType
	{
		[Token(Token = "0x4001017")]
		Time,
		[Token(Token = "0x4001018")]
		Distance
	}
	[Token(Token = "0x200032B")]
	public abstract class ImpactInteractionBase : ScriptableObject, IImpactInteraction
	{
		[Token(Token = "0x6000CF2")]
		public abstract IInteractionResult GetInteractionResult<T>(T interactionData) where T : IInteractionData;

		[Token(Token = "0x6000CF3")]
		public abstract void Preload();

		[Token(Token = "0x6000CF4")]
		[Address(RVA = "0xC8844C", Offset = "0xC8844C", VA = "0xC8844C")]
		protected ImpactInteractionBase()
		{
		}
	}
	[Token(Token = "0x200032C")]
	public static class ImpactInteractionUtilities
	{
		[Token(Token = "0x6000CF5")]
		public static float GetCollisionIntensity<T>(T interactionData, float collisionNormalInfluence) where T : IInteractionData
		{
			return default(float);
		}

		[Token(Token = "0x6000CF6")]
		public static bool GetKeyAndValidate<T>(T interactionData, ImpactInteractionBase interaction, out long key) where T : IInteractionData
		{
			return default(bool);
		}

		[Token(Token = "0x6000CF7")]
		[Address(RVA = "0xC88454", Offset = "0xC88454", VA = "0xC88454")]
		private static long cantorPairing(long k1, long k2)
		{
			return default(long);
		}
	}
	[Token(Token = "0x200032D")]
	public interface IImpactInteraction
	{
		[Token(Token = "0x6000CF8")]
		IInteractionResult GetInteractionResult<T>(T interactionData) where T : IInteractionData;

		[Token(Token = "0x6000CF9")]
		void Preload();
	}
	[Token(Token = "0x200032E")]
	public interface IInteractionResult : IDisposable
	{
		[Token(Token = "0x170000D5")]
		bool IsValid
		{
			[Token(Token = "0x6000CFA")]
			get;
		}

		[Token(Token = "0x6000CFB")]
		void Process(IImpactObject parent);
	}
	[Token(Token = "0x200032F")]
	public interface IContinuousInteractionResult : IInteractionResult, IDisposable
	{
		[Token(Token = "0x170000D6")]
		long Key
		{
			[Token(Token = "0x6000CFC")]
			get;
			[Token(Token = "0x6000CFD")]
			set;
		}

		[Token(Token = "0x170000D7")]
		bool IsAlive
		{
			[Token(Token = "0x6000CFE")]
			get;
		}

		[Token(Token = "0x6000CFF")]
		void FixedUpdate();

		[Token(Token = "0x6000D00")]
		void KeepAlive(IInteractionResult newResult);
	}
	[Token(Token = "0x2000330")]
	public static class InteractionResultExtensions
	{
		[Token(Token = "0x6000D01")]
		[Address(RVA = "0xC88470", Offset = "0xC88470", VA = "0xC88470")]
		public static int GetPriority(int? priorityOverride, IImpactObject obj)
		{
			return default(int);
		}
	}
}
namespace Impact.Interactions.Particles
{
	[Token(Token = "0x2000331")]
	[CreateAssetMenu(fileName = "New Impact Particle Interaction", menuName = "Impact/Particle Interaction", order = 2)]
	public class ImpactParticleInteraction : ImpactInteractionBase
	{
		[Token(Token = "0x4001019")]
		private const string interactionResultPoolKey = "ParticleInteractionResult";

		[Token(Token = "0x400101A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _minimumVelocity;

		[Token(Token = "0x400101B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _collisionNormalInfluence;

		[Token(Token = "0x400101C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactParticlesBase _particlePrefab;

		[Token(Token = "0x400101D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private bool _isParticleLooped;

		[Token(Token = "0x400101E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private Range _emissionInterval;

		[Token(Token = "0x400101F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private InteractionIntervalType _emissionIntervalType;

		[Token(Token = "0x4001020")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private bool _emitOnCollision;

		[Token(Token = "0x4001021")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x39")]
		[SerializeField]
		private bool _emitOnSlide;

		[Token(Token = "0x4001022")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3A")]
		[SerializeField]
		private bool _emitOnRoll;

		[Token(Token = "0x170000D8")]
		public float MinimumVelocity
		{
			[Token(Token = "0x6000D02")]
			[Address(RVA = "0xC88564", Offset = "0xC88564", VA = "0xC88564")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D03")]
			[Address(RVA = "0xC8856C", Offset = "0xC8856C", VA = "0xC8856C")]
			set
			{
			}
		}

		[Token(Token = "0x170000D9")]
		public float CollisionNormalInfluence
		{
			[Token(Token = "0x6000D04")]
			[Address(RVA = "0xC88574", Offset = "0xC88574", VA = "0xC88574")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D05")]
			[Address(RVA = "0xC8857C", Offset = "0xC8857C", VA = "0xC8857C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DA")]
		public ImpactParticlesBase ParticlePrefab
		{
			[Token(Token = "0x6000D06")]
			[Address(RVA = "0xC88584", Offset = "0xC88584", VA = "0xC88584")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D07")]
			[Address(RVA = "0xC8858C", Offset = "0xC8858C", VA = "0xC8858C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DB")]
		public bool IsParticleLooped
		{
			[Token(Token = "0x6000D08")]
			[Address(RVA = "0xC88594", Offset = "0xC88594", VA = "0xC88594")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D09")]
			[Address(RVA = "0xC8859C", Offset = "0xC8859C", VA = "0xC8859C")]
			set
			{
			}
		}

		[Token(Token = "0x170000DC")]
		public Range EmissionInterval
		{
			[Token(Token = "0x6000D0A")]
			[Address(RVA = "0xC885A8", Offset = "0xC885A8", VA = "0xC885A8")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6000D0B")]
			[Address(RVA = "0xC885B0", Offset = "0xC885B0", VA = "0xC885B0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DD")]
		public InteractionIntervalType EmissionIntervalType
		{
			[Token(Token = "0x6000D0C")]
			[Address(RVA = "0xC885B8", Offset = "0xC885B8", VA = "0xC885B8")]
			get
			{
				return default(InteractionIntervalType);
			}
			[Token(Token = "0x6000D0D")]
			[Address(RVA = "0xC885C0", Offset = "0xC885C0", VA = "0xC885C0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DE")]
		public bool EmitOnCollision
		{
			[Token(Token = "0x6000D0E")]
			[Address(RVA = "0xC885C8", Offset = "0xC885C8", VA = "0xC885C8")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D0F")]
			[Address(RVA = "0xC885D0", Offset = "0xC885D0", VA = "0xC885D0")]
			set
			{
			}
		}

		[Token(Token = "0x170000DF")]
		public bool EmitOnSlide
		{
			[Token(Token = "0x6000D10")]
			[Address(RVA = "0xC885DC", Offset = "0xC885DC", VA = "0xC885DC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D11")]
			[Address(RVA = "0xC885E4", Offset = "0xC885E4", VA = "0xC885E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000E0")]
		public bool EmitOnRoll
		{
			[Token(Token = "0x6000D12")]
			[Address(RVA = "0xC885F0", Offset = "0xC885F0", VA = "0xC885F0")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D13")]
			[Address(RVA = "0xC885F8", Offset = "0xC885F8", VA = "0xC885F8")]
			set
			{
			}
		}

		[Token(Token = "0x6000D14")]
		public override IInteractionResult GetInteractionResult<T>(T interactionData)
		{
			return null;
		}

		[Token(Token = "0x6000D15")]
		[Address(RVA = "0xC88604", Offset = "0xC88604", VA = "0xC88604")]
		private bool shouldEmit(int collisionParameterType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D16")]
		[Address(RVA = "0xC88640", Offset = "0xC88640", VA = "0xC88640", Slot = "7")]
		public override void Preload()
		{
		}

		[Token(Token = "0x6000D17")]
		[Address(RVA = "0xC88794", Offset = "0xC88794", VA = "0xC88794")]
		public ImpactParticleInteraction()
		{
		}
	}
	[Token(Token = "0x2000332")]
	public class ImpactParticlePool : ObjectPool<ImpactParticlesBase>
	{
		[Token(Token = "0x4001023")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectPoolGroup<ImpactParticlePool, ImpactParticlesBase> poolGroup;

		[Token(Token = "0x6000D18")]
		[Address(RVA = "0xC886CC", Offset = "0xC886CC", VA = "0xC886CC")]
		public static void PreloadPoolForParticle(ImpactParticlesBase template)
		{
		}

		[Token(Token = "0x6000D19")]
		[Address(RVA = "0xC887BC", Offset = "0xC887BC", VA = "0xC887BC")]
		public static ImpactParticlesBase EmitParticles(ParticleInteractionResult interactionResult, Vector3 point, Vector3 normal, int priority)
		{
			return null;
		}

		[Token(Token = "0x6000D1A")]
		[Address(RVA = "0xC88974", Offset = "0xC88974", VA = "0xC88974", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000D1B")]
		[Address(RVA = "0xC88A1C", Offset = "0xC88A1C", VA = "0xC88A1C")]
		public ImpactParticlePool()
		{
		}
	}
	[Token(Token = "0x2000333")]
	[AddComponentMenu("Impact/Impact Particles")]
	public class ImpactParticles : ImpactParticlesBase
	{
		[Token(Token = "0x2000334")]
		public enum ParticleRotationMode
		{
			[Token(Token = "0x400102A")]
			AlignToNormal,
			[Token(Token = "0x400102B")]
			AlignToVelocity,
			[Token(Token = "0x400102C")]
			AlignToNormalAndVelocity,
			[Token(Token = "0x400102D")]
			NoRotation
		}

		[Token(Token = "0x4001024")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private ParticleRotationMode _rotationMode;

		[Token(Token = "0x4001025")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private AlignmentAxis _axis;

		[Token(Token = "0x4001026")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x4001027")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ObjectPoolFallbackMode _poolFallbackMode;

		[Token(Token = "0x4001028")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private ParticleSystem[] particles;

		[Token(Token = "0x170000E1")]
		public ParticleRotationMode RotationMode
		{
			[Token(Token = "0x6000D1D")]
			[Address(RVA = "0xC88AF0", Offset = "0xC88AF0", VA = "0xC88AF0")]
			get
			{
				return default(ParticleRotationMode);
			}
			[Token(Token = "0x6000D1E")]
			[Address(RVA = "0xC88AF8", Offset = "0xC88AF8", VA = "0xC88AF8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E2")]
		public AlignmentAxis Axis
		{
			[Token(Token = "0x6000D1F")]
			[Address(RVA = "0xC88B00", Offset = "0xC88B00", VA = "0xC88B00")]
			get
			{
				return default(AlignmentAxis);
			}
			[Token(Token = "0x6000D20")]
			[Address(RVA = "0xC88B08", Offset = "0xC88B08", VA = "0xC88B08")]
			set
			{
			}
		}

		[Token(Token = "0x170000E3")]
		public override int PoolSize
		{
			[Token(Token = "0x6000D21")]
			[Address(RVA = "0xC88B10", Offset = "0xC88B10", VA = "0xC88B10", Slot = "7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D22")]
			[Address(RVA = "0xC88B18", Offset = "0xC88B18", VA = "0xC88B18", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000E4")]
		public override ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x6000D23")]
			[Address(RVA = "0xC88B20", Offset = "0xC88B20", VA = "0xC88B20", Slot = "9")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x6000D24")]
			[Address(RVA = "0xC88B28", Offset = "0xC88B28", VA = "0xC88B28", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000D25")]
		[Address(RVA = "0xC88B30", Offset = "0xC88B30", VA = "0xC88B30")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D26")]
		[Address(RVA = "0xC88B80", Offset = "0xC88B80", VA = "0xC88B80", Slot = "11")]
		public override void EmitParticles(ParticleInteractionResult interactionResult, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x6000D27")]
		[Address(RVA = "0xC88C34", Offset = "0xC88C34", VA = "0xC88C34", Slot = "12")]
		public override void UpdateTransform(Vector3 point, Vector3 normal, Vector3 velocity)
		{
		}

		[Token(Token = "0x6000D28")]
		[Address(RVA = "0xC89050", Offset = "0xC89050", VA = "0xC89050", Slot = "13")]
		public override void Stop()
		{
		}

		[Token(Token = "0x6000D29")]
		[Address(RVA = "0xC890B0", Offset = "0xC890B0", VA = "0xC890B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000D2A")]
		[Address(RVA = "0xC89144", Offset = "0xC89144", VA = "0xC89144")]
		public ImpactParticles()
		{
		}
	}
	[Token(Token = "0x2000335")]
	public abstract class ImpactParticlesBase : PooledObject
	{
		[Token(Token = "0x170000E5")]
		public abstract int PoolSize
		{
			[Token(Token = "0x6000D2B")]
			get;
			[Token(Token = "0x6000D2C")]
			set;
		}

		[Token(Token = "0x170000E6")]
		public abstract ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x6000D2D")]
			get;
			[Token(Token = "0x6000D2E")]
			set;
		}

		[Token(Token = "0x6000D2F")]
		public abstract void EmitParticles(ParticleInteractionResult interactionResult, Vector3 point, Vector3 normal);

		[Token(Token = "0x6000D30")]
		public abstract void UpdateTransform(Vector3 point, Vector3 normal, Vector3 velocity);

		[Token(Token = "0x6000D31")]
		public abstract void Stop();

		[Token(Token = "0x6000D32")]
		[Address(RVA = "0xC89160", Offset = "0xC89160", VA = "0xC89160")]
		protected ImpactParticlesBase()
		{
		}
	}
	[Token(Token = "0x2000336")]
	public class ParticleInteractionResult : IContinuousInteractionResult, IInteractionResult, IDisposable, IPoolable
	{
		[Token(Token = "0x4001030")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ImpactParticlesBase ParticlesTemplate;

		[Token(Token = "0x4001031")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public bool IsParticleLooped;

		[Token(Token = "0x4001032")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		public Range EmissionInterval;

		[Token(Token = "0x4001033")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x84")]
		public InteractionIntervalType EmissionIntervalType;

		[Token(Token = "0x4001037")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float intervalCounter;

		[Token(Token = "0x4001038")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float currentEmissionIntervalTarget;

		[Token(Token = "0x4001039")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 previousEmissionPosition;

		[Token(Token = "0x400103A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IImpactObject parent;

		[Token(Token = "0x400103B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isAvailable;

		[Token(Token = "0x170000E7")]
		public InteractionData OriginalData
		{
			[Token(Token = "0x6000D35")]
			[Address(RVA = "0xC89300", Offset = "0xC89300", VA = "0xC89300")]
			[CompilerGenerated]
			get
			{
				return default(InteractionData);
			}
			[Token(Token = "0x6000D36")]
			[Address(RVA = "0xC89310", Offset = "0xC89310", VA = "0xC89310")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000E8")]
		public long Key
		{
			[Token(Token = "0x6000D37")]
			[Address(RVA = "0xC89328", Offset = "0xC89328", VA = "0xC89328", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000D38")]
			[Address(RVA = "0xC89330", Offset = "0xC89330", VA = "0xC89330", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000E9")]
		public bool IsValid
		{
			[Token(Token = "0x6000D39")]
			[Address(RVA = "0xC89338", Offset = "0xC89338", VA = "0xC89338", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EA")]
		public bool IsAlive
		{
			[Token(Token = "0x6000D3A")]
			[Address(RVA = "0xC89398", Offset = "0xC89398", VA = "0xC89398", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D3B")]
			[Address(RVA = "0xC893A0", Offset = "0xC893A0", VA = "0xC893A0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000EB")]
		public ImpactParticlesBase Particles
		{
			[Token(Token = "0x6000D3C")]
			[Address(RVA = "0xC893AC", Offset = "0xC893AC", VA = "0xC893AC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D3D")]
			[Address(RVA = "0xC893B4", Offset = "0xC893B4", VA = "0xC893B4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000021")]
		public static event Action<ParticleInteractionResult> OnInteractionProcessed
		{
			[Token(Token = "0x6000D33")]
			[Address(RVA = "0xC89168", Offset = "0xC89168", VA = "0xC89168")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D34")]
			[Address(RVA = "0xC89234", Offset = "0xC89234", VA = "0xC89234")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000D3E")]
		[Address(RVA = "0xC893BC", Offset = "0xC893BC", VA = "0xC893BC", Slot = "10")]
		public void Process(IImpactObject parent)
		{
		}

		[Token(Token = "0x6000D3F")]
		[Address(RVA = "0xC89590", Offset = "0xC89590", VA = "0xC89590", Slot = "7")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D40")]
		[Address(RVA = "0xC89598", Offset = "0xC89598", VA = "0xC89598", Slot = "8")]
		public void KeepAlive(IInteractionResult newResult)
		{
		}

		[Token(Token = "0x6000D41")]
		[Address(RVA = "0xC894F4", Offset = "0xC894F4", VA = "0xC894F4", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000D42")]
		[Address(RVA = "0xC89868", Offset = "0xC89868", VA = "0xC89868", Slot = "12")]
		public void Retrieve()
		{
		}

		[Token(Token = "0x6000D43")]
		[Address(RVA = "0xC8985C", Offset = "0xC8985C", VA = "0xC8985C", Slot = "13")]
		public void MakeAvailable()
		{
		}

		[Token(Token = "0x6000D44")]
		[Address(RVA = "0xC89870", Offset = "0xC89870", VA = "0xC89870", Slot = "14")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D45")]
		[Address(RVA = "0xC89878", Offset = "0xC89878", VA = "0xC89878")]
		public ParticleInteractionResult()
		{
		}
	}
}
namespace Impact.Interactions.Decals
{
	[Token(Token = "0x2000337")]
	public class DecalInteractionResult : IContinuousInteractionResult, IInteractionResult, IDisposable, IPoolable
	{
		[Token(Token = "0x400103E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x70")]
		public ImpactDecalBase DecalTemplate;

		[Token(Token = "0x400103F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public Range CreationInterval;

		[Token(Token = "0x4001040")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public InteractionIntervalType CreationIntervalType;

		[Token(Token = "0x4001044")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA0")]
		private float intervalCounter;

		[Token(Token = "0x4001045")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private float currentCreationIntervalTarget;

		[Token(Token = "0x4001046")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private Vector3 previousCreationPosition;

		[Token(Token = "0x4001047")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IImpactObject parent;

		[Token(Token = "0x4001048")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isAvailable;

		[Token(Token = "0x170000EC")]
		public InteractionData OriginalData
		{
			[Token(Token = "0x6000D48")]
			[Address(RVA = "0xC89A20", Offset = "0xC89A20", VA = "0xC89A20")]
			[CompilerGenerated]
			get
			{
				return default(InteractionData);
			}
			[Token(Token = "0x6000D49")]
			[Address(RVA = "0xC89A30", Offset = "0xC89A30", VA = "0xC89A30")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000ED")]
		public long Key
		{
			[Token(Token = "0x6000D4A")]
			[Address(RVA = "0xC89A48", Offset = "0xC89A48", VA = "0xC89A48", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000D4B")]
			[Address(RVA = "0xC89A50", Offset = "0xC89A50", VA = "0xC89A50", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x170000EE")]
		public bool IsValid
		{
			[Token(Token = "0x6000D4C")]
			[Address(RVA = "0xC89A58", Offset = "0xC89A58", VA = "0xC89A58", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x170000EF")]
		public bool IsAlive
		{
			[Token(Token = "0x6000D4D")]
			[Address(RVA = "0xC89AB8", Offset = "0xC89AB8", VA = "0xC89AB8", Slot = "6")]
			[CompilerGenerated]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D4E")]
			[Address(RVA = "0xC89AC0", Offset = "0xC89AC0", VA = "0xC89AC0")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x170000F0")]
		public ImpactDecalBase Decal
		{
			[Token(Token = "0x6000D4F")]
			[Address(RVA = "0xC89ACC", Offset = "0xC89ACC", VA = "0xC89ACC")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D50")]
			[Address(RVA = "0xC89AD4", Offset = "0xC89AD4", VA = "0xC89AD4")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000022")]
		public static event Action<DecalInteractionResult> OnInteractionProcessed
		{
			[Token(Token = "0x6000D46")]
			[Address(RVA = "0xC89888", Offset = "0xC89888", VA = "0xC89888")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D47")]
			[Address(RVA = "0xC89954", Offset = "0xC89954", VA = "0xC89954")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000D51")]
		[Address(RVA = "0xC89ADC", Offset = "0xC89ADC", VA = "0xC89ADC", Slot = "10")]
		public void Process(IImpactObject parent)
		{
		}

		[Token(Token = "0x6000D52")]
		[Address(RVA = "0xC89DC8", Offset = "0xC89DC8", VA = "0xC89DC8", Slot = "7")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D53")]
		[Address(RVA = "0xC89DD0", Offset = "0xC89DD0", VA = "0xC89DD0", Slot = "8")]
		public void KeepAlive(IInteractionResult newResult)
		{
		}

		[Token(Token = "0x6000D54")]
		[Address(RVA = "0xC89DB4", Offset = "0xC89DB4", VA = "0xC89DB4", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000D55")]
		[Address(RVA = "0xC8A034", Offset = "0xC8A034", VA = "0xC8A034", Slot = "12")]
		public void Retrieve()
		{
		}

		[Token(Token = "0x6000D56")]
		[Address(RVA = "0xC8A028", Offset = "0xC8A028", VA = "0xC8A028", Slot = "13")]
		public void MakeAvailable()
		{
		}

		[Token(Token = "0x6000D57")]
		[Address(RVA = "0xC8A03C", Offset = "0xC8A03C", VA = "0xC8A03C", Slot = "14")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000D58")]
		[Address(RVA = "0xC8A044", Offset = "0xC8A044", VA = "0xC8A044")]
		public DecalInteractionResult()
		{
		}
	}
	[Token(Token = "0x2000338")]
	[AddComponentMenu("Impact/Impact Decal")]
	public class ImpactDecal : ImpactDecalBase
	{
		[Token(Token = "0x2000339")]
		public enum DecalRotationMode
		{
			[Token(Token = "0x4001051")]
			AlignToNormalRandom,
			[Token(Token = "0x4001052")]
			AlignToNormalAndVelocity,
			[Token(Token = "0x4001053")]
			AlignToNormalOnly
		}

		[Token(Token = "0x4001049")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float _decalDistance;

		[Token(Token = "0x400104A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private DecalRotationMode _rotationMode;

		[Token(Token = "0x400104B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private AlignmentAxis _axis;

		[Token(Token = "0x400104C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _parentToObject;

		[Token(Token = "0x400104D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x400104E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		[SerializeField]
		private ObjectPoolFallbackMode _poolFallbackMode;

		[Token(Token = "0x400104F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		private ImpactDecalManager parentObject;

		[Token(Token = "0x170000F1")]
		public override int PoolSize
		{
			[Token(Token = "0x6000D59")]
			[Address(RVA = "0xC8A054", Offset = "0xC8A054", VA = "0xC8A054", Slot = "7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000D5A")]
			[Address(RVA = "0xC8A05C", Offset = "0xC8A05C", VA = "0xC8A05C", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x170000F2")]
		public override ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x6000D5B")]
			[Address(RVA = "0xC8A064", Offset = "0xC8A064", VA = "0xC8A064", Slot = "9")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x6000D5C")]
			[Address(RVA = "0xC8A06C", Offset = "0xC8A06C", VA = "0xC8A06C", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x170000F3")]
		public float DecalDistance
		{
			[Token(Token = "0x6000D5D")]
			[Address(RVA = "0xC8A074", Offset = "0xC8A074", VA = "0xC8A074")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D5E")]
			[Address(RVA = "0xC8A07C", Offset = "0xC8A07C", VA = "0xC8A07C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F4")]
		public DecalRotationMode RotationMode
		{
			[Token(Token = "0x6000D5F")]
			[Address(RVA = "0xC8A084", Offset = "0xC8A084", VA = "0xC8A084")]
			get
			{
				return default(DecalRotationMode);
			}
			[Token(Token = "0x6000D60")]
			[Address(RVA = "0xC8A08C", Offset = "0xC8A08C", VA = "0xC8A08C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F5")]
		public AlignmentAxis Axis
		{
			[Token(Token = "0x6000D61")]
			[Address(RVA = "0xC8A094", Offset = "0xC8A094", VA = "0xC8A094")]
			get
			{
				return default(AlignmentAxis);
			}
			[Token(Token = "0x6000D62")]
			[Address(RVA = "0xC8A09C", Offset = "0xC8A09C", VA = "0xC8A09C")]
			set
			{
			}
		}

		[Token(Token = "0x170000F6")]
		public bool ParentToObject
		{
			[Token(Token = "0x6000D63")]
			[Address(RVA = "0xC8A0A4", Offset = "0xC8A0A4", VA = "0xC8A0A4")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D64")]
			[Address(RVA = "0xC8A0AC", Offset = "0xC8A0AC", VA = "0xC8A0AC")]
			set
			{
			}
		}

		[Token(Token = "0x6000D65")]
		[Address(RVA = "0xC8A0B8", Offset = "0xC8A0B8", VA = "0xC8A0B8", Slot = "11")]
		public override void SetupDecal(DecalInteractionResult interactionResult, Vector3 point, Vector3 normal)
		{
		}

		[Token(Token = "0x6000D66")]
		[Address(RVA = "0xC8A2F0", Offset = "0xC8A2F0", VA = "0xC8A2F0")]
		private void rotateRandom()
		{
		}

		[Token(Token = "0x6000D67")]
		[Address(RVA = "0xC8A414", Offset = "0xC8A414", VA = "0xC8A414", Slot = "4")]
		public override void Retrieve(int priority)
		{
		}

		[Token(Token = "0x6000D68")]
		[Address(RVA = "0xC8A4FC", Offset = "0xC8A4FC", VA = "0xC8A4FC", Slot = "5")]
		public override void MakeAvailable()
		{
		}

		[Token(Token = "0x6000D69")]
		[Address(RVA = "0xC8A57C", Offset = "0xC8A57C", VA = "0xC8A57C")]
		public ImpactDecal()
		{
		}
	}
	[Token(Token = "0x200033A")]
	public abstract class ImpactDecalBase : PooledObject
	{
		[Token(Token = "0x170000F7")]
		public abstract int PoolSize
		{
			[Token(Token = "0x6000D6A")]
			get;
			[Token(Token = "0x6000D6B")]
			set;
		}

		[Token(Token = "0x170000F8")]
		public abstract ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x6000D6C")]
			get;
			[Token(Token = "0x6000D6D")]
			set;
		}

		[Token(Token = "0x6000D6E")]
		public abstract void SetupDecal(DecalInteractionResult interactionResult, Vector3 point, Vector3 normal);

		[Token(Token = "0x6000D6F")]
		[Address(RVA = "0xC8A5A4", Offset = "0xC8A5A4", VA = "0xC8A5A4")]
		protected ImpactDecalBase()
		{
		}
	}
	[Token(Token = "0x200033B")]
	[CreateAssetMenu(fileName = "New Impact Decal Interaction", menuName = "Impact/Decal Interaction", order = 2)]
	public class ImpactDecalInteraction : ImpactInteractionBase
	{
		[Token(Token = "0x4001054")]
		private const string interactionResultPoolKey = "DecalInteractionResult";

		[Token(Token = "0x4001055")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private float _minimumVelocity;

		[Token(Token = "0x4001056")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		[SerializeField]
		private float _collisionNormalInfluence;

		[Token(Token = "0x4001057")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private ImpactDecalBase _decalPrefab;

		[Token(Token = "0x4001058")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Range _creationInterval;

		[Token(Token = "0x4001059")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private InteractionIntervalType _creationIntervalType;

		[Token(Token = "0x400105A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private bool _createOnCollision;

		[Token(Token = "0x400105B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x35")]
		[SerializeField]
		private bool _createOnSlide;

		[Token(Token = "0x400105C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x36")]
		[SerializeField]
		private bool _createOnRoll;

		[Token(Token = "0x170000F9")]
		public float MinimumVelocity
		{
			[Token(Token = "0x6000D70")]
			[Address(RVA = "0xC8A5AC", Offset = "0xC8A5AC", VA = "0xC8A5AC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D71")]
			[Address(RVA = "0xC8A5B4", Offset = "0xC8A5B4", VA = "0xC8A5B4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FA")]
		public float CollisionNormalInfluence
		{
			[Token(Token = "0x6000D72")]
			[Address(RVA = "0xC8A5BC", Offset = "0xC8A5BC", VA = "0xC8A5BC")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000D73")]
			[Address(RVA = "0xC8A5C4", Offset = "0xC8A5C4", VA = "0xC8A5C4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FB")]
		public ImpactDecalBase DecalPrefab
		{
			[Token(Token = "0x6000D74")]
			[Address(RVA = "0xC8A5CC", Offset = "0xC8A5CC", VA = "0xC8A5CC")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D75")]
			[Address(RVA = "0xC8A5D4", Offset = "0xC8A5D4", VA = "0xC8A5D4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FC")]
		public Range CreationInterval
		{
			[Token(Token = "0x6000D76")]
			[Address(RVA = "0xC8A5DC", Offset = "0xC8A5DC", VA = "0xC8A5DC")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6000D77")]
			[Address(RVA = "0xC8A5E4", Offset = "0xC8A5E4", VA = "0xC8A5E4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FD")]
		public InteractionIntervalType CreationIntervalType
		{
			[Token(Token = "0x6000D78")]
			[Address(RVA = "0xC8A5EC", Offset = "0xC8A5EC", VA = "0xC8A5EC")]
			get
			{
				return default(InteractionIntervalType);
			}
			[Token(Token = "0x6000D79")]
			[Address(RVA = "0xC8A5F4", Offset = "0xC8A5F4", VA = "0xC8A5F4")]
			set
			{
			}
		}

		[Token(Token = "0x170000FE")]
		public bool CreateOnCollision
		{
			[Token(Token = "0x6000D7A")]
			[Address(RVA = "0xC8A5FC", Offset = "0xC8A5FC", VA = "0xC8A5FC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D7B")]
			[Address(RVA = "0xC8A604", Offset = "0xC8A604", VA = "0xC8A604")]
			set
			{
			}
		}

		[Token(Token = "0x170000FF")]
		public bool CreateOnSlide
		{
			[Token(Token = "0x6000D7C")]
			[Address(RVA = "0xC8A610", Offset = "0xC8A610", VA = "0xC8A610")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D7D")]
			[Address(RVA = "0xC8A618", Offset = "0xC8A618", VA = "0xC8A618")]
			set
			{
			}
		}

		[Token(Token = "0x17000100")]
		public bool CreateOnRoll
		{
			[Token(Token = "0x6000D7E")]
			[Address(RVA = "0xC8A624", Offset = "0xC8A624", VA = "0xC8A624")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000D7F")]
			[Address(RVA = "0xC8A62C", Offset = "0xC8A62C", VA = "0xC8A62C")]
			set
			{
			}
		}

		[Token(Token = "0x6000D80")]
		public override IInteractionResult GetInteractionResult<T>(T interactionData)
		{
			return null;
		}

		[Token(Token = "0x6000D81")]
		[Address(RVA = "0xC8A638", Offset = "0xC8A638", VA = "0xC8A638")]
		private bool shouldEmit(int collisionParameterType)
		{
			return default(bool);
		}

		[Token(Token = "0x6000D82")]
		[Address(RVA = "0xC8A674", Offset = "0xC8A674", VA = "0xC8A674", Slot = "7")]
		public override void Preload()
		{
		}

		[Token(Token = "0x6000D83")]
		[Address(RVA = "0xC8A7C8", Offset = "0xC8A7C8", VA = "0xC8A7C8")]
		public ImpactDecalInteraction()
		{
		}
	}
	[Token(Token = "0x200033C")]
	[AddComponentMenu("Impact/Impact Decal Manager")]
	public class ImpactDecalManager : MonoBehaviour
	{
		[Token(Token = "0x400105D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private bool suppressDestroyEvent;

		[Token(Token = "0x400105E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private List<ImpactDecalBase> attachedDecals;

		[Token(Token = "0x6000D84")]
		[Address(RVA = "0xC8A36C", Offset = "0xC8A36C", VA = "0xC8A36C")]
		public void AddDecal(ImpactDecalBase impactDecal)
		{
		}

		[Token(Token = "0x6000D85")]
		[Address(RVA = "0xC8A4A4", Offset = "0xC8A4A4", VA = "0xC8A4A4")]
		public void RemoveDecal(ImpactDecalBase impactDecal)
		{
		}

		[Token(Token = "0x6000D86")]
		[Address(RVA = "0xC8A7F0", Offset = "0xC8A7F0", VA = "0xC8A7F0")]
		public void ReleaseAllDecals()
		{
		}

		[Token(Token = "0x6000D87")]
		[Address(RVA = "0xC8A890", Offset = "0xC8A890", VA = "0xC8A890")]
		private void OnApplicationQuit()
		{
		}

		[Token(Token = "0x6000D88")]
		[Address(RVA = "0xC8A89C", Offset = "0xC8A89C", VA = "0xC8A89C")]
		private void OnDestroy()
		{
		}

		[Token(Token = "0x6000D89")]
		[Address(RVA = "0xC8A8AC", Offset = "0xC8A8AC", VA = "0xC8A8AC")]
		public ImpactDecalManager()
		{
		}
	}
	[Token(Token = "0x200033D")]
	public class ImpactDecalPool : ObjectPool<ImpactDecalBase>
	{
		[Token(Token = "0x400105F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectPoolGroup<ImpactDecalPool, ImpactDecalBase> poolGroup;

		[Token(Token = "0x6000D8A")]
		[Address(RVA = "0xC8A700", Offset = "0xC8A700", VA = "0xC8A700")]
		public static void PreloadPoolForDecal(ImpactDecalBase template)
		{
		}

		[Token(Token = "0x6000D8B")]
		[Address(RVA = "0xC89BFC", Offset = "0xC89BFC", VA = "0xC89BFC")]
		public static ImpactDecalBase CreateDecal(DecalInteractionResult collisionResult, Vector3 point, Vector3 normal)
		{
			return null;
		}

		[Token(Token = "0x6000D8C")]
		[Address(RVA = "0xC8A928", Offset = "0xC8A928", VA = "0xC8A928")]
		public static void ReturnAllDecalsToPools()
		{
		}

		[Token(Token = "0x6000D8D")]
		[Address(RVA = "0xC8A9A0", Offset = "0xC8A9A0", VA = "0xC8A9A0")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000D8E")]
		[Address(RVA = "0xC8AA44", Offset = "0xC8AA44", VA = "0xC8AA44", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000D8F")]
		[Address(RVA = "0xC8AB64", Offset = "0xC8AB64", VA = "0xC8AB64")]
		private void sceneLoaded(Scene scene, LoadSceneMode loadSceneMode)
		{
		}

		[Token(Token = "0x6000D90")]
		[Address(RVA = "0xC8AC64", Offset = "0xC8AC64", VA = "0xC8AC64")]
		public ImpactDecalPool()
		{
		}
	}
}
namespace Impact.Interactions.Audio
{
	[Token(Token = "0x200033E")]
	public class AudioInteractionResult : IContinuousInteractionResult, IInteractionResult, IDisposable, IPoolable
	{
		[Token(Token = "0x4001063")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		public ImpactAudioSourceBase AudioSourceTemplate;

		[Token(Token = "0x4001064")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x80")]
		public AudioClip AudioClip;

		[Token(Token = "0x4001065")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		public bool LoopAudio;

		[Token(Token = "0x4001066")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x8C")]
		public float Volume;

		[Token(Token = "0x4001067")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x90")]
		public float Pitch;

		[Token(Token = "0x4001068")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		public ImpactAudioInteraction Interaction;

		[Token(Token = "0x400106A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA8")]
		private float targetVolume;

		[Token(Token = "0x400106B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private float currentVolume;

		[Token(Token = "0x400106C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB0")]
		private float targetPitch;

		[Token(Token = "0x400106D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private float currentPitch;

		[Token(Token = "0x400106E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB8")]
		private IImpactObject parent;

		[Token(Token = "0x400106F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private bool isAvailable;

		[Token(Token = "0x17000101")]
		public InteractionData OriginalData
		{
			[Token(Token = "0x6000D94")]
			[Address(RVA = "0xC8AED0", Offset = "0xC8AED0", VA = "0xC8AED0")]
			[CompilerGenerated]
			get
			{
				return default(InteractionData);
			}
			[Token(Token = "0x6000D95")]
			[Address(RVA = "0xC8AEE0", Offset = "0xC8AEE0", VA = "0xC8AEE0")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000102")]
		public long Key
		{
			[Token(Token = "0x6000D96")]
			[Address(RVA = "0xC8AEF8", Offset = "0xC8AEF8", VA = "0xC8AEF8", Slot = "4")]
			[CompilerGenerated]
			get
			{
				return default(long);
			}
			[Token(Token = "0x6000D97")]
			[Address(RVA = "0xC8AF00", Offset = "0xC8AF00", VA = "0xC8AF00", Slot = "5")]
			[CompilerGenerated]
			set
			{
			}
		}

		[Token(Token = "0x17000103")]
		public bool IsValid
		{
			[Token(Token = "0x6000D98")]
			[Address(RVA = "0xC8AF08", Offset = "0xC8AF08", VA = "0xC8AF08", Slot = "9")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000104")]
		public bool IsAlive
		{
			[Token(Token = "0x6000D99")]
			[Address(RVA = "0xC8AFB4", Offset = "0xC8AFB4", VA = "0xC8AFB4", Slot = "6")]
			get
			{
				return default(bool);
			}
		}

		[Token(Token = "0x17000105")]
		public ImpactAudioSourceBase AudioSource
		{
			[Token(Token = "0x6000D9A")]
			[Address(RVA = "0xC8B03C", Offset = "0xC8B03C", VA = "0xC8B03C")]
			[CompilerGenerated]
			get
			{
				return null;
			}
			[Token(Token = "0x6000D9B")]
			[Address(RVA = "0xC8B044", Offset = "0xC8B044", VA = "0xC8B044")]
			[CompilerGenerated]
			private set
			{
			}
		}

		[Token(Token = "0x14000023")]
		public static event Action<AudioInteractionResult> OnInteractionProcessed
		{
			[Token(Token = "0x6000D92")]
			[Address(RVA = "0xC8AD38", Offset = "0xC8AD38", VA = "0xC8AD38")]
			[CompilerGenerated]
			add
			{
			}
			[Token(Token = "0x6000D93")]
			[Address(RVA = "0xC8AE04", Offset = "0xC8AE04", VA = "0xC8AE04")]
			[CompilerGenerated]
			remove
			{
			}
		}

		[Token(Token = "0x6000D9C")]
		[Address(RVA = "0xC8B04C", Offset = "0xC8B04C", VA = "0xC8B04C", Slot = "10")]
		public void Process(IImpactObject parent)
		{
		}

		[Token(Token = "0x6000D9D")]
		[Address(RVA = "0xC8B3D8", Offset = "0xC8B3D8", VA = "0xC8B3D8", Slot = "7")]
		public void FixedUpdate()
		{
		}

		[Token(Token = "0x6000D9E")]
		[Address(RVA = "0xC8B4BC", Offset = "0xC8B4BC", VA = "0xC8B4BC", Slot = "8")]
		public void KeepAlive(IInteractionResult newResult)
		{
		}

		[Token(Token = "0x6000D9F")]
		[Address(RVA = "0xC8B338", Offset = "0xC8B338", VA = "0xC8B338", Slot = "11")]
		public void Dispose()
		{
		}

		[Token(Token = "0x6000DA0")]
		[Address(RVA = "0xC8B66C", Offset = "0xC8B66C", VA = "0xC8B66C", Slot = "12")]
		public void Retrieve()
		{
		}

		[Token(Token = "0x6000DA1")]
		[Address(RVA = "0xC8B660", Offset = "0xC8B660", VA = "0xC8B660", Slot = "13")]
		public void MakeAvailable()
		{
		}

		[Token(Token = "0x6000DA2")]
		[Address(RVA = "0xC8B674", Offset = "0xC8B674", VA = "0xC8B674", Slot = "14")]
		public bool IsAvailable()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DA3")]
		[Address(RVA = "0xC8B67C", Offset = "0xC8B67C", VA = "0xC8B67C")]
		public AudioInteractionResult()
		{
		}
	}
	[Token(Token = "0x200033F")]
	[CreateAssetMenu(fileName = "New Impact Audio Interaction", menuName = "Impact/Audio Interaction", order = 2)]
	public class ImpactAudioInteraction : ImpactInteractionBase
	{
		[Token(Token = "0x2000340")]
		public enum CollisionAudioClipSelectionMode
		{
			[Token(Token = "0x400107E")]
			Velocity,
			[Token(Token = "0x400107F")]
			Random
		}

		[Token(Token = "0x4001070")]
		private const string interactionResultPoolKey = "AudioInteractionResult";

		[Token(Token = "0x4001071")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Range _velocityRange;

		[Token(Token = "0x4001072")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Range _randomPitchRange;

		[Token(Token = "0x4001073")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private Range _randomVolumeRange;

		[Token(Token = "0x4001074")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private bool _scaleVolumeWithVelocity;

		[Token(Token = "0x4001075")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[SerializeField]
		private AnimationCurve _velocityVolumeScaleCurve;

		[Token(Token = "0x4001076")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float _collisionNormalInfluence;

		[Token(Token = "0x4001077")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float _slideVelocityPitchMultiplier;

		[Token(Token = "0x4001078")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[SerializeField]
		private ImpactAudioSourceBase _audioSourceTemplate;

		[Token(Token = "0x4001079")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private CollisionAudioClipSelectionMode _collisionAudioSelectionMode;

		[Token(Token = "0x400107A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[SerializeField]
		private List<AudioClip> _collisionAudioClips;

		[Token(Token = "0x400107B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		[SerializeField]
		private AudioClip _slideAudioClip;

		[Token(Token = "0x400107C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private AudioClip _rollAudioClip;

		[Token(Token = "0x17000106")]
		public Range VelocityRange
		{
			[Token(Token = "0x6000DA4")]
			[Address(RVA = "0xC8B68C", Offset = "0xC8B68C", VA = "0xC8B68C")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6000DA5")]
			[Address(RVA = "0xC8B694", Offset = "0xC8B694", VA = "0xC8B694")]
			set
			{
			}
		}

		[Token(Token = "0x17000107")]
		public Range RandomPitchRange
		{
			[Token(Token = "0x6000DA6")]
			[Address(RVA = "0xC8B69C", Offset = "0xC8B69C", VA = "0xC8B69C")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6000DA7")]
			[Address(RVA = "0xC8B6A4", Offset = "0xC8B6A4", VA = "0xC8B6A4")]
			set
			{
			}
		}

		[Token(Token = "0x17000108")]
		public Range RandomVolumeRange
		{
			[Token(Token = "0x6000DA8")]
			[Address(RVA = "0xC8B6AC", Offset = "0xC8B6AC", VA = "0xC8B6AC")]
			get
			{
				return default(Range);
			}
			[Token(Token = "0x6000DA9")]
			[Address(RVA = "0xC8B6B4", Offset = "0xC8B6B4", VA = "0xC8B6B4")]
			set
			{
			}
		}

		[Token(Token = "0x17000109")]
		public bool ScaleVolumeWithVelocity
		{
			[Token(Token = "0x6000DAA")]
			[Address(RVA = "0xC8B6BC", Offset = "0xC8B6BC", VA = "0xC8B6BC")]
			get
			{
				return default(bool);
			}
			[Token(Token = "0x6000DAB")]
			[Address(RVA = "0xC8B6C4", Offset = "0xC8B6C4", VA = "0xC8B6C4")]
			set
			{
			}
		}

		[Token(Token = "0x1700010A")]
		public AnimationCurve VelocityVolumeScaleCurve
		{
			[Token(Token = "0x6000DAC")]
			[Address(RVA = "0xC8B6D0", Offset = "0xC8B6D0", VA = "0xC8B6D0")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DAD")]
			[Address(RVA = "0xC8B6D8", Offset = "0xC8B6D8", VA = "0xC8B6D8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010B")]
		public float CollisionNormalInfluence
		{
			[Token(Token = "0x6000DAE")]
			[Address(RVA = "0xC8B6E0", Offset = "0xC8B6E0", VA = "0xC8B6E0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DAF")]
			[Address(RVA = "0xC8B6E8", Offset = "0xC8B6E8", VA = "0xC8B6E8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010C")]
		public float SlideVelocityPitchMultiplier
		{
			[Token(Token = "0x6000DB0")]
			[Address(RVA = "0xC8B6F0", Offset = "0xC8B6F0", VA = "0xC8B6F0")]
			get
			{
				return default(float);
			}
			[Token(Token = "0x6000DB1")]
			[Address(RVA = "0xC8B6F8", Offset = "0xC8B6F8", VA = "0xC8B6F8")]
			set
			{
			}
		}

		[Token(Token = "0x1700010D")]
		public CollisionAudioClipSelectionMode CollisionAudioSelectionMode
		{
			[Token(Token = "0x6000DB2")]
			[Address(RVA = "0xC8B700", Offset = "0xC8B700", VA = "0xC8B700")]
			get
			{
				return default(CollisionAudioClipSelectionMode);
			}
			[Token(Token = "0x6000DB3")]
			[Address(RVA = "0xC8B708", Offset = "0xC8B708", VA = "0xC8B708")]
			set
			{
			}
		}

		[Token(Token = "0x1700010E")]
		public ImpactAudioSourceBase AudioSourceTemplate
		{
			[Token(Token = "0x6000DB4")]
			[Address(RVA = "0xC8B710", Offset = "0xC8B710", VA = "0xC8B710")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB5")]
			[Address(RVA = "0xC8B718", Offset = "0xC8B718", VA = "0xC8B718")]
			set
			{
			}
		}

		[Token(Token = "0x1700010F")]
		public List<AudioClip> CollisionAudioClips
		{
			[Token(Token = "0x6000DB6")]
			[Address(RVA = "0xC8B720", Offset = "0xC8B720", VA = "0xC8B720")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000110")]
		public AudioClip SlideAudioClip
		{
			[Token(Token = "0x6000DB7")]
			[Address(RVA = "0xC8B728", Offset = "0xC8B728", VA = "0xC8B728")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DB8")]
			[Address(RVA = "0xC8B730", Offset = "0xC8B730", VA = "0xC8B730")]
			set
			{
			}
		}

		[Token(Token = "0x17000111")]
		public AudioClip RollAudioClip
		{
			[Token(Token = "0x6000DB9")]
			[Address(RVA = "0xC8B738", Offset = "0xC8B738", VA = "0xC8B738")]
			get
			{
				return null;
			}
			[Token(Token = "0x6000DBA")]
			[Address(RVA = "0xC8B740", Offset = "0xC8B740", VA = "0xC8B740")]
			set
			{
			}
		}

		[Token(Token = "0x6000DBB")]
		public override IInteractionResult GetInteractionResult<T>(T interactionData)
		{
			return null;
		}

		[Token(Token = "0x6000DBC")]
		[Address(RVA = "0xC8B5CC", Offset = "0xC8B5CC", VA = "0xC8B5CC")]
		public float UpdatePitch(float originalPitch, Vector3 velocity)
		{
			return default(float);
		}

		[Token(Token = "0x6000DBD")]
		[Address(RVA = "0xC8B748", Offset = "0xC8B748", VA = "0xC8B748")]
		private float getVolume(float normalizedIntensity)
		{
			return default(float);
		}

		[Token(Token = "0x6000DBE")]
		[Address(RVA = "0xC8B7A8", Offset = "0xC8B7A8", VA = "0xC8B7A8")]
		private AudioClip getAudioClip(int interactionType, float normalizedIntensity)
		{
			return null;
		}

		[Token(Token = "0x6000DBF")]
		[Address(RVA = "0xC8B7D8", Offset = "0xC8B7D8", VA = "0xC8B7D8")]
		private AudioClip getCollisionAudioClip(float normalizedIntensity)
		{
			return null;
		}

		[Token(Token = "0x6000DC0")]
		[Address(RVA = "0xC8B8B4", Offset = "0xC8B8B4", VA = "0xC8B8B4")]
		private AudioClip getRandomCollisionAudioClip()
		{
			return null;
		}

		[Token(Token = "0x6000DC1")]
		[Address(RVA = "0xC8B944", Offset = "0xC8B944", VA = "0xC8B944", Slot = "7")]
		public override void Preload()
		{
		}

		[Token(Token = "0x6000DC2")]
		[Address(RVA = "0xC8BA98", Offset = "0xC8BA98", VA = "0xC8BA98")]
		public ImpactAudioInteraction()
		{
		}
	}
	[Token(Token = "0x2000341")]
	public class ImpactAudioPool : ObjectPool<ImpactAudioSourceBase>
	{
		[Token(Token = "0x4001080")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x0")]
		private static ObjectPoolGroup<ImpactAudioPool, ImpactAudioSourceBase> poolGroup;

		[Token(Token = "0x6000DC3")]
		[Address(RVA = "0xC8B9D0", Offset = "0xC8B9D0", VA = "0xC8B9D0")]
		public static void PreloadPoolForAudioSource(ImpactAudioSourceBase template)
		{
		}

		[Token(Token = "0x6000DC4")]
		[Address(RVA = "0xC8B19C", Offset = "0xC8B19C", VA = "0xC8B19C")]
		public static ImpactAudioSourceBase PlayAudio(AudioInteractionResult interactionResult, Vector3 point, int priority)
		{
			return null;
		}

		[Token(Token = "0x6000DC5")]
		[Address(RVA = "0xC8BB64", Offset = "0xC8BB64", VA = "0xC8BB64", Slot = "7")]
		protected override void OnDestroy()
		{
		}

		[Token(Token = "0x6000DC6")]
		[Address(RVA = "0xC8BC0C", Offset = "0xC8BC0C", VA = "0xC8BC0C")]
		public ImpactAudioPool()
		{
		}
	}
	[Token(Token = "0x2000342")]
	[AddComponentMenu("Impact/Impact Audio Source")]
	public class ImpactAudioSource : ImpactAudioSourceBase
	{
		[Token(Token = "0x4001081")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource _audioSource;

		[Token(Token = "0x4001082")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private int _poolSize;

		[Token(Token = "0x4001083")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x34")]
		[SerializeField]
		private ObjectPoolFallbackMode _poolFallbackMode;

		[Token(Token = "0x4001084")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private float baseVolume;

		[Token(Token = "0x4001085")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x3C")]
		private float basePitch;

		[Token(Token = "0x17000112")]
		public override int PoolSize
		{
			[Token(Token = "0x6000DC8")]
			[Address(RVA = "0xC8BCE0", Offset = "0xC8BCE0", VA = "0xC8BCE0", Slot = "7")]
			get
			{
				return default(int);
			}
			[Token(Token = "0x6000DC9")]
			[Address(RVA = "0xC8BCE8", Offset = "0xC8BCE8", VA = "0xC8BCE8", Slot = "8")]
			set
			{
			}
		}

		[Token(Token = "0x17000113")]
		public override ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x6000DCA")]
			[Address(RVA = "0xC8BCF0", Offset = "0xC8BCF0", VA = "0xC8BCF0", Slot = "9")]
			get
			{
				return default(ObjectPoolFallbackMode);
			}
			[Token(Token = "0x6000DCB")]
			[Address(RVA = "0xC8BCF8", Offset = "0xC8BCF8", VA = "0xC8BCF8", Slot = "10")]
			set
			{
			}
		}

		[Token(Token = "0x6000DCC")]
		[Address(RVA = "0xC8BD00", Offset = "0xC8BD00", VA = "0xC8BD00")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000DCD")]
		[Address(RVA = "0xC8BD50", Offset = "0xC8BD50", VA = "0xC8BD50")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DCE")]
		[Address(RVA = "0xC8BD8C", Offset = "0xC8BD8C", VA = "0xC8BD8C", Slot = "11")]
		public override void PlayAudio(AudioInteractionResult interactionResult, Vector3 point)
		{
		}

		[Token(Token = "0x6000DCF")]
		[Address(RVA = "0xC8BE58", Offset = "0xC8BE58", VA = "0xC8BE58", Slot = "12")]
		public override void UpdateAudio(float volume, float pitch)
		{
		}

		[Token(Token = "0x6000DD0")]
		[Address(RVA = "0xC8BEA4", Offset = "0xC8BEA4", VA = "0xC8BEA4", Slot = "13")]
		public override void StopAudio()
		{
		}

		[Token(Token = "0x6000DD1")]
		[Address(RVA = "0xC8BEC0", Offset = "0xC8BEC0", VA = "0xC8BEC0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DD2")]
		[Address(RVA = "0xC8BF0C", Offset = "0xC8BF0C", VA = "0xC8BF0C")]
		public ImpactAudioSource()
		{
		}
	}
	[Token(Token = "0x2000343")]
	public abstract class ImpactAudioSourceBase : PooledObject
	{
		[Token(Token = "0x17000114")]
		public abstract int PoolSize
		{
			[Token(Token = "0x6000DD3")]
			get;
			[Token(Token = "0x6000DD4")]
			set;
		}

		[Token(Token = "0x17000115")]
		public abstract ObjectPoolFallbackMode PoolFallbackMode
		{
			[Token(Token = "0x6000DD5")]
			get;
			[Token(Token = "0x6000DD6")]
			set;
		}

		[Token(Token = "0x6000DD7")]
		public abstract void PlayAudio(AudioInteractionResult interactionResult, Vector3 point);

		[Token(Token = "0x6000DD8")]
		public abstract void UpdateAudio(float volume, float pitch);

		[Token(Token = "0x6000DD9")]
		public abstract void StopAudio();

		[Token(Token = "0x6000DDA")]
		[Address(RVA = "0xC8BF20", Offset = "0xC8BF20", VA = "0xC8BF20")]
		protected ImpactAudioSourceBase()
		{
		}
	}
}
namespace Impact.Data
{
	[Token(Token = "0x2000344")]
	public enum AlignmentAxis
	{
		[Token(Token = "0x4001087")]
		ZDown,
		[Token(Token = "0x4001088")]
		ZUp,
		[Token(Token = "0x4001089")]
		YDown,
		[Token(Token = "0x400108A")]
		YUp
	}
	[Token(Token = "0x2000345")]
	public static class AlignmentAxisUtilities
	{
		[Token(Token = "0x6000DDB")]
		[Address(RVA = "0xC88D78", Offset = "0xC88D78", VA = "0xC88D78")]
		public static Quaternion GetRotationForAlignment(AlignmentAxis alignment, Vector3 normal)
		{
			return default(Quaternion);
		}

		[Token(Token = "0x6000DDC")]
		[Address(RVA = "0xC88F3C", Offset = "0xC88F3C", VA = "0xC88F3C")]
		public static Quaternion GetVelocityRotation(AlignmentAxis alignment, Vector3 normal, Vector3 velocity)
		{
			return default(Quaternion);
		}
	}
}
namespace Impact.Demo
{
	[Token(Token = "0x2000346")]
	public class DemoButton : MonoBehaviour
	{
		[Token(Token = "0x400108B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private UnityEvent onPressed;

		[Token(Token = "0x400108C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private UnityEvent onHeld;

		[Token(Token = "0x400108D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private AudioSource pressedAudio;

		[Token(Token = "0x6000DDD")]
		[Address(RVA = "0xC8BF28", Offset = "0xC8BF28", VA = "0xC8BF28")]
		public void Press()
		{
		}

		[Token(Token = "0x6000DDE")]
		[Address(RVA = "0xC8BF58", Offset = "0xC8BF58", VA = "0xC8BF58")]
		public void Hold()
		{
		}

		[Token(Token = "0x6000DDF")]
		[Address(RVA = "0xC8BF74", Offset = "0xC8BF74", VA = "0xC8BF74")]
		public DemoButton()
		{
		}
	}
	[Token(Token = "0x2000347")]
	public class DemoCharacterController : MonoBehaviour
	{
		[Token(Token = "0x400108E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody characterRigidbody;

		[Token(Token = "0x400108F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[Header("Movement")]
		[SerializeField]
		private float moveSpeed;

		[Token(Token = "0x4001090")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		[SerializeField]
		private float jumpForce;

		[Token(Token = "0x4001091")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float sprintMultiplier;

		[Token(Token = "0x4001092")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		[SerializeField]
		private float sneakMultiplier;

		[Token(Token = "0x4001093")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x30")]
		[SerializeField]
		private float movementSmoothing;

		[Token(Token = "0x4001094")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		[Header("Camera")]
		[SerializeField]
		private Transform cameraTransform;

		[Token(Token = "0x4001095")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x40")]
		[SerializeField]
		private float sensitivity;

		[Token(Token = "0x4001096")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x44")]
		[SerializeField]
		private float cameraSmoothing;

		[Token(Token = "0x4001097")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		[Header("Pick Up Objects")]
		[SerializeField]
		private float pickedUpDrag;

		[Token(Token = "0x4001098")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x4C")]
		[SerializeField]
		private float pickupHoldForce;

		[Token(Token = "0x4001099")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		[SerializeField]
		private float throwForce;

		[Token(Token = "0x400109A")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		[Header("Footsteps")]
		[SerializeField]
		private ImpactTag footstepLeftTag;

		[Token(Token = "0x400109B")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x68")]
		[SerializeField]
		private ImpactTag footstepRightTag;

		[Token(Token = "0x400109C")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x78")]
		[SerializeField]
		private float footstepInterval;

		[Token(Token = "0x400109D")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x7C")]
		[SerializeField]
		private Vector3 footOffset;

		[Token(Token = "0x400109E")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x88")]
		[SerializeField]
		[Header("Weapon")]
		private ImpactTag bulletTag;

		[Token(Token = "0x400109F")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x98")]
		[SerializeField]
		private float bulletForce;

		[Token(Token = "0x40010A0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x9C")]
		private Vector2 targetCharacterRotation;

		[Token(Token = "0x40010A1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xA4")]
		private Vector2 smoothedCharacterRotation;

		[Token(Token = "0x40010A2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xAC")]
		private Vector2 smoothedCharacterRotationV;

		[Token(Token = "0x40010A3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xB4")]
		private Vector3 targetMovement;

		[Token(Token = "0x40010A4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xC0")]
		private Vector3 smoothedMovement;

		[Token(Token = "0x40010A5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xCC")]
		private Vector3 smoothedMovementV;

		[Token(Token = "0x40010A6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD8")]
		private bool isSneaking;

		[Token(Token = "0x40010A7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xD9")]
		private bool isGrounded;

		[Token(Token = "0x40010A8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xDC")]
		private Vector3 previousPosition;

		[Token(Token = "0x40010A9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xE8")]
		private float distanceTravelled;

		[Token(Token = "0x40010AA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF0")]
		private Rigidbody pickedUpObject;

		[Token(Token = "0x40010AB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xF8")]
		private float pickupDistance;

		[Token(Token = "0x40010AC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0xFC")]
		private int foot;

		[Token(Token = "0x6000DE0")]
		[Address(RVA = "0xC8BF7C", Offset = "0xC8BF7C", VA = "0xC8BF7C")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DE1")]
		[Address(RVA = "0xC8BF88", Offset = "0xC8BF88", VA = "0xC8BF88")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DE2")]
		[Address(RVA = "0xC8CAFC", Offset = "0xC8CAFC", VA = "0xC8CAFC")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000DE3")]
		[Address(RVA = "0xC8CD74", Offset = "0xC8CD74", VA = "0xC8CD74")]
		private void LateUpdate()
		{
		}

		[Token(Token = "0x6000DE4")]
		[Address(RVA = "0xC8CE74", Offset = "0xC8CE74", VA = "0xC8CE74")]
		private void triggerFootstep()
		{
		}

		[Token(Token = "0x6000DE5")]
		[Address(RVA = "0xC8C498", Offset = "0xC8C498", VA = "0xC8C498")]
		private void triggerWeapon()
		{
		}

		[Token(Token = "0x6000DE6")]
		[Address(RVA = "0xC8C81C", Offset = "0xC8C81C", VA = "0xC8C81C")]
		private bool pickupObject()
		{
			return default(bool);
		}

		[Token(Token = "0x6000DE7")]
		[Address(RVA = "0xC8CC3C", Offset = "0xC8CC3C", VA = "0xC8CC3C")]
		private void updatePickedUpObject()
		{
		}

		[Token(Token = "0x6000DE8")]
		[Address(RVA = "0xC8C730", Offset = "0xC8C730", VA = "0xC8C730")]
		private void dropObject(float force)
		{
		}

		[Token(Token = "0x6000DE9")]
		[Address(RVA = "0xC8C99C", Offset = "0xC8C99C", VA = "0xC8C99C")]
		private bool pressButton(bool hold)
		{
			return default(bool);
		}

		[Token(Token = "0x6000DEA")]
		[Address(RVA = "0xC8C2B8", Offset = "0xC8C2B8", VA = "0xC8C2B8")]
		private Vector3 getMovementInput()
		{
			return default(Vector3);
		}

		[Token(Token = "0x6000DEB")]
		[Address(RVA = "0xC8CB8C", Offset = "0xC8CB8C", VA = "0xC8CB8C")]
		private void updateGrounded()
		{
		}

		[Token(Token = "0x6000DEC")]
		[Address(RVA = "0xC8D140", Offset = "0xC8D140", VA = "0xC8D140")]
		public DemoCharacterController()
		{
		}
	}
	[Token(Token = "0x2000348")]
	public class DemoParticleController : MonoBehaviour
	{
		[Token(Token = "0x40010AD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private ParticleSystem particles;

		[Token(Token = "0x6000DED")]
		[Address(RVA = "0xC8D1DC", Offset = "0xC8D1DC", VA = "0xC8D1DC")]
		public void ToggleParticles()
		{
		}

		[Token(Token = "0x6000DEE")]
		[Address(RVA = "0xC8D224", Offset = "0xC8D224", VA = "0xC8D224")]
		public DemoParticleController()
		{
		}
	}
	[Token(Token = "0x2000349")]
	public class DemoSlideAndRollSeesaw : MonoBehaviour
	{
		[Token(Token = "0x40010AE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[SerializeField]
		private Rigidbody seesawRigidbody;

		[Token(Token = "0x40010AF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		[SerializeField]
		private Rigidbody rollerRigidbody;

		[Token(Token = "0x40010B0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		[SerializeField]
		private float torque;

		[Token(Token = "0x6000DEF")]
		[Address(RVA = "0xC8D22C", Offset = "0xC8D22C", VA = "0xC8D22C")]
		public void TiltLeft()
		{
		}

		[Token(Token = "0x6000DF0")]
		[Address(RVA = "0xC8D2C8", Offset = "0xC8D2C8", VA = "0xC8D2C8")]
		public void TiltRight()
		{
		}

		[Token(Token = "0x6000DF1")]
		[Address(RVA = "0xC8D368", Offset = "0xC8D368", VA = "0xC8D368")]
		public void ToggleRollerFrozen()
		{
		}

		[Token(Token = "0x6000DF2")]
		[Address(RVA = "0xC8D39C", Offset = "0xC8D39C", VA = "0xC8D39C")]
		public DemoSlideAndRollSeesaw()
		{
		}
	}
	[Token(Token = "0x200034A")]
	public class UncapAngularVelocity : MonoBehaviour
	{
		[Token(Token = "0x6000DF3")]
		[Address(RVA = "0xC8D3A4", Offset = "0xC8D3A4", VA = "0xC8D3A4")]
		private void Awake()
		{
		}

		[Token(Token = "0x6000DF4")]
		[Address(RVA = "0xC8D404", Offset = "0xC8D404", VA = "0xC8D404")]
		public UncapAngularVelocity()
		{
		}
	}
}
namespace DissolveExample
{
	[Token(Token = "0x200034B")]
	public class DissolveChilds : MonoBehaviour
	{
		[Token(Token = "0x40010B1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Material> materials;

		[Token(Token = "0x40010B2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool PingPong;

		[Token(Token = "0x6000DF5")]
		[Address(RVA = "0xC8D40C", Offset = "0xC8D40C", VA = "0xC8D40C")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DF6")]
		[Address(RVA = "0xC8D4D8", Offset = "0xC8D4D8", VA = "0xC8D4D8")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000DF7")]
		[Address(RVA = "0xC8D5B0", Offset = "0xC8D5B0", VA = "0xC8D5B0")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DF8")]
		[Address(RVA = "0xC8D4F4", Offset = "0xC8D4F4", VA = "0xC8D4F4")]
		public void SetValue(float value)
		{
		}

		[Token(Token = "0x6000DF9")]
		[Address(RVA = "0xC8D608", Offset = "0xC8D608", VA = "0xC8D608")]
		public DissolveChilds()
		{
		}
	}
	[Token(Token = "0x200034C")]
	public class DissolveOffest : MonoBehaviour
	{
		[Token(Token = "0x40010B3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		private List<Material> materials;

		[Token(Token = "0x40010B4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private bool PingPong;

		[Token(Token = "0x6000DFA")]
		[Address(RVA = "0xC8D684", Offset = "0xC8D684", VA = "0xC8D684")]
		private void Start()
		{
		}

		[Token(Token = "0x6000DFB")]
		[Address(RVA = "0xC8D750", Offset = "0xC8D750", VA = "0xC8D750")]
		private void Reset()
		{
		}

		[Token(Token = "0x6000DFC")]
		[Address(RVA = "0xC8D834", Offset = "0xC8D834", VA = "0xC8D834")]
		private void Update()
		{
		}

		[Token(Token = "0x6000DFD")]
		[Address(RVA = "0xC8D76C", Offset = "0xC8D76C", VA = "0xC8D76C")]
		public void SetValue(float value)
		{
		}

		[Token(Token = "0x6000DFE")]
		[Address(RVA = "0xC8D8CC", Offset = "0xC8D8CC", VA = "0xC8D8CC")]
		public DissolveOffest()
		{
		}
	}
	[Token(Token = "0x200034D")]
	public class Follow : MonoBehaviour
	{
		[Token(Token = "0x40010B5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		[Range(0f, 5f)]
		public float speed;

		[Token(Token = "0x40010B6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float height;

		[Token(Token = "0x40010B7")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		private Vector3 pos;

		[Token(Token = "0x6000DFF")]
		[Address(RVA = "0xC8D948", Offset = "0xC8D948", VA = "0xC8D948")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E00")]
		[Address(RVA = "0xC8D978", Offset = "0xC8D978", VA = "0xC8D978")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E01")]
		[Address(RVA = "0xC8DA54", Offset = "0xC8DA54", VA = "0xC8DA54")]
		public Follow()
		{
		}
	}
	[Token(Token = "0x200034E")]
	public class Rotator : MonoBehaviour
	{
		[Token(Token = "0x40010B8")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float Speed;

		[Token(Token = "0x6000E02")]
		[Address(RVA = "0xC8DA5C", Offset = "0xC8DA5C", VA = "0xC8DA5C")]
		public void Update()
		{
		}

		[Token(Token = "0x6000E03")]
		[Address(RVA = "0xC8DAF4", Offset = "0xC8DAF4", VA = "0xC8DAF4")]
		public Rotator()
		{
		}
	}
	[Token(Token = "0x200034F")]
	public class RotatorDissolveDir : MonoBehaviour
	{
		[Token(Token = "0x40010B9")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public Vector3 Speed;

		[Token(Token = "0x40010BA")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		private List<Material> materials;

		[Token(Token = "0x6000E04")]
		[Address(RVA = "0xC8DAFC", Offset = "0xC8DAFC", VA = "0xC8DAFC")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E05")]
		[Address(RVA = "0xC8DB80", Offset = "0xC8DB80", VA = "0xC8DB80")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E06")]
		[Address(RVA = "0xC8DCB4", Offset = "0xC8DCB4", VA = "0xC8DCB4")]
		public RotatorDissolveDir()
		{
		}
	}
}
namespace Runemark.Common
{
	[Token(Token = "0x2000350")]
	public class RMBase : MonoBehaviour
	{
		[Token(Token = "0x17000116")]
		public virtual string Title
		{
			[Token(Token = "0x6000E07")]
			[Address(RVA = "0xC8DD30", Offset = "0xC8DD30", VA = "0xC8DD30", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000117")]
		public virtual string Description
		{
			[Token(Token = "0x6000E08")]
			[Address(RVA = "0xC8DD70", Offset = "0xC8DD70", VA = "0xC8DD70", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E09")]
		[Address(RVA = "0xC8DDB0", Offset = "0xC8DDB0", VA = "0xC8DDB0")]
		public RMBase()
		{
		}
	}
	[Token(Token = "0x2000351")]
	public class RMFPSController : RMBase
	{
		[Token(Token = "0x40010BB")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x18")]
		public float mouseSensitivityX;

		[Token(Token = "0x40010BC")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x1C")]
		public float mouseSensitivityY;

		[Token(Token = "0x40010BD")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x20")]
		public float walkSpeed;

		[Token(Token = "0x40010BE")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x24")]
		public float JumpForce;

		[Token(Token = "0x40010BF")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x28")]
		public LayerMask GroundedMask;

		[Token(Token = "0x40010C0")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x2C")]
		private Vector3 _moveAmount;

		[Token(Token = "0x40010C1")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x38")]
		private Vector3 _smoothMoveVelocity;

		[Token(Token = "0x40010C2")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x48")]
		private Transform _cameraTransform;

		[Token(Token = "0x40010C3")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x50")]
		private float _verticalLookRotation;

		[Token(Token = "0x40010C4")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x58")]
		private Rigidbody _rigidbody;

		[Token(Token = "0x40010C5")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x60")]
		private bool _grounded;

		[Token(Token = "0x40010C6")]
		[Il2CppDummyDll.FieldOffset(Offset = "0x61")]
		private bool _cursorVisible;

		[Token(Token = "0x17000118")]
		public override string Title
		{
			[Token(Token = "0x6000E0A")]
			[Address(RVA = "0xC8DDB8", Offset = "0xC8DDB8", VA = "0xC8DDB8", Slot = "4")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x17000119")]
		public override string Description
		{
			[Token(Token = "0x6000E0B")]
			[Address(RVA = "0xC8DDF8", Offset = "0xC8DDF8", VA = "0xC8DDF8", Slot = "5")]
			get
			{
				return null;
			}
		}

		[Token(Token = "0x6000E0C")]
		[Address(RVA = "0xC8DE38", Offset = "0xC8DE38", VA = "0xC8DE38")]
		private void Start()
		{
		}

		[Token(Token = "0x6000E0D")]
		[Address(RVA = "0xC8DF04", Offset = "0xC8DF04", VA = "0xC8DF04")]
		private void Update()
		{
		}

		[Token(Token = "0x6000E0E")]
		[Address(RVA = "0xC8E36C", Offset = "0xC8E36C", VA = "0xC8E36C")]
		private void FixedUpdate()
		{
		}

		[Token(Token = "0x6000E0F")]
		[Address(RVA = "0xC8E334", Offset = "0xC8E334", VA = "0xC8E334")]
		private void UnlockMouse()
		{
		}

		[Token(Token = "0x6000E10")]
		[Address(RVA = "0xC8DED8", Offset = "0xC8DED8", VA = "0xC8DED8")]
		private void LockMouse()
		{
		}

		[Token(Token = "0x6000E11")]
		[Address(RVA = "0xC8E414", Offset = "0xC8E414", VA = "0xC8E414")]
		public RMFPSController()
		{
		}
	}
}
